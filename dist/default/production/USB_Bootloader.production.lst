

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Aug 17 01:00:47 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=2
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   227                           	dabs	1,0x600,512,_msd_buffer
   228                           	dabs	1,0xD00,48,_BDT
   229                           	dabs	1,0xD40,31,_msd_cbw
   230                           	dabs	1,0xD80,13,_msd_csw
   231                           	dabs	1,0xD38,8,_CtrlTrfData
   232                           	dabs	1,0xD30,8,_SetupPkt
   233  0000                     
   234                           ; Version 2.00
   235                           ; Generated 27/05/2018 GMT
   236                           ; 
   237                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   238                           ; All rights reserved.
   239                           ; 
   240                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   241                           ; 
   242                           ; Redistribution and use in source and binary forms, with or without modification, are
   243                           ; permitted provided that the following conditions are met:
   244                           ; 
   245                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   246                           ;        conditions and the following disclaimer.
   247                           ; 
   248                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   249                           ;        of conditions and the following disclaimer in the documentation and/or other
   250                           ;        materials provided with the distribution.
   251                           ; 
   252                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   253                           ;        software without specific prior written permission.
   254                           ; 
   255                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   256                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   257                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   258                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   259                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   260                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   261                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   262                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   263                           ; 
   264                           ; 
   265                           ; Code-generator required, PIC18F47J53 Definitions
   266                           ; 
   267                           ; SFR Addresses
   268  0000                     
   269                           	psect	intcode
   270  000008  EF04 F048          	goto	36872	;# 
   271                           
   272                           	psect	intcodelo
   273  000018  EF0C F048          	goto	36888	; ;# 
   274  0000                     
   275                           	psect	idataBANK0
   276  007BD0                     __pidataBANK0:
   277                           	opt stack 0
   278                           
   279                           ;initializer for _file_number
   280  007BD0  FF                 	db	255
   281                           
   282                           	psect	idataBANK1
   283  0079B0                     __pidataBANK1:
   284                           	opt stack 0
   285                           
   286                           ;initializer for _LUN
   287  0079B0  20                 	db	low _ExternalFlash_MediaInitialize
   288  0079B1  7A                 	db	high _ExternalFlash_MediaInitialize
   289  0079B2  A2                 	db	low _ExternalFlash_CapacityRead
   290  0079B3  7A                 	db	high _ExternalFlash_CapacityRead
   291  0079B4  38                 	db	low _ExternalFlash_SectorSizeRead
   292  0079B5  7B                 	db	high _ExternalFlash_SectorSizeRead
   293  0079B6  C2                 	db	low _ExternalFlash_MediaDetect
   294  0079B7  7B                 	db	high _ExternalFlash_MediaDetect
   295  0079B8  2E                 	db	low _ExternalFlash_SectorRead
   296  0079B9  75                 	db	high _ExternalFlash_SectorRead
   297  0079BA  BE                 	db	low _ExternalFlash_WriteProtectStateGet
   298  0079BB  7B                 	db	high _ExternalFlash_WriteProtectStateGet
   299  0079BC  F8                 	db	low _ExternalFlash_SectorWrite
   300  0079BD  74                 	db	high _ExternalFlash_SectorWrite
   301  0079BE  00                 	db	0
   302  0079BF  00                 	db	0
   303  0079C0  00                 	db	0
   304  0079C1  00                 	db	0
   305  0079C2  00                 	db	0
   306  0079C3  00                 	db	0
   307                           
   308                           ;initializer for i2c_display_send_init_sequence@F6791
   309  0079C4  3A                 	db	58
   310  0079C5  1E                 	db	30
   311  0079C6  39                 	db	57
   312  0079C7  0C                 	db	12
   313  0079C8  74                 	db	116
   314  0079C9  5C                 	db	92
   315  0079CA  6D                 	db	109
   316  0079CB  0C                 	db	12
   317  0079CC  01                 	db	1
   318                           
   319                           	psect	mediumconst
   320  008CCC                     __pmediumconst:
   321                           	opt stack 0
   322  008CCC  00                 	db	0
   323  008CCD                     _checked_line2:
   324                           	opt stack 0
   325  008CCD  46                 	db	70
   326  008CCE  69                 	db	105
   327  008CCF  6C                 	db	108
   328  008CD0  65                 	db	101
   329  008CD1  20                 	db	32
   330  008CD2  63                 	db	99
   331  008CD3  68                 	db	104
   332  008CD4  65                 	db	101
   333  008CD5  63                 	db	99
   334  008CD6  6B                 	db	107
   335  008CD7  20                 	db	32
   336  008CD8  63                 	db	99
   337  008CD9  6F                 	db	111
   338  008CDA  6D                 	db	109
   339  008CDB  70                 	db	112
   340  008CDC  6C                 	db	108
   341  008CDD  65                 	db	101
   342  008CDE  74                 	db	116
   343  008CDF  65                 	db	101
   344  008CE0  64                 	db	100
   345  008CE1  00                 	db	0
   346  008CE2                     __end_of_checked_line2:
   347                           	opt stack 0
   348  008CE2                     _failed_line3_addressRange:
   349                           	opt stack 0
   350  008CE2  41                 	db	65
   351  008CE3  64                 	db	100
   352  008CE4  64                 	db	100
   353  008CE5  72                 	db	114
   354  008CE6  2E                 	db	46
   355  008CE7  20                 	db	32
   356  008CE8  6F                 	db	111
   357  008CE9  75                 	db	117
   358  008CEA  74                 	db	116
   359  008CEB  73                 	db	115
   360  008CEC  69                 	db	105
   361  008CED  64                 	db	100
   362  008CEE  65                 	db	101
   363  008CEF  20                 	db	32
   364  008CF0  72                 	db	114
   365  008CF1  61                 	db	97
   366  008CF2  6E                 	db	110
   367  008CF3  67                 	db	103
   368  008CF4  65                 	db	101
   369  008CF5  00                 	db	0
   370  008CF6                     __end_of_failed_line3_addressRange:
   371                           	opt stack 0
   372  008CF6                     _start_line3:
   373                           	opt stack 0
   374  008CF6  46                 	db	70
   375  008CF7  49                 	db	73
   376  008CF8  52                 	db	82
   377  008CF9  4D                 	db	77
   378  008CFA  57                 	db	87
   379  008CFB  41                 	db	65
   380  008CFC  52                 	db	82
   381  008CFD  45                 	db	69
   382  008CFE  2E                 	db	46
   383  008CFF  48                 	db	72
   384  008D00  45                 	db	69
   385  008D01  58                 	db	88
   386  008D02  20                 	db	32
   387  008D03  6F                 	db	111
   388  008D04  6E                 	db	110
   389  008D05  20                 	db	32
   390  008D06  55                 	db	85
   391  008D07  53                 	db	83
   392  008D08  42                 	db	66
   393  008D09  00                 	db	0
   394  008D0A                     __end_of_start_line3:
   395                           	opt stack 0
   396  008D0A                     _failed_line3_startCode:
   397                           	opt stack 0
   398  008D0A  4D                 	db	77
   399  008D0B  69                 	db	105
   400  008D0C  73                 	db	115
   401  008D0D  73                 	db	115
   402  008D0E  69                 	db	105
   403  008D0F  6E                 	db	110
   404  008D10  67                 	db	103
   405  008D11  20                 	db	32
   406  008D12  73                 	db	115
   407  008D13  74                 	db	116
   408  008D14  61                 	db	97
   409  008D15  72                 	db	114
   410  008D16  74                 	db	116
   411  008D17  20                 	db	32
   412  008D18  63                 	db	99
   413  008D19  6F                 	db	111
   414  008D1A  64                 	db	100
   415  008D1B  65                 	db	101
   416  008D1C  00                 	db	0
   417  008D1D                     __end_of_failed_line3_startCode:
   418                           	opt stack 0
   419  008D1D                     _found_line2:
   420                           	opt stack 0
   421  008D1D  46                 	db	70
   422  008D1E  49                 	db	73
   423  008D1F  52                 	db	82
   424  008D20  4D                 	db	77
   425  008D21  57                 	db	87
   426  008D22  41                 	db	65
   427  008D23  52                 	db	82
   428  008D24  45                 	db	69
   429  008D25  2E                 	db	46
   430  008D26  48                 	db	72
   431  008D27  45                 	db	69
   432  008D28  58                 	db	88
   433  008D29  20                 	db	32
   434  008D2A  66                 	db	102
   435  008D2B  6F                 	db	111
   436  008D2C  75                 	db	117
   437  008D2D  6E                 	db	110
   438  008D2E  64                 	db	100
   439  008D2F  00                 	db	0
   440  008D30                     __end_of_found_line2:
   441                           	opt stack 0
   442  008D30                     _programming_line2:
   443                           	opt stack 0
   444  008D30  50                 	db	80
   445  008D31  72                 	db	114
   446  008D32  6F                 	db	111
   447  008D33  67                 	db	103
   448  008D34  72                 	db	114
   449  008D35  61                 	db	97
   450  008D36  6D                 	db	109
   451  008D37  6D                 	db	109
   452  008D38  69                 	db	105
   453  008D39  6E                 	db	110
   454  008D3A  67                 	db	103
   455  008D3B  20                 	db	32
   456  008D3C  66                 	db	102
   457  008D3D  6C                 	db	108
   458  008D3E  61                 	db	97
   459  008D3F  73                 	db	115
   460  008D40  68                 	db	104
   461  008D41  00                 	db	0
   462  008D42                     __end_of_programming_line2:
   463                           	opt stack 0
   464  008D42                     _failed_line2:
   465                           	opt stack 0
   466  008D42  46                 	db	70
   467  008D43  69                 	db	105
   468  008D44  6C                 	db	108
   469  008D45  65                 	db	101
   470  008D46  20                 	db	32
   471  008D47  63                 	db	99
   472  008D48  68                 	db	104
   473  008D49  65                 	db	101
   474  008D4A  63                 	db	99
   475  008D4B  6B                 	db	107
   476  008D4C  20                 	db	32
   477  008D4D  66                 	db	102
   478  008D4E  61                 	db	97
   479  008D4F  69                 	db	105
   480  008D50  6C                 	db	108
   481  008D51  65                 	db	101
   482  008D52  64                 	db	100
   483  008D53  00                 	db	0
   484  008D54                     __end_of_failed_line2:
   485                           	opt stack 0
   486  008D54                     _found_line4:
   487                           	opt stack 0
   488  008D54  50                 	db	80
   489  008D55  72                 	db	114
   490  008D56  65                 	db	101
   491  008D57  73                 	db	115
   492  008D58  73                 	db	115
   493  008D59  20                 	db	32
   494  008D5A  74                 	db	116
   495  008D5B  6F                 	db	111
   496  008D5C  20                 	db	32
   497  008D5D  75                 	db	117
   498  008D5E  73                 	db	115
   499  008D5F  65                 	db	101
   500  008D60  20                 	db	32
   501  008D61  66                 	db	102
   502  008D62  69                 	db	105
   503  008D63  6C                 	db	108
   504  008D64  65                 	db	101
   505  008D65  00                 	db	0
   506  008D66                     __end_of_found_line4:
   507                           	opt stack 0
   508  008D66                     _checked_line4:
   509                           	opt stack 0
   510  008D66  50                 	db	80
   511  008D67  72                 	db	114
   512  008D68  65                 	db	101
   513  008D69  73                 	db	115
   514  008D6A  73                 	db	115
   515  008D6B  20                 	db	32
   516  008D6C  74                 	db	116
   517  008D6D  6F                 	db	111
   518  008D6E  20                 	db	32
   519  008D6F  70                 	db	112
   520  008D70  72                 	db	114
   521  008D71  6F                 	db	111
   522  008D72  67                 	db	103
   523  008D73  72                 	db	114
   524  008D74  61                 	db	97
   525  008D75  6D                 	db	109
   526  008D76  00                 	db	0
   527  008D77                     __end_of_checked_line4:
   528                           	opt stack 0
   529  008D77                     _start_line2:
   530                           	opt stack 0
   531  008D77  4C                 	db	76
   532  008D78  6F                 	db	111
   533  008D79  6F                 	db	111
   534  008D7A  6B                 	db	107
   535  008D7B  69                 	db	105
   536  008D7C  6E                 	db	110
   537  008D7D  67                 	db	103
   538  008D7E  20                 	db	32
   539  008D7F  66                 	db	102
   540  008D80  6F                 	db	111
   541  008D81  72                 	db	114
   542  008D82  20                 	db	32
   543  008D83  66                 	db	102
   544  008D84  69                 	db	105
   545  008D85  6C                 	db	108
   546  008D86  65                 	db	101
   547  008D87  00                 	db	0
   548  008D88                     __end_of_start_line2:
   549                           	opt stack 0
   550  008D88                     _start_line1:
   551                           	opt stack 0
   552  008D88  42                 	db	66
   553  008D89  6F                 	db	111
   554  008D8A  6F                 	db	111
   555  008D8B  74                 	db	116
   556  008D8C  6C                 	db	108
   557  008D8D  6F                 	db	111
   558  008D8E  61                 	db	97
   559  008D8F  64                 	db	100
   560  008D90  65                 	db	101
   561  008D91  72                 	db	114
   562  008D92  20                 	db	32
   563  008D93  4D                 	db	77
   564  008D94  6F                 	db	111
   565  008D95  64                 	db	100
   566  008D96  65                 	db	101
   567  008D97  00                 	db	0
   568  008D98  00                 	db	0
   569  008D99                     __end_of_start_line1:
   570                           	opt stack 0
   571  008D99                     _done_line4:
   572                           	opt stack 0
   573  008D99  50                 	db	80
   574  008D9A  72                 	db	114
   575  008D9B  65                 	db	101
   576  008D9C  73                 	db	115
   577  008D9D  73                 	db	115
   578  008D9E  20                 	db	32
   579  008D9F  74                 	db	116
   580  008DA0  6F                 	db	111
   581  008DA1  20                 	db	32
   582  008DA2  72                 	db	114
   583  008DA3  65                 	db	101
   584  008DA4  62                 	db	98
   585  008DA5  6F                 	db	111
   586  008DA6  6F                 	db	111
   587  008DA7  74                 	db	116
   588  008DA8  00                 	db	0
   589  008DA9                     __end_of_done_line4:
   590                           	opt stack 0
   591  008DA9                     _done_line3:
   592                           	opt stack 0
   593  008DA9  50                 	db	80
   594  008DAA  61                 	db	97
   595  008DAB  67                 	db	103
   596  008DAC  65                 	db	101
   597  008DAD  73                 	db	115
   598  008DAE  20                 	db	32
   599  008DAF  77                 	db	119
   600  008DB0  72                 	db	114
   601  008DB1  69                 	db	105
   602  008DB2  74                 	db	116
   603  008DB3  74                 	db	116
   604  008DB4  65                 	db	101
   605  008DB5  6E                 	db	110
   606  008DB6  3A                 	db	58
   607  008DB7  20                 	db	32
   608  008DB8  00                 	db	0
   609  008DB9                     __end_of_done_line3:
   610                           	opt stack 0
   611  008DB9                     _done_line1:
   612                           	opt stack 0
   613  008DB9  42                 	db	66
   614  008DBA  6F                 	db	111
   615  008DBB  6F                 	db	111
   616  008DBC  74                 	db	116
   617  008DBD  6C                 	db	108
   618  008DBE  6F                 	db	111
   619  008DBF  61                 	db	97
   620  008DC0  64                 	db	100
   621  008DC1  65                 	db	101
   622  008DC2  72                 	db	114
   623  008DC3  20                 	db	32
   624  008DC4  4D                 	db	77
   625  008DC5  6F                 	db	111
   626  008DC6  64                 	db	100
   627  008DC7  65                 	db	101
   628  008DC8  00                 	db	0
   629  008DC9                     __end_of_done_line1:
   630                           	opt stack 0
   631  008DC9                     _programming_line4:
   632                           	opt stack 0
   633  008DC9  50                 	db	80
   634  008DCA  61                 	db	97
   635  008DCB  67                 	db	103
   636  008DCC  65                 	db	101
   637  008DCD  73                 	db	115
   638  008DCE  20                 	db	32
   639  008DCF  77                 	db	119
   640  008DD0  72                 	db	114
   641  008DD1  69                 	db	105
   642  008DD2  74                 	db	116
   643  008DD3  74                 	db	116
   644  008DD4  65                 	db	101
   645  008DD5  6E                 	db	110
   646  008DD6  3A                 	db	58
   647  008DD7  20                 	db	32
   648  008DD8  00                 	db	0
   649  008DD9                     __end_of_programming_line4:
   650                           	opt stack 0
   651  008DD9                     _programming_line1:
   652                           	opt stack 0
   653  008DD9  42                 	db	66
   654  008DDA  6F                 	db	111
   655  008DDB  6F                 	db	111
   656  008DDC  74                 	db	116
   657  008DDD  6C                 	db	108
   658  008DDE  6F                 	db	111
   659  008DDF  61                 	db	97
   660  008DE0  64                 	db	100
   661  008DE1  65                 	db	101
   662  008DE2  72                 	db	114
   663  008DE3  20                 	db	32
   664  008DE4  4D                 	db	77
   665  008DE5  6F                 	db	111
   666  008DE6  64                 	db	100
   667  008DE7  65                 	db	101
   668  008DE8  00                 	db	0
   669  008DE9                     __end_of_programming_line1:
   670                           	opt stack 0
   671  008DE9                     _failed_line1:
   672                           	opt stack 0
   673  008DE9  42                 	db	66
   674  008DEA  6F                 	db	111
   675  008DEB  6F                 	db	111
   676  008DEC  74                 	db	116
   677  008DED  6C                 	db	108
   678  008DEE  6F                 	db	111
   679  008DEF  61                 	db	97
   680  008DF0  64                 	db	100
   681  008DF1  65                 	db	101
   682  008DF2  72                 	db	114
   683  008DF3  20                 	db	32
   684  008DF4  4D                 	db	77
   685  008DF5  6F                 	db	111
   686  008DF6  64                 	db	100
   687  008DF7  65                 	db	101
   688  008DF8  00                 	db	0
   689  008DF9                     __end_of_failed_line1:
   690                           	opt stack 0
   691  008DF9                     _checked_line1:
   692                           	opt stack 0
   693  008DF9  42                 	db	66
   694  008DFA  6F                 	db	111
   695  008DFB  6F                 	db	111
   696  008DFC  74                 	db	116
   697  008DFD  6C                 	db	108
   698  008DFE  6F                 	db	111
   699  008DFF  61                 	db	97
   700  008E00  64                 	db	100
   701  008E01  65                 	db	101
   702  008E02  72                 	db	114
   703  008E03  20                 	db	32
   704  008E04  4D                 	db	77
   705  008E05  6F                 	db	111
   706  008E06  64                 	db	100
   707  008E07  65                 	db	101
   708  008E08  00                 	db	0
   709  008E09                     __end_of_checked_line1:
   710                           	opt stack 0
   711  008E09                     _verify_line1:
   712                           	opt stack 0
   713  008E09  42                 	db	66
   714  008E0A  6F                 	db	111
   715  008E0B  6F                 	db	111
   716  008E0C  74                 	db	116
   717  008E0D  6C                 	db	108
   718  008E0E  6F                 	db	111
   719  008E0F  61                 	db	97
   720  008E10  64                 	db	100
   721  008E11  65                 	db	101
   722  008E12  72                 	db	114
   723  008E13  20                 	db	32
   724  008E14  4D                 	db	77
   725  008E15  6F                 	db	111
   726  008E16  64                 	db	100
   727  008E17  65                 	db	101
   728  008E18  00                 	db	0
   729  008E19                     __end_of_verify_line1:
   730                           	opt stack 0
   731  008E19                     _found_line1:
   732                           	opt stack 0
   733  008E19  42                 	db	66
   734  008E1A  6F                 	db	111
   735  008E1B  6F                 	db	111
   736  008E1C  74                 	db	116
   737  008E1D  6C                 	db	108
   738  008E1E  6F                 	db	111
   739  008E1F  61                 	db	97
   740  008E20  64                 	db	100
   741  008E21  65                 	db	101
   742  008E22  72                 	db	114
   743  008E23  20                 	db	32
   744  008E24  4D                 	db	77
   745  008E25  6F                 	db	111
   746  008E26  64                 	db	100
   747  008E27  65                 	db	101
   748  008E28  00                 	db	0
   749  008E29                     __end_of_found_line1:
   750                           	opt stack 0
   751  008E29                     _failed_line3_checksum:
   752                           	opt stack 0
   753  008E29  43                 	db	67
   754  008E2A  68                 	db	104
   755  008E2B  65                 	db	101
   756  008E2C  63                 	db	99
   757  008E2D  6B                 	db	107
   758  008E2E  73                 	db	115
   759  008E2F  75                 	db	117
   760  008E30  6D                 	db	109
   761  008E31  20                 	db	32
   762  008E32  65                 	db	101
   763  008E33  72                 	db	114
   764  008E34  72                 	db	114
   765  008E35  6F                 	db	111
   766  008E36  72                 	db	114
   767  008E37  00                 	db	0
   768  008E38                     __end_of_failed_line3_checksum:
   769                           	opt stack 0
   770  008E38                     _failed_line3_noNextRecord:
   771                           	opt stack 0
   772  008E38  4E                 	db	78
   773  008E39  6F                 	db	111
   774  008E3A  20                 	db	32
   775  008E3B  6E                 	db	110
   776  008E3C  65                 	db	101
   777  008E3D  78                 	db	120
   778  008E3E  74                 	db	116
   779  008E3F  20                 	db	32
   780  008E40  72                 	db	114
   781  008E41  65                 	db	101
   782  008E42  63                 	db	99
   783  008E43  6F                 	db	111
   784  008E44  72                 	db	114
   785  008E45  64                 	db	100
   786  008E46  00                 	db	0
   787  008E47                     __end_of_failed_line3_noNextRecord:
   788                           	opt stack 0
   789  008E47                     _failed_line3_dataTooLong:
   790                           	opt stack 0
   791  008E47  44                 	db	68
   792  008E48  61                 	db	97
   793  008E49  74                 	db	116
   794  008E4A  61                 	db	97
   795  008E4B  20                 	db	32
   796  008E4C  74                 	db	116
   797  008E4D  6F                 	db	111
   798  008E4E  6F                 	db	111
   799  008E4F  20                 	db	32
   800  008E50  6C                 	db	108
   801  008E51  6F                 	db	111
   802  008E52  6E                 	db	110
   803  008E53  67                 	db	103
   804  008E54  00                 	db	0
   805  008E55                     __end_of_failed_line3_dataTooLong:
   806                           	opt stack 0
   807  008E55                     _verify_line2:
   808                           	opt stack 0
   809  008E55  56                 	db	86
   810  008E56  65                 	db	101
   811  008E57  72                 	db	114
   812  008E58  69                 	db	105
   813  008E59  66                 	db	102
   814  008E5A  79                 	db	121
   815  008E5B  69                 	db	105
   816  008E5C  6E                 	db	110
   817  008E5D  67                 	db	103
   818  008E5E  2E                 	db	46
   819  008E5F  2E                 	db	46
   820  008E60  2E                 	db	46
   821  008E61  00                 	db	0
   822  008E62                     __end_of_verify_line2:
   823                           	opt stack 0
   824  008E62                     _start_line4:
   825                           	opt stack 0
   826  008E62  64                 	db	100
   827  008E63  72                 	db	114
   828  008E64  69                 	db	105
   829  008E65  76                 	db	118
   830  008E66  65                 	db	101
   831  008E67  2E                 	db	46
   832  008E68  2E                 	db	46
   833  008E69  2E                 	db	46
   834  008E6A  00                 	db	0
   835  008E6B                     __end_of_start_line4:
   836                           	opt stack 0
   837  008E6B                     _failed_line4:
   838                           	opt stack 0
   839  008E6B  52                 	db	82
   840  008E6C  65                 	db	101
   841  008E6D  63                 	db	99
   842  008E6E  6F                 	db	111
   843  008E6F  72                 	db	114
   844  008E70  64                 	db	100
   845  008E71  20                 	db	32
   846  008E72  00                 	db	0
   847  008E73                     __end_of_failed_line4:
   848                           	opt stack 0
   849  008E73                     _checked_line3:
   850                           	opt stack 0
   851  008E73  72                 	db	114
   852  008E74  65                 	db	101
   853  008E75  63                 	db	99
   854  008E76  6F                 	db	111
   855  008E77  72                 	db	114
   856  008E78  64                 	db	100
   857  008E79  73                 	db	115
   858  008E7A  00                 	db	0
   859  008E7B                     __end_of_checked_line3:
   860                           	opt stack 0
   861  008E7B                     _USB_SD_Ptr:
   862                           	opt stack 0
   863  008E7B  CB                 	db	low _sd000
   864  008E7C  8F                 	db	high _sd000
   865  008E7D  E7                 	db	low _sd001
   866  008E7E  8E                 	db	high _sd001
   867  008E7F  1B                 	db	low _sd002
   868  008E80  8F                 	db	high _sd002
   869  008E81  8A                 	db	low _sd003
   870  008E82  8F                 	db	high _sd003
   871  008E83                     __end_of_USB_SD_Ptr:
   872                           	opt stack 0
   873  008E83                     _programming_line3:
   874                           	opt stack 0
   875  008E83  45                 	db	69
   876  008E84  6E                 	db	110
   877  008E85  74                 	db	116
   878  008E86  72                 	db	114
   879  008E87  79                 	db	121
   880  008E88  20                 	db	32
   881  008E89  00                 	db	0
   882  008E8A                     __end_of_programming_line3:
   883                           	opt stack 0
   884  008E8A                     _verify_line3:
   885                           	opt stack 0
   886  008E8A  52                 	db	82
   887  008E8B  65                 	db	101
   888  008E8C  63                 	db	99
   889  008E8D  6F                 	db	111
   890  008E8E  72                 	db	114
   891  008E8F  64                 	db	100
   892  008E90  00                 	db	0
   893  008E91                     __end_of_verify_line3:
   894                           	opt stack 0
   895  008E91                     _found_line3b:
   896                           	opt stack 0
   897  008E91  20                 	db	32
   898  008E92  62                 	db	98
   899  008E93  79                 	db	121
   900  008E94  74                 	db	116
   901  008E95  65                 	db	101
   902  008E96  73                 	db	115
   903  008E97  00                 	db	0
   904  008E98                     __end_of_found_line3b:
   905                           	opt stack 0
   906  008E98                     _found_line3:
   907                           	opt stack 0
   908  008E98  53                 	db	83
   909  008E99  69                 	db	105
   910  008E9A  7A                 	db	122
   911  008E9B  65                 	db	101
   912  008E9C  3A                 	db	58
   913  008E9D  20                 	db	32
   914  008E9E  00                 	db	0
   915  008E9F                     __end_of_found_line3:
   916                           	opt stack 0
   917  008E9F                     _done_line2:
   918                           	opt stack 0
   919  008E9F  44                 	db	68
   920  008EA0  6F                 	db	111
   921  008EA1  6E                 	db	110
   922  008EA2  65                 	db	101
   923  008EA3  21                 	db	33
   924  008EA4  00                 	db	0
   925  008EA5                     __end_of_done_line2:
   926                           	opt stack 0
   927  008EA5                     _USB_CD_Ptr:
   928                           	opt stack 0
   929  008EA5  A7                 	db	low _configDescriptor1
   930  008EA6  8E                 	db	high _configDescriptor1
   931  008EA7                     __end_of_USB_CD_Ptr:
   932                           	opt stack 0
   933  008EA7                     _configDescriptor1:
   934                           	opt stack 0
   935  008EA7  09                 	db	9
   936  008EA8  02                 	db	2
   937  008EA9  40                 	db	64
   938  008EAA  00                 	db	0
   939  008EAB  02                 	db	2
   940  008EAC  01                 	db	1
   941  008EAD  00                 	db	0
   942  008EAE  C0                 	db	192
   943  008EAF  32                 	db	50
   944  008EB0  09                 	db	9
   945  008EB1  04                 	db	4
   946  008EB2  00                 	db	0
   947  008EB3  00                 	db	0
   948  008EB4  02                 	db	2
   949  008EB5  03                 	db	3
   950  008EB6  00                 	db	0
   951  008EB7  00                 	db	0
   952  008EB8  00                 	db	0
   953  008EB9  09                 	db	9
   954  008EBA  21                 	db	33
   955  008EBB  11                 	db	17
   956  008EBC  01                 	db	1
   957  008EBD  00                 	db	0
   958  008EBE  01                 	db	1
   959  008EBF  22                 	db	34
   960  008EC0  1D                 	db	29
   961  008EC1  00                 	db	0
   962  008EC2  07                 	db	7
   963  008EC3  05                 	db	5
   964  008EC4  81                 	db	129
   965  008EC5  03                 	db	3
   966  008EC6  40                 	db	64
   967  008EC7  00                 	db	0
   968  008EC8  01                 	db	1
   969  008EC9  07                 	db	7
   970  008ECA  05                 	db	5
   971  008ECB  01                 	db	1
   972  008ECC  03                 	db	3
   973  008ECD  40                 	db	64
   974  008ECE  00                 	db	0
   975  008ECF  01                 	db	1
   976  008ED0  09                 	db	9
   977  008ED1  04                 	db	4
   978  008ED2  01                 	db	1
   979  008ED3  00                 	db	0
   980  008ED4  02                 	db	2
   981  008ED5  08                 	db	8
   982  008ED6  06                 	db	6
   983  008ED7  50                 	db	80
   984  008ED8  00                 	db	0
   985  008ED9  07                 	db	7
   986  008EDA  05                 	db	5
   987  008EDB  82                 	db	130
   988  008EDC  02                 	db	2
   989  008EDD  40                 	db	64
   990  008EDE  00                 	db	0
   991  008EDF  01                 	db	1
   992  008EE0  07                 	db	7
   993  008EE1  05                 	db	5
   994  008EE2  02                 	db	2
   995  008EE3  02                 	db	2
   996  008EE4  40                 	db	64
   997  008EE5  00                 	db	0
   998  008EE6  01                 	db	1
   999  008EE7                     __end_of_configDescriptor1:
  1000                           	opt stack 0
  1001  008EE7                     _sd001:
  1002                           	opt stack 0
  1003  008EE7  34                 	db	52
  1004  008EE8  03                 	db	3
  1005  008EE9  0053               	dw	83
  1006  008EEB  006F               	dw	111
  1007  008EED  006C               	dw	108
  1008  008EEF  0064               	dw	100
  1009  008EF1  0065               	dw	101
  1010  008EF3  0072               	dw	114
  1011  008EF5  006E               	dw	110
  1012  008EF7  0065               	dw	101
  1013  008EF9  0072               	dw	114
  1014  008EFB  0064               	dw	100
  1015  008EFD  002E               	dw	46
  1016  008EFF  0063               	dw	99
  1017  008F01  006F               	dw	111
  1018  008F03  006D               	dw	109
  1019  008F05  0020               	dw	32
  1020  008F07  0020               	dw	32
  1021  008F09  0020               	dw	32
  1022  008F0B  0020               	dw	32
  1023  008F0D  0020               	dw	32
  1024  008F0F  0020               	dw	32
  1025  008F11  0020               	dw	32
  1026  008F13  0020               	dw	32
  1027  008F15  0020               	dw	32
  1028  008F17  0020               	dw	32
  1029  008F19  0020               	dw	32
  1030  008F1B                     __end_of_sd001:
  1031                           	opt stack 0
  1032  008F1B                     _sd002:
  1033                           	opt stack 0
  1034  008F1B  2E                 	db	46
  1035  008F1C  03                 	db	3
  1036  008F1D  004D               	dw	77
  1037  008F1F  0050               	dw	80
  1038  008F21  0050               	dw	80
  1039  008F23  0054               	dw	84
  1040  008F25  0053               	dw	83
  1041  008F27  006F               	dw	111
  1042  008F29  006C               	dw	108
  1043  008F2B  0061               	dw	97
  1044  008F2D  0072               	dw	114
  1045  008F2F  0020               	dw	32
  1046  008F31  0043               	dw	67
  1047  008F33  0068               	dw	104
  1048  008F35  0061               	dw	97
  1049  008F37  0072               	dw	114
  1050  008F39  0067               	dw	103
  1051  008F3B  0065               	dw	101
  1052  008F3D  0072               	dw	114
  1053  008F3F  0020               	dw	32
  1054  008F41  0052               	dw	82
  1055  008F43  0065               	dw	101
  1056  008F45  0076               	dw	118
  1057  008F47  0043               	dw	67
  1058  008F49                     __end_of_sd002:
  1059                           	opt stack 0
  1060  008F49                     _inq_resp:
  1061                           	opt stack 0
  1062  008F49  00                 	db	0
  1063  008F4A  80                 	db	128
  1064  008F4B  04                 	db	4
  1065  008F4C  02                 	db	2
  1066  008F4D  20                 	db	32
  1067  008F4E  00                 	db	0
  1068  008F4F  00                 	db	0
  1069  008F50  00                 	db	0
  1070  008F51  4D                 	db	77
  1071  008F52  69                 	db	105
  1072  008F53  63                 	db	99
  1073  008F54  72                 	db	114
  1074  008F55  6F                 	db	111
  1075  008F56  63                 	db	99
  1076  008F57  68                 	db	104
  1077  008F58  70                 	db	112
  1078  008F59  4D                 	db	77
  1079  008F5A  61                 	db	97
  1080  008F5B  73                 	db	115
  1081  008F5C  73                 	db	115
  1082  008F5D  20                 	db	32
  1083  008F5E  53                 	db	83
  1084  008F5F  74                 	db	116
  1085  008F60  6F                 	db	111
  1086  008F61  72                 	db	114
  1087  008F62  61                 	db	97
  1088  008F63  67                 	db	103
  1089  008F64  65                 	db	101
  1090  008F65  20                 	db	32
  1091  008F66  20                 	db	32
  1092  008F67  20                 	db	32
  1093  008F68  20                 	db	32
  1094  008F69  30                 	db	48
  1095  008F6A  30                 	db	48
  1096  008F6B  30                 	db	48
  1097  008F6C  31                 	db	49
  1098  008F6D                     __end_of_inq_resp:
  1099                           	opt stack 0
  1100  008F6D                     _hid_rpt01:
  1101                           	opt stack 0
  1102  008F6D  06                 	db	6
  1103  008F6E  00                 	db	0
  1104  008F6F  FF                 	db	255
  1105  008F70  09                 	db	9
  1106  008F71  01                 	db	1
  1107  008F72  A1                 	db	161
  1108  008F73  01                 	db	1
  1109  008F74  19                 	db	25
  1110  008F75  01                 	db	1
  1111  008F76  29                 	db	41
  1112  008F77  40                 	db	64
  1113  008F78  15                 	db	21
  1114  008F79  00                 	db	0
  1115  008F7A  26                 	db	38
  1116  008F7B  FF                 	db	255
  1117  008F7C  00                 	db	0
  1118  008F7D  75                 	db	117
  1119  008F7E  08                 	db	8
  1120  008F7F  95                 	db	149
  1121  008F80  40                 	db	64
  1122  008F81  81                 	db	129
  1123  008F82  00                 	db	0
  1124  008F83  19                 	db	25
  1125  008F84  01                 	db	1
  1126  008F85  29                 	db	41
  1127  008F86  40                 	db	64
  1128  008F87  91                 	db	145
  1129  008F88  00                 	db	0
  1130  008F89  C0                 	db	192
  1131  008F8A                     __end_of_hid_rpt01:
  1132                           	opt stack 0
  1133  008F8A                     _sd003:
  1134                           	opt stack 0
  1135  008F8A  1A                 	db	26
  1136  008F8B  03                 	db	3
  1137  008F8C  0031               	dw	49
  1138  008F8E  0032               	dw	50
  1139  008F90  0033               	dw	51
  1140  008F92  0034               	dw	52
  1141  008F94  0035               	dw	53
  1142  008F96  0036               	dw	54
  1143  008F98  0037               	dw	55
  1144  008F9A  0038               	dw	56
  1145  008F9C  0039               	dw	57
  1146  008F9E  0030               	dw	48
  1147  008FA0  0039               	dw	57
  1148  008FA2  0039               	dw	57
  1149  008FA4                     __end_of_sd003:
  1150                           	opt stack 0
  1151  008FA4                     _device_dsc:
  1152                           	opt stack 0
  1153  008FA4  12                 	db	18
  1154  008FA5  01                 	db	1
  1155  008FA6  0200               	dw	512
  1156  008FA8  00                 	db	0
  1157  008FA9  00                 	db	0
  1158  008FAA  00                 	db	0
  1159  008FAB  08                 	db	8
  1160  008FAC  04D8               	dw	1240
  1161  008FAE  F08E               	dw	61582
  1162  008FB0  0100               	dw	256
  1163  008FB2  01                 	db	1
  1164  008FB3  02                 	db	2
  1165  008FB4  00                 	db	0
  1166  008FB5  01                 	db	1
  1167  008FB6                     __end_of_device_dsc:
  1168                           	opt stack 0
  1169  008FB6                     _bootloader_filename:
  1170                           	opt stack 0
  1171  008FB6  46                 	db	70
  1172  008FB7  49                 	db	73
  1173  008FB8  52                 	db	82
  1174  008FB9  4D                 	db	77
  1175  008FBA  57                 	db	87
  1176  008FBB  41                 	db	65
  1177  008FBC  52                 	db	82
  1178  008FBD  45                 	db	69
  1179  008FBE  00                 	db	0
  1180  008FBF                     __end_of_bootloader_filename:
  1181                           	opt stack 0
  1182  008FBF                     _flash_command_pagesize_528:
  1183                           	opt stack 0
  1184  008FBF  3D                 	db	61
  1185  008FC0  2A                 	db	42
  1186  008FC1  80                 	db	128
  1187  008FC2  A7                 	db	167
  1188  008FC3                     __end_of_flash_command_pagesize_528:
  1189                           	opt stack 0
  1190  008FC3                     _flash_command_pagesize_512:
  1191                           	opt stack 0
  1192  008FC3  3D                 	db	61
  1193  008FC4  2A                 	db	42
  1194  008FC5  80                 	db	128
  1195  008FC6  A6                 	db	166
  1196  008FC7                     __end_of_flash_command_pagesize_512:
  1197                           	opt stack 0
  1198  008FC7                     _bootloader_extension:
  1199                           	opt stack 0
  1200  008FC7  48                 	db	72
  1201  008FC8  45                 	db	69
  1202  008FC9  58                 	db	88
  1203  008FCA  00                 	db	0
  1204  008FCB                     __end_of_bootloader_extension:
  1205                           	opt stack 0
  1206  008FCB                     _sd000:
  1207                           	opt stack 0
  1208  008FCB  04                 	db	4
  1209  008FCC  03                 	db	3
  1210  008FCD  0409               	dw	1033
  1211  008FCF                     __end_of_sd000:
  1212                           	opt stack 0
  1213  0000                     _RPINR22	set	3837
  1214  0000                     _RPOR22	set	3798
  1215  0000                     _RPOR21	set	3797
  1216  0000                     _RPINR21	set	3836
  1217  0000                     _RPINR2	set	3810
  1218  0000                     _RPINR3	set	3811
  1219  0000                     _RPINR1	set	3809
  1220  0000                     _PPSCONbits	set	3775
  1221  0000                     _ANCON0bits	set	3912
  1222  0000                     _UEP0bits	set	3878
  1223  0000                     _UIEbits	set	3894
  1224  0000                     _UADDR	set	3896
  1225  0000                     _UIE	set	3894
  1226  0000                     _UEIE	set	3895
  1227  0000                     _UCFG	set	3897
  1228  0000                     _UEP1	set	3879
  1229  0000                     _UEP0	set	3878
  1230  0000                     _TBLPTR	set	4086
  1231  0000                     _RXADDRL	set	3945
  1232  0000                     _RXADDRH	set	3944
  1233  0000                     _DMABCL	set	3943
  1234  0000                     _DMABCH	set	3942
  1235  0000                     _TXADDRL	set	3947
  1236  0000                     _TXADDRH	set	3946
  1237  0000                     _DMACON2bits	set	3974
  1238  0000                     _DMACON1bits	set	3976
  1239  0000                     _SSP2CON1bits	set	3954
  1240  0000                     _SSP2STATbits	set	3955
  1241  0000                     _INTCON	set	4082
  1242  0000                     _EECON1	set	4006
  1243  0000                     _TABLAT	set	4085
  1244  0000                     _EECON1bits	set	4006
  1245  0000                     _SSP1BUF	set	4041
  1246  0000                     _SSP1CON2bits	set	4037
  1247  0000                     _SSP1CON1bits	set	4038
  1248  0000                     _SSP1ADD	set	4040
  1249  0000                     _SSP1STATbits	set	4039
  1250  0000                     _LATAbits	set	3977
  1251  0000                     _TRISAbits	set	3986
  1252  0000                     _LATEbits	set	3981
  1253  0000                     _TRISEbits	set	3990
  1254  0000                     _LATBbits	set	3978
  1255  0000                     _TRISBbits	set	3987
  1256  0000                     _LATDbits	set	3980
  1257  0000                     _TRISDbits	set	3989
  1258  0000                     _LATCbits	set	3979
  1259  0000                     _TRISCbits	set	3988
  1260  0000                     _T0CONbits	set	4053
  1261  0000                     _INTCON2bits	set	4081
  1262  0000                     _EECON2	set	4007
  1263  0000                     _PORTBbits	set	3969
  1264  0000                     _INTCON3bits	set	4080
  1265  0000                     _TMR0L	set	4054
  1266  0000                     _TMR0H	set	4055
  1267  0000                     _INTCONbits	set	4082
  1268  0000                     _OSCCON	set	4051
  1269  0000                     _OSCTUNEbits	set	3995
  1270  0000                     _PORTAbits	set	3968
  1271  0000                     _USTAT	set	3940
  1272  0000                     _PIR2bits	set	4001
  1273  0000                     _UCON	set	3941
  1274  0000                     _UIRbits	set	3938
  1275  0000                     _UCONbits	set	3941
  1276  0000                     _UIR	set	3938
  1277  0000                     _UEIR	set	3939
  1278  0000                     _PIE2bits	set	4000
  1279  008FCF                     STR_12:
  1280  008FCF  48                 	db	72	;'H'
  1281  008FD0  65                 	db	101	;'e'
  1282  008FD1  6C                 	db	108	;'l'
  1283  008FD2  6C                 	db	108	;'l'
  1284  008FD3  6F                 	db	111	;'o'
  1285  008FD4  20                 	db	32
  1286  008FD5  57                 	db	87	;'W'
  1287  008FD6  6F                 	db	111	;'o'
  1288  008FD7  72                 	db	114	;'r'
  1289  008FD8  6C                 	db	108	;'l'
  1290  008FD9  64                 	db	100	;'d'
  1291  008FDA  21                 	db	33
  1292  008FDB  00                 	db	0
  1293  008FDC                     STR_9:
  1294  008FDC  53                 	db	83	;'S'
  1295  008FDD  6F                 	db	111	;'o'
  1296  008FDE  6C                 	db	108	;'l'
  1297  008FDF  61                 	db	97	;'a'
  1298  008FE0  72                 	db	114	;'r'
  1299  008FE1  43                 	db	67	;'C'
  1300  008FE2  68                 	db	104	;'h'
  1301  008FE3  61                 	db	97	;'a'
  1302  008FE4  72                 	db	114	;'r'
  1303  008FE5  67                 	db	103	;'g'
  1304  008FE6  72                 	db	114	;'r'
  1305  008FE7  00                 	db	0
  1306  008FE8                     STR_10:
  1307  008FE8  46                 	db	70	;'F'
  1308  008FE9  49                 	db	73	;'I'
  1309  008FEA  4C                 	db	76	;'L'
  1310  008FEB  45                 	db	69	;'E'
  1311  008FEC  20                 	db	32
  1312  008FED  20                 	db	32
  1313  008FEE  20                 	db	32
  1314  008FEF  20                 	db	32
  1315  008FF0  00                 	db	0
  1316  008FF1                     STR_1:
  1317  008FF1  4D                 	db	77	;'M'
  1318  008FF2  53                 	db	83	;'S'
  1319  008FF3  44                 	db	68	;'D'
  1320  008FF4  4F                 	db	79	;'O'
  1321  008FF5  53                 	db	83	;'S'
  1322  008FF6  35                 	db	53	;'5'
  1323  008FF7  2E                 	db	46
  1324  008FF8  30                 	db	48	;'0'
  1325  008FF9  00                 	db	0
  1326  008FFA                     STR_11:
  1327  008FFA  54                 	db	84	;'T'
  1328  008FFB  58                 	db	88	;'X'
  1329  008FFC  54                 	db	84	;'T'
  1330  008FFD  00                 	db	0
  1331  0000                     
  1332                           ; #config settings
  1333  008FFE  00                 	db	0	; dummy byte at the end
  1334  0000                     
  1335                           	psect	cinit
  1336  005E08                     __pcinit:
  1337                           	opt stack 0
  1338  005E08                     start_initialization:
  1339                           	opt stack 0
  1340  005E08                     __initialization:
  1341                           	opt stack 0
  1342                           
  1343                           ; Initialize objects allocated to BANK1 (29 bytes)
  1344                           ; load TBLPTR registers with __pidataBANK1
  1345  005E08  0EB0               	movlw	low __pidataBANK1
  1346  005E0A  6EF6               	movwf	tblptrl,c
  1347  005E0C  0E79               	movlw	high __pidataBANK1
  1348  005E0E  6EF7               	movwf	tblptrh,c
  1349  005E10  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1350  005E12  6EF8               	movwf	tblptru,c
  1351  005E14  EE01  F0DA         	lfsr	0,__pdataBANK1
  1352  005E18  EE10 F01D          	lfsr	1,29
  1353  005E1C                     copy_data0:
  1354  005E1C  0009               	tblrd		*+
  1355  005E1E  CFF5 FFEE          	movff	tablat,postinc0
  1356  005E22  50E5               	movf	postdec1,w,c
  1357  005E24  50E1               	movf	fsr1l,w,c
  1358  005E26  E1FA               	bnz	copy_data0
  1359                           
  1360                           ; Initialize objects allocated to BANK0 (1 bytes)
  1361                           ; load TBLPTR registers with __pidataBANK0
  1362  005E28  0ED0               	movlw	low __pidataBANK0
  1363  005E2A  6EF6               	movwf	tblptrl,c
  1364  005E2C  0E7B               	movlw	high __pidataBANK0
  1365  005E2E  6EF7               	movwf	tblptrh,c
  1366  005E30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1367  005E32  6EF8               	movwf	tblptru,c
  1368  005E34  0009               	tblrd		*+	;fetch initializer
  1369  005E36  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1370                           
  1371                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1372  005E3A  EE02  F0B2         	lfsr	0,__pbssBIGRAMll
  1373  005E3E  EE12 F000          	lfsr	1,512
  1374  005E42                     clear_0:
  1375  005E42  6AEE               	clrf	postinc0,c
  1376  005E44  50E5               	movf	postdec1,w,c
  1377  005E46  50E1               	movf	fsr1l,w,c
  1378  005E48  E1FC               	bnz	clear_0
  1379  005E4A  50E2               	movf	fsr1h,w,c
  1380  005E4C  E1FA               	bnz	clear_0
  1381                           
  1382                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1383  005E4E  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1384  005E52  EE14 F000          	lfsr	1,1024
  1385  005E56                     clear_1:
  1386  005E56  6AEE               	clrf	postinc0,c
  1387  005E58  50E5               	movf	postdec1,w,c
  1388  005E5A  50E1               	movf	fsr1l,w,c
  1389  005E5C  E1FC               	bnz	clear_1
  1390  005E5E  50E2               	movf	fsr1h,w,c
  1391  005E60  E1FA               	bnz	clear_1
  1392                           
  1393                           ; Clear objects allocated to BANK2 (178 bytes)
  1394  005E62  EE02  F000         	lfsr	0,__pbssBANK2
  1395  005E66  0EB2               	movlw	178
  1396  005E68                     clear_2:
  1397  005E68  6AEE               	clrf	postinc0,c
  1398  005E6A  06E8               	decf	wreg,f,c
  1399  005E6C  E1FD               	bnz	clear_2
  1400                           
  1401                           ; Clear objects allocated to BANK1 (218 bytes)
  1402  005E6E  EE01  F000         	lfsr	0,__pbssBANK1
  1403  005E72  0EDA               	movlw	218
  1404  005E74                     clear_3:
  1405  005E74  6AEE               	clrf	postinc0,c
  1406  005E76  06E8               	decf	wreg,f,c
  1407  005E78  E1FD               	bnz	clear_3
  1408                           
  1409                           ; Clear objects allocated to BANK0 (92 bytes)
  1410  005E7A  EE00  F060         	lfsr	0,__pbssBANK0
  1411  005E7E  0E5C               	movlw	92
  1412  005E80                     clear_4:
  1413  005E80  6AEE               	clrf	postinc0,c
  1414  005E82  06E8               	decf	wreg,f,c
  1415  005E84  E1FD               	bnz	clear_4
  1416                           
  1417                           ; Clear objects allocated to COMRAM (1 bytes)
  1418  005E86  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1419  005E88                     end_of_initialization:
  1420                           	opt stack 0
  1421  005E88                     __end_of__initialization:
  1422                           	opt stack 0
  1423  005E88  0100               	movlb	0
  1424  005E8A  EF7C  F024         	goto	_main	;jump to C main() function
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           fsr1h	equ	0xFE2
  1433                           fsr1l	equ	0xFE1
  1434                           
  1435                           	psect	bssCOMRAM
  1436  00005F                     __pbssCOMRAM:
  1437                           	opt stack 0
  1438  00005F                     _USBDeviceState:
  1439                           	opt stack 0
  1440  00005F                     	ds	1
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1h	equ	0xFE2
  1449                           fsr1l	equ	0xFE1
  1450                           
  1451                           	psect	bssBANK0
  1452  000060                     __pbssBANK0:
  1453                           	opt stack 0
  1454  000060                     _os:
  1455                           	opt stack 0
  1456  000060                     	ds	6
  1457  000066                     _inPipes:
  1458                           	opt stack 0
  1459  000066                     	ds	6
  1460  00006C                     _pBDTEntryIn:
  1461                           	opt stack 0
  1462  00006C                     	ds	6
  1463  000072                     _pBDTEntryOut:
  1464                           	opt stack 0
  1465  000072                     	ds	6
  1466  000078                     _hex_file_size:
  1467                           	opt stack 0
  1468  000078                     	ds	4
  1469  00007C                     _hex_file_offset:
  1470                           	opt stack 0
  1471  00007C                     	ds	4
  1472  000080                     _LBA:
  1473                           	opt stack 0
  1474  000080                     	ds	4
  1475  000084                     _hex_file_entries:
  1476                           	opt stack 0
  1477  000084                     	ds	2
  1478  000086                     _system_ui_inactive_count:
  1479                           	opt stack 0
  1480  000086                     	ds	2
  1481  000088                     _USBInHandle:
  1482                           	opt stack 0
  1483  000088                     	ds	2
  1484  00008A                     _USBOutHandle:
  1485                           	opt stack 0
  1486  00008A                     	ds	2
  1487  00008C                     _TransferLength:
  1488                           	opt stack 0
  1489  00008C                     	ds	2
  1490  00008E                     _USBMSDInHandle:
  1491                           	opt stack 0
  1492  00008E                     	ds	2
  1493  000090                     _USBMSDOutHandle:
  1494                           	opt stack 0
  1495  000090                     	ds	2
  1496  000092                     _ptrNextData:
  1497                           	opt stack 0
  1498  000092                     	ds	2
  1499  000094                     _pDst:
  1500                           	opt stack 0
  1501  000094                     	ds	2
  1502  000096                     _pBDTEntryEP0OutNext:
  1503                           	opt stack 0
  1504  000096                     	ds	2
  1505  000098                     _pBDTEntryEP0OutCurrent:
  1506                           	opt stack 0
  1507  000098                     	ds	2
  1508  00009A                     _active_configuration:
  1509                           	opt stack 0
  1510  00009A                     	ds	1
  1511  00009B                     _start_from_byte_next:
  1512                           	opt stack 0
  1513  00009B                     	ds	1
  1514  00009C                     _last_error:
  1515                           	opt stack 0
  1516  00009C                     	ds	1
  1517  00009D                     _power_state:
  1518                           	opt stack 0
  1519  00009D                     	ds	1
  1520  00009E                     _userInterfaceStatus:
  1521                           	opt stack 0
  1522  00009E                     	ds	1
  1523  00009F                     _i2c_frequency:
  1524                           	opt stack 0
  1525  00009F                     	ds	1
  1526  0000A0                     _MSDCBWValid:
  1527                           	opt stack 0
  1528  0000A0                     	ds	1
  1529  0000A1                     _MSDHostNoData:
  1530                           	opt stack 0
  1531  0000A1                     	ds	1
  1532  0000A2                     _SoftDetach:
  1533                           	opt stack 0
  1534  0000A2                     	ds	1
  1535  0000A3                     _gblCBWLength:
  1536                           	opt stack 0
  1537  0000A3                     	ds	1
  1538  0000A4                     _MSDRetryAttempt:
  1539                           	opt stack 0
  1540  0000A4                     	ds	1
  1541  0000A5                     _MSDWriteState:
  1542                           	opt stack 0
  1543  0000A5                     	ds	1
  1544  0000A6                     _MSDReadState:
  1545                           	opt stack 0
  1546  0000A6                     	ds	1
  1547  0000A7                     _MSDCommandState:
  1548                           	opt stack 0
  1549  0000A7                     	ds	1
  1550  0000A8                     _MSD_State:
  1551                           	opt stack 0
  1552  0000A8                     	ds	1
  1553  0000A9                     _USBTicksSinceSuspendEnd:
  1554                           	opt stack 0
  1555  0000A9                     	ds	1
  1556  0000AA                     _USBDeferOUTDataStagePackets:
  1557                           	opt stack 0
  1558  0000AA                     	ds	1
  1559  0000AB                     _USBDeferINDataStagePackets:
  1560                           	opt stack 0
  1561  0000AB                     	ds	1
  1562  0000AC                     _USBStatusStageEnabledFlag2:
  1563                           	opt stack 0
  1564  0000AC                     	ds	1
  1565  0000AD                     _USBStatusStageEnabledFlag1:
  1566                           	opt stack 0
  1567  0000AD                     	ds	1
  1568  0000AE                     _USBDeferStatusStagePacket:
  1569                           	opt stack 0
  1570  0000AE                     	ds	1
  1571  0000AF                     _USBStatusStageTimeoutCounter:
  1572                           	opt stack 0
  1573  0000AF                     	ds	1
  1574  0000B0                     _BothEP0OutUOWNsSet:
  1575                           	opt stack 0
  1576  0000B0                     	ds	1
  1577  0000B1                     _endpoint_number:
  1578                           	opt stack 0
  1579  0000B1                     	ds	1
  1580  0000B2                     _USBBusIsSuspended:
  1581                           	opt stack 0
  1582  0000B2                     	ds	1
  1583  0000B3                     _RemoteWakeup:
  1584                           	opt stack 0
  1585  0000B3                     	ds	1
  1586  0000B4                     _controlTransferState:
  1587                           	opt stack 0
  1588  0000B4                     	ds	1
  1589  0000B5                     _shortPacketStatus:
  1590                           	opt stack 0
  1591  0000B5                     	ds	1
  1592  0000B6                     _USBAlternateInterface:
  1593                           	opt stack 0
  1594  0000B6                     	ds	2
  1595  0000B8                     _active_protocol:
  1596                           	opt stack 0
  1597  0000B8                     	ds	1
  1598  0000B9                     _idle_rate:
  1599                           	opt stack 0
  1600  0000B9                     	ds	1
  1601  0000BA                     _USTATcopy:
  1602                           	opt stack 0
  1603  0000BA                     	ds	1
  1604  0000BB                     _USBActiveConfiguration:
  1605                           	opt stack 0
  1606  0000BB                     	ds	1
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1h	equ	0xFE2
  1615                           fsr1l	equ	0xFE1
  1616                           
  1617                           	psect	dataBANK0
  1618  0000FF                     __pdataBANK0:
  1619                           	opt stack 0
  1620  0000FF                     _file_number:
  1621                           	opt stack 0
  1622  0000FF                     	ds	1
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           postdec1	equ	0xFE5
  1630                           fsr1h	equ	0xFE2
  1631                           fsr1l	equ	0xFE1
  1632                           
  1633                           	psect	bssBANK1
  1634  000100                     __pbssBANK1:
  1635                           	opt stack 0
  1636  000100                     _gblCBW:
  1637                           	opt stack 0
  1638  000100                     	ds	31
  1639  00011F                     _gblSenseData:
  1640                           	opt stack 0
  1641  00011F                     	ds	18
  1642  000131                     _outPipes:
  1643                           	opt stack 0
  1644  000131                     	ds	8
  1645  000139                     _communicationSettings:
  1646                           	opt stack 0
  1647  000139                     	ds	7
  1648  000140                     _extended_linear_address:
  1649                           	opt stack 0
  1650  000140                     	ds	4
  1651  000144                     _file_maximum_address:
  1652                           	opt stack 0
  1653  000144                     	ds	4
  1654  000148                     _file_minimum_address:
  1655                           	opt stack 0
  1656  000148                     	ds	4
  1657  00014C                     _gblBLKLen:
  1658                           	opt stack 0
  1659  00014C                     	ds	4
  1660  000150                     _gblNumBLKS:
  1661                           	opt stack 0
  1662  000150                     	ds	4
  1663  000154                     _USB1msTickCount:
  1664                           	opt stack 0
  1665  000154                     	ds	4
  1666  000158                     _config_external:
  1667                           	opt stack 0
  1668  000158                     	ds	3
  1669  00015B                     _config_internal:
  1670                           	opt stack 0
  1671  00015B                     	ds	3
  1672  00015E                     _ep_data_out:
  1673                           	opt stack 0
  1674  00015E                     	ds	3
  1675  000161                     _ep_data_in:
  1676                           	opt stack 0
  1677  000161                     	ds	3
  1678  000164                     _FileAddress:
  1679                           	opt stack 0
  1680  000164                     	ds	2
  1681  000166                     _flash_pages_written:
  1682                           	opt stack 0
  1683  000166                     	ds	2
  1684  000168                     _total_hex_file_entries:
  1685                           	opt stack 0
  1686  000168                     	ds	2
  1687  00016A                     _gblMediaPresent:
  1688                           	opt stack 0
  1689  00016A                     	ds	2
  1690  00016C                     _MSBBufferIndex:
  1691                           	opt stack 0
  1692  00016C                     	ds	2
  1693  00016E                     _display_content:
  1694                           	opt stack 0
  1695  00016E                     	ds	80
  1696  0001BE                     _hex_file_entry:
  1697                           	opt stack 0
  1698  0001BE                     	ds	23
  1699  0001D5                     _mediaInformation:
  1700                           	opt stack 0
  1701  0001D5                     	ds	5
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1h	equ	0xFE2
  1710                           fsr1l	equ	0xFE1
  1711                           
  1712                           	psect	dataBANK1
  1713  0001DA                     __pdataBANK1:
  1714                           	opt stack 0
  1715  0001DA                     _LUN:
  1716                           	opt stack 0
  1717  0001DA                     	ds	20
  1718  0001EE                     i2c_display_send_init_sequence@F6791:
  1719                           	opt stack 0
  1720  0001EE                     	ds	9
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postdec1	equ	0xFE5
  1728                           fsr1h	equ	0xFE2
  1729                           fsr1l	equ	0xFE1
  1730                           
  1731                           	psect	bssBANK2
  1732  000200                     __pbssBANK2:
  1733                           	opt stack 0
  1734  000200                     _ToSendDataBuffer:
  1735                           	opt stack 0
  1736  000200                     	ds	64
  1737  000240                     _ReceivedDataBuffer:
  1738                           	opt stack 0
  1739  000240                     	ds	64
  1740  000280                     _file_buffer:
  1741                           	opt stack 0
  1742  000280                     	ds	50
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           
  1753                           	psect	bssBIGRAMlh
  1754  000800                     __pbssBIGRAMlh:
  1755                           	opt stack 0
  1756  000800                     _pageBuffer:
  1757                           	opt stack 0
  1758  000800                     	ds	1024
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec1	equ	0xFE5
  1766                           fsr1h	equ	0xFE2
  1767                           fsr1l	equ	0xFE1
  1768                           
  1769                           	psect	bssBIGRAMll
  1770  0002B2                     __pbssBIGRAMll:
  1771                           	opt stack 0
  1772  0002B2                     _buffer:
  1773                           	opt stack 0
  1774  0002B2                     	ds	512
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           postdec1	equ	0xFE5
  1782                           fsr1h	equ	0xFE2
  1783                           fsr1l	equ	0xFE1
  1784                           
  1785                           	psect	cstackBANK0
  1786  0000BC                     __pcstackBANK0:
  1787                           	opt stack 0
  1788  0000BC                     fat_rename_file@file_number:
  1789                           	opt stack 0
  1790  0000BC                     fat_create_file@next_cluster:
  1791                           	opt stack 0
  1792  0000BC                     fat_append_to_file@sector:
  1793                           	opt stack 0
  1794  0000BC                     fat_read_from_file@sector:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x0
  1798  0000BC                     	ds	1
  1799  0000BD                     fat_rename_file@root:
  1800                           	opt stack 0
  1801                           
  1802                           ; 32 bytes @ 0x1
  1803  0000BD                     	ds	1
  1804  0000BE                     fat_read_from_file@file_number:
  1805                           	opt stack 0
  1806  0000BE                     fat_create_file@cluster_count:
  1807                           	opt stack 0
  1808  0000BE                     fat_append_to_file@file_size:
  1809                           	opt stack 0
  1810                           
  1811                           ; 4 bytes @ 0x2
  1812  0000BE                     	ds	1
  1813  0000BF                     fat_read_from_file@root:
  1814                           	opt stack 0
  1815                           
  1816                           ; 32 bytes @ 0x3
  1817  0000BF                     	ds	1
  1818  0000C0                     fat_create_file@root_slot:
  1819                           	opt stack 0
  1820                           
  1821                           ; 1 bytes @ 0x4
  1822  0000C0                     	ds	1
  1823  0000C1                     fat_create_file@number_of_clusters:
  1824                           	opt stack 0
  1825                           
  1826                           ; 2 bytes @ 0x5
  1827  0000C1                     	ds	1
  1828  0000C2                     fat_append_to_file@new_cluster:
  1829                           	opt stack 0
  1830                           
  1831                           ; 2 bytes @ 0x6
  1832  0000C2                     	ds	1
  1833  0000C3                     fat_create_file@cluster:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x7
  1837  0000C3                     	ds	1
  1838  0000C4                     fat_append_to_file@fat_cluster:
  1839                           	opt stack 0
  1840                           
  1841                           ; 2 bytes @ 0x8
  1842  0000C4                     	ds	1
  1843  0000C5                     fat_create_file@root_entry:
  1844                           	opt stack 0
  1845                           
  1846                           ; 32 bytes @ 0x9
  1847  0000C5                     	ds	1
  1848  0000C6                     fat_append_to_file@offset:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0xA
  1852  0000C6                     	ds	2
  1853  0000C8                     fat_append_to_file@file_number:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0xC
  1857  0000C8                     	ds	1
  1858  0000C9                     fat_append_to_file@length:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0xD
  1862  0000C9                     	ds	2
  1863  0000CB                     fat_append_to_file@position:
  1864                           	opt stack 0
  1865                           
  1866                           ; 4 bytes @ 0xF
  1867  0000CB                     	ds	4
  1868  0000CF                     fat_append_to_file@root:
  1869                           	opt stack 0
  1870                           
  1871                           ; 32 bytes @ 0x13
  1872  0000CF                     	ds	14
  1873  0000DD                     fat_rename_file@cntr:
  1874                           	opt stack 0
  1875                           
  1876                           ; 1 bytes @ 0x21
  1877  0000DD                     	ds	2
  1878  0000DF                     fat_read_from_file@cluster:
  1879                           	opt stack 0
  1880                           
  1881                           ; 2 bytes @ 0x23
  1882  0000DF                     	ds	2
  1883  0000E1                     fat_read_from_file@offset:
  1884                           	opt stack 0
  1885                           
  1886                           ; 2 bytes @ 0x25
  1887  0000E1                     	ds	2
  1888  0000E3                     fat_read_from_file@read_length:
  1889                           	opt stack 0
  1890                           
  1891                           ; 2 bytes @ 0x27
  1892  0000E3                     	ds	2
  1893  0000E5                     fat_read_from_file@position:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x29
  1897  0000E5                     	ds	4
  1898  0000E9                     __bootloader_verify_file@rec_counter:
  1899                           	opt stack 0
  1900  0000E9                     __bootloader_program@buffer:
  1901                           	opt stack 0
  1902  0000E9                     __fill_buffer_read_file@file_size:
  1903                           	opt stack 0
  1904                           
  1905                           ; 4 bytes @ 0x2D
  1906  0000E9                     	ds	1
  1907  0000EA                     __bootloader_verify_file@return_value:
  1908                           	opt stack 0
  1909                           
  1910                           ; 4 bytes @ 0x2E
  1911  0000EA                     	ds	1
  1912  0000EB                     __bootloader_program@entry_page:
  1913                           	opt stack 0
  1914                           
  1915                           ; 2 bytes @ 0x2F
  1916  0000EB                     	ds	2
  1917  0000ED                     __bootloader_program@address_within_page:
  1918                           	opt stack 0
  1919  0000ED                     __fill_buffer_read_file@data_length:
  1920                           	opt stack 0
  1921                           
  1922                           ; 4 bytes @ 0x31
  1923  0000ED                     	ds	1
  1924  0000EE                     __bootloader_verify_file@address32:
  1925                           	opt stack 0
  1926                           
  1927                           ; 4 bytes @ 0x32
  1928  0000EE                     	ds	1
  1929  0000EF                     api_parse@inBuffer:
  1930                           	opt stack 0
  1931  0000EF                     __bootloader_program@return_value:
  1932                           	opt stack 0
  1933                           
  1934                           ; 4 bytes @ 0x33
  1935  0000EF                     	ds	2
  1936  0000F1                     api_parse@receivedDataLength:
  1937                           	opt stack 0
  1938  0000F1                     __fill_buffer_read_file@start:
  1939                           	opt stack 0
  1940                           
  1941                           ; 4 bytes @ 0x35
  1942  0000F1                     	ds	2
  1943  0000F3                     __bootloader_program@address32:
  1944                           	opt stack 0
  1945                           
  1946                           ; 4 bytes @ 0x37
  1947  0000F3                     	ds	2
  1948  0000F5                     api_prepare@inBuffer:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0x39
  1952  0000F5                     	ds	2
  1953  0000F7                     __bootloader_program@start_from_byte:
  1954                           	opt stack 0
  1955  0000F7                     api_prepare@outBuffer:
  1956                           	opt stack 0
  1957                           
  1958                           ; 2 bytes @ 0x3B
  1959  0000F7                     	ds	1
  1960  0000F8                     __bootloader_program@cntr:
  1961                           	opt stack 0
  1962                           
  1963                           ; 2 bytes @ 0x3C
  1964  0000F8                     	ds	1
  1965  0000F9                     ??_APP_DeviceCustomHIDTasks:
  1966                           
  1967                           ; 1 bytes @ 0x3D
  1968  0000F9                     	ds	1
  1969  0000FA                     __bootloader_program@page_to_write:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x3E
  1973  0000FA                     	ds	3
  1974  0000FD                     ??_main:
  1975                           
  1976                           ; 1 bytes @ 0x41
  1977  0000FD                     	ds	2
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postdec1	equ	0xFE5
  1985                           fsr1h	equ	0xFE2
  1986                           fsr1l	equ	0xFE1
  1987                           
  1988                           	psect	cstackCOMRAM
  1989  000001                     __pcstackCOMRAM:
  1990                           	opt stack 0
  1991  000001                     ??_USBStdGetDscHandler:
  1992  000001                     ??_USBStdGetStatusHandler:
  1993  000001                     ??_system_delay_ms:
  1994  000001                     ??__i2c_wait_idle:
  1995  000001                     ??__display_clear:
  1996  000001                     ?_USBTransferOnePacket:
  1997                           	opt stack 0
  1998  000001                     ?_ExternalFlash_MediaInitialize:
  1999                           	opt stack 0
  2000  000001                     ?_ExternalFlash_SectorSizeRead:
  2001                           	opt stack 0
  2002  000001                     ?_bootloader_get_entries:
  2003                           	opt stack 0
  2004  000001                     ?_bootloader_get_total_entries:
  2005                           	opt stack 0
  2006  000001                     ?_bootloader_get_rec_address:
  2007                           	opt stack 0
  2008  000001                     ?_bootloader_get_flashPagesWritten:
  2009                           	opt stack 0
  2010  000001                     ?_strncmp:
  2011                           	opt stack 0
  2012  000001                     ?_internalFlash_pageFromAddress:
  2013                           	opt stack 0
  2014  000001                     ?_internalFlash_getBuffer:
  2015                           	opt stack 0
  2016  000001                     ?__get_time:
  2017                           	opt stack 0
  2018  000001                     ?__get_date:
  2019                           	opt stack 0
  2020  000001                     ?__sector_from_cluster:
  2021                           	opt stack 0
  2022  000001                     ?_bootloader_get_rec_dataLength:
  2023                           	opt stack 0
  2024  000001                     ?___lwdiv:
  2025                           	opt stack 0
  2026  000001                     ?___lwmod:
  2027                           	opt stack 0
  2028  000001                     ?_ExternalFlash_CapacityRead:
  2029                           	opt stack 0
  2030  000001                     ?_bootloader_get_file_size:
  2031                           	opt stack 0
  2032  000001                     ?_internalFlash_addressFromPage:
  2033                           	opt stack 0
  2034  000001                     ?___lldiv:
  2035                           	opt stack 0
  2036  000001                     ?___llmod:
  2037                           	opt stack 0
  2038  000001                     USBTransferOnePacket@dir:
  2039                           	opt stack 0
  2040  000001                     USBStallEndpoint@dir:
  2041                           	opt stack 0
  2042  000001                     USBConfigureEndpoint@direction:
  2043                           	opt stack 0
  2044  000001                     USBCtrlTrfTxService@byteToSend:
  2045                           	opt stack 0
  2046  000001                     USBCtrlTrfRxService@i:
  2047                           	opt stack 0
  2048  000001                     __i2c_send@dat:
  2049                           	opt stack 0
  2050  000001                     i2c_set_frequency@frequency:
  2051                           	opt stack 0
  2052  000001                     display_get_character@position:
  2053                           	opt stack 0
  2054  000001                     __display_start@cntr:
  2055                           	opt stack 0
  2056  000001                     hexCharToUint8@c:
  2057                           	opt stack 0
  2058  000001                     bootloader_get_rec_data@index:
  2059                           	opt stack 0
  2060  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2061                           	opt stack 0
  2062  000001                     spi_set_configuration@configuration:
  2063                           	opt stack 0
  2064  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2065                           	opt stack 0
  2066  000001                     SYSTEM_Initialize@pll_startup_counter:
  2067                           	opt stack 0
  2068  000001                     ExternalFlash_MediaInitialize@config:
  2069                           	opt stack 0
  2070  000001                     ExternalFlash_SectorSizeRead@config:
  2071                           	opt stack 0
  2072  000001                     ExternalFlash_CapacityRead@config:
  2073                           	opt stack 0
  2074  000001                     ExternalFlash_MediaDetect@config:
  2075                           	opt stack 0
  2076  000001                     ExternalFlash_WriteProtectStateGet@config:
  2077                           	opt stack 0
  2078  000001                     __sector_from_cluster@fat_cluster:
  2079                           	opt stack 0
  2080  000001                     __get_mbr@idx:
  2081                           	opt stack 0
  2082  000001                     __get_fbr@idx:
  2083                           	opt stack 0
  2084  000001                     __get_fat@idx:
  2085                           	opt stack 0
  2086  000001                     __get_root@idx:
  2087                           	opt stack 0
  2088  000001                     __get_data@idx:
  2089                           	opt stack 0
  2090  000001                     internalFlash_addressFromPage@page:
  2091                           	opt stack 0
  2092  000001                     __fill_buffer_get_configuration@outBuffer:
  2093                           	opt stack 0
  2094  000001                     __parse_file_truncate@data:
  2095                           	opt stack 0
  2096  000001                     __parse_file_modify@data:
  2097                           	opt stack 0
  2098  000001                     spi_tx@data:
  2099                           	opt stack 0
  2100  000001                     spi_tx_tx@command:
  2101                           	opt stack 0
  2102  000001                     spi_tx_rx@command:
  2103                           	opt stack 0
  2104  000001                     ___lwdiv@dividend:
  2105                           	opt stack 0
  2106  000001                     ___lwmod@dividend:
  2107                           	opt stack 0
  2108  000001                     memcpy@d1:
  2109                           	opt stack 0
  2110  000001                     memset@p1:
  2111                           	opt stack 0
  2112  000001                     strncmp@s1:
  2113                           	opt stack 0
  2114  000001                     __spi_init@details:
  2115                           	opt stack 0
  2116  000001                     __bootloader_check_address@address:
  2117                           	opt stack 0
  2118  000001                     internalFlash_pageFromAddress@address:
  2119                           	opt stack 0
  2120  000001                     ___lldiv@dividend:
  2121                           	opt stack 0
  2122  000001                     ___llmod@dividend:
  2123                           	opt stack 0
  2124                           
  2125                           ; 4 bytes @ 0x0
  2126  000001                     	ds	1
  2127  000002                     ??_USBConfigureEndpoint:
  2128  000002                     ??_USBStallEndpoint:
  2129  000002                     ??_display_get_character:
  2130  000002                     USBCtrlTrfRxService@byteToRead:
  2131                           	opt stack 0
  2132  000002                     USBCtrlTrfInHandler@lastDTS:
  2133                           	opt stack 0
  2134  000002                     system_delay_ms@ms:
  2135                           	opt stack 0
  2136  000002                     hexCharToUint8@ascii:
  2137                           	opt stack 0
  2138  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2139                           	opt stack 0
  2140  000002                     USBTransferOnePacket@data:
  2141                           	opt stack 0
  2142  000002                     USBStdGetStatusHandler@p:
  2143                           	opt stack 0
  2144                           
  2145                           ; 2 bytes @ 0x1
  2146  000002                     	ds	1
  2147  000003                     ??_MSDComputeDeviceInAndResidue:
  2148  000003                     ??__get_mbr:
  2149  000003                     ??__get_fbr:
  2150  000003                     ??__get_fat:
  2151  000003                     ??__get_root:
  2152  000003                     ?_hexCharsToUint16:
  2153                           	opt stack 0
  2154  000003                     system_delay_ms@cntr:
  2155                           	opt stack 0
  2156  000003                     __display_clear@row:
  2157                           	opt stack 0
  2158  000003                     hexCharsToUint8@c2:
  2159                           	opt stack 0
  2160  000003                     hexCharsToUint16@c2:
  2161                           	opt stack 0
  2162  000003                     SYSTEM_Initialize@pll_startup_counter_2849:
  2163                           	opt stack 0
  2164  000003                     __get_time@time:
  2165                           	opt stack 0
  2166  000003                     __get_date@date:
  2167                           	opt stack 0
  2168  000003                     internalFlash_erasePage@page:
  2169                           	opt stack 0
  2170  000003                     internalFlash_writePage@page:
  2171                           	opt stack 0
  2172  000003                     spi_tx@length:
  2173                           	opt stack 0
  2174  000003                     spi_tx_tx@command_length:
  2175                           	opt stack 0
  2176  000003                     spi_tx_rx@command_length:
  2177                           	opt stack 0
  2178  000003                     ___lwdiv@divisor:
  2179                           	opt stack 0
  2180  000003                     ___lwmod@divisor:
  2181                           	opt stack 0
  2182  000003                     memset@c:
  2183                           	opt stack 0
  2184  000003                     strncmp@s2:
  2185                           	opt stack 0
  2186  000003                     memcpy@s1:
  2187                           	opt stack 0
  2188                           
  2189                           ; 3 bytes @ 0x2
  2190  000003                     	ds	1
  2191  000004                     ??_hexCharsToUint8:
  2192  000004                     USBTransferOnePacket@len:
  2193                           	opt stack 0
  2194  000004                     display_get_character@line:
  2195                           	opt stack 0
  2196  000004                     __display_clear@col:
  2197                           	opt stack 0
  2198  000004                     hexCharsToUint16@c3:
  2199                           	opt stack 0
  2200  000004                     spi_init@configuration:
  2201                           	opt stack 0
  2202                           
  2203                           ; 1 bytes @ 0x3
  2204  000004                     	ds	1
  2205  000005                     ??_USBTransferOnePacket:
  2206  000005                     ??_spi_tx:
  2207  000005                     ??_internalFlash_pageFromAddress:
  2208  000005                     SYSTEM_Initialize@state:
  2209                           	opt stack 0
  2210  000005                     hexCharsToUint8@c1:
  2211                           	opt stack 0
  2212  000005                     hexCharsToUint16@c4:
  2213                           	opt stack 0
  2214  000005                     __bootloader_check_address@dataLength:
  2215                           	opt stack 0
  2216  000005                     ___lwmod@counter:
  2217                           	opt stack 0
  2218  000005                     __update_modified_time@root:
  2219                           	opt stack 0
  2220  000005                     __fill_buffer_get_display@outBuffer:
  2221                           	opt stack 0
  2222  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2223                           	opt stack 0
  2224  000005                     spi_tx_tx@data:
  2225                           	opt stack 0
  2226  000005                     spi_tx_rx@data:
  2227                           	opt stack 0
  2228  000005                     ___lwdiv@quotient:
  2229                           	opt stack 0
  2230  000005                     memset@n:
  2231                           	opt stack 0
  2232  000005                     strncmp@len:
  2233                           	opt stack 0
  2234  000005                     internalFlash_erasePage@address:
  2235                           	opt stack 0
  2236  000005                     internalFlash_writePage@address:
  2237                           	opt stack 0
  2238  000005                     internalFlash_addressFromPage@address:
  2239                           	opt stack 0
  2240  000005                     ___lldiv@divisor:
  2241                           	opt stack 0
  2242  000005                     ___llmod@divisor:
  2243                           	opt stack 0
  2244                           
  2245                           ; 4 bytes @ 0x4
  2246  000005                     	ds	1
  2247  000006                     ??_hexCharsToUint16:
  2248  000006                     ??__bootloader_check_address:
  2249  000006                     USBStallEndpoint@ep:
  2250                           	opt stack 0
  2251  000006                     USBConfigureEndpoint@EPNum:
  2252                           	opt stack 0
  2253  000006                     hexCharsToUint8@retVal:
  2254                           	opt stack 0
  2255  000006                     __i2c_write@data:
  2256                           	opt stack 0
  2257  000006                     __i2c_read@data:
  2258                           	opt stack 0
  2259  000006                     i2c_display_write_fixed@data:
  2260                           	opt stack 0
  2261  000006                     memcpy@n:
  2262                           	opt stack 0
  2263                           
  2264                           ; 2 bytes @ 0x5
  2265  000006                     	ds	1
  2266  000007                     ??_strncmp:
  2267  000007                     ??__fill_buffer_get_bootloader_details:
  2268  000007                     __fill_buffer_get_display@secondHalf:
  2269                           	opt stack 0
  2270  000007                     ___lwdiv@counter:
  2271                           	opt stack 0
  2272  000007                     USBStallEndpoint@p:
  2273                           	opt stack 0
  2274  000007                     USBConfigureEndpoint@handle:
  2275                           	opt stack 0
  2276  000007                     spi_tx_tx@data_length:
  2277                           	opt stack 0
  2278  000007                     spi_tx_rx@data_length:
  2279                           	opt stack 0
  2280  000007                     memset@p:
  2281                           	opt stack 0
  2282                           
  2283                           ; 2 bytes @ 0x6
  2284  000007                     	ds	1
  2285  000008                     ??__fill_buffer_get_display:
  2286  000008                     __i2c_write@length:
  2287                           	opt stack 0
  2288  000008                     __i2c_read@length:
  2289                           	opt stack 0
  2290  000008                     i2c_display_write_fixed@length:
  2291                           	opt stack 0
  2292  000008                     utoa@buf:
  2293                           	opt stack 0
  2294  000008                     memcpy@s:
  2295                           	opt stack 0
  2296                           
  2297                           ; 3 bytes @ 0x7
  2298  000008                     	ds	1
  2299  000009                     ??_spi_tx_rx:
  2300  000009                     ??_spi_tx_tx:
  2301  000009                     ??__i2c_read:
  2302  000009                     ?_internalFlash_addressWithinPage:
  2303                           	opt stack 0
  2304  000009                     USBDeviceInit@i:
  2305                           	opt stack 0
  2306  000009                     USBEnableEndpoint@options:
  2307                           	opt stack 0
  2308  000009                     USBTransferOnePacket@ep:
  2309                           	opt stack 0
  2310  000009                     MSDErrorHandler@ErrorCase:
  2311                           	opt stack 0
  2312  000009                     __i2c_write@slave_address:
  2313                           	opt stack 0
  2314  000009                     i2c_display_write_fixed@pos:
  2315                           	opt stack 0
  2316  000009                     __flash_wakeup@command:
  2317                           	opt stack 0
  2318  000009                     hexCharsToUint16@c1:
  2319                           	opt stack 0
  2320  000009                     ___llmod@counter:
  2321                           	opt stack 0
  2322  000009                     internalFlash_writePage@cntr:
  2323                           	opt stack 0
  2324  000009                     internalFlash_addressWithinPage@address:
  2325                           	opt stack 0
  2326  000009                     ___lldiv@quotient:
  2327                           	opt stack 0
  2328                           
  2329                           ; 4 bytes @ 0x8
  2330  000009                     	ds	1
  2331  00000A                     MSDErrorHandler@OldMSD_State:
  2332                           	opt stack 0
  2333  00000A                     __i2c_write@cntr:
  2334                           	opt stack 0
  2335  00000A                     __bootloader_check_address@worst_case:
  2336                           	opt stack 0
  2337  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2338                           	opt stack 0
  2339  00000A                     USBEnableEndpoint@p:
  2340                           	opt stack 0
  2341  00000A                     USBTransferOnePacket@handle:
  2342                           	opt stack 0
  2343  00000A                     hexCharsToUint16@retVal:
  2344                           	opt stack 0
  2345  00000A                     utoa@val:
  2346                           	opt stack 0
  2347                           
  2348                           ; 2 bytes @ 0x9
  2349  00000A                     	ds	1
  2350  00000B                     __ic2_display_set_address@address:
  2351                           	opt stack 0
  2352  00000B                     i2c_digipot_backlight@level:
  2353                           	opt stack 0
  2354  00000B                     __bootloader_check_address@byte_status:
  2355                           	opt stack 0
  2356  00000B                     internalFlash_writePage@block_cntr:
  2357                           	opt stack 0
  2358  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2359                           	opt stack 0
  2360  00000B                     i2c_digipot_reset_on@data_array:
  2361                           	opt stack 0
  2362  00000B                     i2c_digipot_reset_off@data_array:
  2363                           	opt stack 0
  2364  00000B                     i2c_eeprom_writeByte@address:
  2365                           	opt stack 0
  2366  00000B                     memcpy@d:
  2367                           	opt stack 0
  2368  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2369                           	opt stack 0
  2370  00000B                     i2c_display_send_init_sequence@init_sequence:
  2371                           	opt stack 0
  2372                           
  2373                           ; 9 bytes @ 0xA
  2374  00000B                     	ds	1
  2375  00000C                     ??_USBMSDInit:
  2376  00000C                     ?_parseHexFileEntry:
  2377                           	opt stack 0
  2378  00000C                     USBEnableEndpoint@ep:
  2379                           	opt stack 0
  2380  00000C                     __bootloader_check_address@cntr:
  2381                           	opt stack 0
  2382  00000C                     internalFlash_writePage@byte_cntr:
  2383                           	opt stack 0
  2384  00000C                     _USBCheckMSDRequest$2319:
  2385                           	opt stack 0
  2386  00000C                     MSDTransferTerminated@handle:
  2387                           	opt stack 0
  2388  00000C                     __ic2_display_set_address@data_array:
  2389                           	opt stack 0
  2390  00000C                     i2c_digipot_backlight@data_array:
  2391                           	opt stack 0
  2392  00000C                     parseHexFileEntry@data:
  2393                           	opt stack 0
  2394  00000C                     utoa@base:
  2395                           	opt stack 0
  2396  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2397                           	opt stack 0
  2398                           
  2399                           ; 4 bytes @ 0xB
  2400  00000C                     	ds	1
  2401  00000D                     ?__flash_get_status:
  2402                           	opt stack 0
  2403  00000D                     i2c_eeprom_writeByte@data:
  2404                           	opt stack 0
  2405  00000D                     __fill_buffer_get_display@cntr:
  2406                           	opt stack 0
  2407  00000D                     ___lldiv@counter:
  2408                           	opt stack 0
  2409  00000D                     memcpy@tmp:
  2410                           	opt stack 0
  2411  00000D                     internalFlash_addressWithinPage@page:
  2412                           	opt stack 0
  2413                           
  2414                           ; 2 bytes @ 0xC
  2415  00000D                     	ds	1
  2416  00000E                     ??_i2c_eeprom_writeByte:
  2417  00000E                     i2c_display_cursor@position:
  2418                           	opt stack 0
  2419  00000E                     __fill_buffer_get_display@line:
  2420                           	opt stack 0
  2421  00000E                     _USBCheckMSDRequest$2320:
  2422                           	opt stack 0
  2423  00000E                     _MSDTransferTerminated$2407:
  2424                           	opt stack 0
  2425  00000E                     utoa@v:
  2426                           	opt stack 0
  2427  00000E                     parseHexFileEntry@offset:
  2428                           	opt stack 0
  2429  00000E                     internalFlash_read@address:
  2430                           	opt stack 0
  2431                           
  2432                           ; 4 bytes @ 0xD
  2433  00000E                     	ds	1
  2434  00000F                     ??_internalFlash_addressWithinPage:
  2435  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2436                           	opt stack 0
  2437  00000F                     i2c_display_cursor@line:
  2438                           	opt stack 0
  2439  00000F                     __flash_get_status@command:
  2440                           	opt stack 0
  2441  00000F                     __fill_buffer_get_display@start_line:
  2442                           	opt stack 0
  2443                           
  2444                           ; 1 bytes @ 0xE
  2445  00000F                     	ds	1
  2446  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2447                           	opt stack 0
  2448  000010                     __i2c_read@slave_address:
  2449                           	opt stack 0
  2450  000010                     i2c_display_cursor@address:
  2451                           	opt stack 0
  2452  000010                     __fill_buffer_get_display@position:
  2453                           	opt stack 0
  2454  000010                     utoa@c:
  2455                           	opt stack 0
  2456  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2457                           	opt stack 0
  2458  000010                     __flash_get_status@status:
  2459                           	opt stack 0
  2460  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2461                           	opt stack 0
  2462                           
  2463                           ; 2 bytes @ 0xF
  2464  000010                     	ds	1
  2465  000011                     MSDCheckForErrorCases@DeviceNoData:
  2466                           	opt stack 0
  2467  000011                     __i2c_read@cntr:
  2468                           	opt stack 0
  2469  000011                     i2c_eeprom_writeByte@dat:
  2470                           	opt stack 0
  2471  000011                     itoa@buf:
  2472                           	opt stack 0
  2473                           
  2474                           ; 2 bytes @ 0x10
  2475  000011                     	ds	1
  2476  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2477                           	opt stack 0
  2478  000012                     i2c_eeprom_readByte@address:
  2479                           	opt stack 0
  2480  000012                     __flash_is_busy@status:
  2481                           	opt stack 0
  2482  000012                     parseHexFileEntry@hexEntry:
  2483                           	opt stack 0
  2484  000012                     internalFlash_read@data_length:
  2485                           	opt stack 0
  2486                           
  2487                           ; 2 bytes @ 0x11
  2488  000012                     	ds	1
  2489  000013                     i2c_eeprom_writeByte@slave_address:
  2490                           	opt stack 0
  2491  000013                     itoa@val:
  2492                           	opt stack 0
  2493  000013                     internalFlash_addressWithinPage@page_start_address:
  2494                           	opt stack 0
  2495                           
  2496                           ; 4 bytes @ 0x12
  2497  000013                     	ds	1
  2498  000014                     ??_i2c_eeprom_readByte:
  2499  000014                     ??_parseHexFileEntry:
  2500  000014                     flash_is_busy@result:
  2501                           	opt stack 0
  2502  000014                     __parse_command_short@cmd:
  2503                           	opt stack 0
  2504  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2505                           	opt stack 0
  2506  000014                     __flash_copy_page_to_buffer@page:
  2507                           	opt stack 0
  2508  000014                     __flash_compare_page_to_buffer@page:
  2509                           	opt stack 0
  2510  000014                     __flash_write_to_buffer@start:
  2511                           	opt stack 0
  2512  000014                     __flash_write_page_from_buffer@page:
  2513                           	opt stack 0
  2514  000014                     internalFlash_read@buffer:
  2515                           	opt stack 0
  2516  000014                     __flash_set_page_size@command:
  2517                           	opt stack 0
  2518                           
  2519                           ; 4 bytes @ 0x13
  2520  000014                     	ds	1
  2521  000015                     __flash_partial_read@page:
  2522                           	opt stack 0
  2523  000015                     __fill_buffer_get_status@outBuffer:
  2524                           	opt stack 0
  2525  000015                     itoa@base:
  2526                           	opt stack 0
  2527                           
  2528                           ; 2 bytes @ 0x14
  2529  000015                     	ds	1
  2530  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2531  000016                     __flash_copy_page_to_buffer@buffer:
  2532                           	opt stack 0
  2533  000016                     __flash_compare_page_to_buffer@buffer:
  2534                           	opt stack 0
  2535  000016                     __flash_write_page_from_buffer@buffer:
  2536                           	opt stack 0
  2537  000016                     __flash_write_to_buffer@data:
  2538                           	opt stack 0
  2539  000016                     internalFlash_readPage@page:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x15
  2543  000016                     	ds	1
  2544  000017                     ??__flash_copy_page_to_buffer:
  2545  000017                     ??__flash_compare_page_to_buffer:
  2546  000017                     ??__flash_write_page_from_buffer:
  2547  000017                     i2c_eeprom_readByte@slave_address:
  2548                           	opt stack 0
  2549  000017                     __flash_partial_read@start:
  2550                           	opt stack 0
  2551  000017                     itoa@cp:
  2552                           	opt stack 0
  2553                           
  2554                           ; 2 bytes @ 0x16
  2555  000017                     	ds	1
  2556  000018                     ??_USBStdFeatureReqHandler:
  2557  000018                     USBStdSetCfgHandler@i:
  2558                           	opt stack 0
  2559  000018                     i2c_eeprom_readByte@addr:
  2560                           	opt stack 0
  2561  000018                     __flash_set_page_size@size:
  2562                           	opt stack 0
  2563  000018                     __flash_write_to_buffer@data_length:
  2564                           	opt stack 0
  2565  000018                     internalFlash_readPage@address:
  2566                           	opt stack 0
  2567                           
  2568                           ; 4 bytes @ 0x17
  2569  000018                     	ds	1
  2570  000019                     USBStdFeatureReqHandler@pUEP:
  2571                           	opt stack 0
  2572  000019                     __flash_partial_read@length:
  2573                           	opt stack 0
  2574  000019                     __display_itoa_u16@value:
  2575                           	opt stack 0
  2576                           
  2577                           ; 4 bytes @ 0x18
  2578  000019                     	ds	1
  2579  00001A                     __flash_write_to_buffer@buffer:
  2580                           	opt stack 0
  2581  00001A                     __flash_compare_page_to_buffer@status:
  2582                           	opt stack 0
  2583  00001A                     __flash_copy_page_to_buffer@command:
  2584                           	opt stack 0
  2585  00001A                     __flash_write_page_from_buffer@command:
  2586                           	opt stack 0
  2587                           
  2588                           ; 4 bytes @ 0x19
  2589  00001A                     	ds	1
  2590  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2591                           	opt stack 0
  2592  00001B                     __flash_partial_read@data:
  2593                           	opt stack 0
  2594  00001B                     __flash_write_to_buffer@command:
  2595                           	opt stack 0
  2596                           
  2597                           ; 4 bytes @ 0x1A
  2598  00001B                     	ds	1
  2599  00001C                     parseHexFileEntry@i:
  2600                           	opt stack 0
  2601  00001C                     USBStdFeatureReqHandler@p:
  2602                           	opt stack 0
  2603  00001C                     __flash_compare_page_to_buffer@command:
  2604                           	opt stack 0
  2605                           
  2606                           ; 4 bytes @ 0x1B
  2607  00001C                     	ds	1
  2608  00001D                     ??__flash_partial_read:
  2609  00001D                     __display_itoa_u16@text:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x1C
  2613  00001D                     	ds	1
  2614  00001E                     ??_USBCtrlEPService:
  2615  00001E                     
  2616                           ; 1 bytes @ 0x1D
  2617  00001E                     	ds	1
  2618  00001F                     ??__display_verify:
  2619  00001F                     ??__display_checked:
  2620  00001F                     __display_programming@cntr:
  2621                           	opt stack 0
  2622  00001F                     __display_done@cntr:
  2623                           	opt stack 0
  2624  00001F                     __display_itoa_u32@value:
  2625                           	opt stack 0
  2626                           
  2627                           ; 4 bytes @ 0x1E
  2628  00001F                     	ds	1
  2629  000020                     USBDeviceTasks@i:
  2630                           	opt stack 0
  2631  000020                     flash_page_write@page:
  2632                           	opt stack 0
  2633  000020                     flash_partial_write@page:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0x1F
  2637  000020                     	ds	1
  2638  000021                     __display_verify@cntr:
  2639                           	opt stack 0
  2640  000021                     __display_checked@start:
  2641                           	opt stack 0
  2642  000021                     __flash_partial_read@command:
  2643                           	opt stack 0
  2644                           
  2645                           ; 4 bytes @ 0x20
  2646  000021                     	ds	1
  2647  000022                     __display_checked@cntr:
  2648                           	opt stack 0
  2649  000022                     flash_page_write@data:
  2650                           	opt stack 0
  2651  000022                     flash_partial_write@start:
  2652                           	opt stack 0
  2653                           
  2654                           ; 2 bytes @ 0x21
  2655  000022                     	ds	1
  2656  000023                     __display_itoa_u32@text:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0x22
  2660  000023                     	ds	1
  2661  000024                     flash_page_write@match:
  2662                           	opt stack 0
  2663  000024                     flash_partial_write@length:
  2664                           	opt stack 0
  2665                           
  2666                           ; 2 bytes @ 0x23
  2667  000024                     	ds	1
  2668  000025                     ??__display_found:
  2669  000025                     __display_failed@cntr:
  2670                           	opt stack 0
  2671  000025                     ExternalFlash_SectorWrite@config:
  2672                           	opt stack 0
  2673  000025                     fat_format@cntr:
  2674                           	opt stack 0
  2675  000025                     __flash_partial_read@address:
  2676                           	opt stack 0
  2677                           
  2678                           ; 4 bytes @ 0x24
  2679  000025                     	ds	1
  2680  000026                     flash_partial_write@data:
  2681                           	opt stack 0
  2682                           
  2683                           ; 2 bytes @ 0x25
  2684  000026                     	ds	1
  2685  000027                     __display_found@start:
  2686                           	opt stack 0
  2687  000027                     ExternalFlash_SectorWrite@sector_addr:
  2688                           	opt stack 0
  2689                           
  2690                           ; 4 bytes @ 0x26
  2691  000027                     	ds	1
  2692  000028                     __display_found@cntr:
  2693                           	opt stack 0
  2694  000028                     flash_partial_write@match:
  2695                           	opt stack 0
  2696                           
  2697                           ; 1 bytes @ 0x27
  2698  000028                     	ds	1
  2699  000029                     ??_display_prepare:
  2700  000029                     ??__delete_root:
  2701  000029                     flash_page_read@page:
  2702                           	opt stack 0
  2703  000029                     flash_partial_read@page:
  2704                           	opt stack 0
  2705  000029                     __write_fat@cluster:
  2706                           	opt stack 0
  2707  000029                     __write_root@data:
  2708                           	opt stack 0
  2709                           
  2710                           ; 2 bytes @ 0x28
  2711  000029                     	ds	1
  2712  00002A                     __delete_root@root_sector:
  2713                           	opt stack 0
  2714                           
  2715                           ; 2 bytes @ 0x29
  2716  00002A                     	ds	1
  2717  00002B                     ??__write_root:
  2718  00002B                     display_prepare@mode:
  2719                           	opt stack 0
  2720  00002B                     flash_page_read@data:
  2721                           	opt stack 0
  2722  00002B                     flash_partial_read@start:
  2723                           	opt stack 0
  2724  00002B                     ExternalFlash_SectorWrite@buffer:
  2725                           	opt stack 0
  2726  00002B                     __write_fat@value:
  2727                           	opt stack 0
  2728                           
  2729                           ; 2 bytes @ 0x2A
  2730  00002B                     	ds	1
  2731  00002C                     __write_root@root_sector:
  2732                           	opt stack 0
  2733  00002C                     __delete_root@offset:
  2734                           	opt stack 0
  2735                           
  2736                           ; 2 bytes @ 0x2B
  2737  00002C                     	ds	1
  2738  00002D                     ??_fat_get_format_status:
  2739  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2740                           	opt stack 0
  2741  00002D                     flash_partial_read@length:
  2742                           	opt stack 0
  2743  00002D                     ExternalFlash_SectorRead@config:
  2744                           	opt stack 0
  2745  00002D                     __write_fat@fat_sector:
  2746                           	opt stack 0
  2747                           
  2748                           ; 2 bytes @ 0x2C
  2749  00002D                     	ds	1
  2750  00002E                     __delete_root@deleted_value:
  2751                           	opt stack 0
  2752  00002E                     ExternalFlash_SectorWrite@page:
  2753                           	opt stack 0
  2754  00002E                     __write_root@offset:
  2755                           	opt stack 0
  2756                           
  2757                           ; 2 bytes @ 0x2D
  2758  00002E                     	ds	1
  2759  00002F                     __delete_root@slot:
  2760                           	opt stack 0
  2761  00002F                     flash_partial_read@data:
  2762                           	opt stack 0
  2763  00002F                     __write_fat@offset:
  2764                           	opt stack 0
  2765  00002F                     fat_get_format_status@cntr:
  2766                           	opt stack 0
  2767  00002F                     ExternalFlash_SectorRead@sector_addr:
  2768                           	opt stack 0
  2769                           
  2770                           ; 4 bytes @ 0x2E
  2771  00002F                     	ds	1
  2772  000030                     ??_MSDWriteHandler:
  2773  000030                     __write_root@slot:
  2774                           	opt stack 0
  2775                           
  2776                           ; 1 bytes @ 0x2F
  2777  000030                     	ds	1
  2778  000031                     ??__root_is_available:
  2779  000031                     ?__get_empty_cluster:
  2780                           	opt stack 0
  2781  000031                     ?_fat_get_empty_clusters:
  2782                           	opt stack 0
  2783  000031                     ?__read_fat:
  2784                           	opt stack 0
  2785  000031                     ?__get_first_cluster:
  2786                           	opt stack 0
  2787  000031                     ?_fat_get_file_size:
  2788                           	opt stack 0
  2789  000031                     __get_empty_cluster@first_cluster:
  2790                           	opt stack 0
  2791  000031                     fat_get_empty_clusters@maximum:
  2792                           	opt stack 0
  2793  000031                     __read_fat@cluster:
  2794                           	opt stack 0
  2795  000031                     fat_find_file@name:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x30
  2799  000031                     	ds	1
  2800  000032                     __root_is_available@root_sector:
  2801                           	opt stack 0
  2802                           
  2803                           ; 2 bytes @ 0x31
  2804  000032                     	ds	1
  2805  000033                     ??__get_first_cluster:
  2806  000033                     ExternalFlash_SectorRead@buffer:
  2807                           	opt stack 0
  2808  000033                     __get_empty_cluster@fat_sector:
  2809                           	opt stack 0
  2810  000033                     fat_get_empty_clusters@fat_sector:
  2811                           	opt stack 0
  2812  000033                     __read_fat@fat_sector:
  2813                           	opt stack 0
  2814  000033                     fat_find_file@extension:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x32
  2818  000033                     	ds	1
  2819  000034                     __root_is_available@offset:
  2820                           	opt stack 0
  2821  000034                     __get_first_cluster@sector:
  2822                           	opt stack 0
  2823                           
  2824                           ; 2 bytes @ 0x33
  2825  000034                     	ds	1
  2826  000035                     ??_fat_get_file_size:
  2827  000035                     ExternalFlash_SectorRead@page:
  2828                           	opt stack 0
  2829  000035                     __get_empty_cluster@offset:
  2830                           	opt stack 0
  2831  000035                     fat_get_empty_clusters@offset:
  2832                           	opt stack 0
  2833  000035                     __read_fat@offset:
  2834                           	opt stack 0
  2835  000035                     fat_find_file@buffer:
  2836                           	opt stack 0
  2837                           
  2838                           ; 11 bytes @ 0x34
  2839  000035                     	ds	1
  2840  000036                     __root_is_available@file_number:
  2841                           	opt stack 0
  2842  000036                     __get_first_cluster@offset:
  2843                           	opt stack 0
  2844  000036                     fat_get_file_size@sector:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x35
  2848  000036                     	ds	1
  2849  000037                     ??_MSDReadHandler:
  2850  000037                     __root_is_available@first_byte:
  2851                           	opt stack 0
  2852  000037                     __get_empty_cluster@value:
  2853                           	opt stack 0
  2854  000037                     fat_get_empty_clusters@value:
  2855                           	opt stack 0
  2856  000037                     __read_fat@value:
  2857                           	opt stack 0
  2858                           
  2859                           ; 2 bytes @ 0x36
  2860  000037                     	ds	1
  2861  000038                     __get_available_root_entry@file_number:
  2862                           	opt stack 0
  2863  000038                     __get_first_cluster@first_cluster:
  2864                           	opt stack 0
  2865  000038                     fat_get_file_information@data:
  2866                           	opt stack 0
  2867  000038                     fat_get_file_size@file_size:
  2868                           	opt stack 0
  2869                           
  2870                           ; 4 bytes @ 0x37
  2871  000038                     	ds	1
  2872  000039                     __get_empty_cluster@cluster:
  2873                           	opt stack 0
  2874  000039                     fat_get_empty_clusters@empty_clusters:
  2875                           	opt stack 0
  2876                           
  2877                           ; 2 bytes @ 0x38
  2878  000039                     	ds	1
  2879  00003A                     ??_fat_get_file_information:
  2880  00003A                     __get_first_cluster@slot:
  2881                           	opt stack 0
  2882                           
  2883                           ; 1 bytes @ 0x39
  2884  00003A                     	ds	1
  2885  00003B                     ??_MSDProcessCommandMediaPresent:
  2886  00003B                     fat_get_empty_clusters@cluster:
  2887                           	opt stack 0
  2888  00003B                     fat_delete_file@next_cluster:
  2889                           	opt stack 0
  2890  00003B                     fat_get_file_information@root_sector:
  2891                           	opt stack 0
  2892                           
  2893                           ; 2 bytes @ 0x3A
  2894  00003B                     	ds	1
  2895  00003C                     fat_get_file_size@offset:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x3B
  2899  00003C                     	ds	1
  2900  00003D                     _MSDProcessCommandMediaPresent$2390:
  2901                           	opt stack 0
  2902  00003D                     fat_delete_file@first_cluster:
  2903                           	opt stack 0
  2904  00003D                     fat_get_file_information@offset:
  2905                           	opt stack 0
  2906                           
  2907                           ; 2 bytes @ 0x3C
  2908  00003D                     	ds	1
  2909  00003E                     fat_get_file_size@file_number:
  2910                           	opt stack 0
  2911                           
  2912                           ; 1 bytes @ 0x3D
  2913  00003E                     	ds	1
  2914  00003F                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2915                           	opt stack 0
  2916  00003F                     fat_delete_file@file_number:
  2917                           	opt stack 0
  2918  00003F                     fat_get_file_information@file_number:
  2919                           	opt stack 0
  2920                           
  2921                           ; 1 bytes @ 0x3E
  2922  00003F                     	ds	1
  2923  000040                     fat_find_file@slot:
  2924                           	opt stack 0
  2925  000040                     fat_append_to_file@number_of_bytes:
  2926                           	opt stack 0
  2927  000040                     fat_rename_file@name:
  2928                           	opt stack 0
  2929  000040                     __fill_buffer_get_file_details@inBuffer:
  2930                           	opt stack 0
  2931  000040                     __parse_file_delete@data:
  2932                           	opt stack 0
  2933  000040                     MSDProcessCommandMediaPresent@sectorSize:
  2934                           	opt stack 0
  2935  000040                     fat_read_from_file@start_byte:
  2936                           	opt stack 0
  2937                           
  2938                           ; 4 bytes @ 0x3F
  2939  000040                     	ds	1
  2940  000041                     fat_find_file@sector:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x40
  2944  000041                     	ds	1
  2945  000042                     fat_append_to_file@data:
  2946                           	opt stack 0
  2947  000042                     fat_rename_file@extension:
  2948                           	opt stack 0
  2949  000042                     __fill_buffer_get_file_details@outBuffer:
  2950                           	opt stack 0
  2951                           
  2952                           ; 2 bytes @ 0x41
  2953  000042                     	ds	1
  2954  000043                     fat_find_file@offset:
  2955                           	opt stack 0
  2956                           
  2957                           ; 2 bytes @ 0x42
  2958  000043                     	ds	1
  2959  000044                     ??_fat_append_to_file:
  2960  000044                     __fill_buffer_get_file_details@file_number:
  2961                           	opt stack 0
  2962  000044                     __parse_file_rename@data:
  2963                           	opt stack 0
  2964  000044                     MSDProcessCommandMediaPresent@capacity:
  2965                           	opt stack 0
  2966  000044                     fat_read_from_file@length:
  2967                           	opt stack 0
  2968                           
  2969                           ; 4 bytes @ 0x43
  2970  000044                     	ds	1
  2971  000045                     fat_create_file@name:
  2972                           	opt stack 0
  2973  000045                     __fill_buffer_find_file@inBuffer:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x44
  2977  000045                     	ds	1
  2978  000046                     
  2979                           ; 1 bytes @ 0x45
  2980  000046                     	ds	1
  2981  000047                     fat_create_file@extension:
  2982                           	opt stack 0
  2983  000047                     __fill_buffer_find_file@outBuffer:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x46
  2987  000047                     	ds	1
  2988  000048                     MSDProcessCommandMediaPresent@i:
  2989                           	opt stack 0
  2990  000048                     fat_read_from_file@data:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x47
  2994  000048                     	ds	1
  2995  000049                     ??_MSDProcessCommand:
  2996  000049                     ??__fill_buffer_find_file:
  2997  000049                     fat_create_file@size:
  2998                           	opt stack 0
  2999                           
  3000                           ; 4 bytes @ 0x48
  3001  000049                     	ds	1
  3002  00004A                     ??_fat_read_from_file:
  3003                           
  3004                           ; 1 bytes @ 0x49
  3005  00004A                     	ds	2
  3006  00004C                     __parse_file_append@data:
  3007                           	opt stack 0
  3008                           
  3009                           ; 2 bytes @ 0x4B
  3010  00004C                     	ds	1
  3011  00004D                     ??_fat_create_file:
  3012  00004D                     __fill_buffer_find_file@cntr:
  3013                           	opt stack 0
  3014                           
  3015                           ; 1 bytes @ 0x4C
  3016  00004D                     	ds	1
  3017  00004E                     ??__parse_file_append:
  3018  00004E                     ??_MSDTasks:
  3019                           
  3020                           ; 1 bytes @ 0x4D
  3021  00004E                     	ds	1
  3022  00004F                     _MSDTasks$2372:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x4E
  3026  00004F                     	ds	2
  3027  000051                     _MSDTasks$2373:
  3028                           	opt stack 0
  3029  000051                     __parse_file_create@data:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x50
  3033  000051                     	ds	2
  3034  000053                     MSDTasks@i:
  3035                           	opt stack 0
  3036                           
  3037                           ; 1 bytes @ 0x52
  3038  000053                     	ds	1
  3039  000054                     __parse_command_long@data:
  3040                           	opt stack 0
  3041                           
  3042                           ; 2 bytes @ 0x53
  3043  000054                     	ds	2
  3044  000056                     ??__bootloader_verify_file:
  3045  000056                     ??__bootloader_program:
  3046  000056                     __parse_command_long@length:
  3047                           	opt stack 0
  3048  000056                     __fill_buffer_read_file@inBuffer:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x55
  3052  000056                     	ds	1
  3053  000057                     ??_api_parse:
  3054                           
  3055                           ; 1 bytes @ 0x56
  3056  000057                     	ds	1
  3057  000058                     __fill_buffer_read_file@outBuffer:
  3058                           	opt stack 0
  3059                           
  3060                           ; 2 bytes @ 0x57
  3061  000058                     	ds	1
  3062  000059                     api_parse@idx:
  3063                           	opt stack 0
  3064                           
  3065                           ; 1 bytes @ 0x58
  3066  000059                     	ds	1
  3067  00005A                     ??__fill_buffer_read_file:
  3068                           
  3069                           ; 1 bytes @ 0x59
  3070  00005A                     	ds	4
  3071  00005E                     bootloader_run@timeslot:
  3072                           	opt stack 0
  3073  00005E                     api_prepare@command:
  3074                           	opt stack 0
  3075                           
  3076                           ; 1 bytes @ 0x5D
  3077  00005E                     	ds	1
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           postdec1	equ	0xFE5
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           
  3088 ;;
  3089 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3090 ;;
  3091 ;; *************** function _main *****************
  3092 ;; Defined at:
  3093 ;;		line 53 in file "main.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;Total ram usage:        2 bytes
  3112 ;; Hardware stack levels required when called:   14
  3113 ;; This function calls:
  3114 ;;		_APP_DeviceCustomHIDTasks
  3115 ;;		_APP_DeviceMSDTasks
  3116 ;;		_SYSTEM_Initialize
  3117 ;;		_USBDeviceInit
  3118 ;;		_USBDeviceTasks
  3119 ;;		__normal_mode
  3120 ;;		_bootloader_run
  3121 ;;		_display_prepare
  3122 ;;		_display_update
  3123 ;;		_system_init
  3124 ;;		_timer_pseudo_isr
  3125 ;;		_ui_get_status
  3126 ;;		_ui_run
  3127 ;; This function is called by:
  3128 ;;		Startup code after reset
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text0
  3133  0048F8                     __ptext0:
  3134                           	opt stack 0
  3135  0048F8                     _main:
  3136                           	opt stack 17
  3137                           
  3138                           ;main.c: 57: system_init();
  3139                           
  3140                           ;incstack = 0
  3141  0048F8  EC3D  F033         	call	_system_init	;wreg free
  3142                           
  3143                           ;main.c: 60: if(_normal_mode())
  3144  0048FC  ECF9  F035         	call	__normal_mode	;wreg free
  3145  004900  0900               	iorlw	0
  3146  004902  A4D8               	btfss	status,2,c
  3147  004904  EF00 F048          	goto	36864	; ;# 
  3148                           
  3149                           ;main.c: 66: };main.c: 70: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3150  004908  0E00               	movlw	0
  3151  00490A  ECAC  F037         	call	_SYSTEM_Initialize
  3152                           
  3153                           ;main.c: 71: USBDeviceInit();
  3154  00490E  ECE8  F01B         	call	_USBDeviceInit	;wreg free
  3155  004912                     
  3156                           ;main.c: 77: {;main.c: 81: USBDeviceTasks();
  3157  004912  EC84  F01A         	call	_USBDeviceTasks	;wreg free
  3158                           
  3159                           ;main.c: 82: APP_DeviceMSDTasks();
  3160  004916  EC48  F03D         	call	_APP_DeviceMSDTasks	;wreg free
  3161                           
  3162                           ;main.c: 83: APP_DeviceCustomHIDTasks();
  3163  00491A  EC3B  F02A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3164                           
  3165                           ;main.c: 87: timer_pseudo_isr();
  3166  00491E  ECB2  F03A         	call	_timer_pseudo_isr	;wreg free
  3167                           
  3168                           ;main.c: 91: if(!os.done)
  3169  004922  0100               	movlb	0	; () banked
  3170  004924  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3171  004926  A4D8               	btfss	status,2,c
  3172  004928  D7F4               	goto	l858
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;main.c: 92: {;main.c: 94: ui_run();
  3176  00492A  EC51  F025         	call	_ui_run	;wreg free
  3177                           
  3178                           ;main.c: 99: switch(os.timeSlot&0b00000111)
  3179  00492E  D02A               	goto	l860
  3180  004930                     
  3181                           ;main.c: 102: bootloader_run(0);
  3182  004930  0E00               	movlw	0
  3183  004932  EC78  F038         	call	_bootloader_run
  3184                           
  3185                           ;main.c: 103: break;
  3186  004936  D048               	goto	l862
  3187  004938                     
  3188                           ;main.c: 106: bootloader_run(1);
  3189  004938  0E01               	movlw	1
  3190  00493A  EC78  F038         	call	_bootloader_run
  3191                           
  3192                           ;main.c: 107: break;
  3193  00493E  D044               	goto	l862
  3194  004940                     
  3195                           ;main.c: 110: bootloader_run(2);
  3196  004940  0E02               	movlw	2
  3197  004942  EC78  F038         	call	_bootloader_run
  3198                           
  3199                           ;main.c: 111: break;
  3200  004946  D040               	goto	l862
  3201  004948                     
  3202                           ;main.c: 114: bootloader_run(3);
  3203  004948  0E03               	movlw	3
  3204  00494A  EC78  F038         	call	_bootloader_run
  3205                           
  3206                           ;main.c: 115: break;
  3207  00494E  D03C               	goto	l862
  3208  004950                     
  3209                           ;main.c: 118: bootloader_run(4);
  3210  004950  0E04               	movlw	4
  3211  004952  EC78  F038         	call	_bootloader_run
  3212                           
  3213                           ;main.c: 119: break;
  3214  004956  D038               	goto	l862
  3215  004958                     
  3216                           ;main.c: 122: bootloader_run(5);
  3217  004958  0E05               	movlw	5
  3218  00495A  EC78  F038         	call	_bootloader_run
  3219                           
  3220                           ;main.c: 123: break;
  3221  00495E  D034               	goto	l862
  3222  004960                     
  3223                           ;main.c: 126: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3224  004960  ECD0  F03D         	call	_ui_get_status	;wreg free
  3225  004964  0A05               	xorlw	5
  3226  004966  A4D8               	btfss	status,2,c
  3227  004968  D02F               	goto	l862
  3228                           
  3229                           ;main.c: 127: {;main.c: 128: display_prepare(os.display_mode);
  3230  00496A  0100               	movlb	0	; () banked
  3231  00496C  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3232  00496E  EC20  F026         	call	_display_prepare
  3233                           
  3234                           ;main.c: 129: };main.c: 130: break;
  3235  004972  D02A               	goto	l862
  3236  004974                     
  3237                           ;main.c: 133: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3238  004974  ECD0  F03D         	call	_ui_get_status	;wreg free
  3239  004978  0A05               	xorlw	5
  3240  00497A  A4D8               	btfss	status,2,c
  3241  00497C  D025               	goto	l862
  3242                           
  3243                           ;main.c: 134: {;main.c: 135: display_update();
  3244  00497E  EC72  F033         	call	_display_update	;wreg free
  3245                           
  3246                           ;main.c: 138: }
  3247                           
  3248                           ;main.c: 136: };main.c: 137: break;
  3249  004982  D022               	goto	l862
  3250  004984                     l860:
  3251  004984  0100               	movlb	0	; () banked
  3252  004986  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3253  004988  0B07               	andlw	7
  3254  00498A  6FFD               	movwf	??_main& (0+255),b
  3255  00498C  6BFE               	clrf	(??_main+1)& (0+255),b
  3256                           
  3257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3258                           ; Switch size 1, requested type "space"
  3259                           ; Number of cases is 1, Range of values is 0 to 0
  3260                           ; switch strategies available:
  3261                           ; Name         Instructions Cycles
  3262                           ; simple_byte            4     3 (average)
  3263                           ;	Chosen strategy is simple_byte
  3264  00498E  51FE               	movf	(??_main+1)& (0+255),w,b
  3265  004990  0A00               	xorlw	0	; case 0
  3266  004992  A4D8               	btfss	status,2,c
  3267  004994  D019               	goto	l862
  3268                           
  3269                           ; BSR set to: 0
  3270                           ; Switch size 1, requested type "space"
  3271                           ; Number of cases is 8, Range of values is 0 to 7
  3272                           ; switch strategies available:
  3273                           ; Name         Instructions Cycles
  3274                           ; simple_byte           25    13 (average)
  3275                           ;	Chosen strategy is simple_byte
  3276  004996  51FD               	movf	??_main& (0+255),w,b
  3277  004998  0A00               	xorlw	0	; case 0
  3278  00499A  B4D8               	btfsc	status,2,c
  3279  00499C  D7C9               	goto	l861
  3280  00499E  0A01               	xorlw	1	; case 1
  3281  0049A0  B4D8               	btfsc	status,2,c
  3282  0049A2  D7CA               	goto	l863
  3283  0049A4  0A03               	xorlw	3	; case 2
  3284  0049A6  B4D8               	btfsc	status,2,c
  3285  0049A8  D7CB               	goto	l864
  3286  0049AA  0A01               	xorlw	1	; case 3
  3287  0049AC  B4D8               	btfsc	status,2,c
  3288  0049AE  D7CC               	goto	l865
  3289  0049B0  0A07               	xorlw	7	; case 4
  3290  0049B2  B4D8               	btfsc	status,2,c
  3291  0049B4  D7CD               	goto	l866
  3292  0049B6  0A01               	xorlw	1	; case 5
  3293  0049B8  B4D8               	btfsc	status,2,c
  3294  0049BA  D7CE               	goto	l867
  3295  0049BC  0A03               	xorlw	3	; case 6
  3296  0049BE  B4D8               	btfsc	status,2,c
  3297  0049C0  D7CF               	goto	l868
  3298  0049C2  0A01               	xorlw	1	; case 7
  3299  0049C4  B4D8               	btfsc	status,2,c
  3300  0049C6  D7D6               	goto	l870
  3301  0049C8                     l862:
  3302                           
  3303                           ;main.c: 139: os.done = 1;
  3304                           
  3305                           ; BSR set to: 0
  3306  0049C8  0E01               	movlw	1
  3307  0049CA  0100               	movlb	0	; () banked
  3308  0049CC  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3309                           
  3310                           ; BSR set to: 0
  3311                           
  3312                           ; BSR set to: 0
  3313  0049CE  D7A1               	goto	l858
  3314  0049D0                     __end_of_main:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           postinc0	equ	0xFEE
  3321                           wreg	equ	0xFE8
  3322                           postdec1	equ	0xFE5
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           status	equ	0xFD8
  3326                           
  3327 ;; *************** function _ui_run *****************
  3328 ;; Defined at:
  3329 ;;		line 87 in file "ui.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    3
  3350 ;; This function calls:
  3351 ;;		__ui_encoder
  3352 ;;		_i2c_digipot_backlight
  3353 ;;		_i2c_digipot_reset_off
  3354 ;;		_i2c_digipot_reset_on
  3355 ;;		_i2c_display_send_init_sequence
  3356 ;;		_system_encoder_enable
  3357 ;;		_ui_init
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text1
  3364  004AA2                     __ptext1:
  3365                           	opt stack 0
  3366  004AA2                     _ui_run:
  3367                           	opt stack 27
  3368                           
  3369                           ;ui.c: 89: switch(userInterfaceStatus)
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;incstack = 0
  3373  004AA2  D052               	goto	l1240
  3374  004AA4                     
  3375                           ;ui.c: 93: if (os.buttonCount!=0)
  3376  004AA4  0100               	movlb	0	; () banked
  3377  004AA6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3378  004AA8  B4D8               	btfsc	status,2,c
  3379  004AAA  0012               	return	
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;ui.c: 94: {;ui.c: 95: ui_init();
  3383  004AAC  EC3F  F03D         	call	_ui_init	;wreg free
  3384                           
  3385                           ;ui.c: 96: os.buttonCount = 0;
  3386  004AB0  0E00               	movlw	0
  3387  004AB2  0100               	movlb	0	; () banked
  3388  004AB4  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;ui.c: 97: };ui.c: 98: break;
  3392  004AB6  0012               	return	
  3393  004AB8                     l1244:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;ui.c: 102: LATDbits.LD0 = 0;
  3397  004AB8  908C               	bcf	3980,0,c	;volatile
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;ui.c: 104: system_ui_inactive_count = 0;
  3401  004ABA  0E00               	movlw	0
  3402  004ABC  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3403  004ABE  0E00               	movlw	0
  3404  004AC0  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3405                           
  3406                           ;ui.c: 105: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3407  004AC2  0E02               	movlw	2
  3408  004AC4  6F9E               	movwf	_userInterfaceStatus& (0+255),b
  3409                           
  3410                           ;ui.c: 106: break;
  3411  004AC6  0012               	return	
  3412  004AC8                     
  3413                           ; BSR set to: 0
  3414                           ;ui.c: 110: i2c_digipot_reset_on();
  3415                           
  3416                           ; BSR set to: 0
  3417  004AC8  EC84  F03C         	call	_i2c_digipot_reset_on	;wreg free
  3418                           
  3419                           ;ui.c: 112: system_ui_inactive_count = 0;
  3420  004ACC  0E00               	movlw	0
  3421  004ACE  0100               	movlb	0	; () banked
  3422  004AD0  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3423  004AD2  0E00               	movlw	0
  3424  004AD4  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;ui.c: 113: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3428  004AD6  0E03               	movlw	3
  3429  004AD8  6F9E               	movwf	_userInterfaceStatus& (0+255),b
  3430                           
  3431                           ;ui.c: 114: break;
  3432  004ADA  0012               	return	
  3433  004ADC                     
  3434                           ; BSR set to: 0
  3435                           ;ui.c: 117: ++system_ui_inactive_count;
  3436                           
  3437                           ; BSR set to: 0
  3438  004ADC  4B86               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3439  004ADE  2B87               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;ui.c: 119: if (system_ui_inactive_count>3)
  3443  004AE0  5187               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3444  004AE2  E104               	bnz	u11380
  3445  004AE4  0E04               	movlw	4
  3446  004AE6  5D86               	subwf	_system_ui_inactive_count& (0+255),w,b
  3447  004AE8  A0D8               	btfss	status,0,c
  3448  004AEA  0012               	return	
  3449  004AEC                     u11380:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;ui.c: 120: {;ui.c: 121: i2c_digipot_reset_off();
  3453  004AEC  EC95  F03C         	call	_i2c_digipot_reset_off	;wreg free
  3454                           
  3455                           ;ui.c: 122: system_ui_inactive_count = 0;
  3456  004AF0  0E00               	movlw	0
  3457  004AF2  0100               	movlb	0	; () banked
  3458  004AF4  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3459  004AF6  0E00               	movlw	0
  3460  004AF8  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;ui.c: 123: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3464  004AFA  0E04               	movlw	4
  3465  004AFC  6F9E               	movwf	_userInterfaceStatus& (0+255),b
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;ui.c: 124: };ui.c: 125: break;
  3469  004AFE  0012               	return	
  3470  004B00                     
  3471                           ; BSR set to: 0
  3472                           ;ui.c: 129: i2c_display_send_init_sequence();
  3473                           
  3474                           ; BSR set to: 0
  3475  004B00  EC93  F03B         	call	_i2c_display_send_init_sequence	;wreg free
  3476                           
  3477                           ;ui.c: 131: i2c_digipot_backlight(150);
  3478  004B04  0E96               	movlw	150
  3479  004B06  EC28  F03C         	call	_i2c_digipot_backlight
  3480                           
  3481                           ;ui.c: 133: system_encoder_enable();
  3482  004B0A  EC63  F03D         	call	_system_encoder_enable	;wreg free
  3483                           
  3484                           ;ui.c: 135: system_ui_inactive_count = 0;
  3485  004B0E  0E00               	movlw	0
  3486  004B10  0100               	movlb	0	; () banked
  3487  004B12  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3488  004B14  0E00               	movlw	0
  3489  004B16  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3493  004B18  0E05               	movlw	5
  3494  004B1A  6F9E               	movwf	_userInterfaceStatus& (0+255),b
  3495                           
  3496                           ;ui.c: 137: break;
  3497  004B1C  0012               	return	
  3498  004B1E                     
  3499                           ; BSR set to: 0
  3500                           ;ui.c: 140: if (os.encoderCount==0 && os.buttonCount==0)
  3501                           
  3502                           ; BSR set to: 0
  3503  004B1E  5160               	movf	_os& (0+255),w,b	;volatile
  3504  004B20  A4D8               	btfss	status,2,c
  3505  004B22  D00B               	goto	l1250
  3506                           
  3507                           ; BSR set to: 0
  3508  004B24  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3509  004B26  A4D8               	btfss	status,2,c
  3510  004B28  D008               	goto	l1250
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;ui.c: 141: {;ui.c: 142: if(system_ui_inactive_count<0xFFFF)
  3514  004B2A  2986               	incf	_system_ui_inactive_count& (0+255),w,b
  3515  004B2C  E103               	bnz	u11410
  3516  004B2E  2987               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3517  004B30  B4D8               	btfsc	status,2,c
  3518  004B32  0012               	return	
  3519  004B34                     u11410:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;ui.c: 143: ++system_ui_inactive_count;
  3523  004B34  4B86               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3524  004B36  2B87               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;ui.c: 144: }
  3528  004B38  0012               	return	
  3529  004B3A                     l1250:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;ui.c: 145: else;ui.c: 146: {;ui.c: 147: system_ui_inactive_count = 0;
  3533                           
  3534                           ; BSR set to: 0
  3535  004B3A  0E00               	movlw	0
  3536  004B3C  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3537  004B3E  0E00               	movlw	0
  3538  004B40  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;ui.c: 148: _ui_encoder();
  3542  004B42  EC79  F031         	call	__ui_encoder	;wreg free
  3543                           
  3544                           ;ui.c: 151: }
  3545                           
  3546                           ;ui.c: 149: };ui.c: 150: break;
  3547  004B46  0012               	return	
  3548  004B48                     l1240:
  3549  004B48  0100               	movlb	0	; () banked
  3550  004B4A  519E               	movf	_userInterfaceStatus& (0+255),w,b
  3551                           
  3552                           ; Switch size 1, requested type "space"
  3553                           ; Number of cases is 6, Range of values is 0 to 5
  3554                           ; switch strategies available:
  3555                           ; Name         Instructions Cycles
  3556                           ; simple_byte           19    10 (average)
  3557                           ;	Chosen strategy is simple_byte
  3558  004B4C  0A00               	xorlw	0	; case 0
  3559  004B4E  B4D8               	btfsc	status,2,c
  3560  004B50  D7A9               	goto	l1241
  3561  004B52  0A01               	xorlw	1	; case 1
  3562  004B54  B4D8               	btfsc	status,2,c
  3563  004B56  D7B0               	goto	l1244
  3564  004B58  0A03               	xorlw	3	; case 2
  3565  004B5A  B4D8               	btfsc	status,2,c
  3566  004B5C  D7B5               	goto	l1245
  3567  004B5E  0A01               	xorlw	1	; case 3
  3568  004B60  B4D8               	btfsc	status,2,c
  3569  004B62  D7BC               	goto	l1246
  3570  004B64  0A07               	xorlw	7	; case 4
  3571  004B66  B4D8               	btfsc	status,2,c
  3572  004B68  D7CB               	goto	l1248
  3573  004B6A  0A01               	xorlw	1	; case 5
  3574  004B6C  A4D8               	btfss	status,2,c
  3575  004B6E  0012               	return	
  3576  004B70  D7D6               	goto	l1249
  3577  004B72                     __end_of_ui_run:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           postinc0	equ	0xFEE
  3584                           wreg	equ	0xFE8
  3585                           postdec1	equ	0xFE5
  3586                           fsr1h	equ	0xFE2
  3587                           fsr1l	equ	0xFE1
  3588                           status	equ	0xFD8
  3589                           
  3590 ;; *************** function _system_encoder_enable *****************
  3591 ;; Defined at:
  3592 ;;		line 94 in file "os.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_ui_run
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text2
  3620  007AC6                     __ptext2:
  3621                           	opt stack 0
  3622  007AC6                     _system_encoder_enable:
  3623                           	opt stack 29
  3624                           
  3625                           ;os.c: 97: INTCON3bits.INT2IF = 0;
  3626                           
  3627                           ;incstack = 0
  3628  007AC6  92F0               	bcf	intcon3,1,c	;volatile
  3629                           
  3630                           ;os.c: 98: INTCON3bits.INT3IF = 0;
  3631  007AC8  94F0               	bcf	intcon3,2,c	;volatile
  3632                           
  3633                           ;os.c: 101: os.encoderCount = 0;
  3634  007ACA  0E00               	movlw	0
  3635  007ACC  0100               	movlb	0	; () banked
  3636  007ACE  6F60               	movwf	_os& (0+255),b	;volatile
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;os.c: 104: INTCON3bits.INT2IE = 1;
  3640  007AD0  88F0               	bsf	intcon3,4,c	;volatile
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;os.c: 105: INTCON3bits.INT3IE = 1;
  3644  007AD2  8AF0               	bsf	intcon3,5,c	;volatile
  3645                           
  3646                           ; BSR set to: 0
  3647  007AD4  0012               	return		;funcret
  3648  007AD6                     __end_of_system_encoder_enable:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           intcon3	equ	0xFF0
  3655                           postinc0	equ	0xFEE
  3656                           wreg	equ	0xFE8
  3657                           postdec1	equ	0xFE5
  3658                           fsr1h	equ	0xFE2
  3659                           fsr1l	equ	0xFE1
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function _i2c_display_send_init_sequence *****************
  3663 ;; Defined at:
  3664 ;;		line 199 in file "i2c.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;Total ram usage:        9 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    2
  3685 ;; This function calls:
  3686 ;;		__i2c_write
  3687 ;;		_i2c_set_frequency
  3688 ;; This function is called by:
  3689 ;;		_ui_run
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text3
  3694  007726                     __ptext3:
  3695                           	opt stack 0
  3696  007726                     _i2c_display_send_init_sequence:
  3697                           	opt stack 27
  3698                           
  3699                           ;i2c.c: 201: uint8_t init_sequence[9] = {;i2c.c: 202: 0x3A,;i2c.c: 204: 0b00011110,;i2c.
      +                          c: 205: 0x39,;i2c.c: 207: 0b00001100,;i2c.c: 208: 0x74,;i2c.c: 209: 0b1011100,;i2c.c: 21
      +                          0: 0x6d,;i2c.c: 211: 0x0c,;i2c.c: 212: 0x01;i2c.c: 213: };
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;incstack = 0
  3703  007726  EE21  F0EE         	lfsr	2,i2c_display_send_init_sequence@F6791
  3704  00772A  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3705  00772E  0E08               	movlw	8
  3706  007730                     u10351:
  3707  007730  CFDB FFE3          	movff	plusw2,plusw1
  3708  007734  06E8               	decf	wreg,f,c
  3709  007736  E2FC               	bc	u10351
  3710                           
  3711                           ;i2c.c: 216: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3712  007738  0E00               	movlw	0
  3713  00773A  ECD5  F03B         	call	_i2c_set_frequency
  3714                           
  3715                           ;i2c.c: 219: _i2c_write(0b01111000, &init_sequence[0], 9);
  3716  00773E  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3717  007740  6E06               	movwf	__i2c_write@data,c
  3718  007742  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3719  007744  6E07               	movwf	__i2c_write@data+1,c
  3720  007746  0E09               	movlw	9
  3721  007748  6E08               	movwf	__i2c_write@length,c
  3722  00774A  0E78               	movlw	120
  3723  00774C  ECC3  F038         	call	__i2c_write
  3724  007750  0012               	return		;funcret
  3725  007752                     __end_of_i2c_display_send_init_sequence:
  3726                           	opt stack 0
  3727                           tblptru	equ	0xFF8
  3728                           tblptrh	equ	0xFF7
  3729                           tblptrl	equ	0xFF6
  3730                           tablat	equ	0xFF5
  3731                           intcon3	equ	0xFF0
  3732                           postinc0	equ	0xFEE
  3733                           wreg	equ	0xFE8
  3734                           postdec1	equ	0xFE5
  3735                           plusw1	equ	0xFE3
  3736                           fsr1h	equ	0xFE2
  3737                           fsr1l	equ	0xFE1
  3738                           plusw2	equ	0xFDB
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _i2c_digipot_reset_on *****************
  3742 ;; Defined at:
  3743 ;;		line 302 in file "i2c.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;Total ram usage:        2 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    2
  3764 ;; This function calls:
  3765 ;;		__i2c_write
  3766 ;;		_i2c_set_frequency
  3767 ;; This function is called by:
  3768 ;;		_ui_run
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text4
  3773  007908                     __ptext4:
  3774                           	opt stack 0
  3775  007908                     _i2c_digipot_reset_on:
  3776                           	opt stack 27
  3777                           
  3778                           ;i2c.c: 304: uint8_t data_array[2];;i2c.c: 305: data_array[0] = 0x10 | 0x00;
  3779                           
  3780                           ;incstack = 0
  3781  007908  0E10               	movlw	16
  3782  00790A  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  3783                           
  3784                           ;i2c.c: 307: data_array[1] = 0x00;
  3785  00790C  0E00               	movlw	0
  3786  00790E  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  3787                           
  3788                           ;i2c.c: 310: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3789  007910  0E02               	movlw	2
  3790  007912  ECD5  F03B         	call	_i2c_set_frequency
  3791                           
  3792                           ;i2c.c: 312: _i2c_write(0b01011100, &data_array[0], 2);
  3793  007916  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  3794  007918  6E06               	movwf	__i2c_write@data,c
  3795  00791A  0E00               	movlw	high i2c_digipot_reset_on@data_array
  3796  00791C  6E07               	movwf	__i2c_write@data+1,c
  3797  00791E  0E02               	movlw	2
  3798  007920  6E08               	movwf	__i2c_write@length,c
  3799  007922  0E5C               	movlw	92
  3800  007924  ECC3  F038         	call	__i2c_write
  3801  007928  0012               	return		;funcret
  3802  00792A                     __end_of_i2c_digipot_reset_on:
  3803                           	opt stack 0
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           intcon3	equ	0xFF0
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           postdec1	equ	0xFE5
  3812                           plusw1	equ	0xFE3
  3813                           fsr1h	equ	0xFE2
  3814                           fsr1l	equ	0xFE1
  3815                           plusw2	equ	0xFDB
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _i2c_digipot_reset_off *****************
  3819 ;; Defined at:
  3820 ;;		line 315 in file "i2c.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;Total ram usage:        2 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    2
  3841 ;; This function calls:
  3842 ;;		__i2c_write
  3843 ;;		_i2c_set_frequency
  3844 ;; This function is called by:
  3845 ;;		_ui_run
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text5
  3850  00792A                     __ptext5:
  3851                           	opt stack 0
  3852  00792A                     _i2c_digipot_reset_off:
  3853                           	opt stack 27
  3854                           
  3855                           ;i2c.c: 317: uint8_t data_array[2];;i2c.c: 318: data_array[0] = 0x10 | 0x00;
  3856                           
  3857                           ;incstack = 0
  3858  00792A  0E10               	movlw	16
  3859  00792C  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  3860                           
  3861                           ;i2c.c: 319: data_array[1] = 0x80;
  3862  00792E  0E80               	movlw	128
  3863  007930  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  3864                           
  3865                           ;i2c.c: 322: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3866  007932  0E02               	movlw	2
  3867  007934  ECD5  F03B         	call	_i2c_set_frequency
  3868                           
  3869                           ;i2c.c: 324: _i2c_write(0b01011100, &data_array[0], 2);
  3870  007938  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  3871  00793A  6E06               	movwf	__i2c_write@data,c
  3872  00793C  0E00               	movlw	high i2c_digipot_reset_off@data_array
  3873  00793E  6E07               	movwf	__i2c_write@data+1,c
  3874  007940  0E02               	movlw	2
  3875  007942  6E08               	movwf	__i2c_write@length,c
  3876  007944  0E5C               	movlw	92
  3877  007946  ECC3  F038         	call	__i2c_write
  3878  00794A  0012               	return		;funcret
  3879  00794C                     __end_of_i2c_digipot_reset_off:
  3880                           	opt stack 0
  3881                           tblptru	equ	0xFF8
  3882                           tblptrh	equ	0xFF7
  3883                           tblptrl	equ	0xFF6
  3884                           tablat	equ	0xFF5
  3885                           intcon3	equ	0xFF0
  3886                           postinc0	equ	0xFEE
  3887                           wreg	equ	0xFE8
  3888                           postdec1	equ	0xFE5
  3889                           plusw1	equ	0xFE3
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           plusw2	equ	0xFDB
  3893                           status	equ	0xFD8
  3894                           
  3895 ;; *************** function _i2c_digipot_backlight *****************
  3896 ;; Defined at:
  3897 ;;		line 327 in file "i2c.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  level           1    wreg     unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  level           1   10[COMRAM] unsigned char 
  3902 ;;  data_array      2   11[COMRAM] unsigned char [2]
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;Total ram usage:        3 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    2
  3919 ;; This function calls:
  3920 ;;		__i2c_write
  3921 ;;		_i2c_set_frequency
  3922 ;; This function is called by:
  3923 ;;		_ui_run
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text6
  3928  007850                     __ptext6:
  3929                           	opt stack 0
  3930  007850                     _i2c_digipot_backlight:
  3931                           	opt stack 27
  3932                           
  3933                           ;incstack = 0
  3934                           ;i2c_digipot_backlight@level stored from wreg
  3935  007850  6E0B               	movwf	i2c_digipot_backlight@level,c
  3936                           
  3937                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0x00 | 0x00;
  3938  007852  0E00               	movlw	0
  3939  007854  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  3940                           
  3941                           ;i2c.c: 331: data_array[1] = level>>1;
  3942  007856  90D8               	bcf	status,0,c
  3943  007858  300B               	rrcf	i2c_digipot_backlight@level,w,c
  3944  00785A  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  3945                           
  3946                           ;i2c.c: 334: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3947  00785C  0E02               	movlw	2
  3948  00785E  ECD5  F03B         	call	_i2c_set_frequency
  3949                           
  3950                           ;i2c.c: 336: _i2c_write(0b01011100, &data_array[0], 2);
  3951  007862  0E0C               	movlw	low i2c_digipot_backlight@data_array
  3952  007864  6E06               	movwf	__i2c_write@data,c
  3953  007866  0E00               	movlw	high i2c_digipot_backlight@data_array
  3954  007868  6E07               	movwf	__i2c_write@data+1,c
  3955  00786A  0E02               	movlw	2
  3956  00786C  6E08               	movwf	__i2c_write@length,c
  3957  00786E  0E5C               	movlw	92
  3958  007870  ECC3  F038         	call	__i2c_write
  3959  007874  0012               	return		;funcret
  3960  007876                     __end_of_i2c_digipot_backlight:
  3961                           	opt stack 0
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           intcon3	equ	0xFF0
  3967                           postinc0	equ	0xFEE
  3968                           wreg	equ	0xFE8
  3969                           postdec1	equ	0xFE5
  3970                           plusw1	equ	0xFE3
  3971                           fsr1h	equ	0xFE2
  3972                           fsr1l	equ	0xFE1
  3973                           plusw2	equ	0xFDB
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function __ui_encoder *****************
  3977 ;; Defined at:
  3978 ;;		line 21 in file "ui.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_ui_run
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text7
  4006  0062F2                     __ptext7:
  4007                           	opt stack 0
  4008  0062F2                     __ui_encoder:
  4009                           	opt stack 29
  4010                           
  4011                           ;ui.c: 23: switch(os.display_mode)
  4012                           
  4013                           ;incstack = 0
  4014  0062F2  D021               	goto	l1219
  4015  0062F4                     
  4016                           ;ui.c: 29: if(os.buttonCount>0)
  4017  0062F4  0100               	movlb	0	; () banked
  4018  0062F6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4019  0062F8  0A80               	xorlw	128
  4020  0062FA  0F7F               	addlw	-129
  4021  0062FC  A0D8               	btfss	status,0,c
  4022  0062FE  0012               	return	
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;ui.c: 30: {;ui.c: 31: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4026  006300  0E20               	movlw	32
  4027  006302  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4028                           
  4029                           ;ui.c: 32: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4030  006304  0E20               	movlw	32
  4031  006306  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4032                           
  4033                           ;ui.c: 33: os.buttonCount = 0;
  4034  006308  0E00               	movlw	0
  4035  00630A  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;ui.c: 41: break;
  4039                           
  4040                           ;ui.c: 40: case DISPLAY_MODE_BOOTLOADER_CHECK_FAILED:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;ui.c: 38: break;
  4044                           
  4045                           ;ui.c: 37: case DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;ui.c: 34: };ui.c: 35: break;
  4049  00630C  0012               	return	
  4050  00630E                     
  4051                           ; BSR set to: 0
  4052                           ;ui.c: 44: if(os.buttonCount>0)
  4053                           
  4054                           ; BSR set to: 0
  4055  00630E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4056  006310  0A80               	xorlw	128
  4057  006312  0F7F               	addlw	-129
  4058  006314  A0D8               	btfss	status,0,c
  4059  006316  0012               	return	
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;ui.c: 45: {;ui.c: 46: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4063  006318  0E50               	movlw	80
  4064  00631A  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4065                           
  4066                           ;ui.c: 47: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4067  00631C  0E50               	movlw	80
  4068  00631E  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4069                           
  4070                           ;ui.c: 48: os.buttonCount = 0;
  4071  006320  0E00               	movlw	0
  4072  006322  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;ui.c: 53: break;
  4076                           
  4077                           ;ui.c: 52: case BOOTLOADER_MODE_PROGRAMMING:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;ui.c: 49: };ui.c: 50: break;
  4081  006324  0012               	return	
  4082  006326                     
  4083                           ; BSR set to: 0
  4084                           ;ui.c: 56: if(os.buttonCount>0)
  4085                           
  4086                           ; BSR set to: 0
  4087  006326  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4088  006328  0A80               	xorlw	128
  4089  00632A  0F7F               	addlw	-129
  4090  00632C  A0D8               	btfss	status,0,c
  4091  00632E  0012               	return	
  4092                           
  4093                           ; BSR set to: 0
  4094  006330  EF00 F048          	goto	36864	; ;# 
  4095                           
  4096                           ;ui.c: 64: }
  4097                           
  4098                           ;ui.c: 62: };ui.c: 63: break;
  4099  006334  0012               	return	
  4100  006336                     l1219:
  4101  006336  0100               	movlb	0	; () banked
  4102  006338  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4103                           
  4104                           ; Switch size 1, requested type "space"
  4105                           ; Number of cases is 7, Range of values is 0 to 96
  4106                           ; switch strategies available:
  4107                           ; Name         Instructions Cycles
  4108                           ; simple_byte           22    12 (average)
  4109                           ;	Chosen strategy is simple_byte
  4110  00633A  0A00               	xorlw	0	; case 0
  4111  00633C  B4D8               	btfsc	status,2,c
  4112  00633E  0012               	return	
  4113  006340  0A10               	xorlw	16	; case 16
  4114  006342  B4D8               	btfsc	status,2,c
  4115  006344  D7D7               	goto	l1222
  4116  006346  0A30               	xorlw	48	; case 32
  4117  006348  B4D8               	btfsc	status,2,c
  4118  00634A  0012               	return	
  4119  00634C  0A10               	xorlw	16	; case 48
  4120  00634E  B4D8               	btfsc	status,2,c
  4121  006350  D7DE               	goto	l1226
  4122  006352  0A70               	xorlw	112	; case 64
  4123  006354  B4D8               	btfsc	status,2,c
  4124  006356  0012               	return	
  4125  006358  0A10               	xorlw	16	; case 80
  4126  00635A  B4D8               	btfsc	status,2,c
  4127  00635C  0012               	return	
  4128  00635E  0A30               	xorlw	48	; case 96
  4129  006360  A4D8               	btfss	status,2,c
  4130  006362  0012               	return	
  4131  006364  D7E0               	goto	l1229
  4132  006366                     __end_of__ui_encoder:
  4133                           	opt stack 0
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           intcon3	equ	0xFF0
  4139                           postinc0	equ	0xFEE
  4140                           wreg	equ	0xFE8
  4141                           postdec1	equ	0xFE5
  4142                           plusw1	equ	0xFE3
  4143                           fsr1h	equ	0xFE2
  4144                           fsr1l	equ	0xFE1
  4145                           plusw2	equ	0xFDB
  4146                           status	equ	0xFD8
  4147                           
  4148 ;; *************** function _timer_pseudo_isr *****************
  4149 ;; Defined at:
  4150 ;;		line 17 in file "os.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_main
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text8
  4178  007564                     __ptext8:
  4179                           	opt stack 0
  4180  007564                     _timer_pseudo_isr:
  4181                           	opt stack 30
  4182                           
  4183                           ;os.c: 20: if(INTCONbits.T0IF==0)
  4184                           
  4185                           ;incstack = 0
  4186  007564  A4F2               	btfss	intcon,2,c	;volatile
  4187  007566  0012               	return	
  4188                           
  4189                           ;os.c: 23: };os.c: 27: TMR0H = 0xD1;
  4190                           
  4191                           ;os.c: 21: {;os.c: 22: return;
  4192  007568  0ED1               	movlw	209
  4193  00756A  6ED7               	movwf	4055,c	;volatile
  4194                           
  4195                           ;os.c: 28: TMR0L = 0x20;
  4196  00756C  0E20               	movlw	32
  4197  00756E  6ED6               	movwf	4054,c	;volatile
  4198                           
  4199                           ;os.c: 29: ++os.timeSlot;
  4200  007570  0100               	movlb	0	; () banked
  4201  007572  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;os.c: 31: os.done = 0;
  4205  007574  0E00               	movlw	0
  4206  007576  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;os.c: 32: INTCONbits.T0IF = 0;
  4210  007578  94F2               	bcf	intcon,2,c	;volatile
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;os.c: 35: if(INTCON3bits.INT1IF)
  4214  00757A  A0F0               	btfss	intcon3,0,c	;volatile
  4215  00757C  D002               	goto	l1039
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;os.c: 36: {;os.c: 37: ++os.buttonCount;
  4219  00757E  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;os.c: 38: INTCON3bits.INT1IF = 0;
  4223  007580  90F0               	bcf	intcon3,0,c	;volatile
  4224  007582                     l1039:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;os.c: 39: };os.c: 42: if(INTCON3bits.INT2IF)
  4228                           
  4229                           ; BSR set to: 0
  4230  007582  A2F0               	btfss	intcon3,1,c	;volatile
  4231  007584  D003               	goto	l1040
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;os.c: 43: {;os.c: 44: if(!PORTBbits.RB6)
  4235  007586  AC81               	btfss	3969,6,c	;volatile
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;os.c: 45: {;os.c: 46: --os.encoderCount;
  4239  007588  0760               	decf	_os& (0+255),f,b	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;os.c: 47: };os.c: 48: INTCON3bits.INT2IF = 0;
  4243                           
  4244                           ; BSR set to: 0
  4245  00758A  92F0               	bcf	intcon3,1,c	;volatile
  4246  00758C                     l1040:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;os.c: 49: };os.c: 50: if(INTCON3bits.INT3IF)
  4250                           
  4251                           ; BSR set to: 0
  4252  00758C  A4F0               	btfss	intcon3,2,c	;volatile
  4253  00758E  0012               	return	
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;os.c: 51: {;os.c: 52: if(!PORTBbits.RB7)
  4257  007590  AE81               	btfss	3969,7,c	;volatile
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;os.c: 53: {;os.c: 54: ++os.encoderCount;
  4261  007592  2B60               	incf	_os& (0+255),f,b	;volatile
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;os.c: 55: };os.c: 56: INTCON3bits.INT3IF = 0;
  4265                           
  4266                           ; BSR set to: 0
  4267  007594  94F0               	bcf	intcon3,2,c	;volatile
  4268  007596  0012               	return	
  4269  007598                     __end_of_timer_pseudo_isr:
  4270                           	opt stack 0
  4271                           tblptru	equ	0xFF8
  4272                           tblptrh	equ	0xFF7
  4273                           tblptrl	equ	0xFF6
  4274                           tablat	equ	0xFF5
  4275                           intcon	equ	0xFF2
  4276                           intcon3	equ	0xFF0
  4277                           postinc0	equ	0xFEE
  4278                           wreg	equ	0xFE8
  4279                           postdec1	equ	0xFE5
  4280                           plusw1	equ	0xFE3
  4281                           fsr1h	equ	0xFE2
  4282                           fsr1l	equ	0xFE1
  4283                           plusw2	equ	0xFDB
  4284                           status	equ	0xFD8
  4285                           
  4286 ;; *************** function _system_init *****************
  4287 ;; Defined at:
  4288 ;;		line 136 in file "os.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    9
  4309 ;; This function calls:
  4310 ;;		__system_encoder_init
  4311 ;;		__system_timer0_init
  4312 ;;		_fat_init
  4313 ;;		_flash_init
  4314 ;;		_i2c_init
  4315 ;;		_ui_init
  4316 ;; This function is called by:
  4317 ;;		_main
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text9
  4322  00667A                     __ptext9:
  4323                           	opt stack 0
  4324  00667A                     _system_init:
  4325                           	opt stack 21
  4326                           
  4327                           ;os.c: 143: TRISCbits.TRISC2 = 0;
  4328                           
  4329                           ;incstack = 0
  4330  00667A  9494               	bcf	3988,2,c	;volatile
  4331                           
  4332                           ;os.c: 144: LATCbits.LC2 = 1;
  4333  00667C  848B               	bsf	3979,2,c	;volatile
  4334                           
  4335                           ;os.c: 147: TRISDbits.TRISD0 = 0;
  4336  00667E  9095               	bcf	3989,0,c	;volatile
  4337                           
  4338                           ;os.c: 148: LATDbits.LD0 = 0;
  4339  006680  908C               	bcf	3980,0,c	;volatile
  4340                           
  4341                           ;os.c: 151: TRISDbits.TRISD3 = 0;
  4342  006682  9695               	bcf	3989,3,c	;volatile
  4343                           
  4344                           ;os.c: 152: LATDbits.LD3 = 0;
  4345  006684  968C               	bcf	3980,3,c	;volatile
  4346                           
  4347                           ;os.c: 155: TRISDbits.TRISD1 = 0;
  4348  006686  9295               	bcf	3989,1,c	;volatile
  4349                           
  4350                           ;os.c: 156: LATDbits.LD1 = 0;
  4351  006688  928C               	bcf	3980,1,c	;volatile
  4352                           
  4353                           ;os.c: 159: TRISBbits.TRISB1 = 0;
  4354  00668A  9293               	bcf	3987,1,c	;volatile
  4355                           
  4356                           ;os.c: 160: LATBbits.LB1 = 0;
  4357  00668C  928A               	bcf	3978,1,c	;volatile
  4358                           
  4359                           ;os.c: 163: TRISBbits.TRISB2 = 0;
  4360  00668E  9493               	bcf	3987,2,c	;volatile
  4361                           
  4362                           ;os.c: 164: LATBbits.LB2 = 0;
  4363  006690  948A               	bcf	3978,2,c	;volatile
  4364                           
  4365                           ;os.c: 165: TRISBbits.TRISB3 = 0;
  4366  006692  9693               	bcf	3987,3,c	;volatile
  4367                           
  4368                           ;os.c: 166: LATBbits.LB3 = 0;
  4369  006694  968A               	bcf	3978,3,c	;volatile
  4370                           
  4371                           ;os.c: 169: TRISDbits.TRISD6 = 1;
  4372  006696  8C95               	bsf	3989,6,c	;volatile
  4373                           
  4374                           ;os.c: 170: TRISDbits.TRISD4 = 0;
  4375  006698  9895               	bcf	3989,4,c	;volatile
  4376                           
  4377                           ;os.c: 171: TRISDbits.TRISD5 = 0;
  4378  00669A  9A95               	bcf	3989,5,c	;volatile
  4379                           
  4380                           ;os.c: 172: TRISDbits.TRISD7 = 0;
  4381  00669C  9E95               	bcf	3989,7,c	;volatile
  4382                           
  4383                           ;os.c: 173: LATDbits.LD7 = 1;
  4384  00669E  8E8C               	bsf	3980,7,c	;volatile
  4385                           
  4386                           ;os.c: 174: TRISDbits.TRISD2 = 1;
  4387  0066A0  8495               	bsf	3989,2,c	;volatile
  4388                           
  4389                           ;os.c: 177: TRISCbits.TRISC7 = 0;
  4390  0066A2  9E94               	bcf	3988,7,c	;volatile
  4391                           
  4392                           ;os.c: 178: LATCbits.LC7 = 0;
  4393  0066A4  9E8B               	bcf	3979,7,c	;volatile
  4394                           
  4395                           ;os.c: 181: TRISEbits.TRISE2 = 0;
  4396  0066A6  9496               	bcf	3990,2,c	;volatile
  4397                           
  4398                           ;os.c: 182: LATEbits.LE2 = 1;
  4399  0066A8  848D               	bsf	3981,2,c	;volatile
  4400                           
  4401                           ;os.c: 183: TRISEbits.TRISE1 = 0;
  4402  0066AA  9296               	bcf	3990,1,c	;volatile
  4403                           
  4404                           ;os.c: 184: LATEbits.LE1 = 1;
  4405  0066AC  828D               	bsf	3981,1,c	;volatile
  4406                           
  4407                           ;os.c: 185: TRISEbits.TRISE0 = 0;
  4408  0066AE  9096               	bcf	3990,0,c	;volatile
  4409                           
  4410                           ;os.c: 186: LATEbits.LE0 = 1;
  4411  0066B0  808D               	bsf	3981,0,c	;volatile
  4412                           
  4413                           ;os.c: 187: TRISAbits.TRISA5 = 0;
  4414  0066B2  9A92               	bcf	3986,5,c	;volatile
  4415                           
  4416                           ;os.c: 188: LATAbits.LA5 = 1;
  4417  0066B4  8A89               	bsf	3977,5,c	;volatile
  4418                           
  4419                           ;os.c: 191: TRISAbits.TRISA0 = 1;
  4420  0066B6  8092               	bsf	3986,0,c	;volatile
  4421                           
  4422                           ;os.c: 192: ANCON0bits.PCFG0 = 1;
  4423  0066B8  010F               	movlb	15	; () banked
  4424  0066BA  8148               	bsf	72,0,b	;volatile
  4425                           
  4426                           ;os.c: 193: TRISBbits.TRISB7 = 1;
  4427  0066BC  8E93               	bsf	3987,7,c	;volatile
  4428                           
  4429                           ;os.c: 194: TRISBbits.TRISB6 = 1;
  4430  0066BE  8C93               	bsf	3987,6,c	;volatile
  4431                           
  4432                           ; BSR set to: 15
  4433                           ;os.c: 197: os.bootloader_mode = BOOTLOADER_MODE_START;
  4434  0066C0  0E00               	movlw	0
  4435  0066C2  0100               	movlb	0	; () banked
  4436  0066C4  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4437                           
  4438                           ;os.c: 198: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4439  0066C6  0E00               	movlw	0
  4440  0066C8  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;os.c: 201: i2c_init();
  4444  0066CA  EC82  F03D         	call	_i2c_init	;wreg free
  4445                           
  4446                           ;os.c: 204: flash_init();
  4447  0066CE  EC03  F03D         	call	_flash_init	;wreg free
  4448                           
  4449                           ;os.c: 207: fat_init();
  4450  0066D2  EC6B  F03D         	call	_fat_init	;wreg free
  4451                           
  4452                           ;os.c: 210: _system_encoder_init();
  4453  0066D6  EC0C  F03A         	call	__system_encoder_init	;wreg free
  4454                           
  4455                           ;os.c: 213: ui_init();
  4456  0066DA  EC3F  F03D         	call	_ui_init	;wreg free
  4457                           
  4458                           ;os.c: 216: _system_timer0_init();
  4459  0066DE  ECC8  F03C         	call	__system_timer0_init	;wreg free
  4460  0066E2  0012               	return		;funcret
  4461  0066E4                     __end_of_system_init:
  4462                           	opt stack 0
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           intcon	equ	0xFF2
  4468                           intcon3	equ	0xFF0
  4469                           postinc0	equ	0xFEE
  4470                           wreg	equ	0xFE8
  4471                           postdec1	equ	0xFE5
  4472                           plusw1	equ	0xFE3
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           plusw2	equ	0xFDB
  4476                           status	equ	0xFD8
  4477                           
  4478 ;; *************** function _ui_init *****************
  4479 ;; Defined at:
  4480 ;;		line 78 in file "ui.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_system_init
  4504 ;;		_ui_run
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text10
  4509  007A7E                     __ptext10:
  4510                           	opt stack 0
  4511  007A7E                     _ui_init:
  4512                           	opt stack 29
  4513                           
  4514                           ;ui.c: 80: system_ui_inactive_count = 0;
  4515                           
  4516                           ;incstack = 0
  4517  007A7E  0E00               	movlw	0
  4518  007A80  0100               	movlb	0	; () banked
  4519  007A82  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4520  007A84  0E00               	movlw	0
  4521  007A86  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;ui.c: 82: LATCbits.LC2 = 1;
  4525  007A88  848B               	bsf	3979,2,c	;volatile
  4526                           
  4527                           ;ui.c: 83: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4528  007A8A  0E01               	movlw	1
  4529  007A8C  6F9E               	movwf	_userInterfaceStatus& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532  007A8E  0012               	return		;funcret
  4533  007A90                     __end_of_ui_init:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           intcon	equ	0xFF2
  4540                           intcon3	equ	0xFF0
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           postdec1	equ	0xFE5
  4544                           plusw1	equ	0xFE3
  4545                           fsr1h	equ	0xFE2
  4546                           fsr1l	equ	0xFE1
  4547                           plusw2	equ	0xFDB
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _i2c_init *****************
  4551 ;; Defined at:
  4552 ;;		line 102 in file "i2c.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;Total ram usage:        0 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    1
  4573 ;; This function calls:
  4574 ;;		__i2c_open_1
  4575 ;;		_i2c_set_frequency
  4576 ;; This function is called by:
  4577 ;;		_system_init
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text11
  4582  007B04                     __ptext11:
  4583                           	opt stack 0
  4584  007B04                     _i2c_init:
  4585                           	opt stack 28
  4586                           
  4587                           ;i2c.c: 105: _i2c_open_1();
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;incstack = 0
  4591  007B04  EC1D  F03D         	call	__i2c_open_1	;wreg free
  4592                           
  4593                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4594  007B08  0E00               	movlw	0
  4595  007B0A  ECD5  F03B         	call	_i2c_set_frequency
  4596  007B0E  0012               	return		;funcret
  4597  007B10                     __end_of_i2c_init:
  4598                           	opt stack 0
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           intcon	equ	0xFF2
  4604                           intcon3	equ	0xFF0
  4605                           postinc0	equ	0xFEE
  4606                           wreg	equ	0xFE8
  4607                           postdec1	equ	0xFE5
  4608                           plusw1	equ	0xFE3
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           plusw2	equ	0xFDB
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function __i2c_open_1 *****************
  4615 ;; Defined at:
  4616 ;;		line 36 in file "i2c.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_i2c_init
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text12
  4644  007A3A                     __ptext12:
  4645                           	opt stack 0
  4646  007A3A                     __i2c_open_1:
  4647                           	opt stack 28
  4648                           
  4649                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  4650                           
  4651                           ;incstack = 0
  4652  007A3A  9EC7               	bcf	4039,7,c	;volatile
  4653                           
  4654                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  4655  007A3C  9CC7               	bcf	4039,6,c	;volatile
  4656                           
  4657                           ;i2c.c: 40: SSP1ADD = 29;
  4658  007A3E  0E1D               	movlw	29
  4659  007A40  6EC8               	movwf	4040,c	;volatile
  4660                           
  4661                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  4662  007A42  9EC6               	bcf	4038,7,c	;volatile
  4663                           
  4664                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  4665  007A44  9CC6               	bcf	4038,6,c	;volatile
  4666                           
  4667                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  4668  007A46  50C6               	movf	4038,w,c	;volatile
  4669  007A48  0BF0               	andlw	-16
  4670  007A4A  0908               	iorlw	8
  4671  007A4C  6EC6               	movwf	4038,c	;volatile
  4672                           
  4673                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  4674  007A4E  8AC6               	bsf	4038,5,c	;volatile
  4675  007A50  0012               	return		;funcret
  4676  007A52                     __end_of__i2c_open_1:
  4677                           	opt stack 0
  4678                           tblptru	equ	0xFF8
  4679                           tblptrh	equ	0xFF7
  4680                           tblptrl	equ	0xFF6
  4681                           tablat	equ	0xFF5
  4682                           intcon	equ	0xFF2
  4683                           intcon3	equ	0xFF0
  4684                           postinc0	equ	0xFEE
  4685                           wreg	equ	0xFE8
  4686                           postdec1	equ	0xFE5
  4687                           plusw1	equ	0xFE3
  4688                           fsr1h	equ	0xFE2
  4689                           fsr1l	equ	0xFE1
  4690                           plusw2	equ	0xFDB
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _flash_init *****************
  4694 ;; Defined at:
  4695 ;;		line 334 in file "flash.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    5
  4716 ;; This function calls:
  4717 ;;		__flash_set_page_size
  4718 ;;		_spi_init
  4719 ;;		_spi_set_configuration
  4720 ;; This function is called by:
  4721 ;;		_system_init
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text13
  4726  007A06                     __ptext13:
  4727                           	opt stack 0
  4728  007A06                     _flash_init:
  4729                           	opt stack 24
  4730                           
  4731                           ;flash.c: 337: spi_init(SPI_CONFIGURATION_INTERNAL);
  4732                           
  4733                           ;incstack = 0
  4734  007A06  0E00               	movlw	0
  4735  007A08  ECD0  F039         	call	_spi_init
  4736                           
  4737                           ;flash.c: 338: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  4738  007A0C  0E00               	movlw	0
  4739  007A0E  EC6E  F035         	call	_spi_set_configuration
  4740                           
  4741                           ;flash.c: 341: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  4742  007A12  0E00               	movlw	0
  4743  007A14  EC89  F030         	call	__flash_set_page_size
  4744                           
  4745                           ;flash.c: 344: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  4746  007A18  0E01               	movlw	1
  4747  007A1A  EC6E  F035         	call	_spi_set_configuration
  4748  007A1E  0012               	return		;funcret
  4749  007A20                     __end_of_flash_init:
  4750                           	opt stack 0
  4751                           tblptru	equ	0xFF8
  4752                           tblptrh	equ	0xFF7
  4753                           tblptrl	equ	0xFF6
  4754                           tablat	equ	0xFF5
  4755                           intcon	equ	0xFF2
  4756                           intcon3	equ	0xFF0
  4757                           postinc0	equ	0xFEE
  4758                           wreg	equ	0xFE8
  4759                           postdec1	equ	0xFE5
  4760                           plusw1	equ	0xFE3
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           plusw2	equ	0xFDB
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _spi_init *****************
  4767 ;; Defined at:
  4768 ;;		line 107 in file "spi.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  configuratio    1    wreg     enum E6747
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  configuratio    1    3[COMRAM] enum E6747
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;Total ram usage:        1 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    1
  4789 ;; This function calls:
  4790 ;;		__spi_init
  4791 ;; This function is called by:
  4792 ;;		_flash_init
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text14
  4797  0073A0                     __ptext14:
  4798                           	opt stack 0
  4799  0073A0                     _spi_init:
  4800                           	opt stack 27
  4801                           
  4802                           ;incstack = 0
  4803                           ;spi_init@configuration stored from wreg
  4804  0073A0  6E04               	movwf	spi_init@configuration,c
  4805                           
  4806                           ;spi.c: 109: switch(configuration)
  4807  0073A2  D012               	goto	l2633
  4808  0073A4                     
  4809                           ;spi.c: 112: _spi_init(config_internal);
  4810  0073A4  C15B  F001         	movff	_config_internal,__spi_init@details
  4811  0073A8  C15C  F002         	movff	_config_internal+1,__spi_init@details+1
  4812  0073AC  C15D  F003         	movff	_config_internal+2,__spi_init@details+2
  4813  0073B0  EC29  F03A         	call	__spi_init	;wreg free
  4814                           
  4815                           ;spi.c: 113: break;
  4816  0073B4  D010               	goto	l2635
  4817  0073B6                     
  4818                           ;spi.c: 116: _spi_init(config_external);
  4819  0073B6  C158  F001         	movff	_config_external,__spi_init@details
  4820  0073BA  C159  F002         	movff	_config_external+1,__spi_init@details+1
  4821  0073BE  C15A  F003         	movff	_config_external+2,__spi_init@details+2
  4822  0073C2  EC29  F03A         	call	__spi_init	;wreg free
  4823                           
  4824                           ;spi.c: 118: }
  4825                           
  4826                           ;spi.c: 117: break;
  4827  0073C6  D007               	goto	l2635
  4828  0073C8                     l2633:
  4829  0073C8  5004               	movf	spi_init@configuration,w,c
  4830                           
  4831                           ; Switch size 1, requested type "space"
  4832                           ; Number of cases is 2, Range of values is 0 to 1
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte            7     4 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  0073CA  0A00               	xorlw	0	; case 0
  4838  0073CC  B4D8               	btfsc	status,2,c
  4839  0073CE  D7EA               	goto	l2634
  4840  0073D0  0A01               	xorlw	1	; case 1
  4841  0073D2  B4D8               	btfsc	status,2,c
  4842  0073D4  D7F0               	goto	l2636
  4843  0073D6                     l2635:
  4844                           
  4845                           ;spi.c: 120: active_configuration = configuration;
  4846  0073D6  C004  F09A         	movff	spi_init@configuration,_active_configuration
  4847  0073DA  0012               	return		;funcret
  4848  0073DC                     __end_of_spi_init:
  4849                           	opt stack 0
  4850                           tblptru	equ	0xFF8
  4851                           tblptrh	equ	0xFF7
  4852                           tblptrl	equ	0xFF6
  4853                           tablat	equ	0xFF5
  4854                           intcon	equ	0xFF2
  4855                           intcon3	equ	0xFF0
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           plusw1	equ	0xFE3
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           plusw2	equ	0xFDB
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function __spi_init *****************
  4866 ;; Defined at:
  4867 ;;		line 22 in file "spi.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  details         3    0[COMRAM] struct .
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4881 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;Total ram usage:        3 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_spi_init
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text15
  4895  007452                     __ptext15:
  4896                           	opt stack 0
  4897  007452                     __spi_init:
  4898                           	opt stack 27
  4899                           
  4900                           ;spi.c: 28: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  4901                           
  4902                           ;incstack = 0
  4903  007452  0E55               	movlw	85
  4904  007454  6EA7               	movwf	4007,c	;volsfr
  4905  007456  0EAA               	movlw	170
  4906  007458  6EA7               	movwf	4007,c	;volsfr
  4907  00745A  010E               	movlb	14	; () banked
  4908  00745C  91BF               	bcf	191,0,b	;volatile
  4909                           
  4910                           ;spi.c: 29: RPINR21 = 23;
  4911  00745E  0E17               	movlw	23
  4912  007460  6FFC               	movwf	252,b	;volatile
  4913                           
  4914                           ;spi.c: 30: RPOR21 = 10;
  4915  007462  0E0A               	movlw	10
  4916  007464  6FD5               	movwf	213,b	;volatile
  4917                           
  4918                           ;spi.c: 32: RPOR22 = 11;
  4919  007466  0E0B               	movlw	11
  4920  007468  6FD6               	movwf	214,b	;volatile
  4921                           
  4922                           ;spi.c: 33: RPINR22 = 22;
  4923  00746A  0E16               	movlw	22
  4924  00746C  6FFD               	movwf	253,b	;volatile
  4925                           
  4926                           ;spi.c: 35: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  4927  00746E  0E55               	movlw	85
  4928  007470  6EA7               	movwf	4007,c	;volsfr
  4929  007472  0EAA               	movlw	170
  4930  007474  6EA7               	movwf	4007,c	;volsfr
  4931                           
  4932                           ; BSR set to: 14
  4933  007476  81BF               	bsf	191,0,b	;volatile
  4934                           
  4935                           ; BSR set to: 14
  4936                           ;spi.c: 38: SSP2STATbits.SMP = 1;
  4937  007478  8E73               	bsf	3955,7,c	;volatile
  4938                           
  4939                           ; BSR set to: 14
  4940                           ;spi.c: 39: SSP2STATbits.CKE = 1;
  4941  00747A  8C73               	bsf	3955,6,c	;volatile
  4942                           
  4943                           ; BSR set to: 14
  4944                           ;spi.c: 40: SSP2CON1bits.CKP = 0;
  4945  00747C  9872               	bcf	3954,4,c	;volatile
  4946                           
  4947                           ; BSR set to: 14
  4948                           ;spi.c: 41: SSP2CON1bits.SSPM =0b0000;
  4949  00747E  9072               	bcf	3954,0,c	;volatile
  4950  007480  9272               	bcf	3954,1,c	;volatile
  4951  007482  9472               	bcf	3954,2,c	;volatile
  4952  007484  9672               	bcf	3954,3,c	;volatile
  4953                           
  4954                           ; BSR set to: 14
  4955                           ;spi.c: 42: SSP2CON1bits.SSPEN = 1;
  4956  007486  8A72               	bsf	3954,5,c	;volatile
  4957                           
  4958                           ; BSR set to: 14
  4959  007488  0012               	return		;funcret
  4960  00748A                     __end_of__spi_init:
  4961                           	opt stack 0
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           intcon	equ	0xFF2
  4967                           intcon3	equ	0xFF0
  4968                           postinc0	equ	0xFEE
  4969                           wreg	equ	0xFE8
  4970                           postdec1	equ	0xFE5
  4971                           plusw1	equ	0xFE3
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           plusw2	equ	0xFDB
  4975                           status	equ	0xFD8
  4976                           
  4977 ;; *************** function __flash_set_page_size *****************
  4978 ;; Defined at:
  4979 ;;		line 95 in file "flash.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  size            1    wreg     enum E6870
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  size            1   23[COMRAM] enum E6870
  4984 ;;  command         4   19[COMRAM] unsigned char [4]
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;Total ram usage:        5 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    4
  5001 ;; This function calls:
  5002 ;;		__flash_is_busy
  5003 ;;		_memcpy
  5004 ;;		_spi_tx
  5005 ;; This function is called by:
  5006 ;;		_flash_init
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text16
  5011  006112                     __ptext16:
  5012                           	opt stack 0
  5013  006112                     __flash_set_page_size:
  5014                           	opt stack 24
  5015                           
  5016                           ; BSR set to: 14
  5017                           ;incstack = 0
  5018                           ;__flash_set_page_size@size stored from wreg
  5019  006112  6E18               	movwf	__flash_set_page_size@size,c
  5020  006114                     
  5021                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5022  006114  ECB7  F03C         	call	__flash_is_busy	;wreg free
  5023  006118  0900               	iorlw	0
  5024  00611A  A4D8               	btfss	status,2,c
  5025  00611C  D7FB               	goto	l12201
  5026                           
  5027                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5028  00611E  5018               	movf	__flash_set_page_size@size,w,c
  5029  006120  A4D8               	btfss	status,2,c
  5030  006122  D013               	goto	l1600
  5031                           
  5032                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5033  006124  0E14               	movlw	low __flash_set_page_size@command
  5034  006126  6E01               	movwf	memcpy@d1,c
  5035  006128  0E00               	movlw	high __flash_set_page_size@command
  5036  00612A  6E02               	movwf	memcpy@d1+1,c
  5037  00612C  0EC3               	movlw	low _flash_command_pagesize_512
  5038  00612E  6E03               	movwf	memcpy@s1,c
  5039  006130  0E8F               	movlw	high _flash_command_pagesize_512
  5040  006132  6E04               	movwf	memcpy@s1+1,c
  5041  006134  5003               	movf	memcpy@s1,w,c
  5042  006136  1004               	iorwf	memcpy@s1+1,w,c
  5043  006138  A4D8               	btfss	status,2,c
  5044  00613A  0E00               	movlw	low (__mediumconst shr (0+16))
  5045  00613C  6E05               	movwf	memcpy@s1+2,c
  5046  00613E  0E00               	movlw	0
  5047  006140  6E07               	movwf	memcpy@n+1,c
  5048  006142  0E04               	movlw	4
  5049  006144  6E06               	movwf	memcpy@n,c
  5050  006146  EC79  F034         	call	_memcpy	;wreg free
  5051  00614A                     l1600:
  5052                           
  5053                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5054  00614A  0418               	decf	__flash_set_page_size@size,w,c
  5055  00614C  A4D8               	btfss	status,2,c
  5056  00614E  D013               	goto	l1601
  5057                           
  5058                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5059  006150  0E14               	movlw	low __flash_set_page_size@command
  5060  006152  6E01               	movwf	memcpy@d1,c
  5061  006154  0E00               	movlw	high __flash_set_page_size@command
  5062  006156  6E02               	movwf	memcpy@d1+1,c
  5063  006158  0EBF               	movlw	low _flash_command_pagesize_528
  5064  00615A  6E03               	movwf	memcpy@s1,c
  5065  00615C  0E8F               	movlw	high _flash_command_pagesize_528
  5066  00615E  6E04               	movwf	memcpy@s1+1,c
  5067  006160  5003               	movf	memcpy@s1,w,c
  5068  006162  1004               	iorwf	memcpy@s1+1,w,c
  5069  006164  A4D8               	btfss	status,2,c
  5070  006166  0E00               	movlw	low (__mediumconst shr (0+16))
  5071  006168  6E05               	movwf	memcpy@s1+2,c
  5072  00616A  0E00               	movlw	0
  5073  00616C  6E07               	movwf	memcpy@n+1,c
  5074  00616E  0E04               	movlw	4
  5075  006170  6E06               	movwf	memcpy@n,c
  5076  006172  EC79  F034         	call	_memcpy	;wreg free
  5077  006176                     l1601:
  5078                           
  5079                           ;flash.c: 109: spi_tx(command, 4);
  5080  006176  0E14               	movlw	low __flash_set_page_size@command
  5081  006178  6E01               	movwf	spi_tx@data,c
  5082  00617A  0E00               	movlw	high __flash_set_page_size@command
  5083  00617C  6E02               	movwf	spi_tx@data+1,c
  5084  00617E  0E00               	movlw	0
  5085  006180  6E04               	movwf	spi_tx@length+1,c
  5086  006182  0E04               	movlw	4
  5087  006184  6E03               	movwf	spi_tx@length,c
  5088  006186  ECCB  F035         	call	_spi_tx	;wreg free
  5089  00618A  0012               	return		;funcret
  5090  00618C                     __end_of__flash_set_page_size:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           intcon	equ	0xFF2
  5097                           intcon3	equ	0xFF0
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           postdec1	equ	0xFE5
  5101                           plusw1	equ	0xFE3
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           plusw2	equ	0xFDB
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _fat_init *****************
  5108 ;; Defined at:
  5109 ;;		line 1011 in file "fat16.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    8
  5130 ;; This function calls:
  5131 ;;		_fat_format
  5132 ;;		_fat_get_format_status
  5133 ;; This function is called by:
  5134 ;;		_system_init
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text17
  5139  007AD6                     __ptext17:
  5140                           	opt stack 0
  5141  007AD6                     _fat_init:
  5142                           	opt stack 21
  5143                           
  5144                           ;fat16.c: 1014: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5145                           
  5146                           ;incstack = 0
  5147  007AD6  EC8E  F02A         	call	_fat_get_format_status	;wreg free
  5148  007ADA  0900               	iorlw	0
  5149  007ADC  A4D8               	btfss	status,2,c
  5150  007ADE  0012               	return	
  5151                           
  5152                           ;fat16.c: 1015: {;fat16.c: 1016: fat_format();
  5153  007AE0  ECA6  F012         	call	_fat_format	;wreg free
  5154  007AE4  0012               	return	
  5155  007AE6                     __end_of_fat_init:
  5156                           	opt stack 0
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           intcon	equ	0xFF2
  5162                           intcon3	equ	0xFF0
  5163                           postinc0	equ	0xFEE
  5164                           wreg	equ	0xFE8
  5165                           postdec1	equ	0xFE5
  5166                           plusw1	equ	0xFE3
  5167                           fsr1h	equ	0xFE2
  5168                           fsr1l	equ	0xFE1
  5169                           plusw2	equ	0xFDB
  5170                           status	equ	0xFD8
  5171                           
  5172 ;; *************** function _fat_get_format_status *****************
  5173 ;; Defined at:
  5174 ;;		line 923 in file "fat16.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  cntr            2   46[COMRAM] unsigned int 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      enum E6856
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;Total ram usage:        4 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    7
  5195 ;; This function calls:
  5196 ;;		__get_fbr
  5197 ;;		__get_mbr
  5198 ;;		_flash_page_read
  5199 ;; This function is called by:
  5200 ;;		_fat_init
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text18
  5205  00551C                     __ptext18:
  5206                           	opt stack 0
  5207  00551C                     _fat_get_format_status:
  5208                           	opt stack 21
  5209                           
  5210                           ;fat16.c: 925: uint16_t cntr;;fat16.c: 928: flash_page_read(0, buffer);
  5211                           
  5212                           ;incstack = 0
  5213  00551C  0E00               	movlw	0
  5214  00551E  6E2A               	movwf	flash_page_read@page+1,c
  5215  005520  0E00               	movlw	0
  5216  005522  6E29               	movwf	flash_page_read@page,c
  5217  005524  0EB2               	movlw	low _buffer
  5218  005526  6E2B               	movwf	flash_page_read@data,c
  5219  005528  0E02               	movlw	high _buffer
  5220  00552A  6E2C               	movwf	flash_page_read@data+1,c
  5221  00552C  EC00  F03B         	call	_flash_page_read	;wreg free
  5222                           
  5223                           ;fat16.c: 929: for(cntr=0; cntr<512; ++cntr)
  5224  005530  0E00               	movlw	0
  5225  005532  6E30               	movwf	fat_get_format_status@cntr+1,c
  5226  005534  0E00               	movlw	0
  5227  005536  6E2F               	movwf	fat_get_format_status@cntr,c
  5228  005538                     l12229:
  5229  005538  0E02               	movlw	2
  5230  00553A  5C30               	subwf	fat_get_format_status@cntr+1,w,c
  5231  00553C  B0D8               	btfsc	status,0,c
  5232  00553E  D016               	goto	u9370
  5233                           
  5234                           ;fat16.c: 930: {;fat16.c: 931: if(buffer[cntr] != _get_mbr(cntr))
  5235  005540  0EB2               	movlw	low _buffer
  5236  005542  242F               	addwf	fat_get_format_status@cntr,w,c
  5237  005544  6ED9               	movwf	fsr2l,c
  5238  005546  0E02               	movlw	high _buffer
  5239  005548  2030               	addwfc	fat_get_format_status@cntr+1,w,c
  5240  00554A  6EDA               	movwf	fsr2h,c
  5241  00554C  C02F  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5242  005550  C030  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5243  005554  ECB9  F025         	call	__get_mbr	;wreg free
  5244  005558  6E2E               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5245  00555A  50DE               	movf	postinc2,w,c
  5246  00555C  182E               	xorwf	??_fat_get_format_status+1,w,c
  5247  00555E  B4D8               	btfsc	status,2,c
  5248  005560  D002               	goto	l2020
  5249                           
  5250                           ;fat16.c: 932: {;fat16.c: 933: return DRIVE_NOT_FORMATED;
  5251  005562  0E00               	movlw	0
  5252  005564  0012               	return	
  5253  005566                     l2020:
  5254  005566  4A2F               	infsnz	fat_get_format_status@cntr,f,c
  5255  005568  2A30               	incf	fat_get_format_status@cntr+1,f,c
  5256  00556A  D7E6               	goto	l12229
  5257  00556C                     u9370:
  5258                           
  5259                           ;fat16.c: 934: };fat16.c: 935: };fat16.c: 938: flash_page_read(1, buffer);
  5260  00556C  0E00               	movlw	0
  5261  00556E  6E2A               	movwf	flash_page_read@page+1,c
  5262  005570  0E01               	movlw	1
  5263  005572  6E29               	movwf	flash_page_read@page,c
  5264  005574  0EB2               	movlw	low _buffer
  5265  005576  6E2B               	movwf	flash_page_read@data,c
  5266  005578  0E02               	movlw	high _buffer
  5267  00557A  6E2C               	movwf	flash_page_read@data+1,c
  5268  00557C  EC00  F03B         	call	_flash_page_read	;wreg free
  5269                           
  5270                           ;fat16.c: 939: for(cntr=0; cntr<512; ++cntr)
  5271  005580  0E00               	movlw	0
  5272  005582  6E30               	movwf	fat_get_format_status@cntr+1,c
  5273  005584  0E00               	movlw	0
  5274  005586  6E2F               	movwf	fat_get_format_status@cntr,c
  5275  005588                     l12247:
  5276  005588  0E02               	movlw	2
  5277  00558A  5C30               	subwf	fat_get_format_status@cntr+1,w,c
  5278  00558C  B0D8               	btfsc	status,0,c
  5279  00558E  D016               	goto	u9400
  5280                           
  5281                           ;fat16.c: 940: {;fat16.c: 941: if(buffer[cntr] != _get_fbr(cntr))
  5282  005590  0EB2               	movlw	low _buffer
  5283  005592  242F               	addwf	fat_get_format_status@cntr,w,c
  5284  005594  6ED9               	movwf	fsr2l,c
  5285  005596  0E02               	movlw	high _buffer
  5286  005598  2030               	addwfc	fat_get_format_status@cntr+1,w,c
  5287  00559A  6EDA               	movwf	fsr2h,c
  5288  00559C  C02F  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5289  0055A0  C030  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5290  0055A4  EC18  F00D         	call	__get_fbr	;wreg free
  5291  0055A8  6E2E               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5292  0055AA  50DE               	movf	postinc2,w,c
  5293  0055AC  182E               	xorwf	??_fat_get_format_status+1,w,c
  5294  0055AE  B4D8               	btfsc	status,2,c
  5295  0055B0  D002               	goto	l2024
  5296                           
  5297                           ;fat16.c: 942: {;fat16.c: 943: return DRIVE_NOT_FORMATED;
  5298  0055B2  0E00               	movlw	0
  5299  0055B4  0012               	return	
  5300  0055B6                     l2024:
  5301  0055B6  4A2F               	infsnz	fat_get_format_status@cntr,f,c
  5302  0055B8  2A30               	incf	fat_get_format_status@cntr+1,f,c
  5303  0055BA  D7E6               	goto	l12247
  5304  0055BC                     u9400:
  5305                           
  5306                           ;fat16.c: 944: };fat16.c: 945: };fat16.c: 948: return DRIVE_FORMATED;
  5307  0055BC  0E01               	movlw	1
  5308  0055BE  0012               	return	
  5309  0055C0                     __end_of_fat_get_format_status:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           intcon	equ	0xFF2
  5316                           intcon3	equ	0xFF0
  5317                           postinc0	equ	0xFEE
  5318                           wreg	equ	0xFE8
  5319                           postdec1	equ	0xFE5
  5320                           plusw1	equ	0xFE3
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           postinc2	equ	0xFDE
  5324                           plusw2	equ	0xFDB
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _fat_format *****************
  5330 ;; Defined at:
  5331 ;;		line 951 in file "fat16.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  cntr            2   36[COMRAM] unsigned int 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5349 ;;Total ram usage:        2 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    6
  5352 ;; This function calls:
  5353 ;;		__get_data
  5354 ;;		__get_fat
  5355 ;;		__get_fbr
  5356 ;;		__get_mbr
  5357 ;;		__get_root
  5358 ;;		_flash_page_write
  5359 ;; This function is called by:
  5360 ;;		_fat_init
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text19
  5365  00254C                     __ptext19:
  5366                           	opt stack 0
  5367  00254C                     _fat_format:
  5368                           	opt stack 22
  5369                           
  5370                           ;fat16.c: 953: uint16_t cntr;;fat16.c: 956: for(cntr=0; cntr<512; ++cntr)
  5371                           
  5372                           ;incstack = 0
  5373  00254C  0E00               	movlw	0
  5374  00254E  6E26               	movwf	fat_format@cntr+1,c
  5375  002550  0E00               	movlw	0
  5376  002552  6E25               	movwf	fat_format@cntr,c
  5377  002554                     l12267:
  5378  002554  0E02               	movlw	2
  5379  002556  5C26               	subwf	fat_format@cntr+1,w,c
  5380  002558  B0D8               	btfsc	status,0,c
  5381  00255A  D010               	goto	u9420
  5382                           
  5383                           ;fat16.c: 957: {;fat16.c: 958: buffer[cntr] = _get_mbr(cntr);
  5384  00255C  0EB2               	movlw	low _buffer
  5385  00255E  2425               	addwf	fat_format@cntr,w,c
  5386  002560  6ED9               	movwf	fsr2l,c
  5387  002562  0E02               	movlw	high _buffer
  5388  002564  2026               	addwfc	fat_format@cntr+1,w,c
  5389  002566  6EDA               	movwf	fsr2h,c
  5390  002568  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  5391  00256C  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  5392  002570  ECB9  F025         	call	__get_mbr	;wreg free
  5393  002574  6EDF               	movwf	indf2,c
  5394  002576  4A25               	infsnz	fat_format@cntr,f,c
  5395  002578  2A26               	incf	fat_format@cntr+1,f,c
  5396  00257A  D7EC               	goto	l12267
  5397  00257C                     u9420:
  5398                           
  5399                           ;fat16.c: 959: };fat16.c: 960: flash_page_write(0, buffer);
  5400  00257C  0E00               	movlw	0
  5401  00257E  6E21               	movwf	flash_page_write@page+1,c
  5402  002580  0E00               	movlw	0
  5403  002582  6E20               	movwf	flash_page_write@page,c
  5404  002584  0EB2               	movlw	low _buffer
  5405  002586  6E22               	movwf	flash_page_write@data,c
  5406  002588  0E02               	movlw	high _buffer
  5407  00258A  6E23               	movwf	flash_page_write@data+1,c
  5408  00258C  EC56  F037         	call	_flash_page_write	;wreg free
  5409                           
  5410                           ;fat16.c: 963: for(cntr=0; cntr<512; ++cntr)
  5411  002590  0E00               	movlw	0
  5412  002592  6E26               	movwf	fat_format@cntr+1,c
  5413  002594  0E00               	movlw	0
  5414  002596  6E25               	movwf	fat_format@cntr,c
  5415  002598                     l12281:
  5416  002598  0E02               	movlw	2
  5417  00259A  5C26               	subwf	fat_format@cntr+1,w,c
  5418  00259C  B0D8               	btfsc	status,0,c
  5419  00259E  D010               	goto	u9440
  5420                           
  5421                           ;fat16.c: 964: {;fat16.c: 965: buffer[cntr] = _get_fbr(cntr);
  5422  0025A0  0EB2               	movlw	low _buffer
  5423  0025A2  2425               	addwf	fat_format@cntr,w,c
  5424  0025A4  6ED9               	movwf	fsr2l,c
  5425  0025A6  0E02               	movlw	high _buffer
  5426  0025A8  2026               	addwfc	fat_format@cntr+1,w,c
  5427  0025AA  6EDA               	movwf	fsr2h,c
  5428  0025AC  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  5429  0025B0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  5430  0025B4  EC18  F00D         	call	__get_fbr	;wreg free
  5431  0025B8  6EDF               	movwf	indf2,c
  5432  0025BA  4A25               	infsnz	fat_format@cntr,f,c
  5433  0025BC  2A26               	incf	fat_format@cntr+1,f,c
  5434  0025BE  D7EC               	goto	l12281
  5435  0025C0                     u9440:
  5436                           
  5437                           ;fat16.c: 966: };fat16.c: 967: flash_page_write(1, buffer);
  5438  0025C0  0E00               	movlw	0
  5439  0025C2  6E21               	movwf	flash_page_write@page+1,c
  5440  0025C4  0E01               	movlw	1
  5441  0025C6  6E20               	movwf	flash_page_write@page,c
  5442  0025C8  0EB2               	movlw	low _buffer
  5443  0025CA  6E22               	movwf	flash_page_write@data,c
  5444  0025CC  0E02               	movlw	high _buffer
  5445  0025CE  6E23               	movwf	flash_page_write@data+1,c
  5446  0025D0  EC56  F037         	call	_flash_page_write	;wreg free
  5447                           
  5448                           ;fat16.c: 970: for(cntr=0; cntr<512; ++cntr)
  5449  0025D4  0E00               	movlw	0
  5450  0025D6  6E26               	movwf	fat_format@cntr+1,c
  5451  0025D8  0E00               	movlw	0
  5452  0025DA  6E25               	movwf	fat_format@cntr,c
  5453  0025DC                     l12295:
  5454  0025DC  0E02               	movlw	2
  5455  0025DE  5C26               	subwf	fat_format@cntr+1,w,c
  5456  0025E0  B0D8               	btfsc	status,0,c
  5457  0025E2  D010               	goto	u9460
  5458                           
  5459                           ;fat16.c: 971: {;fat16.c: 972: buffer[cntr] = _get_fat(cntr);
  5460  0025E4  0EB2               	movlw	low _buffer
  5461  0025E6  2425               	addwf	fat_format@cntr,w,c
  5462  0025E8  6ED9               	movwf	fsr2l,c
  5463  0025EA  0E02               	movlw	high _buffer
  5464  0025EC  2026               	addwfc	fat_format@cntr+1,w,c
  5465  0025EE  6EDA               	movwf	fsr2h,c
  5466  0025F0  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  5467  0025F4  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  5468  0025F8  ECD5  F036         	call	__get_fat	;wreg free
  5469  0025FC  6EDF               	movwf	indf2,c
  5470  0025FE  4A25               	infsnz	fat_format@cntr,f,c
  5471  002600  2A26               	incf	fat_format@cntr+1,f,c
  5472  002602  D7EC               	goto	l12295
  5473  002604                     u9460:
  5474                           
  5475                           ;fat16.c: 973: };fat16.c: 974: flash_page_write(2, buffer);
  5476  002604  0E00               	movlw	0
  5477  002606  6E21               	movwf	flash_page_write@page+1,c
  5478  002608  0E02               	movlw	2
  5479  00260A  6E20               	movwf	flash_page_write@page,c
  5480  00260C  0EB2               	movlw	low _buffer
  5481  00260E  6E22               	movwf	flash_page_write@data,c
  5482  002610  0E02               	movlw	high _buffer
  5483  002612  6E23               	movwf	flash_page_write@data+1,c
  5484  002614  EC56  F037         	call	_flash_page_write	;wreg free
  5485                           
  5486                           ;fat16.c: 977: for(cntr=0; cntr<512; ++cntr)
  5487  002618  0E00               	movlw	0
  5488  00261A  6E26               	movwf	fat_format@cntr+1,c
  5489  00261C  0E00               	movlw	0
  5490  00261E  6E25               	movwf	fat_format@cntr,c
  5491  002620                     l12309:
  5492  002620  0E02               	movlw	2
  5493  002622  5C26               	subwf	fat_format@cntr+1,w,c
  5494  002624  B0D8               	btfsc	status,0,c
  5495  002626  D00B               	goto	u9480
  5496                           
  5497                           ;fat16.c: 978: {;fat16.c: 979: buffer[cntr] = 0x00;
  5498  002628  0EB2               	movlw	low _buffer
  5499  00262A  2425               	addwf	fat_format@cntr,w,c
  5500  00262C  6ED9               	movwf	fsr2l,c
  5501  00262E  0E02               	movlw	high _buffer
  5502  002630  2026               	addwfc	fat_format@cntr+1,w,c
  5503  002632  6EDA               	movwf	fsr2h,c
  5504  002634  0E00               	movlw	0
  5505  002636  6EDF               	movwf	indf2,c
  5506  002638  4A25               	infsnz	fat_format@cntr,f,c
  5507  00263A  2A26               	incf	fat_format@cntr+1,f,c
  5508  00263C  D7F1               	goto	l12309
  5509  00263E                     u9480:
  5510                           
  5511                           ;fat16.c: 980: };fat16.c: 981: for(cntr=3; cntr<=17; ++cntr)
  5512  00263E  0E00               	movlw	0
  5513  002640  6E26               	movwf	fat_format@cntr+1,c
  5514  002642  0E03               	movlw	3
  5515  002644  6E25               	movwf	fat_format@cntr,c
  5516  002646                     l12321:
  5517  002646  5026               	movf	fat_format@cntr+1,w,c
  5518  002648  E111               	bnz	l12331
  5519  00264A  0E12               	movlw	18
  5520  00264C  5C25               	subwf	fat_format@cntr,w,c
  5521  00264E  B0D8               	btfsc	status,0,c
  5522  002650  D00D               	goto	u9500
  5523                           
  5524                           ;fat16.c: 982: {;fat16.c: 983: flash_page_write(cntr, buffer);
  5525  002652  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5526  002656  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5527  00265A  0EB2               	movlw	low _buffer
  5528  00265C  6E22               	movwf	flash_page_write@data,c
  5529  00265E  0E02               	movlw	high _buffer
  5530  002660  6E23               	movwf	flash_page_write@data+1,c
  5531  002662  EC56  F037         	call	_flash_page_write	;wreg free
  5532  002666  4A25               	infsnz	fat_format@cntr,f,c
  5533  002668  2A26               	incf	fat_format@cntr+1,f,c
  5534  00266A  D7ED               	goto	l12321
  5535  00266C                     u9500:
  5536  00266C                     l12331:
  5537                           
  5538                           ;fat16.c: 984: };fat16.c: 987: for(cntr=0; cntr<512; ++cntr)
  5539  00266C  0E00               	movlw	0
  5540  00266E  6E26               	movwf	fat_format@cntr+1,c
  5541  002670  0E00               	movlw	0
  5542  002672  6E25               	movwf	fat_format@cntr,c
  5543  002674                     l12333:
  5544  002674  0E02               	movlw	2
  5545  002676  5C26               	subwf	fat_format@cntr+1,w,c
  5546  002678  B0D8               	btfsc	status,0,c
  5547  00267A  D010               	goto	u9520
  5548                           
  5549                           ;fat16.c: 988: {;fat16.c: 989: buffer[cntr] = _get_root(cntr);
  5550  00267C  0EB2               	movlw	low _buffer
  5551  00267E  2425               	addwf	fat_format@cntr,w,c
  5552  002680  6ED9               	movwf	fsr2l,c
  5553  002682  0E02               	movlw	high _buffer
  5554  002684  2026               	addwfc	fat_format@cntr+1,w,c
  5555  002686  6EDA               	movwf	fsr2h,c
  5556  002688  C025  F001         	movff	fat_format@cntr,__get_root@idx
  5557  00268C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  5558  002690  EC40  F018         	call	__get_root	;wreg free
  5559  002694  6EDF               	movwf	indf2,c
  5560  002696  4A25               	infsnz	fat_format@cntr,f,c
  5561  002698  2A26               	incf	fat_format@cntr+1,f,c
  5562  00269A  D7EC               	goto	l12333
  5563  00269C                     u9520:
  5564                           
  5565                           ;fat16.c: 990: };fat16.c: 991: flash_page_write(18, buffer);
  5566  00269C  0E00               	movlw	0
  5567  00269E  6E21               	movwf	flash_page_write@page+1,c
  5568  0026A0  0E12               	movlw	18
  5569  0026A2  6E20               	movwf	flash_page_write@page,c
  5570  0026A4  0EB2               	movlw	low _buffer
  5571  0026A6  6E22               	movwf	flash_page_write@data,c
  5572  0026A8  0E02               	movlw	high _buffer
  5573  0026AA  6E23               	movwf	flash_page_write@data+1,c
  5574  0026AC  EC56  F037         	call	_flash_page_write	;wreg free
  5575                           
  5576                           ;fat16.c: 994: for(cntr=0; cntr<512; ++cntr)
  5577  0026B0  0E00               	movlw	0
  5578  0026B2  6E26               	movwf	fat_format@cntr+1,c
  5579  0026B4  0E00               	movlw	0
  5580  0026B6  6E25               	movwf	fat_format@cntr,c
  5581  0026B8                     l12347:
  5582  0026B8  0E02               	movlw	2
  5583  0026BA  5C26               	subwf	fat_format@cntr+1,w,c
  5584  0026BC  B0D8               	btfsc	status,0,c
  5585  0026BE  D00B               	goto	u9540
  5586                           
  5587                           ;fat16.c: 995: {;fat16.c: 996: buffer[cntr] = 0x00;
  5588  0026C0  0EB2               	movlw	low _buffer
  5589  0026C2  2425               	addwf	fat_format@cntr,w,c
  5590  0026C4  6ED9               	movwf	fsr2l,c
  5591  0026C6  0E02               	movlw	high _buffer
  5592  0026C8  2026               	addwfc	fat_format@cntr+1,w,c
  5593  0026CA  6EDA               	movwf	fsr2h,c
  5594  0026CC  0E00               	movlw	0
  5595  0026CE  6EDF               	movwf	indf2,c
  5596  0026D0  4A25               	infsnz	fat_format@cntr,f,c
  5597  0026D2  2A26               	incf	fat_format@cntr+1,f,c
  5598  0026D4  D7F1               	goto	l12347
  5599  0026D6                     u9540:
  5600                           
  5601                           ;fat16.c: 997: };fat16.c: 998: for(cntr=19; cntr<=21; ++cntr)
  5602  0026D6  0E00               	movlw	0
  5603  0026D8  6E26               	movwf	fat_format@cntr+1,c
  5604  0026DA  0E13               	movlw	19
  5605  0026DC  6E25               	movwf	fat_format@cntr,c
  5606  0026DE                     l12359:
  5607  0026DE  5026               	movf	fat_format@cntr+1,w,c
  5608  0026E0  E111               	bnz	l12369
  5609  0026E2  0E16               	movlw	22
  5610  0026E4  5C25               	subwf	fat_format@cntr,w,c
  5611  0026E6  B0D8               	btfsc	status,0,c
  5612  0026E8  D00D               	goto	u9560
  5613                           
  5614                           ;fat16.c: 999: {;fat16.c: 1000: flash_page_write(cntr, buffer);
  5615  0026EA  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5616  0026EE  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5617  0026F2  0EB2               	movlw	low _buffer
  5618  0026F4  6E22               	movwf	flash_page_write@data,c
  5619  0026F6  0E02               	movlw	high _buffer
  5620  0026F8  6E23               	movwf	flash_page_write@data+1,c
  5621  0026FA  EC56  F037         	call	_flash_page_write	;wreg free
  5622  0026FE  4A25               	infsnz	fat_format@cntr,f,c
  5623  002700  2A26               	incf	fat_format@cntr+1,f,c
  5624  002702  D7ED               	goto	l12359
  5625  002704                     u9560:
  5626  002704                     l12369:
  5627                           
  5628                           ;fat16.c: 1001: };fat16.c: 1004: for(cntr=0; cntr<512; ++cntr)
  5629  002704  0E00               	movlw	0
  5630  002706  6E26               	movwf	fat_format@cntr+1,c
  5631  002708  0E00               	movlw	0
  5632  00270A  6E25               	movwf	fat_format@cntr,c
  5633  00270C                     l12371:
  5634  00270C  0E02               	movlw	2
  5635  00270E  5C26               	subwf	fat_format@cntr+1,w,c
  5636  002710  B0D8               	btfsc	status,0,c
  5637  002712  D010               	goto	u9580
  5638                           
  5639                           ;fat16.c: 1005: {;fat16.c: 1006: buffer[cntr] = _get_data(cntr);
  5640  002714  0EB2               	movlw	low _buffer
  5641  002716  2425               	addwf	fat_format@cntr,w,c
  5642  002718  6ED9               	movwf	fsr2l,c
  5643  00271A  0E02               	movlw	high _buffer
  5644  00271C  2026               	addwfc	fat_format@cntr+1,w,c
  5645  00271E  6EDA               	movwf	fsr2h,c
  5646  002720  C025  F001         	movff	fat_format@cntr,__get_data@idx
  5647  002724  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  5648  002728  EC00  F03C         	call	__get_data	;wreg free
  5649  00272C  6EDF               	movwf	indf2,c
  5650  00272E  4A25               	infsnz	fat_format@cntr,f,c
  5651  002730  2A26               	incf	fat_format@cntr+1,f,c
  5652  002732  D7EC               	goto	l12371
  5653  002734                     u9580:
  5654                           
  5655                           ;fat16.c: 1007: };fat16.c: 1008: flash_page_write(22, buffer);
  5656  002734  0E00               	movlw	0
  5657  002736  6E21               	movwf	flash_page_write@page+1,c
  5658  002738  0E16               	movlw	22
  5659  00273A  6E20               	movwf	flash_page_write@page,c
  5660  00273C  0EB2               	movlw	low _buffer
  5661  00273E  6E22               	movwf	flash_page_write@data,c
  5662  002740  0E02               	movlw	high _buffer
  5663  002742  6E23               	movwf	flash_page_write@data+1,c
  5664  002744  EC56  F037         	call	_flash_page_write	;wreg free
  5665  002748  0012               	return		;funcret
  5666  00274A                     __end_of_fat_format:
  5667                           	opt stack 0
  5668                           tblptru	equ	0xFF8
  5669                           tblptrh	equ	0xFF7
  5670                           tblptrl	equ	0xFF6
  5671                           tablat	equ	0xFF5
  5672                           intcon	equ	0xFF2
  5673                           intcon3	equ	0xFF0
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           postdec1	equ	0xFE5
  5677                           plusw1	equ	0xFE3
  5678                           fsr1h	equ	0xFE2
  5679                           fsr1l	equ	0xFE1
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           plusw2	equ	0xFDB
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function __get_root *****************
  5688 ;; Defined at:
  5689 ;;		line 837 in file "fat16.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  idx             2    0[COMRAM] unsigned int 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      unsigned char 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;Total ram usage:        6 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		_fat_format
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text20
  5717  003080                     __ptext20:
  5718                           	opt stack 0
  5719  003080                     __get_root:
  5720                           	opt stack 27
  5721                           
  5722                           ;fat16.c: 839: if (idx < 0x20)
  5723                           
  5724                           ;incstack = 0
  5725  003080  5002               	movf	__get_root@idx+1,w,c
  5726  003082  E11D               	bnz	l11677
  5727  003084  0E20               	movlw	32
  5728  003086  5C01               	subwf	__get_root@idx,w,c
  5729  003088  B0D8               	btfsc	status,0,c
  5730  00308A  D019               	goto	l1985
  5731                           
  5732                           ;fat16.c: 840: {;fat16.c: 841: if (idx < 11)
  5733  00308C  5002               	movf	__get_root@idx+1,w,c
  5734  00308E  E110               	bnz	l11671
  5735  003090  0E0B               	movlw	11
  5736  003092  5C01               	subwf	__get_root@idx,w,c
  5737  003094  B0D8               	btfsc	status,0,c
  5738  003096  D00C               	goto	l1983
  5739                           
  5740                           ;fat16.c: 842: {;fat16.c: 843: return "SolarChargr"[idx];
  5741  003098  0EDC               	movlw	low STR_9
  5742  00309A  2401               	addwf	__get_root@idx,w,c
  5743  00309C  6EF6               	movwf	tblptrl,c
  5744  00309E  0E8F               	movlw	high STR_9
  5745  0030A0  2002               	addwfc	__get_root@idx+1,w,c
  5746  0030A2  6EF7               	movwf	tblptrh,c
  5747  0030A4                     	if	1	;There are 3 active tblptr bytes
  5748  0030A4  6AF8               	clrf	tblptru,c
  5749  0030A6  0E00               	movlw	low (__mediumconst shr (0+16))
  5750  0030A8  22F8               	addwfc	tblptru,f,c
  5751  0030AA                     	endif
  5752  0030AA  0008               	tblrd		*
  5753  0030AC  50F5               	movf	tablat,w,c
  5754  0030AE  0012               	return	
  5755  0030B0                     l1983:
  5756  0030B0                     l11671:
  5757                           
  5758                           ;fat16.c: 844: };fat16.c: 845: if(idx==11)
  5759  0030B0  0E0B               	movlw	11
  5760  0030B2  1801               	xorwf	__get_root@idx,w,c
  5761  0030B4  1002               	iorwf	__get_root@idx+1,w,c
  5762  0030B6  A4D8               	btfss	status,2,c
  5763  0030B8  D002               	goto	l1985
  5764                           
  5765                           ;fat16.c: 846: {;fat16.c: 847: return 0x08;
  5766  0030BA  0E08               	movlw	8
  5767  0030BC  0012               	return	
  5768  0030BE                     l1985:
  5769  0030BE                     l11677:
  5770                           
  5771                           ;fat16.c: 848: };fat16.c: 849: };fat16.c: 850: if (idx < 0x40)
  5772  0030BE  5002               	movf	__get_root@idx+1,w,c
  5773  0030C0  E103               	bnz	u8821
  5774  0030C2  0E40               	movlw	64
  5775  0030C4  5C01               	subwf	__get_root@idx,w,c
  5776  0030C6  B0D8               	btfsc	status,0,c
  5777  0030C8                     u8821:
  5778  0030C8  D0A4               	goto	l2011
  5779                           
  5780                           ;fat16.c: 851: {;fat16.c: 852: idx -= 0x20;
  5781  0030CA  0E20               	movlw	32
  5782  0030CC  5E01               	subwf	__get_root@idx,f,c
  5783  0030CE  0E00               	movlw	0
  5784  0030D0  5A02               	subwfb	__get_root@idx+1,f,c
  5785                           
  5786                           ;fat16.c: 853: if (idx < 0+8)
  5787  0030D2  5002               	movf	__get_root@idx+1,w,c
  5788  0030D4  E110               	bnz	l11685
  5789  0030D6  0E08               	movlw	8
  5790  0030D8  5C01               	subwf	__get_root@idx,w,c
  5791  0030DA  B0D8               	btfsc	status,0,c
  5792  0030DC  D00C               	goto	l1987
  5793                           
  5794                           ;fat16.c: 854: {;fat16.c: 855: return "FILE    "[idx];
  5795  0030DE  0EE8               	movlw	low STR_10
  5796  0030E0  2401               	addwf	__get_root@idx,w,c
  5797  0030E2  6EF6               	movwf	tblptrl,c
  5798  0030E4  0E8F               	movlw	high STR_10
  5799  0030E6  2002               	addwfc	__get_root@idx+1,w,c
  5800  0030E8  6EF7               	movwf	tblptrh,c
  5801  0030EA                     	if	1	;There are 3 active tblptr bytes
  5802  0030EA  6AF8               	clrf	tblptru,c
  5803  0030EC  0E00               	movlw	low (__mediumconst shr (0+16))
  5804  0030EE  22F8               	addwfc	tblptru,f,c
  5805  0030F0                     	endif
  5806  0030F0  0008               	tblrd		*
  5807  0030F2  50F5               	movf	tablat,w,c
  5808  0030F4  0012               	return	
  5809  0030F6                     l1987:
  5810  0030F6                     l11685:
  5811                           
  5812                           ;fat16.c: 856: };fat16.c: 857: if (idx < 11)
  5813  0030F6  5002               	movf	__get_root@idx+1,w,c
  5814  0030F8  E146               	bnz	l11777
  5815  0030FA  0E0B               	movlw	11
  5816  0030FC  5C01               	subwf	__get_root@idx,w,c
  5817  0030FE  B0D8               	btfsc	status,0,c
  5818  003100  D042               	goto	l1989
  5819                           
  5820                           ;fat16.c: 858: {;fat16.c: 859: return "TXT"[idx-8];
  5821  003102  0EF8               	movlw	248
  5822  003104  6E03               	movwf	??__get_root& (0+255),c
  5823  003106  0EFF               	movlw	255
  5824  003108  6E04               	movwf	(??__get_root+1)& (0+255),c
  5825  00310A  C001  F005         	movff	__get_root@idx,??__get_root+2
  5826  00310E  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  5827  003112  5003               	movf	??__get_root,w,c
  5828  003114  2605               	addwf	??__get_root+2,f,c
  5829  003116  5004               	movf	??__get_root+1,w,c
  5830  003118  2206               	addwfc	??__get_root+3,f,c
  5831  00311A  0EFA               	movlw	low STR_11
  5832  00311C  2405               	addwf	??__get_root+2,w,c
  5833  00311E  6EF6               	movwf	tblptrl,c
  5834  003120  0E8F               	movlw	high STR_11
  5835  003122  2006               	addwfc	??__get_root+3,w,c
  5836  003124  6EF7               	movwf	tblptrh,c
  5837  003126                     	if	1	;There are 3 active tblptr bytes
  5838  003126  6AF8               	clrf	tblptru,c
  5839  003128  0E00               	movlw	low (__mediumconst shr (0+16))
  5840  00312A  22F8               	addwfc	tblptru,f,c
  5841  00312C                     	endif
  5842  00312C  0008               	tblrd		*
  5843  00312E  50F5               	movf	tablat,w,c
  5844  003130  0012               	return	
  5845  003132                     
  5846                           ;fat16.c: 864: return 0x20;
  5847  003132  0E20               	movlw	32
  5848  003134  0012               	return	
  5849  003136                     
  5850                           ;fat16.c: 866: return 0x06;
  5851  003136  0E06               	movlw	6
  5852  003138  0012               	return	
  5853  00313A                     
  5854                           ;fat16.c: 868: return 0x28;
  5855  00313A  0E28               	movlw	40
  5856  00313C  0012               	return	
  5857  00313E                     
  5858                           ;fat16.c: 870: return 0x78;
  5859  00313E  0E78               	movlw	120
  5860  003140  0012               	return	
  5861  003142                     
  5862                           ;fat16.c: 872: return 0xDE;
  5863  003142  0EDE               	movlw	222
  5864  003144  0012               	return	
  5865  003146                     
  5866                           ;fat16.c: 874: return 0x38;
  5867  003146  0E38               	movlw	56
  5868  003148  0012               	return	
  5869  00314A                     
  5870                           ;fat16.c: 876: return 0x5F;
  5871  00314A  0E5F               	movlw	95
  5872  00314C  0012               	return	
  5873  00314E                     
  5874                           ;fat16.c: 878: return 0x4B;
  5875  00314E  0E4B               	movlw	75
  5876  003150  0012               	return	
  5877  003152                     
  5878                           ;fat16.c: 880: return 0x00;
  5879  003152  0E00               	movlw	0
  5880  003154  0012               	return	
  5881  003156                     
  5882                           ;fat16.c: 882: return 0x00;
  5883  003156  0E00               	movlw	0
  5884  003158  0012               	return	
  5885  00315A                     
  5886                           ;fat16.c: 884: return 0x04;
  5887  00315A  0E04               	movlw	4
  5888  00315C  0012               	return	
  5889  00315E                     
  5890                           ;fat16.c: 886: return 0x77;
  5891  00315E  0E77               	movlw	119
  5892  003160  0012               	return	
  5893  003162                     
  5894                           ;fat16.c: 888: return 0xDE;
  5895  003162  0EDE               	movlw	222
  5896  003164  0012               	return	
  5897  003166                     
  5898                           ;fat16.c: 890: return 0x38;
  5899  003166  0E38               	movlw	56
  5900  003168  0012               	return	
  5901  00316A                     
  5902                           ;fat16.c: 892: return ((unsigned char)((((uint16_t)2))&0xFF));
  5903  00316A  0E02               	movlw	2
  5904  00316C  0012               	return	
  5905  00316E                     
  5906                           ;fat16.c: 894: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  5907  00316E  0E00               	movlw	0
  5908  003170  0012               	return	
  5909  003172                     
  5910                           ;fat16.c: 896: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  5911  003172  0E0C               	movlw	12
  5912  003174  0012               	return	
  5913  003176                     
  5914                           ;fat16.c: 899: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  5915  003176  0E00               	movlw	0
  5916  003178  0012               	return	
  5917  00317A                     
  5918                           ;fat16.c: 902: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  5919  00317A  0E00               	movlw	0
  5920  00317C  0012               	return	
  5921  00317E                     
  5922                           ;fat16.c: 905: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  5923  00317E  0E00               	movlw	0
  5924  003180  0012               	return	
  5925  003182                     
  5926                           ;fat16.c: 908: return 0x00;
  5927  003182  0E00               	movlw	0
  5928  003184  0012               	return	
  5929  003186                     l1989:
  5930  003186                     l11777:
  5931  003186  C001  F003         	movff	__get_root@idx,??__get_root
  5932  00318A  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  5933                           
  5934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5935                           ; Switch size 1, requested type "space"
  5936                           ; Number of cases is 1, Range of values is 0 to 0
  5937                           ; switch strategies available:
  5938                           ; Name         Instructions Cycles
  5939                           ; simple_byte            4     3 (average)
  5940                           ;	Chosen strategy is simple_byte
  5941  00318E  5004               	movf	??__get_root+1,w,c
  5942  003190  0A00               	xorlw	0	; case 0
  5943  003192  A4D8               	btfss	status,2,c
  5944  003194  D7F6               	goto	l2010
  5945                           
  5946                           ; Switch size 1, requested type "space"
  5947                           ; Number of cases is 20, Range of values is 11 to 31
  5948                           ; switch strategies available:
  5949                           ; Name         Instructions Cycles
  5950                           ; simple_byte           61    31 (average)
  5951                           ;	Chosen strategy is simple_byte
  5952  003196  5003               	movf	??__get_root,w,c
  5953  003198  0A0B               	xorlw	11	; case 11
  5954  00319A  B4D8               	btfsc	status,2,c
  5955  00319C  D7CA               	goto	l1990
  5956  00319E  0A06               	xorlw	6	; case 13
  5957  0031A0  B4D8               	btfsc	status,2,c
  5958  0031A2  D7C9               	goto	l1991
  5959  0031A4  0A03               	xorlw	3	; case 14
  5960  0031A6  B4D8               	btfsc	status,2,c
  5961  0031A8  D7C8               	goto	l1992
  5962  0031AA  0A01               	xorlw	1	; case 15
  5963  0031AC  B4D8               	btfsc	status,2,c
  5964  0031AE  D7C7               	goto	l1993
  5965  0031B0  0A1F               	xorlw	31	; case 16
  5966  0031B2  B4D8               	btfsc	status,2,c
  5967  0031B4  D7C6               	goto	l1994
  5968  0031B6  0A01               	xorlw	1	; case 17
  5969  0031B8  B4D8               	btfsc	status,2,c
  5970  0031BA  D7C5               	goto	l1995
  5971  0031BC  0A03               	xorlw	3	; case 18
  5972  0031BE  B4D8               	btfsc	status,2,c
  5973  0031C0  D7C4               	goto	l1996
  5974  0031C2  0A01               	xorlw	1	; case 19
  5975  0031C4  B4D8               	btfsc	status,2,c
  5976  0031C6  D7C3               	goto	l1997
  5977  0031C8  0A07               	xorlw	7	; case 20
  5978  0031CA  B4D8               	btfsc	status,2,c
  5979  0031CC  D7C2               	goto	l1998
  5980  0031CE  0A01               	xorlw	1	; case 21
  5981  0031D0  B4D8               	btfsc	status,2,c
  5982  0031D2  D7C1               	goto	l1999
  5983  0031D4  0A03               	xorlw	3	; case 22
  5984  0031D6  B4D8               	btfsc	status,2,c
  5985  0031D8  D7C0               	goto	l2000
  5986  0031DA  0A01               	xorlw	1	; case 23
  5987  0031DC  B4D8               	btfsc	status,2,c
  5988  0031DE  D7BF               	goto	l2001
  5989  0031E0  0A0F               	xorlw	15	; case 24
  5990  0031E2  B4D8               	btfsc	status,2,c
  5991  0031E4  D7BE               	goto	l2002
  5992  0031E6  0A01               	xorlw	1	; case 25
  5993  0031E8  B4D8               	btfsc	status,2,c
  5994  0031EA  D7BD               	goto	l2003
  5995  0031EC  0A03               	xorlw	3	; case 26
  5996  0031EE  B4D8               	btfsc	status,2,c
  5997  0031F0  D7BC               	goto	l2004
  5998  0031F2  0A01               	xorlw	1	; case 27
  5999  0031F4  B4D8               	btfsc	status,2,c
  6000  0031F6  D7BB               	goto	l2005
  6001  0031F8  0A07               	xorlw	7	; case 28
  6002  0031FA  B4D8               	btfsc	status,2,c
  6003  0031FC  D7BA               	goto	l2006
  6004  0031FE  0A01               	xorlw	1	; case 29
  6005  003200  B4D8               	btfsc	status,2,c
  6006  003202  D7B9               	goto	l2007
  6007  003204  0A03               	xorlw	3	; case 30
  6008  003206  B4D8               	btfsc	status,2,c
  6009  003208  D7B8               	goto	l2008
  6010  00320A  0A01               	xorlw	1	; case 31
  6011  00320C  B4D8               	btfsc	status,2,c
  6012  00320E  D7B7               	goto	l2009
  6013  003210  D7B8               	goto	l2010
  6014  003212                     l2011:
  6015                           
  6016                           ;fat16.c: 910: };fat16.c: 911: return 0X00;
  6017  003212  0E00               	movlw	0
  6018  003214  0012               	return	
  6019  003216                     __end_of__get_root:
  6020                           	opt stack 0
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           intcon	equ	0xFF2
  6026                           intcon3	equ	0xFF0
  6027                           postinc0	equ	0xFEE
  6028                           wreg	equ	0xFE8
  6029                           postdec1	equ	0xFE5
  6030                           plusw1	equ	0xFE3
  6031                           fsr1h	equ	0xFE2
  6032                           fsr1l	equ	0xFE1
  6033                           indf2	equ	0xFDF
  6034                           postinc2	equ	0xFDE
  6035                           plusw2	equ	0xFDB
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function __get_mbr *****************
  6041 ;; Defined at:
  6042 ;;		line 625 in file "fat16.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  idx             2    0[COMRAM] unsigned int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      unsigned char 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;Total ram usage:        4 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_fat_get_format_status
  6066 ;;		_fat_format
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text21
  6071  004B72                     __ptext21:
  6072                           	opt stack 0
  6073  004B72                     __get_mbr:
  6074                           	opt stack 27
  6075                           
  6076                           ;fat16.c: 627: switch (idx)
  6077                           
  6078                           ;incstack = 0
  6079  004B72  D026               	goto	l1892
  6080  004B74                     
  6081                           ;fat16.c: 638: return 0x80;
  6082  004B74  0E80               	movlw	128
  6083  004B76  0012               	return	
  6084  004B78                     
  6085                           ;fat16.c: 640: return ((1%63)+1);
  6086  004B78  0E02               	movlw	2
  6087  004B7A  0012               	return	
  6088  004B7C                     
  6089                           ;fat16.c: 643: return (((1/(16*63)) & 0b00000011)<<6) | (((1/63)%16) & 0b00111111);
  6090  004B7C  0E00               	movlw	0
  6091  004B7E  0012               	return	
  6092  004B80                     
  6093                           ;fat16.c: 646: return (1/(16*63)) >> 2;
  6094  004B80  0E00               	movlw	0
  6095  004B82  0012               	return	
  6096  004B84                     
  6097                           ;fat16.c: 649: return 0x04;
  6098  004B84  0E04               	movlw	4
  6099  004B86  0012               	return	
  6100  004B88                     
  6101                           ;fat16.c: 652: return (((1+5000-1)%63)+1);
  6102  004B88  0E18               	movlw	24
  6103  004B8A  0012               	return	
  6104  004B8C                     
  6105                           ;fat16.c: 655: return ((((1+5000-1)/(16*63)) & 0b00000011) << 6) | ((((1+5000-1)/63)%16)
      +                           & 0b00111111);
  6106  004B8C  0E0F               	movlw	15
  6107  004B8E  0012               	return	
  6108  004B90                     
  6109                           ;fat16.c: 658: return ((1+5000-1)/(16*63)) >> 2;
  6110  004B90  0E01               	movlw	1
  6111  004B92  0012               	return	
  6112  004B94                     
  6113                           ;fat16.c: 661: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6114  004B94  0E01               	movlw	1
  6115  004B96  0012               	return	
  6116  004B98                     
  6117                           ;fat16.c: 663: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6118  004B98  0E00               	movlw	0
  6119  004B9A  0012               	return	
  6120  004B9C                     
  6121                           ;fat16.c: 665: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6122  004B9C  0E00               	movlw	0
  6123  004B9E  0012               	return	
  6124  004BA0                     
  6125                           ;fat16.c: 667: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6126  004BA0  0E00               	movlw	0
  6127  004BA2  0012               	return	
  6128  004BA4                     
  6129                           ;fat16.c: 669: return ((unsigned char)((((unsigned short)((((uint32_t)5000))&0xFFFF)))&0
      +                          xFF));
  6130  004BA4  0E88               	movlw	136
  6131  004BA6  0012               	return	
  6132  004BA8                     
  6133                           ;fat16.c: 671: return ((unsigned char)(((((unsigned short)((((uint32_t)5000))&0xFFFF)))>
      +                          >8)&0xFF));
  6134  004BA8  0E13               	movlw	19
  6135  004BAA  0012               	return	
  6136  004BAC                     
  6137                           ;fat16.c: 673: return ((unsigned char)((((unsigned short)(((((uint32_t)5000))>>16)&0xFFF
      +                          F)))&0xFF));
  6138  004BAC  0E00               	movlw	0
  6139  004BAE  0012               	return	
  6140  004BB0                     
  6141                           ;fat16.c: 675: return ((unsigned char)(((((unsigned short)(((((uint32_t)5000))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6142  004BB0  0E00               	movlw	0
  6143  004BB2  0012               	return	
  6144  004BB4                     
  6145                           ;fat16.c: 677: return 0X55AA >> 8;
  6146  004BB4  0E55               	movlw	85
  6147  004BB6  0012               	return	
  6148  004BB8                     
  6149                           ;fat16.c: 679: return 0X55AA & 0XFF;
  6150  004BB8  0EAA               	movlw	170
  6151  004BBA  0012               	return	
  6152  004BBC                     
  6153                           ;fat16.c: 681: return 0X00;
  6154  004BBC  0E00               	movlw	0
  6155                           
  6156                           ;fat16.c: 682: }
  6157  004BBE  0012               	return	
  6158  004BC0                     l1892:
  6159  004BC0  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6160  004BC4  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6161                           
  6162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6163                           ; Switch size 1, requested type "space"
  6164                           ; Number of cases is 1, Range of values is 1 to 1
  6165                           ; switch strategies available:
  6166                           ; Name         Instructions Cycles
  6167                           ; simple_byte            4     3 (average)
  6168                           ;	Chosen strategy is simple_byte
  6169  004BC8  5004               	movf	??__get_mbr+1,w,c
  6170  004BCA  0A01               	xorlw	1	; case 1
  6171  004BCC  A4D8               	btfss	status,2,c
  6172  004BCE  D7F6               	goto	l1912
  6173                           
  6174                           ; Switch size 1, requested type "space"
  6175                           ; Number of cases is 18, Range of values is 190 to 255
  6176                           ; switch strategies available:
  6177                           ; Name         Instructions Cycles
  6178                           ; simple_byte           55    28 (average)
  6179                           ;	Chosen strategy is simple_byte
  6180  004BD0  5003               	movf	??__get_mbr,w,c
  6181  004BD2  0ABE               	xorlw	190	; case 190
  6182  004BD4  B4D8               	btfsc	status,2,c
  6183  004BD6  D7CE               	goto	l1893
  6184  004BD8  0A01               	xorlw	1	; case 191
  6185  004BDA  B4D8               	btfsc	status,2,c
  6186  004BDC  D7CD               	goto	l1895
  6187  004BDE  0A7F               	xorlw	127	; case 192
  6188  004BE0  B4D8               	btfsc	status,2,c
  6189  004BE2  D7CC               	goto	l1896
  6190  004BE4  0A01               	xorlw	1	; case 193
  6191  004BE6  B4D8               	btfsc	status,2,c
  6192  004BE8  D7CB               	goto	l1897
  6193  004BEA  0A03               	xorlw	3	; case 194
  6194  004BEC  B4D8               	btfsc	status,2,c
  6195  004BEE  D7CA               	goto	l1898
  6196  004BF0  0A01               	xorlw	1	; case 195
  6197  004BF2  B4D8               	btfsc	status,2,c
  6198  004BF4  D7C9               	goto	l1899
  6199  004BF6  0A07               	xorlw	7	; case 196
  6200  004BF8  B4D8               	btfsc	status,2,c
  6201  004BFA  D7C8               	goto	l1900
  6202  004BFC  0A01               	xorlw	1	; case 197
  6203  004BFE  B4D8               	btfsc	status,2,c
  6204  004C00  D7C7               	goto	l1901
  6205  004C02  0A03               	xorlw	3	; case 198
  6206  004C04  B4D8               	btfsc	status,2,c
  6207  004C06  D7C6               	goto	l1902
  6208  004C08  0A01               	xorlw	1	; case 199
  6209  004C0A  B4D8               	btfsc	status,2,c
  6210  004C0C  D7C5               	goto	l1903
  6211  004C0E  0A0F               	xorlw	15	; case 200
  6212  004C10  B4D8               	btfsc	status,2,c
  6213  004C12  D7C4               	goto	l1904
  6214  004C14  0A01               	xorlw	1	; case 201
  6215  004C16  B4D8               	btfsc	status,2,c
  6216  004C18  D7C3               	goto	l1905
  6217  004C1A  0A03               	xorlw	3	; case 202
  6218  004C1C  B4D8               	btfsc	status,2,c
  6219  004C1E  D7C2               	goto	l1906
  6220  004C20  0A01               	xorlw	1	; case 203
  6221  004C22  B4D8               	btfsc	status,2,c
  6222  004C24  D7C1               	goto	l1907
  6223  004C26  0A07               	xorlw	7	; case 204
  6224  004C28  B4D8               	btfsc	status,2,c
  6225  004C2A  D7C0               	goto	l1908
  6226  004C2C  0A01               	xorlw	1	; case 205
  6227  004C2E  B4D8               	btfsc	status,2,c
  6228  004C30  D7BF               	goto	l1909
  6229  004C32  0A33               	xorlw	51	; case 254
  6230  004C34  B4D8               	btfsc	status,2,c
  6231  004C36  D7BE               	goto	l1910
  6232  004C38  0A01               	xorlw	1	; case 255
  6233  004C3A  B4D8               	btfsc	status,2,c
  6234  004C3C  D7BD               	goto	l1911
  6235  004C3E  D7BE               	goto	l1912
  6236  004C40                     __end_of__get_mbr:
  6237                           	opt stack 0
  6238                           tblptru	equ	0xFF8
  6239                           tblptrh	equ	0xFF7
  6240                           tblptrl	equ	0xFF6
  6241                           tablat	equ	0xFF5
  6242                           intcon	equ	0xFF2
  6243                           intcon3	equ	0xFF0
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           postdec1	equ	0xFE5
  6247                           plusw1	equ	0xFE3
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           plusw2	equ	0xFDB
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function __get_fbr *****************
  6258 ;; Defined at:
  6259 ;;		line 685 in file "fat16.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  idx             2    0[COMRAM] unsigned int 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      unsigned char 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;Total ram usage:        4 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_fat_get_format_status
  6283 ;;		_fat_format
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text22
  6288  001A30                     __ptext22:
  6289                           	opt stack 0
  6290  001A30                     __get_fbr:
  6291                           	opt stack 27
  6292                           
  6293                           ;fat16.c: 687: switch (idx)
  6294                           
  6295                           ;incstack = 0
  6296  001A30  D093               	goto	l1916
  6297  001A32                     
  6298                           ;fat16.c: 690: return 0xEB;
  6299  001A32  0EEB               	movlw	235
  6300  001A34  0012               	return	
  6301  001A36                     
  6302                           ;fat16.c: 692: return 0x3C;
  6303  001A36  0E3C               	movlw	60
  6304  001A38  0012               	return	
  6305  001A3A                     
  6306                           ;fat16.c: 694: return 0x90;
  6307  001A3A  0E90               	movlw	144
  6308  001A3C  0012               	return	
  6309  001A3E                     
  6310                           ;fat16.c: 696: return "MSDOS5.0"[0];
  6311  001A3E  0EF1               	movlw	low STR_1
  6312  001A40  6EF6               	movwf	tblptrl,c
  6313  001A42                     	if	1	;There is more than 1 active tblptr byte
  6314  001A42  0E8F               	movlw	high STR_1
  6315  001A44  6EF7               	movwf	tblptrh,c
  6316  001A46                     	endif
  6317  001A46                     	if	1	;There are 3 active tblptr bytes
  6318  001A46  0E00               	movlw	low (STR_1 shr (0+16))
  6319  001A48  6EF8               	movwf	tblptru,c
  6320  001A4A                     	endif
  6321  001A4A  0008               	tblrd		*
  6322  001A4C  50F5               	movf	tablat,w,c
  6323  001A4E  0012               	return	
  6324  001A50                     
  6325                           ;fat16.c: 698: return "MSDOS5.0"[1];
  6326  001A50  0EF2               	movlw	low (STR_1+1)
  6327  001A52  6EF6               	movwf	tblptrl,c
  6328  001A54  0E8F               	movlw	high (STR_1+1)
  6329  001A56  6EF7               	movwf	tblptrh,c
  6330  001A58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6331  001A58  6AF8               	clrf	tblptru,c
  6332  001A5A                     	endif
  6333  001A5A                     	if	0	;tblptru may be non-zero
  6334  001A5A                     	endif
  6335  001A5A  0008               	tblrd		*
  6336  001A5C  50F5               	movf	tablat,w,c
  6337  001A5E  0012               	return	
  6338  001A60                     
  6339                           ;fat16.c: 700: return "MSDOS5.0"[2];
  6340  001A60  0EF3               	movlw	low (STR_1+2)
  6341  001A62  6EF6               	movwf	tblptrl,c
  6342  001A64  0E8F               	movlw	high (STR_1+2)
  6343  001A66  6EF7               	movwf	tblptrh,c
  6344  001A68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6345  001A68  6AF8               	clrf	tblptru,c
  6346  001A6A                     	endif
  6347  001A6A                     	if	0	;tblptru may be non-zero
  6348  001A6A                     	endif
  6349  001A6A  0008               	tblrd		*
  6350  001A6C  50F5               	movf	tablat,w,c
  6351  001A6E  0012               	return	
  6352  001A70                     
  6353                           ;fat16.c: 702: return "MSDOS5.0"[3];
  6354  001A70  0EF4               	movlw	low (STR_1+3)
  6355  001A72  6EF6               	movwf	tblptrl,c
  6356  001A74  0E8F               	movlw	high (STR_1+3)
  6357  001A76  6EF7               	movwf	tblptrh,c
  6358  001A78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6359  001A78  6AF8               	clrf	tblptru,c
  6360  001A7A                     	endif
  6361  001A7A                     	if	0	;tblptru may be non-zero
  6362  001A7A                     	endif
  6363  001A7A  0008               	tblrd		*
  6364  001A7C  50F5               	movf	tablat,w,c
  6365  001A7E  0012               	return	
  6366  001A80                     
  6367                           ;fat16.c: 704: return "MSDOS5.0"[4];
  6368  001A80  0EF5               	movlw	low (STR_1+4)
  6369  001A82  6EF6               	movwf	tblptrl,c
  6370  001A84  0E8F               	movlw	high (STR_1+4)
  6371  001A86  6EF7               	movwf	tblptrh,c
  6372  001A88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6373  001A88  6AF8               	clrf	tblptru,c
  6374  001A8A                     	endif
  6375  001A8A                     	if	0	;tblptru may be non-zero
  6376  001A8A                     	endif
  6377  001A8A  0008               	tblrd		*
  6378  001A8C  50F5               	movf	tablat,w,c
  6379  001A8E  0012               	return	
  6380  001A90                     
  6381                           ;fat16.c: 706: return "MSDOS5.0"[5];
  6382  001A90  0EF6               	movlw	low (STR_1+5)
  6383  001A92  6EF6               	movwf	tblptrl,c
  6384  001A94  0E8F               	movlw	high (STR_1+5)
  6385  001A96  6EF7               	movwf	tblptrh,c
  6386  001A98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6387  001A98  6AF8               	clrf	tblptru,c
  6388  001A9A                     	endif
  6389  001A9A                     	if	0	;tblptru may be non-zero
  6390  001A9A                     	endif
  6391  001A9A  0008               	tblrd		*
  6392  001A9C  50F5               	movf	tablat,w,c
  6393  001A9E  0012               	return	
  6394  001AA0                     
  6395                           ;fat16.c: 708: return "MSDOS5.0"[6];
  6396  001AA0  0EF7               	movlw	low (STR_1+6)
  6397  001AA2  6EF6               	movwf	tblptrl,c
  6398  001AA4  0E8F               	movlw	high (STR_1+6)
  6399  001AA6  6EF7               	movwf	tblptrh,c
  6400  001AA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6401  001AA8  6AF8               	clrf	tblptru,c
  6402  001AAA                     	endif
  6403  001AAA                     	if	0	;tblptru may be non-zero
  6404  001AAA                     	endif
  6405  001AAA  0008               	tblrd		*
  6406  001AAC  50F5               	movf	tablat,w,c
  6407  001AAE  0012               	return	
  6408  001AB0                     
  6409                           ;fat16.c: 710: return "MSDOS5.0"[7];
  6410  001AB0  0EF8               	movlw	low (STR_1+7)
  6411  001AB2  6EF6               	movwf	tblptrl,c
  6412  001AB4  0E8F               	movlw	high (STR_1+7)
  6413  001AB6  6EF7               	movwf	tblptrh,c
  6414  001AB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6415  001AB8  6AF8               	clrf	tblptru,c
  6416  001ABA                     	endif
  6417  001ABA                     	if	0	;tblptru may be non-zero
  6418  001ABA                     	endif
  6419  001ABA  0008               	tblrd		*
  6420  001ABC  50F5               	movf	tablat,w,c
  6421  001ABE  0012               	return	
  6422  001AC0                     
  6423                           ;fat16.c: 712: return ((unsigned char)((((uint16_t)512))&0xFF));
  6424  001AC0  0E00               	movlw	0
  6425  001AC2  0012               	return	
  6426  001AC4                     
  6427                           ;fat16.c: 714: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  6428  001AC4  0E02               	movlw	2
  6429  001AC6  0012               	return	
  6430  001AC8                     
  6431                           ;fat16.c: 716: return 1;
  6432  001AC8  0E01               	movlw	1
  6433  001ACA  0012               	return	
  6434  001ACC                     
  6435                           ;fat16.c: 718: return ((unsigned char)((((uint16_t)1))&0xFF));
  6436  001ACC  0E01               	movlw	1
  6437  001ACE  0012               	return	
  6438  001AD0                     
  6439                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  6440  001AD0  0E00               	movlw	0
  6441  001AD2  0012               	return	
  6442  001AD4                     
  6443                           ;fat16.c: 724: return 1;
  6444  001AD4  0E01               	movlw	1
  6445  001AD6  0012               	return	
  6446  001AD8                     
  6447                           ;fat16.c: 726: return ((unsigned char)((((uint16_t)64))&0xFF));
  6448  001AD8  0E40               	movlw	64
  6449  001ADA  0012               	return	
  6450  001ADC                     
  6451                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  6452  001ADC  0E00               	movlw	0
  6453  001ADE  0012               	return	
  6454  001AE0                     
  6455                           ;fat16.c: 732: return ((unsigned char)((((uint16_t)4114))&0xFF));
  6456  001AE0  0E12               	movlw	18
  6457  001AE2  0012               	return	
  6458  001AE4                     
  6459                           ;fat16.c: 735: return ((unsigned char)(((((uint16_t)4114))>>8)&0xFF));
  6460  001AE4  0E10               	movlw	16
  6461  001AE6  0012               	return	
  6462  001AE8                     
  6463                           ;fat16.c: 738: return 0XF8;
  6464  001AE8  0EF8               	movlw	248
  6465  001AEA  0012               	return	
  6466  001AEC                     
  6467                           ;fat16.c: 740: return ((unsigned char)((((uint16_t)16))&0xFF));
  6468  001AEC  0E10               	movlw	16
  6469  001AEE  0012               	return	
  6470  001AF0                     
  6471                           ;fat16.c: 743: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6472  001AF0  0E00               	movlw	0
  6473  001AF2  0012               	return	
  6474  001AF4                     
  6475                           ;fat16.c: 746: return ((unsigned char)((((uint16_t)63))&0xFF));
  6476  001AF4  0E3F               	movlw	63
  6477  001AF6  0012               	return	
  6478  001AF8                     
  6479                           ;fat16.c: 749: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  6480  001AF8  0E00               	movlw	0
  6481  001AFA  0012               	return	
  6482  001AFC                     
  6483                           ;fat16.c: 752: return ((unsigned char)((((uint16_t)16))&0xFF));
  6484  001AFC  0E10               	movlw	16
  6485  001AFE  0012               	return	
  6486  001B00                     
  6487                           ;fat16.c: 755: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6488  001B00  0E00               	movlw	0
  6489  001B02  0012               	return	
  6490  001B04                     
  6491                           ;fat16.c: 758: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  6492  001B04  0E00               	movlw	0
  6493  001B06  0012               	return	
  6494  001B08                     
  6495                           ;fat16.c: 761: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  6496  001B08  0E00               	movlw	0
  6497  001B0A  0012               	return	
  6498  001B0C                     
  6499                           ;fat16.c: 764: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  6500  001B0C  0E00               	movlw	0
  6501  001B0E  0012               	return	
  6502  001B10                     
  6503                           ;fat16.c: 767: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6504  001B10  0E00               	movlw	0
  6505  001B12  0012               	return	
  6506  001B14                     
  6507                           ;fat16.c: 770: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  6508  001B14  0E01               	movlw	1
  6509  001B16  0012               	return	
  6510  001B18                     
  6511                           ;fat16.c: 773: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  6512  001B18  0E00               	movlw	0
  6513  001B1A  0012               	return	
  6514  001B1C                     
  6515                           ;fat16.c: 776: return ((unsigned char)((((unsigned short)((((uint32_t)((16*1)+1)))&0xFFF
      +                          F)))&0xFF));
  6516  001B1C  0E11               	movlw	17
  6517  001B1E  0012               	return	
  6518  001B20                     
  6519                           ;fat16.c: 779: return ((unsigned char)(((((unsigned short)((((uint32_t)((16*1)+1)))&0xFF
      +                          FF)))>>8)&0xFF));
  6520  001B20  0E00               	movlw	0
  6521  001B22  0012               	return	
  6522  001B24                     
  6523                           ;fat16.c: 782: return ((unsigned char)((((unsigned short)(((((uint32_t)((16*1)+1)))>>16)
      +                          &0xFFFF)))&0xFF));
  6524  001B24  0E11               	movlw	17
  6525  001B26  0012               	return	
  6526  001B28                     
  6527                           ;fat16.c: 785: return ((unsigned char)(((((unsigned short)(((((uint32_t)((16*1)+1)))>>16
      +                          )&0xFFFF)))>>8)&0xFF));
  6528  001B28  0E00               	movlw	0
  6529  001B2A  0012               	return	
  6530  001B2C                     
  6531                           ;fat16.c: 788: return 'F';
  6532  001B2C  0E46               	movlw	70
  6533  001B2E  0012               	return	
  6534  001B30                     
  6535                           ;fat16.c: 790: return 'A';
  6536  001B30  0E41               	movlw	65
  6537  001B32  0012               	return	
  6538  001B34                     
  6539                           ;fat16.c: 792: return 'T';
  6540  001B34  0E54               	movlw	84
  6541  001B36  0012               	return	
  6542  001B38                     
  6543                           ;fat16.c: 794: return '1';
  6544  001B38  0E31               	movlw	49
  6545  001B3A  0012               	return	
  6546  001B3C                     
  6547                           ;fat16.c: 796: return '6';
  6548  001B3C  0E36               	movlw	54
  6549  001B3E  0012               	return	
  6550  001B40                     
  6551                           ;fat16.c: 798: return ' ';
  6552  001B40  0E20               	movlw	32
  6553  001B42  0012               	return	
  6554  001B44                     
  6555                           ;fat16.c: 800: return ' ';
  6556  001B44  0E20               	movlw	32
  6557  001B46  0012               	return	
  6558  001B48                     
  6559                           ;fat16.c: 802: return ' ';
  6560  001B48  0E20               	movlw	32
  6561  001B4A  0012               	return	
  6562  001B4C                     
  6563                           ;fat16.c: 804: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  6564  001B4C  0E55               	movlw	85
  6565  001B4E  0012               	return	
  6566  001B50                     
  6567                           ;fat16.c: 807: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  6568  001B50  0EAA               	movlw	170
  6569  001B52  0012               	return	
  6570  001B54                     
  6571                           ;fat16.c: 810: return 0X00;
  6572  001B54  0E00               	movlw	0
  6573                           
  6574                           ;fat16.c: 811: }
  6575  001B56  0012               	return	
  6576  001B58                     l1916:
  6577  001B58  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  6578  001B5C  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  6579                           
  6580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6581                           ; Switch size 1, requested type "space"
  6582                           ; Number of cases is 2, Range of values is 0 to 1
  6583                           ; switch strategies available:
  6584                           ; Name         Instructions Cycles
  6585                           ; simple_byte            7     4 (average)
  6586                           ;	Chosen strategy is simple_byte
  6587  001B60  5004               	movf	??__get_fbr+1,w,c
  6588  001B62  0A00               	xorlw	0	; case 0
  6589  001B64  B4D8               	btfsc	status,2,c
  6590  001B66  D004               	goto	l14577
  6591  001B68  0A01               	xorlw	1	; case 1
  6592  001B6A  B4D8               	btfsc	status,2,c
  6593  001B6C  D08D               	goto	l14579
  6594  001B6E  D7F2               	goto	l1966
  6595  001B70                     l14577:
  6596                           
  6597                           ; Switch size 1, requested type "space"
  6598                           ; Number of cases is 46, Range of values is 0 to 61
  6599                           ; switch strategies available:
  6600                           ; Name         Instructions Cycles
  6601                           ; simple_byte          139    70 (average)
  6602                           ;	Chosen strategy is simple_byte
  6603  001B70  5003               	movf	??__get_fbr,w,c
  6604  001B72  0A00               	xorlw	0	; case 0
  6605  001B74  B4D8               	btfsc	status,2,c
  6606  001B76  D75D               	goto	l1917
  6607  001B78  0A01               	xorlw	1	; case 1
  6608  001B7A  B4D8               	btfsc	status,2,c
  6609  001B7C  D75C               	goto	l1919
  6610  001B7E  0A03               	xorlw	3	; case 2
  6611  001B80  B4D8               	btfsc	status,2,c
  6612  001B82  D75B               	goto	l1920
  6613  001B84  0A01               	xorlw	1	; case 3
  6614  001B86  B4D8               	btfsc	status,2,c
  6615  001B88  D75A               	goto	l1921
  6616  001B8A  0A07               	xorlw	7	; case 4
  6617  001B8C  B4D8               	btfsc	status,2,c
  6618  001B8E  D760               	goto	l1922
  6619  001B90  0A01               	xorlw	1	; case 5
  6620  001B92  B4D8               	btfsc	status,2,c
  6621  001B94  D765               	goto	l1923
  6622  001B96  0A03               	xorlw	3	; case 6
  6623  001B98  B4D8               	btfsc	status,2,c
  6624  001B9A  D76A               	goto	l1924
  6625  001B9C  0A01               	xorlw	1	; case 7
  6626  001B9E  B4D8               	btfsc	status,2,c
  6627  001BA0  D76F               	goto	l1925
  6628  001BA2  0A0F               	xorlw	15	; case 8
  6629  001BA4  B4D8               	btfsc	status,2,c
  6630  001BA6  D774               	goto	l1926
  6631  001BA8  0A01               	xorlw	1	; case 9
  6632  001BAA  B4D8               	btfsc	status,2,c
  6633  001BAC  D779               	goto	l1927
  6634  001BAE  0A03               	xorlw	3	; case 10
  6635  001BB0  B4D8               	btfsc	status,2,c
  6636  001BB2  D77E               	goto	l1928
  6637  001BB4  0A01               	xorlw	1	; case 11
  6638  001BB6  B4D8               	btfsc	status,2,c
  6639  001BB8  D783               	goto	l1929
  6640  001BBA  0A07               	xorlw	7	; case 12
  6641  001BBC  B4D8               	btfsc	status,2,c
  6642  001BBE  D782               	goto	l1930
  6643  001BC0  0A01               	xorlw	1	; case 13
  6644  001BC2  B4D8               	btfsc	status,2,c
  6645  001BC4  D781               	goto	l1931
  6646  001BC6  0A03               	xorlw	3	; case 14
  6647  001BC8  B4D8               	btfsc	status,2,c
  6648  001BCA  D780               	goto	l1932
  6649  001BCC  0A01               	xorlw	1	; case 15
  6650  001BCE  B4D8               	btfsc	status,2,c
  6651  001BD0  D77F               	goto	l1933
  6652  001BD2  0A1F               	xorlw	31	; case 16
  6653  001BD4  B4D8               	btfsc	status,2,c
  6654  001BD6  D77E               	goto	l1934
  6655  001BD8  0A01               	xorlw	1	; case 17
  6656  001BDA  B4D8               	btfsc	status,2,c
  6657  001BDC  D77D               	goto	l1935
  6658  001BDE  0A03               	xorlw	3	; case 18
  6659  001BE0  B4D8               	btfsc	status,2,c
  6660  001BE2  D77C               	goto	l1936
  6661  001BE4  0A01               	xorlw	1	; case 19
  6662  001BE6  B4D8               	btfsc	status,2,c
  6663  001BE8  D77B               	goto	l1937
  6664  001BEA  0A07               	xorlw	7	; case 20
  6665  001BEC  B4D8               	btfsc	status,2,c
  6666  001BEE  D77A               	goto	l1938
  6667  001BF0  0A01               	xorlw	1	; case 21
  6668  001BF2  B4D8               	btfsc	status,2,c
  6669  001BF4  D779               	goto	l1939
  6670  001BF6  0A03               	xorlw	3	; case 22
  6671  001BF8  B4D8               	btfsc	status,2,c
  6672  001BFA  D778               	goto	l1940
  6673  001BFC  0A01               	xorlw	1	; case 23
  6674  001BFE  B4D8               	btfsc	status,2,c
  6675  001C00  D777               	goto	l1941
  6676  001C02  0A0F               	xorlw	15	; case 24
  6677  001C04  B4D8               	btfsc	status,2,c
  6678  001C06  D776               	goto	l1942
  6679  001C08  0A01               	xorlw	1	; case 25
  6680  001C0A  B4D8               	btfsc	status,2,c
  6681  001C0C  D775               	goto	l1943
  6682  001C0E  0A03               	xorlw	3	; case 26
  6683  001C10  B4D8               	btfsc	status,2,c
  6684  001C12  D774               	goto	l1944
  6685  001C14  0A01               	xorlw	1	; case 27
  6686  001C16  B4D8               	btfsc	status,2,c
  6687  001C18  D773               	goto	l1945
  6688  001C1A  0A07               	xorlw	7	; case 28
  6689  001C1C  B4D8               	btfsc	status,2,c
  6690  001C1E  D772               	goto	l1946
  6691  001C20  0A01               	xorlw	1	; case 29
  6692  001C22  B4D8               	btfsc	status,2,c
  6693  001C24  D771               	goto	l1947
  6694  001C26  0A03               	xorlw	3	; case 30
  6695  001C28  B4D8               	btfsc	status,2,c
  6696  001C2A  D770               	goto	l1948
  6697  001C2C  0A01               	xorlw	1	; case 31
  6698  001C2E  B4D8               	btfsc	status,2,c
  6699  001C30  D76F               	goto	l1949
  6700  001C32  0A37               	xorlw	55	; case 40
  6701  001C34  B4D8               	btfsc	status,2,c
  6702  001C36  D76E               	goto	l1950
  6703  001C38  0A01               	xorlw	1	; case 41
  6704  001C3A  B4D8               	btfsc	status,2,c
  6705  001C3C  D76D               	goto	l1951
  6706  001C3E  0A05               	xorlw	5	; case 44
  6707  001C40  B4D8               	btfsc	status,2,c
  6708  001C42  D76C               	goto	l1952
  6709  001C44  0A01               	xorlw	1	; case 45
  6710  001C46  B4D8               	btfsc	status,2,c
  6711  001C48  D76B               	goto	l1953
  6712  001C4A  0A03               	xorlw	3	; case 46
  6713  001C4C  B4D8               	btfsc	status,2,c
  6714  001C4E  D76A               	goto	l1954
  6715  001C50  0A01               	xorlw	1	; case 47
  6716  001C52  B4D8               	btfsc	status,2,c
  6717  001C54  D769               	goto	l1955
  6718  001C56  0A19               	xorlw	25	; case 54
  6719  001C58  B4D8               	btfsc	status,2,c
  6720  001C5A  D768               	goto	l1956
  6721  001C5C  0A01               	xorlw	1	; case 55
  6722  001C5E  B4D8               	btfsc	status,2,c
  6723  001C60  D767               	goto	l1957
  6724  001C62  0A0F               	xorlw	15	; case 56
  6725  001C64  B4D8               	btfsc	status,2,c
  6726  001C66  D766               	goto	l1958
  6727  001C68  0A01               	xorlw	1	; case 57
  6728  001C6A  B4D8               	btfsc	status,2,c
  6729  001C6C  D765               	goto	l1959
  6730  001C6E  0A03               	xorlw	3	; case 58
  6731  001C70  B4D8               	btfsc	status,2,c
  6732  001C72  D764               	goto	l1960
  6733  001C74  0A01               	xorlw	1	; case 59
  6734  001C76  B4D8               	btfsc	status,2,c
  6735  001C78  D763               	goto	l1961
  6736  001C7A  0A07               	xorlw	7	; case 60
  6737  001C7C  B4D8               	btfsc	status,2,c
  6738  001C7E  D762               	goto	l1962
  6739  001C80  0A01               	xorlw	1	; case 61
  6740  001C82  B4D8               	btfsc	status,2,c
  6741  001C84  D761               	goto	l1963
  6742  001C86  D766               	goto	l1966
  6743  001C88                     l14579:
  6744                           
  6745                           ; Switch size 1, requested type "space"
  6746                           ; Number of cases is 2, Range of values is 254 to 255
  6747                           ; switch strategies available:
  6748                           ; Name         Instructions Cycles
  6749                           ; simple_byte            7     4 (average)
  6750                           ;	Chosen strategy is simple_byte
  6751  001C88  5003               	movf	??__get_fbr,w,c
  6752  001C8A  0AFE               	xorlw	254	; case 254
  6753  001C8C  B4D8               	btfsc	status,2,c
  6754  001C8E  D75E               	goto	l1964
  6755  001C90  0A01               	xorlw	1	; case 255
  6756  001C92  B4D8               	btfsc	status,2,c
  6757  001C94  D75D               	goto	l1965
  6758  001C96  D75E               	goto	l1966
  6759  001C98                     __end_of__get_fbr:
  6760                           	opt stack 0
  6761                           tblptru	equ	0xFF8
  6762                           tblptrh	equ	0xFF7
  6763                           tblptrl	equ	0xFF6
  6764                           tablat	equ	0xFF5
  6765                           intcon	equ	0xFF2
  6766                           intcon3	equ	0xFF0
  6767                           postinc0	equ	0xFEE
  6768                           wreg	equ	0xFE8
  6769                           postdec1	equ	0xFE5
  6770                           plusw1	equ	0xFE3
  6771                           fsr1h	equ	0xFE2
  6772                           fsr1l	equ	0xFE1
  6773                           indf2	equ	0xFDF
  6774                           postinc2	equ	0xFDE
  6775                           plusw2	equ	0xFDB
  6776                           fsr2h	equ	0xFDA
  6777                           fsr2l	equ	0xFD9
  6778                           status	equ	0xFD8
  6779                           
  6780 ;; *************** function __get_fat *****************
  6781 ;; Defined at:
  6782 ;;		line 814 in file "fat16.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  idx             2    0[COMRAM] unsigned int 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;Total ram usage:        4 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_fat_format
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text23
  6810  006DAA                     __ptext23:
  6811                           	opt stack 0
  6812  006DAA                     __get_fat:
  6813                           	opt stack 27
  6814                           
  6815                           ;fat16.c: 816: switch (idx)
  6816                           
  6817                           ;incstack = 0
  6818  006DAA  D00E               	goto	l1970
  6819  006DAC                     
  6820                           ;fat16.c: 820: return 0xF8;
  6821  006DAC  0EF8               	movlw	248
  6822  006DAE  0012               	return	
  6823  006DB0                     
  6824                           ;fat16.c: 822: return 0xFF;
  6825  006DB0  0EFF               	movlw	255
  6826  006DB2  0012               	return	
  6827  006DB4                     
  6828                           ;fat16.c: 824: return 0xFF;
  6829  006DB4  0EFF               	movlw	255
  6830  006DB6  0012               	return	
  6831  006DB8                     
  6832                           ;fat16.c: 826: return 0xFF;
  6833  006DB8  0EFF               	movlw	255
  6834  006DBA  0012               	return	
  6835  006DBC                     
  6836                           ;fat16.c: 829: return 0xFF;
  6837  006DBC  0EFF               	movlw	255
  6838  006DBE  0012               	return	
  6839  006DC0                     
  6840                           ;fat16.c: 831: return 0xFF;
  6841  006DC0  0EFF               	movlw	255
  6842  006DC2  0012               	return	
  6843  006DC4                     
  6844                           ;fat16.c: 833: return 0X00;
  6845  006DC4  0E00               	movlw	0
  6846                           
  6847                           ;fat16.c: 834: }
  6848  006DC6  0012               	return	
  6849  006DC8                     l1970:
  6850  006DC8  C001  F003         	movff	__get_fat@idx,??__get_fat
  6851  006DCC  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  6852                           
  6853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6854                           ; Switch size 1, requested type "space"
  6855                           ; Number of cases is 1, Range of values is 0 to 0
  6856                           ; switch strategies available:
  6857                           ; Name         Instructions Cycles
  6858                           ; simple_byte            4     3 (average)
  6859                           ;	Chosen strategy is simple_byte
  6860  006DD0  5004               	movf	??__get_fat+1,w,c
  6861  006DD2  0A00               	xorlw	0	; case 0
  6862  006DD4  A4D8               	btfss	status,2,c
  6863  006DD6  D7F6               	goto	l1978
  6864                           
  6865                           ; Switch size 1, requested type "space"
  6866                           ; Number of cases is 6, Range of values is 0 to 5
  6867                           ; switch strategies available:
  6868                           ; Name         Instructions Cycles
  6869                           ; simple_byte           19    10 (average)
  6870                           ;	Chosen strategy is simple_byte
  6871  006DD8  5003               	movf	??__get_fat,w,c
  6872  006DDA  0A00               	xorlw	0	; case 0
  6873  006DDC  B4D8               	btfsc	status,2,c
  6874  006DDE  D7E6               	goto	l1971
  6875  006DE0  0A01               	xorlw	1	; case 1
  6876  006DE2  B4D8               	btfsc	status,2,c
  6877  006DE4  D7E5               	goto	l1973
  6878  006DE6  0A03               	xorlw	3	; case 2
  6879  006DE8  B4D8               	btfsc	status,2,c
  6880  006DEA  D7E4               	goto	l1974
  6881  006DEC  0A01               	xorlw	1	; case 3
  6882  006DEE  B4D8               	btfsc	status,2,c
  6883  006DF0  D7E3               	goto	l1975
  6884  006DF2  0A07               	xorlw	7	; case 4
  6885  006DF4  B4D8               	btfsc	status,2,c
  6886  006DF6  D7E2               	goto	l1976
  6887  006DF8  0A01               	xorlw	1	; case 5
  6888  006DFA  B4D8               	btfsc	status,2,c
  6889  006DFC  D7E1               	goto	l1977
  6890  006DFE  D7E2               	goto	l1978
  6891  006E00                     __end_of__get_fat:
  6892                           	opt stack 0
  6893                           tblptru	equ	0xFF8
  6894                           tblptrh	equ	0xFF7
  6895                           tblptrl	equ	0xFF6
  6896                           tablat	equ	0xFF5
  6897                           intcon	equ	0xFF2
  6898                           intcon3	equ	0xFF0
  6899                           postinc0	equ	0xFEE
  6900                           wreg	equ	0xFE8
  6901                           postdec1	equ	0xFE5
  6902                           plusw1	equ	0xFE3
  6903                           fsr1h	equ	0xFE2
  6904                           fsr1l	equ	0xFE1
  6905                           indf2	equ	0xFDF
  6906                           postinc2	equ	0xFDE
  6907                           plusw2	equ	0xFDB
  6908                           fsr2h	equ	0xFDA
  6909                           fsr2l	equ	0xFD9
  6910                           status	equ	0xFD8
  6911                           
  6912 ;; *************** function __get_data *****************
  6913 ;; Defined at:
  6914 ;;		line 914 in file "fat16.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  idx             2    0[COMRAM] unsigned int 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      unsigned char 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;Total ram usage:        2 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_fat_format
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text24
  6942  007800                     __ptext24:
  6943                           	opt stack 0
  6944  007800                     __get_data:
  6945                           	opt stack 27
  6946                           
  6947                           ;fat16.c: 916: if (idx < 12)
  6948                           
  6949                           ;incstack = 0
  6950  007800  5002               	movf	__get_data@idx+1,w,c
  6951  007802  E110               	bnz	l11793
  6952  007804  0E0C               	movlw	12
  6953  007806  5C01               	subwf	__get_data@idx,w,c
  6954  007808  B0D8               	btfsc	status,0,c
  6955  00780A  D00C               	goto	l2014
  6956                           
  6957                           ;fat16.c: 917: {;fat16.c: 918: return "Hello World!"[idx];
  6958  00780C  0ECF               	movlw	low STR_12
  6959  00780E  2401               	addwf	__get_data@idx,w,c
  6960  007810  6EF6               	movwf	tblptrl,c
  6961  007812  0E8F               	movlw	high STR_12
  6962  007814  2002               	addwfc	__get_data@idx+1,w,c
  6963  007816  6EF7               	movwf	tblptrh,c
  6964  007818                     	if	1	;There are 3 active tblptr bytes
  6965  007818  6AF8               	clrf	tblptru,c
  6966  00781A  0E00               	movlw	low (__mediumconst shr (0+16))
  6967  00781C  22F8               	addwfc	tblptru,f,c
  6968  00781E                     	endif
  6969  00781E  0008               	tblrd		*
  6970  007820  50F5               	movf	tablat,w,c
  6971  007822  0012               	return	
  6972  007824                     l2014:
  6973  007824                     l11793:
  6974                           
  6975                           ;fat16.c: 919: };fat16.c: 920: return 0X00;
  6976  007824  0E00               	movlw	0
  6977  007826  0012               	return	
  6978  007828                     __end_of__get_data:
  6979                           	opt stack 0
  6980                           tblptru	equ	0xFF8
  6981                           tblptrh	equ	0xFF7
  6982                           tblptrl	equ	0xFF6
  6983                           tablat	equ	0xFF5
  6984                           intcon	equ	0xFF2
  6985                           intcon3	equ	0xFF0
  6986                           postinc0	equ	0xFEE
  6987                           wreg	equ	0xFE8
  6988                           postdec1	equ	0xFE5
  6989                           plusw1	equ	0xFE3
  6990                           fsr1h	equ	0xFE2
  6991                           fsr1l	equ	0xFE1
  6992                           indf2	equ	0xFDF
  6993                           postinc2	equ	0xFDE
  6994                           plusw2	equ	0xFDB
  6995                           fsr2h	equ	0xFDA
  6996                           fsr2l	equ	0xFD9
  6997                           status	equ	0xFD8
  6998                           
  6999 ;; *************** function __system_timer0_init *****************
  7000 ;; Defined at:
  7001 ;;		line 110 in file "os.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;Total ram usage:        0 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_system_init
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text25
  7029  007990                     __ptext25:
  7030                           	opt stack 0
  7031  007990                     __system_timer0_init:
  7032                           	opt stack 29
  7033                           
  7034                           ;os.c: 113: T0CONbits.T0CS = 0;
  7035                           
  7036                           ;incstack = 0
  7037  007990  9AD5               	bcf	4053,5,c	;volatile
  7038                           
  7039                           ;os.c: 115: T0CONbits.T08BIT = 0;
  7040  007992  9CD5               	bcf	4053,6,c	;volatile
  7041                           
  7042                           ;os.c: 117: T0CONbits.T0PS2 = 0;
  7043  007994  94D5               	bcf	4053,2,c	;volatile
  7044                           
  7045                           ;os.c: 118: T0CONbits.T0PS1 = 1;
  7046  007996  82D5               	bsf	4053,1,c	;volatile
  7047                           
  7048                           ;os.c: 119: T0CONbits.T0PS0 = 0;
  7049  007998  90D5               	bcf	4053,0,c	;volatile
  7050                           
  7051                           ;os.c: 121: T0CONbits.PSA = 0;
  7052  00799A  96D5               	bcf	4053,3,c	;volatile
  7053                           
  7054                           ;os.c: 123: TMR0H = 0xD1;
  7055  00799C  0ED1               	movlw	209
  7056  00799E  6ED7               	movwf	4055,c	;volatile
  7057                           
  7058                           ;os.c: 124: TMR0L = 0x20;
  7059  0079A0  0E20               	movlw	32
  7060  0079A2  6ED6               	movwf	4054,c	;volatile
  7061                           
  7062                           ;os.c: 126: T0CONbits.TMR0ON = 1;
  7063  0079A4  8ED5               	bsf	4053,7,c	;volatile
  7064                           
  7065                           ;os.c: 130: INTCONbits.TMR0IF = 0;
  7066  0079A6  94F2               	bcf	intcon,2,c	;volatile
  7067                           
  7068                           ;os.c: 133: os.timeSlot = 0;
  7069  0079A8  0E00               	movlw	0
  7070  0079AA  0100               	movlb	0	; () banked
  7071  0079AC  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7072                           
  7073                           ; BSR set to: 0
  7074  0079AE  0012               	return		;funcret
  7075  0079B0                     __end_of__system_timer0_init:
  7076                           	opt stack 0
  7077                           tblptru	equ	0xFF8
  7078                           tblptrh	equ	0xFF7
  7079                           tblptrl	equ	0xFF6
  7080                           tablat	equ	0xFF5
  7081                           intcon	equ	0xFF2
  7082                           intcon3	equ	0xFF0
  7083                           postinc0	equ	0xFEE
  7084                           wreg	equ	0xFE8
  7085                           postdec1	equ	0xFE5
  7086                           plusw1	equ	0xFE3
  7087                           fsr1h	equ	0xFE2
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           postinc2	equ	0xFDE
  7091                           plusw2	equ	0xFDB
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096 ;; *************** function __system_encoder_init *****************
  7097 ;; Defined at:
  7098 ;;		line 71 in file "os.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      void 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_system_init
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text26
  7126  007418                     __ptext26:
  7127                           	opt stack 0
  7128  007418                     __system_encoder_init:
  7129                           	opt stack 29
  7130                           
  7131                           ;os.c: 73: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;incstack = 0
  7135  007418  0E55               	movlw	85
  7136  00741A  6EA7               	movwf	4007,c	;volsfr
  7137  00741C  0EAA               	movlw	170
  7138  00741E  6EA7               	movwf	4007,c	;volsfr
  7139  007420  010E               	movlb	14	; () banked
  7140  007422  91BF               	bcf	191,0,b	;volatile
  7141                           
  7142                           ;os.c: 74: RPINR1 = 0;
  7143  007424  0E00               	movlw	0
  7144  007426  6FE1               	movwf	225,b	;volatile
  7145                           
  7146                           ;os.c: 75: RPINR3 = 9;
  7147  007428  0E09               	movlw	9
  7148  00742A  6FE3               	movwf	227,b	;volatile
  7149                           
  7150                           ;os.c: 76: RPINR2 = 10;
  7151  00742C  0E0A               	movlw	10
  7152  00742E  6FE2               	movwf	226,b	;volatile
  7153                           
  7154                           ;os.c: 77: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7155  007430  0E55               	movlw	85
  7156  007432  6EA7               	movwf	4007,c	;volsfr
  7157  007434  0EAA               	movlw	170
  7158  007436  6EA7               	movwf	4007,c	;volsfr
  7159                           
  7160                           ; BSR set to: 14
  7161  007438  91BF               	bcf	191,0,b	;volatile
  7162                           
  7163                           ; BSR set to: 14
  7164                           ;os.c: 80: INTCON2bits.INTEDG1 = 0;
  7165  00743A  9AF1               	bcf	intcon2,5,c	;volatile
  7166                           
  7167                           ; BSR set to: 14
  7168                           ;os.c: 81: INTCON3bits.INT1IF = 0;
  7169  00743C  90F0               	bcf	intcon3,0,c	;volatile
  7170                           
  7171                           ; BSR set to: 14
  7172                           ;os.c: 83: INTCON2bits.INTEDG2 = 1;
  7173  00743E  88F1               	bsf	intcon2,4,c	;volatile
  7174                           
  7175                           ; BSR set to: 14
  7176                           ;os.c: 84: INTCON3bits.INT2IF = 0;
  7177  007440  92F0               	bcf	intcon3,1,c	;volatile
  7178                           
  7179                           ; BSR set to: 14
  7180                           ;os.c: 86: INTCON2bits.INTEDG3 = 1;
  7181  007442  86F1               	bsf	intcon2,3,c	;volatile
  7182                           
  7183                           ; BSR set to: 14
  7184                           ;os.c: 87: INTCON3bits.INT3IF = 0;
  7185  007444  94F0               	bcf	intcon3,2,c	;volatile
  7186                           
  7187                           ;os.c: 89: os.encoderCount = 0;
  7188  007446  0E00               	movlw	0
  7189  007448  0100               	movlb	0	; () banked
  7190  00744A  6F60               	movwf	_os& (0+255),b	;volatile
  7191                           
  7192                           ;os.c: 90: os.buttonCount = 0;
  7193  00744C  0E00               	movlw	0
  7194  00744E  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7195                           
  7196                           ; BSR set to: 0
  7197  007450  0012               	return		;funcret
  7198  007452                     __end_of__system_encoder_init:
  7199                           	opt stack 0
  7200                           tblptru	equ	0xFF8
  7201                           tblptrh	equ	0xFF7
  7202                           tblptrl	equ	0xFF6
  7203                           tablat	equ	0xFF5
  7204                           intcon	equ	0xFF2
  7205                           intcon2	equ	0xFF1
  7206                           intcon3	equ	0xFF0
  7207                           postinc0	equ	0xFEE
  7208                           wreg	equ	0xFE8
  7209                           postdec1	equ	0xFE5
  7210                           plusw1	equ	0xFE3
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           indf2	equ	0xFDF
  7214                           postinc2	equ	0xFDE
  7215                           plusw2	equ	0xFDB
  7216                           fsr2h	equ	0xFDA
  7217                           fsr2l	equ	0xFD9
  7218                           status	equ	0xFD8
  7219                           
  7220 ;; *************** function _display_update *****************
  7221 ;; Defined at:
  7222 ;;		line 458 in file "display.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;Total ram usage:        0 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; Hardware stack levels required when called:    4
  7243 ;; This function calls:
  7244 ;;		_i2c_display_cursor
  7245 ;;		_i2c_display_write_fixed
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text27
  7252  0066E4                     __ptext27:
  7253                           	opt stack 0
  7254  0066E4                     _display_update:
  7255                           	opt stack 26
  7256                           
  7257                           ;display.c: 460: i2c_display_cursor(0, 0);
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;incstack = 0
  7261  0066E4  0E00               	movlw	0
  7262  0066E6  6E0E               	movwf	i2c_display_cursor@position,c
  7263  0066E8  0E00               	movlw	0
  7264  0066EA  EC4E  F03C         	call	_i2c_display_cursor
  7265                           
  7266                           ;display.c: 461: i2c_display_write_fixed(&display_content[0][0], 20);
  7267  0066EE  0E6E               	movlw	low _display_content
  7268  0066F0  6E06               	movwf	i2c_display_write_fixed@data,c
  7269  0066F2  0E01               	movlw	high _display_content
  7270  0066F4  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7271  0066F6  0E14               	movlw	20
  7272  0066F8  6E08               	movwf	i2c_display_write_fixed@length,c
  7273  0066FA  EC00  F037         	call	_i2c_display_write_fixed	;wreg free
  7274                           
  7275                           ;display.c: 462: i2c_display_cursor(1, 0);
  7276  0066FE  0E00               	movlw	0
  7277  006700  6E0E               	movwf	i2c_display_cursor@position,c
  7278  006702  0E01               	movlw	1
  7279  006704  EC4E  F03C         	call	_i2c_display_cursor
  7280                           
  7281                           ;display.c: 463: i2c_display_write_fixed(&display_content[1][0], 20);
  7282  006708  0E82               	movlw	low (_display_content+20)
  7283  00670A  6E06               	movwf	i2c_display_write_fixed@data,c
  7284  00670C  0E01               	movlw	high (_display_content+20)
  7285  00670E  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7286  006710  0E14               	movlw	20
  7287  006712  6E08               	movwf	i2c_display_write_fixed@length,c
  7288  006714  EC00  F037         	call	_i2c_display_write_fixed	;wreg free
  7289                           
  7290                           ;display.c: 464: i2c_display_cursor(2, 0);
  7291  006718  0E00               	movlw	0
  7292  00671A  6E0E               	movwf	i2c_display_cursor@position,c
  7293  00671C  0E02               	movlw	2
  7294  00671E  EC4E  F03C         	call	_i2c_display_cursor
  7295                           
  7296                           ;display.c: 465: i2c_display_write_fixed(&display_content[2][0], 20);
  7297  006722  0E96               	movlw	low (_display_content+40)
  7298  006724  6E06               	movwf	i2c_display_write_fixed@data,c
  7299  006726  0E01               	movlw	high (_display_content+40)
  7300  006728  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7301  00672A  0E14               	movlw	20
  7302  00672C  6E08               	movwf	i2c_display_write_fixed@length,c
  7303  00672E  EC00  F037         	call	_i2c_display_write_fixed	;wreg free
  7304                           
  7305                           ;display.c: 466: i2c_display_cursor(3, 0);
  7306  006732  0E00               	movlw	0
  7307  006734  6E0E               	movwf	i2c_display_cursor@position,c
  7308  006736  0E03               	movlw	3
  7309  006738  EC4E  F03C         	call	_i2c_display_cursor
  7310                           
  7311                           ;display.c: 467: i2c_display_write_fixed(&display_content[3][0], 20);
  7312  00673C  0EAA               	movlw	low (_display_content+60)
  7313  00673E  6E06               	movwf	i2c_display_write_fixed@data,c
  7314  006740  0E01               	movlw	high (_display_content+60)
  7315  006742  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7316  006744  0E14               	movlw	20
  7317  006746  6E08               	movwf	i2c_display_write_fixed@length,c
  7318  006748  EC00  F037         	call	_i2c_display_write_fixed	;wreg free
  7319  00674C  0012               	return		;funcret
  7320  00674E                     __end_of_display_update:
  7321                           	opt stack 0
  7322                           tblptru	equ	0xFF8
  7323                           tblptrh	equ	0xFF7
  7324                           tblptrl	equ	0xFF6
  7325                           tablat	equ	0xFF5
  7326                           intcon	equ	0xFF2
  7327                           intcon2	equ	0xFF1
  7328                           intcon3	equ	0xFF0
  7329                           postinc0	equ	0xFEE
  7330                           wreg	equ	0xFE8
  7331                           postdec1	equ	0xFE5
  7332                           plusw1	equ	0xFE3
  7333                           fsr1h	equ	0xFE2
  7334                           fsr1l	equ	0xFE1
  7335                           indf2	equ	0xFDF
  7336                           postinc2	equ	0xFDE
  7337                           plusw2	equ	0xFDB
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8
  7341                           
  7342 ;; *************** function _i2c_display_write_fixed *****************
  7343 ;; Defined at:
  7344 ;;		line 262 in file "i2c.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  data            2    5[COMRAM] PTR unsigned char 
  7347 ;;		 -> display_content(80), 
  7348 ;;  length          1    7[COMRAM] unsigned char 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  pos             1    8[COMRAM] unsigned char 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1    wreg      void 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;Total ram usage:        4 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    1
  7367 ;; This function calls:
  7368 ;;		__i2c_send
  7369 ;;		__i2c_start
  7370 ;;		__i2c_stop
  7371 ;;		__i2c_wait_idle
  7372 ;;		_i2c_set_frequency
  7373 ;; This function is called by:
  7374 ;;		_display_update
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text28
  7379  006E00                     __ptext28:
  7380                           	opt stack 0
  7381  006E00                     _i2c_display_write_fixed:
  7382                           	opt stack 28
  7383                           
  7384                           ;i2c.c: 264: uint8_t pos;;i2c.c: 267: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7385                           
  7386                           ;incstack = 0
  7387  006E00  0E02               	movlw	2
  7388  006E02  ECD5  F03B         	call	_i2c_set_frequency
  7389                           
  7390                           ;i2c.c: 269: _i2c_wait_idle();
  7391  006E06  EC25  F036         	call	__i2c_wait_idle	;wreg free
  7392                           
  7393                           ;i2c.c: 270: _i2c_start();
  7394  006E0A  ECC8  F03D         	call	__i2c_start	;wreg free
  7395                           
  7396                           ;i2c.c: 271: _i2c_wait_idle();
  7397  006E0E  EC25  F036         	call	__i2c_wait_idle	;wreg free
  7398                           
  7399                           ;i2c.c: 272: _i2c_send(0b01111000);
  7400  006E12  0E78               	movlw	120
  7401  006E14  ECCC  F03D         	call	__i2c_send
  7402                           
  7403                           ;i2c.c: 273: _i2c_wait_idle();
  7404  006E18  EC25  F036         	call	__i2c_wait_idle	;wreg free
  7405                           
  7406                           ;i2c.c: 274: _i2c_send(0b01000000);
  7407  006E1C  0E40               	movlw	64
  7408  006E1E  ECCC  F03D         	call	__i2c_send
  7409                           
  7410                           ;i2c.c: 275: _i2c_wait_idle();
  7411  006E22  EC25  F036         	call	__i2c_wait_idle	;wreg free
  7412                           
  7413                           ;i2c.c: 278: for(pos=0; pos<length; ++pos)
  7414  006E26  0E00               	movlw	0
  7415  006E28  6E09               	movwf	i2c_display_write_fixed@pos,c
  7416  006E2A  D00E               	goto	l1167
  7417  006E2C                     
  7418                           ;i2c.c: 279: {;i2c.c: 280: _i2c_send(data[pos]);
  7419  006E2C  5009               	movf	i2c_display_write_fixed@pos,w,c
  7420  006E2E  0D01               	mullw	1
  7421  006E30  50F3               	movf	prodl,w,c
  7422  006E32  2406               	addwf	i2c_display_write_fixed@data,w,c
  7423  006E34  6ED9               	movwf	fsr2l,c
  7424  006E36  50F4               	movf	prodh,w,c
  7425  006E38  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  7426  006E3A  6EDA               	movwf	fsr2h,c
  7427  006E3C  50DF               	movf	indf2,w,c
  7428  006E3E  ECCC  F03D         	call	__i2c_send
  7429                           
  7430                           ;i2c.c: 281: _i2c_wait_idle();
  7431  006E42  EC25  F036         	call	__i2c_wait_idle	;wreg free
  7432  006E46  2A09               	incf	i2c_display_write_fixed@pos,f,c
  7433  006E48                     l1167:
  7434  006E48  5008               	movf	i2c_display_write_fixed@length,w,c
  7435  006E4A  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  7436  006E4C  A0D8               	btfss	status,0,c
  7437  006E4E  D7EE               	goto	l1168
  7438                           
  7439                           ;i2c.c: 282: };i2c.c: 284: _i2c_stop();
  7440  006E50  ECC4  F03D         	call	__i2c_stop	;wreg free
  7441  006E54  0012               	return		;funcret
  7442  006E56                     __end_of_i2c_display_write_fixed:
  7443                           	opt stack 0
  7444                           tblptru	equ	0xFF8
  7445                           tblptrh	equ	0xFF7
  7446                           tblptrl	equ	0xFF6
  7447                           tablat	equ	0xFF5
  7448                           prodh	equ	0xFF4
  7449                           prodl	equ	0xFF3
  7450                           intcon	equ	0xFF2
  7451                           intcon2	equ	0xFF1
  7452                           intcon3	equ	0xFF0
  7453                           postinc0	equ	0xFEE
  7454                           wreg	equ	0xFE8
  7455                           postdec1	equ	0xFE5
  7456                           plusw1	equ	0xFE3
  7457                           fsr1h	equ	0xFE2
  7458                           fsr1l	equ	0xFE1
  7459                           indf2	equ	0xFDF
  7460                           postinc2	equ	0xFDE
  7461                           plusw2	equ	0xFDB
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _i2c_display_cursor *****************
  7467 ;; Defined at:
  7468 ;;		line 222 in file "i2c.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  line            1    wreg     unsigned char 
  7471 ;;  position        1   13[COMRAM] unsigned char 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  line            1   14[COMRAM] unsigned char 
  7474 ;;  address         1   15[COMRAM] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7484 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;Total ram usage:        3 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    3
  7491 ;; This function calls:
  7492 ;;		__ic2_display_set_address
  7493 ;;		_i2c_set_frequency
  7494 ;; This function is called by:
  7495 ;;		_display_update
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text29
  7500  00789C                     __ptext29:
  7501                           	opt stack 0
  7502  00789C                     _i2c_display_cursor:
  7503                           	opt stack 26
  7504                           
  7505                           ;incstack = 0
  7506                           ;i2c_display_cursor@line stored from wreg
  7507  00789C  6E0F               	movwf	i2c_display_cursor@line,c
  7508                           
  7509                           ;i2c.c: 224: uint8_t address;;i2c.c: 227: line &= 0b11;
  7510  00789E  0E03               	movlw	3
  7511  0078A0  160F               	andwf	i2c_display_cursor@line,f,c
  7512                           
  7513                           ;i2c.c: 228: address = line<<5;
  7514  0078A2  380F               	swapf	i2c_display_cursor@line,w,c
  7515  0078A4  46E8               	rlncf	wreg,f,c
  7516  0078A6  0BE0               	andlw	224
  7517  0078A8  6E10               	movwf	i2c_display_cursor@address,c
  7518                           
  7519                           ;i2c.c: 229: position &= 0b11111;
  7520  0078AA  0E1F               	movlw	31
  7521  0078AC  160E               	andwf	i2c_display_cursor@position,f,c
  7522                           
  7523                           ;i2c.c: 230: address |= position;
  7524  0078AE  500E               	movf	i2c_display_cursor@position,w,c
  7525  0078B0  1210               	iorwf	i2c_display_cursor@address,f,c
  7526                           
  7527                           ;i2c.c: 233: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7528  0078B2  0E02               	movlw	2
  7529  0078B4  ECD5  F03B         	call	_i2c_set_frequency
  7530                           
  7531                           ;i2c.c: 236: _ic2_display_set_address(address);
  7532  0078B8  5010               	movf	i2c_display_cursor@address,w,c
  7533  0078BA  EC3B  F03C         	call	__ic2_display_set_address
  7534  0078BE  0012               	return		;funcret
  7535  0078C0                     __end_of_i2c_display_cursor:
  7536                           	opt stack 0
  7537                           tblptru	equ	0xFF8
  7538                           tblptrh	equ	0xFF7
  7539                           tblptrl	equ	0xFF6
  7540                           tablat	equ	0xFF5
  7541                           prodh	equ	0xFF4
  7542                           prodl	equ	0xFF3
  7543                           intcon	equ	0xFF2
  7544                           intcon2	equ	0xFF1
  7545                           intcon3	equ	0xFF0
  7546                           postinc0	equ	0xFEE
  7547                           wreg	equ	0xFE8
  7548                           postdec1	equ	0xFE5
  7549                           plusw1	equ	0xFE3
  7550                           fsr1h	equ	0xFE2
  7551                           fsr1l	equ	0xFE1
  7552                           indf2	equ	0xFDF
  7553                           postinc2	equ	0xFDE
  7554                           plusw2	equ	0xFDB
  7555                           fsr2h	equ	0xFDA
  7556                           fsr2l	equ	0xFD9
  7557                           status	equ	0xFD8
  7558                           
  7559 ;; *************** function __ic2_display_set_address *****************
  7560 ;; Defined at:
  7561 ;;		line 186 in file "i2c.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  address         1    wreg     unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  address         1   10[COMRAM] unsigned char 
  7566 ;;  data_array      2   11[COMRAM] unsigned char [2]
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;Total ram usage:        3 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    2
  7583 ;; This function calls:
  7584 ;;		__i2c_write
  7585 ;;		_i2c_set_frequency
  7586 ;; This function is called by:
  7587 ;;		_i2c_display_cursor
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text30
  7592  007876                     __ptext30:
  7593                           	opt stack 0
  7594  007876                     __ic2_display_set_address:
  7595                           	opt stack 26
  7596                           
  7597                           ;incstack = 0
  7598                           ;__ic2_display_set_address@address stored from wreg
  7599  007876  6E0B               	movwf	__ic2_display_set_address@address,c
  7600                           
  7601                           ;i2c.c: 188: uint8_t data_array[2];;i2c.c: 189: data_array[0] = 0b00000000;
  7602  007878  0E00               	movlw	0
  7603  00787A  6E0C               	movwf	__ic2_display_set_address@data_array,c
  7604                           
  7605                           ;i2c.c: 190: data_array[1] = 0b10000000 | address;
  7606  00787C  500B               	movf	__ic2_display_set_address@address,w,c
  7607  00787E  0980               	iorlw	128
  7608  007880  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  7609                           
  7610                           ;i2c.c: 193: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7611  007882  0E02               	movlw	2
  7612  007884  ECD5  F03B         	call	_i2c_set_frequency
  7613                           
  7614                           ;i2c.c: 196: _i2c_write(0b01111000, &data_array[0], 2);
  7615  007888  0E0C               	movlw	low __ic2_display_set_address@data_array
  7616  00788A  6E06               	movwf	__i2c_write@data,c
  7617  00788C  0E00               	movlw	high __ic2_display_set_address@data_array
  7618  00788E  6E07               	movwf	__i2c_write@data+1,c
  7619  007890  0E02               	movlw	2
  7620  007892  6E08               	movwf	__i2c_write@length,c
  7621  007894  0E78               	movlw	120
  7622  007896  ECC3  F038         	call	__i2c_write
  7623  00789A  0012               	return		;funcret
  7624  00789C                     __end_of__ic2_display_set_address:
  7625                           	opt stack 0
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodh	equ	0xFF4
  7631                           prodl	equ	0xFF3
  7632                           intcon	equ	0xFF2
  7633                           intcon2	equ	0xFF1
  7634                           intcon3	equ	0xFF0
  7635                           postinc0	equ	0xFEE
  7636                           wreg	equ	0xFE8
  7637                           postdec1	equ	0xFE5
  7638                           plusw1	equ	0xFE3
  7639                           fsr1h	equ	0xFE2
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           plusw2	equ	0xFDB
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function _display_prepare *****************
  7649 ;; Defined at:
  7650 ;;		line 221 in file "display.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  mode            1    wreg     unsigned char 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  mode            1   42[COMRAM] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;Total ram usage:        3 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    6
  7671 ;; This function calls:
  7672 ;;		__display_checked
  7673 ;;		__display_clear
  7674 ;;		__display_done
  7675 ;;		__display_failed
  7676 ;;		__display_found
  7677 ;;		__display_programming
  7678 ;;		__display_start
  7679 ;;		__display_verify
  7680 ;; This function is called by:
  7681 ;;		_main
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text31
  7686  004C40                     __ptext31:
  7687                           	opt stack 0
  7688  004C40                     _display_prepare:
  7689                           	opt stack 24
  7690                           
  7691                           ;incstack = 0
  7692                           ;display_prepare@mode stored from wreg
  7693  004C40  6E2B               	movwf	display_prepare@mode,c
  7694                           
  7695                           ;display.c: 223: _display_clear();
  7696  004C42  EC9F  F038         	call	__display_clear	;wreg free
  7697                           
  7698                           ;display.c: 225: switch(mode&0xF0)
  7699  004C46  D015               	goto	l1421
  7700  004C48                     
  7701                           ;display.c: 228: _display_start();
  7702  004C48  EC3F  F01B         	call	__display_start	;wreg free
  7703                           
  7704                           ;display.c: 229: break;
  7705  004C4C  D03B               	goto	l1430
  7706  004C4E                     
  7707                           ;display.c: 232: _display_found();
  7708  004C4E  EC9C  F014         	call	__display_found	;wreg free
  7709                           
  7710                           ;display.c: 233: break;
  7711  004C52  D038               	goto	l1430
  7712  004C54                     
  7713                           ;display.c: 236: _display_verify();
  7714  004C54  EC2C  F01D         	call	__display_verify	;wreg free
  7715                           
  7716                           ;display.c: 237: break;
  7717  004C58  D035               	goto	l1430
  7718  004C5A                     
  7719                           ;display.c: 240: _display_checked();
  7720  004C5A  EC0B  F019         	call	__display_checked	;wreg free
  7721                           
  7722                           ;display.c: 241: break;
  7723  004C5E  D032               	goto	l1430
  7724  004C60                     
  7725                           ;display.c: 244: _display_failed();
  7726  004C60  EC98  F007         	call	__display_failed	;wreg free
  7727                           
  7728                           ;display.c: 245: break;
  7729  004C64  D02F               	goto	l1430
  7730  004C66                     
  7731                           ;display.c: 248: _display_programming();
  7732  004C66  EC77  F016         	call	__display_programming	;wreg free
  7733                           
  7734                           ;display.c: 249: break;
  7735  004C6A  D02C               	goto	l1430
  7736  004C6C                     
  7737                           ;display.c: 252: _display_done();
  7738  004C6C  ECC9  F019         	call	__display_done	;wreg free
  7739                           
  7740                           ;display.c: 254: }
  7741                           
  7742                           ;display.c: 253: break;
  7743  004C70  D029               	goto	l1430
  7744  004C72                     l1421:
  7745  004C72  502B               	movf	display_prepare@mode,w,c
  7746  004C74  0BF0               	andlw	240
  7747  004C76  6E29               	movwf	??_display_prepare& (0+255),c
  7748  004C78  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  7749                           
  7750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7751                           ; Switch size 1, requested type "space"
  7752                           ; Number of cases is 1, Range of values is 0 to 0
  7753                           ; switch strategies available:
  7754                           ; Name         Instructions Cycles
  7755                           ; simple_byte            4     3 (average)
  7756                           ;	Chosen strategy is simple_byte
  7757  004C7A  502A               	movf	??_display_prepare+1,w,c
  7758  004C7C  0A00               	xorlw	0	; case 0
  7759  004C7E  A4D8               	btfss	status,2,c
  7760  004C80  D021               	goto	l1430
  7761                           
  7762                           ; Switch size 1, requested type "space"
  7763                           ; Number of cases is 7, Range of values is 0 to 96
  7764                           ; switch strategies available:
  7765                           ; Name         Instructions Cycles
  7766                           ; simple_byte           22    12 (average)
  7767                           ;	Chosen strategy is simple_byte
  7768  004C82  5029               	movf	??_display_prepare,w,c
  7769  004C84  0A00               	xorlw	0	; case 0
  7770  004C86  B4D8               	btfsc	status,2,c
  7771  004C88  D7DF               	goto	l1422
  7772  004C8A  0A10               	xorlw	16	; case 16
  7773  004C8C  B4D8               	btfsc	status,2,c
  7774  004C8E  D7DF               	goto	l1424
  7775  004C90  0A30               	xorlw	48	; case 32
  7776  004C92  B4D8               	btfsc	status,2,c
  7777  004C94  D7DF               	goto	l1425
  7778  004C96  0A10               	xorlw	16	; case 48
  7779  004C98  B4D8               	btfsc	status,2,c
  7780  004C9A  D7DF               	goto	l1426
  7781  004C9C  0A70               	xorlw	112	; case 64
  7782  004C9E  B4D8               	btfsc	status,2,c
  7783  004CA0  D7DF               	goto	l1427
  7784  004CA2  0A10               	xorlw	16	; case 80
  7785  004CA4  B4D8               	btfsc	status,2,c
  7786  004CA6  D7DF               	goto	l1428
  7787  004CA8  0A30               	xorlw	48	; case 96
  7788  004CAA  B4D8               	btfsc	status,2,c
  7789  004CAC  D7DF               	goto	l1429
  7790                           
  7791                           ;display.c: 257: switch((os.timeSlot>>5)&0b11)
  7792  004CAE  D00A               	goto	l1430
  7793  004CB0                     
  7794                           ;display.c: 260: display_content[0][17] = '.';
  7795  004CB0  0E2E               	movlw	46
  7796  004CB2  0101               	movlb	1	; () banked
  7797  004CB4  6F7F               	movwf	(_display_content+17)& (0+255),b
  7798  004CB6                     l1432:
  7799                           
  7800                           ;display.c: 263: display_content[0][16] = '.';
  7801  004CB6  0E2E               	movlw	46
  7802  004CB8  0101               	movlb	1	; () banked
  7803  004CBA  6F7E               	movwf	(_display_content+16)& (0+255),b
  7804  004CBC                     l1433:
  7805                           
  7806                           ;display.c: 266: display_content[0][15] = '.';
  7807  004CBC  0E2E               	movlw	46
  7808  004CBE  0101               	movlb	1	; () banked
  7809  004CC0  6F7D               	movwf	(_display_content+15)& (0+255),b
  7810                           
  7811                           ;display.c: 268: }
  7812  004CC2  D015               	goto	l1434
  7813  004CC4                     l1430:
  7814                           
  7815                           ; BSR set to: 1
  7816  004CC4  0100               	movlb	0	; () banked
  7817  004CC6  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
  7818  004CC8  42E8               	rrncf	wreg,f,c
  7819  004CCA  0B07               	andlw	7
  7820  004CCC  0B03               	andlw	3
  7821  004CCE  6E29               	movwf	??_display_prepare& (0+255),c
  7822  004CD0  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  7823                           
  7824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7825                           ; Switch size 1, requested type "space"
  7826                           ; Number of cases is 1, Range of values is 0 to 0
  7827                           ; switch strategies available:
  7828                           ; Name         Instructions Cycles
  7829                           ; simple_byte            4     3 (average)
  7830                           ;	Chosen strategy is simple_byte
  7831  004CD2  502A               	movf	??_display_prepare+1,w,c
  7832  004CD4  0A00               	xorlw	0	; case 0
  7833  004CD6  A4D8               	btfss	status,2,c
  7834  004CD8  D00A               	goto	l1434
  7835                           
  7836                           ; BSR set to: 0
  7837                           ; Switch size 1, requested type "space"
  7838                           ; Number of cases is 3, Range of values is 1 to 3
  7839                           ; switch strategies available:
  7840                           ; Name         Instructions Cycles
  7841                           ; simple_byte           10     6 (average)
  7842                           ;	Chosen strategy is simple_byte
  7843  004CDA  5029               	movf	??_display_prepare,w,c
  7844  004CDC  0A01               	xorlw	1	; case 1
  7845  004CDE  B4D8               	btfsc	status,2,c
  7846  004CE0  D7ED               	goto	l1433
  7847  004CE2  0A03               	xorlw	3	; case 2
  7848  004CE4  B4D8               	btfsc	status,2,c
  7849  004CE6  D7E7               	goto	l1432
  7850  004CE8  0A01               	xorlw	1	; case 3
  7851  004CEA  B4D8               	btfsc	status,2,c
  7852  004CEC  D7E1               	goto	l1431
  7853  004CEE                     l1434:
  7854                           
  7855                           ;display.c: 273: if(INTCONbits.GIE)
  7856  004CEE  AEF2               	btfss	intcon,7,c	;volatile
  7857  004CF0  D003               	goto	l1435
  7858                           
  7859                           ;display.c: 274: {;display.c: 275: display_content[0][18] = 'I';
  7860  004CF2  0E49               	movlw	73
  7861  004CF4  0101               	movlb	1	; () banked
  7862  004CF6  6F80               	movwf	(_display_content+18)& (0+255),b
  7863  004CF8                     l1435:
  7864                           
  7865                           ;display.c: 276: };display.c: 278: if(os.buttonCount>0)
  7866                           
  7867                           ; BSR set to: 1
  7868  004CF8  0100               	movlb	0	; () banked
  7869  004CFA  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  7870  004CFC  0A80               	xorlw	128
  7871  004CFE  0F7F               	addlw	-129
  7872  004D00  A0D8               	btfss	status,0,c
  7873  004D02  0012               	return	
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;display.c: 279: {;display.c: 280: display_content[3][19] = 'X';
  7877  004D04  0E58               	movlw	88
  7878  004D06  0101               	movlb	1	; () banked
  7879  004D08  6FBD               	movwf	(_display_content+79)& (0+255),b
  7880  004D0A  0012               	return	
  7881  004D0C                     __end_of_display_prepare:
  7882                           	opt stack 0
  7883                           tblptru	equ	0xFF8
  7884                           tblptrh	equ	0xFF7
  7885                           tblptrl	equ	0xFF6
  7886                           tablat	equ	0xFF5
  7887                           prodh	equ	0xFF4
  7888                           prodl	equ	0xFF3
  7889                           intcon	equ	0xFF2
  7890                           intcon2	equ	0xFF1
  7891                           intcon3	equ	0xFF0
  7892                           postinc0	equ	0xFEE
  7893                           wreg	equ	0xFE8
  7894                           postdec1	equ	0xFE5
  7895                           plusw1	equ	0xFE3
  7896                           fsr1h	equ	0xFE2
  7897                           fsr1l	equ	0xFE1
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           plusw2	equ	0xFDB
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function __display_verify *****************
  7906 ;; Defined at:
  7907 ;;		line 328 in file "display.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;		None
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  cntr            1   32[COMRAM] unsigned char 
  7912 ;;  start           1    0        unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;Total ram usage:        3 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:    4
  7929 ;; This function calls:
  7930 ;;		__display_itoa_u16
  7931 ;;		_bootloader_get_entries
  7932 ;; This function is called by:
  7933 ;;		_display_prepare
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text32
  7938  003A58                     __ptext32:
  7939                           	opt stack 0
  7940  003A58                     __display_verify:
  7941                           	opt stack 25
  7942                           
  7943                           ;display.c: 330: uint8_t cntr;;display.c: 331: uint8_t start;;display.c: 332: cntr = 0;
  7944                           
  7945                           ;incstack = 0
  7946  003A58  0E00               	movlw	0
  7947  003A5A  6E21               	movwf	__display_verify@cntr,c
  7948                           
  7949                           ;display.c: 333: while(verify_line1[cntr])
  7950  003A5C  D017               	goto	l1473
  7951  003A5E                     
  7952                           ;display.c: 334: display_content[0][cntr] = verify_line1[cntr++];
  7953  003A5E  5021               	movf	__display_verify@cntr,w,c
  7954  003A60  0D01               	mullw	1
  7955  003A62  0E09               	movlw	low _verify_line1
  7956  003A64  24F3               	addwf	prodl,w,c
  7957  003A66  6EF6               	movwf	tblptrl,c
  7958  003A68  0E8E               	movlw	high _verify_line1
  7959  003A6A  20F4               	addwfc	prodh,w,c
  7960  003A6C  6EF7               	movwf	tblptrh,c
  7961  003A6E                     	if	1	;There are 3 active tblptr bytes
  7962  003A6E  6AF8               	clrf	tblptru,c
  7963  003A70  0E00               	movlw	low (__mediumconst shr (0+16))
  7964  003A72  22F8               	addwfc	tblptru,f,c
  7965  003A74                     	endif
  7966  003A74  5021               	movf	__display_verify@cntr,w,c
  7967  003A76  0D01               	mullw	1
  7968  003A78  0E6E               	movlw	low _display_content
  7969  003A7A  24F3               	addwf	prodl,w,c
  7970  003A7C  6ED9               	movwf	fsr2l,c
  7971  003A7E  0E01               	movlw	high _display_content
  7972  003A80  20F4               	addwfc	prodh,w,c
  7973  003A82  6EDA               	movwf	fsr2h,c
  7974  003A84  0008               	tblrd		*
  7975  003A86  CFF5 FFDF          	movff	tablat,indf2
  7976  003A8A  2A21               	incf	__display_verify@cntr,f,c
  7977  003A8C                     l1473:
  7978  003A8C  5021               	movf	__display_verify@cntr,w,c
  7979  003A8E  0D01               	mullw	1
  7980  003A90  0E09               	movlw	low _verify_line1
  7981  003A92  24F3               	addwf	prodl,w,c
  7982  003A94  6EF6               	movwf	tblptrl,c
  7983  003A96  0E8E               	movlw	high _verify_line1
  7984  003A98  20F4               	addwfc	prodh,w,c
  7985  003A9A  6EF7               	movwf	tblptrh,c
  7986  003A9C                     	if	1	;There are 3 active tblptr bytes
  7987  003A9C  6AF8               	clrf	tblptru,c
  7988  003A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  7989  003AA0  22F8               	addwfc	tblptru,f,c
  7990  003AA2                     	endif
  7991  003AA2  0008               	tblrd		*
  7992  003AA4  50F5               	movf	tablat,w,c
  7993  003AA6  0900               	iorlw	0
  7994  003AA8  A4D8               	btfss	status,2,c
  7995  003AAA  D7D9               	goto	l1474
  7996                           
  7997                           ;display.c: 335: cntr = 0;
  7998  003AAC  0E00               	movlw	0
  7999  003AAE  6E21               	movwf	__display_verify@cntr,c
  8000                           
  8001                           ;display.c: 336: while(verify_line2[cntr])
  8002  003AB0  D017               	goto	l1476
  8003  003AB2                     
  8004                           ;display.c: 337: display_content[1][cntr] = verify_line2[cntr++];
  8005  003AB2  5021               	movf	__display_verify@cntr,w,c
  8006  003AB4  0D01               	mullw	1
  8007  003AB6  0E55               	movlw	low _verify_line2
  8008  003AB8  24F3               	addwf	prodl,w,c
  8009  003ABA  6EF6               	movwf	tblptrl,c
  8010  003ABC  0E8E               	movlw	high _verify_line2
  8011  003ABE  20F4               	addwfc	prodh,w,c
  8012  003AC0  6EF7               	movwf	tblptrh,c
  8013  003AC2                     	if	1	;There are 3 active tblptr bytes
  8014  003AC2  6AF8               	clrf	tblptru,c
  8015  003AC4  0E00               	movlw	low (__mediumconst shr (0+16))
  8016  003AC6  22F8               	addwfc	tblptru,f,c
  8017  003AC8                     	endif
  8018  003AC8  5021               	movf	__display_verify@cntr,w,c
  8019  003ACA  0D01               	mullw	1
  8020  003ACC  0E82               	movlw	low (_display_content+20)
  8021  003ACE  24F3               	addwf	prodl,w,c
  8022  003AD0  6ED9               	movwf	fsr2l,c
  8023  003AD2  0E01               	movlw	high (_display_content+20)
  8024  003AD4  20F4               	addwfc	prodh,w,c
  8025  003AD6  6EDA               	movwf	fsr2h,c
  8026  003AD8  0008               	tblrd		*
  8027  003ADA  CFF5 FFDF          	movff	tablat,indf2
  8028  003ADE  2A21               	incf	__display_verify@cntr,f,c
  8029  003AE0                     l1476:
  8030  003AE0  5021               	movf	__display_verify@cntr,w,c
  8031  003AE2  0D01               	mullw	1
  8032  003AE4  0E55               	movlw	low _verify_line2
  8033  003AE6  24F3               	addwf	prodl,w,c
  8034  003AE8  6EF6               	movwf	tblptrl,c
  8035  003AEA  0E8E               	movlw	high _verify_line2
  8036  003AEC  20F4               	addwfc	prodh,w,c
  8037  003AEE  6EF7               	movwf	tblptrh,c
  8038  003AF0                     	if	1	;There are 3 active tblptr bytes
  8039  003AF0  6AF8               	clrf	tblptru,c
  8040  003AF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8041  003AF4  22F8               	addwfc	tblptru,f,c
  8042  003AF6                     	endif
  8043  003AF6  0008               	tblrd		*
  8044  003AF8  50F5               	movf	tablat,w,c
  8045  003AFA  0900               	iorlw	0
  8046  003AFC  A4D8               	btfss	status,2,c
  8047  003AFE  D7D9               	goto	l1477
  8048                           
  8049                           ;display.c: 338: cntr = 0;
  8050  003B00  0E00               	movlw	0
  8051  003B02  6E21               	movwf	__display_verify@cntr,c
  8052                           
  8053                           ;display.c: 339: while(verify_line3[cntr])
  8054  003B04  D017               	goto	l1479
  8055  003B06                     
  8056                           ;display.c: 340: display_content[2][cntr] = verify_line3[cntr++];
  8057  003B06  5021               	movf	__display_verify@cntr,w,c
  8058  003B08  0D01               	mullw	1
  8059  003B0A  0E8A               	movlw	low _verify_line3
  8060  003B0C  24F3               	addwf	prodl,w,c
  8061  003B0E  6EF6               	movwf	tblptrl,c
  8062  003B10  0E8E               	movlw	high _verify_line3
  8063  003B12  20F4               	addwfc	prodh,w,c
  8064  003B14  6EF7               	movwf	tblptrh,c
  8065  003B16                     	if	1	;There are 3 active tblptr bytes
  8066  003B16  6AF8               	clrf	tblptru,c
  8067  003B18  0E00               	movlw	low (__mediumconst shr (0+16))
  8068  003B1A  22F8               	addwfc	tblptru,f,c
  8069  003B1C                     	endif
  8070  003B1C  5021               	movf	__display_verify@cntr,w,c
  8071  003B1E  0D01               	mullw	1
  8072  003B20  0E96               	movlw	low (_display_content+40)
  8073  003B22  24F3               	addwf	prodl,w,c
  8074  003B24  6ED9               	movwf	fsr2l,c
  8075  003B26  0E01               	movlw	high (_display_content+40)
  8076  003B28  20F4               	addwfc	prodh,w,c
  8077  003B2A  6EDA               	movwf	fsr2h,c
  8078  003B2C  0008               	tblrd		*
  8079  003B2E  CFF5 FFDF          	movff	tablat,indf2
  8080  003B32  2A21               	incf	__display_verify@cntr,f,c
  8081  003B34                     l1479:
  8082  003B34  5021               	movf	__display_verify@cntr,w,c
  8083  003B36  0D01               	mullw	1
  8084  003B38  0E8A               	movlw	low _verify_line3
  8085  003B3A  24F3               	addwf	prodl,w,c
  8086  003B3C  6EF6               	movwf	tblptrl,c
  8087  003B3E  0E8E               	movlw	high _verify_line3
  8088  003B40  20F4               	addwfc	prodh,w,c
  8089  003B42  6EF7               	movwf	tblptrh,c
  8090  003B44                     	if	1	;There are 3 active tblptr bytes
  8091  003B44  6AF8               	clrf	tblptru,c
  8092  003B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8093  003B48  22F8               	addwfc	tblptru,f,c
  8094  003B4A                     	endif
  8095  003B4A  0008               	tblrd		*
  8096  003B4C  50F5               	movf	tablat,w,c
  8097  003B4E  0900               	iorlw	0
  8098  003B50  A4D8               	btfss	status,2,c
  8099  003B52  D7D9               	goto	l1480
  8100                           
  8101                           ;display.c: 341: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
  8102  003B54  ECB5  F03D         	call	_bootloader_get_entries	;wreg free
  8103  003B58  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8104  003B5C  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8105  003B60  6A1B               	clrf	__display_itoa_u16@value+2,c
  8106  003B62  6A1C               	clrf	__display_itoa_u16@value+3,c
  8107  003B64  5021               	movf	__display_verify@cntr,w,c
  8108  003B66  6E1F               	movwf	??__display_verify& (0+255),c
  8109  003B68  6A20               	clrf	(??__display_verify+1)& (0+255),c
  8110  003B6A  0E01               	movlw	1
  8111  003B6C  261F               	addwf	??__display_verify,f,c
  8112  003B6E  0E00               	movlw	0
  8113  003B70  2220               	addwfc	??__display_verify+1,f,c
  8114  003B72  0E96               	movlw	low (_display_content+40)
  8115  003B74  241F               	addwf	??__display_verify,w,c
  8116  003B76  6E1D               	movwf	__display_itoa_u16@text,c
  8117  003B78  0E01               	movlw	high (_display_content+40)
  8118  003B7A  2020               	addwfc	??__display_verify+1,w,c
  8119  003B7C  6E1E               	movwf	__display_itoa_u16@text+1,c
  8120  003B7E  EC50  F027         	call	__display_itoa_u16	;wreg free
  8121  003B82  0012               	return		;funcret
  8122  003B84                     __end_of__display_verify:
  8123                           	opt stack 0
  8124                           tblptru	equ	0xFF8
  8125                           tblptrh	equ	0xFF7
  8126                           tblptrl	equ	0xFF6
  8127                           tablat	equ	0xFF5
  8128                           prodh	equ	0xFF4
  8129                           prodl	equ	0xFF3
  8130                           intcon	equ	0xFF2
  8131                           intcon2	equ	0xFF1
  8132                           intcon3	equ	0xFF0
  8133                           postinc0	equ	0xFEE
  8134                           wreg	equ	0xFE8
  8135                           postdec1	equ	0xFE5
  8136                           plusw1	equ	0xFE3
  8137                           fsr1h	equ	0xFE2
  8138                           fsr1l	equ	0xFE1
  8139                           indf2	equ	0xFDF
  8140                           postinc2	equ	0xFDE
  8141                           plusw2	equ	0xFDB
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8
  8145                           
  8146 ;; *************** function __display_start *****************
  8147 ;; Defined at:
  8148 ;;		line 284 in file "display.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  cntr            1    0[COMRAM] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;Total ram usage:        1 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_display_prepare
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text33
  8176  00367E                     __ptext33:
  8177                           	opt stack 0
  8178  00367E                     __display_start:
  8179                           	opt stack 29
  8180                           
  8181                           ;display.c: 286: uint8_t cntr;;display.c: 287: cntr = 0;
  8182                           
  8183                           ;incstack = 0
  8184  00367E  0E00               	movlw	0
  8185  003680  6E01               	movwf	__display_start@cntr,c
  8186                           
  8187                           ;display.c: 288: while(start_line1[cntr])
  8188  003682  D017               	goto	l1440
  8189  003684                     
  8190                           ;display.c: 289: display_content[0][cntr] = start_line1[cntr++];
  8191  003684  5001               	movf	__display_start@cntr,w,c
  8192  003686  0D01               	mullw	1
  8193  003688  0E88               	movlw	low _start_line1
  8194  00368A  24F3               	addwf	prodl,w,c
  8195  00368C  6EF6               	movwf	tblptrl,c
  8196  00368E  0E8D               	movlw	high _start_line1
  8197  003690  20F4               	addwfc	prodh,w,c
  8198  003692  6EF7               	movwf	tblptrh,c
  8199  003694                     	if	1	;There are 3 active tblptr bytes
  8200  003694  6AF8               	clrf	tblptru,c
  8201  003696  0E00               	movlw	low (__mediumconst shr (0+16))
  8202  003698  22F8               	addwfc	tblptru,f,c
  8203  00369A                     	endif
  8204  00369A  5001               	movf	__display_start@cntr,w,c
  8205  00369C  0D01               	mullw	1
  8206  00369E  0E6E               	movlw	low _display_content
  8207  0036A0  24F3               	addwf	prodl,w,c
  8208  0036A2  6ED9               	movwf	fsr2l,c
  8209  0036A4  0E01               	movlw	high _display_content
  8210  0036A6  20F4               	addwfc	prodh,w,c
  8211  0036A8  6EDA               	movwf	fsr2h,c
  8212  0036AA  0008               	tblrd		*
  8213  0036AC  CFF5 FFDF          	movff	tablat,indf2
  8214  0036B0  2A01               	incf	__display_start@cntr,f,c
  8215  0036B2                     l1440:
  8216  0036B2  5001               	movf	__display_start@cntr,w,c
  8217  0036B4  0D01               	mullw	1
  8218  0036B6  0E88               	movlw	low _start_line1
  8219  0036B8  24F3               	addwf	prodl,w,c
  8220  0036BA  6EF6               	movwf	tblptrl,c
  8221  0036BC  0E8D               	movlw	high _start_line1
  8222  0036BE  20F4               	addwfc	prodh,w,c
  8223  0036C0  6EF7               	movwf	tblptrh,c
  8224  0036C2                     	if	1	;There are 3 active tblptr bytes
  8225  0036C2  6AF8               	clrf	tblptru,c
  8226  0036C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8227  0036C6  22F8               	addwfc	tblptru,f,c
  8228  0036C8                     	endif
  8229  0036C8  0008               	tblrd		*
  8230  0036CA  50F5               	movf	tablat,w,c
  8231  0036CC  0900               	iorlw	0
  8232  0036CE  A4D8               	btfss	status,2,c
  8233  0036D0  D7D9               	goto	l1441
  8234                           
  8235                           ;display.c: 290: cntr = 0;
  8236  0036D2  0E00               	movlw	0
  8237  0036D4  6E01               	movwf	__display_start@cntr,c
  8238                           
  8239                           ;display.c: 291: while(start_line2[cntr])
  8240  0036D6  D017               	goto	l1443
  8241  0036D8                     
  8242                           ;display.c: 292: display_content[1][cntr] = start_line2[cntr++];
  8243  0036D8  5001               	movf	__display_start@cntr,w,c
  8244  0036DA  0D01               	mullw	1
  8245  0036DC  0E77               	movlw	low _start_line2
  8246  0036DE  24F3               	addwf	prodl,w,c
  8247  0036E0  6EF6               	movwf	tblptrl,c
  8248  0036E2  0E8D               	movlw	high _start_line2
  8249  0036E4  20F4               	addwfc	prodh,w,c
  8250  0036E6  6EF7               	movwf	tblptrh,c
  8251  0036E8                     	if	1	;There are 3 active tblptr bytes
  8252  0036E8  6AF8               	clrf	tblptru,c
  8253  0036EA  0E00               	movlw	low (__mediumconst shr (0+16))
  8254  0036EC  22F8               	addwfc	tblptru,f,c
  8255  0036EE                     	endif
  8256  0036EE  5001               	movf	__display_start@cntr,w,c
  8257  0036F0  0D01               	mullw	1
  8258  0036F2  0E82               	movlw	low (_display_content+20)
  8259  0036F4  24F3               	addwf	prodl,w,c
  8260  0036F6  6ED9               	movwf	fsr2l,c
  8261  0036F8  0E01               	movlw	high (_display_content+20)
  8262  0036FA  20F4               	addwfc	prodh,w,c
  8263  0036FC  6EDA               	movwf	fsr2h,c
  8264  0036FE  0008               	tblrd		*
  8265  003700  CFF5 FFDF          	movff	tablat,indf2
  8266  003704  2A01               	incf	__display_start@cntr,f,c
  8267  003706                     l1443:
  8268  003706  5001               	movf	__display_start@cntr,w,c
  8269  003708  0D01               	mullw	1
  8270  00370A  0E77               	movlw	low _start_line2
  8271  00370C  24F3               	addwf	prodl,w,c
  8272  00370E  6EF6               	movwf	tblptrl,c
  8273  003710  0E8D               	movlw	high _start_line2
  8274  003712  20F4               	addwfc	prodh,w,c
  8275  003714  6EF7               	movwf	tblptrh,c
  8276  003716                     	if	1	;There are 3 active tblptr bytes
  8277  003716  6AF8               	clrf	tblptru,c
  8278  003718  0E00               	movlw	low (__mediumconst shr (0+16))
  8279  00371A  22F8               	addwfc	tblptru,f,c
  8280  00371C                     	endif
  8281  00371C  0008               	tblrd		*
  8282  00371E  50F5               	movf	tablat,w,c
  8283  003720  0900               	iorlw	0
  8284  003722  A4D8               	btfss	status,2,c
  8285  003724  D7D9               	goto	l1444
  8286                           
  8287                           ;display.c: 293: cntr = 0;
  8288  003726  0E00               	movlw	0
  8289  003728  6E01               	movwf	__display_start@cntr,c
  8290                           
  8291                           ;display.c: 294: while(start_line3[cntr])
  8292  00372A  D017               	goto	l1446
  8293  00372C                     
  8294                           ;display.c: 295: display_content[2][cntr] = start_line3[cntr++];
  8295  00372C  5001               	movf	__display_start@cntr,w,c
  8296  00372E  0D01               	mullw	1
  8297  003730  0EF6               	movlw	low _start_line3
  8298  003732  24F3               	addwf	prodl,w,c
  8299  003734  6EF6               	movwf	tblptrl,c
  8300  003736  0E8C               	movlw	high _start_line3
  8301  003738  20F4               	addwfc	prodh,w,c
  8302  00373A  6EF7               	movwf	tblptrh,c
  8303  00373C                     	if	1	;There are 3 active tblptr bytes
  8304  00373C  6AF8               	clrf	tblptru,c
  8305  00373E  0E00               	movlw	low (__mediumconst shr (0+16))
  8306  003740  22F8               	addwfc	tblptru,f,c
  8307  003742                     	endif
  8308  003742  5001               	movf	__display_start@cntr,w,c
  8309  003744  0D01               	mullw	1
  8310  003746  0E96               	movlw	low (_display_content+40)
  8311  003748  24F3               	addwf	prodl,w,c
  8312  00374A  6ED9               	movwf	fsr2l,c
  8313  00374C  0E01               	movlw	high (_display_content+40)
  8314  00374E  20F4               	addwfc	prodh,w,c
  8315  003750  6EDA               	movwf	fsr2h,c
  8316  003752  0008               	tblrd		*
  8317  003754  CFF5 FFDF          	movff	tablat,indf2
  8318  003758  2A01               	incf	__display_start@cntr,f,c
  8319  00375A                     l1446:
  8320  00375A  5001               	movf	__display_start@cntr,w,c
  8321  00375C  0D01               	mullw	1
  8322  00375E  0EF6               	movlw	low _start_line3
  8323  003760  24F3               	addwf	prodl,w,c
  8324  003762  6EF6               	movwf	tblptrl,c
  8325  003764  0E8C               	movlw	high _start_line3
  8326  003766  20F4               	addwfc	prodh,w,c
  8327  003768  6EF7               	movwf	tblptrh,c
  8328  00376A                     	if	1	;There are 3 active tblptr bytes
  8329  00376A  6AF8               	clrf	tblptru,c
  8330  00376C  0E00               	movlw	low (__mediumconst shr (0+16))
  8331  00376E  22F8               	addwfc	tblptru,f,c
  8332  003770                     	endif
  8333  003770  0008               	tblrd		*
  8334  003772  50F5               	movf	tablat,w,c
  8335  003774  0900               	iorlw	0
  8336  003776  A4D8               	btfss	status,2,c
  8337  003778  D7D9               	goto	l1447
  8338                           
  8339                           ;display.c: 296: cntr = 0;
  8340  00377A  0E00               	movlw	0
  8341  00377C  6E01               	movwf	__display_start@cntr,c
  8342                           
  8343                           ;display.c: 297: while(start_line4[cntr])
  8344  00377E  D017               	goto	l1449
  8345  003780                     
  8346                           ;display.c: 298: display_content[3][cntr] = start_line4[cntr++];
  8347  003780  5001               	movf	__display_start@cntr,w,c
  8348  003782  0D01               	mullw	1
  8349  003784  0E62               	movlw	low _start_line4
  8350  003786  24F3               	addwf	prodl,w,c
  8351  003788  6EF6               	movwf	tblptrl,c
  8352  00378A  0E8E               	movlw	high _start_line4
  8353  00378C  20F4               	addwfc	prodh,w,c
  8354  00378E  6EF7               	movwf	tblptrh,c
  8355  003790                     	if	1	;There are 3 active tblptr bytes
  8356  003790  6AF8               	clrf	tblptru,c
  8357  003792  0E00               	movlw	low (__mediumconst shr (0+16))
  8358  003794  22F8               	addwfc	tblptru,f,c
  8359  003796                     	endif
  8360  003796  5001               	movf	__display_start@cntr,w,c
  8361  003798  0D01               	mullw	1
  8362  00379A  0EAA               	movlw	low (_display_content+60)
  8363  00379C  24F3               	addwf	prodl,w,c
  8364  00379E  6ED9               	movwf	fsr2l,c
  8365  0037A0  0E01               	movlw	high (_display_content+60)
  8366  0037A2  20F4               	addwfc	prodh,w,c
  8367  0037A4  6EDA               	movwf	fsr2h,c
  8368  0037A6  0008               	tblrd		*
  8369  0037A8  CFF5 FFDF          	movff	tablat,indf2
  8370  0037AC  2A01               	incf	__display_start@cntr,f,c
  8371  0037AE                     l1449:
  8372  0037AE  5001               	movf	__display_start@cntr,w,c
  8373  0037B0  0D01               	mullw	1
  8374  0037B2  0E62               	movlw	low _start_line4
  8375  0037B4  24F3               	addwf	prodl,w,c
  8376  0037B6  6EF6               	movwf	tblptrl,c
  8377  0037B8  0E8E               	movlw	high _start_line4
  8378  0037BA  20F4               	addwfc	prodh,w,c
  8379  0037BC  6EF7               	movwf	tblptrh,c
  8380  0037BE                     	if	1	;There are 3 active tblptr bytes
  8381  0037BE  6AF8               	clrf	tblptru,c
  8382  0037C0  0E00               	movlw	low (__mediumconst shr (0+16))
  8383  0037C2  22F8               	addwfc	tblptru,f,c
  8384  0037C4                     	endif
  8385  0037C4  0008               	tblrd		*
  8386  0037C6  50F5               	movf	tablat,w,c
  8387  0037C8  0900               	iorlw	0
  8388  0037CA  B4D8               	btfsc	status,2,c
  8389  0037CC  0012               	return	
  8390  0037CE  D7D8               	goto	l1450
  8391  0037D0                     __end_of__display_start:
  8392                           	opt stack 0
  8393                           tblptru	equ	0xFF8
  8394                           tblptrh	equ	0xFF7
  8395                           tblptrl	equ	0xFF6
  8396                           tablat	equ	0xFF5
  8397                           prodh	equ	0xFF4
  8398                           prodl	equ	0xFF3
  8399                           intcon	equ	0xFF2
  8400                           intcon2	equ	0xFF1
  8401                           intcon3	equ	0xFF0
  8402                           postinc0	equ	0xFEE
  8403                           wreg	equ	0xFE8
  8404                           postdec1	equ	0xFE5
  8405                           plusw1	equ	0xFE3
  8406                           fsr1h	equ	0xFE2
  8407                           fsr1l	equ	0xFE1
  8408                           indf2	equ	0xFDF
  8409                           postinc2	equ	0xFDE
  8410                           plusw2	equ	0xFDB
  8411                           fsr2h	equ	0xFDA
  8412                           fsr2l	equ	0xFD9
  8413                           status	equ	0xFD8
  8414                           
  8415 ;; *************** function __display_programming *****************
  8416 ;; Defined at:
  8417 ;;		line 416 in file "display.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  cntr            1   30[COMRAM] unsigned char 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;Total ram usage:        1 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:    4
  8438 ;; This function calls:
  8439 ;;		__display_itoa_u16
  8440 ;;		_bootloader_get_entries
  8441 ;;		_bootloader_get_flashPagesWritten
  8442 ;;		_bootloader_get_total_entries
  8443 ;; This function is called by:
  8444 ;;		_display_prepare
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text34
  8449  002CEE                     __ptext34:
  8450                           	opt stack 0
  8451  002CEE                     __display_programming:
  8452                           	opt stack 25
  8453                           
  8454                           ;display.c: 418: uint8_t cntr;;display.c: 419: cntr = 0;
  8455                           
  8456                           ;incstack = 0
  8457  002CEE  0E00               	movlw	0
  8458  002CF0  6E1F               	movwf	__display_programming@cntr,c
  8459                           
  8460                           ;display.c: 420: while(programming_line1[cntr])
  8461  002CF2  D017               	goto	l1534
  8462  002CF4                     
  8463                           ;display.c: 421: display_content[0][cntr] = programming_line1[cntr++];
  8464  002CF4  501F               	movf	__display_programming@cntr,w,c
  8465  002CF6  0D01               	mullw	1
  8466  002CF8  0ED9               	movlw	low _programming_line1
  8467  002CFA  24F3               	addwf	prodl,w,c
  8468  002CFC  6EF6               	movwf	tblptrl,c
  8469  002CFE  0E8D               	movlw	high _programming_line1
  8470  002D00  20F4               	addwfc	prodh,w,c
  8471  002D02  6EF7               	movwf	tblptrh,c
  8472  002D04                     	if	1	;There are 3 active tblptr bytes
  8473  002D04  6AF8               	clrf	tblptru,c
  8474  002D06  0E00               	movlw	low (__mediumconst shr (0+16))
  8475  002D08  22F8               	addwfc	tblptru,f,c
  8476  002D0A                     	endif
  8477  002D0A  501F               	movf	__display_programming@cntr,w,c
  8478  002D0C  0D01               	mullw	1
  8479  002D0E  0E6E               	movlw	low _display_content
  8480  002D10  24F3               	addwf	prodl,w,c
  8481  002D12  6ED9               	movwf	fsr2l,c
  8482  002D14  0E01               	movlw	high _display_content
  8483  002D16  20F4               	addwfc	prodh,w,c
  8484  002D18  6EDA               	movwf	fsr2h,c
  8485  002D1A  0008               	tblrd		*
  8486  002D1C  CFF5 FFDF          	movff	tablat,indf2
  8487  002D20  2A1F               	incf	__display_programming@cntr,f,c
  8488  002D22                     l1534:
  8489  002D22  501F               	movf	__display_programming@cntr,w,c
  8490  002D24  0D01               	mullw	1
  8491  002D26  0ED9               	movlw	low _programming_line1
  8492  002D28  24F3               	addwf	prodl,w,c
  8493  002D2A  6EF6               	movwf	tblptrl,c
  8494  002D2C  0E8D               	movlw	high _programming_line1
  8495  002D2E  20F4               	addwfc	prodh,w,c
  8496  002D30  6EF7               	movwf	tblptrh,c
  8497  002D32                     	if	1	;There are 3 active tblptr bytes
  8498  002D32  6AF8               	clrf	tblptru,c
  8499  002D34  0E00               	movlw	low (__mediumconst shr (0+16))
  8500  002D36  22F8               	addwfc	tblptru,f,c
  8501  002D38                     	endif
  8502  002D38  0008               	tblrd		*
  8503  002D3A  50F5               	movf	tablat,w,c
  8504  002D3C  0900               	iorlw	0
  8505  002D3E  A4D8               	btfss	status,2,c
  8506  002D40  D7D9               	goto	l1535
  8507                           
  8508                           ;display.c: 423: cntr = 0;
  8509  002D42  0E00               	movlw	0
  8510  002D44  6E1F               	movwf	__display_programming@cntr,c
  8511                           
  8512                           ;display.c: 424: while(programming_line2[cntr])
  8513  002D46  D017               	goto	l1537
  8514  002D48                     
  8515                           ;display.c: 425: display_content[1][cntr] = programming_line2[cntr++];
  8516  002D48  501F               	movf	__display_programming@cntr,w,c
  8517  002D4A  0D01               	mullw	1
  8518  002D4C  0E30               	movlw	low _programming_line2
  8519  002D4E  24F3               	addwf	prodl,w,c
  8520  002D50  6EF6               	movwf	tblptrl,c
  8521  002D52  0E8D               	movlw	high _programming_line2
  8522  002D54  20F4               	addwfc	prodh,w,c
  8523  002D56  6EF7               	movwf	tblptrh,c
  8524  002D58                     	if	1	;There are 3 active tblptr bytes
  8525  002D58  6AF8               	clrf	tblptru,c
  8526  002D5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8527  002D5C  22F8               	addwfc	tblptru,f,c
  8528  002D5E                     	endif
  8529  002D5E  501F               	movf	__display_programming@cntr,w,c
  8530  002D60  0D01               	mullw	1
  8531  002D62  0E82               	movlw	low (_display_content+20)
  8532  002D64  24F3               	addwf	prodl,w,c
  8533  002D66  6ED9               	movwf	fsr2l,c
  8534  002D68  0E01               	movlw	high (_display_content+20)
  8535  002D6A  20F4               	addwfc	prodh,w,c
  8536  002D6C  6EDA               	movwf	fsr2h,c
  8537  002D6E  0008               	tblrd		*
  8538  002D70  CFF5 FFDF          	movff	tablat,indf2
  8539  002D74  2A1F               	incf	__display_programming@cntr,f,c
  8540  002D76                     l1537:
  8541  002D76  501F               	movf	__display_programming@cntr,w,c
  8542  002D78  0D01               	mullw	1
  8543  002D7A  0E30               	movlw	low _programming_line2
  8544  002D7C  24F3               	addwf	prodl,w,c
  8545  002D7E  6EF6               	movwf	tblptrl,c
  8546  002D80  0E8D               	movlw	high _programming_line2
  8547  002D82  20F4               	addwfc	prodh,w,c
  8548  002D84  6EF7               	movwf	tblptrh,c
  8549  002D86                     	if	1	;There are 3 active tblptr bytes
  8550  002D86  6AF8               	clrf	tblptru,c
  8551  002D88  0E00               	movlw	low (__mediumconst shr (0+16))
  8552  002D8A  22F8               	addwfc	tblptru,f,c
  8553  002D8C                     	endif
  8554  002D8C  0008               	tblrd		*
  8555  002D8E  50F5               	movf	tablat,w,c
  8556  002D90  0900               	iorlw	0
  8557  002D92  A4D8               	btfss	status,2,c
  8558  002D94  D7D9               	goto	l1538
  8559                           
  8560                           ;display.c: 427: cntr = 0;
  8561  002D96  0E00               	movlw	0
  8562  002D98  6E1F               	movwf	__display_programming@cntr,c
  8563                           
  8564                           ;display.c: 428: while(programming_line3[cntr])
  8565  002D9A  D017               	goto	l1540
  8566  002D9C                     
  8567                           ;display.c: 429: display_content[2][cntr] = programming_line3[cntr++];
  8568  002D9C  501F               	movf	__display_programming@cntr,w,c
  8569  002D9E  0D01               	mullw	1
  8570  002DA0  0E83               	movlw	low _programming_line3
  8571  002DA2  24F3               	addwf	prodl,w,c
  8572  002DA4  6EF6               	movwf	tblptrl,c
  8573  002DA6  0E8E               	movlw	high _programming_line3
  8574  002DA8  20F4               	addwfc	prodh,w,c
  8575  002DAA  6EF7               	movwf	tblptrh,c
  8576  002DAC                     	if	1	;There are 3 active tblptr bytes
  8577  002DAC  6AF8               	clrf	tblptru,c
  8578  002DAE  0E00               	movlw	low (__mediumconst shr (0+16))
  8579  002DB0  22F8               	addwfc	tblptru,f,c
  8580  002DB2                     	endif
  8581  002DB2  501F               	movf	__display_programming@cntr,w,c
  8582  002DB4  0D01               	mullw	1
  8583  002DB6  0E96               	movlw	low (_display_content+40)
  8584  002DB8  24F3               	addwf	prodl,w,c
  8585  002DBA  6ED9               	movwf	fsr2l,c
  8586  002DBC  0E01               	movlw	high (_display_content+40)
  8587  002DBE  20F4               	addwfc	prodh,w,c
  8588  002DC0  6EDA               	movwf	fsr2h,c
  8589  002DC2  0008               	tblrd		*
  8590  002DC4  CFF5 FFDF          	movff	tablat,indf2
  8591  002DC8  2A1F               	incf	__display_programming@cntr,f,c
  8592  002DCA                     l1540:
  8593  002DCA  501F               	movf	__display_programming@cntr,w,c
  8594  002DCC  0D01               	mullw	1
  8595  002DCE  0E83               	movlw	low _programming_line3
  8596  002DD0  24F3               	addwf	prodl,w,c
  8597  002DD2  6EF6               	movwf	tblptrl,c
  8598  002DD4  0E8E               	movlw	high _programming_line3
  8599  002DD6  20F4               	addwfc	prodh,w,c
  8600  002DD8  6EF7               	movwf	tblptrh,c
  8601  002DDA                     	if	1	;There are 3 active tblptr bytes
  8602  002DDA  6AF8               	clrf	tblptru,c
  8603  002DDC  0E00               	movlw	low (__mediumconst shr (0+16))
  8604  002DDE  22F8               	addwfc	tblptru,f,c
  8605  002DE0                     	endif
  8606  002DE0  0008               	tblrd		*
  8607  002DE2  50F5               	movf	tablat,w,c
  8608  002DE4  0900               	iorlw	0
  8609  002DE6  A4D8               	btfss	status,2,c
  8610  002DE8  D7D9               	goto	l1541
  8611                           
  8612                           ;display.c: 430: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
  8613  002DEA  ECB5  F03D         	call	_bootloader_get_entries	;wreg free
  8614  002DEE  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8615  002DF2  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8616  002DF6  6A1B               	clrf	__display_itoa_u16@value+2,c
  8617  002DF8  6A1C               	clrf	__display_itoa_u16@value+3,c
  8618  002DFA  501F               	movf	__display_programming@cntr,w,c
  8619  002DFC  0D01               	mullw	1
  8620  002DFE  0E96               	movlw	low (_display_content+40)
  8621  002E00  24F3               	addwf	prodl,w,c
  8622  002E02  6E1D               	movwf	__display_itoa_u16@text,c
  8623  002E04  0E01               	movlw	high (_display_content+40)
  8624  002E06  20F4               	addwfc	prodh,w,c
  8625  002E08  6E1E               	movwf	__display_itoa_u16@text+1,c
  8626  002E0A  EC50  F027         	call	__display_itoa_u16	;wreg free
  8627  002E0E  261F               	addwf	__display_programming@cntr,f,c
  8628                           
  8629                           ;display.c: 431: display_content[2][cntr++] = '/';
  8630  002E10  501F               	movf	__display_programming@cntr,w,c
  8631  002E12  0D01               	mullw	1
  8632  002E14  0E96               	movlw	low (_display_content+40)
  8633  002E16  24F3               	addwf	prodl,w,c
  8634  002E18  6ED9               	movwf	fsr2l,c
  8635  002E1A  0E01               	movlw	high (_display_content+40)
  8636  002E1C  20F4               	addwfc	prodh,w,c
  8637  002E1E  6EDA               	movwf	fsr2h,c
  8638  002E20  0E2F               	movlw	47
  8639  002E22  6EDF               	movwf	indf2,c
  8640  002E24  2A1F               	incf	__display_programming@cntr,f,c
  8641                           
  8642                           ;display.c: 432: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
  8643  002E26  ECA1  F03D         	call	_bootloader_get_total_entries	;wreg free
  8644  002E2A  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
  8645  002E2E  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
  8646  002E32  6A1B               	clrf	__display_itoa_u16@value+2,c
  8647  002E34  6A1C               	clrf	__display_itoa_u16@value+3,c
  8648  002E36  501F               	movf	__display_programming@cntr,w,c
  8649  002E38  0D01               	mullw	1
  8650  002E3A  0E96               	movlw	low (_display_content+40)
  8651  002E3C  24F3               	addwf	prodl,w,c
  8652  002E3E  6E1D               	movwf	__display_itoa_u16@text,c
  8653  002E40  0E01               	movlw	high (_display_content+40)
  8654  002E42  20F4               	addwfc	prodh,w,c
  8655  002E44  6E1E               	movwf	__display_itoa_u16@text+1,c
  8656  002E46  EC50  F027         	call	__display_itoa_u16	;wreg free
  8657                           
  8658                           ;display.c: 434: cntr = 0;
  8659  002E4A  0E00               	movlw	0
  8660  002E4C  6E1F               	movwf	__display_programming@cntr,c
  8661                           
  8662                           ;display.c: 435: while(programming_line4[cntr])
  8663  002E4E  D017               	goto	l1543
  8664  002E50                     
  8665                           ;display.c: 436: display_content[3][cntr] = programming_line4[cntr++];
  8666  002E50  501F               	movf	__display_programming@cntr,w,c
  8667  002E52  0D01               	mullw	1
  8668  002E54  0EC9               	movlw	low _programming_line4
  8669  002E56  24F3               	addwf	prodl,w,c
  8670  002E58  6EF6               	movwf	tblptrl,c
  8671  002E5A  0E8D               	movlw	high _programming_line4
  8672  002E5C  20F4               	addwfc	prodh,w,c
  8673  002E5E  6EF7               	movwf	tblptrh,c
  8674  002E60                     	if	1	;There are 3 active tblptr bytes
  8675  002E60  6AF8               	clrf	tblptru,c
  8676  002E62  0E00               	movlw	low (__mediumconst shr (0+16))
  8677  002E64  22F8               	addwfc	tblptru,f,c
  8678  002E66                     	endif
  8679  002E66  501F               	movf	__display_programming@cntr,w,c
  8680  002E68  0D01               	mullw	1
  8681  002E6A  0EAA               	movlw	low (_display_content+60)
  8682  002E6C  24F3               	addwf	prodl,w,c
  8683  002E6E  6ED9               	movwf	fsr2l,c
  8684  002E70  0E01               	movlw	high (_display_content+60)
  8685  002E72  20F4               	addwfc	prodh,w,c
  8686  002E74  6EDA               	movwf	fsr2h,c
  8687  002E76  0008               	tblrd		*
  8688  002E78  CFF5 FFDF          	movff	tablat,indf2
  8689  002E7C  2A1F               	incf	__display_programming@cntr,f,c
  8690  002E7E                     l1543:
  8691  002E7E  501F               	movf	__display_programming@cntr,w,c
  8692  002E80  0D01               	mullw	1
  8693  002E82  0EC9               	movlw	low _programming_line4
  8694  002E84  24F3               	addwf	prodl,w,c
  8695  002E86  6EF6               	movwf	tblptrl,c
  8696  002E88  0E8D               	movlw	high _programming_line4
  8697  002E8A  20F4               	addwfc	prodh,w,c
  8698  002E8C  6EF7               	movwf	tblptrh,c
  8699  002E8E                     	if	1	;There are 3 active tblptr bytes
  8700  002E8E  6AF8               	clrf	tblptru,c
  8701  002E90  0E00               	movlw	low (__mediumconst shr (0+16))
  8702  002E92  22F8               	addwfc	tblptru,f,c
  8703  002E94                     	endif
  8704  002E94  0008               	tblrd		*
  8705  002E96  50F5               	movf	tablat,w,c
  8706  002E98  0900               	iorlw	0
  8707  002E9A  A4D8               	btfss	status,2,c
  8708  002E9C  D7D9               	goto	l1544
  8709                           
  8710                           ;display.c: 437: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
  8711  002E9E  ECB0  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
  8712  002EA2  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
  8713  002EA6  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
  8714  002EAA  6A1B               	clrf	__display_itoa_u16@value+2,c
  8715  002EAC  6A1C               	clrf	__display_itoa_u16@value+3,c
  8716  002EAE  501F               	movf	__display_programming@cntr,w,c
  8717  002EB0  0D01               	mullw	1
  8718  002EB2  0EAA               	movlw	low (_display_content+60)
  8719  002EB4  24F3               	addwf	prodl,w,c
  8720  002EB6  6E1D               	movwf	__display_itoa_u16@text,c
  8721  002EB8  0E01               	movlw	high (_display_content+60)
  8722  002EBA  20F4               	addwfc	prodh,w,c
  8723  002EBC  6E1E               	movwf	__display_itoa_u16@text+1,c
  8724  002EBE  EC50  F027         	call	__display_itoa_u16	;wreg free
  8725  002EC2  0012               	return		;funcret
  8726  002EC4                     __end_of__display_programming:
  8727                           	opt stack 0
  8728                           tblptru	equ	0xFF8
  8729                           tblptrh	equ	0xFF7
  8730                           tblptrl	equ	0xFF6
  8731                           tablat	equ	0xFF5
  8732                           prodh	equ	0xFF4
  8733                           prodl	equ	0xFF3
  8734                           intcon	equ	0xFF2
  8735                           intcon2	equ	0xFF1
  8736                           intcon3	equ	0xFF0
  8737                           postinc0	equ	0xFEE
  8738                           wreg	equ	0xFE8
  8739                           postdec1	equ	0xFE5
  8740                           plusw1	equ	0xFE3
  8741                           fsr1h	equ	0xFE2
  8742                           fsr1l	equ	0xFE1
  8743                           indf2	equ	0xFDF
  8744                           postinc2	equ	0xFDE
  8745                           plusw2	equ	0xFDB
  8746                           fsr2h	equ	0xFDA
  8747                           fsr2l	equ	0xFD9
  8748                           status	equ	0xFD8
  8749                           
  8750 ;; *************** function __display_found *****************
  8751 ;; Defined at:
  8752 ;;		line 301 in file "display.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  cntr            1   39[COMRAM] unsigned char 
  8757 ;;  start           1   38[COMRAM] unsigned char 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;Total ram usage:        4 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    5
  8774 ;; This function calls:
  8775 ;;		__display_itoa_u32
  8776 ;;		_bootloader_get_file_size
  8777 ;; This function is called by:
  8778 ;;		_display_prepare
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text35
  8783  002938                     __ptext35:
  8784                           	opt stack 0
  8785  002938                     __display_found:
  8786                           	opt stack 24
  8787                           
  8788                           ;display.c: 303: uint8_t cntr;;display.c: 304: uint8_t start;;display.c: 306: cntr = 0;
  8789                           
  8790                           ;incstack = 0
  8791  002938  0E00               	movlw	0
  8792  00293A  6E28               	movwf	__display_found@cntr,c
  8793                           
  8794                           ;display.c: 307: while(found_line1[cntr])
  8795  00293C  D017               	goto	l1455
  8796  00293E                     
  8797                           ;display.c: 308: display_content[0][cntr] = found_line1[cntr++];
  8798  00293E  5028               	movf	__display_found@cntr,w,c
  8799  002940  0D01               	mullw	1
  8800  002942  0E19               	movlw	low _found_line1
  8801  002944  24F3               	addwf	prodl,w,c
  8802  002946  6EF6               	movwf	tblptrl,c
  8803  002948  0E8E               	movlw	high _found_line1
  8804  00294A  20F4               	addwfc	prodh,w,c
  8805  00294C  6EF7               	movwf	tblptrh,c
  8806  00294E                     	if	1	;There are 3 active tblptr bytes
  8807  00294E  6AF8               	clrf	tblptru,c
  8808  002950  0E00               	movlw	low (__mediumconst shr (0+16))
  8809  002952  22F8               	addwfc	tblptru,f,c
  8810  002954                     	endif
  8811  002954  5028               	movf	__display_found@cntr,w,c
  8812  002956  0D01               	mullw	1
  8813  002958  0E6E               	movlw	low _display_content
  8814  00295A  24F3               	addwf	prodl,w,c
  8815  00295C  6ED9               	movwf	fsr2l,c
  8816  00295E  0E01               	movlw	high _display_content
  8817  002960  20F4               	addwfc	prodh,w,c
  8818  002962  6EDA               	movwf	fsr2h,c
  8819  002964  0008               	tblrd		*
  8820  002966  CFF5 FFDF          	movff	tablat,indf2
  8821  00296A  2A28               	incf	__display_found@cntr,f,c
  8822  00296C                     l1455:
  8823  00296C  5028               	movf	__display_found@cntr,w,c
  8824  00296E  0D01               	mullw	1
  8825  002970  0E19               	movlw	low _found_line1
  8826  002972  24F3               	addwf	prodl,w,c
  8827  002974  6EF6               	movwf	tblptrl,c
  8828  002976  0E8E               	movlw	high _found_line1
  8829  002978  20F4               	addwfc	prodh,w,c
  8830  00297A  6EF7               	movwf	tblptrh,c
  8831  00297C                     	if	1	;There are 3 active tblptr bytes
  8832  00297C  6AF8               	clrf	tblptru,c
  8833  00297E  0E00               	movlw	low (__mediumconst shr (0+16))
  8834  002980  22F8               	addwfc	tblptru,f,c
  8835  002982                     	endif
  8836  002982  0008               	tblrd		*
  8837  002984  50F5               	movf	tablat,w,c
  8838  002986  0900               	iorlw	0
  8839  002988  A4D8               	btfss	status,2,c
  8840  00298A  D7D9               	goto	l1456
  8841                           
  8842                           ;display.c: 310: cntr = 0;
  8843  00298C  0E00               	movlw	0
  8844  00298E  6E28               	movwf	__display_found@cntr,c
  8845                           
  8846                           ;display.c: 311: while(found_line2[cntr])
  8847  002990  D017               	goto	l1458
  8848  002992                     
  8849                           ;display.c: 312: display_content[1][cntr] = found_line2[cntr++];
  8850  002992  5028               	movf	__display_found@cntr,w,c
  8851  002994  0D01               	mullw	1
  8852  002996  0E1D               	movlw	low _found_line2
  8853  002998  24F3               	addwf	prodl,w,c
  8854  00299A  6EF6               	movwf	tblptrl,c
  8855  00299C  0E8D               	movlw	high _found_line2
  8856  00299E  20F4               	addwfc	prodh,w,c
  8857  0029A0  6EF7               	movwf	tblptrh,c
  8858  0029A2                     	if	1	;There are 3 active tblptr bytes
  8859  0029A2  6AF8               	clrf	tblptru,c
  8860  0029A4  0E00               	movlw	low (__mediumconst shr (0+16))
  8861  0029A6  22F8               	addwfc	tblptru,f,c
  8862  0029A8                     	endif
  8863  0029A8  5028               	movf	__display_found@cntr,w,c
  8864  0029AA  0D01               	mullw	1
  8865  0029AC  0E82               	movlw	low (_display_content+20)
  8866  0029AE  24F3               	addwf	prodl,w,c
  8867  0029B0  6ED9               	movwf	fsr2l,c
  8868  0029B2  0E01               	movlw	high (_display_content+20)
  8869  0029B4  20F4               	addwfc	prodh,w,c
  8870  0029B6  6EDA               	movwf	fsr2h,c
  8871  0029B8  0008               	tblrd		*
  8872  0029BA  CFF5 FFDF          	movff	tablat,indf2
  8873  0029BE  2A28               	incf	__display_found@cntr,f,c
  8874  0029C0                     l1458:
  8875  0029C0  5028               	movf	__display_found@cntr,w,c
  8876  0029C2  0D01               	mullw	1
  8877  0029C4  0E1D               	movlw	low _found_line2
  8878  0029C6  24F3               	addwf	prodl,w,c
  8879  0029C8  6EF6               	movwf	tblptrl,c
  8880  0029CA  0E8D               	movlw	high _found_line2
  8881  0029CC  20F4               	addwfc	prodh,w,c
  8882  0029CE  6EF7               	movwf	tblptrh,c
  8883  0029D0                     	if	1	;There are 3 active tblptr bytes
  8884  0029D0  6AF8               	clrf	tblptru,c
  8885  0029D2  0E00               	movlw	low (__mediumconst shr (0+16))
  8886  0029D4  22F8               	addwfc	tblptru,f,c
  8887  0029D6                     	endif
  8888  0029D6  0008               	tblrd		*
  8889  0029D8  50F5               	movf	tablat,w,c
  8890  0029DA  0900               	iorlw	0
  8891  0029DC  A4D8               	btfss	status,2,c
  8892  0029DE  D7D9               	goto	l1459
  8893                           
  8894                           ;display.c: 314: cntr = 0;
  8895  0029E0  0E00               	movlw	0
  8896  0029E2  6E28               	movwf	__display_found@cntr,c
  8897                           
  8898                           ;display.c: 315: while(found_line3[cntr])
  8899  0029E4  D017               	goto	l1461
  8900  0029E6                     
  8901                           ;display.c: 316: display_content[2][cntr] = found_line3[cntr++];
  8902  0029E6  5028               	movf	__display_found@cntr,w,c
  8903  0029E8  0D01               	mullw	1
  8904  0029EA  0E98               	movlw	low _found_line3
  8905  0029EC  24F3               	addwf	prodl,w,c
  8906  0029EE  6EF6               	movwf	tblptrl,c
  8907  0029F0  0E8E               	movlw	high _found_line3
  8908  0029F2  20F4               	addwfc	prodh,w,c
  8909  0029F4  6EF7               	movwf	tblptrh,c
  8910  0029F6                     	if	1	;There are 3 active tblptr bytes
  8911  0029F6  6AF8               	clrf	tblptru,c
  8912  0029F8  0E00               	movlw	low (__mediumconst shr (0+16))
  8913  0029FA  22F8               	addwfc	tblptru,f,c
  8914  0029FC                     	endif
  8915  0029FC  5028               	movf	__display_found@cntr,w,c
  8916  0029FE  0D01               	mullw	1
  8917  002A00  0E96               	movlw	low (_display_content+40)
  8918  002A02  24F3               	addwf	prodl,w,c
  8919  002A04  6ED9               	movwf	fsr2l,c
  8920  002A06  0E01               	movlw	high (_display_content+40)
  8921  002A08  20F4               	addwfc	prodh,w,c
  8922  002A0A  6EDA               	movwf	fsr2h,c
  8923  002A0C  0008               	tblrd		*
  8924  002A0E  CFF5 FFDF          	movff	tablat,indf2
  8925  002A12  2A28               	incf	__display_found@cntr,f,c
  8926  002A14                     l1461:
  8927  002A14  5028               	movf	__display_found@cntr,w,c
  8928  002A16  0D01               	mullw	1
  8929  002A18  0E98               	movlw	low _found_line3
  8930  002A1A  24F3               	addwf	prodl,w,c
  8931  002A1C  6EF6               	movwf	tblptrl,c
  8932  002A1E  0E8E               	movlw	high _found_line3
  8933  002A20  20F4               	addwfc	prodh,w,c
  8934  002A22  6EF7               	movwf	tblptrh,c
  8935  002A24                     	if	1	;There are 3 active tblptr bytes
  8936  002A24  6AF8               	clrf	tblptru,c
  8937  002A26  0E00               	movlw	low (__mediumconst shr (0+16))
  8938  002A28  22F8               	addwfc	tblptru,f,c
  8939  002A2A                     	endif
  8940  002A2A  0008               	tblrd		*
  8941  002A2C  50F5               	movf	tablat,w,c
  8942  002A2E  0900               	iorlw	0
  8943  002A30  A4D8               	btfss	status,2,c
  8944  002A32  D7D9               	goto	l1462
  8945                           
  8946                           ;display.c: 317: start = cntr;
  8947  002A34  C028  F027         	movff	__display_found@cntr,__display_found@start
  8948                           
  8949                           ;display.c: 318: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
  8950  002A38  EC5A  F03D         	call	_bootloader_get_file_size	;wreg free
  8951  002A3C  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
  8952  002A40  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
  8953  002A44  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
  8954  002A48  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
  8955  002A4C  5028               	movf	__display_found@cntr,w,c
  8956  002A4E  0D01               	mullw	1
  8957  002A50  0E96               	movlw	low (_display_content+40)
  8958  002A52  24F3               	addwf	prodl,w,c
  8959  002A54  6E23               	movwf	__display_itoa_u32@text,c
  8960  002A56  0E01               	movlw	high (_display_content+40)
  8961  002A58  20F4               	addwfc	prodh,w,c
  8962  002A5A  6E24               	movwf	__display_itoa_u32@text+1,c
  8963  002A5C  EC2D  F004         	call	__display_itoa_u32	;wreg free
  8964  002A60  2627               	addwf	__display_found@start,f,c
  8965                           
  8966                           ;display.c: 319: cntr = 0;
  8967  002A62  0E00               	movlw	0
  8968  002A64  6E28               	movwf	__display_found@cntr,c
  8969                           
  8970                           ;display.c: 320: while(found_line3b[cntr])
  8971  002A66  D01C               	goto	l1464
  8972  002A68                     
  8973                           ;display.c: 321: display_content[2][start+cntr] = found_line3b[cntr++];
  8974  002A68  5028               	movf	__display_found@cntr,w,c
  8975  002A6A  0D01               	mullw	1
  8976  002A6C  0E91               	movlw	low _found_line3b
  8977  002A6E  24F3               	addwf	prodl,w,c
  8978  002A70  6EF6               	movwf	tblptrl,c
  8979  002A72  0E8E               	movlw	high _found_line3b
  8980  002A74  20F4               	addwfc	prodh,w,c
  8981  002A76  6EF7               	movwf	tblptrh,c
  8982  002A78                     	if	1	;There are 3 active tblptr bytes
  8983  002A78  6AF8               	clrf	tblptru,c
  8984  002A7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8985  002A7C  22F8               	addwfc	tblptru,f,c
  8986  002A7E                     	endif
  8987  002A7E  5028               	movf	__display_found@cntr,w,c
  8988  002A80  C027  F025         	movff	__display_found@start,??__display_found
  8989  002A84  6A26               	clrf	(??__display_found+1)& (0+255),c
  8990  002A86  2625               	addwf	??__display_found,f,c
  8991  002A88  0E00               	movlw	0
  8992  002A8A  2226               	addwfc	??__display_found+1,f,c
  8993  002A8C  0E96               	movlw	low (_display_content+40)
  8994  002A8E  2425               	addwf	??__display_found,w,c
  8995  002A90  6ED9               	movwf	fsr2l,c
  8996  002A92  0E01               	movlw	high (_display_content+40)
  8997  002A94  2026               	addwfc	??__display_found+1,w,c
  8998  002A96  6EDA               	movwf	fsr2h,c
  8999  002A98  0008               	tblrd		*
  9000  002A9A  CFF5 FFDF          	movff	tablat,indf2
  9001  002A9E  2A28               	incf	__display_found@cntr,f,c
  9002  002AA0                     l1464:
  9003  002AA0  5028               	movf	__display_found@cntr,w,c
  9004  002AA2  0D01               	mullw	1
  9005  002AA4  0E91               	movlw	low _found_line3b
  9006  002AA6  24F3               	addwf	prodl,w,c
  9007  002AA8  6EF6               	movwf	tblptrl,c
  9008  002AAA  0E8E               	movlw	high _found_line3b
  9009  002AAC  20F4               	addwfc	prodh,w,c
  9010  002AAE  6EF7               	movwf	tblptrh,c
  9011  002AB0                     	if	1	;There are 3 active tblptr bytes
  9012  002AB0  6AF8               	clrf	tblptru,c
  9013  002AB2  0E00               	movlw	low (__mediumconst shr (0+16))
  9014  002AB4  22F8               	addwfc	tblptru,f,c
  9015  002AB6                     	endif
  9016  002AB6  0008               	tblrd		*
  9017  002AB8  50F5               	movf	tablat,w,c
  9018  002ABA  0900               	iorlw	0
  9019  002ABC  A4D8               	btfss	status,2,c
  9020  002ABE  D7D4               	goto	l1465
  9021                           
  9022                           ;display.c: 323: cntr = 0;
  9023  002AC0  0E00               	movlw	0
  9024  002AC2  6E28               	movwf	__display_found@cntr,c
  9025                           
  9026                           ;display.c: 324: while(found_line4[cntr])
  9027  002AC4  D017               	goto	l1467
  9028  002AC6                     
  9029                           ;display.c: 325: display_content[3][cntr] = found_line4[cntr++];
  9030  002AC6  5028               	movf	__display_found@cntr,w,c
  9031  002AC8  0D01               	mullw	1
  9032  002ACA  0E54               	movlw	low _found_line4
  9033  002ACC  24F3               	addwf	prodl,w,c
  9034  002ACE  6EF6               	movwf	tblptrl,c
  9035  002AD0  0E8D               	movlw	high _found_line4
  9036  002AD2  20F4               	addwfc	prodh,w,c
  9037  002AD4  6EF7               	movwf	tblptrh,c
  9038  002AD6                     	if	1	;There are 3 active tblptr bytes
  9039  002AD6  6AF8               	clrf	tblptru,c
  9040  002AD8  0E00               	movlw	low (__mediumconst shr (0+16))
  9041  002ADA  22F8               	addwfc	tblptru,f,c
  9042  002ADC                     	endif
  9043  002ADC  5028               	movf	__display_found@cntr,w,c
  9044  002ADE  0D01               	mullw	1
  9045  002AE0  0EAA               	movlw	low (_display_content+60)
  9046  002AE2  24F3               	addwf	prodl,w,c
  9047  002AE4  6ED9               	movwf	fsr2l,c
  9048  002AE6  0E01               	movlw	high (_display_content+60)
  9049  002AE8  20F4               	addwfc	prodh,w,c
  9050  002AEA  6EDA               	movwf	fsr2h,c
  9051  002AEC  0008               	tblrd		*
  9052  002AEE  CFF5 FFDF          	movff	tablat,indf2
  9053  002AF2  2A28               	incf	__display_found@cntr,f,c
  9054  002AF4                     l1467:
  9055  002AF4  5028               	movf	__display_found@cntr,w,c
  9056  002AF6  0D01               	mullw	1
  9057  002AF8  0E54               	movlw	low _found_line4
  9058  002AFA  24F3               	addwf	prodl,w,c
  9059  002AFC  6EF6               	movwf	tblptrl,c
  9060  002AFE  0E8D               	movlw	high _found_line4
  9061  002B00  20F4               	addwfc	prodh,w,c
  9062  002B02  6EF7               	movwf	tblptrh,c
  9063  002B04                     	if	1	;There are 3 active tblptr bytes
  9064  002B04  6AF8               	clrf	tblptru,c
  9065  002B06  0E00               	movlw	low (__mediumconst shr (0+16))
  9066  002B08  22F8               	addwfc	tblptru,f,c
  9067  002B0A                     	endif
  9068  002B0A  0008               	tblrd		*
  9069  002B0C  50F5               	movf	tablat,w,c
  9070  002B0E  0900               	iorlw	0
  9071  002B10  B4D8               	btfsc	status,2,c
  9072  002B12  0012               	return	
  9073  002B14  D7D8               	goto	l1468
  9074  002B16                     __end_of__display_found:
  9075                           	opt stack 0
  9076                           tblptru	equ	0xFF8
  9077                           tblptrh	equ	0xFF7
  9078                           tblptrl	equ	0xFF6
  9079                           tablat	equ	0xFF5
  9080                           prodh	equ	0xFF4
  9081                           prodl	equ	0xFF3
  9082                           intcon	equ	0xFF2
  9083                           intcon2	equ	0xFF1
  9084                           intcon3	equ	0xFF0
  9085                           postinc0	equ	0xFEE
  9086                           wreg	equ	0xFE8
  9087                           postdec1	equ	0xFE5
  9088                           plusw1	equ	0xFE3
  9089                           fsr1h	equ	0xFE2
  9090                           fsr1l	equ	0xFE1
  9091                           indf2	equ	0xFDF
  9092                           postinc2	equ	0xFDE
  9093                           plusw2	equ	0xFDB
  9094                           fsr2h	equ	0xFDA
  9095                           fsr2l	equ	0xFD9
  9096                           status	equ	0xFD8
  9097                           
  9098 ;; *************** function __display_failed *****************
  9099 ;; Defined at:
  9100 ;;		line 366 in file "display.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;		None
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  cntr            1   36[COMRAM] unsigned char 
  9105 ;;  start           1    0        unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9119 ;;Total ram usage:        1 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    5
  9122 ;; This function calls:
  9123 ;;		__display_itoa_u16
  9124 ;;		__display_itoa_u32
  9125 ;;		_bootloader_get_entries
  9126 ;;		_bootloader_get_error
  9127 ;;		_bootloader_get_rec_address
  9128 ;; This function is called by:
  9129 ;;		_display_prepare
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text36
  9134  000F30                     __ptext36:
  9135                           	opt stack 0
  9136  000F30                     __display_failed:
  9137                           	opt stack 24
  9138                           
  9139                           ;display.c: 368: uint8_t cntr;;display.c: 369: uint8_t start;;display.c: 370: cntr = 0;
  9140                           
  9141                           ;incstack = 0
  9142  000F30  0E00               	movlw	0
  9143  000F32  6E25               	movwf	__display_failed@cntr,c
  9144                           
  9145                           ;display.c: 371: while(failed_line1[cntr])
  9146  000F34  D017               	goto	l1500
  9147  000F36                     
  9148                           ;display.c: 372: display_content[0][cntr] = failed_line1[cntr++];
  9149  000F36  5025               	movf	__display_failed@cntr,w,c
  9150  000F38  0D01               	mullw	1
  9151  000F3A  0EE9               	movlw	low _failed_line1
  9152  000F3C  24F3               	addwf	prodl,w,c
  9153  000F3E  6EF6               	movwf	tblptrl,c
  9154  000F40  0E8D               	movlw	high _failed_line1
  9155  000F42  20F4               	addwfc	prodh,w,c
  9156  000F44  6EF7               	movwf	tblptrh,c
  9157  000F46                     	if	1	;There are 3 active tblptr bytes
  9158  000F46  6AF8               	clrf	tblptru,c
  9159  000F48  0E00               	movlw	low (__mediumconst shr (0+16))
  9160  000F4A  22F8               	addwfc	tblptru,f,c
  9161  000F4C                     	endif
  9162  000F4C  5025               	movf	__display_failed@cntr,w,c
  9163  000F4E  0D01               	mullw	1
  9164  000F50  0E6E               	movlw	low _display_content
  9165  000F52  24F3               	addwf	prodl,w,c
  9166  000F54  6ED9               	movwf	fsr2l,c
  9167  000F56  0E01               	movlw	high _display_content
  9168  000F58  20F4               	addwfc	prodh,w,c
  9169  000F5A  6EDA               	movwf	fsr2h,c
  9170  000F5C  0008               	tblrd		*
  9171  000F5E  CFF5 FFDF          	movff	tablat,indf2
  9172  000F62  2A25               	incf	__display_failed@cntr,f,c
  9173  000F64                     l1500:
  9174  000F64  5025               	movf	__display_failed@cntr,w,c
  9175  000F66  0D01               	mullw	1
  9176  000F68  0EE9               	movlw	low _failed_line1
  9177  000F6A  24F3               	addwf	prodl,w,c
  9178  000F6C  6EF6               	movwf	tblptrl,c
  9179  000F6E  0E8D               	movlw	high _failed_line1
  9180  000F70  20F4               	addwfc	prodh,w,c
  9181  000F72  6EF7               	movwf	tblptrh,c
  9182  000F74                     	if	1	;There are 3 active tblptr bytes
  9183  000F74  6AF8               	clrf	tblptru,c
  9184  000F76  0E00               	movlw	low (__mediumconst shr (0+16))
  9185  000F78  22F8               	addwfc	tblptru,f,c
  9186  000F7A                     	endif
  9187  000F7A  0008               	tblrd		*
  9188  000F7C  50F5               	movf	tablat,w,c
  9189  000F7E  0900               	iorlw	0
  9190  000F80  A4D8               	btfss	status,2,c
  9191  000F82  D7D9               	goto	l1501
  9192                           
  9193                           ;display.c: 373: cntr = 0;
  9194  000F84  0E00               	movlw	0
  9195  000F86  6E25               	movwf	__display_failed@cntr,c
  9196                           
  9197                           ;display.c: 374: while(failed_line2[cntr])
  9198  000F88  D017               	goto	l1503
  9199  000F8A                     
  9200                           ;display.c: 375: display_content[1][cntr] = failed_line2[cntr++];
  9201  000F8A  5025               	movf	__display_failed@cntr,w,c
  9202  000F8C  0D01               	mullw	1
  9203  000F8E  0E42               	movlw	low _failed_line2
  9204  000F90  24F3               	addwf	prodl,w,c
  9205  000F92  6EF6               	movwf	tblptrl,c
  9206  000F94  0E8D               	movlw	high _failed_line2
  9207  000F96  20F4               	addwfc	prodh,w,c
  9208  000F98  6EF7               	movwf	tblptrh,c
  9209  000F9A                     	if	1	;There are 3 active tblptr bytes
  9210  000F9A  6AF8               	clrf	tblptru,c
  9211  000F9C  0E00               	movlw	low (__mediumconst shr (0+16))
  9212  000F9E  22F8               	addwfc	tblptru,f,c
  9213  000FA0                     	endif
  9214  000FA0  5025               	movf	__display_failed@cntr,w,c
  9215  000FA2  0D01               	mullw	1
  9216  000FA4  0E82               	movlw	low (_display_content+20)
  9217  000FA6  24F3               	addwf	prodl,w,c
  9218  000FA8  6ED9               	movwf	fsr2l,c
  9219  000FAA  0E01               	movlw	high (_display_content+20)
  9220  000FAC  20F4               	addwfc	prodh,w,c
  9221  000FAE  6EDA               	movwf	fsr2h,c
  9222  000FB0  0008               	tblrd		*
  9223  000FB2  CFF5 FFDF          	movff	tablat,indf2
  9224  000FB6  2A25               	incf	__display_failed@cntr,f,c
  9225  000FB8                     l1503:
  9226  000FB8  5025               	movf	__display_failed@cntr,w,c
  9227  000FBA  0D01               	mullw	1
  9228  000FBC  0E42               	movlw	low _failed_line2
  9229  000FBE  24F3               	addwf	prodl,w,c
  9230  000FC0  6EF6               	movwf	tblptrl,c
  9231  000FC2  0E8D               	movlw	high _failed_line2
  9232  000FC4  20F4               	addwfc	prodh,w,c
  9233  000FC6  6EF7               	movwf	tblptrh,c
  9234  000FC8                     	if	1	;There are 3 active tblptr bytes
  9235  000FC8  6AF8               	clrf	tblptru,c
  9236  000FCA  0E00               	movlw	low (__mediumconst shr (0+16))
  9237  000FCC  22F8               	addwfc	tblptru,f,c
  9238  000FCE                     	endif
  9239  000FCE  0008               	tblrd		*
  9240  000FD0  50F5               	movf	tablat,w,c
  9241  000FD2  0900               	iorlw	0
  9242  000FD4  A4D8               	btfss	status,2,c
  9243  000FD6  D7D9               	goto	l1504
  9244                           
  9245                           ;display.c: 377: cntr = 0;
  9246  000FD8  0E00               	movlw	0
  9247  000FDA  6E25               	movwf	__display_failed@cntr,c
  9248                           
  9249                           ;display.c: 378: switch(bootloader_get_error())
  9250  000FDC  D0D6               	goto	l1506
  9251  000FDE                     
  9252                           ;display.c: 382: display_content[2][cntr] = failed_line3_startCode[cntr++];
  9253  000FDE  5025               	movf	__display_failed@cntr,w,c
  9254  000FE0  0D01               	mullw	1
  9255  000FE2  0E0A               	movlw	low _failed_line3_startCode
  9256  000FE4  24F3               	addwf	prodl,w,c
  9257  000FE6  6EF6               	movwf	tblptrl,c
  9258  000FE8  0E8D               	movlw	high _failed_line3_startCode
  9259  000FEA  20F4               	addwfc	prodh,w,c
  9260  000FEC  6EF7               	movwf	tblptrh,c
  9261  000FEE                     	if	1	;There are 3 active tblptr bytes
  9262  000FEE  6AF8               	clrf	tblptru,c
  9263  000FF0  0E00               	movlw	low (__mediumconst shr (0+16))
  9264  000FF2  22F8               	addwfc	tblptru,f,c
  9265  000FF4                     	endif
  9266  000FF4  5025               	movf	__display_failed@cntr,w,c
  9267  000FF6  0D01               	mullw	1
  9268  000FF8  0E96               	movlw	low (_display_content+40)
  9269  000FFA  24F3               	addwf	prodl,w,c
  9270  000FFC  6ED9               	movwf	fsr2l,c
  9271  000FFE  0E01               	movlw	high (_display_content+40)
  9272  001000  20F4               	addwfc	prodh,w,c
  9273  001002  6EDA               	movwf	fsr2h,c
  9274  001004  0008               	tblrd		*
  9275  001006  CFF5 FFDF          	movff	tablat,indf2
  9276  00100A  2A25               	incf	__display_failed@cntr,f,c
  9277  00100C  5025               	movf	__display_failed@cntr,w,c
  9278  00100E  0D01               	mullw	1
  9279  001010  0E0A               	movlw	low _failed_line3_startCode
  9280  001012  24F3               	addwf	prodl,w,c
  9281  001014  6EF6               	movwf	tblptrl,c
  9282  001016  0E8D               	movlw	high _failed_line3_startCode
  9283  001018  20F4               	addwfc	prodh,w,c
  9284  00101A  6EF7               	movwf	tblptrh,c
  9285  00101C                     	if	1	;There are 3 active tblptr bytes
  9286  00101C  6AF8               	clrf	tblptru,c
  9287  00101E  0E00               	movlw	low (__mediumconst shr (0+16))
  9288  001020  22F8               	addwfc	tblptru,f,c
  9289  001022                     	endif
  9290  001022  0008               	tblrd		*
  9291  001024  50F5               	movf	tablat,w,c
  9292  001026  0900               	iorlw	0
  9293  001028  B4D8               	btfsc	status,2,c
  9294  00102A  D0C0               	goto	l1511
  9295  00102C  D7D8               	goto	l1509
  9296  00102E                     
  9297                           ;display.c: 387: display_content[2][cntr] = failed_line3_checksum[cntr++];
  9298  00102E  5025               	movf	__display_failed@cntr,w,c
  9299  001030  0D01               	mullw	1
  9300  001032  0E29               	movlw	low _failed_line3_checksum
  9301  001034  24F3               	addwf	prodl,w,c
  9302  001036  6EF6               	movwf	tblptrl,c
  9303  001038  0E8E               	movlw	high _failed_line3_checksum
  9304  00103A  20F4               	addwfc	prodh,w,c
  9305  00103C  6EF7               	movwf	tblptrh,c
  9306  00103E                     	if	1	;There are 3 active tblptr bytes
  9307  00103E  6AF8               	clrf	tblptru,c
  9308  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  9309  001042  22F8               	addwfc	tblptru,f,c
  9310  001044                     	endif
  9311  001044  5025               	movf	__display_failed@cntr,w,c
  9312  001046  0D01               	mullw	1
  9313  001048  0E96               	movlw	low (_display_content+40)
  9314  00104A  24F3               	addwf	prodl,w,c
  9315  00104C  6ED9               	movwf	fsr2l,c
  9316  00104E  0E01               	movlw	high (_display_content+40)
  9317  001050  20F4               	addwfc	prodh,w,c
  9318  001052  6EDA               	movwf	fsr2h,c
  9319  001054  0008               	tblrd		*
  9320  001056  CFF5 FFDF          	movff	tablat,indf2
  9321  00105A  2A25               	incf	__display_failed@cntr,f,c
  9322  00105C  5025               	movf	__display_failed@cntr,w,c
  9323  00105E  0D01               	mullw	1
  9324  001060  0E29               	movlw	low _failed_line3_checksum
  9325  001062  24F3               	addwf	prodl,w,c
  9326  001064  6EF6               	movwf	tblptrl,c
  9327  001066  0E8E               	movlw	high _failed_line3_checksum
  9328  001068  20F4               	addwfc	prodh,w,c
  9329  00106A  6EF7               	movwf	tblptrh,c
  9330  00106C                     	if	1	;There are 3 active tblptr bytes
  9331  00106C  6AF8               	clrf	tblptru,c
  9332  00106E  0E00               	movlw	low (__mediumconst shr (0+16))
  9333  001070  22F8               	addwfc	tblptru,f,c
  9334  001072                     	endif
  9335  001072  0008               	tblrd		*
  9336  001074  50F5               	movf	tablat,w,c
  9337  001076  0900               	iorlw	0
  9338  001078  B4D8               	btfsc	status,2,c
  9339  00107A  D098               	goto	l1511
  9340  00107C  D7D8               	goto	l1514
  9341  00107E                     
  9342                           ;display.c: 394: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
  9343  00107E  5025               	movf	__display_failed@cntr,w,c
  9344  001080  0D01               	mullw	1
  9345  001082  0E38               	movlw	low _failed_line3_noNextRecord
  9346  001084  24F3               	addwf	prodl,w,c
  9347  001086  6EF6               	movwf	tblptrl,c
  9348  001088  0E8E               	movlw	high _failed_line3_noNextRecord
  9349  00108A  20F4               	addwfc	prodh,w,c
  9350  00108C  6EF7               	movwf	tblptrh,c
  9351  00108E                     	if	1	;There are 3 active tblptr bytes
  9352  00108E  6AF8               	clrf	tblptru,c
  9353  001090  0E00               	movlw	low (__mediumconst shr (0+16))
  9354  001092  22F8               	addwfc	tblptru,f,c
  9355  001094                     	endif
  9356  001094  5025               	movf	__display_failed@cntr,w,c
  9357  001096  0D01               	mullw	1
  9358  001098  0E96               	movlw	low (_display_content+40)
  9359  00109A  24F3               	addwf	prodl,w,c
  9360  00109C  6ED9               	movwf	fsr2l,c
  9361  00109E  0E01               	movlw	high (_display_content+40)
  9362  0010A0  20F4               	addwfc	prodh,w,c
  9363  0010A2  6EDA               	movwf	fsr2h,c
  9364  0010A4  0008               	tblrd		*
  9365  0010A6  CFF5 FFDF          	movff	tablat,indf2
  9366  0010AA  2A25               	incf	__display_failed@cntr,f,c
  9367  0010AC  5025               	movf	__display_failed@cntr,w,c
  9368  0010AE  0D01               	mullw	1
  9369  0010B0  0E38               	movlw	low _failed_line3_noNextRecord
  9370  0010B2  24F3               	addwf	prodl,w,c
  9371  0010B4  6EF6               	movwf	tblptrl,c
  9372  0010B6  0E8E               	movlw	high _failed_line3_noNextRecord
  9373  0010B8  20F4               	addwfc	prodh,w,c
  9374  0010BA  6EF7               	movwf	tblptrh,c
  9375  0010BC                     	if	1	;There are 3 active tblptr bytes
  9376  0010BC  6AF8               	clrf	tblptru,c
  9377  0010BE  0E00               	movlw	low (__mediumconst shr (0+16))
  9378  0010C0  22F8               	addwfc	tblptru,f,c
  9379  0010C2                     	endif
  9380  0010C2  0008               	tblrd		*
  9381  0010C4  50F5               	movf	tablat,w,c
  9382  0010C6  0900               	iorlw	0
  9383  0010C8  B4D8               	btfsc	status,2,c
  9384  0010CA  D070               	goto	l1511
  9385  0010CC  D7D8               	goto	l1518
  9386  0010CE                     
  9387                           ;display.c: 399: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
  9388  0010CE  5025               	movf	__display_failed@cntr,w,c
  9389  0010D0  0D01               	mullw	1
  9390  0010D2  0E47               	movlw	low _failed_line3_dataTooLong
  9391  0010D4  24F3               	addwf	prodl,w,c
  9392  0010D6  6EF6               	movwf	tblptrl,c
  9393  0010D8  0E8E               	movlw	high _failed_line3_dataTooLong
  9394  0010DA  20F4               	addwfc	prodh,w,c
  9395  0010DC  6EF7               	movwf	tblptrh,c
  9396  0010DE                     	if	1	;There are 3 active tblptr bytes
  9397  0010DE  6AF8               	clrf	tblptru,c
  9398  0010E0  0E00               	movlw	low (__mediumconst shr (0+16))
  9399  0010E2  22F8               	addwfc	tblptru,f,c
  9400  0010E4                     	endif
  9401  0010E4  5025               	movf	__display_failed@cntr,w,c
  9402  0010E6  0D01               	mullw	1
  9403  0010E8  0E96               	movlw	low (_display_content+40)
  9404  0010EA  24F3               	addwf	prodl,w,c
  9405  0010EC  6ED9               	movwf	fsr2l,c
  9406  0010EE  0E01               	movlw	high (_display_content+40)
  9407  0010F0  20F4               	addwfc	prodh,w,c
  9408  0010F2  6EDA               	movwf	fsr2h,c
  9409  0010F4  0008               	tblrd		*
  9410  0010F6  CFF5 FFDF          	movff	tablat,indf2
  9411  0010FA  2A25               	incf	__display_failed@cntr,f,c
  9412  0010FC  5025               	movf	__display_failed@cntr,w,c
  9413  0010FE  0D01               	mullw	1
  9414  001100  0E47               	movlw	low _failed_line3_dataTooLong
  9415  001102  24F3               	addwf	prodl,w,c
  9416  001104  6EF6               	movwf	tblptrl,c
  9417  001106  0E8E               	movlw	high _failed_line3_dataTooLong
  9418  001108  20F4               	addwfc	prodh,w,c
  9419  00110A  6EF7               	movwf	tblptrh,c
  9420  00110C                     	if	1	;There are 3 active tblptr bytes
  9421  00110C  6AF8               	clrf	tblptru,c
  9422  00110E  0E00               	movlw	low (__mediumconst shr (0+16))
  9423  001110  22F8               	addwfc	tblptru,f,c
  9424  001112                     	endif
  9425  001112  0008               	tblrd		*
  9426  001114  50F5               	movf	tablat,w,c
  9427  001116  0900               	iorlw	0
  9428  001118  B4D8               	btfsc	status,2,c
  9429  00111A  D048               	goto	l1511
  9430  00111C  D7D8               	goto	l1522
  9431  00111E                     
  9432                           ;display.c: 404: display_content[2][cntr] = failed_line3_addressRange[cntr++];
  9433  00111E  5025               	movf	__display_failed@cntr,w,c
  9434  001120  0D01               	mullw	1
  9435  001122  0EE2               	movlw	low _failed_line3_addressRange
  9436  001124  24F3               	addwf	prodl,w,c
  9437  001126  6EF6               	movwf	tblptrl,c
  9438  001128  0E8C               	movlw	high _failed_line3_addressRange
  9439  00112A  20F4               	addwfc	prodh,w,c
  9440  00112C  6EF7               	movwf	tblptrh,c
  9441  00112E                     	if	1	;There are 3 active tblptr bytes
  9442  00112E  6AF8               	clrf	tblptru,c
  9443  001130  0E00               	movlw	low (__mediumconst shr (0+16))
  9444  001132  22F8               	addwfc	tblptru,f,c
  9445  001134                     	endif
  9446  001134  5025               	movf	__display_failed@cntr,w,c
  9447  001136  0D01               	mullw	1
  9448  001138  0E96               	movlw	low (_display_content+40)
  9449  00113A  24F3               	addwf	prodl,w,c
  9450  00113C  6ED9               	movwf	fsr2l,c
  9451  00113E  0E01               	movlw	high (_display_content+40)
  9452  001140  20F4               	addwfc	prodh,w,c
  9453  001142  6EDA               	movwf	fsr2h,c
  9454  001144  0008               	tblrd		*
  9455  001146  CFF5 FFDF          	movff	tablat,indf2
  9456  00114A  2A25               	incf	__display_failed@cntr,f,c
  9457  00114C  5025               	movf	__display_failed@cntr,w,c
  9458  00114E  0D01               	mullw	1
  9459  001150  0EE2               	movlw	low _failed_line3_addressRange
  9460  001152  24F3               	addwf	prodl,w,c
  9461  001154  6EF6               	movwf	tblptrl,c
  9462  001156  0E8C               	movlw	high _failed_line3_addressRange
  9463  001158  20F4               	addwfc	prodh,w,c
  9464  00115A  6EF7               	movwf	tblptrh,c
  9465  00115C                     	if	1	;There are 3 active tblptr bytes
  9466  00115C  6AF8               	clrf	tblptru,c
  9467  00115E  0E00               	movlw	low (__mediumconst shr (0+16))
  9468  001160  22F8               	addwfc	tblptru,f,c
  9469  001162                     	endif
  9470  001162  0008               	tblrd		*
  9471  001164  50F5               	movf	tablat,w,c
  9472  001166  0900               	iorlw	0
  9473  001168  A4D8               	btfss	status,2,c
  9474  00116A  D7D9               	goto	l1526
  9475                           
  9476                           ;display.c: 405: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
  9477  00116C  ECAB  F03D         	call	_bootloader_get_rec_address	;wreg free
  9478  001170  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
  9479  001174  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
  9480  001178  6A21               	clrf	__display_itoa_u32@value+2,c
  9481  00117A  6A22               	clrf	__display_itoa_u32@value+3,c
  9482  00117C  0EB8               	movlw	low (_display_content+74)
  9483  00117E  6E23               	movwf	__display_itoa_u32@text,c
  9484  001180  0E01               	movlw	high (_display_content+74)
  9485  001182  6E24               	movwf	__display_itoa_u32@text+1,c
  9486  001184  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9487                           
  9488                           ;display.c: 408: }
  9489                           
  9490                           ;display.c: 406: break;
  9491  001188  D011               	goto	l1511
  9492  00118A                     l1506:
  9493  00118A  ECDC  F03D         	call	_bootloader_get_error	;wreg free
  9494                           
  9495                           ; Switch size 1, requested type "space"
  9496                           ; Number of cases is 5, Range of values is 11 to 15
  9497                           ; switch strategies available:
  9498                           ; Name         Instructions Cycles
  9499                           ; simple_byte           16     9 (average)
  9500                           ;	Chosen strategy is simple_byte
  9501  00118E  0A0B               	xorlw	11	; case 11
  9502  001190  B4D8               	btfsc	status,2,c
  9503  001192  D7DC               	goto	l1525
  9504  001194  0A07               	xorlw	7	; case 12
  9505  001196  B4D8               	btfsc	status,2,c
  9506  001198  D7B1               	goto	l1521
  9507  00119A  0A01               	xorlw	1	; case 13
  9508  00119C  B4D8               	btfsc	status,2,c
  9509  00119E  D786               	goto	l1517
  9510  0011A0  0A03               	xorlw	3	; case 14
  9511  0011A2  B4D8               	btfsc	status,2,c
  9512  0011A4  D75B               	goto	l1513
  9513  0011A6  0A01               	xorlw	1	; case 15
  9514  0011A8  B4D8               	btfsc	status,2,c
  9515  0011AA  D730               	goto	l1508
  9516  0011AC                     l1511:
  9517                           
  9518                           ;display.c: 410: cntr = 0;
  9519  0011AC  0E00               	movlw	0
  9520  0011AE  6E25               	movwf	__display_failed@cntr,c
  9521                           
  9522                           ;display.c: 411: while(failed_line4[cntr])
  9523  0011B0  D017               	goto	l1528
  9524  0011B2                     
  9525                           ;display.c: 412: display_content[3][cntr] = failed_line4[cntr++];
  9526  0011B2  5025               	movf	__display_failed@cntr,w,c
  9527  0011B4  0D01               	mullw	1
  9528  0011B6  0E6B               	movlw	low _failed_line4
  9529  0011B8  24F3               	addwf	prodl,w,c
  9530  0011BA  6EF6               	movwf	tblptrl,c
  9531  0011BC  0E8E               	movlw	high _failed_line4
  9532  0011BE  20F4               	addwfc	prodh,w,c
  9533  0011C0  6EF7               	movwf	tblptrh,c
  9534  0011C2                     	if	1	;There are 3 active tblptr bytes
  9535  0011C2  6AF8               	clrf	tblptru,c
  9536  0011C4  0E00               	movlw	low (__mediumconst shr (0+16))
  9537  0011C6  22F8               	addwfc	tblptru,f,c
  9538  0011C8                     	endif
  9539  0011C8  5025               	movf	__display_failed@cntr,w,c
  9540  0011CA  0D01               	mullw	1
  9541  0011CC  0EAA               	movlw	low (_display_content+60)
  9542  0011CE  24F3               	addwf	prodl,w,c
  9543  0011D0  6ED9               	movwf	fsr2l,c
  9544  0011D2  0E01               	movlw	high (_display_content+60)
  9545  0011D4  20F4               	addwfc	prodh,w,c
  9546  0011D6  6EDA               	movwf	fsr2h,c
  9547  0011D8  0008               	tblrd		*
  9548  0011DA  CFF5 FFDF          	movff	tablat,indf2
  9549  0011DE  2A25               	incf	__display_failed@cntr,f,c
  9550  0011E0                     l1528:
  9551  0011E0  5025               	movf	__display_failed@cntr,w,c
  9552  0011E2  0D01               	mullw	1
  9553  0011E4  0E6B               	movlw	low _failed_line4
  9554  0011E6  24F3               	addwf	prodl,w,c
  9555  0011E8  6EF6               	movwf	tblptrl,c
  9556  0011EA  0E8E               	movlw	high _failed_line4
  9557  0011EC  20F4               	addwfc	prodh,w,c
  9558  0011EE  6EF7               	movwf	tblptrh,c
  9559  0011F0                     	if	1	;There are 3 active tblptr bytes
  9560  0011F0  6AF8               	clrf	tblptru,c
  9561  0011F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9562  0011F4  22F8               	addwfc	tblptru,f,c
  9563  0011F6                     	endif
  9564  0011F6  0008               	tblrd		*
  9565  0011F8  50F5               	movf	tablat,w,c
  9566  0011FA  0900               	iorlw	0
  9567  0011FC  A4D8               	btfss	status,2,c
  9568  0011FE  D7D9               	goto	l1529
  9569                           
  9570                           ;display.c: 413: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
  9571  001200  ECB5  F03D         	call	_bootloader_get_entries	;wreg free
  9572  001204  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9573  001208  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9574  00120C  6A1B               	clrf	__display_itoa_u16@value+2,c
  9575  00120E  6A1C               	clrf	__display_itoa_u16@value+3,c
  9576  001210  5025               	movf	__display_failed@cntr,w,c
  9577  001212  0D01               	mullw	1
  9578  001214  0EAA               	movlw	low (_display_content+60)
  9579  001216  24F3               	addwf	prodl,w,c
  9580  001218  6E1D               	movwf	__display_itoa_u16@text,c
  9581  00121A  0E01               	movlw	high (_display_content+60)
  9582  00121C  20F4               	addwfc	prodh,w,c
  9583  00121E  6E1E               	movwf	__display_itoa_u16@text+1,c
  9584  001220  EC50  F027         	call	__display_itoa_u16	;wreg free
  9585  001224  0012               	return		;funcret
  9586  001226                     __end_of__display_failed:
  9587                           	opt stack 0
  9588                           tblptru	equ	0xFF8
  9589                           tblptrh	equ	0xFF7
  9590                           tblptrl	equ	0xFF6
  9591                           tablat	equ	0xFF5
  9592                           prodh	equ	0xFF4
  9593                           prodl	equ	0xFF3
  9594                           intcon	equ	0xFF2
  9595                           intcon2	equ	0xFF1
  9596                           intcon3	equ	0xFF0
  9597                           postinc0	equ	0xFEE
  9598                           wreg	equ	0xFE8
  9599                           postdec1	equ	0xFE5
  9600                           plusw1	equ	0xFE3
  9601                           fsr1h	equ	0xFE2
  9602                           fsr1l	equ	0xFE1
  9603                           indf2	equ	0xFDF
  9604                           postinc2	equ	0xFDE
  9605                           plusw2	equ	0xFDB
  9606                           fsr2h	equ	0xFDA
  9607                           fsr2l	equ	0xFD9
  9608                           status	equ	0xFD8
  9609                           
  9610 ;; *************** function __display_itoa_u32 *****************
  9611 ;; Defined at:
  9612 ;;		line 108 in file "display.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  value           4   30[COMRAM] unsigned long 
  9615 ;;  text            2   34[COMRAM] PTR unsigned char 
  9616 ;;		 -> display_content(80), 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      unsigned char 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9628 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;Total ram usage:        6 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:    4
  9635 ;; This function calls:
  9636 ;;		___lldiv
  9637 ;;		___llmod
  9638 ;;		__display_itoa_u16
  9639 ;;		_itoa
  9640 ;; This function is called by:
  9641 ;;		__display_found
  9642 ;;		__display_failed
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text37
  9647  00085A                     __ptext37:
  9648                           	opt stack 0
  9649  00085A                     __display_itoa_u32:
  9650                           	opt stack 24
  9651                           
  9652                           ;display.c: 111: if(value<=0x7FFF)
  9653                           
  9654                           ;incstack = 0
  9655  00085A  5022               	movf	__display_itoa_u32@value+3,w,c
  9656  00085C  1021               	iorwf	__display_itoa_u32@value+2,w,c
  9657  00085E  E111               	bnz	l12145
  9658  000860  0E80               	movlw	128
  9659  000862  5C20               	subwf	__display_itoa_u32@value+1,w,c
  9660  000864  B0D8               	btfsc	status,0,c
  9661  000866  D00D               	goto	l1387
  9662                           
  9663                           ;display.c: 112: {;display.c: 113: return _display_itoa_u16((uint16_t) value, text);
  9664  000868  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
  9665  00086C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
  9666  000870  6A1B               	clrf	__display_itoa_u16@value+2,c
  9667  000872  6A1C               	clrf	__display_itoa_u16@value+3,c
  9668  000874  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
  9669  000878  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
  9670  00087C  EC50  F027         	call	__display_itoa_u16	;wreg free
  9671  000880  0012               	return	
  9672  000882                     l1387:
  9673  000882                     l12145:
  9674                           
  9675                           ;display.c: 114: };display.c: 117: if(value>100000000)
  9676  000882  041F               	decf	__display_itoa_u32@value,w,c
  9677  000884  0EE1               	movlw	225
  9678  000886  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9679  000888  0EF5               	movlw	245
  9680  00088A  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9681  00088C  0E05               	movlw	5
  9682  00088E  5822               	subwfb	__display_itoa_u32@value+3,w,c
  9683  000890  A0D8               	btfss	status,0,c
  9684  000892  D04C               	goto	l1389
  9685                           
  9686                           ;display.c: 118: {;display.c: 119: itoa(text, (uint16_t)(value/10000), 10);
  9687  000894  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9688  000898  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9689  00089C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9690  0008A0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9691  0008A4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9692  0008A8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9693  0008AC  0E10               	movlw	16
  9694  0008AE  6E05               	movwf	___lldiv@divisor,c
  9695  0008B0  0E27               	movlw	39
  9696  0008B2  6E06               	movwf	___lldiv@divisor+1,c
  9697  0008B4  0E00               	movlw	0
  9698  0008B6  6E07               	movwf	___lldiv@divisor+2,c
  9699  0008B8  0E00               	movlw	0
  9700  0008BA  6E08               	movwf	___lldiv@divisor+3,c
  9701  0008BC  EC8A  F02F         	call	___lldiv	;wreg free
  9702  0008C0  C001  F013         	movff	?___lldiv,itoa@val
  9703  0008C4  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9704  0008C8  0E00               	movlw	0
  9705  0008CA  6E16               	movwf	itoa@base+1,c
  9706  0008CC  0E0A               	movlw	10
  9707  0008CE  6E15               	movwf	itoa@base,c
  9708  0008D0  EC2D  F039         	call	_itoa	;wreg free
  9709                           
  9710                           ;display.c: 120: itoa(text+5, (uint16_t)(value%10000), 10);
  9711  0008D4  0E05               	movlw	5
  9712  0008D6  2423               	addwf	__display_itoa_u32@text,w,c
  9713  0008D8  6E11               	movwf	itoa@buf,c
  9714  0008DA  0E00               	movlw	0
  9715  0008DC  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9716  0008DE  6E12               	movwf	itoa@buf+1,c
  9717  0008E0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9718  0008E4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9719  0008E8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9720  0008EC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9721  0008F0  0E10               	movlw	16
  9722  0008F2  6E05               	movwf	___llmod@divisor,c
  9723  0008F4  0E27               	movlw	39
  9724  0008F6  6E06               	movwf	___llmod@divisor+1,c
  9725  0008F8  0E00               	movlw	0
  9726  0008FA  6E07               	movwf	___llmod@divisor+2,c
  9727  0008FC  0E00               	movlw	0
  9728  0008FE  6E08               	movwf	___llmod@divisor+3,c
  9729  000900  EC46  F034         	call	___llmod	;wreg free
  9730  000904  C001  F013         	movff	?___llmod,itoa@val
  9731  000908  C002  F014         	movff	?___llmod+1,itoa@val+1
  9732  00090C  0E00               	movlw	0
  9733  00090E  6E16               	movwf	itoa@base+1,c
  9734  000910  0E0A               	movlw	10
  9735  000912  6E15               	movwf	itoa@base,c
  9736  000914  EC2D  F039         	call	_itoa	;wreg free
  9737                           
  9738                           ;display.c: 121: *(text+9) = ' ';
  9739  000918  EE20 F009          	lfsr	2,9
  9740  00091C  5023               	movf	__display_itoa_u32@text,w,c
  9741  00091E  26D9               	addwf	fsr2l,f,c
  9742  000920  5024               	movf	__display_itoa_u32@text+1,w,c
  9743  000922  22DA               	addwfc	fsr2h,f,c
  9744  000924  0E20               	movlw	32
  9745  000926  6EDF               	movwf	indf2,c
  9746                           
  9747                           ;display.c: 122: return 9;
  9748  000928  0E09               	movlw	9
  9749                           
  9750                           ;display.c: 123: }
  9751  00092A  0012               	return	
  9752  00092C                     l1389:
  9753                           
  9754                           ;display.c: 124: else if(value>10000000)
  9755  00092C  5022               	movf	__display_itoa_u32@value+3,w,c
  9756  00092E  E108               	bnz	u9290
  9757  000930  0E81               	movlw	129
  9758  000932  5C1F               	subwf	__display_itoa_u32@value,w,c
  9759  000934  0E96               	movlw	150
  9760  000936  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9761  000938  0E98               	movlw	152
  9762  00093A  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9763  00093C  A0D8               	btfss	status,0,c
  9764  00093E  D04C               	goto	l1391
  9765  000940                     u9290:
  9766                           
  9767                           ;display.c: 125: {;display.c: 126: itoa(text, (uint16_t)(value/10000), 10);
  9768  000940  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9769  000944  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9770  000948  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9771  00094C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9772  000950  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9773  000954  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9774  000958  0E10               	movlw	16
  9775  00095A  6E05               	movwf	___lldiv@divisor,c
  9776  00095C  0E27               	movlw	39
  9777  00095E  6E06               	movwf	___lldiv@divisor+1,c
  9778  000960  0E00               	movlw	0
  9779  000962  6E07               	movwf	___lldiv@divisor+2,c
  9780  000964  0E00               	movlw	0
  9781  000966  6E08               	movwf	___lldiv@divisor+3,c
  9782  000968  EC8A  F02F         	call	___lldiv	;wreg free
  9783  00096C  C001  F013         	movff	?___lldiv,itoa@val
  9784  000970  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9785  000974  0E00               	movlw	0
  9786  000976  6E16               	movwf	itoa@base+1,c
  9787  000978  0E0A               	movlw	10
  9788  00097A  6E15               	movwf	itoa@base,c
  9789  00097C  EC2D  F039         	call	_itoa	;wreg free
  9790                           
  9791                           ;display.c: 127: itoa(text+4, (uint16_t)(value%10000), 10);
  9792  000980  0E04               	movlw	4
  9793  000982  2423               	addwf	__display_itoa_u32@text,w,c
  9794  000984  6E11               	movwf	itoa@buf,c
  9795  000986  0E00               	movlw	0
  9796  000988  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9797  00098A  6E12               	movwf	itoa@buf+1,c
  9798  00098C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9799  000990  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9800  000994  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9801  000998  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9802  00099C  0E10               	movlw	16
  9803  00099E  6E05               	movwf	___llmod@divisor,c
  9804  0009A0  0E27               	movlw	39
  9805  0009A2  6E06               	movwf	___llmod@divisor+1,c
  9806  0009A4  0E00               	movlw	0
  9807  0009A6  6E07               	movwf	___llmod@divisor+2,c
  9808  0009A8  0E00               	movlw	0
  9809  0009AA  6E08               	movwf	___llmod@divisor+3,c
  9810  0009AC  EC46  F034         	call	___llmod	;wreg free
  9811  0009B0  C001  F013         	movff	?___llmod,itoa@val
  9812  0009B4  C002  F014         	movff	?___llmod+1,itoa@val+1
  9813  0009B8  0E00               	movlw	0
  9814  0009BA  6E16               	movwf	itoa@base+1,c
  9815  0009BC  0E0A               	movlw	10
  9816  0009BE  6E15               	movwf	itoa@base,c
  9817  0009C0  EC2D  F039         	call	_itoa	;wreg free
  9818                           
  9819                           ;display.c: 128: *(text+8) = ' ';
  9820  0009C4  EE20 F008          	lfsr	2,8
  9821  0009C8  5023               	movf	__display_itoa_u32@text,w,c
  9822  0009CA  26D9               	addwf	fsr2l,f,c
  9823  0009CC  5024               	movf	__display_itoa_u32@text+1,w,c
  9824  0009CE  22DA               	addwfc	fsr2h,f,c
  9825  0009D0  0E20               	movlw	32
  9826  0009D2  6EDF               	movwf	indf2,c
  9827                           
  9828                           ;display.c: 129: return 8;
  9829  0009D4  0E08               	movlw	8
  9830                           
  9831                           ;display.c: 130: }
  9832  0009D6  0012               	return	
  9833  0009D8                     l1391:
  9834                           
  9835                           ;display.c: 131: else if(value>1000000)
  9836  0009D8  5022               	movf	__display_itoa_u32@value+3,w,c
  9837  0009DA  E108               	bnz	u9300
  9838  0009DC  0E41               	movlw	65
  9839  0009DE  5C1F               	subwf	__display_itoa_u32@value,w,c
  9840  0009E0  0E42               	movlw	66
  9841  0009E2  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9842  0009E4  0E0F               	movlw	15
  9843  0009E6  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9844  0009E8  A0D8               	btfss	status,0,c
  9845  0009EA  D04C               	goto	l1393
  9846  0009EC                     u9300:
  9847                           
  9848                           ;display.c: 132: {;display.c: 133: itoa(text, (uint16_t)(value/10000), 10);
  9849  0009EC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9850  0009F0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9851  0009F4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9852  0009F8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9853  0009FC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9854  000A00  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9855  000A04  0E10               	movlw	16
  9856  000A06  6E05               	movwf	___lldiv@divisor,c
  9857  000A08  0E27               	movlw	39
  9858  000A0A  6E06               	movwf	___lldiv@divisor+1,c
  9859  000A0C  0E00               	movlw	0
  9860  000A0E  6E07               	movwf	___lldiv@divisor+2,c
  9861  000A10  0E00               	movlw	0
  9862  000A12  6E08               	movwf	___lldiv@divisor+3,c
  9863  000A14  EC8A  F02F         	call	___lldiv	;wreg free
  9864  000A18  C001  F013         	movff	?___lldiv,itoa@val
  9865  000A1C  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9866  000A20  0E00               	movlw	0
  9867  000A22  6E16               	movwf	itoa@base+1,c
  9868  000A24  0E0A               	movlw	10
  9869  000A26  6E15               	movwf	itoa@base,c
  9870  000A28  EC2D  F039         	call	_itoa	;wreg free
  9871                           
  9872                           ;display.c: 134: itoa(text+3, (uint16_t)(value%10000), 10);
  9873  000A2C  0E03               	movlw	3
  9874  000A2E  2423               	addwf	__display_itoa_u32@text,w,c
  9875  000A30  6E11               	movwf	itoa@buf,c
  9876  000A32  0E00               	movlw	0
  9877  000A34  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9878  000A36  6E12               	movwf	itoa@buf+1,c
  9879  000A38  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9880  000A3C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9881  000A40  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9882  000A44  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9883  000A48  0E10               	movlw	16
  9884  000A4A  6E05               	movwf	___llmod@divisor,c
  9885  000A4C  0E27               	movlw	39
  9886  000A4E  6E06               	movwf	___llmod@divisor+1,c
  9887  000A50  0E00               	movlw	0
  9888  000A52  6E07               	movwf	___llmod@divisor+2,c
  9889  000A54  0E00               	movlw	0
  9890  000A56  6E08               	movwf	___llmod@divisor+3,c
  9891  000A58  EC46  F034         	call	___llmod	;wreg free
  9892  000A5C  C001  F013         	movff	?___llmod,itoa@val
  9893  000A60  C002  F014         	movff	?___llmod+1,itoa@val+1
  9894  000A64  0E00               	movlw	0
  9895  000A66  6E16               	movwf	itoa@base+1,c
  9896  000A68  0E0A               	movlw	10
  9897  000A6A  6E15               	movwf	itoa@base,c
  9898  000A6C  EC2D  F039         	call	_itoa	;wreg free
  9899                           
  9900                           ;display.c: 135: *(text+7) = ' ';
  9901  000A70  EE20 F007          	lfsr	2,7
  9902  000A74  5023               	movf	__display_itoa_u32@text,w,c
  9903  000A76  26D9               	addwf	fsr2l,f,c
  9904  000A78  5024               	movf	__display_itoa_u32@text+1,w,c
  9905  000A7A  22DA               	addwfc	fsr2h,f,c
  9906  000A7C  0E20               	movlw	32
  9907  000A7E  6EDF               	movwf	indf2,c
  9908                           
  9909                           ;display.c: 136: return 7;
  9910  000A80  0E07               	movlw	7
  9911                           
  9912                           ;display.c: 137: }
  9913  000A82  0012               	return	
  9914  000A84                     l1393:
  9915                           
  9916                           ;display.c: 138: else if(value>100000)
  9917  000A84  5022               	movf	__display_itoa_u32@value+3,w,c
  9918  000A86  E108               	bnz	u9310
  9919  000A88  0EA1               	movlw	161
  9920  000A8A  5C1F               	subwf	__display_itoa_u32@value,w,c
  9921  000A8C  0E86               	movlw	134
  9922  000A8E  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9923  000A90  0E01               	movlw	1
  9924  000A92  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9925  000A94  A0D8               	btfss	status,0,c
  9926  000A96  D04C               	goto	l1395
  9927  000A98                     u9310:
  9928                           
  9929                           ;display.c: 139: {;display.c: 140: itoa(text, (uint16_t)(value/10000), 10);
  9930  000A98  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9931  000A9C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9932  000AA0  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9933  000AA4  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9934  000AA8  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9935  000AAC  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9936  000AB0  0E10               	movlw	16
  9937  000AB2  6E05               	movwf	___lldiv@divisor,c
  9938  000AB4  0E27               	movlw	39
  9939  000AB6  6E06               	movwf	___lldiv@divisor+1,c
  9940  000AB8  0E00               	movlw	0
  9941  000ABA  6E07               	movwf	___lldiv@divisor+2,c
  9942  000ABC  0E00               	movlw	0
  9943  000ABE  6E08               	movwf	___lldiv@divisor+3,c
  9944  000AC0  EC8A  F02F         	call	___lldiv	;wreg free
  9945  000AC4  C001  F013         	movff	?___lldiv,itoa@val
  9946  000AC8  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9947  000ACC  0E00               	movlw	0
  9948  000ACE  6E16               	movwf	itoa@base+1,c
  9949  000AD0  0E0A               	movlw	10
  9950  000AD2  6E15               	movwf	itoa@base,c
  9951  000AD4  EC2D  F039         	call	_itoa	;wreg free
  9952                           
  9953                           ;display.c: 141: itoa(text+2, (uint16_t)(value%10000), 10);
  9954  000AD8  0E02               	movlw	2
  9955  000ADA  2423               	addwf	__display_itoa_u32@text,w,c
  9956  000ADC  6E11               	movwf	itoa@buf,c
  9957  000ADE  0E00               	movlw	0
  9958  000AE0  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9959  000AE2  6E12               	movwf	itoa@buf+1,c
  9960  000AE4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9961  000AE8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9962  000AEC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9963  000AF0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9964  000AF4  0E10               	movlw	16
  9965  000AF6  6E05               	movwf	___llmod@divisor,c
  9966  000AF8  0E27               	movlw	39
  9967  000AFA  6E06               	movwf	___llmod@divisor+1,c
  9968  000AFC  0E00               	movlw	0
  9969  000AFE  6E07               	movwf	___llmod@divisor+2,c
  9970  000B00  0E00               	movlw	0
  9971  000B02  6E08               	movwf	___llmod@divisor+3,c
  9972  000B04  EC46  F034         	call	___llmod	;wreg free
  9973  000B08  C001  F013         	movff	?___llmod,itoa@val
  9974  000B0C  C002  F014         	movff	?___llmod+1,itoa@val+1
  9975  000B10  0E00               	movlw	0
  9976  000B12  6E16               	movwf	itoa@base+1,c
  9977  000B14  0E0A               	movlw	10
  9978  000B16  6E15               	movwf	itoa@base,c
  9979  000B18  EC2D  F039         	call	_itoa	;wreg free
  9980                           
  9981                           ;display.c: 142: *(text+6) = ' ';
  9982  000B1C  EE20 F006          	lfsr	2,6
  9983  000B20  5023               	movf	__display_itoa_u32@text,w,c
  9984  000B22  26D9               	addwf	fsr2l,f,c
  9985  000B24  5024               	movf	__display_itoa_u32@text+1,w,c
  9986  000B26  22DA               	addwfc	fsr2h,f,c
  9987  000B28  0E20               	movlw	32
  9988  000B2A  6EDF               	movwf	indf2,c
  9989                           
  9990                           ;display.c: 143: return 6;
  9991  000B2C  0E06               	movlw	6
  9992                           
  9993                           ;display.c: 144: }
  9994  000B2E  0012               	return	
  9995  000B30                     l1395:
  9996                           
  9997                           ;display.c: 145: else;display.c: 146: {;display.c: 147: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
  9998  000B30  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9999  000B34  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10000  000B38  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10001  000B3C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10002  000B40  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10003  000B44  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10004  000B48  0E10               	movlw	16
 10005  000B4A  6E05               	movwf	___lldiv@divisor,c
 10006  000B4C  0E27               	movlw	39
 10007  000B4E  6E06               	movwf	___lldiv@divisor+1,c
 10008  000B50  0E00               	movlw	0
 10009  000B52  6E07               	movwf	___lldiv@divisor+2,c
 10010  000B54  0E00               	movlw	0
 10011  000B56  6E08               	movwf	___lldiv@divisor+3,c
 10012  000B58  EC8A  F02F         	call	___lldiv	;wreg free
 10013  000B5C  C001  F013         	movff	?___lldiv,itoa@val
 10014  000B60  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10015  000B64  0E00               	movlw	0
 10016  000B66  6E16               	movwf	itoa@base+1,c
 10017  000B68  0E0A               	movlw	10
 10018  000B6A  6E15               	movwf	itoa@base,c
 10019  000B6C  EC2D  F039         	call	_itoa	;wreg free
 10020                           
 10021                           ;display.c: 148: itoa(text+1, (uint16_t)(value%10000), 10);
 10022  000B70  0E01               	movlw	1
 10023  000B72  2423               	addwf	__display_itoa_u32@text,w,c
 10024  000B74  6E11               	movwf	itoa@buf,c
 10025  000B76  0E00               	movlw	0
 10026  000B78  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10027  000B7A  6E12               	movwf	itoa@buf+1,c
 10028  000B7C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10029  000B80  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10030  000B84  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10031  000B88  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10032  000B8C  0E10               	movlw	16
 10033  000B8E  6E05               	movwf	___llmod@divisor,c
 10034  000B90  0E27               	movlw	39
 10035  000B92  6E06               	movwf	___llmod@divisor+1,c
 10036  000B94  0E00               	movlw	0
 10037  000B96  6E07               	movwf	___llmod@divisor+2,c
 10038  000B98  0E00               	movlw	0
 10039  000B9A  6E08               	movwf	___llmod@divisor+3,c
 10040  000B9C  EC46  F034         	call	___llmod	;wreg free
 10041  000BA0  C001  F013         	movff	?___llmod,itoa@val
 10042  000BA4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10043  000BA8  0E00               	movlw	0
 10044  000BAA  6E16               	movwf	itoa@base+1,c
 10045  000BAC  0E0A               	movlw	10
 10046  000BAE  6E15               	movwf	itoa@base,c
 10047  000BB0  EC2D  F039         	call	_itoa	;wreg free
 10048                           
 10049                           ;display.c: 149: *(text+5) = ' ';
 10050  000BB4  EE20 F005          	lfsr	2,5
 10051  000BB8  5023               	movf	__display_itoa_u32@text,w,c
 10052  000BBA  26D9               	addwf	fsr2l,f,c
 10053  000BBC  5024               	movf	__display_itoa_u32@text+1,w,c
 10054  000BBE  22DA               	addwfc	fsr2h,f,c
 10055  000BC0  0E20               	movlw	32
 10056  000BC2  6EDF               	movwf	indf2,c
 10057                           
 10058                           ;display.c: 150: return 5;
 10059  000BC4  0E05               	movlw	5
 10060  000BC6  0012               	return	
 10061  000BC8                     __end_of__display_itoa_u32:
 10062                           	opt stack 0
 10063                           tblptru	equ	0xFF8
 10064                           tblptrh	equ	0xFF7
 10065                           tblptrl	equ	0xFF6
 10066                           tablat	equ	0xFF5
 10067                           prodh	equ	0xFF4
 10068                           prodl	equ	0xFF3
 10069                           intcon	equ	0xFF2
 10070                           intcon2	equ	0xFF1
 10071                           intcon3	equ	0xFF0
 10072                           postinc0	equ	0xFEE
 10073                           wreg	equ	0xFE8
 10074                           postdec1	equ	0xFE5
 10075                           plusw1	equ	0xFE3
 10076                           fsr1h	equ	0xFE2
 10077                           fsr1l	equ	0xFE1
 10078                           indf2	equ	0xFDF
 10079                           postinc2	equ	0xFDE
 10080                           plusw2	equ	0xFDB
 10081                           fsr2h	equ	0xFDA
 10082                           fsr2l	equ	0xFD9
 10083                           status	equ	0xFD8
 10084                           
 10085 ;; *************** function ___llmod *****************
 10086 ;; Defined at:
 10087 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  dividend        4    0[COMRAM] unsigned long 
 10090 ;;  divisor         4    4[COMRAM] unsigned long 
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;  counter         1    8[COMRAM] unsigned char 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  4    0[COMRAM] unsigned long 
 10095 ;; Registers used:
 10096 ;;		wreg, status,2, status,0
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;Total ram usage:        9 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		__display_itoa_u32
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text38
 10116  00688C                     __ptext38:
 10117                           	opt stack 0
 10118  00688C                     ___llmod:
 10119                           	opt stack 27
 10120                           
 10121                           ;incstack = 0
 10122  00688C  5005               	movf	___llmod@divisor,w,c
 10123  00688E  1006               	iorwf	___llmod@divisor+1,w,c
 10124  006890  1007               	iorwf	___llmod@divisor+2,w,c
 10125  006892  1008               	iorwf	___llmod@divisor+3,w,c
 10126  006894  B4D8               	btfsc	status,2,c
 10127  006896  D024               	goto	l3089
 10128  006898  0E01               	movlw	1
 10129  00689A  6E09               	movwf	___llmod@counter,c
 10130  00689C  D006               	goto	l3084
 10131  00689E  90D8               	bcf	status,0,c
 10132  0068A0  3605               	rlcf	___llmod@divisor,f,c
 10133  0068A2  3606               	rlcf	___llmod@divisor+1,f,c
 10134  0068A4  3607               	rlcf	___llmod@divisor+2,f,c
 10135  0068A6  3608               	rlcf	___llmod@divisor+3,f,c
 10136  0068A8  2A09               	incf	___llmod@counter,f,c
 10137  0068AA                     l3084:
 10138  0068AA  AE08               	btfss	___llmod@divisor+3,7,c
 10139  0068AC  D7F8               	goto	l3085
 10140  0068AE                     u9070:
 10141  0068AE  5005               	movf	___llmod@divisor,w,c
 10142  0068B0  5C01               	subwf	___llmod@dividend,w,c
 10143  0068B2  5006               	movf	___llmod@divisor+1,w,c
 10144  0068B4  5802               	subwfb	___llmod@dividend+1,w,c
 10145  0068B6  5007               	movf	___llmod@divisor+2,w,c
 10146  0068B8  5803               	subwfb	___llmod@dividend+2,w,c
 10147  0068BA  5008               	movf	___llmod@divisor+3,w,c
 10148  0068BC  5804               	subwfb	___llmod@dividend+3,w,c
 10149  0068BE  A0D8               	btfss	status,0,c
 10150  0068C0  D008               	goto	l3088
 10151  0068C2  5005               	movf	___llmod@divisor,w,c
 10152  0068C4  5E01               	subwf	___llmod@dividend,f,c
 10153  0068C6  5006               	movf	___llmod@divisor+1,w,c
 10154  0068C8  5A02               	subwfb	___llmod@dividend+1,f,c
 10155  0068CA  5007               	movf	___llmod@divisor+2,w,c
 10156  0068CC  5A03               	subwfb	___llmod@dividend+2,f,c
 10157  0068CE  5008               	movf	___llmod@divisor+3,w,c
 10158  0068D0  5A04               	subwfb	___llmod@dividend+3,f,c
 10159  0068D2                     l3088:
 10160  0068D2  90D8               	bcf	status,0,c
 10161  0068D4  3208               	rrcf	___llmod@divisor+3,f,c
 10162  0068D6  3207               	rrcf	___llmod@divisor+2,f,c
 10163  0068D8  3206               	rrcf	___llmod@divisor+1,f,c
 10164  0068DA  3205               	rrcf	___llmod@divisor,f,c
 10165  0068DC  2E09               	decfsz	___llmod@counter,f,c
 10166  0068DE  D7E7               	goto	u9070
 10167  0068E0                     l3089:
 10168  0068E0  C001  F001         	movff	___llmod@dividend,?___llmod
 10169  0068E4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10170  0068E8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10171  0068EC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10172  0068F0  0012               	return		;funcret
 10173  0068F2                     __end_of___llmod:
 10174                           	opt stack 0
 10175                           tblptru	equ	0xFF8
 10176                           tblptrh	equ	0xFF7
 10177                           tblptrl	equ	0xFF6
 10178                           tablat	equ	0xFF5
 10179                           prodh	equ	0xFF4
 10180                           prodl	equ	0xFF3
 10181                           intcon	equ	0xFF2
 10182                           intcon2	equ	0xFF1
 10183                           intcon3	equ	0xFF0
 10184                           postinc0	equ	0xFEE
 10185                           wreg	equ	0xFE8
 10186                           postdec1	equ	0xFE5
 10187                           plusw1	equ	0xFE3
 10188                           fsr1h	equ	0xFE2
 10189                           fsr1l	equ	0xFE1
 10190                           indf2	equ	0xFDF
 10191                           postinc2	equ	0xFDE
 10192                           plusw2	equ	0xFDB
 10193                           fsr2h	equ	0xFDA
 10194                           fsr2l	equ	0xFD9
 10195                           status	equ	0xFD8
 10196                           
 10197 ;; *************** function ___lldiv *****************
 10198 ;; Defined at:
 10199 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  dividend        4    0[COMRAM] unsigned long 
 10202 ;;  divisor         4    4[COMRAM] unsigned long 
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;  quotient        4    8[COMRAM] unsigned long 
 10205 ;;  counter         1   12[COMRAM] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  4    0[COMRAM] unsigned long 
 10208 ;; Registers used:
 10209 ;;		wreg, status,2, status,0
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10215 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10216 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10218 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10219 ;;Total ram usage:       13 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		__display_itoa_u32
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text39
 10229  005F14                     __ptext39:
 10230                           	opt stack 0
 10231  005F14                     ___lldiv:
 10232                           	opt stack 27
 10233                           
 10234                           ;incstack = 0
 10235  005F14  0E00               	movlw	0
 10236  005F16  6E09               	movwf	___lldiv@quotient,c
 10237  005F18  0E00               	movlw	0
 10238  005F1A  6E0A               	movwf	___lldiv@quotient+1,c
 10239  005F1C  0E00               	movlw	0
 10240  005F1E  6E0B               	movwf	___lldiv@quotient+2,c
 10241  005F20  0E00               	movlw	0
 10242  005F22  6E0C               	movwf	___lldiv@quotient+3,c
 10243  005F24  5005               	movf	___lldiv@divisor,w,c
 10244  005F26  1006               	iorwf	___lldiv@divisor+1,w,c
 10245  005F28  1007               	iorwf	___lldiv@divisor+2,w,c
 10246  005F2A  1008               	iorwf	___lldiv@divisor+3,w,c
 10247  005F2C  B4D8               	btfsc	status,2,c
 10248  005F2E  D02A               	goto	l2708
 10249  005F30  0E01               	movlw	1
 10250  005F32  6E0D               	movwf	___lldiv@counter,c
 10251  005F34  D006               	goto	l2703
 10252  005F36  90D8               	bcf	status,0,c
 10253  005F38  3605               	rlcf	___lldiv@divisor,f,c
 10254  005F3A  3606               	rlcf	___lldiv@divisor+1,f,c
 10255  005F3C  3607               	rlcf	___lldiv@divisor+2,f,c
 10256  005F3E  3608               	rlcf	___lldiv@divisor+3,f,c
 10257  005F40  2A0D               	incf	___lldiv@counter,f,c
 10258  005F42                     l2703:
 10259  005F42  AE08               	btfss	___lldiv@divisor+3,7,c
 10260  005F44  D7F8               	goto	l2704
 10261  005F46                     u9040:
 10262  005F46  90D8               	bcf	status,0,c
 10263  005F48  3609               	rlcf	___lldiv@quotient,f,c
 10264  005F4A  360A               	rlcf	___lldiv@quotient+1,f,c
 10265  005F4C  360B               	rlcf	___lldiv@quotient+2,f,c
 10266  005F4E  360C               	rlcf	___lldiv@quotient+3,f,c
 10267  005F50  5005               	movf	___lldiv@divisor,w,c
 10268  005F52  5C01               	subwf	___lldiv@dividend,w,c
 10269  005F54  5006               	movf	___lldiv@divisor+1,w,c
 10270  005F56  5802               	subwfb	___lldiv@dividend+1,w,c
 10271  005F58  5007               	movf	___lldiv@divisor+2,w,c
 10272  005F5A  5803               	subwfb	___lldiv@dividend+2,w,c
 10273  005F5C  5008               	movf	___lldiv@divisor+3,w,c
 10274  005F5E  5804               	subwfb	___lldiv@dividend+3,w,c
 10275  005F60  A0D8               	btfss	status,0,c
 10276  005F62  D009               	goto	l2707
 10277  005F64  5005               	movf	___lldiv@divisor,w,c
 10278  005F66  5E01               	subwf	___lldiv@dividend,f,c
 10279  005F68  5006               	movf	___lldiv@divisor+1,w,c
 10280  005F6A  5A02               	subwfb	___lldiv@dividend+1,f,c
 10281  005F6C  5007               	movf	___lldiv@divisor+2,w,c
 10282  005F6E  5A03               	subwfb	___lldiv@dividend+2,f,c
 10283  005F70  5008               	movf	___lldiv@divisor+3,w,c
 10284  005F72  5A04               	subwfb	___lldiv@dividend+3,f,c
 10285  005F74  8009               	bsf	___lldiv@quotient,0,c
 10286  005F76                     l2707:
 10287  005F76  90D8               	bcf	status,0,c
 10288  005F78  3208               	rrcf	___lldiv@divisor+3,f,c
 10289  005F7A  3207               	rrcf	___lldiv@divisor+2,f,c
 10290  005F7C  3206               	rrcf	___lldiv@divisor+1,f,c
 10291  005F7E  3205               	rrcf	___lldiv@divisor,f,c
 10292  005F80  2E0D               	decfsz	___lldiv@counter,f,c
 10293  005F82  D7E1               	goto	u9040
 10294  005F84                     l2708:
 10295  005F84  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10296  005F88  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10297  005F8C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10298  005F90  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10299  005F94  0012               	return		;funcret
 10300  005F96                     __end_of___lldiv:
 10301                           	opt stack 0
 10302                           tblptru	equ	0xFF8
 10303                           tblptrh	equ	0xFF7
 10304                           tblptrl	equ	0xFF6
 10305                           tablat	equ	0xFF5
 10306                           prodh	equ	0xFF4
 10307                           prodl	equ	0xFF3
 10308                           intcon	equ	0xFF2
 10309                           intcon2	equ	0xFF1
 10310                           intcon3	equ	0xFF0
 10311                           postinc0	equ	0xFEE
 10312                           wreg	equ	0xFE8
 10313                           postdec1	equ	0xFE5
 10314                           plusw1	equ	0xFE3
 10315                           fsr1h	equ	0xFE2
 10316                           fsr1l	equ	0xFE1
 10317                           indf2	equ	0xFDF
 10318                           postinc2	equ	0xFDE
 10319                           plusw2	equ	0xFDB
 10320                           fsr2h	equ	0xFDA
 10321                           fsr2l	equ	0xFD9
 10322                           status	equ	0xFD8
 10323                           
 10324 ;; *************** function __display_done *****************
 10325 ;; Defined at:
 10326 ;;		line 440 in file "display.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  cntr            1   30[COMRAM] unsigned char 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10344 ;;Total ram usage:        1 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    4
 10347 ;; This function calls:
 10348 ;;		__display_itoa_u16
 10349 ;;		_bootloader_get_flashPagesWritten
 10350 ;; This function is called by:
 10351 ;;		_display_prepare
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           	psect	text40
 10356  003392                     __ptext40:
 10357                           	opt stack 0
 10358  003392                     __display_done:
 10359                           	opt stack 25
 10360                           
 10361                           ;display.c: 442: uint8_t cntr;;display.c: 443: cntr = 0;
 10362                           
 10363                           ;incstack = 0
 10364  003392  0E00               	movlw	0
 10365  003394  6E1F               	movwf	__display_done@cntr,c
 10366                           
 10367                           ;display.c: 444: while(done_line1[cntr])
 10368  003396  D017               	goto	l1549
 10369  003398                     
 10370                           ;display.c: 445: display_content[0][cntr] = done_line1[cntr++];
 10371  003398  501F               	movf	__display_done@cntr,w,c
 10372  00339A  0D01               	mullw	1
 10373  00339C  0EB9               	movlw	low _done_line1
 10374  00339E  24F3               	addwf	prodl,w,c
 10375  0033A0  6EF6               	movwf	tblptrl,c
 10376  0033A2  0E8D               	movlw	high _done_line1
 10377  0033A4  20F4               	addwfc	prodh,w,c
 10378  0033A6  6EF7               	movwf	tblptrh,c
 10379  0033A8                     	if	1	;There are 3 active tblptr bytes
 10380  0033A8  6AF8               	clrf	tblptru,c
 10381  0033AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10382  0033AC  22F8               	addwfc	tblptru,f,c
 10383  0033AE                     	endif
 10384  0033AE  501F               	movf	__display_done@cntr,w,c
 10385  0033B0  0D01               	mullw	1
 10386  0033B2  0E6E               	movlw	low _display_content
 10387  0033B4  24F3               	addwf	prodl,w,c
 10388  0033B6  6ED9               	movwf	fsr2l,c
 10389  0033B8  0E01               	movlw	high _display_content
 10390  0033BA  20F4               	addwfc	prodh,w,c
 10391  0033BC  6EDA               	movwf	fsr2h,c
 10392  0033BE  0008               	tblrd		*
 10393  0033C0  CFF5 FFDF          	movff	tablat,indf2
 10394  0033C4  2A1F               	incf	__display_done@cntr,f,c
 10395  0033C6                     l1549:
 10396  0033C6  501F               	movf	__display_done@cntr,w,c
 10397  0033C8  0D01               	mullw	1
 10398  0033CA  0EB9               	movlw	low _done_line1
 10399  0033CC  24F3               	addwf	prodl,w,c
 10400  0033CE  6EF6               	movwf	tblptrl,c
 10401  0033D0  0E8D               	movlw	high _done_line1
 10402  0033D2  20F4               	addwfc	prodh,w,c
 10403  0033D4  6EF7               	movwf	tblptrh,c
 10404  0033D6                     	if	1	;There are 3 active tblptr bytes
 10405  0033D6  6AF8               	clrf	tblptru,c
 10406  0033D8  0E00               	movlw	low (__mediumconst shr (0+16))
 10407  0033DA  22F8               	addwfc	tblptru,f,c
 10408  0033DC                     	endif
 10409  0033DC  0008               	tblrd		*
 10410  0033DE  50F5               	movf	tablat,w,c
 10411  0033E0  0900               	iorlw	0
 10412  0033E2  A4D8               	btfss	status,2,c
 10413  0033E4  D7D9               	goto	l1550
 10414                           
 10415                           ;display.c: 446: cntr = 0;
 10416  0033E6  0E00               	movlw	0
 10417  0033E8  6E1F               	movwf	__display_done@cntr,c
 10418                           
 10419                           ;display.c: 447: while(done_line2[cntr])
 10420  0033EA  D017               	goto	l1552
 10421  0033EC                     
 10422                           ;display.c: 448: display_content[1][cntr] = done_line2[cntr++];
 10423  0033EC  501F               	movf	__display_done@cntr,w,c
 10424  0033EE  0D01               	mullw	1
 10425  0033F0  0E9F               	movlw	low _done_line2
 10426  0033F2  24F3               	addwf	prodl,w,c
 10427  0033F4  6EF6               	movwf	tblptrl,c
 10428  0033F6  0E8E               	movlw	high _done_line2
 10429  0033F8  20F4               	addwfc	prodh,w,c
 10430  0033FA  6EF7               	movwf	tblptrh,c
 10431  0033FC                     	if	1	;There are 3 active tblptr bytes
 10432  0033FC  6AF8               	clrf	tblptru,c
 10433  0033FE  0E00               	movlw	low (__mediumconst shr (0+16))
 10434  003400  22F8               	addwfc	tblptru,f,c
 10435  003402                     	endif
 10436  003402  501F               	movf	__display_done@cntr,w,c
 10437  003404  0D01               	mullw	1
 10438  003406  0E82               	movlw	low (_display_content+20)
 10439  003408  24F3               	addwf	prodl,w,c
 10440  00340A  6ED9               	movwf	fsr2l,c
 10441  00340C  0E01               	movlw	high (_display_content+20)
 10442  00340E  20F4               	addwfc	prodh,w,c
 10443  003410  6EDA               	movwf	fsr2h,c
 10444  003412  0008               	tblrd		*
 10445  003414  CFF5 FFDF          	movff	tablat,indf2
 10446  003418  2A1F               	incf	__display_done@cntr,f,c
 10447  00341A                     l1552:
 10448  00341A  501F               	movf	__display_done@cntr,w,c
 10449  00341C  0D01               	mullw	1
 10450  00341E  0E9F               	movlw	low _done_line2
 10451  003420  24F3               	addwf	prodl,w,c
 10452  003422  6EF6               	movwf	tblptrl,c
 10453  003424  0E8E               	movlw	high _done_line2
 10454  003426  20F4               	addwfc	prodh,w,c
 10455  003428  6EF7               	movwf	tblptrh,c
 10456  00342A                     	if	1	;There are 3 active tblptr bytes
 10457  00342A  6AF8               	clrf	tblptru,c
 10458  00342C  0E00               	movlw	low (__mediumconst shr (0+16))
 10459  00342E  22F8               	addwfc	tblptru,f,c
 10460  003430                     	endif
 10461  003430  0008               	tblrd		*
 10462  003432  50F5               	movf	tablat,w,c
 10463  003434  0900               	iorlw	0
 10464  003436  A4D8               	btfss	status,2,c
 10465  003438  D7D9               	goto	l1553
 10466                           
 10467                           ;display.c: 449: cntr = 0;
 10468  00343A  0E00               	movlw	0
 10469  00343C  6E1F               	movwf	__display_done@cntr,c
 10470                           
 10471                           ;display.c: 450: while(done_line3[cntr])
 10472  00343E  D017               	goto	l1555
 10473  003440                     
 10474                           ;display.c: 451: display_content[2][cntr] = done_line3[cntr++];
 10475  003440  501F               	movf	__display_done@cntr,w,c
 10476  003442  0D01               	mullw	1
 10477  003444  0EA9               	movlw	low _done_line3
 10478  003446  24F3               	addwf	prodl,w,c
 10479  003448  6EF6               	movwf	tblptrl,c
 10480  00344A  0E8D               	movlw	high _done_line3
 10481  00344C  20F4               	addwfc	prodh,w,c
 10482  00344E  6EF7               	movwf	tblptrh,c
 10483  003450                     	if	1	;There are 3 active tblptr bytes
 10484  003450  6AF8               	clrf	tblptru,c
 10485  003452  0E00               	movlw	low (__mediumconst shr (0+16))
 10486  003454  22F8               	addwfc	tblptru,f,c
 10487  003456                     	endif
 10488  003456  501F               	movf	__display_done@cntr,w,c
 10489  003458  0D01               	mullw	1
 10490  00345A  0E96               	movlw	low (_display_content+40)
 10491  00345C  24F3               	addwf	prodl,w,c
 10492  00345E  6ED9               	movwf	fsr2l,c
 10493  003460  0E01               	movlw	high (_display_content+40)
 10494  003462  20F4               	addwfc	prodh,w,c
 10495  003464  6EDA               	movwf	fsr2h,c
 10496  003466  0008               	tblrd		*
 10497  003468  CFF5 FFDF          	movff	tablat,indf2
 10498  00346C  2A1F               	incf	__display_done@cntr,f,c
 10499  00346E                     l1555:
 10500  00346E  501F               	movf	__display_done@cntr,w,c
 10501  003470  0D01               	mullw	1
 10502  003472  0EA9               	movlw	low _done_line3
 10503  003474  24F3               	addwf	prodl,w,c
 10504  003476  6EF6               	movwf	tblptrl,c
 10505  003478  0E8D               	movlw	high _done_line3
 10506  00347A  20F4               	addwfc	prodh,w,c
 10507  00347C  6EF7               	movwf	tblptrh,c
 10508  00347E                     	if	1	;There are 3 active tblptr bytes
 10509  00347E  6AF8               	clrf	tblptru,c
 10510  003480  0E00               	movlw	low (__mediumconst shr (0+16))
 10511  003482  22F8               	addwfc	tblptru,f,c
 10512  003484                     	endif
 10513  003484  0008               	tblrd		*
 10514  003486  50F5               	movf	tablat,w,c
 10515  003488  0900               	iorlw	0
 10516  00348A  A4D8               	btfss	status,2,c
 10517  00348C  D7D9               	goto	l1556
 10518                           
 10519                           ;display.c: 452: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 10520  00348E  ECB0  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
 10521  003492  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 10522  003496  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 10523  00349A  6A1B               	clrf	__display_itoa_u16@value+2,c
 10524  00349C  6A1C               	clrf	__display_itoa_u16@value+3,c
 10525  00349E  501F               	movf	__display_done@cntr,w,c
 10526  0034A0  0D01               	mullw	1
 10527  0034A2  0E96               	movlw	low (_display_content+40)
 10528  0034A4  24F3               	addwf	prodl,w,c
 10529  0034A6  6E1D               	movwf	__display_itoa_u16@text,c
 10530  0034A8  0E01               	movlw	high (_display_content+40)
 10531  0034AA  20F4               	addwfc	prodh,w,c
 10532  0034AC  6E1E               	movwf	__display_itoa_u16@text+1,c
 10533  0034AE  EC50  F027         	call	__display_itoa_u16	;wreg free
 10534                           
 10535                           ;display.c: 453: cntr = 0;
 10536  0034B2  0E00               	movlw	0
 10537  0034B4  6E1F               	movwf	__display_done@cntr,c
 10538                           
 10539                           ;display.c: 454: while(done_line4[cntr])
 10540  0034B6  D017               	goto	l1558
 10541  0034B8                     
 10542                           ;display.c: 455: display_content[3][cntr] = done_line4[cntr++];
 10543  0034B8  501F               	movf	__display_done@cntr,w,c
 10544  0034BA  0D01               	mullw	1
 10545  0034BC  0E99               	movlw	low _done_line4
 10546  0034BE  24F3               	addwf	prodl,w,c
 10547  0034C0  6EF6               	movwf	tblptrl,c
 10548  0034C2  0E8D               	movlw	high _done_line4
 10549  0034C4  20F4               	addwfc	prodh,w,c
 10550  0034C6  6EF7               	movwf	tblptrh,c
 10551  0034C8                     	if	1	;There are 3 active tblptr bytes
 10552  0034C8  6AF8               	clrf	tblptru,c
 10553  0034CA  0E00               	movlw	low (__mediumconst shr (0+16))
 10554  0034CC  22F8               	addwfc	tblptru,f,c
 10555  0034CE                     	endif
 10556  0034CE  501F               	movf	__display_done@cntr,w,c
 10557  0034D0  0D01               	mullw	1
 10558  0034D2  0EAA               	movlw	low (_display_content+60)
 10559  0034D4  24F3               	addwf	prodl,w,c
 10560  0034D6  6ED9               	movwf	fsr2l,c
 10561  0034D8  0E01               	movlw	high (_display_content+60)
 10562  0034DA  20F4               	addwfc	prodh,w,c
 10563  0034DC  6EDA               	movwf	fsr2h,c
 10564  0034DE  0008               	tblrd		*
 10565  0034E0  CFF5 FFDF          	movff	tablat,indf2
 10566  0034E4  2A1F               	incf	__display_done@cntr,f,c
 10567  0034E6                     l1558:
 10568  0034E6  501F               	movf	__display_done@cntr,w,c
 10569  0034E8  0D01               	mullw	1
 10570  0034EA  0E99               	movlw	low _done_line4
 10571  0034EC  24F3               	addwf	prodl,w,c
 10572  0034EE  6EF6               	movwf	tblptrl,c
 10573  0034F0  0E8D               	movlw	high _done_line4
 10574  0034F2  20F4               	addwfc	prodh,w,c
 10575  0034F4  6EF7               	movwf	tblptrh,c
 10576  0034F6                     	if	1	;There are 3 active tblptr bytes
 10577  0034F6  6AF8               	clrf	tblptru,c
 10578  0034F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10579  0034FA  22F8               	addwfc	tblptru,f,c
 10580  0034FC                     	endif
 10581  0034FC  0008               	tblrd		*
 10582  0034FE  50F5               	movf	tablat,w,c
 10583  003500  0900               	iorlw	0
 10584  003502  B4D8               	btfsc	status,2,c
 10585  003504  0012               	return	
 10586  003506  D7D8               	goto	l1559
 10587  003508                     __end_of__display_done:
 10588                           	opt stack 0
 10589                           tblptru	equ	0xFF8
 10590                           tblptrh	equ	0xFF7
 10591                           tblptrl	equ	0xFF6
 10592                           tablat	equ	0xFF5
 10593                           prodh	equ	0xFF4
 10594                           prodl	equ	0xFF3
 10595                           intcon	equ	0xFF2
 10596                           intcon2	equ	0xFF1
 10597                           intcon3	equ	0xFF0
 10598                           postinc0	equ	0xFEE
 10599                           wreg	equ	0xFE8
 10600                           postdec1	equ	0xFE5
 10601                           plusw1	equ	0xFE3
 10602                           fsr1h	equ	0xFE2
 10603                           fsr1l	equ	0xFE1
 10604                           indf2	equ	0xFDF
 10605                           postinc2	equ	0xFDE
 10606                           plusw2	equ	0xFDB
 10607                           fsr2h	equ	0xFDA
 10608                           fsr2l	equ	0xFD9
 10609                           status	equ	0xFD8
 10610                           
 10611 ;; *************** function __display_clear *****************
 10612 ;; Defined at:
 10613 ;;		line 65 in file "display.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;  col             1    3[COMRAM] unsigned char 
 10618 ;;  row             1    2[COMRAM] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  1    wreg      void 
 10621 ;; Registers used:
 10622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10632 ;;Total ram usage:        4 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_display_prepare
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text41
 10642  00713E                     __ptext41:
 10643                           	opt stack 0
 10644  00713E                     __display_clear:
 10645                           	opt stack 29
 10646                           
 10647                           ;display.c: 67: uint8_t row;;display.c: 68: uint8_t col;;display.c: 69: for(row=0;row<4;
      +                          ++row)
 10648                           
 10649                           ;incstack = 0
 10650  00713E  0E00               	movlw	0
 10651  007140  6E03               	movwf	__display_clear@row,c
 10652  007142                     l13289:
 10653  007142  0E03               	movlw	3
 10654  007144  6403               	cpfsgt	__display_clear@row,c
 10655  007146  D001               	goto	l1369
 10656  007148  0012               	return	
 10657  00714A                     l1369:
 10658                           
 10659                           ;display.c: 70: {;display.c: 71: for(col=0;col<20;++col)
 10660  00714A  0E00               	movlw	0
 10661  00714C  6E04               	movwf	__display_clear@col,c
 10662  00714E                     l13295:
 10663  00714E  0E13               	movlw	19
 10664  007150  6404               	cpfsgt	__display_clear@col,c
 10665  007152  D001               	goto	l1371
 10666  007154  D016               	goto	u10420
 10667  007156                     l1371:
 10668                           
 10669                           ;display.c: 72: {;display.c: 73: display_content[row][col] = ' ';
 10670  007156  5003               	movf	__display_clear@row,w,c
 10671  007158  0D14               	mullw	20
 10672  00715A  0E6E               	movlw	low _display_content
 10673  00715C  6E01               	movwf	??__display_clear& (0+255),c
 10674  00715E  0E01               	movlw	high _display_content
 10675  007160  6E02               	movwf	(??__display_clear+1)& (0+255),c
 10676  007162  50F3               	movf	prodl,w,c
 10677  007164  2601               	addwf	??__display_clear,f,c
 10678  007166  50F4               	movf	prodh,w,c
 10679  007168  2202               	addwfc	??__display_clear+1,f,c
 10680  00716A  5004               	movf	__display_clear@col,w,c
 10681  00716C  0D01               	mullw	1
 10682  00716E  50F3               	movf	prodl,w,c
 10683  007170  2401               	addwf	??__display_clear,w,c
 10684  007172  6ED9               	movwf	fsr2l,c
 10685  007174  50F4               	movf	prodh,w,c
 10686  007176  2002               	addwfc	??__display_clear+1,w,c
 10687  007178  6EDA               	movwf	fsr2h,c
 10688  00717A  0E20               	movlw	32
 10689  00717C  6EDF               	movwf	indf2,c
 10690  00717E  2A04               	incf	__display_clear@col,f,c
 10691  007180  D7E6               	goto	l13295
 10692  007182                     u10420:
 10693  007182  2A03               	incf	__display_clear@row,f,c
 10694  007184  D7DE               	goto	l13289
 10695  007186                     __end_of__display_clear:
 10696                           	opt stack 0
 10697                           tblptru	equ	0xFF8
 10698                           tblptrh	equ	0xFF7
 10699                           tblptrl	equ	0xFF6
 10700                           tablat	equ	0xFF5
 10701                           prodh	equ	0xFF4
 10702                           prodl	equ	0xFF3
 10703                           intcon	equ	0xFF2
 10704                           intcon2	equ	0xFF1
 10705                           intcon3	equ	0xFF0
 10706                           postinc0	equ	0xFEE
 10707                           wreg	equ	0xFE8
 10708                           postdec1	equ	0xFE5
 10709                           plusw1	equ	0xFE3
 10710                           fsr1h	equ	0xFE2
 10711                           fsr1l	equ	0xFE1
 10712                           indf2	equ	0xFDF
 10713                           postinc2	equ	0xFDE
 10714                           plusw2	equ	0xFDB
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function __display_checked *****************
 10720 ;; Defined at:
 10721 ;;		line 344 in file "display.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;		None
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  cntr            1   33[COMRAM] unsigned char 
 10726 ;;  start           1   32[COMRAM] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;Total ram usage:        4 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    4
 10743 ;; This function calls:
 10744 ;;		__display_itoa_u16
 10745 ;;		_bootloader_get_total_entries
 10746 ;; This function is called by:
 10747 ;;		_display_prepare
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text42
 10752  003216                     __ptext42:
 10753                           	opt stack 0
 10754  003216                     __display_checked:
 10755                           	opt stack 25
 10756                           
 10757                           ;display.c: 346: uint8_t cntr;;display.c: 347: uint8_t start;;display.c: 348: cntr = 0;
 10758                           
 10759                           ;incstack = 0
 10760  003216  0E00               	movlw	0
 10761  003218  6E22               	movwf	__display_checked@cntr,c
 10762                           
 10763                           ;display.c: 349: while(checked_line1[cntr])
 10764  00321A  D017               	goto	l1485
 10765  00321C                     
 10766                           ;display.c: 350: display_content[0][cntr] = checked_line1[cntr++];
 10767  00321C  5022               	movf	__display_checked@cntr,w,c
 10768  00321E  0D01               	mullw	1
 10769  003220  0EF9               	movlw	low _checked_line1
 10770  003222  24F3               	addwf	prodl,w,c
 10771  003224  6EF6               	movwf	tblptrl,c
 10772  003226  0E8D               	movlw	high _checked_line1
 10773  003228  20F4               	addwfc	prodh,w,c
 10774  00322A  6EF7               	movwf	tblptrh,c
 10775  00322C                     	if	1	;There are 3 active tblptr bytes
 10776  00322C  6AF8               	clrf	tblptru,c
 10777  00322E  0E00               	movlw	low (__mediumconst shr (0+16))
 10778  003230  22F8               	addwfc	tblptru,f,c
 10779  003232                     	endif
 10780  003232  5022               	movf	__display_checked@cntr,w,c
 10781  003234  0D01               	mullw	1
 10782  003236  0E6E               	movlw	low _display_content
 10783  003238  24F3               	addwf	prodl,w,c
 10784  00323A  6ED9               	movwf	fsr2l,c
 10785  00323C  0E01               	movlw	high _display_content
 10786  00323E  20F4               	addwfc	prodh,w,c
 10787  003240  6EDA               	movwf	fsr2h,c
 10788  003242  0008               	tblrd		*
 10789  003244  CFF5 FFDF          	movff	tablat,indf2
 10790  003248  2A22               	incf	__display_checked@cntr,f,c
 10791  00324A                     l1485:
 10792  00324A  5022               	movf	__display_checked@cntr,w,c
 10793  00324C  0D01               	mullw	1
 10794  00324E  0EF9               	movlw	low _checked_line1
 10795  003250  24F3               	addwf	prodl,w,c
 10796  003252  6EF6               	movwf	tblptrl,c
 10797  003254  0E8D               	movlw	high _checked_line1
 10798  003256  20F4               	addwfc	prodh,w,c
 10799  003258  6EF7               	movwf	tblptrh,c
 10800  00325A                     	if	1	;There are 3 active tblptr bytes
 10801  00325A  6AF8               	clrf	tblptru,c
 10802  00325C  0E00               	movlw	low (__mediumconst shr (0+16))
 10803  00325E  22F8               	addwfc	tblptru,f,c
 10804  003260                     	endif
 10805  003260  0008               	tblrd		*
 10806  003262  50F5               	movf	tablat,w,c
 10807  003264  0900               	iorlw	0
 10808  003266  A4D8               	btfss	status,2,c
 10809  003268  D7D9               	goto	l1486
 10810                           
 10811                           ;display.c: 351: cntr = 0;
 10812  00326A  0E00               	movlw	0
 10813  00326C  6E22               	movwf	__display_checked@cntr,c
 10814                           
 10815                           ;display.c: 352: while(checked_line2[cntr])
 10816  00326E  D017               	goto	l1488
 10817  003270                     
 10818                           ;display.c: 353: display_content[1][cntr] = checked_line2[cntr++];
 10819  003270  5022               	movf	__display_checked@cntr,w,c
 10820  003272  0D01               	mullw	1
 10821  003274  0ECD               	movlw	low _checked_line2
 10822  003276  24F3               	addwf	prodl,w,c
 10823  003278  6EF6               	movwf	tblptrl,c
 10824  00327A  0E8C               	movlw	high _checked_line2
 10825  00327C  20F4               	addwfc	prodh,w,c
 10826  00327E  6EF7               	movwf	tblptrh,c
 10827  003280                     	if	1	;There are 3 active tblptr bytes
 10828  003280  6AF8               	clrf	tblptru,c
 10829  003282  0E00               	movlw	low (__mediumconst shr (0+16))
 10830  003284  22F8               	addwfc	tblptru,f,c
 10831  003286                     	endif
 10832  003286  5022               	movf	__display_checked@cntr,w,c
 10833  003288  0D01               	mullw	1
 10834  00328A  0E82               	movlw	low (_display_content+20)
 10835  00328C  24F3               	addwf	prodl,w,c
 10836  00328E  6ED9               	movwf	fsr2l,c
 10837  003290  0E01               	movlw	high (_display_content+20)
 10838  003292  20F4               	addwfc	prodh,w,c
 10839  003294  6EDA               	movwf	fsr2h,c
 10840  003296  0008               	tblrd		*
 10841  003298  CFF5 FFDF          	movff	tablat,indf2
 10842  00329C  2A22               	incf	__display_checked@cntr,f,c
 10843  00329E                     l1488:
 10844  00329E  5022               	movf	__display_checked@cntr,w,c
 10845  0032A0  0D01               	mullw	1
 10846  0032A2  0ECD               	movlw	low _checked_line2
 10847  0032A4  24F3               	addwf	prodl,w,c
 10848  0032A6  6EF6               	movwf	tblptrl,c
 10849  0032A8  0E8C               	movlw	high _checked_line2
 10850  0032AA  20F4               	addwfc	prodh,w,c
 10851  0032AC  6EF7               	movwf	tblptrh,c
 10852  0032AE                     	if	1	;There are 3 active tblptr bytes
 10853  0032AE  6AF8               	clrf	tblptru,c
 10854  0032B0  0E00               	movlw	low (__mediumconst shr (0+16))
 10855  0032B2  22F8               	addwfc	tblptru,f,c
 10856  0032B4                     	endif
 10857  0032B4  0008               	tblrd		*
 10858  0032B6  50F5               	movf	tablat,w,c
 10859  0032B8  0900               	iorlw	0
 10860  0032BA  A4D8               	btfss	status,2,c
 10861  0032BC  D7D9               	goto	l1489
 10862                           
 10863                           ;display.c: 355: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 10864  0032BE  ECA1  F03D         	call	_bootloader_get_total_entries	;wreg free
 10865  0032C2  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 10866  0032C6  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 10867  0032CA  6A1B               	clrf	__display_itoa_u16@value+2,c
 10868  0032CC  6A1C               	clrf	__display_itoa_u16@value+3,c
 10869  0032CE  0E96               	movlw	low (_display_content+40)
 10870  0032D0  6E1D               	movwf	__display_itoa_u16@text,c
 10871  0032D2  0E01               	movlw	high (_display_content+40)
 10872  0032D4  6E1E               	movwf	__display_itoa_u16@text+1,c
 10873  0032D6  EC50  F027         	call	__display_itoa_u16	;wreg free
 10874  0032DA  6E21               	movwf	__display_checked@start,c
 10875                           
 10876                           ;display.c: 356: start++;
 10877  0032DC  2A21               	incf	__display_checked@start,f,c
 10878                           
 10879                           ;display.c: 357: cntr = 0;
 10880  0032DE  0E00               	movlw	0
 10881  0032E0  6E22               	movwf	__display_checked@cntr,c
 10882                           
 10883                           ;display.c: 358: while(checked_line3[cntr])
 10884  0032E2  D01C               	goto	l1491
 10885  0032E4                     
 10886                           ;display.c: 359: display_content[2][start+cntr] = checked_line3[cntr++];
 10887  0032E4  5022               	movf	__display_checked@cntr,w,c
 10888  0032E6  0D01               	mullw	1
 10889  0032E8  0E73               	movlw	low _checked_line3
 10890  0032EA  24F3               	addwf	prodl,w,c
 10891  0032EC  6EF6               	movwf	tblptrl,c
 10892  0032EE  0E8E               	movlw	high _checked_line3
 10893  0032F0  20F4               	addwfc	prodh,w,c
 10894  0032F2  6EF7               	movwf	tblptrh,c
 10895  0032F4                     	if	1	;There are 3 active tblptr bytes
 10896  0032F4  6AF8               	clrf	tblptru,c
 10897  0032F6  0E00               	movlw	low (__mediumconst shr (0+16))
 10898  0032F8  22F8               	addwfc	tblptru,f,c
 10899  0032FA                     	endif
 10900  0032FA  5022               	movf	__display_checked@cntr,w,c
 10901  0032FC  C021  F01F         	movff	__display_checked@start,??__display_checked
 10902  003300  6A20               	clrf	(??__display_checked+1)& (0+255),c
 10903  003302  261F               	addwf	??__display_checked,f,c
 10904  003304  0E00               	movlw	0
 10905  003306  2220               	addwfc	??__display_checked+1,f,c
 10906  003308  0E96               	movlw	low (_display_content+40)
 10907  00330A  241F               	addwf	??__display_checked,w,c
 10908  00330C  6ED9               	movwf	fsr2l,c
 10909  00330E  0E01               	movlw	high (_display_content+40)
 10910  003310  2020               	addwfc	??__display_checked+1,w,c
 10911  003312  6EDA               	movwf	fsr2h,c
 10912  003314  0008               	tblrd		*
 10913  003316  CFF5 FFDF          	movff	tablat,indf2
 10914  00331A  2A22               	incf	__display_checked@cntr,f,c
 10915  00331C                     l1491:
 10916  00331C  5022               	movf	__display_checked@cntr,w,c
 10917  00331E  0D01               	mullw	1
 10918  003320  0E73               	movlw	low _checked_line3
 10919  003322  24F3               	addwf	prodl,w,c
 10920  003324  6EF6               	movwf	tblptrl,c
 10921  003326  0E8E               	movlw	high _checked_line3
 10922  003328  20F4               	addwfc	prodh,w,c
 10923  00332A  6EF7               	movwf	tblptrh,c
 10924  00332C                     	if	1	;There are 3 active tblptr bytes
 10925  00332C  6AF8               	clrf	tblptru,c
 10926  00332E  0E00               	movlw	low (__mediumconst shr (0+16))
 10927  003330  22F8               	addwfc	tblptru,f,c
 10928  003332                     	endif
 10929  003332  0008               	tblrd		*
 10930  003334  50F5               	movf	tablat,w,c
 10931  003336  0900               	iorlw	0
 10932  003338  A4D8               	btfss	status,2,c
 10933  00333A  D7D4               	goto	l1492
 10934                           
 10935                           ;display.c: 361: cntr = 0;
 10936  00333C  0E00               	movlw	0
 10937  00333E  6E22               	movwf	__display_checked@cntr,c
 10938                           
 10939                           ;display.c: 362: while(checked_line4[cntr])
 10940  003340  D017               	goto	l1494
 10941  003342                     
 10942                           ;display.c: 363: display_content[3][cntr] = checked_line4[cntr++];
 10943  003342  5022               	movf	__display_checked@cntr,w,c
 10944  003344  0D01               	mullw	1
 10945  003346  0E66               	movlw	low _checked_line4
 10946  003348  24F3               	addwf	prodl,w,c
 10947  00334A  6EF6               	movwf	tblptrl,c
 10948  00334C  0E8D               	movlw	high _checked_line4
 10949  00334E  20F4               	addwfc	prodh,w,c
 10950  003350  6EF7               	movwf	tblptrh,c
 10951  003352                     	if	1	;There are 3 active tblptr bytes
 10952  003352  6AF8               	clrf	tblptru,c
 10953  003354  0E00               	movlw	low (__mediumconst shr (0+16))
 10954  003356  22F8               	addwfc	tblptru,f,c
 10955  003358                     	endif
 10956  003358  5022               	movf	__display_checked@cntr,w,c
 10957  00335A  0D01               	mullw	1
 10958  00335C  0EAA               	movlw	low (_display_content+60)
 10959  00335E  24F3               	addwf	prodl,w,c
 10960  003360  6ED9               	movwf	fsr2l,c
 10961  003362  0E01               	movlw	high (_display_content+60)
 10962  003364  20F4               	addwfc	prodh,w,c
 10963  003366  6EDA               	movwf	fsr2h,c
 10964  003368  0008               	tblrd		*
 10965  00336A  CFF5 FFDF          	movff	tablat,indf2
 10966  00336E  2A22               	incf	__display_checked@cntr,f,c
 10967  003370                     l1494:
 10968  003370  5022               	movf	__display_checked@cntr,w,c
 10969  003372  0D01               	mullw	1
 10970  003374  0E66               	movlw	low _checked_line4
 10971  003376  24F3               	addwf	prodl,w,c
 10972  003378  6EF6               	movwf	tblptrl,c
 10973  00337A  0E8D               	movlw	high _checked_line4
 10974  00337C  20F4               	addwfc	prodh,w,c
 10975  00337E  6EF7               	movwf	tblptrh,c
 10976  003380                     	if	1	;There are 3 active tblptr bytes
 10977  003380  6AF8               	clrf	tblptru,c
 10978  003382  0E00               	movlw	low (__mediumconst shr (0+16))
 10979  003384  22F8               	addwfc	tblptru,f,c
 10980  003386                     	endif
 10981  003386  0008               	tblrd		*
 10982  003388  50F5               	movf	tablat,w,c
 10983  00338A  0900               	iorlw	0
 10984  00338C  B4D8               	btfsc	status,2,c
 10985  00338E  0012               	return	
 10986  003390  D7D8               	goto	l1495
 10987  003392                     __end_of__display_checked:
 10988                           	opt stack 0
 10989                           tblptru	equ	0xFF8
 10990                           tblptrh	equ	0xFF7
 10991                           tblptrl	equ	0xFF6
 10992                           tablat	equ	0xFF5
 10993                           prodh	equ	0xFF4
 10994                           prodl	equ	0xFF3
 10995                           intcon	equ	0xFF2
 10996                           intcon2	equ	0xFF1
 10997                           intcon3	equ	0xFF0
 10998                           postinc0	equ	0xFEE
 10999                           wreg	equ	0xFE8
 11000                           postdec1	equ	0xFE5
 11001                           plusw1	equ	0xFE3
 11002                           fsr1h	equ	0xFE2
 11003                           fsr1l	equ	0xFE1
 11004                           indf2	equ	0xFDF
 11005                           postinc2	equ	0xFDE
 11006                           plusw2	equ	0xFDB
 11007                           fsr2h	equ	0xFDA
 11008                           fsr2l	equ	0xFD9
 11009                           status	equ	0xFD8
 11010                           
 11011 ;; *************** function __display_itoa_u16 *****************
 11012 ;; Defined at:
 11013 ;;		line 78 in file "display.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  value           4   24[COMRAM] unsigned long 
 11016 ;;  text            2   28[COMRAM] PTR unsigned char 
 11017 ;;		 -> display_content(80), 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;		None
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      unsigned char 
 11022 ;; Registers used:
 11023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11029 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11033 ;;Total ram usage:        6 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    3
 11036 ;; This function calls:
 11037 ;;		_itoa
 11038 ;; This function is called by:
 11039 ;;		__display_itoa_u32
 11040 ;;		__display_verify
 11041 ;;		__display_checked
 11042 ;;		__display_failed
 11043 ;;		__display_programming
 11044 ;;		__display_done
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text43
 11049  004EA0                     __ptext43:
 11050                           	opt stack 0
 11051  004EA0                     __display_itoa_u16:
 11052                           	opt stack 25
 11053                           
 11054                           ;display.c: 80: itoa(text, value, 10);
 11055                           
 11056                           ;incstack = 0
 11057  004EA0  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 11058  004EA4  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11059  004EA8  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 11060  004EAC  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 11061  004EB0  0E00               	movlw	0
 11062  004EB2  6E16               	movwf	itoa@base+1,c
 11063  004EB4  0E0A               	movlw	10
 11064  004EB6  6E15               	movwf	itoa@base,c
 11065  004EB8  EC2D  F039         	call	_itoa	;wreg free
 11066                           
 11067                           ;display.c: 81: if(value>9999)
 11068  004EBC  501C               	movf	__display_itoa_u16@value+3,w,c
 11069  004EBE  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11070  004EC0  E106               	bnz	u8690
 11071  004EC2  0E10               	movlw	16
 11072  004EC4  5C19               	subwf	__display_itoa_u16@value,w,c
 11073  004EC6  0E27               	movlw	39
 11074  004EC8  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11075  004ECA  A0D8               	btfss	status,0,c
 11076  004ECC  D00A               	goto	l1376
 11077  004ECE                     u8690:
 11078                           
 11079                           ;display.c: 82: {;display.c: 83: *(text+5) = ' ';
 11080  004ECE  EE20 F005          	lfsr	2,5
 11081  004ED2  501D               	movf	__display_itoa_u16@text,w,c
 11082  004ED4  26D9               	addwf	fsr2l,f,c
 11083  004ED6  501E               	movf	__display_itoa_u16@text+1,w,c
 11084  004ED8  22DA               	addwfc	fsr2h,f,c
 11085  004EDA  0E20               	movlw	32
 11086  004EDC  6EDF               	movwf	indf2,c
 11087                           
 11088                           ;display.c: 84: return 5;
 11089  004EDE  0E05               	movlw	5
 11090                           
 11091                           ;display.c: 85: }
 11092  004EE0  0012               	return	
 11093  004EE2                     l1376:
 11094                           
 11095                           ;display.c: 86: else if (value>999)
 11096  004EE2  501C               	movf	__display_itoa_u16@value+3,w,c
 11097  004EE4  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11098  004EE6  E106               	bnz	u8700
 11099  004EE8  0EE8               	movlw	232
 11100  004EEA  5C19               	subwf	__display_itoa_u16@value,w,c
 11101  004EEC  0E03               	movlw	3
 11102  004EEE  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11103  004EF0  A0D8               	btfss	status,0,c
 11104  004EF2  D00A               	goto	l1379
 11105  004EF4                     u8700:
 11106                           
 11107                           ;display.c: 87: {;display.c: 88: *(text+4) = ' ';
 11108  004EF4  EE20 F004          	lfsr	2,4
 11109  004EF8  501D               	movf	__display_itoa_u16@text,w,c
 11110  004EFA  26D9               	addwf	fsr2l,f,c
 11111  004EFC  501E               	movf	__display_itoa_u16@text+1,w,c
 11112  004EFE  22DA               	addwfc	fsr2h,f,c
 11113  004F00  0E20               	movlw	32
 11114  004F02  6EDF               	movwf	indf2,c
 11115                           
 11116                           ;display.c: 89: return 4;
 11117  004F04  0E04               	movlw	4
 11118                           
 11119                           ;display.c: 90: }
 11120  004F06  0012               	return	
 11121  004F08                     l1379:
 11122                           
 11123                           ;display.c: 91: else if (value>99)
 11124  004F08  501C               	movf	__display_itoa_u16@value+3,w,c
 11125  004F0A  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11126  004F0C  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11127  004F0E  E104               	bnz	u8710
 11128  004F10  0E64               	movlw	100
 11129  004F12  5C19               	subwf	__display_itoa_u16@value,w,c
 11130  004F14  A0D8               	btfss	status,0,c
 11131  004F16  D00A               	goto	l1381
 11132  004F18                     u8710:
 11133                           
 11134                           ;display.c: 92: {;display.c: 93: *(text+3) = ' ';
 11135  004F18  EE20 F003          	lfsr	2,3
 11136  004F1C  501D               	movf	__display_itoa_u16@text,w,c
 11137  004F1E  26D9               	addwf	fsr2l,f,c
 11138  004F20  501E               	movf	__display_itoa_u16@text+1,w,c
 11139  004F22  22DA               	addwfc	fsr2h,f,c
 11140  004F24  0E20               	movlw	32
 11141  004F26  6EDF               	movwf	indf2,c
 11142                           
 11143                           ;display.c: 94: return 3;
 11144  004F28  0E03               	movlw	3
 11145                           
 11146                           ;display.c: 95: }
 11147  004F2A  0012               	return	
 11148  004F2C                     l1381:
 11149                           
 11150                           ;display.c: 96: else if (value>9)
 11151  004F2C  501C               	movf	__display_itoa_u16@value+3,w,c
 11152  004F2E  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11153  004F30  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11154  004F32  E104               	bnz	u8720
 11155  004F34  0E0A               	movlw	10
 11156  004F36  5C19               	subwf	__display_itoa_u16@value,w,c
 11157  004F38  A0D8               	btfss	status,0,c
 11158  004F3A  D00A               	goto	l1383
 11159  004F3C                     u8720:
 11160                           
 11161                           ;display.c: 97: {;display.c: 98: *(text+2) = ' ';
 11162  004F3C  EE20 F002          	lfsr	2,2
 11163  004F40  501D               	movf	__display_itoa_u16@text,w,c
 11164  004F42  26D9               	addwf	fsr2l,f,c
 11165  004F44  501E               	movf	__display_itoa_u16@text+1,w,c
 11166  004F46  22DA               	addwfc	fsr2h,f,c
 11167  004F48  0E20               	movlw	32
 11168  004F4A  6EDF               	movwf	indf2,c
 11169                           
 11170                           ;display.c: 99: return 2;
 11171  004F4C  0E02               	movlw	2
 11172                           
 11173                           ;display.c: 100: }
 11174  004F4E  0012               	return	
 11175  004F50                     l1383:
 11176                           
 11177                           ;display.c: 101: else;display.c: 102: {;display.c: 103: *(text+1) = ' ';
 11178  004F50  EE20 F001          	lfsr	2,1
 11179  004F54  501D               	movf	__display_itoa_u16@text,w,c
 11180  004F56  26D9               	addwf	fsr2l,f,c
 11181  004F58  501E               	movf	__display_itoa_u16@text+1,w,c
 11182  004F5A  22DA               	addwfc	fsr2h,f,c
 11183  004F5C  0E20               	movlw	32
 11184  004F5E  6EDF               	movwf	indf2,c
 11185                           
 11186                           ;display.c: 104: return 1;
 11187  004F60  0E01               	movlw	1
 11188  004F62  0012               	return	
 11189  004F64                     __end_of__display_itoa_u16:
 11190                           	opt stack 0
 11191                           tblptru	equ	0xFF8
 11192                           tblptrh	equ	0xFF7
 11193                           tblptrl	equ	0xFF6
 11194                           tablat	equ	0xFF5
 11195                           prodh	equ	0xFF4
 11196                           prodl	equ	0xFF3
 11197                           intcon	equ	0xFF2
 11198                           intcon2	equ	0xFF1
 11199                           intcon3	equ	0xFF0
 11200                           postinc0	equ	0xFEE
 11201                           wreg	equ	0xFE8
 11202                           postdec1	equ	0xFE5
 11203                           plusw1	equ	0xFE3
 11204                           fsr1h	equ	0xFE2
 11205                           fsr1l	equ	0xFE1
 11206                           indf2	equ	0xFDF
 11207                           postinc2	equ	0xFDE
 11208                           plusw2	equ	0xFDB
 11209                           fsr2h	equ	0xFDA
 11210                           fsr2l	equ	0xFD9
 11211                           status	equ	0xFD8
 11212                           
 11213 ;; *************** function _itoa *****************
 11214 ;; Defined at:
 11215 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  buf             2   16[COMRAM] PTR unsigned char 
 11218 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11219 ;;  val             2   18[COMRAM] int 
 11220 ;;  base            2   20[COMRAM] int 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11223 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  2   16[COMRAM] PTR unsigned char 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;Total ram usage:        8 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:    2
 11240 ;; This function calls:
 11241 ;;		_utoa
 11242 ;; This function is called by:
 11243 ;;		__display_itoa_u16
 11244 ;;		__display_itoa_u32
 11245 ;;		__display_itoa
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text44
 11250  00725A                     __ptext44:
 11251                           	opt stack 0
 11252  00725A                     _itoa:
 11253                           	opt stack 25
 11254                           
 11255                           ;incstack = 0
 11256  00725A  C011  F017         	movff	itoa@buf,itoa@cp
 11257  00725E  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 11258  007262  AE14               	btfss	itoa@val+1,7,c
 11259  007264  D00C               	goto	l3339
 11260  007266  C011  FFD9         	movff	itoa@buf,fsr2l
 11261  00726A  C012  FFDA         	movff	itoa@buf+1,fsr2h
 11262  00726E  0E2D               	movlw	45
 11263  007270  6EDF               	movwf	indf2,c
 11264  007272  4A11               	infsnz	itoa@buf,f,c
 11265  007274  2A12               	incf	itoa@buf+1,f,c
 11266  007276  6C13               	negf	itoa@val,c
 11267  007278  1E14               	comf	itoa@val+1,f,c
 11268  00727A  B0D8               	btfsc	status,0,c
 11269  00727C  2A14               	incf	itoa@val+1,f,c
 11270  00727E                     l3339:
 11271  00727E  C011  F008         	movff	itoa@buf,utoa@buf
 11272  007282  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 11273  007286  C013  F00A         	movff	itoa@val,utoa@val
 11274  00728A  C014  F00B         	movff	itoa@val+1,utoa@val+1
 11275  00728E  C015  F00C         	movff	itoa@base,utoa@base
 11276  007292  C016  F00D         	movff	itoa@base+1,utoa@base+1
 11277  007296  ECE0  F02A         	call	_utoa	;wreg free
 11278  00729A  0012               	return	
 11279  00729C                     __end_of_itoa:
 11280                           	opt stack 0
 11281                           tblptru	equ	0xFF8
 11282                           tblptrh	equ	0xFF7
 11283                           tblptrl	equ	0xFF6
 11284                           tablat	equ	0xFF5
 11285                           prodh	equ	0xFF4
 11286                           prodl	equ	0xFF3
 11287                           intcon	equ	0xFF2
 11288                           intcon2	equ	0xFF1
 11289                           intcon3	equ	0xFF0
 11290                           postinc0	equ	0xFEE
 11291                           wreg	equ	0xFE8
 11292                           postdec1	equ	0xFE5
 11293                           plusw1	equ	0xFE3
 11294                           fsr1h	equ	0xFE2
 11295                           fsr1l	equ	0xFE1
 11296                           indf2	equ	0xFDF
 11297                           postinc2	equ	0xFDE
 11298                           plusw2	equ	0xFDB
 11299                           fsr2h	equ	0xFDA
 11300                           fsr2l	equ	0xFD9
 11301                           status	equ	0xFD8
 11302                           
 11303 ;; *************** function _utoa *****************
 11304 ;; Defined at:
 11305 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  buf             2    7[COMRAM] PTR unsigned char 
 11308 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11309 ;;  val             2    9[COMRAM] unsigned int 
 11310 ;;  base            2   11[COMRAM] int 
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;  v               2   13[COMRAM] unsigned int 
 11313 ;;  c               1   15[COMRAM] unsigned char 
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  2    7[COMRAM] PTR unsigned char 
 11316 ;; Registers used:
 11317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11323 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;Total ram usage:        9 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:    1
 11330 ;; This function calls:
 11331 ;;		___lwdiv
 11332 ;;		___lwmod
 11333 ;; This function is called by:
 11334 ;;		_itoa
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text45
 11339  0055C0                     __ptext45:
 11340                           	opt stack 0
 11341  0055C0                     _utoa:
 11342                           	opt stack 25
 11343                           
 11344                           ;incstack = 0
 11345  0055C0  C00A  F00E         	movff	utoa@val,utoa@v
 11346  0055C4  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 11347  0055C8  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 11348  0055CC  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 11349  0055D0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11350  0055D4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11351  0055D8  ECD6  F037         	call	___lwdiv	;wreg free
 11352  0055DC  C001  F00E         	movff	?___lwdiv,utoa@v
 11353  0055E0  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 11354  0055E4  4A08               	infsnz	utoa@buf,f,c
 11355  0055E6  2A09               	incf	utoa@buf+1,f,c
 11356  0055E8  500E               	movf	utoa@v,w,c
 11357  0055EA  100F               	iorwf	utoa@v+1,w,c
 11358  0055EC  A4D8               	btfss	status,2,c
 11359  0055EE  D7EC               	goto	l3343
 11360  0055F0  C008  FFD9         	movff	utoa@buf,fsr2l
 11361  0055F4  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11362  0055F8  0E00               	movlw	0
 11363  0055FA  6EDF               	movwf	indf2,c
 11364  0055FC  0608               	decf	utoa@buf,f,c
 11365  0055FE  A0D8               	btfss	status,0,c
 11366  005600  0609               	decf	utoa@buf+1,f,c
 11367  005602  C00A  F001         	movff	utoa@val,___lwmod@dividend
 11368  005606  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 11369  00560A  C00C  F003         	movff	utoa@base,___lwmod@divisor
 11370  00560E  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 11371  005612  EC4E  F039         	call	___lwmod	;wreg free
 11372  005616  5001               	movf	?___lwmod,w,c
 11373  005618  6E10               	movwf	utoa@c,c
 11374  00561A  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 11375  00561E  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 11376  005622  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11377  005626  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11378  00562A  ECD6  F037         	call	___lwdiv	;wreg free
 11379  00562E  C001  F00A         	movff	?___lwdiv,utoa@val
 11380  005632  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 11381  005636  0E09               	movlw	9
 11382  005638  6410               	cpfsgt	utoa@c,c
 11383  00563A  D002               	goto	l3346
 11384  00563C  0E07               	movlw	7
 11385  00563E  2610               	addwf	utoa@c,f,c
 11386  005640                     l3346:
 11387  005640  0E30               	movlw	48
 11388  005642  2610               	addwf	utoa@c,f,c
 11389  005644  C008  FFD9         	movff	utoa@buf,fsr2l
 11390  005648  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11391  00564C  C010  FFDF         	movff	utoa@c,indf2
 11392  005650  0608               	decf	utoa@buf,f,c
 11393  005652  A0D8               	btfss	status,0,c
 11394  005654  0609               	decf	utoa@buf+1,f,c
 11395  005656  500A               	movf	utoa@val,w,c
 11396  005658  100B               	iorwf	utoa@val+1,w,c
 11397  00565A  A4D8               	btfss	status,2,c
 11398  00565C  D7D2               	goto	l3345
 11399                           
 11400                           ;	Return value of _utoa is never used
 11401  00565E  4A08               	infsnz	utoa@buf,f,c
 11402  005660  2A09               	incf	utoa@buf+1,f,c
 11403  005662  0012               	return	
 11404  005664                     __end_of_utoa:
 11405                           	opt stack 0
 11406                           tblptru	equ	0xFF8
 11407                           tblptrh	equ	0xFF7
 11408                           tblptrl	equ	0xFF6
 11409                           tablat	equ	0xFF5
 11410                           prodh	equ	0xFF4
 11411                           prodl	equ	0xFF3
 11412                           intcon	equ	0xFF2
 11413                           intcon2	equ	0xFF1
 11414                           intcon3	equ	0xFF0
 11415                           postinc0	equ	0xFEE
 11416                           wreg	equ	0xFE8
 11417                           postdec1	equ	0xFE5
 11418                           plusw1	equ	0xFE3
 11419                           fsr1h	equ	0xFE2
 11420                           fsr1l	equ	0xFE1
 11421                           indf2	equ	0xFDF
 11422                           postinc2	equ	0xFDE
 11423                           plusw2	equ	0xFDB
 11424                           fsr2h	equ	0xFDA
 11425                           fsr2l	equ	0xFD9
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function ___lwmod *****************
 11429 ;; Defined at:
 11430 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  dividend        2    0[COMRAM] unsigned int 
 11433 ;;  divisor         2    2[COMRAM] unsigned int 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  counter         1    4[COMRAM] unsigned char 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  2    0[COMRAM] unsigned int 
 11438 ;; Registers used:
 11439 ;;		wreg, status,2, status,0
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;Total ram usage:        5 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_utoa
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text46
 11459  00729C                     __ptext46:
 11460                           	opt stack 0
 11461  00729C                     ___lwmod:
 11462                           	opt stack 25
 11463                           
 11464                           ;incstack = 0
 11465  00729C  5003               	movf	___lwmod@divisor,w,c
 11466  00729E  1004               	iorwf	___lwmod@divisor+1,w,c
 11467  0072A0  B4D8               	btfsc	status,2,c
 11468  0072A2  D018               	goto	l3170
 11469  0072A4  0E01               	movlw	1
 11470  0072A6  6E05               	movwf	___lwmod@counter,c
 11471  0072A8  D004               	goto	l3165
 11472  0072AA  90D8               	bcf	status,0,c
 11473  0072AC  3603               	rlcf	___lwmod@divisor,f,c
 11474  0072AE  3604               	rlcf	___lwmod@divisor+1,f,c
 11475  0072B0  2A05               	incf	___lwmod@counter,f,c
 11476  0072B2                     l3165:
 11477  0072B2  AE04               	btfss	___lwmod@divisor+1,7,c
 11478  0072B4  D7FA               	goto	l3166
 11479  0072B6                     u6880:
 11480  0072B6  5003               	movf	___lwmod@divisor,w,c
 11481  0072B8  5C01               	subwf	___lwmod@dividend,w,c
 11482  0072BA  5004               	movf	___lwmod@divisor+1,w,c
 11483  0072BC  5802               	subwfb	___lwmod@dividend+1,w,c
 11484  0072BE  A0D8               	btfss	status,0,c
 11485  0072C0  D004               	goto	l3169
 11486  0072C2  5003               	movf	___lwmod@divisor,w,c
 11487  0072C4  5E01               	subwf	___lwmod@dividend,f,c
 11488  0072C6  5004               	movf	___lwmod@divisor+1,w,c
 11489  0072C8  5A02               	subwfb	___lwmod@dividend+1,f,c
 11490  0072CA                     l3169:
 11491  0072CA  90D8               	bcf	status,0,c
 11492  0072CC  3204               	rrcf	___lwmod@divisor+1,f,c
 11493  0072CE  3203               	rrcf	___lwmod@divisor,f,c
 11494  0072D0  2E05               	decfsz	___lwmod@counter,f,c
 11495  0072D2  D7F1               	goto	u6880
 11496  0072D4                     l3170:
 11497  0072D4  C001  F001         	movff	___lwmod@dividend,?___lwmod
 11498  0072D8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 11499  0072DC  0012               	return		;funcret
 11500  0072DE                     __end_of___lwmod:
 11501                           	opt stack 0
 11502                           tblptru	equ	0xFF8
 11503                           tblptrh	equ	0xFF7
 11504                           tblptrl	equ	0xFF6
 11505                           tablat	equ	0xFF5
 11506                           prodh	equ	0xFF4
 11507                           prodl	equ	0xFF3
 11508                           intcon	equ	0xFF2
 11509                           intcon2	equ	0xFF1
 11510                           intcon3	equ	0xFF0
 11511                           postinc0	equ	0xFEE
 11512                           wreg	equ	0xFE8
 11513                           postdec1	equ	0xFE5
 11514                           plusw1	equ	0xFE3
 11515                           fsr1h	equ	0xFE2
 11516                           fsr1l	equ	0xFE1
 11517                           indf2	equ	0xFDF
 11518                           postinc2	equ	0xFDE
 11519                           plusw2	equ	0xFDB
 11520                           fsr2h	equ	0xFDA
 11521                           fsr2l	equ	0xFD9
 11522                           status	equ	0xFD8
 11523                           
 11524 ;; *************** function ___lwdiv *****************
 11525 ;; Defined at:
 11526 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;  dividend        2    0[COMRAM] unsigned int 
 11529 ;;  divisor         2    2[COMRAM] unsigned int 
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;  quotient        2    4[COMRAM] unsigned int 
 11532 ;;  counter         1    6[COMRAM] unsigned char 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  2    0[COMRAM] unsigned int 
 11535 ;; Registers used:
 11536 ;;		wreg, status,2, status,0
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11543 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11546 ;;Total ram usage:        7 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; This function calls:
 11549 ;;		Nothing
 11550 ;; This function is called by:
 11551 ;;		_utoa
 11552 ;; This function uses a non-reentrant model
 11553 ;;
 11554                           
 11555                           	psect	text47
 11556  006FAC                     __ptext47:
 11557                           	opt stack 0
 11558  006FAC                     ___lwdiv:
 11559                           	opt stack 25
 11560                           
 11561                           ;incstack = 0
 11562  006FAC  0E00               	movlw	0
 11563  006FAE  6E06               	movwf	___lwdiv@quotient+1,c
 11564  006FB0  0E00               	movlw	0
 11565  006FB2  6E05               	movwf	___lwdiv@quotient,c
 11566  006FB4  5003               	movf	___lwdiv@divisor,w,c
 11567  006FB6  1004               	iorwf	___lwdiv@divisor+1,w,c
 11568  006FB8  B4D8               	btfsc	status,2,c
 11569  006FBA  D01C               	goto	l3160
 11570  006FBC  0E01               	movlw	1
 11571  006FBE  6E07               	movwf	___lwdiv@counter,c
 11572  006FC0  D004               	goto	l3155
 11573  006FC2  90D8               	bcf	status,0,c
 11574  006FC4  3603               	rlcf	___lwdiv@divisor,f,c
 11575  006FC6  3604               	rlcf	___lwdiv@divisor+1,f,c
 11576  006FC8  2A07               	incf	___lwdiv@counter,f,c
 11577  006FCA                     l3155:
 11578  006FCA  AE04               	btfss	___lwdiv@divisor+1,7,c
 11579  006FCC  D7FA               	goto	l3156
 11580  006FCE                     u6850:
 11581  006FCE  90D8               	bcf	status,0,c
 11582  006FD0  3605               	rlcf	___lwdiv@quotient,f,c
 11583  006FD2  3606               	rlcf	___lwdiv@quotient+1,f,c
 11584  006FD4  5003               	movf	___lwdiv@divisor,w,c
 11585  006FD6  5C01               	subwf	___lwdiv@dividend,w,c
 11586  006FD8  5004               	movf	___lwdiv@divisor+1,w,c
 11587  006FDA  5802               	subwfb	___lwdiv@dividend+1,w,c
 11588  006FDC  A0D8               	btfss	status,0,c
 11589  006FDE  D005               	goto	l3159
 11590  006FE0  5003               	movf	___lwdiv@divisor,w,c
 11591  006FE2  5E01               	subwf	___lwdiv@dividend,f,c
 11592  006FE4  5004               	movf	___lwdiv@divisor+1,w,c
 11593  006FE6  5A02               	subwfb	___lwdiv@dividend+1,f,c
 11594  006FE8  8005               	bsf	___lwdiv@quotient,0,c
 11595  006FEA                     l3159:
 11596  006FEA  90D8               	bcf	status,0,c
 11597  006FEC  3204               	rrcf	___lwdiv@divisor+1,f,c
 11598  006FEE  3203               	rrcf	___lwdiv@divisor,f,c
 11599  006FF0  2E07               	decfsz	___lwdiv@counter,f,c
 11600  006FF2  D7ED               	goto	u6850
 11601  006FF4                     l3160:
 11602  006FF4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 11603  006FF8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11604  006FFC  0012               	return		;funcret
 11605  006FFE                     __end_of___lwdiv:
 11606                           	opt stack 0
 11607                           tblptru	equ	0xFF8
 11608                           tblptrh	equ	0xFF7
 11609                           tblptrl	equ	0xFF6
 11610                           tablat	equ	0xFF5
 11611                           prodh	equ	0xFF4
 11612                           prodl	equ	0xFF3
 11613                           intcon	equ	0xFF2
 11614                           intcon2	equ	0xFF1
 11615                           intcon3	equ	0xFF0
 11616                           postinc0	equ	0xFEE
 11617                           wreg	equ	0xFE8
 11618                           postdec1	equ	0xFE5
 11619                           plusw1	equ	0xFE3
 11620                           fsr1h	equ	0xFE2
 11621                           fsr1l	equ	0xFE1
 11622                           indf2	equ	0xFDF
 11623                           postinc2	equ	0xFDE
 11624                           plusw2	equ	0xFDB
 11625                           fsr2h	equ	0xFDA
 11626                           fsr2l	equ	0xFD9
 11627                           status	equ	0xFD8
 11628                           
 11629 ;; *************** function _bootloader_run *****************
 11630 ;; Defined at:
 11631 ;;		line 60 in file "bootloader.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  timeslot        1    wreg     unsigned char 
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;  timeslot        1   93[COMRAM] unsigned char 
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      void 
 11638 ;; Registers used:
 11639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11649 ;;Total ram usage:        1 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; Hardware stack levels required when called:   11
 11652 ;; This function calls:
 11653 ;;		__bootloader_find_file
 11654 ;;		__bootloader_program
 11655 ;;		__bootloader_verify_file
 11656 ;; This function is called by:
 11657 ;;		_main
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text48
 11662  0070F0                     __ptext48:
 11663                           	opt stack 0
 11664  0070F0                     _bootloader_run:
 11665                           	opt stack 19
 11666                           
 11667                           ;incstack = 0
 11668                           ;bootloader_run@timeslot stored from wreg
 11669  0070F0  6E5E               	movwf	bootloader_run@timeslot,c
 11670                           
 11671                           ;bootloader.c: 62: switch(os.bootloader_mode)
 11672  0070F2  D00F               	goto	l2154
 11673  0070F4                     
 11674                           ;bootloader.c: 65: _bootloader_find_file();
 11675  0070F4  EC83  F02B         	call	__bootloader_find_file	;wreg free
 11676                           
 11677                           ;bootloader.c: 66: break;
 11678  0070F8  0012               	return	
 11679  0070FA                     
 11680                           ;bootloader.c: 69: _bootloader_find_file();
 11681  0070FA  EC83  F02B         	call	__bootloader_find_file	;wreg free
 11682                           
 11683                           ;bootloader.c: 70: break;
 11684  0070FE  0012               	return	
 11685  007100                     
 11686                           ;bootloader.c: 73: _bootloader_verify_file();
 11687  007100  EC13  F009         	call	__bootloader_verify_file	;wreg free
 11688                           
 11689                           ;bootloader.c: 80: break;
 11690                           
 11691                           ;bootloader.c: 79: case BOOTLOADER_MODE_CHECK_FAILED:
 11692                           
 11693                           ;bootloader.c: 77: break;
 11694                           
 11695                           ;bootloader.c: 76: case BOOTLOADER_MODE_CHECK_COMPLETE:
 11696                           
 11697                           ;bootloader.c: 74: break;
 11698  007104  0012               	return	
 11699  007106                     
 11700                           ;bootloader.c: 83: if(timeslot==0)
 11701  007106  505E               	movf	bootloader_run@timeslot,w,c
 11702  007108  A4D8               	btfss	status,2,c
 11703  00710A  0012               	return	
 11704                           
 11705                           ;bootloader.c: 84: {;bootloader.c: 85: _bootloader_program();
 11706  00710C  ECE4  F005         	call	__bootloader_program	;wreg free
 11707                           
 11708                           ;bootloader.c: 91: }
 11709                           
 11710                           ;bootloader.c: 90: break;
 11711                           
 11712                           ;bootloader.c: 89: case BOOTLOADER_MODE_DONE:
 11713                           
 11714                           ;bootloader.c: 86: };bootloader.c: 87: break;
 11715  007110  0012               	return	
 11716  007112                     l2154:
 11717  007112  0100               	movlb	0	; () banked
 11718  007114  5164               	movf	(_os+4)& (0+255),w,b	;volatile
 11719                           
 11720                           ; Switch size 1, requested type "space"
 11721                           ; Number of cases is 7, Range of values is 0 to 96
 11722                           ; switch strategies available:
 11723                           ; Name         Instructions Cycles
 11724                           ; simple_byte           22    12 (average)
 11725                           ;	Chosen strategy is simple_byte
 11726  007116  0A00               	xorlw	0	; case 0
 11727  007118  B4D8               	btfsc	status,2,c
 11728  00711A  D7EC               	goto	l2155
 11729  00711C  0A10               	xorlw	16	; case 16
 11730  00711E  B4D8               	btfsc	status,2,c
 11731  007120  D7EC               	goto	l2157
 11732  007122  0A30               	xorlw	48	; case 32
 11733  007124  B4D8               	btfsc	status,2,c
 11734  007126  D7EC               	goto	l2158
 11735  007128  0A10               	xorlw	16	; case 48
 11736  00712A  B4D8               	btfsc	status,2,c
 11737  00712C  0012               	return	
 11738  00712E  0A70               	xorlw	112	; case 64
 11739  007130  B4D8               	btfsc	status,2,c
 11740  007132  0012               	return	
 11741  007134  0A10               	xorlw	16	; case 80
 11742  007136  B4D8               	btfsc	status,2,c
 11743  007138  D7E6               	goto	l2161
 11744  00713A  0A30               	xorlw	48	; case 96
 11745  00713C  0012               	return	
 11746  00713E                     __end_of_bootloader_run:
 11747                           	opt stack 0
 11748                           tblptru	equ	0xFF8
 11749                           tblptrh	equ	0xFF7
 11750                           tblptrl	equ	0xFF6
 11751                           tablat	equ	0xFF5
 11752                           prodh	equ	0xFF4
 11753                           prodl	equ	0xFF3
 11754                           intcon	equ	0xFF2
 11755                           intcon2	equ	0xFF1
 11756                           intcon3	equ	0xFF0
 11757                           postinc0	equ	0xFEE
 11758                           wreg	equ	0xFE8
 11759                           postdec1	equ	0xFE5
 11760                           plusw1	equ	0xFE3
 11761                           fsr1h	equ	0xFE2
 11762                           fsr1l	equ	0xFE1
 11763                           indf2	equ	0xFDF
 11764                           postinc2	equ	0xFDE
 11765                           plusw2	equ	0xFDB
 11766                           fsr2h	equ	0xFDA
 11767                           fsr2l	equ	0xFD9
 11768                           status	equ	0xFD8
 11769                           
 11770 ;; *************** function __bootloader_verify_file *****************
 11771 ;; Defined at:
 11772 ;;		line 167 in file "bootloader.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;		None
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;  address32       4   50[BANK0 ] unsigned long 
 11777 ;;  return_value    4   46[BANK0 ] unsigned long 
 11778 ;;  rec_counter     1   45[BANK0 ] unsigned char 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      void 
 11781 ;; Registers used:
 11782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11789 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11790 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11791 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11792 ;;Total ram usage:       17 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:   10
 11795 ;; This function calls:
 11796 ;;		__bootloader_check_address
 11797 ;;		_fat_get_file_size
 11798 ;;		_fat_read_from_file
 11799 ;;		_parseHexFileEntry
 11800 ;; This function is called by:
 11801 ;;		_bootloader_run
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text49
 11806  001226                     __ptext49:
 11807                           	opt stack 0
 11808  001226                     __bootloader_verify_file:
 11809                           	opt stack 19
 11810                           
 11811                           ;bootloader.c: 169: uint8_t rec_counter;;bootloader.c: 170: uint32_t return_value = 0;
 11812                           
 11813                           ;incstack = 0
 11814  001226  0E00               	movlw	0
 11815  001228  0100               	movlb	0	; () banked
 11816  00122A  6FEA               	movwf	__bootloader_verify_file@return_value& (0+255),b
 11817  00122C  0E00               	movlw	0
 11818  00122E  6FEB               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
 11819  001230  0E00               	movlw	0
 11820  001232  6FEC               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
 11821  001234  0E00               	movlw	0
 11822  001236  6FED               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;bootloader.c: 171: uint32_t address32;;bootloader.c: 174: hex_file_size = fat_get_file_
      +                          size(file_number);
 11826  001238  51FF               	movf	_file_number& (0+255),w,b
 11827  00123A  EC27  F032         	call	_fat_get_file_size
 11828  00123E  C031  F078         	movff	?_fat_get_file_size,_hex_file_size
 11829  001242  C032  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11830  001246  C033  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11831  00124A  C034  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11832                           
 11833                           ;bootloader.c: 177: for(rec_counter=0; rec_counter<1; ++rec_counter)
 11834  00124E  0E00               	movlw	0
 11835  001250  0100               	movlb	0	; () banked
 11836  001252  6FE9               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
 11837  001254                     l13613:
 11838                           
 11839                           ; BSR set to: 0
 11840  001254  51E9               	movf	__bootloader_verify_file@rec_counter& (0+255),w,b
 11841  001256  A4D8               	btfss	status,2,c
 11842  001258  0012               	return	
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;bootloader.c: 178: {;bootloader.c: 180: if((hex_file_size-hex_file_offset)>=50)
 11846                           
 11847                           ; BSR set to: 0
 11848                           
 11849                           ; BSR set to: 0
 11850  00125A  C07C  F056         	movff	_hex_file_offset,??__bootloader_verify_file
 11851  00125E  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 11852  001262  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 11853  001266  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 11854  00126A  1E56               	comf	??__bootloader_verify_file,f,c
 11855  00126C  1E57               	comf	??__bootloader_verify_file+1,f,c
 11856  00126E  1E58               	comf	??__bootloader_verify_file+2,f,c
 11857  001270  1E59               	comf	??__bootloader_verify_file+3,f,c
 11858  001272  2A56               	incf	??__bootloader_verify_file,f,c
 11859  001274  0E00               	movlw	0
 11860  001276  2257               	addwfc	??__bootloader_verify_file+1,f,c
 11861  001278  2258               	addwfc	??__bootloader_verify_file+2,f,c
 11862  00127A  2259               	addwfc	??__bootloader_verify_file+3,f,c
 11863  00127C  5178               	movf	_hex_file_size& (0+255),w,b
 11864  00127E  2456               	addwf	??__bootloader_verify_file,w,c
 11865  001280  6E5A               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 11866  001282  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 11867  001284  2057               	addwfc	??__bootloader_verify_file+1,w,c
 11868  001286  6E5B               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 11869  001288  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 11870  00128A  2058               	addwfc	??__bootloader_verify_file+2,w,c
 11871  00128C  6E5C               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 11872  00128E  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 11873  001290  2059               	addwfc	??__bootloader_verify_file+3,w,c
 11874  001292  6E5D               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 11875  001294  505D               	movf	??__bootloader_verify_file+7,w,c
 11876  001296  105C               	iorwf	??__bootloader_verify_file+6,w,c
 11877  001298  105B               	iorwf	??__bootloader_verify_file+5,w,c
 11878  00129A  E104               	bnz	u10780
 11879  00129C  0E32               	movlw	50
 11880  00129E  5C5A               	subwf	??__bootloader_verify_file+4,w,c
 11881  0012A0  A0D8               	btfss	status,0,c
 11882  0012A2  D018               	goto	l2186
 11883  0012A4                     u10780:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;bootloader.c: 181: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 11887  0012A4  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 11888  0012A8  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 11889  0012AC  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 11890  0012B0  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 11891  0012B4  0E32               	movlw	50
 11892  0012B6  6E44               	movwf	fat_read_from_file@length,c
 11893  0012B8  0E00               	movlw	0
 11894  0012BA  6E45               	movwf	fat_read_from_file@length+1,c
 11895  0012BC  0E00               	movlw	0
 11896  0012BE  6E46               	movwf	fat_read_from_file@length+2,c
 11897  0012C0  0E00               	movlw	0
 11898  0012C2  6E47               	movwf	fat_read_from_file@length+3,c
 11899  0012C4  0E80               	movlw	low _file_buffer
 11900  0012C6  6E48               	movwf	fat_read_from_file@data,c
 11901  0012C8  0E02               	movlw	high _file_buffer
 11902  0012CA  6E49               	movwf	fat_read_from_file@data+1,c
 11903  0012CC  51FF               	movf	_file_number& (0+255),w,b
 11904  0012CE  EC78  F00F         	call	_fat_read_from_file
 11905  0012D2  D02D               	goto	l2187
 11906  0012D4                     l2186:
 11907                           
 11908                           ;bootloader.c: 182: else;bootloader.c: 183: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
 11909  0012D4  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 11910  0012D8  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 11911  0012DC  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 11912  0012E0  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 11913  0012E4  C07C  F056         	movff	_hex_file_offset,??__bootloader_verify_file
 11914  0012E8  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 11915  0012EC  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 11916  0012F0  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 11917  0012F4  1E56               	comf	??__bootloader_verify_file,f,c
 11918  0012F6  1E57               	comf	??__bootloader_verify_file+1,f,c
 11919  0012F8  1E58               	comf	??__bootloader_verify_file+2,f,c
 11920  0012FA  1E59               	comf	??__bootloader_verify_file+3,f,c
 11921  0012FC  2A56               	incf	??__bootloader_verify_file,f,c
 11922  0012FE  0E00               	movlw	0
 11923  001300  2257               	addwfc	??__bootloader_verify_file+1,f,c
 11924  001302  2258               	addwfc	??__bootloader_verify_file+2,f,c
 11925  001304  2259               	addwfc	??__bootloader_verify_file+3,f,c
 11926  001306  0100               	movlb	0	; () banked
 11927  001308  5178               	movf	_hex_file_size& (0+255),w,b
 11928  00130A  2456               	addwf	??__bootloader_verify_file,w,c
 11929  00130C  6E44               	movwf	fat_read_from_file@length,c
 11930  00130E  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 11931  001310  2057               	addwfc	??__bootloader_verify_file+1,w,c
 11932  001312  6E45               	movwf	fat_read_from_file@length+1,c
 11933  001314  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 11934  001316  2058               	addwfc	??__bootloader_verify_file+2,w,c
 11935  001318  6E46               	movwf	fat_read_from_file@length+2,c
 11936  00131A  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 11937  00131C  2059               	addwfc	??__bootloader_verify_file+3,w,c
 11938  00131E  6E47               	movwf	fat_read_from_file@length+3,c
 11939  001320  0E80               	movlw	low _file_buffer
 11940  001322  6E48               	movwf	fat_read_from_file@data,c
 11941  001324  0E02               	movlw	high _file_buffer
 11942  001326  6E49               	movwf	fat_read_from_file@data+1,c
 11943  001328  51FF               	movf	_file_number& (0+255),w,b
 11944  00132A  EC78  F00F         	call	_fat_read_from_file
 11945  00132E                     l2187:
 11946                           
 11947                           ;bootloader.c: 185: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 11948  00132E  0E80               	movlw	low _file_buffer
 11949  001330  6E0C               	movwf	parseHexFileEntry@data,c
 11950  001332  0E02               	movlw	high _file_buffer
 11951  001334  6E0D               	movwf	parseHexFileEntry@data+1,c
 11952  001336  0E00               	movlw	0
 11953  001338  6E0E               	movwf	parseHexFileEntry@offset,c
 11954  00133A  0E00               	movlw	0
 11955  00133C  6E0F               	movwf	parseHexFileEntry@offset+1,c
 11956  00133E  0E00               	movlw	0
 11957  001340  6E10               	movwf	parseHexFileEntry@offset+2,c
 11958  001342  0E00               	movlw	0
 11959  001344  6E11               	movwf	parseHexFileEntry@offset+3,c
 11960  001346  0EBE               	movlw	low _hex_file_entry
 11961  001348  6E12               	movwf	parseHexFileEntry@hexEntry,c
 11962  00134A  0E01               	movlw	high _hex_file_entry
 11963  00134C  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 11964  00134E  EC10  F000         	call	_parseHexFileEntry	;wreg free
 11965  001352  C00C  F0EA         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 11966  001356  C00D  F0EB         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 11967  00135A  C00E  F0EC         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 11968  00135E  C00F  F0ED         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 11969                           
 11970                           ;bootloader.c: 188: ++hex_file_entries;
 11971  001362  0100               	movlb	0	; () banked
 11972  001364  4B84               	infsnz	_hex_file_entries& (0+255),f,b
 11973  001366  2B85               	incf	(_hex_file_entries+1)& (0+255),f,b
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;bootloader.c: 191: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 11977  001368  0E04               	movlw	4
 11978  00136A  0101               	movlb	1	; () banked
 11979  00136C  19C2               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 11980  00136E  A4D8               	btfss	status,2,c
 11981  001370  D01C               	goto	l2188
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;bootloader.c: 192: {;bootloader.c: 193: extended_linear_address = hex_file_entry.data[0
      +                          ];
 11985  001372  51C3               	movf	(_hex_file_entry+5)& (0+255),w,b
 11986  001374  6F40               	movwf	_extended_linear_address& (0+255),b
 11987  001376  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 11988  001378  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 11989  00137A  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 11990                           
 11991                           ; BSR set to: 1
 11992                           ;bootloader.c: 194: extended_linear_address <<= 8;
 11993  00137C  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 11994  001380  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 11995  001384  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 11996  001388  6B40               	clrf	_extended_linear_address& (0+255),b
 11997                           
 11998                           ; BSR set to: 1
 11999                           ;bootloader.c: 195: extended_linear_address |= hex_file_entry.data[1];
 12000  00138A  51C4               	movf	(_hex_file_entry+6)& (0+255),w,b
 12001  00138C  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12002                           
 12003                           ; BSR set to: 1
 12004                           ;bootloader.c: 196: extended_linear_address <<= 8;
 12005  00138E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12006  001392  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12007  001396  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12008  00139A  6B40               	clrf	_extended_linear_address& (0+255),b
 12009                           
 12010                           ; BSR set to: 1
 12011                           ;bootloader.c: 197: extended_linear_address <<= 8;
 12012  00139C  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12013  0013A0  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12014  0013A4  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12015  0013A8  6B40               	clrf	_extended_linear_address& (0+255),b
 12016  0013AA                     l2188:
 12017                           
 12018                           ; BSR set to: 1
 12019                           ;bootloader.c: 198: };bootloader.c: 201: if(hex_file_entry.recordType==RecordTypeData)
 12020                           
 12021                           ; BSR set to: 1
 12022  0013AA  51C2               	movf	(_hex_file_entry+4)& (0+255),w,b
 12023  0013AC  A4D8               	btfss	status,2,c
 12024  0013AE  D05D               	goto	l2192
 12025                           
 12026                           ; BSR set to: 1
 12027                           ;bootloader.c: 202: {;bootloader.c: 204: address32 = extended_linear_address + hex_file_
      +                          entry.address;
 12028  0013B0  51C0               	movf	(_hex_file_entry+2)& (0+255),w,b
 12029  0013B2  2540               	addwf	_extended_linear_address& (0+255),w,b
 12030  0013B4  0100               	movlb	0	; () banked
 12031  0013B6  6FEE               	movwf	__bootloader_verify_file@address32& (0+255),b
 12032  0013B8  0101               	movlb	1	; () banked
 12033  0013BA  51C1               	movf	(_hex_file_entry+3)& (0+255),w,b
 12034  0013BC  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12035  0013BE  0100               	movlb	0	; () banked
 12036  0013C0  6FEF               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
 12037  0013C2  0E00               	movlw	0
 12038  0013C4  0101               	movlb	1	; () banked
 12039  0013C6  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12040  0013C8  0100               	movlb	0	; () banked
 12041  0013CA  6FF0               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
 12042  0013CC  0E00               	movlw	0
 12043  0013CE  0101               	movlb	1	; () banked
 12044  0013D0  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12045  0013D2  0100               	movlb	0	; () banked
 12046  0013D4  6FF1               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
 12047                           
 12048                           ;bootloader.c: 207: if(address32<file_minimum_address)
 12049  0013D6  0101               	movlb	1	; () banked
 12050  0013D8  5148               	movf	_file_minimum_address& (0+255),w,b
 12051  0013DA  0100               	movlb	0	; () banked
 12052  0013DC  5DEE               	subwf	__bootloader_verify_file@address32& (0+255),w,b
 12053  0013DE  0101               	movlb	1	; () banked
 12054  0013E0  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
 12055  0013E2  0100               	movlb	0	; () banked
 12056  0013E4  59EF               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12057  0013E6  0101               	movlb	1	; () banked
 12058  0013E8  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
 12059  0013EA  0100               	movlb	0	; () banked
 12060  0013EC  59F0               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12061  0013EE  0101               	movlb	1	; () banked
 12062  0013F0  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
 12063  0013F2  0100               	movlb	0	; () banked
 12064  0013F4  59F1               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12065  0013F6  B0D8               	btfsc	status,0,c
 12066  0013F8  D008               	goto	l2190
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;bootloader.c: 208: {;bootloader.c: 209: file_minimum_address = address32;
 12070  0013FA  C0EE  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
 12071  0013FE  C0EF  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 12072  001402  C0F0  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 12073  001406  C0F1  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 12074  00140A                     l2190:
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;bootloader.c: 210: };bootloader.c: 211: if(address32>file_maximum_address)
 12078                           
 12079                           ; BSR set to: 0
 12080  00140A  51EE               	movf	__bootloader_verify_file@address32& (0+255),w,b
 12081  00140C  0101               	movlb	1	; () banked
 12082  00140E  5D44               	subwf	_file_maximum_address& (0+255),w,b
 12083  001410  0100               	movlb	0	; () banked
 12084  001412  51EF               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12085  001414  0101               	movlb	1	; () banked
 12086  001416  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 12087  001418  0100               	movlb	0	; () banked
 12088  00141A  51F0               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12089  00141C  0101               	movlb	1	; () banked
 12090  00141E  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 12091  001420  0100               	movlb	0	; () banked
 12092  001422  51F1               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12093  001424  0101               	movlb	1	; () banked
 12094  001426  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 12095  001428  B0D8               	btfsc	status,0,c
 12096  00142A  D008               	goto	l2191
 12097                           
 12098                           ; BSR set to: 1
 12099                           ;bootloader.c: 212: {;bootloader.c: 213: file_maximum_address = address32;
 12100  00142C  C0EE  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
 12101  001430  C0EF  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 12102  001434  C0F0  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 12103  001438  C0F1  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 12104  00143C                     l2191:
 12105                           
 12106                           ; BSR set to: 1
 12107                           ;bootloader.c: 214: };bootloader.c: 217: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
 12108                           
 12109                           ; BSR set to: 1
 12110  00143C  C0EE  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 12111  001440  C0EF  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 12112  001444  C0F0  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 12113  001448  C0F1  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 12114  00144C  C1BE  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 12115  001450  EC0F  F024         	call	__bootloader_check_address	;wreg free
 12116  001454  0AFF               	xorlw	255
 12117  001456  A4D8               	btfss	status,2,c
 12118  001458  D008               	goto	l2192
 12119                           
 12120                           ;bootloader.c: 218: {;bootloader.c: 220: last_error = ShortRecordErrorAddressRange;
 12121  00145A  0E0B               	movlw	11
 12122  00145C  0100               	movlb	0	; () banked
 12123  00145E  6F9C               	movwf	_last_error& (0+255),b
 12124                           
 12125                           ;bootloader.c: 222: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12126  001460  0E40               	movlw	64
 12127  001462  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12128                           
 12129                           ;bootloader.c: 223: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12130  001464  0E40               	movlw	64
 12131  001466  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12132                           
 12133                           ;bootloader.c: 224: break;
 12134  001468  0012               	return	
 12135  00146A                     l2192:
 12136                           
 12137                           ;bootloader.c: 225: };bootloader.c: 226: };bootloader.c: 228: if(return_value==0)
 12138                           
 12139                           ; BSR set to: 0
 12140                           
 12141                           ; BSR set to: 0
 12142  00146A  0100               	movlb	0	; () banked
 12143  00146C  51EA               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12144  00146E  11EB               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12145  001470  11EC               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12146  001472  11ED               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12147  001474  A4D8               	btfss	status,2,c
 12148  001476  D025               	goto	l2193
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;bootloader.c: 229: {;bootloader.c: 232: total_hex_file_entries = hex_file_entries;
 12152  001478  C084  F168         	movff	_hex_file_entries,_total_hex_file_entries
 12153  00147C  C085  F169         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;bootloader.c: 233: hex_file_entries = 0;
 12157  001480  0E00               	movlw	0
 12158  001482  6F85               	movwf	(_hex_file_entries+1)& (0+255),b
 12159  001484  0E00               	movlw	0
 12160  001486  6F84               	movwf	_hex_file_entries& (0+255),b
 12161                           
 12162                           ;bootloader.c: 234: hex_file_offset = 0;
 12163  001488  0E00               	movlw	0
 12164  00148A  6F7C               	movwf	_hex_file_offset& (0+255),b
 12165  00148C  0E00               	movlw	0
 12166  00148E  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 12167  001490  0E00               	movlw	0
 12168  001492  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 12169  001494  0E00               	movlw	0
 12170  001496  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 12171                           
 12172                           ;bootloader.c: 235: extended_linear_address = 0;
 12173  001498  0E00               	movlw	0
 12174  00149A  0101               	movlb	1	; () banked
 12175  00149C  6F40               	movwf	_extended_linear_address& (0+255),b
 12176  00149E  0E00               	movlw	0
 12177  0014A0  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 12178  0014A2  0E00               	movlw	0
 12179  0014A4  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 12180  0014A6  0E00               	movlw	0
 12181  0014A8  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 12182                           
 12183                           ;bootloader.c: 236: flash_pages_written = 0;
 12184  0014AA  0E00               	movlw	0
 12185  0014AC  6F67               	movwf	(_flash_pages_written+1)& (0+255),b
 12186  0014AE  0E00               	movlw	0
 12187  0014B0  6F66               	movwf	_flash_pages_written& (0+255),b
 12188                           
 12189                           ;bootloader.c: 237: start_from_byte_next = 0;
 12190  0014B2  0E00               	movlw	0
 12191  0014B4  0100               	movlb	0	; () banked
 12192  0014B6  6F9B               	movwf	_start_from_byte_next& (0+255),b
 12193                           
 12194                           ;bootloader.c: 239: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 12195  0014B8  0E30               	movlw	48
 12196  0014BA  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12197                           
 12198                           ;bootloader.c: 240: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 12199  0014BC  0E30               	movlw	48
 12200  0014BE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12201                           
 12202                           ;bootloader.c: 241: break;
 12203  0014C0  0012               	return	
 12204  0014C2                     l2193:
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;bootloader.c: 243: else if(return_value>0xFFFFFFF0)
 12208                           
 12209                           ; BSR set to: 0
 12210  0014C2  0EF1               	movlw	241
 12211  0014C4  5DEA               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
 12212  0014C6  0EFF               	movlw	255
 12213  0014C8  59EB               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12214  0014CA  0EFF               	movlw	255
 12215  0014CC  59EC               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12216  0014CE  0EFF               	movlw	255
 12217  0014D0  59ED               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12218  0014D2  A0D8               	btfss	status,0,c
 12219  0014D4  D007               	goto	l2195
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;bootloader.c: 244: {;bootloader.c: 246: last_error = return_value & 0xF;
 12223  0014D6  51EA               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12224  0014D8  0B0F               	andlw	15
 12225  0014DA  6F9C               	movwf	_last_error& (0+255),b
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;bootloader.c: 248: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12229  0014DC  0E40               	movlw	64
 12230  0014DE  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;bootloader.c: 249: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12234  0014E0  0E40               	movlw	64
 12235  0014E2  D7ED               	goto	L1
 12236  0014E4                     l2195:
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;bootloader.c: 252: else;bootloader.c: 253: {;bootloader.c: 255: hex_file_offset += retu
      +                          rn_value;
 12240                           
 12241                           ; BSR set to: 0
 12242  0014E4  51EA               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12243  0014E6  277C               	addwf	_hex_file_offset& (0+255),f,b
 12244  0014E8  51EB               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12245  0014EA  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12246  0014EC  51EC               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12247  0014EE  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12248  0014F0  51ED               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12249  0014F2  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12250                           
 12251                           ; BSR set to: 0
 12252                           
 12253                           ; BSR set to: 0
 12254                           
 12255                           ; BSR set to: 0
 12256  0014F4  2BE9               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
 12257  0014F6  D6AE               	goto	l13613
 12258  0014F8                     __end_of__bootloader_verify_file:
 12259                           	opt stack 0
 12260                           tblptru	equ	0xFF8
 12261                           tblptrh	equ	0xFF7
 12262                           tblptrl	equ	0xFF6
 12263                           tablat	equ	0xFF5
 12264                           prodh	equ	0xFF4
 12265                           prodl	equ	0xFF3
 12266                           intcon	equ	0xFF2
 12267                           intcon2	equ	0xFF1
 12268                           intcon3	equ	0xFF0
 12269                           postinc0	equ	0xFEE
 12270                           wreg	equ	0xFE8
 12271                           postdec1	equ	0xFE5
 12272                           plusw1	equ	0xFE3
 12273                           fsr1h	equ	0xFE2
 12274                           fsr1l	equ	0xFE1
 12275                           indf2	equ	0xFDF
 12276                           postinc2	equ	0xFDE
 12277                           plusw2	equ	0xFDB
 12278                           fsr2h	equ	0xFDA
 12279                           fsr2l	equ	0xFD9
 12280                           status	equ	0xFD8
 12281                           
 12282 ;; *************** function __bootloader_program *****************
 12283 ;; Defined at:
 12284 ;;		line 260 in file "bootloader.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;		None
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;  address32       4   55[BANK0 ] unsigned long 
 12289 ;;  return_value    4   51[BANK0 ] unsigned long 
 12290 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 12291 ;;  cntr            2   60[BANK0 ] unsigned int 
 12292 ;;  address_with    2   49[BANK0 ] unsigned int 
 12293 ;;  entry_page      2   47[BANK0 ] unsigned int 
 12294 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 12295 ;;		 -> pageBuffer(1024), 
 12296 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      void 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12307 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12308 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;Total ram usage:       27 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:   10
 12313 ;; This function calls:
 12314 ;;		__bootloader_check_address
 12315 ;;		_fat_read_from_file
 12316 ;;		_internalFlash_addressWithinPage
 12317 ;;		_internalFlash_erasePage
 12318 ;;		_internalFlash_getBuffer
 12319 ;;		_internalFlash_pageFromAddress
 12320 ;;		_internalFlash_readPage
 12321 ;;		_internalFlash_writePage
 12322 ;;		_parseHexFileEntry
 12323 ;; This function is called by:
 12324 ;;		_bootloader_run
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           	psect	text50
 12329  000BC8                     __ptext50:
 12330                           	opt stack 0
 12331  000BC8                     __bootloader_program:
 12332                           	opt stack 19
 12333                           
 12334                           ;bootloader.c: 262: uint16_t cntr;;bootloader.c: 263: uint8_t* buffer;;bootloader.c: 264
      +                          : uint16_t entry_page;;bootloader.c: 265: uint16_t page_to_write = 0;
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;incstack = 0
 12338  000BC8  0E00               	movlw	0
 12339  000BCA  0100               	movlb	0	; () banked
 12340  000BCC  6FFB               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 12341  000BCE  0E00               	movlw	0
 12342  000BD0  6FFA               	movwf	__bootloader_program@page_to_write& (0+255),b
 12343                           
 12344                           ;bootloader.c: 266: uint8_t start_from_byte;;bootloader.c: 267: uint32_t address32;;boot
      +                          loader.c: 268: uint32_t return_value = 0;
 12345  000BD2  0E00               	movlw	0
 12346  000BD4  6FEF               	movwf	__bootloader_program@return_value& (0+255),b
 12347  000BD6  0E00               	movlw	0
 12348  000BD8  6FF0               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 12349  000BDA  0E00               	movlw	0
 12350  000BDC  6FF1               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 12351  000BDE  0E00               	movlw	0
 12352  000BE0  6FF2               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 12353  000BE2                     
 12354                           ;bootloader.c: 274: {;bootloader.c: 276: if((hex_file_size-hex_file_offset)>=50)
 12355                           
 12356                           ; BSR set to: 0
 12357  000BE2  C07C  F056         	movff	_hex_file_offset,??__bootloader_program
 12358  000BE6  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_program+1
 12359  000BEA  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_program+2
 12360  000BEE  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_program+3
 12361  000BF2  1E56               	comf	??__bootloader_program,f,c
 12362  000BF4  1E57               	comf	??__bootloader_program+1,f,c
 12363  000BF6  1E58               	comf	??__bootloader_program+2,f,c
 12364  000BF8  1E59               	comf	??__bootloader_program+3,f,c
 12365  000BFA  2A56               	incf	??__bootloader_program,f,c
 12366  000BFC  0E00               	movlw	0
 12367  000BFE  2257               	addwfc	??__bootloader_program+1,f,c
 12368  000C00  2258               	addwfc	??__bootloader_program+2,f,c
 12369  000C02  2259               	addwfc	??__bootloader_program+3,f,c
 12370  000C04  0100               	movlb	0	; () banked
 12371  000C06  5178               	movf	_hex_file_size& (0+255),w,b
 12372  000C08  2456               	addwf	??__bootloader_program,w,c
 12373  000C0A  6E5A               	movwf	(??__bootloader_program+4)& (0+255),c
 12374  000C0C  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12375  000C0E  2057               	addwfc	??__bootloader_program+1,w,c
 12376  000C10  6E5B               	movwf	(??__bootloader_program+5)& (0+255),c
 12377  000C12  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12378  000C14  2058               	addwfc	??__bootloader_program+2,w,c
 12379  000C16  6E5C               	movwf	(??__bootloader_program+6)& (0+255),c
 12380  000C18  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12381  000C1A  2059               	addwfc	??__bootloader_program+3,w,c
 12382  000C1C  6E5D               	movwf	(??__bootloader_program+7)& (0+255),c
 12383  000C1E  505D               	movf	??__bootloader_program+7,w,c
 12384  000C20  105C               	iorwf	??__bootloader_program+6,w,c
 12385  000C22  105B               	iorwf	??__bootloader_program+5,w,c
 12386  000C24  E104               	bnz	u10870
 12387  000C26  0E32               	movlw	50
 12388  000C28  5C5A               	subwf	??__bootloader_program+4,w,c
 12389  000C2A  A0D8               	btfss	status,0,c
 12390  000C2C  D018               	goto	l2201
 12391  000C2E                     u10870:
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;bootloader.c: 277: {;bootloader.c: 278: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
 12395  000C2E  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12396  000C32  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12397  000C36  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12398  000C3A  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12399  000C3E  0E32               	movlw	50
 12400  000C40  6E44               	movwf	fat_read_from_file@length,c
 12401  000C42  0E00               	movlw	0
 12402  000C44  6E45               	movwf	fat_read_from_file@length+1,c
 12403  000C46  0E00               	movlw	0
 12404  000C48  6E46               	movwf	fat_read_from_file@length+2,c
 12405  000C4A  0E00               	movlw	0
 12406  000C4C  6E47               	movwf	fat_read_from_file@length+3,c
 12407  000C4E  0E80               	movlw	low _file_buffer
 12408  000C50  6E48               	movwf	fat_read_from_file@data,c
 12409  000C52  0E02               	movlw	high _file_buffer
 12410  000C54  6E49               	movwf	fat_read_from_file@data+1,c
 12411  000C56  51FF               	movf	_file_number& (0+255),w,b
 12412  000C58  EC78  F00F         	call	_fat_read_from_file
 12413                           
 12414                           ;bootloader.c: 279: }
 12415  000C5C  D02D               	goto	l2202
 12416  000C5E                     l2201:
 12417                           
 12418                           ;bootloader.c: 280: else;bootloader.c: 281: {;bootloader.c: 282: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
 12419  000C5E  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12420  000C62  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12421  000C66  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12422  000C6A  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12423  000C6E  C07C  F056         	movff	_hex_file_offset,??__bootloader_program
 12424  000C72  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_program+1
 12425  000C76  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_program+2
 12426  000C7A  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_program+3
 12427  000C7E  1E56               	comf	??__bootloader_program,f,c
 12428  000C80  1E57               	comf	??__bootloader_program+1,f,c
 12429  000C82  1E58               	comf	??__bootloader_program+2,f,c
 12430  000C84  1E59               	comf	??__bootloader_program+3,f,c
 12431  000C86  2A56               	incf	??__bootloader_program,f,c
 12432  000C88  0E00               	movlw	0
 12433  000C8A  2257               	addwfc	??__bootloader_program+1,f,c
 12434  000C8C  2258               	addwfc	??__bootloader_program+2,f,c
 12435  000C8E  2259               	addwfc	??__bootloader_program+3,f,c
 12436  000C90  0100               	movlb	0	; () banked
 12437  000C92  5178               	movf	_hex_file_size& (0+255),w,b
 12438  000C94  2456               	addwf	??__bootloader_program,w,c
 12439  000C96  6E44               	movwf	fat_read_from_file@length,c
 12440  000C98  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12441  000C9A  2057               	addwfc	??__bootloader_program+1,w,c
 12442  000C9C  6E45               	movwf	fat_read_from_file@length+1,c
 12443  000C9E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12444  000CA0  2058               	addwfc	??__bootloader_program+2,w,c
 12445  000CA2  6E46               	movwf	fat_read_from_file@length+2,c
 12446  000CA4  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12447  000CA6  2059               	addwfc	??__bootloader_program+3,w,c
 12448  000CA8  6E47               	movwf	fat_read_from_file@length+3,c
 12449  000CAA  0E80               	movlw	low _file_buffer
 12450  000CAC  6E48               	movwf	fat_read_from_file@data,c
 12451  000CAE  0E02               	movlw	high _file_buffer
 12452  000CB0  6E49               	movwf	fat_read_from_file@data+1,c
 12453  000CB2  51FF               	movf	_file_number& (0+255),w,b
 12454  000CB4  EC78  F00F         	call	_fat_read_from_file
 12455  000CB8                     l2202:
 12456                           
 12457                           ;bootloader.c: 283: };bootloader.c: 286: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
 12458  000CB8  0E80               	movlw	low _file_buffer
 12459  000CBA  6E0C               	movwf	parseHexFileEntry@data,c
 12460  000CBC  0E02               	movlw	high _file_buffer
 12461  000CBE  6E0D               	movwf	parseHexFileEntry@data+1,c
 12462  000CC0  0E00               	movlw	0
 12463  000CC2  6E0E               	movwf	parseHexFileEntry@offset,c
 12464  000CC4  0E00               	movlw	0
 12465  000CC6  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12466  000CC8  0E00               	movlw	0
 12467  000CCA  6E10               	movwf	parseHexFileEntry@offset+2,c
 12468  000CCC  0E00               	movlw	0
 12469  000CCE  6E11               	movwf	parseHexFileEntry@offset+3,c
 12470  000CD0  0EBE               	movlw	low _hex_file_entry
 12471  000CD2  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12472  000CD4  0E01               	movlw	high _hex_file_entry
 12473  000CD6  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12474  000CD8  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12475  000CDC  C00C  F0EF         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 12476  000CE0  C00D  F0F0         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 12477  000CE4  C00E  F0F1         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 12478  000CE8  C00F  F0F2         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 12479                           
 12480                           ;bootloader.c: 289: ++hex_file_entries;
 12481  000CEC  0100               	movlb	0	; () banked
 12482  000CEE  4B84               	infsnz	_hex_file_entries& (0+255),f,b
 12483  000CF0  2B85               	incf	(_hex_file_entries+1)& (0+255),f,b
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;bootloader.c: 292: if(return_value>RecordErrorNoError)
 12487  000CF2  0EF1               	movlw	241
 12488  000CF4  5DEF               	subwf	__bootloader_program@return_value& (0+255),w,b
 12489  000CF6  0EFF               	movlw	255
 12490  000CF8  59F0               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 12491  000CFA  0EFF               	movlw	255
 12492  000CFC  59F1               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 12493  000CFE  0EFF               	movlw	255
 12494  000D00  59F2               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 12495  000D02  A0D8               	btfss	status,0,c
 12496  000D04  D005               	goto	l2203
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;bootloader.c: 293: {;bootloader.c: 295: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
 12500  000D06  0E40               	movlw	64
 12501  000D08  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12502                           
 12503                           ;bootloader.c: 296: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12504  000D0A  0E40               	movlw	64
 12505  000D0C  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;bootloader.c: 297: return;
 12509  000D0E  0012               	return	
 12510  000D10                     l2203:
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;bootloader.c: 305: else;bootloader.c: 306: {;bootloader.c: 308: hex_file_offset += retu
      +                          rn_value;
 12514                           
 12515                           ; BSR set to: 0
 12516  000D10  51EF               	movf	__bootloader_program@return_value& (0+255),w,b
 12517  000D12  277C               	addwf	_hex_file_offset& (0+255),f,b
 12518  000D14  51F0               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12519  000D16  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12520  000D18  51F1               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12521  000D1A  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12522  000D1C  51F2               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12523  000D1E  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;bootloader.c: 309: };bootloader.c: 311: switch(hex_file_entry.recordType)
 12527  000D20  D0FB               	goto	l2206
 12528  000D22                     
 12529                           ;bootloader.c: 317: extended_linear_address = hex_file_entry.data[0];
 12530                           
 12531                           ; BSR set to: 0
 12532  000D22  0101               	movlb	1	; () banked
 12533  000D24  51C3               	movf	(_hex_file_entry+5)& (0+255),w,b
 12534  000D26  6F40               	movwf	_extended_linear_address& (0+255),b
 12535  000D28  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12536  000D2A  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12537  000D2C  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12538                           
 12539                           ; BSR set to: 1
 12540                           ;bootloader.c: 318: extended_linear_address <<= 8;
 12541  000D2E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12542  000D32  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12543  000D36  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12544  000D3A  6B40               	clrf	_extended_linear_address& (0+255),b
 12545                           
 12546                           ; BSR set to: 1
 12547                           ;bootloader.c: 319: extended_linear_address |= hex_file_entry.data[1];
 12548  000D3C  51C4               	movf	(_hex_file_entry+6)& (0+255),w,b
 12549  000D3E  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12550                           
 12551                           ; BSR set to: 1
 12552                           ;bootloader.c: 320: extended_linear_address <<= 8;
 12553  000D40  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12554  000D44  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12555  000D48  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12556  000D4C  6B40               	clrf	_extended_linear_address& (0+255),b
 12557                           
 12558                           ; BSR set to: 1
 12559                           ;bootloader.c: 321: extended_linear_address <<= 8;
 12560  000D4E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12561  000D52  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12562  000D56  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12563  000D5A  6B40               	clrf	_extended_linear_address& (0+255),b
 12564                           
 12565                           ; BSR set to: 1
 12566                           ;bootloader.c: 323: break;
 12567                           
 12568                           ;bootloader.c: 322: continue;
 12569  000D5C  D742               	goto	l2200
 12570  000D5E                     l2210:
 12571                           
 12572                           ; BSR set to: 1
 12573                           ;bootloader.c: 328: start_from_byte = start_from_byte_next;
 12574  000D5E  C09B  F0F7         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 12575                           
 12576                           ; BSR set to: 1
 12577                           ;bootloader.c: 330: start_from_byte_next = 0;
 12578  000D62  0E00               	movlw	0
 12579  000D64  0100               	movlb	0	; () banked
 12580  000D66  6F9B               	movwf	_start_from_byte_next& (0+255),b
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;bootloader.c: 333: address32 = extended_linear_address + hex_file_entry.address;
 12584  000D68  0101               	movlb	1	; () banked
 12585  000D6A  51C0               	movf	(_hex_file_entry+2)& (0+255),w,b
 12586  000D6C  2540               	addwf	_extended_linear_address& (0+255),w,b
 12587  000D6E  0100               	movlb	0	; () banked
 12588  000D70  6FF3               	movwf	__bootloader_program@address32& (0+255),b
 12589  000D72  0101               	movlb	1	; () banked
 12590  000D74  51C1               	movf	(_hex_file_entry+3)& (0+255),w,b
 12591  000D76  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12592  000D78  0100               	movlb	0	; () banked
 12593  000D7A  6FF4               	movwf	(__bootloader_program@address32+1)& (0+255),b
 12594  000D7C  0E00               	movlw	0
 12595  000D7E  0101               	movlb	1	; () banked
 12596  000D80  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12597  000D82  0100               	movlb	0	; () banked
 12598  000D84  6FF5               	movwf	(__bootloader_program@address32+2)& (0+255),b
 12599  000D86  0E00               	movlw	0
 12600  000D88  0101               	movlb	1	; () banked
 12601  000D8A  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12602  000D8C  0100               	movlb	0	; () banked
 12603  000D8E  6FF6               	movwf	(__bootloader_program@address32+3)& (0+255),b
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;bootloader.c: 334: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 12607  000D90  51F7               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12608  000D92  25F3               	addwf	__bootloader_program@address32& (0+255),w,b
 12609  000D94  6E01               	movwf	internalFlash_pageFromAddress@address,c
 12610  000D96  0E00               	movlw	0
 12611  000D98  21F4               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12612  000D9A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 12613  000D9C  0E00               	movlw	0
 12614  000D9E  21F5               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12615  000DA0  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 12616  000DA2  0E00               	movlw	0
 12617  000DA4  21F6               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12618  000DA6  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 12619  000DA8  ECF5  F03C         	call	_internalFlash_pageFromAddress	;wreg free
 12620  000DAC  C001  F0EB         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 12621  000DB0  C002  F0EC         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 12622                           
 12623                           ;bootloader.c: 337: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 12624  000DB4  0100               	movlb	0	; () banked
 12625  000DB6  51F7               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12626  000DB8  25F3               	addwf	__bootloader_program@address32& (0+255),w,b
 12627  000DBA  6E01               	movwf	__bootloader_check_address@address,c
 12628  000DBC  0E00               	movlw	0
 12629  000DBE  21F4               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12630  000DC0  6E02               	movwf	__bootloader_check_address@address+1,c
 12631  000DC2  0E00               	movlw	0
 12632  000DC4  21F5               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12633  000DC6  6E03               	movwf	__bootloader_check_address@address+2,c
 12634  000DC8  0E00               	movlw	0
 12635  000DCA  21F6               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12636  000DCC  6E04               	movwf	__bootloader_check_address@address+3,c
 12637  000DCE  51F7               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12638  000DD0  0800               	sublw	0
 12639  000DD2  0101               	movlb	1	; () banked
 12640  000DD4  25BE               	addwf	_hex_file_entry& (0+255),w,b
 12641  000DD6  6E05               	movwf	__bootloader_check_address@dataLength,c
 12642  000DD8  EC0F  F024         	call	__bootloader_check_address	;wreg free
 12643  000DDC  0900               	iorlw	0
 12644  000DDE  A4D8               	btfss	status,2,c
 12645  000DE0  D700               	goto	l2200
 12646                           
 12647                           ;bootloader.c: 340: };bootloader.c: 342: if(page_to_write==0)
 12648                           
 12649                           ;bootloader.c: 338: {;bootloader.c: 339: break;
 12650  000DE2  0100               	movlb	0	; () banked
 12651  000DE4  51FA               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12652  000DE6  11FB               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12653  000DE8  A4D8               	btfss	status,2,c
 12654  000DEA  D010               	goto	l2212
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;bootloader.c: 343: {;bootloader.c: 347: page_to_write = entry_page;
 12658  000DEC  C0EB  F0FA         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 12659  000DF0  C0EC  F0FB         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;bootloader.c: 348: internalFlash_readPage(page_to_write);
 12663  000DF4  C0FA  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 12664  000DF8  C0FB  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 12665  000DFC  EC6F  F039         	call	_internalFlash_readPage	;wreg free
 12666                           
 12667                           ;bootloader.c: 349: buffer = internalFlash_getBuffer();
 12668  000E00  EC88  F03D         	call	_internalFlash_getBuffer	;wreg free
 12669  000E04  C001  F0E9         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 12670  000E08  C002  F0EA         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 12671  000E0C                     l2212:
 12672                           
 12673                           ;bootloader.c: 350: };bootloader.c: 352: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
 12674  000E0C  C0F7  F0F8         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 12675  000E10  0100               	movlb	0	; () banked
 12676  000E12  6BF9               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 12677  000E14  D05C               	goto	l2213
 12678  000E16                     
 12679                           ; BSR set to: 0
 12680                           ;bootloader.c: 353: {;bootloader.c: 356: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
 12681                           
 12682                           ; BSR set to: 0
 12683  000E16  51F8               	movf	__bootloader_program@cntr& (0+255),w,b
 12684  000E18  25F3               	addwf	__bootloader_program@address32& (0+255),w,b
 12685  000E1A  6E01               	movwf	internalFlash_pageFromAddress@address,c
 12686  000E1C  51F9               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 12687  000E1E  21F4               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12688  000E20  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 12689  000E22  0E00               	movlw	0
 12690  000E24  21F5               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12691  000E26  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 12692  000E28  0E00               	movlw	0
 12693  000E2A  21F6               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12694  000E2C  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 12695  000E2E  ECF5  F03C         	call	_internalFlash_pageFromAddress	;wreg free
 12696  000E32  0100               	movlb	0	; () banked
 12697  000E34  51FA               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12698  000E36  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 12699  000E38  E12A               	bnz	l13737
 12700  000E3A  51FB               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12701  000E3C  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 12702  000E3E  A4D8               	btfss	status,2,c
 12703  000E40  D026               	goto	l2215
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;bootloader.c: 357: {;bootloader.c: 358: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
 12707  000E42  51F8               	movf	__bootloader_program@cntr& (0+255),w,b
 12708  000E44  25F3               	addwf	__bootloader_program@address32& (0+255),w,b
 12709  000E46  6E09               	movwf	internalFlash_addressWithinPage@address,c
 12710  000E48  51F9               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 12711  000E4A  21F4               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12712  000E4C  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 12713  000E4E  0E00               	movlw	0
 12714  000E50  21F5               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12715  000E52  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 12716  000E54  0E00               	movlw	0
 12717  000E56  21F6               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12718  000E58  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 12719  000E5A  C0FA  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 12720  000E5E  C0FB  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 12721  000E62  EC0E  F035         	call	_internalFlash_addressWithinPage	;wreg free
 12722  000E66  C009  F0ED         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 12723  000E6A  C00A  F0EE         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 12724                           
 12725                           ;bootloader.c: 359: buffer[address_within_page] = hex_file_entry.data[cntr];
 12726  000E6E  0EC3               	movlw	low (_hex_file_entry+5)
 12727  000E70  0100               	movlb	0	; () banked
 12728  000E72  25F8               	addwf	__bootloader_program@cntr& (0+255),w,b
 12729  000E74  6ED9               	movwf	fsr2l,c
 12730  000E76  0E01               	movlw	high (_hex_file_entry+5)
 12731  000E78  21F9               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 12732  000E7A  6EDA               	movwf	fsr2h,c
 12733  000E7C  51ED               	movf	__bootloader_program@address_within_page& (0+255),w,b
 12734  000E7E  25E9               	addwf	__bootloader_program@buffer& (0+255),w,b
 12735  000E80  6EE1               	movwf	fsr1l,c
 12736  000E82  51EE               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 12737  000E84  21EA               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 12738  000E86  6EE2               	movwf	fsr1h,c
 12739  000E88  CFDF FFE7          	movff	indf2,indf1
 12740                           
 12741                           ;bootloader.c: 360: }
 12742  000E8C  D01D               	goto	l2216
 12743  000E8E                     l2215:
 12744  000E8E                     l13737:
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;bootloader.c: 361: else;bootloader.c: 362: {;bootloader.c: 364: hex_file_offset -= retu
      +                          rn_value;
 12748  000E8E  51EF               	movf	__bootloader_program@return_value& (0+255),w,b
 12749  000E90  5F7C               	subwf	_hex_file_offset& (0+255),f,b
 12750  000E92  51F0               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12751  000E94  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 12752  000E96  51F1               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12753  000E98  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 12754  000E9A  51F2               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12755  000E9C  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;bootloader.c: 365: --hex_file_entries;
 12759  000E9E  0784               	decf	_hex_file_entries& (0+255),f,b
 12760  000EA0  A0D8               	btfss	status,0,c
 12761  000EA2  0785               	decf	(_hex_file_entries+1)& (0+255),f,b
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;bootloader.c: 367: start_from_byte_next = cntr;
 12765  000EA4  C0F8  F09B         	movff	__bootloader_program@cntr,_start_from_byte_next
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;bootloader.c: 369: internalFlash_erasePage(page_to_write);
 12769  000EA8  C0FA  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 12770  000EAC  C0FB  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 12771  000EB0  ECCC  F03A         	call	_internalFlash_erasePage	;wreg free
 12772                           
 12773                           ;bootloader.c: 370: internalFlash_writePage(page_to_write);
 12774  000EB4  C0FA  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 12775  000EB8  C0FB  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 12776  000EBC  EC0C  F030         	call	_internalFlash_writePage	;wreg free
 12777                           
 12778                           ;bootloader.c: 371: ++flash_pages_written;
 12779  000EC0  0101               	movlb	1	; () banked
 12780  000EC2  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 12781  000EC4  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 12782                           
 12783                           ; BSR set to: 1
 12784                           ;bootloader.c: 373: return;
 12785  000EC6  0012               	return	
 12786  000EC8                     l2216:
 12787                           
 12788                           ; BSR set to: 1
 12789  000EC8  0100               	movlb	0	; () banked
 12790  000ECA  4BF8               	infsnz	__bootloader_program@cntr& (0+255),f,b
 12791  000ECC  2BF9               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 12792  000ECE                     l2213:
 12793                           
 12794                           ; BSR set to: 0
 12795                           
 12796                           ; BSR set to: 0
 12797  000ECE  0101               	movlb	1	; () banked
 12798  000ED0  51BE               	movf	_hex_file_entry& (0+255),w,b
 12799  000ED2  0100               	movlb	0	; () banked
 12800  000ED4  5DF8               	subwf	__bootloader_program@cntr& (0+255),w,b
 12801  000ED6  0101               	movlb	1	; () banked
 12802  000ED8  51BF               	movf	(_hex_file_entry+1)& (0+255),w,b
 12803  000EDA  0100               	movlb	0	; () banked
 12804  000EDC  59F9               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 12805  000EDE  B0D8               	btfsc	status,0,c
 12806  000EE0  D680               	goto	l2200
 12807  000EE2  D799               	goto	l2214
 12808  000EE4                     
 12809                           ;bootloader.c: 381: if(page_to_write!=0)
 12810                           
 12811                           ; BSR set to: 0
 12812  000EE4  0100               	movlb	0	; () banked
 12813  000EE6  51FA               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12814  000EE8  11FB               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12815  000EEA  B4D8               	btfsc	status,2,c
 12816  000EEC  0012               	return	
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;bootloader.c: 382: {;bootloader.c: 384: internalFlash_erasePage(page_to_write);
 12820  000EEE  C0FA  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 12821  000EF2  C0FB  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 12822  000EF6  ECCC  F03A         	call	_internalFlash_erasePage	;wreg free
 12823                           
 12824                           ;bootloader.c: 385: internalFlash_writePage(page_to_write);
 12825  000EFA  C0FA  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 12826  000EFE  C0FB  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 12827  000F02  EC0C  F030         	call	_internalFlash_writePage	;wreg free
 12828                           
 12829                           ;bootloader.c: 386: ++flash_pages_written;
 12830  000F06  0101               	movlb	1	; () banked
 12831  000F08  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 12832  000F0A  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 12833                           
 12834                           ; BSR set to: 1
 12835                           ;bootloader.c: 388: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 12836  000F0C  0E60               	movlw	96
 12837  000F0E  0100               	movlb	0	; () banked
 12838  000F10  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;bootloader.c: 389: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 12842  000F12  0E60               	movlw	96
 12843  000F14  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;bootloader.c: 390: };bootloader.c: 392: return;
 12847                           
 12848                           ; BSR set to: 0
 12849  000F16  0012               	return	
 12850  000F18                     l2206:
 12851                           
 12852                           ; BSR set to: 0
 12853                           
 12854                           ; BSR set to: 0
 12855  000F18  0101               	movlb	1	; () banked
 12856  000F1A  51C2               	movf	(_hex_file_entry+4)& (0+255),w,b
 12857                           
 12858                           ; Switch size 1, requested type "space"
 12859                           ; Number of cases is 3, Range of values is 0 to 4
 12860                           ; switch strategies available:
 12861                           ; Name         Instructions Cycles
 12862                           ; simple_byte           10     6 (average)
 12863                           ;	Chosen strategy is simple_byte
 12864  000F1C  0A00               	xorlw	0	; case 0
 12865  000F1E  B4D8               	btfsc	status,2,c
 12866  000F20  D71E               	goto	l2210
 12867  000F22  0A01               	xorlw	1	; case 1
 12868  000F24  B4D8               	btfsc	status,2,c
 12869  000F26  D7DE               	goto	l2218
 12870  000F28  0A05               	xorlw	5	; case 4
 12871  000F2A  B4D8               	btfsc	status,2,c
 12872  000F2C  D6FA               	goto	l2207
 12873                           
 12874                           ; BSR set to: 1
 12875                           
 12876                           ; BSR set to: 1
 12877  000F2E  D659               	goto	l2200
 12878  000F30                     __end_of__bootloader_program:
 12879                           	opt stack 0
 12880                           tblptru	equ	0xFF8
 12881                           tblptrh	equ	0xFF7
 12882                           tblptrl	equ	0xFF6
 12883                           tablat	equ	0xFF5
 12884                           prodh	equ	0xFF4
 12885                           prodl	equ	0xFF3
 12886                           intcon	equ	0xFF2
 12887                           intcon2	equ	0xFF1
 12888                           intcon3	equ	0xFF0
 12889                           postinc0	equ	0xFEE
 12890                           wreg	equ	0xFE8
 12891                           indf1	equ	0xFE7
 12892                           postdec1	equ	0xFE5
 12893                           plusw1	equ	0xFE3
 12894                           fsr1h	equ	0xFE2
 12895                           fsr1l	equ	0xFE1
 12896                           indf2	equ	0xFDF
 12897                           postinc2	equ	0xFDE
 12898                           plusw2	equ	0xFDB
 12899                           fsr2h	equ	0xFDA
 12900                           fsr2l	equ	0xFD9
 12901                           status	equ	0xFD8
 12902                           
 12903 ;; *************** function _parseHexFileEntry *****************
 12904 ;; Defined at:
 12905 ;;		line 59 in file "hex.c"
 12906 ;; Parameters:    Size  Location     Type
 12907 ;;  data            2   11[COMRAM] PTR unsigned char 
 12908 ;;		 -> file_buffer(50), 
 12909 ;;  offset          4   13[COMRAM] unsigned long 
 12910 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 12911 ;;		 -> hex_file_entry(23), 
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;  i               1   27[COMRAM] unsigned char 
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  4   11[COMRAM] unsigned long 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12925 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12926 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12927 ;;Total ram usage:       17 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    2
 12930 ;; This function calls:
 12931 ;;		_hexCharsToUint16
 12932 ;;		_hexCharsToUint8
 12933 ;; This function is called by:
 12934 ;;		__bootloader_verify_file
 12935 ;;		__bootloader_program
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text51
 12940  000020                     __ptext51:
 12941                           	opt stack 0
 12942  000020                     _parseHexFileEntry:
 12943                           	opt stack 26
 12944                           
 12945                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
 12946                           
 12947                           ;incstack = 0
 12948  000020  500E               	movf	parseHexFileEntry@offset,w,c
 12949  000022  240C               	addwf	parseHexFileEntry@data,w,c
 12950  000024  6ED9               	movwf	fsr2l,c
 12951  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 12952  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12953  00002A  6EDA               	movwf	fsr2h,c
 12954  00002C  0E3A               	movlw	58
 12955  00002E  18DE               	xorwf	postinc2,w,c
 12956  000030  B4D8               	btfsc	status,2,c
 12957  000032  D005               	goto	l2072
 12958                           
 12959                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 12960  000034  680C               	setf	?_parseHexFileEntry,c
 12961  000036  680D               	setf	?_parseHexFileEntry+1,c
 12962  000038  680E               	setf	?_parseHexFileEntry+2,c
 12963  00003A  680F               	setf	?_parseHexFileEntry+3,c
 12964  00003C  0012               	return	
 12965  00003E                     l2072:
 12966                           
 12967                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
 12968  00003E  0E02               	movlw	2
 12969  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 12970  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 12971  000044  0E00               	movlw	0
 12972  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 12973  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 12974  00004A  5014               	movf	??_parseHexFileEntry,w,c
 12975  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 12976  00004E  6ED9               	movwf	fsr2l,c
 12977  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 12978  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12979  000054  6EDA               	movwf	fsr2h,c
 12980  000056  50DF               	movf	indf2,w,c
 12981  000058  6E03               	movwf	hexCharsToUint8@c2,c
 12982  00005A  0E01               	movlw	1
 12983  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 12984  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 12985  000060  0E00               	movlw	0
 12986  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 12987  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 12988  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 12989  000068  240C               	addwf	parseHexFileEntry@data,w,c
 12990  00006A  6ED9               	movwf	fsr2l,c
 12991  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 12992  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12993  000070  6EDA               	movwf	fsr2h,c
 12994  000072  50DF               	movf	indf2,w,c
 12995  000074  ECE7  F03C         	call	_hexCharsToUint8
 12996  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 12997  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 12998  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 12999  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13000  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 13001  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 13002                           
 13003                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 13004  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13005  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13006  000094  0E01               	movlw	1
 13007  000096  50DB               	movf	plusw2,w,c
 13008  000098  E104               	bnz	u9600
 13009  00009A  0E11               	movlw	17
 13010  00009C  5CDE               	subwf	postinc2,w,c
 13011  00009E  A0D8               	btfss	status,0,c
 13012  0000A0  D009               	goto	l2074
 13013  0000A2                     u9600:
 13014                           
 13015                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 13016  0000A2  0EFC               	movlw	252
 13017  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 13018  0000A6  0EFF               	movlw	255
 13019  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 13020  0000AA  0EFF               	movlw	255
 13021  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 13022  0000AE  0EFF               	movlw	255
 13023  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 13024  0000B2  0012               	return	
 13025  0000B4                     l2074:
 13026                           
 13027                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
 13028  0000B4  0E04               	movlw	4
 13029  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 13030  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13031  0000BA  0E00               	movlw	0
 13032  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13033  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13034  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 13035  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 13036  0000C4  6ED9               	movwf	fsr2l,c
 13037  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 13038  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13039  0000CA  6EDA               	movwf	fsr2h,c
 13040  0000CC  50DF               	movf	indf2,w,c
 13041  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 13042  0000D0  0E05               	movlw	5
 13043  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 13044  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13045  0000D6  0E00               	movlw	0
 13046  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13047  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13048  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 13049  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 13050  0000E0  6ED9               	movwf	fsr2l,c
 13051  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 13052  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13053  0000E6  6EDA               	movwf	fsr2h,c
 13054  0000E8  50DF               	movf	indf2,w,c
 13055  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 13056  0000EC  0E06               	movlw	6
 13057  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 13058  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13059  0000F2  0E00               	movlw	0
 13060  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13061  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13062  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 13063  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 13064  0000FC  6ED9               	movwf	fsr2l,c
 13065  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 13066  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13067  000102  6EDA               	movwf	fsr2h,c
 13068  000104  50DF               	movf	indf2,w,c
 13069  000106  6E05               	movwf	hexCharsToUint16@c4,c
 13070  000108  0E03               	movlw	3
 13071  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 13072  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 13073  00010E  0E00               	movlw	0
 13074  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13075  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 13076  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 13077  000116  240C               	addwf	parseHexFileEntry@data,w,c
 13078  000118  6ED9               	movwf	fsr2l,c
 13079  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 13080  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13081  00011E  6EDA               	movwf	fsr2h,c
 13082  000120  50DF               	movf	indf2,w,c
 13083  000122  EC60  F032         	call	_hexCharsToUint16
 13084  000126  EE20 F002          	lfsr	2,2
 13085  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13086  00012C  26D9               	addwf	fsr2l,f,c
 13087  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13088  000130  22DA               	addwfc	fsr2h,f,c
 13089  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 13090  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 13091                           
 13092                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 13093  00013A  EE20 F004          	lfsr	2,4
 13094  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13095  000140  26D9               	addwf	fsr2l,f,c
 13096  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13097  000144  22DA               	addwfc	fsr2h,f,c
 13098  000146  0E08               	movlw	8
 13099  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 13100  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13101  00014C  0E00               	movlw	0
 13102  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13103  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13104  000152  5014               	movf	??_parseHexFileEntry,w,c
 13105  000154  240C               	addwf	parseHexFileEntry@data,w,c
 13106  000156  6EE1               	movwf	fsr1l,c
 13107  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 13108  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13109  00015C  6EE2               	movwf	fsr1h,c
 13110  00015E  50E7               	movf	indf1,w,c
 13111  000160  6E03               	movwf	hexCharsToUint8@c2,c
 13112  000162  0E07               	movlw	7
 13113  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 13114  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13115  000168  0E00               	movlw	0
 13116  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13117  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13118  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 13119  000170  240C               	addwf	parseHexFileEntry@data,w,c
 13120  000172  6EE1               	movwf	fsr1l,c
 13121  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 13122  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13123  000178  6EE2               	movwf	fsr1h,c
 13124  00017A  50E7               	movf	indf1,w,c
 13125  00017C  ECE7  F03C         	call	_hexCharsToUint8
 13126  000180  6EDF               	movwf	indf2,c
 13127                           
 13128                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 13129  000182  0E00               	movlw	0
 13130  000184  6E1C               	movwf	parseHexFileEntry@i,c
 13131  000186  D03D               	goto	l2075
 13132  000188                     
 13133                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
 13134  000188  501C               	movf	parseHexFileEntry@i,w,c
 13135  00018A  0D01               	mullw	1
 13136  00018C  0E05               	movlw	5
 13137  00018E  26F3               	addwf	prodl,f,c
 13138  000190  0E00               	movlw	0
 13139  000192  22F4               	addwfc	prodh,f,c
 13140  000194  50F3               	movf	prodl,w,c
 13141  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13142  000198  6ED9               	movwf	fsr2l,c
 13143  00019A  50F4               	movf	prodh,w,c
 13144  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13145  00019E  6EDA               	movwf	fsr2h,c
 13146  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 13147  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13148  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13149  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 13150  0001AA  0E00               	movlw	0
 13151  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13152  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 13153  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 13154  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 13155  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13156  0001B6  0E0A               	movlw	10
 13157  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 13158  0001BA  0E00               	movlw	0
 13159  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13160  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 13161  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 13162  0001C2  6EE1               	movwf	fsr1l,c
 13163  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 13164  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13165  0001C8  6EE2               	movwf	fsr1h,c
 13166  0001CA  50E7               	movf	indf1,w,c
 13167  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 13168  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 13169  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13170  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13171  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13172  0001D8  0E00               	movlw	0
 13173  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13174  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 13175  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 13176  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 13177  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13178  0001E4  0E09               	movlw	9
 13179  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13180  0001E8  0E00               	movlw	0
 13181  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13182  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 13183  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 13184  0001F0  6EE1               	movwf	fsr1l,c
 13185  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 13186  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13187  0001F6  6EE2               	movwf	fsr1h,c
 13188  0001F8  50E7               	movf	indf1,w,c
 13189  0001FA  ECE7  F03C         	call	_hexCharsToUint8
 13190  0001FE  6EDF               	movwf	indf2,c
 13191  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 13192  000202                     l2075:
 13193  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13194  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13195  00020A  501C               	movf	parseHexFileEntry@i,w,c
 13196  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13197  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13198  000210  50DE               	movf	postinc2,w,c
 13199  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13200  000214  50DE               	movf	postinc2,w,c
 13201  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13202  000218  A0D8               	btfss	status,0,c
 13203  00021A  D7B6               	goto	l2076
 13204                           
 13205                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
 13206  00021C  EE20 F015          	lfsr	2,21
 13207  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13208  000222  26D9               	addwf	fsr2l,f,c
 13209  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13210  000226  22DA               	addwfc	fsr2h,f,c
 13211  000228  501C               	movf	parseHexFileEntry@i,w,c
 13212  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13213  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13214  000230  2614               	addwf	??_parseHexFileEntry,f,c
 13215  000232  0E00               	movlw	0
 13216  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13217  000236  500E               	movf	parseHexFileEntry@offset,w,c
 13218  000238  2614               	addwf	??_parseHexFileEntry,f,c
 13219  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13220  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13221  00023E  0E0A               	movlw	10
 13222  000240  2614               	addwf	??_parseHexFileEntry,f,c
 13223  000242  0E00               	movlw	0
 13224  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13225  000246  5014               	movf	??_parseHexFileEntry,w,c
 13226  000248  240C               	addwf	parseHexFileEntry@data,w,c
 13227  00024A  6EE1               	movwf	fsr1l,c
 13228  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 13229  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13230  000250  6EE2               	movwf	fsr1h,c
 13231  000252  50E7               	movf	indf1,w,c
 13232  000254  6E03               	movwf	hexCharsToUint8@c2,c
 13233  000256  501C               	movf	parseHexFileEntry@i,w,c
 13234  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13235  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13236  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13237  000260  0E00               	movlw	0
 13238  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13239  000264  500E               	movf	parseHexFileEntry@offset,w,c
 13240  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 13241  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 13242  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13243  00026C  0E09               	movlw	9
 13244  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13245  000270  0E00               	movlw	0
 13246  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13247  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 13248  000276  240C               	addwf	parseHexFileEntry@data,w,c
 13249  000278  6EE1               	movwf	fsr1l,c
 13250  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 13251  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13252  00027E  6EE2               	movwf	fsr1h,c
 13253  000280  50E7               	movf	indf1,w,c
 13254  000282  ECE7  F03C         	call	_hexCharsToUint8
 13255  000286  6EDF               	movwf	indf2,c
 13256                           
 13257                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 13258  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13259  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13260  000290  EE10 F016          	lfsr	1,22
 13261  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13262  000296  26E1               	addwf	fsr1l,f,c
 13263  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13264  00029A  22E2               	addwfc	fsr1h,f,c
 13265  00029C  CFDF FFE7          	movff	indf2,indf1
 13266                           
 13267                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 13268  0002A0  EE20 F002          	lfsr	2,2
 13269  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13270  0002A6  26D9               	addwf	fsr2l,f,c
 13271  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13272  0002AA  22DA               	addwfc	fsr2h,f,c
 13273  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 13274  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 13275  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 13276  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 13277  0002BA  EE20 F016          	lfsr	2,22
 13278  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13279  0002C0  26D9               	addwf	fsr2l,f,c
 13280  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13281  0002C4  22DA               	addwfc	fsr2h,f,c
 13282  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 13283  0002C8  26DF               	addwf	indf2,f,c
 13284                           
 13285                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 13286  0002CA  EE20 F002          	lfsr	2,2
 13287  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13288  0002D0  26D9               	addwf	fsr2l,f,c
 13289  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13290  0002D4  22DA               	addwfc	fsr2h,f,c
 13291  0002D6  50DF               	movf	indf2,w,c
 13292  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13293  0002DA  EE20 F016          	lfsr	2,22
 13294  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13295  0002E0  26D9               	addwf	fsr2l,f,c
 13296  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13297  0002E4  22DA               	addwfc	fsr2h,f,c
 13298  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 13299  0002E8  26DF               	addwf	indf2,f,c
 13300                           
 13301                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 13302  0002EA  EE20 F004          	lfsr	2,4
 13303  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13304  0002F0  26D9               	addwf	fsr2l,f,c
 13305  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13306  0002F4  22DA               	addwfc	fsr2h,f,c
 13307  0002F6  50DF               	movf	indf2,w,c
 13308  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13309  0002FA  EE20 F016          	lfsr	2,22
 13310  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13311  000300  26D9               	addwf	fsr2l,f,c
 13312  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13313  000304  22DA               	addwfc	fsr2h,f,c
 13314  000306  5014               	movf	??_parseHexFileEntry,w,c
 13315  000308  26DF               	addwf	indf2,f,c
 13316                           
 13317                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 13318  00030A  0E00               	movlw	0
 13319  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 13320  00030E  D017               	goto	l2078
 13321  000310                     
 13322                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 13323  000310  501C               	movf	parseHexFileEntry@i,w,c
 13324  000312  0D01               	mullw	1
 13325  000314  0E05               	movlw	5
 13326  000316  26F3               	addwf	prodl,f,c
 13327  000318  0E00               	movlw	0
 13328  00031A  22F4               	addwfc	prodh,f,c
 13329  00031C  50F3               	movf	prodl,w,c
 13330  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13331  000320  6ED9               	movwf	fsr2l,c
 13332  000322  50F4               	movf	prodh,w,c
 13333  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13334  000326  6EDA               	movwf	fsr2h,c
 13335  000328  50DF               	movf	indf2,w,c
 13336  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13337  00032C  EE20 F016          	lfsr	2,22
 13338  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13339  000332  26D9               	addwf	fsr2l,f,c
 13340  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13341  000336  22DA               	addwfc	fsr2h,f,c
 13342  000338  5014               	movf	??_parseHexFileEntry,w,c
 13343  00033A  26DF               	addwf	indf2,f,c
 13344  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 13345  00033E                     l2078:
 13346  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13347  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13348  000346  501C               	movf	parseHexFileEntry@i,w,c
 13349  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13350  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13351  00034C  50DE               	movf	postinc2,w,c
 13352  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13353  000350  50DE               	movf	postinc2,w,c
 13354  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13355  000354  A0D8               	btfss	status,0,c
 13356  000356  D7DC               	goto	l2079
 13357                           
 13358                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 13359  000358  EE20 F015          	lfsr	2,21
 13360  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13361  00035E  26D9               	addwf	fsr2l,f,c
 13362  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13363  000362  22DA               	addwfc	fsr2h,f,c
 13364  000364  50DF               	movf	indf2,w,c
 13365  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13366  000368  EE20 F016          	lfsr	2,22
 13367  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13368  00036E  26D9               	addwf	fsr2l,f,c
 13369  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13370  000372  22DA               	addwfc	fsr2h,f,c
 13371  000374  5014               	movf	??_parseHexFileEntry,w,c
 13372  000376  26DF               	addwf	indf2,f,c
 13373                           
 13374                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 13375  000378  EE20 F016          	lfsr	2,22
 13376  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13377  00037E  26D9               	addwf	fsr2l,f,c
 13378  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13379  000382  22DA               	addwfc	fsr2h,f,c
 13380  000384  50DF               	movf	indf2,w,c
 13381  000386  B4D8               	btfsc	status,2,c
 13382  000388  D009               	goto	l2081
 13383                           
 13384                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 13385  00038A  0EFE               	movlw	254
 13386  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 13387  00038E  0EFF               	movlw	255
 13388  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 13389  000392  0EFF               	movlw	255
 13390  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 13391  000396  0EFF               	movlw	255
 13392  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 13393  00039A  0012               	return	
 13394  00039C                     l2081:
 13395                           
 13396                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 13397  00039C  EE20 F004          	lfsr	2,4
 13398  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13399  0003A2  26D9               	addwf	fsr2l,f,c
 13400  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13401  0003A6  22DA               	addwfc	fsr2h,f,c
 13402  0003A8  04DE               	decf	postinc2,w,c
 13403  0003AA  A4D8               	btfss	status,2,c
 13404  0003AC  D009               	goto	l2082
 13405                           
 13406                           ;hex.c: 110: {;hex.c: 112: return 0;
 13407  0003AE  0E00               	movlw	0
 13408  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 13409  0003B2  0E00               	movlw	0
 13410  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 13411  0003B6  0E00               	movlw	0
 13412  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 13413  0003BA  0E00               	movlw	0
 13414  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 13415                           
 13416                           ;hex.c: 113: }
 13417  0003BE  0012               	return	
 13418  0003C0                     l2082:
 13419                           
 13420                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
 13421  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 13422  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13423  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13424  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 13425  0003CA  0E00               	movlw	0
 13426  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13427  0003CE  0E0B               	movlw	11
 13428  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 13429  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13430  0003D4  0E00               	movlw	0
 13431  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 13432  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13433  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 13434  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 13435  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 13436  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 13437  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13438  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 13439  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 13440  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 13441  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13442  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 13443  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13444  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 13445  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13446                           
 13447                           ;hex.c: 117: if (data[++offset] == ':')
 13448  0003F4  0E01               	movlw	1
 13449  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 13450  0003F8  0E00               	movlw	0
 13451  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13452  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13453  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13454  000400  500E               	movf	parseHexFileEntry@offset,w,c
 13455  000402  240C               	addwf	parseHexFileEntry@data,w,c
 13456  000404  6ED9               	movwf	fsr2l,c
 13457  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 13458  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13459  00040A  6EDA               	movwf	fsr2h,c
 13460  00040C  0E3A               	movlw	58
 13461  00040E  18DE               	xorwf	postinc2,w,c
 13462  000410  A4D8               	btfss	status,2,c
 13463  000412  D009               	goto	l2084
 13464                           
 13465                           ;hex.c: 118: {;hex.c: 119: return offset;
 13466  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13467  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13468  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13469  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13470                           
 13471                           ;hex.c: 120: }
 13472  000424  0012               	return	
 13473  000426                     l2084:
 13474                           
 13475                           ;hex.c: 121: else if (data[++offset] == ':')
 13476  000426  0E01               	movlw	1
 13477  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 13478  00042A  0E00               	movlw	0
 13479  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13480  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13481  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13482  000432  500E               	movf	parseHexFileEntry@offset,w,c
 13483  000434  240C               	addwf	parseHexFileEntry@data,w,c
 13484  000436  6ED9               	movwf	fsr2l,c
 13485  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 13486  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13487  00043C  6EDA               	movwf	fsr2h,c
 13488  00043E  0E3A               	movlw	58
 13489  000440  18DE               	xorwf	postinc2,w,c
 13490  000442  A4D8               	btfss	status,2,c
 13491  000444  D009               	goto	l2086
 13492                           
 13493                           ;hex.c: 122: {;hex.c: 123: return offset;
 13494  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13495  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13496  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13497  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13498                           
 13499                           ;hex.c: 124: }
 13500  000456  0012               	return	
 13501  000458                     l2086:
 13502                           
 13503                           ;hex.c: 125: else if (data[++offset] == ':')
 13504  000458  0E01               	movlw	1
 13505  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 13506  00045C  0E00               	movlw	0
 13507  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13508  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13509  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13510  000464  500E               	movf	parseHexFileEntry@offset,w,c
 13511  000466  240C               	addwf	parseHexFileEntry@data,w,c
 13512  000468  6ED9               	movwf	fsr2l,c
 13513  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13514  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13515  00046E  6EDA               	movwf	fsr2h,c
 13516  000470  0E3A               	movlw	58
 13517  000472  18DE               	xorwf	postinc2,w,c
 13518  000474  A4D8               	btfss	status,2,c
 13519  000476  D009               	goto	l2088
 13520                           
 13521                           ;hex.c: 126: {;hex.c: 127: return offset;
 13522  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13523  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13524  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13525  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13526                           
 13527                           ;hex.c: 128: }
 13528  000488  0012               	return	
 13529  00048A                     l2088:
 13530                           
 13531                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 13532  00048A  0EFD               	movlw	253
 13533  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 13534  00048E  0EFF               	movlw	255
 13535  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 13536  000492  0EFF               	movlw	255
 13537  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 13538  000496  0EFF               	movlw	255
 13539  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 13540  00049A  0012               	return	
 13541  00049C                     __end_of_parseHexFileEntry:
 13542                           	opt stack 0
 13543                           tblptru	equ	0xFF8
 13544                           tblptrh	equ	0xFF7
 13545                           tblptrl	equ	0xFF6
 13546                           tablat	equ	0xFF5
 13547                           prodh	equ	0xFF4
 13548                           prodl	equ	0xFF3
 13549                           intcon	equ	0xFF2
 13550                           intcon2	equ	0xFF1
 13551                           intcon3	equ	0xFF0
 13552                           postinc0	equ	0xFEE
 13553                           wreg	equ	0xFE8
 13554                           indf1	equ	0xFE7
 13555                           postdec1	equ	0xFE5
 13556                           plusw1	equ	0xFE3
 13557                           fsr1h	equ	0xFE2
 13558                           fsr1l	equ	0xFE1
 13559                           indf2	equ	0xFDF
 13560                           postinc2	equ	0xFDE
 13561                           postdec2	equ	0xFDD
 13562                           plusw2	equ	0xFDB
 13563                           fsr2h	equ	0xFDA
 13564                           fsr2l	equ	0xFD9
 13565                           status	equ	0xFD8
 13566                           
 13567 ;; *************** function _hexCharsToUint8 *****************
 13568 ;; Defined at:
 13569 ;;		line 42 in file "hex.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;  c1              1    wreg     unsigned char 
 13572 ;;  c2              1    2[COMRAM] unsigned char 
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;  c1              1    4[COMRAM] unsigned char 
 13575 ;;  retVal          1    5[COMRAM] unsigned char 
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1    wreg      unsigned char 
 13578 ;; Registers used:
 13579 ;;		wreg, status,2, status,0, cstack
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/0
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13585 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13589 ;;Total ram usage:        4 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:    1
 13592 ;; This function calls:
 13593 ;;		_hexCharToUint8
 13594 ;; This function is called by:
 13595 ;;		_parseHexFileEntry
 13596 ;; This function uses a non-reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text52
 13600  0079CE                     __ptext52:
 13601                           	opt stack 0
 13602  0079CE                     _hexCharsToUint8:
 13603                           	opt stack 26
 13604                           
 13605                           ;incstack = 0
 13606                           ;hexCharsToUint8@c1 stored from wreg
 13607  0079CE  6E05               	movwf	hexCharsToUint8@c1,c
 13608                           
 13609                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 13610  0079D0  5005               	movf	hexCharsToUint8@c1,w,c
 13611  0079D2  ECA9  F03B         	call	_hexCharToUint8
 13612  0079D6  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 13613  0079D8  3804               	swapf	??_hexCharsToUint8,w,c
 13614  0079DA  0BF0               	andlw	240
 13615  0079DC  6E06               	movwf	hexCharsToUint8@retVal,c
 13616                           
 13617                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 13618  0079DE  5003               	movf	hexCharsToUint8@c2,w,c
 13619  0079E0  ECA9  F03B         	call	_hexCharToUint8
 13620  0079E4  1206               	iorwf	hexCharsToUint8@retVal,f,c
 13621                           
 13622                           ;hex.c: 46: return retVal;
 13623  0079E6  5006               	movf	hexCharsToUint8@retVal,w,c
 13624  0079E8  0012               	return	
 13625  0079EA                     __end_of_hexCharsToUint8:
 13626                           	opt stack 0
 13627                           tblptru	equ	0xFF8
 13628                           tblptrh	equ	0xFF7
 13629                           tblptrl	equ	0xFF6
 13630                           tablat	equ	0xFF5
 13631                           prodh	equ	0xFF4
 13632                           prodl	equ	0xFF3
 13633                           intcon	equ	0xFF2
 13634                           intcon2	equ	0xFF1
 13635                           intcon3	equ	0xFF0
 13636                           postinc0	equ	0xFEE
 13637                           wreg	equ	0xFE8
 13638                           indf1	equ	0xFE7
 13639                           postdec1	equ	0xFE5
 13640                           plusw1	equ	0xFE3
 13641                           fsr1h	equ	0xFE2
 13642                           fsr1l	equ	0xFE1
 13643                           indf2	equ	0xFDF
 13644                           postinc2	equ	0xFDE
 13645                           postdec2	equ	0xFDD
 13646                           plusw2	equ	0xFDB
 13647                           fsr2h	equ	0xFDA
 13648                           fsr2l	equ	0xFD9
 13649                           status	equ	0xFD8
 13650                           
 13651 ;; *************** function _hexCharsToUint16 *****************
 13652 ;; Defined at:
 13653 ;;		line 49 in file "hex.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  c1              1    wreg     unsigned char 
 13656 ;;  c2              1    2[COMRAM] unsigned char 
 13657 ;;  c3              1    3[COMRAM] unsigned char 
 13658 ;;  c4              1    4[COMRAM] unsigned char 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;  c1              1    8[COMRAM] unsigned char 
 13661 ;;  retVal          2    9[COMRAM] unsigned int 
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  2    2[COMRAM] unsigned int 
 13664 ;; Registers used:
 13665 ;;		wreg, status,2, status,0, cstack
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13672 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13674 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13675 ;;Total ram usage:        9 bytes
 13676 ;; Hardware stack levels used:    1
 13677 ;; Hardware stack levels required when called:    1
 13678 ;; This function calls:
 13679 ;;		_hexCharToUint8
 13680 ;; This function is called by:
 13681 ;;		_parseHexFileEntry
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text53
 13686  0064C0                     __ptext53:
 13687                           	opt stack 0
 13688  0064C0                     _hexCharsToUint16:
 13689                           	opt stack 26
 13690                           
 13691                           ;incstack = 0
 13692                           ;hexCharsToUint16@c1 stored from wreg
 13693  0064C0  6E09               	movwf	hexCharsToUint16@c1,c
 13694                           
 13695                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 13696  0064C2  5009               	movf	hexCharsToUint16@c1,w,c
 13697  0064C4  ECA9  F03B         	call	_hexCharToUint8
 13698  0064C8  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13699  0064CA  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13700  0064CC  0E0C               	movlw	12
 13701  0064CE                     u8865:
 13702  0064CE  90D8               	bcf	status,0,c
 13703  0064D0  3606               	rlcf	??_hexCharsToUint16,f,c
 13704  0064D2  3607               	rlcf	??_hexCharsToUint16+1,f,c
 13705  0064D4  2EE8               	decfsz	wreg,f,c
 13706  0064D6  D7FB               	goto	u8865
 13707  0064D8  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 13708  0064DC  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 13709                           
 13710                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 13711  0064E0  5003               	movf	hexCharsToUint16@c2,w,c
 13712  0064E2  ECA9  F03B         	call	_hexCharToUint8
 13713  0064E6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13714  0064E8  5006               	movf	??_hexCharsToUint16,w,c
 13715  0064EA  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 13716  0064EC  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13717  0064EE  5007               	movf	??_hexCharsToUint16+1,w,c
 13718  0064F0  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13719  0064F2  5008               	movf	??_hexCharsToUint16+2,w,c
 13720  0064F4  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 13721                           
 13722                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 13723  0064F6  5004               	movf	hexCharsToUint16@c3,w,c
 13724  0064F8  ECA9  F03B         	call	_hexCharToUint8
 13725  0064FC  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13726  0064FE  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13727  006500  3A06               	swapf	??_hexCharsToUint16,f,c
 13728  006502  3A07               	swapf	??_hexCharsToUint16+1,f,c
 13729  006504  0EF0               	movlw	240
 13730  006506  1607               	andwf	??_hexCharsToUint16+1,f,c
 13731  006508  5006               	movf	??_hexCharsToUint16,w,c
 13732  00650A  0B0F               	andlw	15
 13733  00650C  1207               	iorwf	??_hexCharsToUint16+1,f,c
 13734  00650E  0EF0               	movlw	240
 13735  006510  1606               	andwf	??_hexCharsToUint16,f,c
 13736  006512  5006               	movf	??_hexCharsToUint16,w,c
 13737  006514  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13738  006516  5007               	movf	??_hexCharsToUint16+1,w,c
 13739  006518  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 13740                           
 13741                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 13742  00651A  5005               	movf	hexCharsToUint16@c4,w,c
 13743  00651C  ECA9  F03B         	call	_hexCharToUint8
 13744  006520  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13745  006522  5006               	movf	??_hexCharsToUint16,w,c
 13746  006524  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13747                           
 13748                           ;hex.c: 55: return retVal;
 13749  006526  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 13750  00652A  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 13751  00652E  0012               	return	
 13752  006530                     __end_of_hexCharsToUint16:
 13753                           	opt stack 0
 13754                           tblptru	equ	0xFF8
 13755                           tblptrh	equ	0xFF7
 13756                           tblptrl	equ	0xFF6
 13757                           tablat	equ	0xFF5
 13758                           prodh	equ	0xFF4
 13759                           prodl	equ	0xFF3
 13760                           intcon	equ	0xFF2
 13761                           intcon2	equ	0xFF1
 13762                           intcon3	equ	0xFF0
 13763                           postinc0	equ	0xFEE
 13764                           wreg	equ	0xFE8
 13765                           indf1	equ	0xFE7
 13766                           postdec1	equ	0xFE5
 13767                           plusw1	equ	0xFE3
 13768                           fsr1h	equ	0xFE2
 13769                           fsr1l	equ	0xFE1
 13770                           indf2	equ	0xFDF
 13771                           postinc2	equ	0xFDE
 13772                           postdec2	equ	0xFDD
 13773                           plusw2	equ	0xFDB
 13774                           fsr2h	equ	0xFDA
 13775                           fsr2l	equ	0xFD9
 13776                           status	equ	0xFD8
 13777                           
 13778 ;; *************** function _hexCharToUint8 *****************
 13779 ;; Defined at:
 13780 ;;		line 11 in file "hex.c"
 13781 ;; Parameters:    Size  Location     Type
 13782 ;;  c               1    wreg     unsigned char 
 13783 ;; Auto vars:     Size  Location     Type
 13784 ;;  c               1    0[COMRAM] unsigned char 
 13785 ;;  ascii           1    1[COMRAM] unsigned char 
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      unsigned char 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13799 ;;Total ram usage:        2 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; This function calls:
 13802 ;;		Nothing
 13803 ;; This function is called by:
 13804 ;;		_hexCharsToUint8
 13805 ;;		_hexCharsToUint16
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text54
 13810  007752                     __ptext54:
 13811                           	opt stack 0
 13812  007752                     _hexCharToUint8:
 13813                           	opt stack 26
 13814                           
 13815                           ;incstack = 0
 13816                           ;hexCharToUint8@c stored from wreg
 13817  007752  6E01               	movwf	hexCharToUint8@c,c
 13818                           
 13819                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 13820  007754  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 13821                           
 13822                           ;hex.c: 16: if (ascii >= 97)
 13823  007758  0E60               	movlw	96
 13824  00775A  6402               	cpfsgt	hexCharToUint8@ascii,c
 13825  00775C  D002               	goto	l2057
 13826                           
 13827                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 13828  00775E  0E57               	movlw	87
 13829  007760  D006               	goto	L3
 13830  007762                     l2057:
 13831                           
 13832                           ;hex.c: 21: else if (ascii >= 65)
 13833  007762  0E40               	movlw	64
 13834  007764  6402               	cpfsgt	hexCharToUint8@ascii,c
 13835  007766  D002               	goto	l2059
 13836                           
 13837                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 13838  007768  0E37               	movlw	55
 13839  00776A  D001               	goto	L3
 13840  00776C                     l2059:
 13841                           
 13842                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 13843  00776C  0E30               	movlw	48
 13844  00776E                     L3:
 13845  00776E  5E02               	subwf	hexCharToUint8@ascii,f,c
 13846                           
 13847                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 13848  007770  0E0F               	movlw	15
 13849  007772  6402               	cpfsgt	hexCharToUint8@ascii,c
 13850  007774  D002               	goto	l2061
 13851                           
 13852                           ;hex.c: 32: {;hex.c: 33: return 0;
 13853  007776  0E00               	movlw	0
 13854                           
 13855                           ;hex.c: 34: }
 13856  007778  0012               	return	
 13857  00777A                     l2061:
 13858                           
 13859                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 13860  00777A  5002               	movf	hexCharToUint8@ascii,w,c
 13861  00777C  0012               	return	
 13862  00777E                     __end_of_hexCharToUint8:
 13863                           	opt stack 0
 13864                           tblptru	equ	0xFF8
 13865                           tblptrh	equ	0xFF7
 13866                           tblptrl	equ	0xFF6
 13867                           tablat	equ	0xFF5
 13868                           prodh	equ	0xFF4
 13869                           prodl	equ	0xFF3
 13870                           intcon	equ	0xFF2
 13871                           intcon2	equ	0xFF1
 13872                           intcon3	equ	0xFF0
 13873                           postinc0	equ	0xFEE
 13874                           wreg	equ	0xFE8
 13875                           indf1	equ	0xFE7
 13876                           postdec1	equ	0xFE5
 13877                           plusw1	equ	0xFE3
 13878                           fsr1h	equ	0xFE2
 13879                           fsr1l	equ	0xFE1
 13880                           indf2	equ	0xFDF
 13881                           postinc2	equ	0xFDE
 13882                           postdec2	equ	0xFDD
 13883                           plusw2	equ	0xFDB
 13884                           fsr2h	equ	0xFDA
 13885                           fsr2l	equ	0xFD9
 13886                           status	equ	0xFD8
 13887                           
 13888 ;; *************** function _internalFlash_writePage *****************
 13889 ;; Defined at:
 13890 ;;		line 63 in file "internal_flash.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  page            2    2[COMRAM] unsigned int 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  address         4    4[COMRAM] unsigned long 
 13895 ;;  cntr            2    8[COMRAM] unsigned int 
 13896 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 13897 ;;  block_cntr      1   10[COMRAM] unsigned char 
 13898 ;;  i               1    0        unsigned char 
 13899 ;;  gie             1    0        unsigned char 
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      void 
 13902 ;; Registers used:
 13903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/0
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13910 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13912 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13913 ;;Total ram usage:       10 bytes
 13914 ;; Hardware stack levels used:    1
 13915 ;; Hardware stack levels required when called:    1
 13916 ;; This function calls:
 13917 ;;		__internalFlash_unlockAndActivate
 13918 ;; This function is called by:
 13919 ;;		__bootloader_program
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text55
 13924  006018                     __ptext55:
 13925                           	opt stack 0
 13926  006018                     _internalFlash_writePage:
 13927                           	opt stack 27
 13928                           
 13929                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 13930                           
 13931                           ;incstack = 0
 13932  006018  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 13933  00601C  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 13934  006020  6A07               	clrf	internalFlash_writePage@address+2,c
 13935  006022  6A08               	clrf	internalFlash_writePage@address+3,c
 13936                           
 13937                           ;internal_flash.c: 74: address <<= 10;
 13938  006024  0E0A               	movlw	10
 13939  006026                     u9775:
 13940  006026  90D8               	bcf	status,0,c
 13941  006028  3605               	rlcf	internalFlash_writePage@address,f,c
 13942  00602A  3606               	rlcf	internalFlash_writePage@address+1,f,c
 13943  00602C  3607               	rlcf	internalFlash_writePage@address+2,f,c
 13944  00602E  3608               	rlcf	internalFlash_writePage@address+3,f,c
 13945  006030  2EE8               	decfsz	wreg,f,c
 13946  006032  D7F9               	goto	u9775
 13947                           
 13948                           ;internal_flash.c: 76: TBLPTR = address;
 13949  006034  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 13950  006038  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 13951  00603C  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 13952                           
 13953                           ;internal_flash.c: 79: cntr = 0;
 13954  006040  0E00               	movlw	0
 13955  006042  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 13956  006044  0E00               	movlw	0
 13957  006046  6E09               	movwf	internalFlash_writePage@cntr,c
 13958                           
 13959                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 13960  006048  0E00               	movlw	0
 13961  00604A  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 13962  00604C                     l12539:
 13963  00604C  0E0F               	movlw	15
 13964  00604E  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 13965  006050  D001               	goto	l2298
 13966  006052  0012               	return	
 13967  006054                     l2298:
 13968                           
 13969                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 13970  006054  0E00               	movlw	0
 13971  006056  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 13972  006058                     l12545:
 13973  006058  0E3F               	movlw	63
 13974  00605A  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 13975  00605C  D001               	goto	l2300
 13976  00605E  D00D               	goto	u9800
 13977  006060                     l2300:
 13978                           
 13979                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 13980  006060  0E00               	movlw	low _pageBuffer
 13981  006062  2409               	addwf	internalFlash_writePage@cntr,w,c
 13982  006064  6ED9               	movwf	fsr2l,c
 13983  006066  0E08               	movlw	high _pageBuffer
 13984  006068  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 13985  00606A  6EDA               	movwf	fsr2h,c
 13986  00606C  50DF               	movf	indf2,w,c
 13987  00606E  6EF5               	movwf	tablat,c	;volatile
 13988  006070  000D               	tblwt		*+	;# 
 13989                           
 13990                           ;internal_flash.c: 91: ++cntr;
 13991  006072  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 13992  006074  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 13993  006076  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 13994  006078  D7EF               	goto	l12545
 13995  00607A                     u9800:
 13996  00607A  000A               	tblrd		*-	;# 
 13997                           
 13998                           ;internal_flash.c: 98: EECON1 = 0x84;
 13999  00607C  0E84               	movlw	132
 14000  00607E  6EA6               	movwf	4006,c	;volsfr
 14001                           
 14002                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14003  006080  0EB5               	movlw	181
 14004  006082  EC14  F03C         	call	__internalFlash_unlockAndActivate
 14005                           
 14006                           ;internal_flash.c: 100: TBLPTR++;
 14007  006086  0E01               	movlw	1
 14008  006088  26F6               	addwf	tblptrl,f,c	;volatile
 14009  00608A  0E00               	movlw	0
 14010  00608C  22F7               	addwfc	tblptrh,f,c	;volatile
 14011  00608E  0E00               	movlw	0
 14012  006090  22F8               	addwfc	tblptru,f,c	;volatile
 14013  006092  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 14014  006094  D7DB               	goto	l12539
 14015  006096                     __end_of_internalFlash_writePage:
 14016                           	opt stack 0
 14017                           tblptru	equ	0xFF8
 14018                           tblptrh	equ	0xFF7
 14019                           tblptrl	equ	0xFF6
 14020                           tablat	equ	0xFF5
 14021                           prodh	equ	0xFF4
 14022                           prodl	equ	0xFF3
 14023                           intcon	equ	0xFF2
 14024                           intcon2	equ	0xFF1
 14025                           intcon3	equ	0xFF0
 14026                           postinc0	equ	0xFEE
 14027                           wreg	equ	0xFE8
 14028                           indf1	equ	0xFE7
 14029                           postdec1	equ	0xFE5
 14030                           plusw1	equ	0xFE3
 14031                           fsr1h	equ	0xFE2
 14032                           fsr1l	equ	0xFE1
 14033                           indf2	equ	0xFDF
 14034                           postinc2	equ	0xFDE
 14035                           postdec2	equ	0xFDD
 14036                           plusw2	equ	0xFDB
 14037                           fsr2h	equ	0xFDA
 14038                           fsr2l	equ	0xFD9
 14039                           status	equ	0xFD8
 14040                           
 14041 ;; *************** function _internalFlash_readPage *****************
 14042 ;; Defined at:
 14043 ;;		line 37 in file "internal_flash.c"
 14044 ;; Parameters:    Size  Location     Type
 14045 ;;  page            2   21[COMRAM] unsigned int 
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;  address         4   23[COMRAM] unsigned long 
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  1    wreg      void 
 14050 ;; Registers used:
 14051 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14058 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14061 ;;Total ram usage:        6 bytes
 14062 ;; Hardware stack levels used:    1
 14063 ;; Hardware stack levels required when called:    2
 14064 ;; This function calls:
 14065 ;;		_internalFlash_addressFromPage
 14066 ;;		_internalFlash_read
 14067 ;; This function is called by:
 14068 ;;		__bootloader_program
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072                           	psect	text56
 14073  0072DE                     __ptext56:
 14074                           	opt stack 0
 14075  0072DE                     _internalFlash_readPage:
 14076                           	opt stack 26
 14077                           
 14078                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 14079                           
 14080                           ;incstack = 0
 14081  0072DE  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 14082  0072E2  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 14083  0072E6  EC7C  F03B         	call	_internalFlash_addressFromPage	;wreg free
 14084  0072EA  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 14085  0072EE  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 14086  0072F2  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 14087  0072F6  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 14088                           
 14089                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 14090  0072FA  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 14091  0072FE  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 14092  007302  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 14093  007306  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 14094  00730A  0E04               	movlw	4
 14095  00730C  6E13               	movwf	internalFlash_read@data_length+1,c
 14096  00730E  0E00               	movlw	0
 14097  007310  6E12               	movwf	internalFlash_read@data_length,c
 14098  007312  0E00               	movlw	low _pageBuffer
 14099  007314  6E14               	movwf	internalFlash_read@buffer,c
 14100  007316  0E08               	movlw	high _pageBuffer
 14101  007318  6E15               	movwf	internalFlash_read@buffer+1,c
 14102  00731A  EC61  F03A         	call	_internalFlash_read	;wreg free
 14103  00731E  0012               	return		;funcret
 14104  007320                     __end_of_internalFlash_readPage:
 14105                           	opt stack 0
 14106                           tblptru	equ	0xFF8
 14107                           tblptrh	equ	0xFF7
 14108                           tblptrl	equ	0xFF6
 14109                           tablat	equ	0xFF5
 14110                           prodh	equ	0xFF4
 14111                           prodl	equ	0xFF3
 14112                           intcon	equ	0xFF2
 14113                           intcon2	equ	0xFF1
 14114                           intcon3	equ	0xFF0
 14115                           postinc0	equ	0xFEE
 14116                           wreg	equ	0xFE8
 14117                           indf1	equ	0xFE7
 14118                           postdec1	equ	0xFE5
 14119                           plusw1	equ	0xFE3
 14120                           fsr1h	equ	0xFE2
 14121                           fsr1l	equ	0xFE1
 14122                           indf2	equ	0xFDF
 14123                           postinc2	equ	0xFDE
 14124                           postdec2	equ	0xFDD
 14125                           plusw2	equ	0xFDB
 14126                           fsr2h	equ	0xFDA
 14127                           fsr2l	equ	0xFD9
 14128                           status	equ	0xFD8
 14129                           
 14130 ;; *************** function _internalFlash_read *****************
 14131 ;; Defined at:
 14132 ;;		line 144 in file "internal_flash.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;  address         4   13[COMRAM] unsigned long 
 14135 ;;  data_length     2   17[COMRAM] unsigned int 
 14136 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 14137 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 14138 ;; Auto vars:     Size  Location     Type
 14139 ;;		None
 14140 ;; Return value:  Size  Location     Type
 14141 ;;                  1    wreg      unsigned char 
 14142 ;; Registers used:
 14143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14144 ;; Tracked objects:
 14145 ;;		On entry : 0/0
 14146 ;;		On exit  : 0/0
 14147 ;;		Unchanged: 0/0
 14148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14149 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14152 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14153 ;;Total ram usage:        8 bytes
 14154 ;; Hardware stack levels used:    1
 14155 ;; Hardware stack levels required when called:    1
 14156 ;; This function calls:
 14157 ;;		_memcpy
 14158 ;; This function is called by:
 14159 ;;		_internalFlash_readPage
 14160 ;;		__bootloader_verify_program_memory
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text57
 14165  0074C2                     __ptext57:
 14166                           	opt stack 0
 14167  0074C2                     _internalFlash_read:
 14168                           	opt stack 26
 14169                           
 14170                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 14171                           
 14172                           ;incstack = 0
 14173  0074C2  5011               	movf	internalFlash_read@address+3,w,c
 14174  0074C4  E118               	bnz	l2314
 14175  0074C6  280E               	incf	internalFlash_read@address,w,c
 14176  0074C8  0EFF               	movlw	255
 14177  0074CA  580F               	subwfb	internalFlash_read@address+1,w,c
 14178  0074CC  0E01               	movlw	1
 14179  0074CE  5810               	subwfb	internalFlash_read@address+2,w,c
 14180  0074D0  B0D8               	btfsc	status,0,c
 14181  0074D2  0012               	return	
 14182                           
 14183                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 14184                           
 14185                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 14186  0074D4  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 14187  0074D8  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 14188  0074DC  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 14189  0074E0  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 14190  0074E4  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 14191  0074E8  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 14192  0074EC  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 14193  0074F0  EC79  F034         	call	_memcpy	;wreg free
 14194  0074F4  0012               	return	
 14195  0074F6                     l2314:
 14196  0074F6  0012               	return		;funcret
 14197  0074F8                     __end_of_internalFlash_read:
 14198                           	opt stack 0
 14199                           tblptru	equ	0xFF8
 14200                           tblptrh	equ	0xFF7
 14201                           tblptrl	equ	0xFF6
 14202                           tablat	equ	0xFF5
 14203                           prodh	equ	0xFF4
 14204                           prodl	equ	0xFF3
 14205                           intcon	equ	0xFF2
 14206                           intcon2	equ	0xFF1
 14207                           intcon3	equ	0xFF0
 14208                           postinc0	equ	0xFEE
 14209                           wreg	equ	0xFE8
 14210                           indf1	equ	0xFE7
 14211                           postdec1	equ	0xFE5
 14212                           plusw1	equ	0xFE3
 14213                           fsr1h	equ	0xFE2
 14214                           fsr1l	equ	0xFE1
 14215                           indf2	equ	0xFDF
 14216                           postinc2	equ	0xFDE
 14217                           postdec2	equ	0xFDD
 14218                           plusw2	equ	0xFDB
 14219                           fsr2h	equ	0xFDA
 14220                           fsr2l	equ	0xFD9
 14221                           status	equ	0xFD8
 14222                           
 14223 ;; *************** function _internalFlash_pageFromAddress *****************
 14224 ;; Defined at:
 14225 ;;		line 308 in file "internal_flash.c"
 14226 ;; Parameters:    Size  Location     Type
 14227 ;;  address         4    0[COMRAM] unsigned long 
 14228 ;; Auto vars:     Size  Location     Type
 14229 ;;		None
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  2    0[COMRAM] unsigned int 
 14232 ;; Registers used:
 14233 ;;		wreg, status,2, status,0
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14243 ;;Total ram usage:        5 bytes
 14244 ;; Hardware stack levels used:    1
 14245 ;; This function calls:
 14246 ;;		Nothing
 14247 ;; This function is called by:
 14248 ;;		__bootloader_program
 14249 ;; This function uses a non-reentrant model
 14250 ;;
 14251                           
 14252                           	psect	text58
 14253  0079EA                     __ptext58:
 14254                           	opt stack 0
 14255  0079EA                     _internalFlash_pageFromAddress:
 14256                           	opt stack 28
 14257                           
 14258                           ;internal_flash.c: 310: address >>= 10;
 14259                           
 14260                           ;incstack = 0
 14261  0079EA  0E0A               	movlw	10
 14262  0079EC  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 14263  0079EE                     u9755:
 14264  0079EE  90D8               	bcf	status,0,c
 14265  0079F0  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 14266  0079F2  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 14267  0079F4  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 14268  0079F6  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 14269  0079F8  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 14270  0079FA  D7F9               	goto	u9755
 14271                           
 14272                           ;internal_flash.c: 311: return (uint16_t) address;
 14273  0079FC  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 14274  007A00  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 14275  007A04  0012               	return	
 14276  007A06                     __end_of_internalFlash_pageFromAddress:
 14277                           	opt stack 0
 14278                           tblptru	equ	0xFF8
 14279                           tblptrh	equ	0xFF7
 14280                           tblptrl	equ	0xFF6
 14281                           tablat	equ	0xFF5
 14282                           prodh	equ	0xFF4
 14283                           prodl	equ	0xFF3
 14284                           intcon	equ	0xFF2
 14285                           intcon2	equ	0xFF1
 14286                           intcon3	equ	0xFF0
 14287                           postinc0	equ	0xFEE
 14288                           wreg	equ	0xFE8
 14289                           indf1	equ	0xFE7
 14290                           postdec1	equ	0xFE5
 14291                           plusw1	equ	0xFE3
 14292                           fsr1h	equ	0xFE2
 14293                           fsr1l	equ	0xFE1
 14294                           indf2	equ	0xFDF
 14295                           postinc2	equ	0xFDE
 14296                           postdec2	equ	0xFDD
 14297                           plusw2	equ	0xFDB
 14298                           fsr2h	equ	0xFDA
 14299                           fsr2l	equ	0xFD9
 14300                           status	equ	0xFD8
 14301                           
 14302 ;; *************** function _internalFlash_getBuffer *****************
 14303 ;; Defined at:
 14304 ;;		line 32 in file "internal_flash.c"
 14305 ;; Parameters:    Size  Location     Type
 14306 ;;		None
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;		None
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  2    0[COMRAM] PTR unsigned char 
 14311 ;; Registers used:
 14312 ;;		wreg, status,2, status,0
 14313 ;; Tracked objects:
 14314 ;;		On entry : 0/0
 14315 ;;		On exit  : 0/0
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14322 ;;Total ram usage:        2 bytes
 14323 ;; Hardware stack levels used:    1
 14324 ;; This function calls:
 14325 ;;		Nothing
 14326 ;; This function is called by:
 14327 ;;		__bootloader_program
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           	psect	text59
 14332  007B10                     __ptext59:
 14333                           	opt stack 0
 14334  007B10                     _internalFlash_getBuffer:
 14335                           	opt stack 28
 14336                           
 14337                           ;internal_flash.c: 34: return pageBuffer;
 14338                           
 14339                           ;incstack = 0
 14340  007B10  0E00               	movlw	low _pageBuffer
 14341  007B12  6E01               	movwf	?_internalFlash_getBuffer,c
 14342  007B14  0E08               	movlw	high _pageBuffer
 14343  007B16  6E02               	movwf	?_internalFlash_getBuffer+1,c
 14344  007B18  0012               	return	
 14345  007B1A                     __end_of_internalFlash_getBuffer:
 14346                           	opt stack 0
 14347                           tblptru	equ	0xFF8
 14348                           tblptrh	equ	0xFF7
 14349                           tblptrl	equ	0xFF6
 14350                           tablat	equ	0xFF5
 14351                           prodh	equ	0xFF4
 14352                           prodl	equ	0xFF3
 14353                           intcon	equ	0xFF2
 14354                           intcon2	equ	0xFF1
 14355                           intcon3	equ	0xFF0
 14356                           postinc0	equ	0xFEE
 14357                           wreg	equ	0xFE8
 14358                           indf1	equ	0xFE7
 14359                           postdec1	equ	0xFE5
 14360                           plusw1	equ	0xFE3
 14361                           fsr1h	equ	0xFE2
 14362                           fsr1l	equ	0xFE1
 14363                           indf2	equ	0xFDF
 14364                           postinc2	equ	0xFDE
 14365                           postdec2	equ	0xFDD
 14366                           plusw2	equ	0xFDB
 14367                           fsr2h	equ	0xFDA
 14368                           fsr2l	equ	0xFD9
 14369                           status	equ	0xFD8
 14370                           
 14371 ;; *************** function _internalFlash_erasePage *****************
 14372 ;; Defined at:
 14373 ;;		line 44 in file "internal_flash.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  page            2    2[COMRAM] unsigned int 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;  address         4    4[COMRAM] unsigned long 
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      void 
 14380 ;; Registers used:
 14381 ;;		wreg, status,2, status,0, cstack
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14388 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14391 ;;Total ram usage:        6 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    1
 14394 ;; This function calls:
 14395 ;;		__internalFlash_unlockAndActivate
 14396 ;; This function is called by:
 14397 ;;		__bootloader_program
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text60
 14402  007598                     __ptext60:
 14403                           	opt stack 0
 14404  007598                     _internalFlash_erasePage:
 14405                           	opt stack 27
 14406                           
 14407                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 14408                           
 14409                           ;incstack = 0
 14410  007598  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 14411  00759C  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 14412  0075A0  6A07               	clrf	internalFlash_erasePage@address+2,c
 14413  0075A2  6A08               	clrf	internalFlash_erasePage@address+3,c
 14414                           
 14415                           ;internal_flash.c: 50: address <<= 10;
 14416  0075A4  0E0A               	movlw	10
 14417  0075A6                     u9765:
 14418  0075A6  90D8               	bcf	status,0,c
 14419  0075A8  3605               	rlcf	internalFlash_erasePage@address,f,c
 14420  0075AA  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 14421  0075AC  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 14422  0075AE  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 14423  0075B0  2EE8               	decfsz	wreg,f,c
 14424  0075B2  D7F9               	goto	u9765
 14425                           
 14426                           ;internal_flash.c: 51: TBLPTR = address;
 14427  0075B4  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 14428  0075B8  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 14429  0075BC  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 14430                           
 14431                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 14432  0075C0  84A6               	bsf	4006,2,c	;volsfr
 14433                           
 14434                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 14435  0075C2  88A6               	bsf	4006,4,c	;volsfr
 14436                           
 14437                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14438  0075C4  0EB5               	movlw	181
 14439  0075C6  EC14  F03C         	call	__internalFlash_unlockAndActivate
 14440  0075CA  0012               	return		;funcret
 14441  0075CC                     __end_of_internalFlash_erasePage:
 14442                           	opt stack 0
 14443                           tblptru	equ	0xFF8
 14444                           tblptrh	equ	0xFF7
 14445                           tblptrl	equ	0xFF6
 14446                           tablat	equ	0xFF5
 14447                           prodh	equ	0xFF4
 14448                           prodl	equ	0xFF3
 14449                           intcon	equ	0xFF2
 14450                           intcon2	equ	0xFF1
 14451                           intcon3	equ	0xFF0
 14452                           postinc0	equ	0xFEE
 14453                           wreg	equ	0xFE8
 14454                           indf1	equ	0xFE7
 14455                           postdec1	equ	0xFE5
 14456                           plusw1	equ	0xFE3
 14457                           fsr1h	equ	0xFE2
 14458                           fsr1l	equ	0xFE1
 14459                           indf2	equ	0xFDF
 14460                           postinc2	equ	0xFDE
 14461                           postdec2	equ	0xFDD
 14462                           plusw2	equ	0xFDB
 14463                           fsr2h	equ	0xFDA
 14464                           fsr2l	equ	0xFD9
 14465                           status	equ	0xFD8
 14466                           
 14467 ;; *************** function __internalFlash_unlockAndActivate *****************
 14468 ;; Defined at:
 14469 ;;		line 106 in file "internal_flash.c"
 14470 ;; Parameters:    Size  Location     Type
 14471 ;;  UnlockKey       1    wreg     unsigned char 
 14472 ;; Auto vars:     Size  Location     Type
 14473 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 14474 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  1    wreg      void 
 14477 ;; Registers used:
 14478 ;;		wreg, status,2, status,0
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14488 ;;Total ram usage:        2 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; This function calls:
 14491 ;;		Nothing
 14492 ;; This function is called by:
 14493 ;;		_internalFlash_erasePage
 14494 ;;		_internalFlash_writePage
 14495 ;;		_EraseBlock
 14496 ;; This function uses a non-reentrant model
 14497 ;;
 14498                           
 14499                           	psect	text61
 14500  007828                     __ptext61:
 14501                           	opt stack 0
 14502  007828                     __internalFlash_unlockAndActivate:
 14503                           	opt stack 27
 14504                           
 14505                           ;incstack = 0
 14506                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 14507  007828  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 14508                           
 14509                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 14510  00782A  0EB5               	movlw	181
 14511  00782C  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 14512  00782E  B4D8               	btfsc	status,2,c
 14513  007830  D002               	goto	l2305
 14514                           
 14515                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 14516  007832  94A6               	bcf	4006,2,c	;volsfr
 14517                           
 14518                           ;internal_flash.c: 118: return;
 14519  007834  0012               	return	
 14520  007836                     l2305:
 14521                           
 14522                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 14523  007836  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 14524                           
 14525                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 14526  00783A  9EF2               	bcf	intcon,7,c	;volatile
 14527                           
 14528                           ;internal_flash.c: 123: EECON2 = 0x55;
 14529  00783C  0E55               	movlw	85
 14530  00783E  6EA7               	movwf	4007,c	;volsfr
 14531                           
 14532                           ;internal_flash.c: 124: EECON2 = 0xAA;
 14533  007840  0EAA               	movlw	170
 14534  007842  6EA7               	movwf	4007,c	;volsfr
 14535                           
 14536                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 14537  007844  82A6               	bsf	4006,1,c	;volsfr
 14538                           
 14539                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 14540  007846  94A6               	bcf	4006,2,c	;volsfr
 14541                           
 14542                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 14543  007848  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 14544  00784A  0012               	return	
 14545                           
 14546                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 14547  00784C  8EF2               	bsf	intcon,7,c	;volatile
 14548  00784E  0012               	return	
 14549  007850                     __end_of__internalFlash_unlockAndActivate:
 14550                           	opt stack 0
 14551                           tblptru	equ	0xFF8
 14552                           tblptrh	equ	0xFF7
 14553                           tblptrl	equ	0xFF6
 14554                           tablat	equ	0xFF5
 14555                           prodh	equ	0xFF4
 14556                           prodl	equ	0xFF3
 14557                           intcon	equ	0xFF2
 14558                           intcon2	equ	0xFF1
 14559                           intcon3	equ	0xFF0
 14560                           postinc0	equ	0xFEE
 14561                           wreg	equ	0xFE8
 14562                           indf1	equ	0xFE7
 14563                           postdec1	equ	0xFE5
 14564                           plusw1	equ	0xFE3
 14565                           fsr1h	equ	0xFE2
 14566                           fsr1l	equ	0xFE1
 14567                           indf2	equ	0xFDF
 14568                           postinc2	equ	0xFDE
 14569                           postdec2	equ	0xFDD
 14570                           plusw2	equ	0xFDB
 14571                           fsr2h	equ	0xFDA
 14572                           fsr2l	equ	0xFD9
 14573                           status	equ	0xFD8
 14574                           
 14575 ;; *************** function _internalFlash_addressWithinPage *****************
 14576 ;; Defined at:
 14577 ;;		line 322 in file "internal_flash.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;  address         4    8[COMRAM] unsigned long 
 14580 ;;  page            2   12[COMRAM] unsigned int 
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;  page_start_a    4   18[COMRAM] unsigned long 
 14583 ;; Return value:  Size  Location     Type
 14584 ;;                  2    8[COMRAM] unsigned int 
 14585 ;; Registers used:
 14586 ;;		wreg, status,2, status,0, cstack
 14587 ;; Tracked objects:
 14588 ;;		On entry : 0/0
 14589 ;;		On exit  : 0/0
 14590 ;;		Unchanged: 0/0
 14591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14593 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14595 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14596 ;;Total ram usage:       14 bytes
 14597 ;; Hardware stack levels used:    1
 14598 ;; Hardware stack levels required when called:    1
 14599 ;; This function calls:
 14600 ;;		_internalFlash_addressFromPage
 14601 ;; This function is called by:
 14602 ;;		__bootloader_program
 14603 ;; This function uses a non-reentrant model
 14604 ;;
 14605                           
 14606                           	psect	text62
 14607  006A1C                     __ptext62:
 14608                           	opt stack 0
 14609  006A1C                     _internalFlash_addressWithinPage:
 14610                           	opt stack 27
 14611                           
 14612                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 14613                           
 14614                           ;incstack = 0
 14615  006A1C  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 14616  006A20  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 14617  006A24  EC7C  F03B         	call	_internalFlash_addressFromPage	;wreg free
 14618  006A28  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 14619  006A2C  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 14620  006A30  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 14621  006A34  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 14622                           
 14623                           ;internal_flash.c: 326: address = address - page_start_address;
 14624  006A38  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 14625  006A3C  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 14626  006A40  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 14627  006A44  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 14628  006A48  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 14629  006A4A  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 14630  006A4C  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 14631  006A4E  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 14632  006A50  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 14633  006A52  0E00               	movlw	0
 14634  006A54  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 14635  006A56  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 14636  006A58  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 14637  006A5A  5009               	movf	internalFlash_addressWithinPage@address,w,c
 14638  006A5C  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 14639  006A5E  6E09               	movwf	internalFlash_addressWithinPage@address,c
 14640  006A60  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 14641  006A62  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 14642  006A64  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 14643  006A66  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 14644  006A68  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 14645  006A6A  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 14646  006A6C  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 14647  006A6E  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 14648  006A70  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 14649                           
 14650                           ;internal_flash.c: 327: return (uint16_t) address;
 14651  006A72  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 14652  006A76  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 14653  006A7A  0012               	return	
 14654  006A7C                     __end_of_internalFlash_addressWithinPage:
 14655                           	opt stack 0
 14656                           tblptru	equ	0xFF8
 14657                           tblptrh	equ	0xFF7
 14658                           tblptrl	equ	0xFF6
 14659                           tablat	equ	0xFF5
 14660                           prodh	equ	0xFF4
 14661                           prodl	equ	0xFF3
 14662                           intcon	equ	0xFF2
 14663                           intcon2	equ	0xFF1
 14664                           intcon3	equ	0xFF0
 14665                           postinc0	equ	0xFEE
 14666                           wreg	equ	0xFE8
 14667                           indf1	equ	0xFE7
 14668                           postdec1	equ	0xFE5
 14669                           plusw1	equ	0xFE3
 14670                           fsr1h	equ	0xFE2
 14671                           fsr1l	equ	0xFE1
 14672                           indf2	equ	0xFDF
 14673                           postinc2	equ	0xFDE
 14674                           postdec2	equ	0xFDD
 14675                           plusw2	equ	0xFDB
 14676                           fsr2h	equ	0xFDA
 14677                           fsr2l	equ	0xFD9
 14678                           status	equ	0xFD8
 14679                           
 14680 ;; *************** function _internalFlash_addressFromPage *****************
 14681 ;; Defined at:
 14682 ;;		line 314 in file "internal_flash.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  page            2    0[COMRAM] unsigned int 
 14685 ;; Auto vars:     Size  Location     Type
 14686 ;;  address         4    4[COMRAM] unsigned long 
 14687 ;; Return value:  Size  Location     Type
 14688 ;;                  4    0[COMRAM] unsigned long 
 14689 ;; Registers used:
 14690 ;;		wreg, status,2, status,0
 14691 ;; Tracked objects:
 14692 ;;		On entry : 0/0
 14693 ;;		On exit  : 0/0
 14694 ;;		Unchanged: 0/0
 14695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14697 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14699 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14700 ;;Total ram usage:        8 bytes
 14701 ;; Hardware stack levels used:    1
 14702 ;; This function calls:
 14703 ;;		Nothing
 14704 ;; This function is called by:
 14705 ;;		_internalFlash_readPage
 14706 ;;		_internalFlash_addressWithinPage
 14707 ;; This function uses a non-reentrant model
 14708 ;;
 14709                           
 14710                           	psect	text63
 14711  0076F8                     __ptext63:
 14712                           	opt stack 0
 14713  0076F8                     _internalFlash_addressFromPage:
 14714                           	opt stack 27
 14715                           
 14716                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 14717                           
 14718                           ;incstack = 0
 14719  0076F8  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 14720  0076FC  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 14721  007700  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 14722  007702  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 14723                           
 14724                           ;internal_flash.c: 318: address <<= 10;
 14725  007704  0E0A               	movlw	10
 14726  007706                     u8885:
 14727  007706  90D8               	bcf	status,0,c
 14728  007708  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 14729  00770A  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 14730  00770C  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 14731  00770E  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 14732  007710  2EE8               	decfsz	wreg,f,c
 14733  007712  D7F9               	goto	u8885
 14734                           
 14735                           ;internal_flash.c: 319: return address;
 14736  007714  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 14737  007718  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 14738  00771C  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 14739  007720  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 14740  007724  0012               	return	
 14741  007726                     __end_of_internalFlash_addressFromPage:
 14742                           	opt stack 0
 14743                           tblptru	equ	0xFF8
 14744                           tblptrh	equ	0xFF7
 14745                           tblptrl	equ	0xFF6
 14746                           tablat	equ	0xFF5
 14747                           prodh	equ	0xFF4
 14748                           prodl	equ	0xFF3
 14749                           intcon	equ	0xFF2
 14750                           intcon2	equ	0xFF1
 14751                           intcon3	equ	0xFF0
 14752                           postinc0	equ	0xFEE
 14753                           wreg	equ	0xFE8
 14754                           indf1	equ	0xFE7
 14755                           postdec1	equ	0xFE5
 14756                           plusw1	equ	0xFE3
 14757                           fsr1h	equ	0xFE2
 14758                           fsr1l	equ	0xFE1
 14759                           indf2	equ	0xFDF
 14760                           postinc2	equ	0xFDE
 14761                           postdec2	equ	0xFDD
 14762                           plusw2	equ	0xFDB
 14763                           fsr2h	equ	0xFDA
 14764                           fsr2l	equ	0xFD9
 14765                           status	equ	0xFD8
 14766                           
 14767 ;; *************** function __bootloader_check_address *****************
 14768 ;; Defined at:
 14769 ;;		line 94 in file "bootloader.c"
 14770 ;; Parameters:    Size  Location     Type
 14771 ;;  address         4    0[COMRAM] unsigned long 
 14772 ;;  dataLength      1    4[COMRAM] unsigned char 
 14773 ;; Auto vars:     Size  Location     Type
 14774 ;;  cntr            1   11[COMRAM] unsigned char 
 14775 ;;  byte_status     1   10[COMRAM] enum E6919
 14776 ;;  worst_case      1    9[COMRAM] enum E6919
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1    wreg      enum E6919
 14779 ;; Registers used:
 14780 ;;		wreg, status,2, status,0
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14786 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14787 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14788 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14789 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14790 ;;Total ram usage:       12 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		__bootloader_verify_file
 14796 ;;		__bootloader_program
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           	psect	text64
 14801  00481E                     __ptext64:
 14802                           	opt stack 0
 14803  00481E                     __bootloader_check_address:
 14804                           	opt stack 28
 14805                           
 14806                           ;bootloader.c: 96: addressCheckResult_t byte_status;;bootloader.c: 97: addressCheckResul
      +                          t_t worst_case;;bootloader.c: 98: uint8_t cntr;;bootloader.c: 100: worst_case = ADDRESS_
      +                          CHECK_RESULT_OK;
 14807                           
 14808                           ;incstack = 0
 14809  00481E  0E00               	movlw	0
 14810  004820  6E0A               	movwf	__bootloader_check_address@worst_case,c
 14811                           
 14812                           ;bootloader.c: 103: for(cntr=0; cntr<dataLength; ++cntr)
 14813  004822  0E00               	movlw	0
 14814  004824  6E0C               	movwf	__bootloader_check_address@cntr,c
 14815  004826  D062               	goto	l2167
 14816  004828                     
 14817                           ;bootloader.c: 104: {;bootloader.c: 106: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 14818  004828  500C               	movf	__bootloader_check_address@cntr,w,c
 14819  00482A  2401               	addwf	__bootloader_check_address@address,w,c
 14820  00482C  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14821  00482E  0E00               	movlw	0
 14822  004830  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14823  004832  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14824  004834  0E00               	movlw	0
 14825  004836  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14826  004838  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14827  00483A  0E00               	movlw	0
 14828  00483C  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14829  00483E  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14830  004840  5009               	movf	??__bootloader_check_address+3,w,c
 14831  004842  1008               	iorwf	??__bootloader_check_address+2,w,c
 14832  004844  E104               	bnz	u9680
 14833  004846  0E90               	movlw	144
 14834  004848  5C07               	subwf	??__bootloader_check_address+1,w,c
 14835  00484A  A0D8               	btfss	status,0,c
 14836  00484C  D018               	goto	l2169
 14837  00484E                     u9680:
 14838  00484E  500C               	movf	__bootloader_check_address@cntr,w,c
 14839  004850  2401               	addwf	__bootloader_check_address@address,w,c
 14840  004852  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14841  004854  0E00               	movlw	0
 14842  004856  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14843  004858  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14844  00485A  0E00               	movlw	0
 14845  00485C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14846  00485E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14847  004860  0E00               	movlw	0
 14848  004862  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14849  004864  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14850  004866  5009               	movf	??__bootloader_check_address+3,w,c
 14851  004868  E10A               	bnz	l12471
 14852  00486A  0EF8               	movlw	248
 14853  00486C  5C06               	subwf	??__bootloader_check_address,w,c
 14854  00486E  0EFF               	movlw	255
 14855  004870  5807               	subwfb	??__bootloader_check_address+1,w,c
 14856  004872  0E01               	movlw	1
 14857  004874  5808               	subwfb	??__bootloader_check_address+2,w,c
 14858  004876  B0D8               	btfsc	status,0,c
 14859  004878  D002               	goto	l2169
 14860                           
 14861                           ;bootloader.c: 107: {;bootloader.c: 108: byte_status = ADDRESS_CHECK_RESULT_OK;
 14862  00487A  0E00               	movlw	0
 14863  00487C  D029               	goto	L4
 14864  00487E                     l2169:
 14865  00487E                     l12471:
 14866                           
 14867                           ;bootloader.c: 112: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 14868  00487E  500C               	movf	__bootloader_check_address@cntr,w,c
 14869  004880  2401               	addwf	__bootloader_check_address@address,w,c
 14870  004882  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14871  004884  0E00               	movlw	0
 14872  004886  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14873  004888  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14874  00488A  0E00               	movlw	0
 14875  00488C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14876  00488E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14877  004890  0E00               	movlw	0
 14878  004892  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14879  004894  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14880  004896  5009               	movf	??__bootloader_check_address+3,w,c
 14881  004898  E108               	bnz	u9700
 14882  00489A  0EF8               	movlw	248
 14883  00489C  5C06               	subwf	??__bootloader_check_address,w,c
 14884  00489E  0EFF               	movlw	255
 14885  0048A0  5807               	subwfb	??__bootloader_check_address+1,w,c
 14886  0048A2  0E01               	movlw	1
 14887  0048A4  5808               	subwfb	??__bootloader_check_address+2,w,c
 14888  0048A6  A0D8               	btfss	status,0,c
 14889  0048A8  D015               	goto	l2171
 14890  0048AA                     u9700:
 14891  0048AA  500C               	movf	__bootloader_check_address@cntr,w,c
 14892  0048AC  2401               	addwf	__bootloader_check_address@address,w,c
 14893  0048AE  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14894  0048B0  0E00               	movlw	0
 14895  0048B2  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14896  0048B4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14897  0048B6  0E00               	movlw	0
 14898  0048B8  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14899  0048BA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14900  0048BC  0E00               	movlw	0
 14901  0048BE  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14902  0048C0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14903  0048C2  5009               	movf	??__bootloader_check_address+3,w,c
 14904  0048C4  E107               	bnz	l2171
 14905  0048C6  0E02               	movlw	2
 14906  0048C8  5C08               	subwf	??__bootloader_check_address+2,w,c
 14907  0048CA  B0D8               	btfsc	status,0,c
 14908  0048CC  D003               	goto	l2171
 14909                           
 14910                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 14911  0048CE  0E01               	movlw	1
 14912  0048D0                     L4:
 14913  0048D0  6E0B               	movwf	__bootloader_check_address@byte_status,c
 14914                           
 14915                           ;bootloader.c: 115: }
 14916  0048D2  D001               	goto	l2172
 14917  0048D4                     l2171:
 14918                           
 14919                           ;bootloader.c: 116: else;bootloader.c: 117: {;bootloader.c: 118: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 14920  0048D4  680B               	setf	__bootloader_check_address@byte_status,c
 14921  0048D6                     l2172:
 14922                           
 14923                           ;bootloader.c: 119: };bootloader.c: 122: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 14924  0048D6  280B               	incf	__bootloader_check_address@byte_status,w,c
 14925  0048D8  A4D8               	btfss	status,2,c
 14926  0048DA  D002               	goto	l2173
 14927                           
 14928                           ;bootloader.c: 123: {;bootloader.c: 124: return ADDRESS_CHECK_RESULT_ERROR;
 14929  0048DC  0EFF               	movlw	255
 14930  0048DE  0012               	return	
 14931  0048E0                     l2173:
 14932                           
 14933                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status > worst_case)
 14934  0048E0  500B               	movf	__bootloader_check_address@byte_status,w,c
 14935  0048E2  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 14936  0048E4  A0D8               	btfss	status,0,c
 14937                           
 14938                           ;bootloader.c: 129: {;bootloader.c: 130: worst_case = byte_status;
 14939  0048E6  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 14940  0048EA  2A0C               	incf	__bootloader_check_address@cntr,f,c
 14941  0048EC                     l2167:
 14942  0048EC  5005               	movf	__bootloader_check_address@dataLength,w,c
 14943  0048EE  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 14944  0048F0  A0D8               	btfss	status,0,c
 14945  0048F2  D79A               	goto	l2168
 14946                           
 14947                           ;bootloader.c: 131: };bootloader.c: 132: };bootloader.c: 134: return worst_case;
 14948  0048F4  500A               	movf	__bootloader_check_address@worst_case,w,c
 14949  0048F6  0012               	return	
 14950  0048F8                     __end_of__bootloader_check_address:
 14951                           	opt stack 0
 14952                           tblptru	equ	0xFF8
 14953                           tblptrh	equ	0xFF7
 14954                           tblptrl	equ	0xFF6
 14955                           tablat	equ	0xFF5
 14956                           prodh	equ	0xFF4
 14957                           prodl	equ	0xFF3
 14958                           intcon	equ	0xFF2
 14959                           intcon2	equ	0xFF1
 14960                           intcon3	equ	0xFF0
 14961                           postinc0	equ	0xFEE
 14962                           wreg	equ	0xFE8
 14963                           indf1	equ	0xFE7
 14964                           postdec1	equ	0xFE5
 14965                           plusw1	equ	0xFE3
 14966                           fsr1h	equ	0xFE2
 14967                           fsr1l	equ	0xFE1
 14968                           indf2	equ	0xFDF
 14969                           postinc2	equ	0xFDE
 14970                           postdec2	equ	0xFDD
 14971                           plusw2	equ	0xFDB
 14972                           fsr2h	equ	0xFDA
 14973                           fsr2l	equ	0xFD9
 14974                           status	equ	0xFD8
 14975                           
 14976 ;; *************** function __bootloader_find_file *****************
 14977 ;; Defined at:
 14978 ;;		line 137 in file "bootloader.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;		None
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;		None
 14983 ;; Return value:  Size  Location     Type
 14984 ;;                  1    wreg      void 
 14985 ;; Registers used:
 14986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14987 ;; Tracked objects:
 14988 ;;		On entry : 0/0
 14989 ;;		On exit  : 0/0
 14990 ;;		Unchanged: 0/0
 14991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14996 ;;Total ram usage:        0 bytes
 14997 ;; Hardware stack levels used:    1
 14998 ;; Hardware stack levels required when called:    8
 14999 ;; This function calls:
 15000 ;;		_fat_find_file
 15001 ;;		_fat_get_file_size
 15002 ;; This function is called by:
 15003 ;;		_bootloader_run
 15004 ;; This function uses a non-reentrant model
 15005 ;;
 15006                           
 15007                           	psect	text65
 15008  005706                     __ptext65:
 15009                           	opt stack 0
 15010  005706                     __bootloader_find_file:
 15011                           	opt stack 21
 15012                           
 15013                           ;bootloader.c: 140: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 15014                           
 15015                           ;incstack = 0
 15016  005706  0EB6               	movlw	low _bootloader_filename
 15017  005708  6E31               	movwf	fat_find_file@name,c
 15018  00570A  0E8F               	movlw	high _bootloader_filename
 15019  00570C  6E32               	movwf	fat_find_file@name+1,c
 15020  00570E  0EC7               	movlw	low _bootloader_extension
 15021  005710  6E33               	movwf	fat_find_file@extension,c
 15022  005712  0E8F               	movlw	high _bootloader_extension
 15023  005714  6E34               	movwf	fat_find_file@extension+1,c
 15024  005716  ECD6  F028         	call	_fat_find_file	;wreg free
 15025  00571A  0100               	movlb	0	; () banked
 15026  00571C  6FFF               	movwf	_file_number& (0+255),b
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;bootloader.c: 143: if(file_number!=0xFF)
 15030  00571E  29FF               	incf	_file_number& (0+255),w,b
 15031  005720  B4D8               	btfsc	status,2,c
 15032  005722  D033               	goto	l2179
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;bootloader.c: 144: {;bootloader.c: 146: hex_file_size = fat_get_file_size(file_number);
 15036  005724  51FF               	movf	_file_number& (0+255),w,b
 15037  005726  EC27  F032         	call	_fat_get_file_size
 15038  00572A  C031  F078         	movff	?_fat_get_file_size,_hex_file_size
 15039  00572E  C032  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 15040  005732  C033  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 15041  005736  C034  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 15042                           
 15043                           ;bootloader.c: 148: hex_file_entries = 0;
 15044  00573A  0E00               	movlw	0
 15045  00573C  0100               	movlb	0	; () banked
 15046  00573E  6F85               	movwf	(_hex_file_entries+1)& (0+255),b
 15047  005740  0E00               	movlw	0
 15048  005742  6F84               	movwf	_hex_file_entries& (0+255),b
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;bootloader.c: 149: hex_file_offset = 0;
 15052  005744  0E00               	movlw	0
 15053  005746  6F7C               	movwf	_hex_file_offset& (0+255),b
 15054  005748  0E00               	movlw	0
 15055  00574A  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 15056  00574C  0E00               	movlw	0
 15057  00574E  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 15058  005750  0E00               	movlw	0
 15059  005752  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 15060                           
 15061                           ; BSR set to: 0
 15062                           ;bootloader.c: 150: file_minimum_address = 0xFFFFFFFF;
 15063  005754  0101               	movlb	1	; () banked
 15064  005756  6948               	setf	_file_minimum_address& (0+255),b
 15065  005758  6949               	setf	(_file_minimum_address+1)& (0+255),b
 15066  00575A  694A               	setf	(_file_minimum_address+2)& (0+255),b
 15067  00575C  694B               	setf	(_file_minimum_address+3)& (0+255),b
 15068                           
 15069                           ; BSR set to: 1
 15070                           ;bootloader.c: 151: file_maximum_address = 0x00000000;
 15071  00575E  0E00               	movlw	0
 15072  005760  6F44               	movwf	_file_maximum_address& (0+255),b
 15073  005762  0E00               	movlw	0
 15074  005764  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 15075  005766  0E00               	movlw	0
 15076  005768  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 15077  00576A  0E00               	movlw	0
 15078  00576C  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 15079                           
 15080                           ; BSR set to: 1
 15081                           ;bootloader.c: 152: extended_linear_address = 0x00000000;
 15082  00576E  0E00               	movlw	0
 15083  005770  6F40               	movwf	_extended_linear_address& (0+255),b
 15084  005772  0E00               	movlw	0
 15085  005774  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 15086  005776  0E00               	movlw	0
 15087  005778  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 15088  00577A  0E00               	movlw	0
 15089  00577C  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 15090                           
 15091                           ; BSR set to: 1
 15092                           ;bootloader.c: 153: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 15093  00577E  0E10               	movlw	16
 15094  005780  0100               	movlb	0	; () banked
 15095  005782  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15096                           
 15097                           ; BSR set to: 0
 15098                           ;bootloader.c: 154: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 15099  005784  0E10               	movlw	16
 15100  005786  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15101                           
 15102                           ;bootloader.c: 155: }
 15103  005788  0012               	return	
 15104  00578A                     l2179:
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;bootloader.c: 157: else;bootloader.c: 158: {;bootloader.c: 160: hex_file_size = 0;
 15108                           
 15109                           ; BSR set to: 0
 15110  00578A  0E00               	movlw	0
 15111  00578C  6F78               	movwf	_hex_file_size& (0+255),b
 15112  00578E  0E00               	movlw	0
 15113  005790  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 15114  005792  0E00               	movlw	0
 15115  005794  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 15116  005796  0E00               	movlw	0
 15117  005798  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 15118                           
 15119                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_START;
 15120  00579A  0E00               	movlw	0
 15121  00579C  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15122                           
 15123                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 15124  00579E  0E00               	movlw	0
 15125  0057A0  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15126  0057A2  0012               	return	
 15127  0057A4                     __end_of__bootloader_find_file:
 15128                           	opt stack 0
 15129                           tblptru	equ	0xFF8
 15130                           tblptrh	equ	0xFF7
 15131                           tblptrl	equ	0xFF6
 15132                           tablat	equ	0xFF5
 15133                           prodh	equ	0xFF4
 15134                           prodl	equ	0xFF3
 15135                           intcon	equ	0xFF2
 15136                           intcon2	equ	0xFF1
 15137                           intcon3	equ	0xFF0
 15138                           postinc0	equ	0xFEE
 15139                           wreg	equ	0xFE8
 15140                           indf1	equ	0xFE7
 15141                           postdec1	equ	0xFE5
 15142                           plusw1	equ	0xFE3
 15143                           fsr1h	equ	0xFE2
 15144                           fsr1l	equ	0xFE1
 15145                           indf2	equ	0xFDF
 15146                           postinc2	equ	0xFDE
 15147                           postdec2	equ	0xFDD
 15148                           plusw2	equ	0xFDB
 15149                           fsr2h	equ	0xFDA
 15150                           fsr2l	equ	0xFD9
 15151                           status	equ	0xFD8
 15152                           
 15153 ;; *************** function __normal_mode *****************
 15154 ;; Defined at:
 15155 ;;		line 151 in file "main.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      unsigned char 
 15162 ;; Registers used:
 15163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15173 ;;Total ram usage:        0 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:    3
 15176 ;; This function calls:
 15177 ;;		_i2c_eeprom_readByte
 15178 ;;		_i2c_eeprom_writeByte
 15179 ;; This function is called by:
 15180 ;;		_main
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text66
 15185  006BF2                     __ptext66:
 15186                           	opt stack 0
 15187  006BF2                     __normal_mode:
 15188                           	opt stack 27
 15189                           
 15190                           ;main.c: 153: if(i2c_eeprom_readByte(0x100)==0x94)
 15191                           
 15192                           ; BSR set to: 0
 15193                           ;incstack = 0
 15194  006BF2  0E01               	movlw	1
 15195  006BF4  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15196  006BF6  0E00               	movlw	0
 15197  006BF8  6E12               	movwf	i2c_eeprom_readByte@address,c
 15198  006BFA  EC28  F038         	call	_i2c_eeprom_readByte	;wreg free
 15199  006BFE  0A94               	xorlw	148
 15200  006C00  A4D8               	btfss	status,2,c
 15201  006C02  D00A               	goto	l877
 15202                           
 15203                           ;main.c: 154: {;main.c: 156: i2c_eeprom_writeByte(0x100, 0x00);
 15204  006C04  0E01               	movlw	1
 15205  006C06  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15206  006C08  0E00               	movlw	0
 15207  006C0A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15208  006C0C  0E00               	movlw	0
 15209  006C0E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15210  006C10  EC90  F039         	call	_i2c_eeprom_writeByte	;wreg free
 15211                           
 15212                           ;main.c: 158: return 0;
 15213  006C14  0E00               	movlw	0
 15214                           
 15215                           ;main.c: 159: }
 15216  006C16  0012               	return	
 15217  006C18                     l877:
 15218                           
 15219                           ;main.c: 160: else if(i2c_eeprom_readByte(0x100)==0x78)
 15220  006C18  0E01               	movlw	1
 15221  006C1A  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15222  006C1C  0E00               	movlw	0
 15223  006C1E  6E12               	movwf	i2c_eeprom_readByte@address,c
 15224  006C20  EC28  F038         	call	_i2c_eeprom_readByte	;wreg free
 15225  006C24  0A78               	xorlw	120
 15226  006C26  A4D8               	btfss	status,2,c
 15227  006C28  D00A               	goto	l880
 15228                           
 15229                           ;main.c: 161: {;main.c: 163: i2c_eeprom_writeByte(0x100, 0x00);
 15230  006C2A  0E01               	movlw	1
 15231  006C2C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15232  006C2E  0E00               	movlw	0
 15233  006C30  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15234  006C32  0E00               	movlw	0
 15235  006C34  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15236  006C36  EC90  F039         	call	_i2c_eeprom_writeByte	;wreg free
 15237                           
 15238                           ;main.c: 165: return 1;
 15239  006C3A  0E01               	movlw	1
 15240                           
 15241                           ;main.c: 166: }
 15242  006C3C  0012               	return	
 15243  006C3E                     l880:
 15244                           
 15245                           ;main.c: 167: else if(!PORTAbits.RA0)
 15246  006C3E  B080               	btfsc	3968,0,c	;volatile
 15247  006C40  D002               	goto	l882
 15248                           
 15249                           ;main.c: 168: {;main.c: 170: return 0;
 15250  006C42  0E00               	movlw	0
 15251                           
 15252                           ;main.c: 171: }
 15253  006C44  0012               	return	
 15254  006C46                     l882:
 15255                           
 15256                           ;main.c: 172: else;main.c: 173: {;main.c: 175: return 1;
 15257  006C46  0E01               	movlw	1
 15258  006C48  0012               	return	
 15259  006C4A                     __end_of__normal_mode:
 15260                           	opt stack 0
 15261                           tblptru	equ	0xFF8
 15262                           tblptrh	equ	0xFF7
 15263                           tblptrl	equ	0xFF6
 15264                           tablat	equ	0xFF5
 15265                           prodh	equ	0xFF4
 15266                           prodl	equ	0xFF3
 15267                           intcon	equ	0xFF2
 15268                           intcon2	equ	0xFF1
 15269                           intcon3	equ	0xFF0
 15270                           postinc0	equ	0xFEE
 15271                           wreg	equ	0xFE8
 15272                           indf1	equ	0xFE7
 15273                           postdec1	equ	0xFE5
 15274                           plusw1	equ	0xFE3
 15275                           fsr1h	equ	0xFE2
 15276                           fsr1l	equ	0xFE1
 15277                           indf2	equ	0xFDF
 15278                           postinc2	equ	0xFDE
 15279                           postdec2	equ	0xFDD
 15280                           plusw2	equ	0xFDB
 15281                           fsr2h	equ	0xFDA
 15282                           fsr2l	equ	0xFD9
 15283                           status	equ	0xFD8
 15284                           
 15285 ;; *************** function _i2c_eeprom_readByte *****************
 15286 ;; Defined at:
 15287 ;;		line 359 in file "i2c.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;  address         2   17[COMRAM] unsigned int 
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;  addr            1   23[COMRAM] unsigned char 
 15292 ;;  slave_addres    1   22[COMRAM] unsigned char 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  1    wreg      unsigned char 
 15295 ;; Registers used:
 15296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15304 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15306 ;;Total ram usage:        7 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:    2
 15309 ;; This function calls:
 15310 ;;		__i2c_read
 15311 ;;		__i2c_write
 15312 ;;		_i2c_set_frequency
 15313 ;; This function is called by:
 15314 ;;		__normal_mode
 15315 ;; This function uses a non-reentrant model
 15316 ;;
 15317                           
 15318                           	psect	text67
 15319  007050                     __ptext67:
 15320                           	opt stack 0
 15321  007050                     _i2c_eeprom_readByte:
 15322                           	opt stack 27
 15323                           
 15324                           ;i2c.c: 361: uint8_t slave_address;;i2c.c: 362: uint8_t addr;;i2c.c: 363: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 15325                           
 15326                           ;incstack = 0
 15327  007050  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 15328  007054  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 15329  007058  0E07               	movlw	7
 15330  00705A  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 15331  00705C                     u10285:
 15332  00705C  90D8               	bcf	status,0,c
 15333  00705E  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 15334  007060  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 15335  007062  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 15336  007064  D7FB               	goto	u10285
 15337  007066  5014               	movf	??_i2c_eeprom_readByte,w,c
 15338  007068  0B0E               	andlw	14
 15339  00706A  09A0               	iorlw	160
 15340  00706C  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 15341                           
 15342                           ;i2c.c: 364: addr = address & 0xFF;
 15343  00706E  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 15344                           
 15345                           ;i2c.c: 367: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15346  007072  0E02               	movlw	2
 15347  007074  ECD5  F03B         	call	_i2c_set_frequency
 15348                           
 15349                           ;i2c.c: 369: _i2c_write(slave_address, &addr, 1);
 15350  007078  0E18               	movlw	low i2c_eeprom_readByte@addr
 15351  00707A  6E06               	movwf	__i2c_write@data,c
 15352  00707C  0E00               	movlw	high i2c_eeprom_readByte@addr
 15353  00707E  6E07               	movwf	__i2c_write@data+1,c
 15354  007080  0E01               	movlw	1
 15355  007082  6E08               	movwf	__i2c_write@length,c
 15356  007084  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15357  007086  ECC3  F038         	call	__i2c_write
 15358                           
 15359                           ;i2c.c: 370: _i2c_read(slave_address, &addr, 1);
 15360  00708A  0E18               	movlw	low i2c_eeprom_readByte@addr
 15361  00708C  6E06               	movwf	__i2c_read@data,c
 15362  00708E  0E00               	movlw	high i2c_eeprom_readByte@addr
 15363  007090  6E07               	movwf	__i2c_read@data+1,c
 15364  007092  0E01               	movlw	1
 15365  007094  6E08               	movwf	__i2c_read@length,c
 15366  007096  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15367  007098  ECBE  F02E         	call	__i2c_read
 15368                           
 15369                           ;i2c.c: 371: return addr;
 15370  00709C  5018               	movf	i2c_eeprom_readByte@addr,w,c
 15371  00709E  0012               	return	
 15372  0070A0                     __end_of_i2c_eeprom_readByte:
 15373                           	opt stack 0
 15374                           tblptru	equ	0xFF8
 15375                           tblptrh	equ	0xFF7
 15376                           tblptrl	equ	0xFF6
 15377                           tablat	equ	0xFF5
 15378                           prodh	equ	0xFF4
 15379                           prodl	equ	0xFF3
 15380                           intcon	equ	0xFF2
 15381                           intcon2	equ	0xFF1
 15382                           intcon3	equ	0xFF0
 15383                           postinc0	equ	0xFEE
 15384                           wreg	equ	0xFE8
 15385                           indf1	equ	0xFE7
 15386                           postdec1	equ	0xFE5
 15387                           plusw1	equ	0xFE3
 15388                           fsr1h	equ	0xFE2
 15389                           fsr1l	equ	0xFE1
 15390                           indf2	equ	0xFDF
 15391                           postinc2	equ	0xFDE
 15392                           postdec2	equ	0xFDD
 15393                           plusw2	equ	0xFDB
 15394                           fsr2h	equ	0xFDA
 15395                           fsr2l	equ	0xFD9
 15396                           status	equ	0xFD8
 15397                           
 15398 ;; *************** function __i2c_read *****************
 15399 ;; Defined at:
 15400 ;;		line 153 in file "i2c.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;  slave_addres    1    wreg     unsigned char 
 15403 ;;  data            2    5[COMRAM] PTR unsigned char 
 15404 ;;		 -> i2c_eeprom_readByte@addr(1), 
 15405 ;;  length          1    7[COMRAM] unsigned char 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;  slave_addres    1   15[COMRAM] unsigned char 
 15408 ;;  cntr            1   16[COMRAM] unsigned char 
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  1    wreg      void 
 15411 ;; Registers used:
 15412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15413 ;; Tracked objects:
 15414 ;;		On entry : 0/0
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15418 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15420 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15421 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15422 ;;Total ram usage:       12 bytes
 15423 ;; Hardware stack levels used:    1
 15424 ;; Hardware stack levels required when called:    1
 15425 ;; This function calls:
 15426 ;;		__i2c_acknowledge
 15427 ;;		__i2c_get
 15428 ;;		__i2c_not_acknowledge
 15429 ;;		__i2c_send
 15430 ;;		__i2c_start
 15431 ;;		__i2c_stop
 15432 ;;		__i2c_wait_idle
 15433 ;; This function is called by:
 15434 ;;		_i2c_eeprom_readByte
 15435 ;;		_i2c_eeprom_read
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439                           	psect	text68
 15440  005D7C                     __ptext68:
 15441                           	opt stack 0
 15442  005D7C                     __i2c_read:
 15443                           	opt stack 27
 15444                           
 15445                           ;incstack = 0
 15446                           ;__i2c_read@slave_address stored from wreg
 15447  005D7C  6E10               	movwf	__i2c_read@slave_address,c
 15448                           
 15449                           ;i2c.c: 155: uint8_t cntr;;i2c.c: 157: _i2c_wait_idle();
 15450  005D7E  EC25  F036         	call	__i2c_wait_idle	;wreg free
 15451                           
 15452                           ;i2c.c: 158: _i2c_start();
 15453  005D82  ECC8  F03D         	call	__i2c_start	;wreg free
 15454                           
 15455                           ;i2c.c: 159: _i2c_wait_idle();
 15456  005D86  EC25  F036         	call	__i2c_wait_idle	;wreg free
 15457                           
 15458                           ;i2c.c: 160: _i2c_send(slave_address | 0x01);
 15459  005D8A  5010               	movf	__i2c_read@slave_address,w,c
 15460  005D8C  0901               	iorlw	1
 15461  005D8E  ECCC  F03D         	call	__i2c_send
 15462                           
 15463                           ;i2c.c: 161: _i2c_wait_idle();
 15464  005D92  EC25  F036         	call	__i2c_wait_idle	;wreg free
 15465                           
 15466                           ;i2c.c: 163: for(cntr=0; cntr<length-1; ++cntr)
 15467  005D96  0E00               	movlw	0
 15468  005D98  6E11               	movwf	__i2c_read@cntr,c
 15469  005D9A  D00E               	goto	l1144
 15470  005D9C                     
 15471                           ;i2c.c: 164: {;i2c.c: 165: data[cntr] = _i2c_get();
 15472  005D9C  5011               	movf	__i2c_read@cntr,w,c
 15473  005D9E  0D01               	mullw	1
 15474  005DA0  50F3               	movf	prodl,w,c
 15475  005DA2  2406               	addwf	__i2c_read@data,w,c
 15476  005DA4  6ED9               	movwf	fsr2l,c
 15477  005DA6  50F4               	movf	prodh,w,c
 15478  005DA8  2007               	addwfc	__i2c_read@data+1,w,c
 15479  005DAA  6EDA               	movwf	fsr2h,c
 15480  005DAC  EC92  F03D         	call	__i2c_get	;wreg free
 15481  005DB0  6EDF               	movwf	indf2,c
 15482                           
 15483                           ;i2c.c: 166: _i2c_acknowledge();
 15484  005DB2  EC97  F03D         	call	__i2c_acknowledge	;wreg free
 15485  005DB6  2A11               	incf	__i2c_read@cntr,f,c
 15486  005DB8                     l1144:
 15487  005DB8  0EFF               	movlw	255
 15488  005DBA  6E09               	movwf	??__i2c_read& (0+255),c
 15489  005DBC  0EFF               	movlw	255
 15490  005DBE  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 15491  005DC0  5008               	movf	__i2c_read@length,w,c
 15492  005DC2  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 15493  005DC4  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 15494  005DC6  5009               	movf	??__i2c_read,w,c
 15495  005DC8  260B               	addwf	??__i2c_read+2,f,c
 15496  005DCA  500A               	movf	??__i2c_read+1,w,c
 15497  005DCC  220C               	addwfc	??__i2c_read+3,f,c
 15498  005DCE  5011               	movf	__i2c_read@cntr,w,c
 15499  005DD0  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 15500  005DD2  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 15501  005DD4  500B               	movf	??__i2c_read+2,w,c
 15502  005DD6  5C0D               	subwf	??__i2c_read+4,w,c
 15503  005DD8  500E               	movf	??__i2c_read+5,w,c
 15504  005DDA  0A80               	xorlw	128
 15505  005DDC  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 15506  005DDE  500C               	movf	??__i2c_read+3,w,c
 15507  005DE0  0A80               	xorlw	128
 15508  005DE2  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 15509  005DE4  A0D8               	btfss	status,0,c
 15510  005DE6  D7DA               	goto	l1145
 15511                           
 15512                           ;i2c.c: 167: };i2c.c: 168: data[cntr] = _i2c_get();
 15513  005DE8  5011               	movf	__i2c_read@cntr,w,c
 15514  005DEA  0D01               	mullw	1
 15515  005DEC  50F3               	movf	prodl,w,c
 15516  005DEE  2406               	addwf	__i2c_read@data,w,c
 15517  005DF0  6ED9               	movwf	fsr2l,c
 15518  005DF2  50F4               	movf	prodh,w,c
 15519  005DF4  2007               	addwfc	__i2c_read@data+1,w,c
 15520  005DF6  6EDA               	movwf	fsr2h,c
 15521  005DF8  EC92  F03D         	call	__i2c_get	;wreg free
 15522  005DFC  6EDF               	movwf	indf2,c
 15523                           
 15524                           ;i2c.c: 169: _i2c_not_acknowledge();
 15525  005DFE  EC8D  F03D         	call	__i2c_not_acknowledge	;wreg free
 15526                           
 15527                           ;i2c.c: 171: _i2c_stop();
 15528  005E02  ECC4  F03D         	call	__i2c_stop	;wreg free
 15529  005E06  0012               	return		;funcret
 15530  005E08                     __end_of__i2c_read:
 15531                           	opt stack 0
 15532                           tblptru	equ	0xFF8
 15533                           tblptrh	equ	0xFF7
 15534                           tblptrl	equ	0xFF6
 15535                           tablat	equ	0xFF5
 15536                           prodh	equ	0xFF4
 15537                           prodl	equ	0xFF3
 15538                           intcon	equ	0xFF2
 15539                           intcon2	equ	0xFF1
 15540                           intcon3	equ	0xFF0
 15541                           postinc0	equ	0xFEE
 15542                           wreg	equ	0xFE8
 15543                           indf1	equ	0xFE7
 15544                           postdec1	equ	0xFE5
 15545                           plusw1	equ	0xFE3
 15546                           fsr1h	equ	0xFE2
 15547                           fsr1l	equ	0xFE1
 15548                           indf2	equ	0xFDF
 15549                           postinc2	equ	0xFDE
 15550                           postdec2	equ	0xFDD
 15551                           plusw2	equ	0xFDB
 15552                           fsr2h	equ	0xFDA
 15553                           fsr2l	equ	0xFD9
 15554                           status	equ	0xFD8
 15555                           
 15556 ;; *************** function __i2c_not_acknowledge *****************
 15557 ;; Defined at:
 15558 ;;		line 90 in file "i2c.c"
 15559 ;; Parameters:    Size  Location     Type
 15560 ;;		None
 15561 ;; Auto vars:     Size  Location     Type
 15562 ;;		None
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      void 
 15565 ;; Registers used:
 15566 ;;		None
 15567 ;; Tracked objects:
 15568 ;;		On entry : 0/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15576 ;;Total ram usage:        0 bytes
 15577 ;; Hardware stack levels used:    1
 15578 ;; This function calls:
 15579 ;;		Nothing
 15580 ;; This function is called by:
 15581 ;;		__i2c_read
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           	psect	text69
 15586  007B1A                     __ptext69:
 15587                           	opt stack 0
 15588  007B1A                     __i2c_not_acknowledge:
 15589                           	opt stack 27
 15590                           
 15591                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 15592                           
 15593                           ;incstack = 0
 15594  007B1A  8AC5               	bsf	4037,5,c	;volatile
 15595                           
 15596                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 15597  007B1C  88C5               	bsf	4037,4,c	;volatile
 15598  007B1E  A8C5               	btfss	4037,4,c	;volatile
 15599  007B20  0012               	return	
 15600  007B22  D7FD               	goto	l1119
 15601  007B24                     __end_of__i2c_not_acknowledge:
 15602                           	opt stack 0
 15603                           tblptru	equ	0xFF8
 15604                           tblptrh	equ	0xFF7
 15605                           tblptrl	equ	0xFF6
 15606                           tablat	equ	0xFF5
 15607                           prodh	equ	0xFF4
 15608                           prodl	equ	0xFF3
 15609                           intcon	equ	0xFF2
 15610                           intcon2	equ	0xFF1
 15611                           intcon3	equ	0xFF0
 15612                           postinc0	equ	0xFEE
 15613                           wreg	equ	0xFE8
 15614                           indf1	equ	0xFE7
 15615                           postdec1	equ	0xFE5
 15616                           plusw1	equ	0xFE3
 15617                           fsr1h	equ	0xFE2
 15618                           fsr1l	equ	0xFE1
 15619                           indf2	equ	0xFDF
 15620                           postinc2	equ	0xFDE
 15621                           postdec2	equ	0xFDD
 15622                           plusw2	equ	0xFDB
 15623                           fsr2h	equ	0xFDA
 15624                           fsr2l	equ	0xFD9
 15625                           status	equ	0xFD8
 15626                           
 15627 ;; *************** function __i2c_get *****************
 15628 ;; Defined at:
 15629 ;;		line 67 in file "i2c.c"
 15630 ;; Parameters:    Size  Location     Type
 15631 ;;		None
 15632 ;; Auto vars:     Size  Location     Type
 15633 ;;		None
 15634 ;; Return value:  Size  Location     Type
 15635 ;;                  1    wreg      unsigned char 
 15636 ;; Registers used:
 15637 ;;		wreg, status,2
 15638 ;; Tracked objects:
 15639 ;;		On entry : 0/0
 15640 ;;		On exit  : 0/0
 15641 ;;		Unchanged: 0/0
 15642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15647 ;;Total ram usage:        0 bytes
 15648 ;; Hardware stack levels used:    1
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		__i2c_read
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text70
 15657  007B24                     __ptext70:
 15658                           	opt stack 0
 15659  007B24                     __i2c_get:
 15660                           	opt stack 27
 15661                           
 15662                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 15663                           
 15664                           ;incstack = 0
 15665  007B24  86C5               	bsf	4037,3,c	;volatile
 15666  007B26  B6C5               	btfsc	4037,3,c	;volatile
 15667  007B28  D7FE               	goto	l1101
 15668                           
 15669                           ;i2c.c: 71: return SSP1BUF;
 15670  007B2A  50C9               	movf	4041,w,c	;volatile
 15671  007B2C  0012               	return	
 15672  007B2E                     __end_of__i2c_get:
 15673                           	opt stack 0
 15674                           tblptru	equ	0xFF8
 15675                           tblptrh	equ	0xFF7
 15676                           tblptrl	equ	0xFF6
 15677                           tablat	equ	0xFF5
 15678                           prodh	equ	0xFF4
 15679                           prodl	equ	0xFF3
 15680                           intcon	equ	0xFF2
 15681                           intcon2	equ	0xFF1
 15682                           intcon3	equ	0xFF0
 15683                           postinc0	equ	0xFEE
 15684                           wreg	equ	0xFE8
 15685                           indf1	equ	0xFE7
 15686                           postdec1	equ	0xFE5
 15687                           plusw1	equ	0xFE3
 15688                           fsr1h	equ	0xFE2
 15689                           fsr1l	equ	0xFE1
 15690                           indf2	equ	0xFDF
 15691                           postinc2	equ	0xFDE
 15692                           postdec2	equ	0xFDD
 15693                           plusw2	equ	0xFDB
 15694                           fsr2h	equ	0xFDA
 15695                           fsr2l	equ	0xFD9
 15696                           status	equ	0xFD8
 15697                           
 15698 ;; *************** function __i2c_acknowledge *****************
 15699 ;; Defined at:
 15700 ;;		line 82 in file "i2c.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      void 
 15707 ;; Registers used:
 15708 ;;		None
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; This function calls:
 15721 ;;		Nothing
 15722 ;; This function is called by:
 15723 ;;		__i2c_read
 15724 ;; This function uses a non-reentrant model
 15725 ;;
 15726                           
 15727                           	psect	text71
 15728  007B2E                     __ptext71:
 15729                           	opt stack 0
 15730  007B2E                     __i2c_acknowledge:
 15731                           	opt stack 27
 15732                           
 15733                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 15734                           
 15735                           ;incstack = 0
 15736  007B2E  9AC5               	bcf	4037,5,c	;volatile
 15737                           
 15738                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 15739  007B30  88C5               	bsf	4037,4,c	;volatile
 15740  007B32  A8C5               	btfss	4037,4,c	;volatile
 15741  007B34  0012               	return	
 15742  007B36  D7FD               	goto	l1113
 15743  007B38                     __end_of__i2c_acknowledge:
 15744                           	opt stack 0
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           intcon	equ	0xFF2
 15752                           intcon2	equ	0xFF1
 15753                           intcon3	equ	0xFF0
 15754                           postinc0	equ	0xFEE
 15755                           wreg	equ	0xFE8
 15756                           indf1	equ	0xFE7
 15757                           postdec1	equ	0xFE5
 15758                           plusw1	equ	0xFE3
 15759                           fsr1h	equ	0xFE2
 15760                           fsr1l	equ	0xFE1
 15761                           indf2	equ	0xFDF
 15762                           postinc2	equ	0xFDE
 15763                           postdec2	equ	0xFDD
 15764                           plusw2	equ	0xFDB
 15765                           fsr2h	equ	0xFDA
 15766                           fsr2l	equ	0xFD9
 15767                           status	equ	0xFD8
 15768                           
 15769 ;; *************** function _USBDeviceTasks *****************
 15770 ;; Defined at:
 15771 ;;		line 477 in file "usb_device.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;		None
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;  i               1   31[COMRAM] unsigned char 
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  1    wreg      void 
 15778 ;; Registers used:
 15779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15780 ;; Tracked objects:
 15781 ;;		On entry : 0/0
 15782 ;;		On exit  : 0/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15789 ;;Total ram usage:        1 bytes
 15790 ;; Hardware stack levels used:    1
 15791 ;; Hardware stack levels required when called:    8
 15792 ;; This function calls:
 15793 ;;		_USBCtrlEPAllowStatusStage
 15794 ;;		_USBCtrlEPService
 15795 ;;		_USBDeviceInit
 15796 ;;		_USBIncrement1msInternalTimers
 15797 ;;		_USBStallHandler
 15798 ;;		_USBSuspend
 15799 ;;		_USBWakeFromSuspend
 15800 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15801 ;; This function is called by:
 15802 ;;		_main
 15803 ;; This function uses a non-reentrant model
 15804 ;;
 15805                           
 15806                           	psect	text72
 15807  003508                     __ptext72:
 15808                           	opt stack 0
 15809  003508                     _USBDeviceTasks:
 15810                           	opt stack 22
 15811                           
 15812                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 15813                           
 15814                           ; BSR set to: 15
 15815                           
 15816                           ; BSR set to: 15
 15817                           ;usb_device.c: 543: return;
 15818                           
 15819                           ; BSR set to: 15
 15820                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 15821                           
 15822                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 15823                           
 15824                           ;usb_device.c: 511: UIE = 0;
 15825                           
 15826                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 15827                           
 15828                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 15829                           
 15830                           ;incstack = 0
 15831  003508  505F               	movf	_USBDeviceState,w,c
 15832  00350A  A4D8               	btfss	status,2,c
 15833  00350C  D011               	goto	l150
 15834                           
 15835                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 15836  00350E  0E00               	movlw	0
 15837  003510  6E65               	movwf	3941,c	;volatile
 15838                           
 15839                           ;usb_device.c: 572: UIE = 0;
 15840  003512  0E00               	movlw	0
 15841  003514  010F               	movlb	15	; () banked
 15842  003516  6F36               	movwf	54,b	;volatile
 15843                           
 15844                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15845  003518  0E16               	movlw	22
 15846  00351A  6F39               	movwf	57,b	;volatile
 15847  00351C  0E9F               	movlw	159
 15848  00351E  6F37               	movwf	55,b	;volatile
 15849  003520  0E7B               	movlw	123
 15850  003522  6F36               	movwf	54,b	;volatile
 15851                           
 15852                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15853  003524  D001               	goto	l151
 15854  003526                     l152:
 15855  003526  8665               	bsf	3941,3,c	;volatile
 15856  003528                     l151:
 15857  003528  A665               	btfss	3941,3,c	;volatile
 15858  00352A  D7FD               	goto	l152
 15859                           
 15860                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 15861  00352C  0E01               	movlw	1
 15862  00352E  6E5F               	movwf	_USBDeviceState,c
 15863  003530                     l150:
 15864                           
 15865                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 15866  003530  045F               	decf	_USBDeviceState,w,c
 15867  003532  B4D8               	btfsc	status,2,c
 15868                           
 15869                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 15870  003534  BA65               	btfsc	3941,5,c	;volatile
 15871  003536  D009               	goto	l155
 15872                           
 15873                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 15874  003538  0E00               	movlw	0
 15875  00353A  6E62               	movwf	3938,c	;volatile
 15876                           
 15877                           ;usb_device.c: 612: UIE=0;
 15878  00353C  0E00               	movlw	0
 15879  00353E  010F               	movlb	15	; () banked
 15880  003540  6F36               	movwf	54,b	;volatile
 15881                           
 15882                           ; BSR set to: 15
 15883                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 15884  003542  8136               	bsf	54,0,b	;volatile
 15885                           
 15886                           ; BSR set to: 15
 15887                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 15888  003544  8936               	bsf	54,4,b	;volatile
 15889                           
 15890                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 15891  003546  0E02               	movlw	2
 15892  003548  6E5F               	movwf	_USBDeviceState,c
 15893  00354A                     l155:
 15894                           
 15895                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 15896                           
 15897                           ; BSR set to: 15
 15898                           
 15899                           ; BSR set to: 15
 15900  00354A  A462               	btfss	3938,2,c	;volatile
 15901  00354C  D006               	goto	l156
 15902  00354E  010F               	movlb	15	; () banked
 15903  003550  A536               	btfss	54,2,b	;volatile
 15904  003552  D003               	goto	l156
 15905                           
 15906                           ; BSR set to: 15
 15907                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 15908  003554  9462               	bcf	3938,2,c	;volatile
 15909                           
 15910                           ; BSR set to: 15
 15911                           ;usb_device.c: 640: USBWakeFromSuspend();
 15912  003556  EC45  F03A         	call	_USBWakeFromSuspend	;wreg free
 15913  00355A                     l156:
 15914                           
 15915                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 15916  00355A  A265               	btfss	3941,1,c	;volatile
 15917  00355C  D002               	goto	l157
 15918                           
 15919                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 15920  00355E  98A1               	bcf	4001,4,c	;volatile
 15921                           
 15922                           ;usb_device.c: 650: return;
 15923  003560  0012               	return	
 15924  003562                     l157:
 15925                           
 15926                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 15927  003562  A062               	btfss	3938,0,c	;volatile
 15928  003564  D008               	goto	l158
 15929  003566  010F               	movlb	15	; () banked
 15930  003568  A136               	btfss	54,0,b	;volatile
 15931  00356A  D005               	goto	l158
 15932                           
 15933                           ; BSR set to: 15
 15934                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 15935  00356C  ECE8  F01B         	call	_USBDeviceInit	;wreg free
 15936                           
 15937                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 15938  003570  0E04               	movlw	4
 15939  003572  6E5F               	movwf	_USBDeviceState,c
 15940                           
 15941                           ;usb_device.c: 681: (UIR &= 0xFE);
 15942  003574  9062               	bcf	3938,0,c	;volatile
 15943  003576                     l158:
 15944                           
 15945                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 15946  003576  A862               	btfss	3938,4,c	;volatile
 15947  003578  D004               	goto	l159
 15948  00357A  010F               	movlb	15	; () banked
 15949  00357C  B936               	btfsc	54,4,b	;volatile
 15950                           
 15951                           ; BSR set to: 15
 15952                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 15953  00357E  EC64  F03B         	call	_USBSuspend	;wreg free
 15954  003582                     l159:
 15955                           
 15956                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 15957  003582  AC62               	btfss	3938,6,c	;volatile
 15958  003584  D01C               	goto	l163
 15959                           
 15960                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 15961  003586  010F               	movlb	15	; () banked
 15962  003588  AD36               	btfss	54,6,b	;volatile
 15963  00358A  D00E               	goto	l161
 15964                           
 15965                           ; BSR set to: 15
 15966                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15967  00358C  0E00               	movlw	0
 15968  00358E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15969  003590  0E73               	movlw	115
 15970  003592  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15971  003594  0E00               	movlw	0
 15972  003596  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15973  003598  0E00               	movlw	0
 15974  00359A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15975  00359C  0E00               	movlw	0
 15976  00359E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15977  0035A0  0E01               	movlw	1
 15978  0035A2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15979  0035A4  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15980  0035A8                     l161:
 15981                           
 15982                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 15983  0035A8  9C62               	bcf	3938,6,c	;volatile
 15984                           
 15985                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 15986  0035AA  ECA6  F03C         	call	_USBIncrement1msInternalTimers	;wreg free
 15987                           
 15988                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 15989  0035AE  0100               	movlb	0	; () banked
 15990  0035B0  51AF               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 15991  0035B2  A4D8               	btfss	status,2,c
 15992                           
 15993                           ; BSR set to: 0
 15994                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 15995  0035B4  07AF               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 15999                           
 16000                           ; BSR set to: 0
 16001  0035B6  51AF               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16002  0035B8  B4D8               	btfsc	status,2,c
 16003                           
 16004                           ; BSR set to: 0
 16005                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 16006  0035BA  ECB2  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16007  0035BE                     l163:
 16008                           
 16009                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 16010  0035BE  AA62               	btfss	3938,5,c	;volatile
 16011  0035C0  D004               	goto	l164
 16012  0035C2  010F               	movlb	15	; () banked
 16013  0035C4  BB36               	btfsc	54,5,b	;volatile
 16014                           
 16015                           ; BSR set to: 15
 16016                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 16017  0035C6  EC0B  F039         	call	_USBStallHandler	;wreg free
 16018  0035CA                     l164:
 16019                           
 16020                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 16021  0035CA  A262               	btfss	3938,1,c	;volatile
 16022  0035CC  D012               	goto	l165
 16023  0035CE  010F               	movlb	15	; () banked
 16024  0035D0  A336               	btfss	54,1,b	;volatile
 16025  0035D2  D00F               	goto	l165
 16026                           
 16027                           ; BSR set to: 15
 16028                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 16029  0035D4  0E7F               	movlw	127
 16030  0035D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16031  0035D8  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16032  0035DA  0E00               	movlw	0
 16033  0035DC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16034  0035DE  0E00               	movlw	0
 16035  0035E0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16036  0035E2  0E00               	movlw	0
 16037  0035E4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16038  0035E6  0E01               	movlw	1
 16039  0035E8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16040  0035EA  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16041                           
 16042                           ;usb_device.c: 759: {UEIR = 0;};
 16043  0035EE  0E00               	movlw	0
 16044  0035F0  6E63               	movwf	3939,c	;volatile
 16045  0035F2                     l165:
 16046                           
 16047                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16048  0035F2  0E04               	movlw	4
 16049  0035F4  605F               	cpfslt	_USBDeviceState,c
 16050  0035F6  D002               	goto	l166
 16051                           
 16052                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16053  0035F8  98A1               	bcf	4001,4,c	;volatile
 16054                           
 16055                           ;usb_device.c: 777: return;
 16056  0035FA  0012               	return	
 16057  0035FC                     l166:
 16058                           
 16059                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 16060  0035FC  010F               	movlb	15	; () banked
 16061  0035FE  A736               	btfss	54,3,b	;volatile
 16062  003600  D03C               	goto	u11190
 16063                           
 16064                           ; BSR set to: 15
 16065                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16066  003602  0E00               	movlw	0
 16067  003604  6E20               	movwf	USBDeviceTasks@i,c
 16068  003606                     l13863:
 16069                           
 16070                           ; BSR set to: 15
 16071  003606  0E03               	movlw	3
 16072  003608  6420               	cpfsgt	USBDeviceTasks@i,c
 16073  00360A  D001               	goto	l168
 16074  00360C  D036               	goto	u11190
 16075  00360E                     l168:
 16076                           
 16077                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 16078  00360E  A662               	btfss	3938,3,c	;volatile
 16079  003610  D034               	goto	u11190
 16080                           
 16081                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 16082  003612  CF64 F0BA          	movff	3940,_USTATcopy	;volatile
 16083                           
 16084                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16085  003616  0100               	movlb	0	; () banked
 16086  003618  31BA               	rrcf	_USTATcopy& (0+255),w,b
 16087  00361A  32E8               	rrcf	wreg,f,c
 16088  00361C  32E8               	rrcf	wreg,f,c
 16089  00361E  0B0F               	andlw	15
 16090  003620  6FB1               	movwf	_endpoint_number& (0+255),b
 16091                           
 16092                           ; BSR set to: 0
 16093                           ;usb_device.c: 793: (UIR &= 0xF7);
 16094  003622  9662               	bcf	3938,3,c	;volatile
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 16098  003624  B5BA               	btfsc	_USTATcopy& (0+255),2,b
 16099  003626  D007               	goto	l171
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 16103  003628  51B1               	movf	_endpoint_number& (0+255),w,b
 16104  00362A  0D01               	mullw	1
 16105  00362C  0E5E               	movlw	low _ep_data_out
 16106  00362E  24F3               	addwf	prodl,w,c
 16107  003630  6ED9               	movwf	fsr2l,c
 16108  003632  0E01               	movlw	high _ep_data_out
 16109  003634  D007               	goto	L5
 16110  003636                     l171:
 16111                           
 16112                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 16113                           
 16114                           ; BSR set to: 1
 16115  003636  0100               	movlb	0	; () banked
 16116  003638  51B1               	movf	_endpoint_number& (0+255),w,b
 16117  00363A  0D01               	mullw	1
 16118  00363C  0E61               	movlw	low _ep_data_in
 16119  00363E  24F3               	addwf	prodl,w,c
 16120  003640  6ED9               	movwf	fsr2l,c
 16121  003642  0E01               	movlw	high _ep_data_in
 16122  003644                     L5:
 16123  003644  20F4               	addwfc	prodh,w,c
 16124  003646  6EDA               	movwf	fsr2h,c
 16125  003648  0101               	movlb	1	; () banked
 16126  00364A  70DF               	btg	indf2,0,c
 16127                           
 16128                           ; BSR set to: 1
 16129                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 16130                           
 16131                           ; BSR set to: 1
 16132  00364C  0100               	movlb	0	; () banked
 16133  00364E  51B1               	movf	_endpoint_number& (0+255),w,b
 16134  003650  A4D8               	btfss	status,2,c
 16135  003652  D003               	goto	l173
 16136                           
 16137                           ; BSR set to: 0
 16138                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 16139  003654  EC90  F029         	call	_USBCtrlEPService	;wreg free
 16140                           
 16141                           ;usb_device.c: 813: }
 16142  003658  D00E               	goto	l175
 16143  00365A                     l173:
 16144                           
 16145                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 16146  00365A  0E00               	movlw	0
 16147  00365C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16148  00365E  0E72               	movlw	114
 16149  003660  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16150  003662  0EBA               	movlw	low _USTATcopy
 16151  003664  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16152  003666  0E00               	movlw	high _USTATcopy
 16153  003668  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16154  00366A  0E00               	movlw	0
 16155  00366C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16156  00366E  0E00               	movlw	0
 16157  003670  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16158  003672  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16159  003676                     l175:
 16160  003676  2A20               	incf	USBDeviceTasks@i,f,c
 16161  003678  D7C6               	goto	l13863
 16162  00367A                     u11190:
 16163                           
 16164                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 16165  00367A  98A1               	bcf	4001,4,c	;volatile
 16166  00367C  0012               	return		;funcret
 16167  00367E                     __end_of_USBDeviceTasks:
 16168                           	opt stack 0
 16169                           tblptru	equ	0xFF8
 16170                           tblptrh	equ	0xFF7
 16171                           tblptrl	equ	0xFF6
 16172                           tablat	equ	0xFF5
 16173                           prodh	equ	0xFF4
 16174                           prodl	equ	0xFF3
 16175                           intcon	equ	0xFF2
 16176                           intcon2	equ	0xFF1
 16177                           intcon3	equ	0xFF0
 16178                           postinc0	equ	0xFEE
 16179                           wreg	equ	0xFE8
 16180                           indf1	equ	0xFE7
 16181                           postdec1	equ	0xFE5
 16182                           plusw1	equ	0xFE3
 16183                           fsr1h	equ	0xFE2
 16184                           fsr1l	equ	0xFE1
 16185                           indf2	equ	0xFDF
 16186                           postinc2	equ	0xFDE
 16187                           postdec2	equ	0xFDD
 16188                           plusw2	equ	0xFDB
 16189                           fsr2h	equ	0xFDA
 16190                           fsr2l	equ	0xFD9
 16191                           status	equ	0xFD8
 16192                           
 16193 ;; *************** function _USBWakeFromSuspend *****************
 16194 ;; Defined at:
 16195 ;;		line 2305 in file "usb_device.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;		None
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;		None
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      void 
 16202 ;; Registers used:
 16203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16204 ;; Tracked objects:
 16205 ;;		On entry : 0/0
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used:    1
 16215 ;; Hardware stack levels required when called:    4
 16216 ;; This function calls:
 16217 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16218 ;; This function is called by:
 16219 ;;		_USBDeviceTasks
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223                           	psect	text73
 16224  00748A                     __ptext73:
 16225                           	opt stack 0
 16226  00748A                     _USBWakeFromSuspend:
 16227                           	opt stack 25
 16228                           
 16229                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 16230                           
 16231                           ;incstack = 0
 16232  00748A  0E00               	movlw	0
 16233  00748C  0100               	movlb	0	; () banked
 16234  00748E  6FB2               	movwf	_USBBusIsSuspended& (0+255),b
 16235                           
 16236                           ; BSR set to: 0
 16237                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16238  007490  0E00               	movlw	0
 16239  007492  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16240  007494  0E74               	movlw	116
 16241  007496  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16242  007498  0E00               	movlw	0
 16243  00749A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16244  00749C  0E00               	movlw	0
 16245  00749E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16246  0074A0  0E00               	movlw	0
 16247  0074A2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16248  0074A4  0E00               	movlw	0
 16249  0074A6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16250  0074A8  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16251                           
 16252                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 16253  0074AC  9265               	bcf	3941,1,c	;volatile
 16254                           
 16255                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 16256  0074AE  010F               	movlb	15	; () banked
 16257  0074B0  9536               	bcf	54,2,b	;volatile
 16258                           
 16259                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 16260  0074B2  D001               	goto	l303
 16261  0074B4                     
 16262                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 16263                           
 16264                           ; BSR set to: 15
 16265  0074B4  9462               	bcf	3938,2,c	;volatile
 16266  0074B6                     l303:
 16267  0074B6  B462               	btfsc	3938,2,c	;volatile
 16268  0074B8  D7FD               	goto	l304
 16269                           
 16270                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 16271  0074BA  0E00               	movlw	0
 16272  0074BC  0100               	movlb	0	; () banked
 16273  0074BE  6FA9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16274                           
 16275                           ; BSR set to: 0
 16276  0074C0  0012               	return		;funcret
 16277  0074C2                     __end_of_USBWakeFromSuspend:
 16278                           	opt stack 0
 16279                           tblptru	equ	0xFF8
 16280                           tblptrh	equ	0xFF7
 16281                           tblptrl	equ	0xFF6
 16282                           tablat	equ	0xFF5
 16283                           prodh	equ	0xFF4
 16284                           prodl	equ	0xFF3
 16285                           intcon	equ	0xFF2
 16286                           intcon2	equ	0xFF1
 16287                           intcon3	equ	0xFF0
 16288                           postinc0	equ	0xFEE
 16289                           wreg	equ	0xFE8
 16290                           indf1	equ	0xFE7
 16291                           postdec1	equ	0xFE5
 16292                           plusw1	equ	0xFE3
 16293                           fsr1h	equ	0xFE2
 16294                           fsr1l	equ	0xFE1
 16295                           indf2	equ	0xFDF
 16296                           postinc2	equ	0xFDE
 16297                           postdec2	equ	0xFDD
 16298                           plusw2	equ	0xFDB
 16299                           fsr2h	equ	0xFDA
 16300                           fsr2l	equ	0xFD9
 16301                           status	equ	0xFD8
 16302                           
 16303 ;; *************** function _USBSuspend *****************
 16304 ;; Defined at:
 16305 ;;		line 2247 in file "usb_device.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;		None
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;		None
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      void 
 16312 ;; Registers used:
 16313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16323 ;;Total ram usage:        0 bytes
 16324 ;; Hardware stack levels used:    1
 16325 ;; Hardware stack levels required when called:    4
 16326 ;; This function calls:
 16327 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16328 ;; This function is called by:
 16329 ;;		_USBDeviceTasks
 16330 ;; This function uses a non-reentrant model
 16331 ;;
 16332                           
 16333                           	psect	text74
 16334  0076C8                     __ptext74:
 16335                           	opt stack 0
 16336  0076C8                     _USBSuspend:
 16337                           	opt stack 25
 16338                           
 16339                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;incstack = 0
 16343  0076C8  010F               	movlb	15	; () banked
 16344  0076CA  8536               	bsf	54,2,b	;volatile
 16345                           
 16346                           ; BSR set to: 15
 16347                           ;usb_device.c: 2273: (UIR &= 0xEF);
 16348  0076CC  9862               	bcf	3938,4,c	;volatile
 16349                           
 16350                           ; BSR set to: 15
 16351                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 16352  0076CE  8265               	bsf	3941,1,c	;volatile
 16353                           
 16354                           ; BSR set to: 15
 16355                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 16356  0076D0  0E01               	movlw	1
 16357  0076D2  0100               	movlb	0	; () banked
 16358  0076D4  6FB2               	movwf	_USBBusIsSuspended& (0+255),b
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 16362  0076D6  0E00               	movlw	0
 16363  0076D8  6FA9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16364                           
 16365                           ; BSR set to: 0
 16366                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16367  0076DA  0E00               	movlw	0
 16368  0076DC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16369  0076DE  0E75               	movlw	117
 16370  0076E0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16371  0076E2  0E00               	movlw	0
 16372  0076E4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16373  0076E6  0E00               	movlw	0
 16374  0076E8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16375  0076EA  0E00               	movlw	0
 16376  0076EC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16377  0076EE  0E00               	movlw	0
 16378  0076F0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16379  0076F2  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16380  0076F6  0012               	return		;funcret
 16381  0076F8                     __end_of_USBSuspend:
 16382                           	opt stack 0
 16383                           tblptru	equ	0xFF8
 16384                           tblptrh	equ	0xFF7
 16385                           tblptrl	equ	0xFF6
 16386                           tablat	equ	0xFF5
 16387                           prodh	equ	0xFF4
 16388                           prodl	equ	0xFF3
 16389                           intcon	equ	0xFF2
 16390                           intcon2	equ	0xFF1
 16391                           intcon3	equ	0xFF0
 16392                           postinc0	equ	0xFEE
 16393                           wreg	equ	0xFE8
 16394                           indf1	equ	0xFE7
 16395                           postdec1	equ	0xFE5
 16396                           plusw1	equ	0xFE3
 16397                           fsr1h	equ	0xFE2
 16398                           fsr1l	equ	0xFE1
 16399                           indf2	equ	0xFDF
 16400                           postinc2	equ	0xFDE
 16401                           postdec2	equ	0xFDD
 16402                           plusw2	equ	0xFDB
 16403                           fsr2h	equ	0xFDA
 16404                           fsr2l	equ	0xFD9
 16405                           status	equ	0xFD8
 16406                           
 16407 ;; *************** function _USBStallHandler *****************
 16408 ;; Defined at:
 16409 ;;		line 2204 in file "usb_device.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;		None
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;		None
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  1    wreg      void 
 16416 ;; Registers used:
 16417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16427 ;;Total ram usage:        1 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; This function calls:
 16430 ;;		Nothing
 16431 ;; This function is called by:
 16432 ;;		_USBDeviceTasks
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text75
 16437  007216                     __ptext75:
 16438                           	opt stack 0
 16439  007216                     _USBStallHandler:
 16440                           	opt stack 29
 16441                           
 16442                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 16443                           
 16444                           ;incstack = 0
 16445  007216  010F               	movlb	15	; () banked
 16446  007218  A126               	btfss	38,0,b	;volatile
 16447  00721A  D01D               	goto	l295
 16448                           
 16449                           ; BSR set to: 15
 16450                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 16451  00721C  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16452  007220  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16453  007224  0E80               	movlw	128
 16454  007226  18DE               	xorwf	postinc2,w,c
 16455  007228  A4D8               	btfss	status,2,c
 16456  00722A  D014               	goto	l296
 16457                           
 16458                           ; BSR set to: 15
 16459  00722C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 16460  007230  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16461  007234  0E84               	movlw	132
 16462  007236  18DE               	xorwf	postinc2,w,c
 16463  007238  A4D8               	btfss	status,2,c
 16464  00723A  D00C               	goto	l296
 16465                           
 16466                           ; BSR set to: 15
 16467                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 16468  00723C  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16469  007240  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16470  007244  0E0C               	movlw	12
 16471  007246  6EDF               	movwf	indf2,c
 16472                           
 16473                           ; BSR set to: 15
 16474                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16475  007248  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16476  00724C  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16477  007250  0E00               	movlw	0
 16478  007252  8EDB               	bsf	plusw2,7,c
 16479  007254                     l296:
 16480                           
 16481                           ; BSR set to: 15
 16482                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 16483                           
 16484                           ; BSR set to: 15
 16485  007254  9126               	bcf	38,0,b	;volatile
 16486  007256                     l295:
 16487                           
 16488                           ; BSR set to: 15
 16489                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 16490  007256  9A62               	bcf	3938,5,c	;volatile
 16491                           
 16492                           ; BSR set to: 15
 16493  007258  0012               	return		;funcret
 16494  00725A                     __end_of_USBStallHandler:
 16495                           	opt stack 0
 16496                           tblptru	equ	0xFF8
 16497                           tblptrh	equ	0xFF7
 16498                           tblptrl	equ	0xFF6
 16499                           tablat	equ	0xFF5
 16500                           prodh	equ	0xFF4
 16501                           prodl	equ	0xFF3
 16502                           intcon	equ	0xFF2
 16503                           intcon2	equ	0xFF1
 16504                           intcon3	equ	0xFF0
 16505                           postinc0	equ	0xFEE
 16506                           wreg	equ	0xFE8
 16507                           indf1	equ	0xFE7
 16508                           postdec1	equ	0xFE5
 16509                           plusw1	equ	0xFE3
 16510                           fsr1h	equ	0xFE2
 16511                           fsr1l	equ	0xFE1
 16512                           indf2	equ	0xFDF
 16513                           postinc2	equ	0xFDE
 16514                           postdec2	equ	0xFDD
 16515                           plusw2	equ	0xFDB
 16516                           fsr2h	equ	0xFDA
 16517                           fsr2l	equ	0xFD9
 16518                           status	equ	0xFD8
 16519                           
 16520 ;; *************** function _USBIncrement1msInternalTimers *****************
 16521 ;; Defined at:
 16522 ;;		line 3027 in file "usb_device.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;		None
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;		None
 16527 ;; Return value:  Size  Location     Type
 16528 ;;                  1    wreg      void 
 16529 ;; Registers used:
 16530 ;;		wreg, status,2, status,0
 16531 ;; Tracked objects:
 16532 ;;		On entry : 0/0
 16533 ;;		On exit  : 0/0
 16534 ;;		Unchanged: 0/0
 16535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16540 ;;Total ram usage:        0 bytes
 16541 ;; Hardware stack levels used:    1
 16542 ;; This function calls:
 16543 ;;		Nothing
 16544 ;; This function is called by:
 16545 ;;		_USBDeviceTasks
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           	psect	text76
 16550  00794C                     __ptext76:
 16551                           	opt stack 0
 16552  00794C                     _USBIncrement1msInternalTimers:
 16553                           	opt stack 29
 16554                           
 16555                           ;usb_device.c: 3035: USB1msTickCount++;
 16556                           
 16557                           ; BSR set to: 15
 16558                           ;incstack = 0
 16559  00794C  0E01               	movlw	1
 16560  00794E  0101               	movlb	1	; () banked
 16561  007950  2754               	addwf	_USB1msTickCount& (0+255),f,b
 16562  007952  0E00               	movlw	0
 16563  007954  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 16564  007956  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 16565  007958  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 16566                           
 16567                           ; BSR set to: 1
 16568                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 16569  00795A  0100               	movlb	0	; () banked
 16570  00795C  51B2               	movf	_USBBusIsSuspended& (0+255),w,b
 16571  00795E  A4D8               	btfss	status,2,c
 16572  007960  0012               	return	
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 16576  007962  2BA9               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 16580  007964  51A9               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 16581  007966  A4D8               	btfss	status,2,c
 16582  007968  0012               	return	
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 16586  00796A  69A9               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 16587                           
 16588                           ; BSR set to: 0
 16589  00796C  0012               	return	
 16590  00796E                     __end_of_USBIncrement1msInternalTimers:
 16591                           	opt stack 0
 16592                           tblptru	equ	0xFF8
 16593                           tblptrh	equ	0xFF7
 16594                           tblptrl	equ	0xFF6
 16595                           tablat	equ	0xFF5
 16596                           prodh	equ	0xFF4
 16597                           prodl	equ	0xFF3
 16598                           intcon	equ	0xFF2
 16599                           intcon2	equ	0xFF1
 16600                           intcon3	equ	0xFF0
 16601                           postinc0	equ	0xFEE
 16602                           wreg	equ	0xFE8
 16603                           indf1	equ	0xFE7
 16604                           postdec1	equ	0xFE5
 16605                           plusw1	equ	0xFE3
 16606                           fsr1h	equ	0xFE2
 16607                           fsr1l	equ	0xFE1
 16608                           indf2	equ	0xFDF
 16609                           postinc2	equ	0xFDE
 16610                           postdec2	equ	0xFDD
 16611                           plusw2	equ	0xFDB
 16612                           fsr2h	equ	0xFDA
 16613                           fsr2l	equ	0xFD9
 16614                           status	equ	0xFD8
 16615                           
 16616 ;; *************** function _USBDeviceInit *****************
 16617 ;; Defined at:
 16618 ;;		line 277 in file "usb_device.c"
 16619 ;; Parameters:    Size  Location     Type
 16620 ;;		None
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;  i               1    8[COMRAM] unsigned char 
 16623 ;; Return value:  Size  Location     Type
 16624 ;;                  1    wreg      void 
 16625 ;; Registers used:
 16626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16627 ;; Tracked objects:
 16628 ;;		On entry : 0/0
 16629 ;;		On exit  : 0/0
 16630 ;;		Unchanged: 0/0
 16631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16636 ;;Total ram usage:        1 bytes
 16637 ;; Hardware stack levels used:    1
 16638 ;; Hardware stack levels required when called:    1
 16639 ;; This function calls:
 16640 ;;		_memset
 16641 ;; This function is called by:
 16642 ;;		_USBDeviceTasks
 16643 ;;		_main
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           	psect	text77
 16648  0037D0                     __ptext77:
 16649                           	opt stack 0
 16650  0037D0                     _USBDeviceInit:
 16651                           	opt stack 28
 16652                           
 16653                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 16654                           
 16655                           ; BSR set to: 0
 16656                           ;incstack = 0
 16657  0037D0  98A0               	bcf	4000,4,c	;volatile
 16658                           
 16659                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 16660  0037D2  0E00               	movlw	0
 16661  0037D4  6E63               	movwf	3939,c	;volatile
 16662                           
 16663                           ;usb_device.c: 291: {UIR = 0;};
 16664  0037D6  0E00               	movlw	0
 16665  0037D8  6E62               	movwf	3938,c	;volatile
 16666                           
 16667                           ;usb_device.c: 294: UEP0 = 0;
 16668  0037DA  0E00               	movlw	0
 16669  0037DC  010F               	movlb	15	; () banked
 16670  0037DE  6F26               	movwf	38,b	;volatile
 16671                           
 16672                           ; BSR set to: 15
 16673                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 16674  0037E0  0E27               	movlw	39
 16675  0037E2  6E01               	movwf	memset@p1,c
 16676  0037E4  0E0F               	movlw	15
 16677  0037E6  6E02               	movwf	memset@p1+1,c
 16678  0037E8  0E00               	movlw	0
 16679  0037EA  6E04               	movwf	memset@c+1,c
 16680  0037EC  0E00               	movlw	0
 16681  0037EE  6E03               	movwf	memset@c,c
 16682  0037F0  0E00               	movlw	0
 16683  0037F2  6E06               	movwf	memset@n+1,c
 16684  0037F4  0E02               	movlw	2
 16685  0037F6  6E05               	movwf	memset@n,c
 16686  0037F8  ECBF  F03B         	call	_memset	;wreg free
 16687                           
 16688                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16689  0037FC  0E16               	movlw	22
 16690  0037FE  010F               	movlb	15	; () banked
 16691  003800  6F39               	movwf	57,b	;volatile
 16692                           
 16693                           ; BSR set to: 15
 16694  003802  0E9F               	movlw	159
 16695  003804  6F37               	movwf	55,b	;volatile
 16696                           
 16697                           ; BSR set to: 15
 16698  003806  0E7B               	movlw	123
 16699  003808  6F36               	movwf	54,b	;volatile
 16700                           
 16701                           ; BSR set to: 15
 16702                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 16703  00380A  0E00               	movlw	0
 16704  00380C  6E09               	movwf	USBDeviceInit@i,c
 16705  00380E                     l12849:
 16706                           
 16707                           ; BSR set to: 15
 16708  00380E  0E0B               	movlw	11
 16709  003810  6409               	cpfsgt	USBDeviceInit@i,c
 16710  003812  D001               	goto	l139
 16711  003814  D00E               	goto	u9930
 16712  003816                     l139:
 16713                           
 16714                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 16715                           
 16716                           ; BSR set to: 15
 16717  003816  5009               	movf	USBDeviceInit@i,w,c
 16718  003818  0D04               	mullw	4
 16719  00381A  0E00               	movlw	0
 16720  00381C  24F3               	addwf	prodl,w,c
 16721  00381E  6ED9               	movwf	fsr2l,c
 16722  003820  0E0D               	movlw	13
 16723  003822  20F4               	addwfc	prodh,w,c
 16724  003824  6EDA               	movwf	fsr2h,c
 16725  003826  6ADE               	clrf	postinc2,c
 16726  003828  6ADE               	clrf	postinc2,c
 16727  00382A  6ADE               	clrf	postinc2,c
 16728  00382C  6ADD               	clrf	postdec2,c
 16729  00382E  2A09               	incf	USBDeviceInit@i,f,c
 16730  003830  D7EE               	goto	l12849
 16731  003832                     u9930:
 16732                           
 16733                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 16734  003832  8C65               	bsf	3941,6,c	;volatile
 16735                           
 16736                           ;usb_device.c: 316: UADDR = 0x00;
 16737  003834  0E00               	movlw	0
 16738  003836  010F               	movlb	15	; () banked
 16739  003838  6F38               	movwf	56,b	;volatile
 16740                           
 16741                           ; BSR set to: 15
 16742                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 16743  00383A  9865               	bcf	3941,4,c	;volatile
 16744                           
 16745                           ; BSR set to: 15
 16746                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 16747  00383C  9C65               	bcf	3941,6,c	;volatile
 16748  00383E                     
 16749                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 16750                           
 16751                           ; BSR set to: 15
 16752  00383E  9662               	bcf	3938,3,c	;volatile
 16753                           
 16754                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 16755  003840  0E00               	movlw	0
 16756  003842  0100               	movlb	0	; () banked
 16757  003844  6F69               	movwf	(_inPipes+3)& (0+255),b
 16758                           
 16759                           ; BSR set to: 0
 16760                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 16761  003846  0E00               	movlw	0
 16762  003848  0101               	movlb	1	; () banked
 16763  00384A  6F34               	movwf	(_outPipes+3)& (0+255),b
 16764                           
 16765                           ; BSR set to: 1
 16766                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 16767  00384C  0E00               	movlw	0
 16768  00384E  6F36               	movwf	(_outPipes+5)& (0+255),b
 16769  003850  0E00               	movlw	0
 16770  003852  6F35               	movwf	(_outPipes+4)& (0+255),b
 16771                           
 16772                           ; BSR set to: 1
 16773                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 16774  003854  B662               	btfsc	3938,3,c	;volatile
 16775  003856  D7F3               	goto	l141
 16776                           
 16777                           ; BSR set to: 1
 16778                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 16779                           
 16780                           ; BSR set to: 1
 16781  003858  0E01               	movlw	1
 16782  00385A  0100               	movlb	0	; () banked
 16783  00385C  6FAD               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16784                           
 16785                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 16786  00385E  0E01               	movlw	1
 16787  003860  6FAC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16788                           
 16789                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 16790  003862  0E00               	movlw	0
 16791  003864  6FAB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16792                           
 16793                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 16794  003866  0E00               	movlw	0
 16795  003868  6FAA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16796                           
 16797                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 16798  00386A  0E00               	movlw	0
 16799  00386C  6FB2               	movwf	_USBBusIsSuspended& (0+255),b
 16800                           
 16801                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 16802  00386E  0E00               	movlw	0
 16803  003870  6E09               	movwf	USBDeviceInit@i,c
 16804  003872                     l12877:
 16805                           
 16806                           ; BSR set to: 0
 16807  003872  0E02               	movlw	2
 16808  003874  6409               	cpfsgt	USBDeviceInit@i,c
 16809  003876  D001               	goto	l143
 16810  003878  D02E               	goto	u9960
 16811  00387A                     l143:
 16812                           
 16813                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 16814                           
 16815                           ; BSR set to: 0
 16816  00387A  5009               	movf	USBDeviceInit@i,w,c
 16817  00387C  0D02               	mullw	2
 16818  00387E  0E6C               	movlw	low _pBDTEntryIn
 16819  003880  24F3               	addwf	prodl,w,c
 16820  003882  6ED9               	movwf	fsr2l,c
 16821  003884  0E00               	movlw	high _pBDTEntryIn
 16822  003886  20F4               	addwfc	prodh,w,c
 16823  003888  6EDA               	movwf	fsr2h,c
 16824  00388A  0E00               	movlw	0
 16825  00388C  6EDE               	movwf	postinc2,c
 16826  00388E  0E00               	movlw	0
 16827  003890  6EDD               	movwf	postdec2,c
 16828                           
 16829                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 16830  003892  5009               	movf	USBDeviceInit@i,w,c
 16831  003894  0D02               	mullw	2
 16832  003896  0E72               	movlw	low _pBDTEntryOut
 16833  003898  24F3               	addwf	prodl,w,c
 16834  00389A  6ED9               	movwf	fsr2l,c
 16835  00389C  0E00               	movlw	high _pBDTEntryOut
 16836  00389E  20F4               	addwfc	prodh,w,c
 16837  0038A0  6EDA               	movwf	fsr2h,c
 16838  0038A2  0E00               	movlw	0
 16839  0038A4  6EDE               	movwf	postinc2,c
 16840  0038A6  0E00               	movlw	0
 16841  0038A8  6EDD               	movwf	postdec2,c
 16842                           
 16843                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 16844  0038AA  5009               	movf	USBDeviceInit@i,w,c
 16845  0038AC  0D01               	mullw	1
 16846  0038AE  0E61               	movlw	low _ep_data_in
 16847  0038B0  24F3               	addwf	prodl,w,c
 16848  0038B2  6ED9               	movwf	fsr2l,c
 16849  0038B4  0E01               	movlw	high _ep_data_in
 16850  0038B6  20F4               	addwfc	prodh,w,c
 16851  0038B8  6EDA               	movwf	fsr2h,c
 16852  0038BA  0E00               	movlw	0
 16853  0038BC  6EDF               	movwf	indf2,c
 16854                           
 16855                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 16856  0038BE  5009               	movf	USBDeviceInit@i,w,c
 16857  0038C0  0D01               	mullw	1
 16858  0038C2  0E5E               	movlw	low _ep_data_out
 16859  0038C4  24F3               	addwf	prodl,w,c
 16860  0038C6  6ED9               	movwf	fsr2l,c
 16861  0038C8  0E01               	movlw	high _ep_data_out
 16862  0038CA  20F4               	addwfc	prodh,w,c
 16863  0038CC  6EDA               	movwf	fsr2h,c
 16864  0038CE  0E00               	movlw	0
 16865  0038D0  6EDF               	movwf	indf2,c
 16866  0038D2  2A09               	incf	USBDeviceInit@i,f,c
 16867  0038D4  D7CE               	goto	l12877
 16868  0038D6                     u9960:
 16869                           
 16870                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16871  0038D6  0E08               	movlw	8
 16872  0038D8  0100               	movlb	0	; () banked
 16873  0038DA  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 16874  0038DC  0E0D               	movlw	13
 16875  0038DE  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16876                           
 16877                           ; BSR set to: 0
 16878                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 16879  0038E0  0E16               	movlw	22
 16880  0038E2  010F               	movlb	15	; () banked
 16881  0038E4  6F26               	movwf	38,b	;volatile
 16882                           
 16883                           ; BSR set to: 15
 16884                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16885  0038E6  0E0D               	movlw	13
 16886  0038E8  010D               	movlb	13	; () banked
 16887  0038EA  6F03               	movwf	3,b	;volatile
 16888  0038EC  0E30               	movlw	48
 16889  0038EE  6F02               	movwf	2,b	;volatile
 16890                           
 16891                           ; BSR set to: 13
 16892                           ;usb_device.c: 359: BDT[0].CNT = 8;
 16893  0038F0  0E08               	movlw	8
 16894  0038F2  6F01               	movwf	1,b	;volatile
 16895                           
 16896                           ; BSR set to: 13
 16897                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 16898  0038F4  0E04               	movlw	4
 16899  0038F6  6F00               	movwf	0,b	;volatile
 16900                           
 16901                           ; BSR set to: 13
 16902                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 16903  0038F8  8F00               	bsf	0,7,b	;volatile
 16904                           
 16905                           ; BSR set to: 13
 16906                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 16907  0038FA  0E00               	movlw	0
 16908  0038FC  0100               	movlb	0	; () banked
 16909  0038FE  6FBB               	movwf	_USBActiveConfiguration& (0+255),b
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;usb_device.c: 366: USB1msTickCount = 0;
 16913  003900  0E00               	movlw	0
 16914  003902  0101               	movlb	1	; () banked
 16915  003904  6F54               	movwf	_USB1msTickCount& (0+255),b
 16916  003906  0E00               	movlw	0
 16917  003908  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 16918  00390A  0E00               	movlw	0
 16919  00390C  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 16920  00390E  0E00               	movlw	0
 16921  003910  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 16922                           
 16923                           ; BSR set to: 1
 16924                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 16925  003912  0E00               	movlw	0
 16926  003914  0100               	movlb	0	; () banked
 16927  003916  6FA9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 16931  003918  0E00               	movlw	0
 16932  00391A  6E5F               	movwf	_USBDeviceState,c
 16933                           
 16934                           ; BSR set to: 0
 16935  00391C  0012               	return		;funcret
 16936  00391E                     __end_of_USBDeviceInit:
 16937                           	opt stack 0
 16938                           tblptru	equ	0xFF8
 16939                           tblptrh	equ	0xFF7
 16940                           tblptrl	equ	0xFF6
 16941                           tablat	equ	0xFF5
 16942                           prodh	equ	0xFF4
 16943                           prodl	equ	0xFF3
 16944                           intcon	equ	0xFF2
 16945                           intcon2	equ	0xFF1
 16946                           intcon3	equ	0xFF0
 16947                           postinc0	equ	0xFEE
 16948                           wreg	equ	0xFE8
 16949                           indf1	equ	0xFE7
 16950                           postdec1	equ	0xFE5
 16951                           plusw1	equ	0xFE3
 16952                           fsr1h	equ	0xFE2
 16953                           fsr1l	equ	0xFE1
 16954                           indf2	equ	0xFDF
 16955                           postinc2	equ	0xFDE
 16956                           postdec2	equ	0xFDD
 16957                           plusw2	equ	0xFDB
 16958                           fsr2h	equ	0xFDA
 16959                           fsr2l	equ	0xFD9
 16960                           status	equ	0xFD8
 16961                           
 16962 ;; *************** function _USBCtrlEPService *****************
 16963 ;; Defined at:
 16964 ;;		line 2374 in file "usb_device.c"
 16965 ;; Parameters:    Size  Location     Type
 16966 ;;		None
 16967 ;; Auto vars:     Size  Location     Type
 16968 ;;		None
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  1    wreg      void 
 16971 ;; Registers used:
 16972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 0/0
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16982 ;;Total ram usage:        2 bytes
 16983 ;; Hardware stack levels used:    1
 16984 ;; Hardware stack levels required when called:    7
 16985 ;; This function calls:
 16986 ;;		_USBCtrlTrfInHandler
 16987 ;;		_USBCtrlTrfOutHandler
 16988 ;;		_USBCtrlTrfSetupHandler
 16989 ;;		_memcpy
 16990 ;; This function is called by:
 16991 ;;		_USBDeviceTasks
 16992 ;; This function uses a non-reentrant model
 16993 ;;
 16994                           
 16995                           	psect	text78
 16996  005320                     __ptext78:
 16997                           	opt stack 0
 16998  005320                     _USBCtrlEPService:
 16999                           	opt stack 22
 17000                           
 17001                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;incstack = 0
 17005  005320  0E2D               	movlw	45
 17006  005322  0100               	movlb	0	; () banked
 17007  005324  6FAF               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 17011  005326  C0BA  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17012  00532A  0EFD               	movlw	253
 17013  00532C  161E               	andwf	??_USBCtrlEPService,f,c
 17014  00532E  A4D8               	btfss	status,2,c
 17015  005330  D044               	goto	l309
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 17019  005332  C0BA  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17020  005336  90D8               	bcf	status,0,c
 17021  005338  321E               	rrcf	??_USBCtrlEPService,f,c
 17022  00533A  0E3F               	movlw	63
 17023  00533C  161E               	andwf	??_USBCtrlEPService,f,c
 17024  00533E  501E               	movf	??_USBCtrlEPService,w,c
 17025  005340  0D04               	mullw	4
 17026  005342  0E00               	movlw	0
 17027  005344  24F3               	addwf	prodl,w,c
 17028  005346  6F98               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 17029  005348  0E0D               	movlw	13
 17030  00534A  20F4               	addwfc	prodh,w,c
 17031  00534C  6F99               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17035  00534E  C098  F096         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17036  005352  C099  F097         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17040  005356  0E04               	movlw	4
 17041  005358  1996               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 17042  00535A  6F96               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 17043  00535C  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17044  00535E  6F97               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17048  005360  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17049  005364  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17050  005368  30DF               	rrcf	223,w,c
 17051  00536A  32E8               	rrcf	wreg,f,c
 17052  00536C  0B0F               	andlw	15
 17053  00536E  0A0D               	xorlw	13
 17054  005370  A4D8               	btfss	status,2,c
 17055  005372  D020               	goto	l310
 17056                           
 17057                           ; BSR set to: 0
 17058                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 17059  005374  0E30               	movlw	48
 17060  005376  6E01               	movwf	memcpy@d1,c
 17061  005378  0E0D               	movlw	13
 17062  00537A  6E02               	movwf	memcpy@d1+1,c
 17063  00537C  EE20 F002          	lfsr	2,2
 17064  005380  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17065  005382  26D9               	addwf	fsr2l,f,c
 17066  005384  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17067  005386  22DA               	addwfc	fsr2h,f,c
 17068  005388  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 17069  00538C  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 17070  005390  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 17071  005394  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 17072  005398  5003               	movf	memcpy@s1,w,c
 17073  00539A  1004               	iorwf	memcpy@s1+1,w,c
 17074  00539C  A4D8               	btfss	status,2,c
 17075  00539E  0E20               	movlw	32
 17076  0053A0  6E05               	movwf	memcpy@s1+2,c
 17077  0053A2  0E00               	movlw	0
 17078  0053A4  6E07               	movwf	memcpy@n+1,c
 17079  0053A6  0E08               	movlw	8
 17080  0053A8  6E06               	movwf	memcpy@n,c
 17081  0053AA  EC79  F034         	call	_memcpy	;wreg free
 17082                           
 17083                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 17084  0053AE  EC9F  F02D         	call	_USBCtrlTrfSetupHandler	;wreg free
 17085                           
 17086                           ;usb_device.c: 2411: }
 17087  0053B2  0012               	return	
 17088  0053B4                     l310:
 17089                           
 17090                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 17091  0053B4  EC3E  F035         	call	_USBCtrlTrfOutHandler	;wreg free
 17092                           
 17093                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 17094  0053B8  0012               	return	
 17095  0053BA                     l309:
 17096                           
 17097                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 17098  0053BA  0100               	movlb	0	; () banked
 17099  0053BC  51BA               	movf	_USTATcopy& (0+255),w,b
 17100  0053BE  0BFD               	andlw	253
 17101  0053C0  0A04               	xorlw	4
 17102  0053C2  A4D8               	btfss	status,2,c
 17103  0053C4  0012               	return	
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 17107  0053C6  ECEC  F026         	call	_USBCtrlTrfInHandler	;wreg free
 17108  0053CA  0012               	return	
 17109  0053CC                     __end_of_USBCtrlEPService:
 17110                           	opt stack 0
 17111                           tblptru	equ	0xFF8
 17112                           tblptrh	equ	0xFF7
 17113                           tblptrl	equ	0xFF6
 17114                           tablat	equ	0xFF5
 17115                           prodh	equ	0xFF4
 17116                           prodl	equ	0xFF3
 17117                           intcon	equ	0xFF2
 17118                           intcon2	equ	0xFF1
 17119                           intcon3	equ	0xFF0
 17120                           postinc0	equ	0xFEE
 17121                           wreg	equ	0xFE8
 17122                           indf1	equ	0xFE7
 17123                           postdec1	equ	0xFE5
 17124                           plusw1	equ	0xFE3
 17125                           fsr1h	equ	0xFE2
 17126                           fsr1l	equ	0xFE1
 17127                           indf2	equ	0xFDF
 17128                           postinc2	equ	0xFDE
 17129                           postdec2	equ	0xFDD
 17130                           plusw2	equ	0xFDB
 17131                           fsr2h	equ	0xFDA
 17132                           fsr2l	equ	0xFD9
 17133                           status	equ	0xFD8
 17134                           
 17135 ;; *************** function _USBCtrlTrfSetupHandler *****************
 17136 ;; Defined at:
 17137 ;;		line 2467 in file "usb_device.c"
 17138 ;; Parameters:    Size  Location     Type
 17139 ;;		None
 17140 ;; Auto vars:     Size  Location     Type
 17141 ;;		None
 17142 ;; Return value:  Size  Location     Type
 17143 ;;                  1    wreg      void 
 17144 ;; Registers used:
 17145 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17146 ;; Tracked objects:
 17147 ;;		On entry : 0/0
 17148 ;;		On exit  : 0/0
 17149 ;;		Unchanged: 0/0
 17150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17155 ;;Total ram usage:        0 bytes
 17156 ;; Hardware stack levels used:    1
 17157 ;; Hardware stack levels required when called:    6
 17158 ;; This function calls:
 17159 ;;		_USBCheckStdRequest
 17160 ;;		_USBCtrlEPServiceComplete
 17161 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17162 ;; This function is called by:
 17163 ;;		_USBCtrlEPService
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           	psect	text79
 17168  005B3E                     __ptext79:
 17169                           	opt stack 0
 17170  005B3E                     _USBCtrlTrfSetupHandler:
 17171                           	opt stack 22
 17172                           
 17173                           ;usb_device.c: 2472: shortPacketStatus = 0;
 17174                           
 17175                           ;incstack = 0
 17176  005B3E  0E00               	movlw	0
 17177  005B40  0100               	movlb	0	; () banked
 17178  005B42  6FB5               	movwf	_shortPacketStatus& (0+255),b
 17179                           
 17180                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 17181  005B44  0E00               	movlw	0
 17182  005B46  6FAE               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 17183                           
 17184                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 17185  005B48  0E00               	movlw	0
 17186  005B4A  6FAB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17187                           
 17188                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 17189  005B4C  0E00               	movlw	0
 17190  005B4E  6FAA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17191                           
 17192                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 17193  005B50  0E00               	movlw	0
 17194  005B52  6FB0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17195                           
 17196                           ;usb_device.c: 2477: controlTransferState = 0;
 17197  005B54  0E00               	movlw	0
 17198  005B56  6FB4               	movwf	_controlTransferState& (0+255),b
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17202  005B58  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17203  005B5C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17204  005B60  0E7F               	movlw	127
 17205  005B62  16DF               	andwf	indf2,f,c
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17209  005B64  0E04               	movlw	4
 17210  005B66  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17211  005B68  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17212  005B6A  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17213  005B6C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17217  005B6E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17218  005B72  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17219  005B76  0E7F               	movlw	127
 17220  005B78  16DF               	andwf	indf2,f,c
 17221                           
 17222                           ; BSR set to: 0
 17223                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17224  005B7A  0E04               	movlw	4
 17225  005B7C  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17226  005B7E  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17227  005B80  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17228  005B82  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 17232  005B84  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17233  005B88  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17234  005B8C  0E7F               	movlw	127
 17235  005B8E  16DF               	andwf	indf2,f,c
 17236                           
 17237                           ; BSR set to: 0
 17238                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 17239  005B90  0E00               	movlw	0
 17240  005B92  6F69               	movwf	(_inPipes+3)& (0+255),b
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 17244  005B94  0E00               	movlw	0
 17245  005B96  6F6B               	movwf	(_inPipes+5)& (0+255),b
 17246  005B98  0E00               	movlw	0
 17247  005B9A  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 17251  005B9C  0E00               	movlw	0
 17252  005B9E  0101               	movlb	1	; () banked
 17253  005BA0  6F34               	movwf	(_outPipes+3)& (0+255),b
 17254                           
 17255                           ; BSR set to: 1
 17256                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 17257  005BA2  0E00               	movlw	0
 17258  005BA4  6F36               	movwf	(_outPipes+5)& (0+255),b
 17259  005BA6  0E00               	movlw	0
 17260  005BA8  6F35               	movwf	(_outPipes+4)& (0+255),b
 17261                           
 17262                           ; BSR set to: 1
 17263                           ;usb_device.c: 2502: USBCheckStdRequest();
 17264  005BAA  ECDB  F021         	call	_USBCheckStdRequest	;wreg free
 17265                           
 17266                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 17267  005BAE  0E00               	movlw	0
 17268  005BB0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17269  005BB2  0E03               	movlw	3
 17270  005BB4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17271  005BB6  0E00               	movlw	0
 17272  005BB8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17273  005BBA  0E00               	movlw	0
 17274  005BBC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17275  005BBE  0E00               	movlw	0
 17276  005BC0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17277  005BC2  0E00               	movlw	0
 17278  005BC4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17279  005BC6  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17280                           
 17281                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 17282  005BCA  ECE2  F020         	call	_USBCtrlEPServiceComplete	;wreg free
 17283  005BCE  0012               	return		;funcret
 17284  005BD0                     __end_of_USBCtrlTrfSetupHandler:
 17285                           	opt stack 0
 17286                           tblptru	equ	0xFF8
 17287                           tblptrh	equ	0xFF7
 17288                           tblptrl	equ	0xFF6
 17289                           tablat	equ	0xFF5
 17290                           prodh	equ	0xFF4
 17291                           prodl	equ	0xFF3
 17292                           intcon	equ	0xFF2
 17293                           intcon2	equ	0xFF1
 17294                           intcon3	equ	0xFF0
 17295                           postinc0	equ	0xFEE
 17296                           wreg	equ	0xFE8
 17297                           indf1	equ	0xFE7
 17298                           postdec1	equ	0xFE5
 17299                           plusw1	equ	0xFE3
 17300                           fsr1h	equ	0xFE2
 17301                           fsr1l	equ	0xFE1
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           plusw2	equ	0xFDB
 17306                           fsr2h	equ	0xFDA
 17307                           fsr2l	equ	0xFD9
 17308                           status	equ	0xFD8
 17309                           
 17310 ;; *************** function _USBCtrlEPServiceComplete *****************
 17311 ;; Defined at:
 17312 ;;		line 1618 in file "usb_device.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;		None
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;		None
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1    wreg      void 
 17319 ;; Registers used:
 17320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17330 ;;Total ram usage:        0 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; Hardware stack levels required when called:    2
 17333 ;; This function calls:
 17334 ;;		_USBCtrlEPAllowDataStage
 17335 ;;		_USBCtrlEPAllowStatusStage
 17336 ;; This function is called by:
 17337 ;;		_USBCtrlTrfSetupHandler
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text80
 17342  0041C4                     __ptext80:
 17343                           	opt stack 0
 17344  0041C4                     _USBCtrlEPServiceComplete:
 17345                           	opt stack 25
 17346                           
 17347                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 17348                           
 17349                           ;incstack = 0
 17350  0041C4  9865               	bcf	3941,4,c	;volatile
 17351                           
 17352                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 17353  0041C6  0100               	movlb	0	; () banked
 17354  0041C8  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 17355  0041CA  D03C               	goto	l219
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 17359  0041CC  0101               	movlb	1	; () banked
 17360  0041CE  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 17361  0041D0  D00D               	goto	l220
 17362                           
 17363                           ; BSR set to: 1
 17364                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 17365  0041D2  0E02               	movlw	2
 17366  0041D4  0100               	movlb	0	; () banked
 17367  0041D6  6FB4               	movwf	_controlTransferState& (0+255),b
 17368                           
 17369                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 17370  0041D8  51AA               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 17371  0041DA  B4D8               	btfsc	status,2,c
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 17375  0041DC  ECD2  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 17376                           
 17377                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 17378  0041E0  0E00               	movlw	0
 17379  0041E2  0100               	movlb	0	; () banked
 17380  0041E4  6FAC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 17384  0041E6  0E00               	movlw	0
 17385  0041E8  6FAD               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17386                           
 17387                           ;usb_device.c: 1654: }
 17388  0041EA  0012               	return	
 17389  0041EC                     l220:
 17390                           
 17391                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17392                           
 17393                           ; BSR set to: 0
 17394  0041EC  0100               	movlb	0	; () banked
 17395  0041EE  EE20 F001          	lfsr	2,1
 17396  0041F2  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17397  0041F4  26D9               	addwf	fsr2l,f,c
 17398  0041F6  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17399  0041F8  22DA               	addwfc	fsr2h,f,c
 17400  0041FA  0E08               	movlw	8
 17401  0041FC  6EDF               	movwf	indf2,c
 17402                           
 17403                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17404  0041FE  EE20 F002          	lfsr	2,2
 17405  004202  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17406  004204  26D9               	addwf	fsr2l,f,c
 17407  004206  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17408  004208  22DA               	addwfc	fsr2h,f,c
 17409  00420A  0E30               	movlw	48
 17410  00420C  6EDE               	movwf	postinc2,c
 17411  00420E  0E0D               	movlw	13
 17412  004210  6EDD               	movwf	postdec2,c
 17413                           
 17414                           ; BSR set to: 0
 17415                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17416  004212  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17417  004216  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17418  00421A  0E0C               	movlw	12
 17419  00421C  6EDF               	movwf	indf2,c
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17423  00421E  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17424  004222  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17425  004226  0E00               	movlw	0
 17426  004228  8EDB               	bsf	plusw2,7,c
 17427                           
 17428                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 17429  00422A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17430  00422E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17431  004232  0E04               	movlw	4
 17432  004234  6EDF               	movwf	indf2,c
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17436  004236  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17437  00423A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17438  00423E  0E00               	movlw	0
 17439  004240  8EDB               	bsf	plusw2,7,c
 17440                           
 17441                           ; BSR set to: 0
 17442                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 17443  004242  0012               	return	
 17444  004244                     l219:
 17445                           
 17446                           ; BSR set to: 0
 17447                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 17448  004244  010D               	movlb	13	; () banked
 17449  004246  AF30               	btfss	48,7,b	;volatile
 17450  004248  D012               	goto	l224
 17451                           
 17452                           ; BSR set to: 13
 17453                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 17454  00424A  0E01               	movlw	1
 17455  00424C  0100               	movlb	0	; () banked
 17456  00424E  6FB4               	movwf	_controlTransferState& (0+255),b
 17457                           
 17458                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 17459  004250  51AB               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17460  004252  B4D8               	btfsc	status,2,c
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 17464  004254  ECD2  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 17465                           
 17466                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 17467  004258  0E00               	movlw	0
 17468  00425A  0100               	movlb	0	; () banked
 17469  00425C  6FAC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 17473  00425E  0E00               	movlw	0
 17474  004260  6FAD               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17475                           
 17476                           ; BSR set to: 0
 17477                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 17478  004262  51AE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17479  004264  A4D8               	btfss	status,2,c
 17480  004266  0012               	return	
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 17484  004268  ECB2  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17485                           
 17486                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 17487  00426C  0012               	return	
 17488  00426E                     l224:
 17489                           
 17490                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 17491  00426E  0E02               	movlw	2
 17492  004270  0100               	movlb	0	; () banked
 17493  004272  6FB4               	movwf	_controlTransferState& (0+255),b
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 17497  004274  EE20 F001          	lfsr	2,1
 17498  004278  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17499  00427A  26D9               	addwf	fsr2l,f,c
 17500  00427C  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17501  00427E  22DA               	addwfc	fsr2h,f,c
 17502  004280  0E08               	movlw	8
 17503  004282  6EDF               	movwf	indf2,c
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17507  004284  EE20 F002          	lfsr	2,2
 17508  004288  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17509  00428A  26D9               	addwf	fsr2l,f,c
 17510  00428C  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17511  00428E  22DA               	addwfc	fsr2h,f,c
 17512  004290  0E30               	movlw	48
 17513  004292  6EDE               	movwf	postinc2,c
 17514  004294  0E0D               	movlw	13
 17515  004296  6EDD               	movwf	postdec2,c
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17519  004298  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17520  00429C  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17521  0042A0  0E04               	movlw	4
 17522  0042A2  6EDF               	movwf	indf2,c
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17526  0042A4  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17527  0042A8  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17528  0042AC  0E00               	movlw	0
 17529  0042AE  8EDB               	bsf	plusw2,7,c
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 17533  0042B0  0E00               	movlw	0
 17534  0042B2  6FAC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 17538  0042B4  0E00               	movlw	0
 17539  0042B6  6FAD               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 17543  0042B8  51AE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17544  0042BA  A4D8               	btfss	status,2,c
 17545  0042BC  0012               	return	
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 17549  0042BE  ECB2  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17550  0042C2  0012               	return	
 17551  0042C4                     __end_of_USBCtrlEPServiceComplete:
 17552                           	opt stack 0
 17553                           tblptru	equ	0xFF8
 17554                           tblptrh	equ	0xFF7
 17555                           tblptrl	equ	0xFF6
 17556                           tablat	equ	0xFF5
 17557                           prodh	equ	0xFF4
 17558                           prodl	equ	0xFF3
 17559                           intcon	equ	0xFF2
 17560                           intcon2	equ	0xFF1
 17561                           intcon3	equ	0xFF0
 17562                           postinc0	equ	0xFEE
 17563                           wreg	equ	0xFE8
 17564                           indf1	equ	0xFE7
 17565                           postdec1	equ	0xFE5
 17566                           plusw1	equ	0xFE3
 17567                           fsr1h	equ	0xFE2
 17568                           fsr1l	equ	0xFE1
 17569                           indf2	equ	0xFDF
 17570                           postinc2	equ	0xFDE
 17571                           postdec2	equ	0xFDD
 17572                           plusw2	equ	0xFDB
 17573                           fsr2h	equ	0xFDA
 17574                           fsr2l	equ	0xFD9
 17575                           status	equ	0xFD8
 17576                           
 17577 ;; *************** function _USBCtrlEPAllowDataStage *****************
 17578 ;; Defined at:
 17579 ;;		line 1490 in file "usb_device.c"
 17580 ;; Parameters:    Size  Location     Type
 17581 ;;		None
 17582 ;; Auto vars:     Size  Location     Type
 17583 ;;		None
 17584 ;; Return value:  Size  Location     Type
 17585 ;;                  1    wreg      void 
 17586 ;; Registers used:
 17587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17588 ;; Tracked objects:
 17589 ;;		On entry : 0/0
 17590 ;;		On exit  : 0/0
 17591 ;;		Unchanged: 0/0
 17592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17597 ;;Total ram usage:        0 bytes
 17598 ;; Hardware stack levels used:    1
 17599 ;; Hardware stack levels required when called:    1
 17600 ;; This function calls:
 17601 ;;		_USBCtrlTrfTxService
 17602 ;; This function is called by:
 17603 ;;		_USBCtrlEPServiceComplete
 17604 ;; This function uses a non-reentrant model
 17605 ;;
 17606                           
 17607                           	psect	text81
 17608  0057A4                     __ptext81:
 17609                           	opt stack 0
 17610  0057A4                     _USBCtrlEPAllowDataStage:
 17611                           	opt stack 25
 17612                           
 17613                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 17614                           
 17615                           ;incstack = 0
 17616  0057A4  0E00               	movlw	0
 17617  0057A6  0100               	movlb	0	; () banked
 17618  0057A8  6FAB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17619                           
 17620                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 17621  0057AA  0E00               	movlw	0
 17622  0057AC  6FAA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;usb_device.c: 1495: if(controlTransferState == 2)
 17626  0057AE  0E02               	movlw	2
 17627  0057B0  19B4               	xorwf	_controlTransferState& (0+255),w,b
 17628  0057B2  A4D8               	btfss	status,2,c
 17629  0057B4  D01F               	goto	l208
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 17633  0057B6  EE20 F001          	lfsr	2,1
 17634  0057BA  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17635  0057BC  26D9               	addwf	fsr2l,f,c
 17636  0057BE  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17637  0057C0  22DA               	addwfc	fsr2h,f,c
 17638  0057C2  0E08               	movlw	8
 17639  0057C4  6EDF               	movwf	indf2,c
 17640                           
 17641                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17642  0057C6  EE20 F002          	lfsr	2,2
 17643  0057CA  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17644  0057CC  26D9               	addwf	fsr2l,f,c
 17645  0057CE  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17646  0057D0  22DA               	addwfc	fsr2h,f,c
 17647  0057D2  0E38               	movlw	56
 17648  0057D4  6EDE               	movwf	postinc2,c
 17649  0057D6  0E0D               	movlw	13
 17650  0057D8  6EDD               	movwf	postdec2,c
 17651                           
 17652                           ; BSR set to: 0
 17653                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 17654  0057DA  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17655  0057DE  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17656  0057E2  0E48               	movlw	72
 17657  0057E4  6EDF               	movwf	indf2,c
 17658                           
 17659                           ; BSR set to: 0
 17660                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17661  0057E6  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17662  0057EA  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17663  0057EE  0E00               	movlw	0
 17664  0057F0  8EDB               	bsf	plusw2,7,c
 17665                           
 17666                           ;usb_device.c: 1502: }
 17667  0057F2  0012               	return	
 17668  0057F4                     l208:
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 17672                           
 17673                           ; BSR set to: 0
 17674  0057F4  516A               	movf	(_inPipes+4)& (0+255),w,b
 17675  0057F6  010D               	movlb	13	; () banked
 17676  0057F8  5D36               	subwf	54,w,b	;volatile
 17677  0057FA  0100               	movlb	0	; () banked
 17678  0057FC  516B               	movf	(_inPipes+5)& (0+255),w,b
 17679  0057FE  010D               	movlb	13	; () banked
 17680  005800  5937               	subwfb	55,w,b	;volatile
 17681  005802  B0D8               	btfsc	status,0,c
 17682  005804  D004               	goto	l210
 17683                           
 17684                           ; BSR set to: 13
 17685                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 17686  005806  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 17687  00580A  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 17688  00580E                     l210:
 17689                           
 17690                           ; BSR set to: 13
 17691                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 17692                           
 17693                           ; BSR set to: 13
 17694  00580E  EC86  F026         	call	_USBCtrlTrfTxService	;wreg free
 17695                           
 17696                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 17697  005812  0100               	movlb	0	; () banked
 17698  005814  EE20 F002          	lfsr	2,2
 17699  005818  516C               	movf	_pBDTEntryIn& (0+255),w,b
 17700  00581A  26D9               	addwf	fsr2l,f,c
 17701  00581C  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17702  00581E  22DA               	addwfc	fsr2h,f,c
 17703  005820  0E38               	movlw	56
 17704  005822  6EDE               	movwf	postinc2,c
 17705  005824  0E0D               	movlw	13
 17706  005826  6EDD               	movwf	postdec2,c
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17710  005828  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17711  00582C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17712  005830  0E48               	movlw	72
 17713  005832  6EDF               	movwf	indf2,c
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17717  005834  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17718  005838  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17719  00583C  0E00               	movlw	0
 17720  00583E  8EDB               	bsf	plusw2,7,c
 17721  005840  0012               	return	
 17722  005842                     __end_of_USBCtrlEPAllowDataStage:
 17723                           	opt stack 0
 17724                           tblptru	equ	0xFF8
 17725                           tblptrh	equ	0xFF7
 17726                           tblptrl	equ	0xFF6
 17727                           tablat	equ	0xFF5
 17728                           prodh	equ	0xFF4
 17729                           prodl	equ	0xFF3
 17730                           intcon	equ	0xFF2
 17731                           intcon2	equ	0xFF1
 17732                           intcon3	equ	0xFF0
 17733                           postinc0	equ	0xFEE
 17734                           wreg	equ	0xFE8
 17735                           indf1	equ	0xFE7
 17736                           postdec1	equ	0xFE5
 17737                           plusw1	equ	0xFE3
 17738                           fsr1h	equ	0xFE2
 17739                           fsr1l	equ	0xFE1
 17740                           indf2	equ	0xFDF
 17741                           postinc2	equ	0xFDE
 17742                           postdec2	equ	0xFDD
 17743                           plusw2	equ	0xFDB
 17744                           fsr2h	equ	0xFDA
 17745                           fsr2l	equ	0xFD9
 17746                           status	equ	0xFD8
 17747                           
 17748 ;; *************** function _USBCheckStdRequest *****************
 17749 ;; Defined at:
 17750 ;;		line 2688 in file "usb_device.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;		None
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;                  1    wreg      void 
 17757 ;; Registers used:
 17758 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17759 ;; Tracked objects:
 17760 ;;		On entry : 0/0
 17761 ;;		On exit  : 0/0
 17762 ;;		Unchanged: 0/0
 17763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17768 ;;Total ram usage:        0 bytes
 17769 ;; Hardware stack levels used:    1
 17770 ;; Hardware stack levels required when called:    5
 17771 ;; This function calls:
 17772 ;;		_USBStdFeatureReqHandler
 17773 ;;		_USBStdGetDscHandler
 17774 ;;		_USBStdGetStatusHandler
 17775 ;;		_USBStdSetCfgHandler
 17776 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17777 ;; This function is called by:
 17778 ;;		_USBCtrlTrfSetupHandler
 17779 ;; This function uses a non-reentrant model
 17780 ;;
 17781                           
 17782                           	psect	text82
 17783  0043B6                     __ptext82:
 17784                           	opt stack 0
 17785  0043B6                     _USBCheckStdRequest:
 17786                           	opt stack 22
 17787                           
 17788                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 17789                           
 17790                           ; BSR set to: 0
 17791                           ;incstack = 0
 17792  0043B6  010D               	movlb	13	; () banked
 17793  0043B8  3930               	swapf	48,w,b	;volatile
 17794  0043BA  32E8               	rrcf	wreg,f,c
 17795  0043BC  0B03               	andlw	3
 17796  0043BE  0900               	iorlw	0
 17797  0043C0  A4D8               	btfss	status,2,c
 17798  0043C2  0012               	return	
 17799  0043C4  D047               	goto	l343
 17800  0043C6                     l344:
 17801                           
 17802                           ; BSR set to: 13
 17803                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 17804  0043C6  0100               	movlb	0	; () banked
 17805  0043C8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17806                           
 17807                           ; BSR set to: 0
 17808                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 17809  0043CA  0E08               	movlw	8
 17810  0043CC  6E5F               	movwf	_USBDeviceState,c
 17811                           
 17812                           ;usb_device.c: 2698: break;
 17813  0043CE  0012               	return	
 17814  0043D0                     
 17815                           ;usb_device.c: 2700: USBStdGetDscHandler();
 17816                           
 17817                           ; BSR set to: 0
 17818  0043D0  EC8F  F01C         	call	_USBStdGetDscHandler	;wreg free
 17819                           
 17820                           ;usb_device.c: 2701: break;
 17821  0043D4  0012               	return	
 17822  0043D6                     
 17823                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 17824  0043D6  EC9F  F023         	call	_USBStdSetCfgHandler	;wreg free
 17825                           
 17826                           ;usb_device.c: 2704: break;
 17827  0043DA  0012               	return	
 17828  0043DC                     
 17829                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 17830  0043DC  0EBB               	movlw	low _USBActiveConfiguration
 17831  0043DE  0100               	movlb	0	; () banked
 17832  0043E0  6F66               	movwf	_inPipes& (0+255),b
 17833  0043E2  0E00               	movlw	high _USBActiveConfiguration
 17834  0043E4  6F67               	movwf	(_inPipes+1)& (0+255),b
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17838  0043E6  8169               	bsf	(_inPipes+3)& (0+255),0,b
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 17842  0043E8  0E01               	movlw	1
 17843  0043EA  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 17847  0043EC  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17848                           
 17849                           ;usb_device.c: 2710: break;
 17850  0043EE  0012               	return	
 17851  0043F0                     
 17852                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 17853                           
 17854                           ; BSR set to: 0
 17855  0043F0  ECE6  F029         	call	_USBStdGetStatusHandler	;wreg free
 17856                           
 17857                           ;usb_device.c: 2713: break;
 17858  0043F4  0012               	return	
 17859  0043F6                     
 17860                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 17861  0043F6  ECD6  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 17862                           
 17863                           ;usb_device.c: 2717: break;
 17864  0043FA  0012               	return	
 17865  0043FC                     
 17866                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 17867  0043FC  010D               	movlb	13	; () banked
 17868  0043FE  5134               	movf	52,w,b	;volatile
 17869  004400  0D01               	mullw	1
 17870  004402  0EB6               	movlw	low _USBAlternateInterface
 17871  004404  24F3               	addwf	prodl,w,c
 17872  004406  0100               	movlb	0	; () banked
 17873  004408  6F66               	movwf	_inPipes& (0+255),b
 17874  00440A  0E00               	movlw	high _USBAlternateInterface
 17875  00440C  20F4               	addwfc	prodh,w,c
 17876  00440E  6F67               	movwf	(_inPipes+1)& (0+255),b
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17880  004410  8169               	bsf	(_inPipes+3)& (0+255),0,b
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 17884  004412  0E01               	movlw	1
 17885  004414  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17886                           
 17887                           ; BSR set to: 0
 17888                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 17889  004416  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17890                           
 17891                           ;usb_device.c: 2723: break;
 17892  004418  0012               	return	
 17893  00441A                     l353:
 17894                           
 17895                           ; BSR set to: 13
 17896                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 17897  00441A  0100               	movlb	0	; () banked
 17898  00441C  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 17902  00441E  010D               	movlb	13	; () banked
 17903  004420  5134               	movf	52,w,b	;volatile
 17904  004422  0D01               	mullw	1
 17905  004424  0EB6               	movlw	low _USBAlternateInterface
 17906  004426  24F3               	addwf	prodl,w,c
 17907  004428  6ED9               	movwf	fsr2l,c
 17908  00442A  0E00               	movlw	high _USBAlternateInterface
 17909  00442C  20F4               	addwfc	prodh,w,c
 17910  00442E  6EDA               	movwf	fsr2h,c
 17911  004430  CD32 FFDF          	movff	3378,indf2	;volatile
 17912                           
 17913                           ;usb_device.c: 2727: break;
 17914  004434  0012               	return	
 17915  004436                     
 17916                           ; BSR set to: 13
 17917                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 17918                           
 17919                           ; BSR set to: 13
 17920  004436  0E00               	movlw	0
 17921  004438  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17922  00443A  0E02               	movlw	2
 17923  00443C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17924  00443E  0E00               	movlw	0
 17925  004440  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17926  004442  0E00               	movlw	0
 17927  004444  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17928  004446  0E00               	movlw	0
 17929  004448  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17930  00444A  0E00               	movlw	0
 17931  00444C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17932  00444E  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17933                           
 17934                           ;usb_device.c: 2734: }
 17935                           
 17936                           ;usb_device.c: 2733: break;
 17937                           
 17938                           ;usb_device.c: 2732: default:
 17939                           
 17940                           ;usb_device.c: 2731: case 12:
 17941                           
 17942                           ;usb_device.c: 2730: break;
 17943  004452  0012               	return	
 17944  004454                     l343:
 17945  004454  010D               	movlb	13	; () banked
 17946  004456  5131               	movf	49,w,b	;volatile
 17947                           
 17948                           ; Switch size 1, requested type "space"
 17949                           ; Number of cases is 11, Range of values is 0 to 12
 17950                           ; switch strategies available:
 17951                           ; Name         Instructions Cycles
 17952                           ; simple_byte           34    18 (average)
 17953                           ;	Chosen strategy is simple_byte
 17954  004458  0A00               	xorlw	0	; case 0
 17955  00445A  B4D8               	btfsc	status,2,c
 17956  00445C  D7C9               	goto	l349
 17957  00445E  0A01               	xorlw	1	; case 1
 17958  004460  B4D8               	btfsc	status,2,c
 17959  004462  D7C9               	goto	l350
 17960  004464  0A02               	xorlw	2	; case 3
 17961  004466  B4D8               	btfsc	status,2,c
 17962  004468  D7C6               	goto	l350
 17963  00446A  0A06               	xorlw	6	; case 5
 17964  00446C  B4D8               	btfsc	status,2,c
 17965  00446E  D7AB               	goto	l344
 17966  004470  0A03               	xorlw	3	; case 6
 17967  004472  B4D8               	btfsc	status,2,c
 17968  004474  D7AD               	goto	l346
 17969  004476  0A01               	xorlw	1	; case 7
 17970  004478  B4D8               	btfsc	status,2,c
 17971  00447A  D7DD               	goto	l354
 17972  00447C  0A0F               	xorlw	15	; case 8
 17973  00447E  B4D8               	btfsc	status,2,c
 17974  004480  D7AD               	goto	l348
 17975  004482  0A01               	xorlw	1	; case 9
 17976  004484  B4D8               	btfsc	status,2,c
 17977  004486  D7A7               	goto	l347
 17978  004488  0A03               	xorlw	3	; case 10
 17979  00448A  B4D8               	btfsc	status,2,c
 17980  00448C  D7B7               	goto	l352
 17981  00448E  0A01               	xorlw	1	; case 11
 17982  004490  B4D8               	btfsc	status,2,c
 17983  004492  D7C3               	goto	l353
 17984  004494  0A07               	xorlw	7	; case 12
 17985  004496  0012               	return	
 17986  004498                     __end_of_USBCheckStdRequest:
 17987                           	opt stack 0
 17988                           tblptru	equ	0xFF8
 17989                           tblptrh	equ	0xFF7
 17990                           tblptrl	equ	0xFF6
 17991                           tablat	equ	0xFF5
 17992                           prodh	equ	0xFF4
 17993                           prodl	equ	0xFF3
 17994                           intcon	equ	0xFF2
 17995                           intcon2	equ	0xFF1
 17996                           intcon3	equ	0xFF0
 17997                           postinc0	equ	0xFEE
 17998                           wreg	equ	0xFE8
 17999                           indf1	equ	0xFE7
 18000                           postdec1	equ	0xFE5
 18001                           plusw1	equ	0xFE3
 18002                           fsr1h	equ	0xFE2
 18003                           fsr1l	equ	0xFE1
 18004                           indf2	equ	0xFDF
 18005                           postinc2	equ	0xFDE
 18006                           postdec2	equ	0xFDD
 18007                           plusw2	equ	0xFDB
 18008                           fsr2h	equ	0xFDA
 18009                           fsr2l	equ	0xFD9
 18010                           status	equ	0xFD8
 18011                           
 18012 ;; *************** function _USBStdSetCfgHandler *****************
 18013 ;; Defined at:
 18014 ;;		line 1970 in file "usb_device.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;		None
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;  i               1   23[COMRAM] unsigned char 
 18019 ;; Return value:  Size  Location     Type
 18020 ;;                  1    wreg      void 
 18021 ;; Registers used:
 18022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18023 ;; Tracked objects:
 18024 ;;		On entry : 0/0
 18025 ;;		On exit  : 0/0
 18026 ;;		Unchanged: 0/0
 18027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18032 ;;Total ram usage:        1 bytes
 18033 ;; Hardware stack levels used:    1
 18034 ;; Hardware stack levels required when called:    4
 18035 ;; This function calls:
 18036 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18037 ;;		_memset
 18038 ;; This function is called by:
 18039 ;;		_USBCheckStdRequest
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text83
 18044  00473E                     __ptext83:
 18045                           	opt stack 0
 18046  00473E                     _USBStdSetCfgHandler:
 18047                           	opt stack 22
 18048                           
 18049                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 18050                           
 18051                           ;incstack = 0
 18052  00473E  0100               	movlb	0	; () banked
 18053  004740  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 18057  004742  0E27               	movlw	39
 18058  004744  6E01               	movwf	memset@p1,c
 18059  004746  0E0F               	movlw	15
 18060  004748  6E02               	movwf	memset@p1+1,c
 18061  00474A  0E00               	movlw	0
 18062  00474C  6E04               	movwf	memset@c+1,c
 18063  00474E  0E00               	movlw	0
 18064  004750  6E03               	movwf	memset@c,c
 18065  004752  0E00               	movlw	0
 18066  004754  6E06               	movwf	memset@n+1,c
 18067  004756  0E02               	movlw	2
 18068  004758  6E05               	movwf	memset@n,c
 18069  00475A  ECBF  F03B         	call	_memset	;wreg free
 18070                           
 18071                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18072  00475E  0E00               	movlw	0
 18073  004760  6E01               	movwf	memset@p1,c
 18074  004762  0E0D               	movlw	13
 18075  004764  6E02               	movwf	memset@p1+1,c
 18076  004766  0E00               	movlw	0
 18077  004768  6E04               	movwf	memset@c+1,c
 18078  00476A  0E00               	movlw	0
 18079  00476C  6E03               	movwf	memset@c,c
 18080  00476E  0E00               	movlw	0
 18081  004770  6E06               	movwf	memset@n+1,c
 18082  004772  0E30               	movlw	48
 18083  004774  6E05               	movwf	memset@n,c
 18084  004776  ECBF  F03B         	call	_memset	;wreg free
 18085                           
 18086                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 18087  00477A  8C65               	bsf	3941,6,c	;volatile
 18088                           
 18089                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 18090  00477C  0E00               	movlw	0
 18091  00477E  6E18               	movwf	USBStdSetCfgHandler@i,c
 18092  004780                     l10459:
 18093  004780  0E02               	movlw	2
 18094  004782  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 18095  004784  D001               	goto	l260
 18096  004786  D016               	goto	u7750
 18097  004788                     l260:
 18098                           
 18099                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 18100  004788  5018               	movf	USBStdSetCfgHandler@i,w,c
 18101  00478A  0D01               	mullw	1
 18102  00478C  0E61               	movlw	low _ep_data_in
 18103  00478E  24F3               	addwf	prodl,w,c
 18104  004790  6ED9               	movwf	fsr2l,c
 18105  004792  0E01               	movlw	high _ep_data_in
 18106  004794  20F4               	addwfc	prodh,w,c
 18107  004796  6EDA               	movwf	fsr2h,c
 18108  004798  0E00               	movlw	0
 18109  00479A  6EDF               	movwf	indf2,c
 18110                           
 18111                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 18112  00479C  5018               	movf	USBStdSetCfgHandler@i,w,c
 18113  00479E  0D01               	mullw	1
 18114  0047A0  0E5E               	movlw	low _ep_data_out
 18115  0047A2  24F3               	addwf	prodl,w,c
 18116  0047A4  6ED9               	movwf	fsr2l,c
 18117  0047A6  0E01               	movlw	high _ep_data_out
 18118  0047A8  20F4               	addwfc	prodh,w,c
 18119  0047AA  6EDA               	movwf	fsr2h,c
 18120  0047AC  0E00               	movlw	0
 18121  0047AE  6EDF               	movwf	indf2,c
 18122  0047B0  2A18               	incf	USBStdSetCfgHandler@i,f,c
 18123  0047B2  D7E6               	goto	l10459
 18124  0047B4                     u7750:
 18125                           
 18126                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 18127  0047B4  0EB6               	movlw	low _USBAlternateInterface
 18128  0047B6  6E01               	movwf	memset@p1,c
 18129  0047B8  0E00               	movlw	high _USBAlternateInterface
 18130  0047BA  6E02               	movwf	memset@p1+1,c
 18131  0047BC  0E00               	movlw	0
 18132  0047BE  6E04               	movwf	memset@c+1,c
 18133  0047C0  0E00               	movlw	0
 18134  0047C2  6E03               	movwf	memset@c,c
 18135  0047C4  0E00               	movlw	0
 18136  0047C6  6E06               	movwf	memset@n+1,c
 18137  0047C8  0E02               	movlw	2
 18138  0047CA  6E05               	movwf	memset@n,c
 18139  0047CC  ECBF  F03B         	call	_memset	;wreg free
 18140                           
 18141                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 18142  0047D0  9C65               	bcf	3941,6,c	;volatile
 18143                           
 18144                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18145  0047D2  0E08               	movlw	8
 18146  0047D4  0100               	movlb	0	; () banked
 18147  0047D6  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18148  0047D8  0E0D               	movlw	13
 18149  0047DA  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 18153  0047DC  0E00               	movlw	0
 18154  0047DE  6F98               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 18155  0047E0  0E0D               	movlw	13
 18156  0047E2  6F99               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18160  0047E4  C098  F096         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18161  0047E8  C099  F097         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 18165  0047EC  CD32 F0BB          	movff	3378,_USBActiveConfiguration	;volatile
 18166                           
 18167                           ; BSR set to: 0
 18168                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 18169  0047F0  51BB               	movf	_USBActiveConfiguration& (0+255),w,b
 18170  0047F2  A4D8               	btfss	status,2,c
 18171  0047F4  D003               	goto	l262
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 18175  0047F6  0E10               	movlw	16
 18176  0047F8  6E5F               	movwf	_USBDeviceState,c
 18177                           
 18178                           ;usb_device.c: 2015: }
 18179  0047FA  0012               	return	
 18180  0047FC                     l262:
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 18184                           
 18185                           ; BSR set to: 0
 18186  0047FC  0E00               	movlw	0
 18187  0047FE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18188  004800  0E01               	movlw	1
 18189  004802  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18190  004804  0EBB               	movlw	low _USBActiveConfiguration
 18191  004806  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18192  004808  0E00               	movlw	high _USBActiveConfiguration
 18193  00480A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18194  00480C  0E00               	movlw	0
 18195  00480E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18196  004810  0E01               	movlw	1
 18197  004812  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18198  004814  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18199                           
 18200                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 18201  004818  0E20               	movlw	32
 18202  00481A  6E5F               	movwf	_USBDeviceState,c
 18203  00481C  0012               	return	
 18204  00481E                     __end_of_USBStdSetCfgHandler:
 18205                           	opt stack 0
 18206                           tblptru	equ	0xFF8
 18207                           tblptrh	equ	0xFF7
 18208                           tblptrl	equ	0xFF6
 18209                           tablat	equ	0xFF5
 18210                           prodh	equ	0xFF4
 18211                           prodl	equ	0xFF3
 18212                           intcon	equ	0xFF2
 18213                           intcon2	equ	0xFF1
 18214                           intcon3	equ	0xFF0
 18215                           postinc0	equ	0xFEE
 18216                           wreg	equ	0xFE8
 18217                           indf1	equ	0xFE7
 18218                           postdec1	equ	0xFE5
 18219                           plusw1	equ	0xFE3
 18220                           fsr1h	equ	0xFE2
 18221                           fsr1l	equ	0xFE1
 18222                           indf2	equ	0xFDF
 18223                           postinc2	equ	0xFDE
 18224                           postdec2	equ	0xFDD
 18225                           plusw2	equ	0xFDB
 18226                           fsr2h	equ	0xFDA
 18227                           fsr2l	equ	0xFD9
 18228                           status	equ	0xFD8
 18229                           
 18230 ;; *************** function _memset *****************
 18231 ;; Defined at:
 18232 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 18233 ;; Parameters:    Size  Location     Type
 18234 ;;  p1              2    0[COMRAM] PTR void 
 18235 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18236 ;;  c               2    2[COMRAM] int 
 18237 ;;  n               2    4[COMRAM] unsigned int 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;  p               2    6[COMRAM] PTR unsigned char 
 18240 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18241 ;; Return value:  Size  Location     Type
 18242 ;;                  2    0[COMRAM] PTR void 
 18243 ;; Registers used:
 18244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18250 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18253 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18254 ;;Total ram usage:        8 bytes
 18255 ;; Hardware stack levels used:    1
 18256 ;; This function calls:
 18257 ;;		Nothing
 18258 ;; This function is called by:
 18259 ;;		_USBDeviceInit
 18260 ;;		_USBStdSetCfgHandler
 18261 ;; This function uses a non-reentrant model
 18262 ;;
 18263                           
 18264                           	psect	text84
 18265  00777E                     __ptext84:
 18266                           	opt stack 0
 18267  00777E                     _memset:
 18268                           	opt stack 28
 18269                           
 18270                           ;incstack = 0
 18271  00777E  C001  F007         	movff	memset@p1,memset@p
 18272  007782  C002  F008         	movff	memset@p1+1,memset@p+1
 18273  007786  D008               	goto	l3357
 18274  007788                     l9887:
 18275  007788  C007  FFD9         	movff	memset@p,fsr2l
 18276  00778C  C008  FFDA         	movff	memset@p+1,fsr2h
 18277  007790  C003  FFDF         	movff	memset@c,indf2
 18278  007794  4A07               	infsnz	memset@p,f,c
 18279  007796  2A08               	incf	memset@p+1,f,c
 18280  007798                     l3357:
 18281  007798  0605               	decf	memset@n,f,c
 18282  00779A  A0D8               	btfss	status,0,c
 18283  00779C  0606               	decf	memset@n+1,f,c
 18284  00779E  2805               	incf	memset@n,w,c
 18285  0077A0  E1F3               	bnz	l9887
 18286  0077A2  2806               	incf	memset@n+1,w,c
 18287  0077A4  B4D8               	btfsc	status,2,c
 18288  0077A6  0012               	return	
 18289  0077A8  D7EF               	goto	l3358
 18290  0077AA                     __end_of_memset:
 18291                           	opt stack 0
 18292                           tblptru	equ	0xFF8
 18293                           tblptrh	equ	0xFF7
 18294                           tblptrl	equ	0xFF6
 18295                           tablat	equ	0xFF5
 18296                           prodh	equ	0xFF4
 18297                           prodl	equ	0xFF3
 18298                           intcon	equ	0xFF2
 18299                           intcon2	equ	0xFF1
 18300                           intcon3	equ	0xFF0
 18301                           postinc0	equ	0xFEE
 18302                           wreg	equ	0xFE8
 18303                           indf1	equ	0xFE7
 18304                           postdec1	equ	0xFE5
 18305                           plusw1	equ	0xFE3
 18306                           fsr1h	equ	0xFE2
 18307                           fsr1l	equ	0xFE1
 18308                           indf2	equ	0xFDF
 18309                           postinc2	equ	0xFDE
 18310                           postdec2	equ	0xFDD
 18311                           plusw2	equ	0xFDB
 18312                           fsr2h	equ	0xFDA
 18313                           fsr2l	equ	0xFD9
 18314                           status	equ	0xFD8
 18315                           
 18316 ;; *************** function _USBStdGetStatusHandler *****************
 18317 ;; Defined at:
 18318 ;;		line 2131 in file "usb_device.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;		None
 18321 ;; Auto vars:     Size  Location     Type
 18322 ;;  p               2    1[COMRAM] PTR struct __BDT
 18323 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18324 ;; Return value:  Size  Location     Type
 18325 ;;                  1    wreg      void 
 18326 ;; Registers used:
 18327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18328 ;; Tracked objects:
 18329 ;;		On entry : 0/0
 18330 ;;		On exit  : 0/0
 18331 ;;		Unchanged: 0/0
 18332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18337 ;;Total ram usage:        3 bytes
 18338 ;; Hardware stack levels used:    1
 18339 ;; This function calls:
 18340 ;;		Nothing
 18341 ;; This function is called by:
 18342 ;;		_USBCheckStdRequest
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           	psect	text85
 18347  0053CC                     __ptext85:
 18348                           	opt stack 0
 18349  0053CC                     _USBStdGetStatusHandler:
 18350                           	opt stack 26
 18351                           
 18352                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 18353                           
 18354                           ;incstack = 0
 18355  0053CC  0E00               	movlw	0
 18356  0053CE  010D               	movlb	13	; () banked
 18357  0053D0  6F38               	movwf	56,b	;volatile
 18358                           
 18359                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 18360  0053D2  0E00               	movlw	0
 18361  0053D4  6F39               	movwf	57,b	;volatile
 18362                           
 18363                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 18364  0053D6  D039               	goto	l281
 18365  0053D8                     l282:
 18366                           
 18367                           ; BSR set to: 13
 18368                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 18369  0053D8  0100               	movlb	0	; () banked
 18370  0053DA  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18371                           
 18372                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 18373                           
 18374                           ; BSR set to: 13
 18375                           
 18376                           ; BSR set to: 0
 18377                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 18378                           
 18379                           ;usb_device.c: 2144: if(0 == 1)
 18380  0053DC  0100               	movlb	0	; () banked
 18381  0053DE  05B3               	decf	_RemoteWakeup& (0+255),w,b
 18382  0053E0  A4D8               	btfss	status,2,c
 18383  0053E2  D03E               	goto	l285
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 18387  0053E4  010D               	movlb	13	; () banked
 18388  0053E6  8338               	bsf	56,1,b	;volatile
 18389                           
 18390                           ; BSR set to: 13
 18391                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 18392  0053E8  D03B               	goto	l285
 18393  0053EA                     l286:
 18394                           
 18395                           ; BSR set to: 13
 18396                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 18397  0053EA  0100               	movlb	0	; () banked
 18398  0053EC  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18399                           
 18400                           ;usb_device.c: 2156: break;
 18401  0053EE  D038               	goto	l285
 18402  0053F0                     l287:
 18403                           
 18404                           ; BSR set to: 13
 18405                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 18406  0053F0  0100               	movlb	0	; () banked
 18407  0053F2  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18408                           
 18409                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 18410  0053F4  010D               	movlb	13	; () banked
 18411  0053F6  BF34               	btfsc	52,7,b	;volatile
 18412  0053F8  D00A               	goto	l288
 18413                           
 18414                           ; BSR set to: 13
 18415                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18416  0053FA  5134               	movf	52,w,b	;volatile
 18417  0053FC  0B0F               	andlw	15
 18418  0053FE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18419  005400  5001               	movf	??_USBStdGetStatusHandler,w,c
 18420  005402  0D02               	mullw	2
 18421  005404  0E72               	movlw	low _pBDTEntryOut
 18422  005406  24F3               	addwf	prodl,w,c
 18423  005408  6ED9               	movwf	fsr2l,c
 18424  00540A  0E00               	movlw	high _pBDTEntryOut
 18425  00540C  D009               	goto	L6
 18426  00540E                     l288:
 18427                           
 18428                           ; BSR set to: 13
 18429                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 18430                           
 18431                           ; BSR set to: 13
 18432  00540E  5134               	movf	52,w,b	;volatile
 18433  005410  0B0F               	andlw	15
 18434  005412  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18435  005414  5001               	movf	??_USBStdGetStatusHandler,w,c
 18436  005416  0D02               	mullw	2
 18437  005418  0E6C               	movlw	low _pBDTEntryIn
 18438  00541A  24F3               	addwf	prodl,w,c
 18439  00541C  6ED9               	movwf	fsr2l,c
 18440  00541E  0E00               	movlw	high _pBDTEntryIn
 18441  005420                     L6:
 18442  005420  20F4               	addwfc	prodh,w,c
 18443  005422  6EDA               	movwf	fsr2h,c
 18444  005424  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 18445  005428  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 18446                           
 18447                           ; BSR set to: 13
 18448                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 18449                           
 18450                           ; BSR set to: 13
 18451  00542C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18452  005430  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18453  005434  AEDF               	btfss	indf2,7,c
 18454  005436  D014               	goto	l285
 18455                           
 18456                           ; BSR set to: 13
 18457  005438  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18458  00543C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18459  005440  A4DF               	btfss	indf2,2,c
 18460  005442  D00E               	goto	l285
 18461                           
 18462                           ; BSR set to: 13
 18463                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 18464  005444  0E01               	movlw	1
 18465  005446  6F38               	movwf	56,b	;volatile
 18466                           
 18467                           ; BSR set to: 13
 18468                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 18469                           
 18470                           ; BSR set to: 13
 18471                           ;usb_device.c: 2176: break;
 18472  005448  D00B               	goto	l285
 18473  00544A                     l281:
 18474                           
 18475                           ; BSR set to: 13
 18476                           
 18477                           ; BSR set to: 13
 18478  00544A  5130               	movf	48,w,b	;volatile
 18479  00544C  0B1F               	andlw	31
 18480                           
 18481                           ; Switch size 1, requested type "space"
 18482                           ; Number of cases is 3, Range of values is 0 to 2
 18483                           ; switch strategies available:
 18484                           ; Name         Instructions Cycles
 18485                           ; simple_byte           10     6 (average)
 18486                           ;	Chosen strategy is simple_byte
 18487  00544E  0A00               	xorlw	0	; case 0
 18488  005450  B4D8               	btfsc	status,2,c
 18489  005452  D7C2               	goto	l282
 18490  005454  0A01               	xorlw	1	; case 1
 18491  005456  B4D8               	btfsc	status,2,c
 18492  005458  D7C8               	goto	l286
 18493  00545A  0A03               	xorlw	3	; case 2
 18494  00545C  B4D8               	btfsc	status,2,c
 18495  00545E  D7C8               	goto	l287
 18496  005460                     l285:
 18497                           
 18498                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 18499  005460  0100               	movlb	0	; () banked
 18500  005462  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 18501  005464  0012               	return	
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 18505  005466  0E38               	movlw	56
 18506  005468  6F66               	movwf	_inPipes& (0+255),b
 18507  00546A  0E0D               	movlw	13
 18508  00546C  6F67               	movwf	(_inPipes+1)& (0+255),b
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18512  00546E  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 18516  005470  0E02               	movlw	2
 18517  005472  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18518  005474  0012               	return	
 18519  005476                     __end_of_USBStdGetStatusHandler:
 18520                           	opt stack 0
 18521                           tblptru	equ	0xFF8
 18522                           tblptrh	equ	0xFF7
 18523                           tblptrl	equ	0xFF6
 18524                           tablat	equ	0xFF5
 18525                           prodh	equ	0xFF4
 18526                           prodl	equ	0xFF3
 18527                           intcon	equ	0xFF2
 18528                           intcon2	equ	0xFF1
 18529                           intcon3	equ	0xFF0
 18530                           postinc0	equ	0xFEE
 18531                           wreg	equ	0xFE8
 18532                           indf1	equ	0xFE7
 18533                           postdec1	equ	0xFE5
 18534                           plusw1	equ	0xFE3
 18535                           fsr1h	equ	0xFE2
 18536                           fsr1l	equ	0xFE1
 18537                           indf2	equ	0xFDF
 18538                           postinc2	equ	0xFDE
 18539                           postdec2	equ	0xFDD
 18540                           plusw2	equ	0xFDB
 18541                           fsr2h	equ	0xFDA
 18542                           fsr2l	equ	0xFD9
 18543                           status	equ	0xFD8
 18544                           
 18545 ;; *************** function _USBStdGetDscHandler *****************
 18546 ;; Defined at:
 18547 ;;		line 2045 in file "usb_device.c"
 18548 ;; Parameters:    Size  Location     Type
 18549 ;;		None
 18550 ;; Auto vars:     Size  Location     Type
 18551 ;;		None
 18552 ;; Return value:  Size  Location     Type
 18553 ;;                  1    wreg      void 
 18554 ;; Registers used:
 18555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18556 ;; Tracked objects:
 18557 ;;		On entry : 0/0
 18558 ;;		On exit  : 0/0
 18559 ;;		Unchanged: 0/0
 18560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18565 ;;Total ram usage:        2 bytes
 18566 ;; Hardware stack levels used:    1
 18567 ;; This function calls:
 18568 ;;		Nothing
 18569 ;; This function is called by:
 18570 ;;		_USBCheckStdRequest
 18571 ;; This function uses a non-reentrant model
 18572 ;;
 18573                           
 18574                           	psect	text86
 18575  00391E                     __ptext86:
 18576                           	opt stack 0
 18577  00391E                     _USBStdGetDscHandler:
 18578                           	opt stack 26
 18579                           
 18580                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 18581                           
 18582                           ; BSR set to: 0
 18583                           ;incstack = 0
 18584  00391E  0E80               	movlw	128
 18585  003920  010D               	movlb	13	; () banked
 18586  003922  1930               	xorwf	48,w,b	;volatile
 18587  003924  A4D8               	btfss	status,2,c
 18588  003926  0012               	return	
 18589                           
 18590                           ; BSR set to: 13
 18591                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 18592  003928  0EC0               	movlw	192
 18593  00392A  0100               	movlb	0	; () banked
 18594  00392C  6F69               	movwf	(_inPipes+3)& (0+255),b
 18595                           
 18596                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 18597  00392E  D088               	goto	l268
 18598  003930                     
 18599                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 18600                           
 18601                           ; BSR set to: 0
 18602  003930  0EA4               	movlw	low _device_dsc
 18603  003932  0100               	movlb	0	; () banked
 18604  003934  6F66               	movwf	_inPipes& (0+255),b
 18605  003936  0E8F               	movlw	high _device_dsc
 18606  003938  6F67               	movwf	(_inPipes+1)& (0+255),b
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 18610  00393A  0E00               	movlw	0
 18611  00393C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18612  00393E  0E12               	movlw	18
 18613  003940  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18614                           
 18615                           ;usb_device.c: 2060: break;
 18616  003942  0012               	return	
 18617  003944                     
 18618                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 18619                           
 18620                           ; BSR set to: 0
 18621  003944  010D               	movlb	13	; () banked
 18622  003946  5132               	movf	50,w,b	;volatile
 18623  003948  A4D8               	btfss	status,2,c
 18624  00394A  D043               	goto	l272
 18625                           
 18626                           ; BSR set to: 13
 18627                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 18628  00394C  5132               	movf	50,w,b	;volatile
 18629  00394E  0D02               	mullw	2
 18630  003950  0EA5               	movlw	low _USB_CD_Ptr
 18631  003952  24F3               	addwf	prodl,w,c
 18632  003954  6EF6               	movwf	tblptrl,c
 18633  003956  0E8E               	movlw	high _USB_CD_Ptr
 18634  003958  20F4               	addwfc	prodh,w,c
 18635  00395A  6EF7               	movwf	tblptrh,c
 18636  00395C                     	if	1	;There are 3 active tblptr bytes
 18637  00395C  6AF8               	clrf	tblptru,c
 18638  00395E  0E00               	movlw	low (__mediumconst shr (0+16))
 18639  003960  22F8               	addwfc	tblptru,f,c
 18640  003962                     	endif
 18641  003962  0009               	tblrd		*+
 18642  003964  CFF5 F066          	movff	tablat,_inPipes
 18643  003968  000A               	tblrd		*-
 18644  00396A  CFF5 F067          	movff	tablat,_inPipes+1
 18645                           
 18646                           ; BSR set to: 13
 18647                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 18648  00396E  0E02               	movlw	2
 18649  003970  0100               	movlb	0	; () banked
 18650  003972  2566               	addwf	_inPipes& (0+255),w,b
 18651  003974  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18652  003976  0E00               	movlw	0
 18653  003978  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 18654  00397A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18655  00397C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18656  003980  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18657  003984  6AF8               	clrf	tblptru,c
 18658  003986  0E0E               	movlw	(high __ramtop+-1)
 18659  003988  64F7               	cpfsgt	tblptrh,c
 18660  00398A  D003               	bra	u7797
 18661  00398C  0008               	tblrd		*
 18662  00398E  50F5               	movf	tablat,w,c
 18663  003990  D005               	bra	u7790
 18664  003992                     u7797:
 18665  003992  CFF6 FFE9          	movff	tblptrl,fsr0l
 18666  003996  CFF7 FFEA          	movff	tblptrh,fsr0h
 18667  00399A  50EF               	movf	indf0,w,c
 18668  00399C                     u7790:
 18669  00399C  0100               	movlb	0	; () banked
 18670  00399E  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 18674  0039A0  0E03               	movlw	3
 18675  0039A2  2566               	addwf	_inPipes& (0+255),w,b
 18676  0039A4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18677  0039A6  0E00               	movlw	0
 18678  0039A8  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 18679  0039AA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18680  0039AC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18681  0039B0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18682  0039B4  6AF8               	clrf	tblptru,c
 18683  0039B6  0E0E               	movlw	(high __ramtop+-1)
 18684  0039B8  64F7               	cpfsgt	tblptrh,c
 18685  0039BA  D003               	bra	u7807
 18686  0039BC  0008               	tblrd		*
 18687  0039BE  50F5               	movf	tablat,w,c
 18688  0039C0  D005               	bra	u7800
 18689  0039C2                     u7807:
 18690  0039C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 18691  0039C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 18692  0039CA  50EF               	movf	indf0,w,c
 18693  0039CC                     u7800:
 18694  0039CC  0100               	movlb	0	; () banked
 18695  0039CE  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18696                           
 18697                           ;usb_device.c: 2078: }
 18698  0039D0  0012               	return	
 18699  0039D2                     l272:
 18700                           
 18701                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 18702                           
 18703                           ; BSR set to: 0
 18704  0039D2  0E00               	movlw	0
 18705  0039D4  0100               	movlb	0	; () banked
 18706  0039D6  6F69               	movwf	(_inPipes+3)& (0+255),b
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 18710  0039D8  0012               	return	
 18711  0039DA                     
 18712                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 18713                           
 18714                           ; BSR set to: 0
 18715  0039DA  0E04               	movlw	4
 18716  0039DC  010D               	movlb	13	; () banked
 18717  0039DE  6132               	cpfslt	50,b	;volatile
 18718  0039E0  D027               	goto	l275
 18719                           
 18720                           ; BSR set to: 13
 18721                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 18722  0039E2  5132               	movf	50,w,b	;volatile
 18723  0039E4  0D02               	mullw	2
 18724  0039E6  0E7B               	movlw	low _USB_SD_Ptr
 18725  0039E8  24F3               	addwf	prodl,w,c
 18726  0039EA  6EF6               	movwf	tblptrl,c
 18727  0039EC  0E8E               	movlw	high _USB_SD_Ptr
 18728  0039EE  20F4               	addwfc	prodh,w,c
 18729  0039F0  6EF7               	movwf	tblptrh,c
 18730  0039F2                     	if	1	;There are 3 active tblptr bytes
 18731  0039F2  6AF8               	clrf	tblptru,c
 18732  0039F4  0E00               	movlw	low (__mediumconst shr (0+16))
 18733  0039F6  22F8               	addwfc	tblptru,f,c
 18734  0039F8                     	endif
 18735  0039F8  0009               	tblrd		*+
 18736  0039FA  CFF5 F066          	movff	tablat,_inPipes
 18737  0039FE  000A               	tblrd		*-
 18738  003A00  CFF5 F067          	movff	tablat,_inPipes+1
 18739                           
 18740                           ; BSR set to: 13
 18741                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 18742  003A04  C066  FFF6         	movff	_inPipes,tblptrl
 18743  003A08  C067  FFF7         	movff	_inPipes+1,tblptrh
 18744  003A0C  6AF8               	clrf	tblptru,c
 18745  003A0E  0E0E               	movlw	(high __ramtop+-1)
 18746  003A10  64F7               	cpfsgt	tblptrh,c
 18747  003A12  D003               	bra	u7827
 18748  003A14  0008               	tblrd		*
 18749  003A16  50F5               	movf	tablat,w,c
 18750  003A18  D005               	bra	u7820
 18751  003A1A                     u7827:
 18752  003A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 18753  003A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 18754  003A22  50EF               	movf	indf0,w,c
 18755  003A24                     u7820:
 18756  003A24  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18757  003A26  5001               	movf	??_USBStdGetDscHandler,w,c
 18758  003A28  0100               	movlb	0	; () banked
 18759  003A2A  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18760  003A2C  6B6B               	clrf	(_inPipes+5)& (0+255),b
 18761                           
 18762                           ;usb_device.c: 2094: }
 18763  003A2E  0012               	return	
 18764  003A30                     l275:
 18765                           
 18766                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 18767                           
 18768                           ; BSR set to: 0
 18769  003A30  0E00               	movlw	0
 18770  003A32  0100               	movlb	0	; () banked
 18771  003A34  6F69               	movwf	(_inPipes+3)& (0+255),b
 18772                           
 18773                           ; BSR set to: 0
 18774                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 18775  003A36  0012               	return	
 18776  003A38                     
 18777                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 18778                           
 18779                           ; BSR set to: 0
 18780  003A38  0E00               	movlw	0
 18781  003A3A  0100               	movlb	0	; () banked
 18782  003A3C  6F69               	movwf	(_inPipes+3)& (0+255),b
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;usb_device.c: 2112: }
 18786                           
 18787                           ;usb_device.c: 2111: break;
 18788  003A3E  0012               	return	
 18789  003A40                     l268:
 18790                           
 18791                           ; BSR set to: 0
 18792                           
 18793                           ; BSR set to: 0
 18794  003A40  010D               	movlb	13	; () banked
 18795  003A42  5133               	movf	51,w,b	;volatile
 18796                           
 18797                           ; Switch size 1, requested type "space"
 18798                           ; Number of cases is 3, Range of values is 1 to 3
 18799                           ; switch strategies available:
 18800                           ; Name         Instructions Cycles
 18801                           ; simple_byte           10     6 (average)
 18802                           ;	Chosen strategy is simple_byte
 18803  003A44  0A01               	xorlw	1	; case 1
 18804  003A46  B4D8               	btfsc	status,2,c
 18805  003A48  D773               	goto	l269
 18806  003A4A  0A03               	xorlw	3	; case 2
 18807  003A4C  B4D8               	btfsc	status,2,c
 18808  003A4E  D77A               	goto	l271
 18809  003A50  0A01               	xorlw	1	; case 3
 18810  003A52  B4D8               	btfsc	status,2,c
 18811  003A54  D7C2               	goto	l274
 18812  003A56  D7F0               	goto	l277
 18813  003A58                     __end_of_USBStdGetDscHandler:
 18814                           	opt stack 0
 18815                           tblptru	equ	0xFF8
 18816                           tblptrh	equ	0xFF7
 18817                           tblptrl	equ	0xFF6
 18818                           tablat	equ	0xFF5
 18819                           prodh	equ	0xFF4
 18820                           prodl	equ	0xFF3
 18821                           intcon	equ	0xFF2
 18822                           intcon2	equ	0xFF1
 18823                           intcon3	equ	0xFF0
 18824                           indf0	equ	0xFEF
 18825                           postinc0	equ	0xFEE
 18826                           fsr0h	equ	0xFEA
 18827                           fsr0l	equ	0xFE9
 18828                           wreg	equ	0xFE8
 18829                           indf1	equ	0xFE7
 18830                           postdec1	equ	0xFE5
 18831                           plusw1	equ	0xFE3
 18832                           fsr1h	equ	0xFE2
 18833                           fsr1l	equ	0xFE1
 18834                           indf2	equ	0xFDF
 18835                           postinc2	equ	0xFDE
 18836                           postdec2	equ	0xFDD
 18837                           plusw2	equ	0xFDB
 18838                           fsr2h	equ	0xFDA
 18839                           fsr2l	equ	0xFD9
 18840                           status	equ	0xFD8
 18841                           
 18842 ;; *************** function _USBStdFeatureReqHandler *****************
 18843 ;; Defined at:
 18844 ;;		line 2756 in file "usb_device.c"
 18845 ;; Parameters:    Size  Location     Type
 18846 ;;		None
 18847 ;; Auto vars:     Size  Location     Type
 18848 ;;  p               2   27[COMRAM] PTR struct __BDT
 18849 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18850 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 18851 ;;		 -> UEP0(1), 
 18852 ;;  current_ep_d    1   26[COMRAM] struct .
 18853 ;; Return value:  Size  Location     Type
 18854 ;;                  1    wreg      void 
 18855 ;; Registers used:
 18856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18857 ;; Tracked objects:
 18858 ;;		On entry : 0/0
 18859 ;;		On exit  : 0/0
 18860 ;;		Unchanged: 0/0
 18861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18863 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18866 ;;Total ram usage:        6 bytes
 18867 ;; Hardware stack levels used:    1
 18868 ;; Hardware stack levels required when called:    4
 18869 ;; This function calls:
 18870 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18871 ;; This function is called by:
 18872 ;;		_USBCheckStdRequest
 18873 ;; This function uses a non-reentrant model
 18874 ;;
 18875                           
 18876                           	psect	text87
 18877  0017AC                     __ptext87:
 18878                           	opt stack 0
 18879  0017AC                     _USBStdFeatureReqHandler:
 18880                           	opt stack 22
 18881                           
 18882                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 18883                           
 18884                           ;incstack = 0
 18885  0017AC  010D               	movlb	13	; () banked
 18886  0017AE  0532               	decf	50,w,b	;volatile
 18887  0017B0  A4D8               	btfss	status,2,c
 18888  0017B2  D011               	goto	l361
 18889                           
 18890                           ; BSR set to: 13
 18891  0017B4  5130               	movf	48,w,b	;volatile
 18892  0017B6  0B1F               	andlw	31
 18893  0017B8  0900               	iorlw	0
 18894  0017BA  A4D8               	btfss	status,2,c
 18895  0017BC  D00C               	goto	l361
 18896                           
 18897                           ; BSR set to: 13
 18898                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 18899  0017BE  0100               	movlb	0	; () banked
 18900  0017C0  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 18904  0017C2  0E03               	movlw	3
 18905  0017C4  010D               	movlb	13	; () banked
 18906  0017C6  1931               	xorwf	49,w,b	;volatile
 18907  0017C8  A4D8               	btfss	status,2,c
 18908  0017CA  D002               	goto	l360
 18909                           
 18910                           ; BSR set to: 13
 18911                           ;usb_device.c: 2806: RemoteWakeup = 1;
 18912  0017CC  0E01               	movlw	1
 18913  0017CE  D001               	goto	L7
 18914  0017D0                     l360:
 18915                           
 18916                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 18917                           
 18918                           ; BSR set to: 0
 18919  0017D0  0E00               	movlw	0
 18920  0017D2                     L7:
 18921  0017D2  0100               	movlb	0	; () banked
 18922  0017D4  6FB3               	movwf	_RemoteWakeup& (0+255),b
 18923  0017D6                     l361:
 18924                           
 18925                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 18926                           
 18927                           ; BSR set to: 0
 18928  0017D6  010D               	movlb	13	; () banked
 18929  0017D8  5132               	movf	50,w,b	;volatile
 18930  0017DA  A4D8               	btfss	status,2,c
 18931  0017DC  0012               	return	
 18932                           
 18933                           ; BSR set to: 13
 18934  0017DE  5130               	movf	48,w,b	;volatile
 18935  0017E0  0B1F               	andlw	31
 18936  0017E2  0A02               	xorlw	2
 18937  0017E4  A4D8               	btfss	status,2,c
 18938  0017E6  0012               	return	
 18939                           
 18940                           ; BSR set to: 13
 18941  0017E8  5134               	movf	52,w,b	;volatile
 18942  0017EA  0B0F               	andlw	15
 18943  0017EC  0900               	iorlw	0
 18944  0017EE  B4D8               	btfsc	status,2,c
 18945  0017F0  0012               	return	
 18946                           
 18947                           ; BSR set to: 13
 18948  0017F2  5134               	movf	52,w,b	;volatile
 18949  0017F4  0B0F               	andlw	15
 18950  0017F6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18951  0017F8  0E03               	movlw	3
 18952  0017FA  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 18953  0017FC  0012               	return	
 18954                           
 18955                           ; BSR set to: 13
 18956  0017FE  0E20               	movlw	32
 18957  001800  185F               	xorwf	_USBDeviceState,w,c
 18958  001802  A4D8               	btfss	status,2,c
 18959  001804  0012               	return	
 18960                           
 18961                           ; BSR set to: 13
 18962                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 18963  001806  0100               	movlb	0	; () banked
 18964  001808  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18965                           
 18966                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 18967  00180A  010D               	movlb	13	; () banked
 18968  00180C  BF34               	btfsc	52,7,b	;volatile
 18969  00180E  D019               	goto	l363
 18970                           
 18971                           ; BSR set to: 13
 18972                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18973  001810  5134               	movf	52,w,b	;volatile
 18974  001812  0B0F               	andlw	15
 18975  001814  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18976  001816  5018               	movf	??_USBStdFeatureReqHandler,w,c
 18977  001818  0D02               	mullw	2
 18978  00181A  0E72               	movlw	low _pBDTEntryOut
 18979  00181C  24F3               	addwf	prodl,w,c
 18980  00181E  6ED9               	movwf	fsr2l,c
 18981  001820  0E00               	movlw	high _pBDTEntryOut
 18982  001822  20F4               	addwfc	prodh,w,c
 18983  001824  6EDA               	movwf	fsr2h,c
 18984  001826  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 18985  00182A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18986                           
 18987                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 18988  00182E  5134               	movf	52,w,b	;volatile
 18989  001830  0B0F               	andlw	15
 18990  001832  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18991  001834  5018               	movf	??_USBStdFeatureReqHandler,w,c
 18992  001836  0D01               	mullw	1
 18993  001838  0E5E               	movlw	low _ep_data_out
 18994  00183A  24F3               	addwf	prodl,w,c
 18995  00183C  6ED9               	movwf	fsr2l,c
 18996  00183E  0E01               	movlw	high _ep_data_out
 18997  001840  D018               	goto	L8
 18998  001842                     l363:
 18999                           
 19000                           ; BSR set to: 13
 19001                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 19002                           
 19003                           ; BSR set to: 13
 19004  001842  5134               	movf	52,w,b	;volatile
 19005  001844  0B0F               	andlw	15
 19006  001846  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19007  001848  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19008  00184A  0D02               	mullw	2
 19009  00184C  0E6C               	movlw	low _pBDTEntryIn
 19010  00184E  24F3               	addwf	prodl,w,c
 19011  001850  6ED9               	movwf	fsr2l,c
 19012  001852  0E00               	movlw	high _pBDTEntryIn
 19013  001854  20F4               	addwfc	prodh,w,c
 19014  001856  6EDA               	movwf	fsr2h,c
 19015  001858  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19016  00185C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19017                           
 19018                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19019  001860  5134               	movf	52,w,b	;volatile
 19020  001862  0B0F               	andlw	15
 19021  001864  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19022  001866  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19023  001868  0D01               	mullw	1
 19024  00186A  0E61               	movlw	low _ep_data_in
 19025  00186C  24F3               	addwf	prodl,w,c
 19026  00186E  6ED9               	movwf	fsr2l,c
 19027  001870  0E01               	movlw	high _ep_data_in
 19028  001872                     L8:
 19029  001872  20F4               	addwfc	prodh,w,c
 19030  001874  6EDA               	movwf	fsr2h,c
 19031  001876  50DF               	movf	indf2,w,c
 19032  001878  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19033                           
 19034                           ; BSR set to: 13
 19035                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 19036                           
 19037                           ; BSR set to: 13
 19038  00187A  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19039  00187C  D006               	goto	l365
 19040                           
 19041                           ; BSR set to: 13
 19042                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19043  00187E  0EFB               	movlw	251
 19044  001880  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 19045  001882  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19046  001884  0EFF               	movlw	255
 19047  001886  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19048  001888  D004               	goto	L9
 19049  00188A                     l365:
 19050                           
 19051                           ; BSR set to: 13
 19052                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 19053                           
 19054                           ; BSR set to: 13
 19055  00188A  0E04               	movlw	4
 19056  00188C  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 19057  00188E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19058  001890  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19059  001892                     L9:
 19060  001892  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19061                           
 19062                           ; BSR set to: 13
 19063                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 19064                           
 19065                           ; BSR set to: 13
 19066  001894  BF34               	btfsc	52,7,b	;volatile
 19067  001896  D00A               	goto	l367
 19068                           
 19069                           ; BSR set to: 13
 19070                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 19071  001898  5134               	movf	52,w,b	;volatile
 19072  00189A  0B0F               	andlw	15
 19073  00189C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19074  00189E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19075  0018A0  0D02               	mullw	2
 19076  0018A2  0E72               	movlw	low _pBDTEntryOut
 19077  0018A4  24F3               	addwf	prodl,w,c
 19078  0018A6  6ED9               	movwf	fsr2l,c
 19079  0018A8  0E00               	movlw	high _pBDTEntryOut
 19080  0018AA  D009               	goto	L10
 19081  0018AC                     l367:
 19082                           
 19083                           ; BSR set to: 13
 19084                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 19085                           
 19086                           ; BSR set to: 13
 19087  0018AC  5134               	movf	52,w,b	;volatile
 19088  0018AE  0B0F               	andlw	15
 19089  0018B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19090  0018B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19091  0018B4  0D02               	mullw	2
 19092  0018B6  0E6C               	movlw	low _pBDTEntryIn
 19093  0018B8  24F3               	addwf	prodl,w,c
 19094  0018BA  6ED9               	movwf	fsr2l,c
 19095  0018BC  0E00               	movlw	high _pBDTEntryIn
 19096  0018BE                     L10:
 19097  0018BE  20F4               	addwfc	prodh,w,c
 19098  0018C0  6EDA               	movwf	fsr2h,c
 19099  0018C2  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19100  0018C6  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19101                           
 19102                           ; BSR set to: 13
 19103                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 19104                           
 19105                           ; BSR set to: 13
 19106  0018CA  0E03               	movlw	3
 19107  0018CC  1931               	xorwf	49,w,b	;volatile
 19108  0018CE  A4D8               	btfss	status,2,c
 19109  0018D0  D02D               	goto	l369
 19110                           
 19111                           ; BSR set to: 13
 19112                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 19113  0018D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19114  0018D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19115  0018DA  AEDF               	btfss	indf2,7,c
 19116  0018DC  D01A               	goto	l372
 19117                           
 19118                           ; BSR set to: 13
 19119                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 19120  0018DE  BF34               	btfsc	52,7,b	;volatile
 19121  0018E0  D00A               	goto	l371
 19122                           
 19123                           ; BSR set to: 13
 19124                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 19125  0018E2  5134               	movf	52,w,b	;volatile
 19126  0018E4  0B0F               	andlw	15
 19127  0018E6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19128  0018E8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19129  0018EA  0D01               	mullw	1
 19130  0018EC  0E5E               	movlw	low _ep_data_out
 19131  0018EE  24F3               	addwf	prodl,w,c
 19132  0018F0  6ED9               	movwf	fsr2l,c
 19133  0018F2  0E01               	movlw	high _ep_data_out
 19134  0018F4  D00A               	goto	L11
 19135  0018F6                     l371:
 19136                           
 19137                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 19138                           
 19139                           ; BSR set to: 1
 19140  0018F6  010D               	movlb	13	; () banked
 19141  0018F8  5134               	movf	52,w,b	;volatile
 19142  0018FA  0B0F               	andlw	15
 19143  0018FC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19144  0018FE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19145  001900  0D01               	mullw	1
 19146  001902  0E61               	movlw	low _ep_data_in
 19147  001904  24F3               	addwf	prodl,w,c
 19148  001906  6ED9               	movwf	fsr2l,c
 19149  001908  0E01               	movlw	high _ep_data_in
 19150  00190A                     L11:
 19151  00190A  20F4               	addwfc	prodh,w,c
 19152  00190C  6EDA               	movwf	fsr2h,c
 19153  00190E  0101               	movlb	1	; () banked
 19154  001910  82DF               	bsf	indf2,1,c
 19155  001912                     l372:
 19156                           
 19157                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 19158                           
 19159                           ; BSR set to: 1
 19160                           
 19161                           ; BSR set to: 1
 19162  001912  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19163  001916  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19164  00191A  0E00               	movlw	0
 19165  00191C  84DB               	bsf	plusw2,2,c
 19166                           
 19167                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 19168  00191E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19169  001922  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19170  001926  0E00               	movlw	0
 19171  001928  8EDB               	bsf	plusw2,7,c
 19172                           
 19173                           ;usb_device.c: 2878: }
 19174  00192A  0012               	return	
 19175  00192C                     l369:
 19176                           
 19177                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 19178  00192C  0E04               	movlw	4
 19179  00192E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19180  001930  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19181  001932  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19182  001934  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19183                           
 19184                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 19185  001936  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19186  00193A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19187  00193E  AEDF               	btfss	indf2,7,c
 19188  001940  D01B               	goto	l374
 19189                           
 19190                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 19191  001942  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19192  001946  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19193  00194A  0E7F               	movlw	127
 19194  00194C  16DF               	andwf	indf2,f,c
 19195                           
 19196                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 19197  00194E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19198  001952  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19199  001956  0E00               	movlw	0
 19200  001958  8CDB               	bsf	plusw2,6,c
 19201                           
 19202                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19203  00195A  0E00               	movlw	0
 19204  00195C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19205  00195E  0E05               	movlw	5
 19206  001960  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19207  001962  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19208  001966  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19209  00196A  0E00               	movlw	0
 19210  00196C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19211  00196E  0E02               	movlw	2
 19212  001970  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19213  001972  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19214                           
 19215                           ;usb_device.c: 2893: }
 19216  001976  D006               	goto	l375
 19217  001978                     l374:
 19218                           
 19219                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 19220  001978  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19221  00197C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19222  001980  0E00               	movlw	0
 19223  001982  8CDB               	bsf	plusw2,6,c
 19224  001984                     l375:
 19225                           
 19226                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19227  001984  0E04               	movlw	4
 19228  001986  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19229  001988  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19230  00198A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19231  00198C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19232                           
 19233                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 19234  00198E  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 19235  001990  D006               	goto	u8040
 19236  001992  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19237  001996  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19238  00199A  AEDF               	btfss	indf2,7,c
 19239  00199C  D030               	goto	l376
 19240  00199E                     u8040:
 19241                           
 19242                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 19243  00199E  010D               	movlb	13	; () banked
 19244  0019A0  BF34               	btfsc	52,7,b	;volatile
 19245  0019A2  D00A               	goto	l379
 19246                           
 19247                           ; BSR set to: 13
 19248                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 19249  0019A4  5134               	movf	52,w,b	;volatile
 19250  0019A6  0B0F               	andlw	15
 19251  0019A8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19252  0019AA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19253  0019AC  0D01               	mullw	1
 19254  0019AE  0E5E               	movlw	low _ep_data_out
 19255  0019B0  24F3               	addwf	prodl,w,c
 19256  0019B2  6ED9               	movwf	fsr2l,c
 19257  0019B4  0E01               	movlw	high _ep_data_out
 19258  0019B6  D00A               	goto	L12
 19259  0019B8                     l379:
 19260                           
 19261                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 19262                           
 19263                           ; BSR set to: 1
 19264  0019B8  010D               	movlb	13	; () banked
 19265  0019BA  5134               	movf	52,w,b	;volatile
 19266  0019BC  0B0F               	andlw	15
 19267  0019BE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19268  0019C0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19269  0019C2  0D01               	mullw	1
 19270  0019C4  0E61               	movlw	low _ep_data_in
 19271  0019C6  24F3               	addwf	prodl,w,c
 19272  0019C8  6ED9               	movwf	fsr2l,c
 19273  0019CA  0E01               	movlw	high _ep_data_in
 19274  0019CC                     L12:
 19275  0019CC  20F4               	addwfc	prodh,w,c
 19276  0019CE  6EDA               	movwf	fsr2h,c
 19277  0019D0  0101               	movlb	1	; () banked
 19278  0019D2  92DF               	bcf	indf2,1,c
 19279                           
 19280                           ; BSR set to: 1
 19281                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19282                           
 19283                           ; BSR set to: 1
 19284  0019D4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19285  0019D8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19286  0019DC  0E3B               	movlw	59
 19287  0019DE  16DF               	andwf	indf2,f,c
 19288                           
 19289                           ; BSR set to: 1
 19290                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19291  0019E0  0E00               	movlw	0
 19292  0019E2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19293  0019E4  0E05               	movlw	5
 19294  0019E6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19295  0019E8  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19296  0019EC  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19297  0019F0  0E00               	movlw	0
 19298  0019F2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19299  0019F4  0E02               	movlw	2
 19300  0019F6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19301  0019F8  EC47  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19302                           
 19303                           ;usb_device.c: 2923: }
 19304  0019FC  D006               	goto	l381
 19305  0019FE                     l376:
 19306                           
 19307                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 19308  0019FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19309  001A02  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19310  001A06  0E3B               	movlw	59
 19311  001A08  16DF               	andwf	indf2,f,c
 19312  001A0A                     l381:
 19313                           
 19314                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 19315  001A0A  010D               	movlb	13	; () banked
 19316  001A0C  5134               	movf	52,w,b	;volatile
 19317  001A0E  0B0F               	andlw	15
 19318  001A10  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19319  001A12  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19320  001A14  0D01               	mullw	1
 19321  001A16  0E26               	movlw	38
 19322  001A18  24F3               	addwf	prodl,w,c
 19323  001A1A  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 19324  001A1C  0E0F               	movlw	15
 19325  001A1E  20F4               	addwfc	prodh,w,c
 19326  001A20  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 19327                           
 19328                           ; BSR set to: 13
 19329                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 19330  001A22  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 19331  001A26  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 19332  001A2A  0EFE               	movlw	254
 19333  001A2C  16DF               	andwf	indf2,f,c
 19334                           
 19335                           ; BSR set to: 13
 19336  001A2E  0012               	return	
 19337  001A30                     __end_of_USBStdFeatureReqHandler:
 19338                           	opt stack 0
 19339                           tblptru	equ	0xFF8
 19340                           tblptrh	equ	0xFF7
 19341                           tblptrl	equ	0xFF6
 19342                           tablat	equ	0xFF5
 19343                           prodh	equ	0xFF4
 19344                           prodl	equ	0xFF3
 19345                           intcon	equ	0xFF2
 19346                           intcon2	equ	0xFF1
 19347                           intcon3	equ	0xFF0
 19348                           indf0	equ	0xFEF
 19349                           postinc0	equ	0xFEE
 19350                           fsr0h	equ	0xFEA
 19351                           fsr0l	equ	0xFE9
 19352                           wreg	equ	0xFE8
 19353                           indf1	equ	0xFE7
 19354                           postdec1	equ	0xFE5
 19355                           plusw1	equ	0xFE3
 19356                           fsr1h	equ	0xFE2
 19357                           fsr1l	equ	0xFE1
 19358                           indf2	equ	0xFDF
 19359                           postinc2	equ	0xFDE
 19360                           postdec2	equ	0xFDD
 19361                           plusw2	equ	0xFDB
 19362                           fsr2h	equ	0xFDA
 19363                           fsr2l	equ	0xFD9
 19364                           status	equ	0xFD8
 19365                           
 19366 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 19367 ;; Defined at:
 19368 ;;		line 54 in file "usb_events.c"
 19369 ;; Parameters:    Size  Location     Type
 19370 ;;  event           2   15[COMRAM] enum E6832
 19371 ;;  pdata           2   17[COMRAM] PTR void 
 19372 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 19373 ;;		 -> BDT(48), 
 19374 ;;  size            2   19[COMRAM] unsigned int 
 19375 ;; Auto vars:     Size  Location     Type
 19376 ;;		None
 19377 ;; Return value:  Size  Location     Type
 19378 ;;                  1    wreg      unsigned char 
 19379 ;; Registers used:
 19380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19381 ;; Tracked objects:
 19382 ;;		On entry : 0/0
 19383 ;;		On exit  : 0/0
 19384 ;;		Unchanged: 0/0
 19385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19386 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19390 ;;Total ram usage:        8 bytes
 19391 ;; Hardware stack levels used:    1
 19392 ;; Hardware stack levels required when called:    3
 19393 ;; This function calls:
 19394 ;;		_APP_DeviceCustomHIDInitialize
 19395 ;;		_APP_DeviceMSDInitialize
 19396 ;;		_MSDTransferTerminated
 19397 ;;		_SYSTEM_Initialize
 19398 ;;		_USBCheckHIDRequest
 19399 ;;		_USBCheckMSDRequest
 19400 ;; This function is called by:
 19401 ;;		_USBDeviceTasks
 19402 ;;		_USBStdSetCfgHandler
 19403 ;;		_USBSuspend
 19404 ;;		_USBWakeFromSuspend
 19405 ;;		_USBCtrlTrfSetupHandler
 19406 ;;		_USBCheckStdRequest
 19407 ;;		_USBStdFeatureReqHandler
 19408 ;; This function uses a non-reentrant model
 19409 ;;
 19410                           
 19411                           	psect	text88
 19412  005E8E                     __ptext88:
 19413                           	opt stack 0
 19414  005E8E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 19415                           	opt stack 26
 19416                           
 19417                           ;usb_events.c: 56: switch((int)event)
 19418                           
 19419                           ;incstack = 0
 19420  005E8E  D019               	goto	l800
 19421  005E90                     
 19422                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 19423  005E90  0E01               	movlw	1
 19424  005E92  ECAC  F037         	call	_SYSTEM_Initialize
 19425                           
 19426                           ;usb_events.c: 79: break;
 19427  005E96  0012               	return	
 19428  005E98                     
 19429                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 19430  005E98  0E02               	movlw	2
 19431  005E9A  ECAC  F037         	call	_SYSTEM_Initialize
 19432                           
 19433                           ;usb_events.c: 90: break;
 19434  005E9E  0012               	return	
 19435  005EA0                     
 19436                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 19437  005EA0  ECE6  F03A         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 19438                           
 19439                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 19440  005EA4  EC73  F03D         	call	_APP_DeviceMSDInitialize	;wreg free
 19441                           
 19442                           ;usb_events.c: 100: break;
 19443                           
 19444                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 19445                           
 19446                           ;usb_events.c: 97: break;
 19447  005EA8  0012               	return	
 19448  005EAA                     
 19449                           ;usb_events.c: 105: USBCheckHIDRequest();
 19450  005EAA  EC4C  F022         	call	_USBCheckHIDRequest	;wreg free
 19451                           
 19452                           ;usb_events.c: 108: USBCheckMSDRequest();
 19453  005EAE  EC14  F028         	call	_USBCheckMSDRequest	;wreg free
 19454                           
 19455                           ;usb_events.c: 112: break;
 19456                           
 19457                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 19458                           
 19459                           ;usb_events.c: 109: break;
 19460  005EB2  0012               	return	
 19461  005EB4                     
 19462                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 19463  005EB4  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 19464  005EB8  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 19465  005EBC  EC2B  F037         	call	_MSDTransferTerminated	;wreg free
 19466                           
 19467                           ;usb_events.c: 129: }
 19468                           
 19469                           ;usb_events.c: 128: break;
 19470                           
 19471                           ;usb_events.c: 127: default:
 19472                           
 19473                           ;usb_events.c: 125: break;
 19474  005EC0  0012               	return	
 19475  005EC2                     l800:
 19476  005EC2  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 19477  005EC6  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 19478                           
 19479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19480                           ; Switch size 1, requested type "space"
 19481                           ; Number of cases is 2, Range of values is 0 to 127
 19482                           ; switch strategies available:
 19483                           ; Name         Instructions Cycles
 19484                           ; simple_byte            7     4 (average)
 19485                           ;	Chosen strategy is simple_byte
 19486  005ECA  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 19487  005ECC  0A00               	xorlw	0	; case 0
 19488  005ECE  B4D8               	btfsc	status,2,c
 19489  005ED0  D004               	goto	l14587
 19490  005ED2  0A7F               	xorlw	127	; case 127
 19491  005ED4  A4D8               	btfss	status,2,c
 19492  005ED6  0012               	return	
 19493  005ED8  D01A               	goto	l14589
 19494  005EDA                     l14587:
 19495                           
 19496                           ; Switch size 1, requested type "space"
 19497                           ; Number of cases is 8, Range of values is 1 to 117
 19498                           ; switch strategies available:
 19499                           ; Name         Instructions Cycles
 19500                           ; simple_byte           25    13 (average)
 19501                           ;	Chosen strategy is simple_byte
 19502  005EDA  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19503  005EDC  0A01               	xorlw	1	; case 1
 19504  005EDE  B4D8               	btfsc	status,2,c
 19505  005EE0  D7DF               	goto	l806
 19506  005EE2  0A03               	xorlw	3	; case 2
 19507  005EE4  B4D8               	btfsc	status,2,c
 19508  005EE6  0012               	return	
 19509  005EE8  0A01               	xorlw	1	; case 3
 19510  005EEA  B4D8               	btfsc	status,2,c
 19511  005EEC  D7DE               	goto	l808
 19512  005EEE  0A06               	xorlw	6	; case 5
 19513  005EF0  B4D8               	btfsc	status,2,c
 19514  005EF2  D7E0               	goto	l810
 19515  005EF4  0A77               	xorlw	119	; case 114
 19516  005EF6  B4D8               	btfsc	status,2,c
 19517  005EF8  0012               	return	
 19518  005EFA  0A01               	xorlw	1	; case 115
 19519  005EFC  B4D8               	btfsc	status,2,c
 19520  005EFE  0012               	return	
 19521  005F00  0A07               	xorlw	7	; case 116
 19522  005F02  B4D8               	btfsc	status,2,c
 19523  005F04  D7C9               	goto	l805
 19524  005F06  0A01               	xorlw	1	; case 117
 19525  005F08  A4D8               	btfss	status,2,c
 19526  005F0A  0012               	return	
 19527  005F0C  D7C1               	goto	l804
 19528  005F0E                     l14589:
 19529                           
 19530                           ; Switch size 1, requested type "space"
 19531                           ; Number of cases is 1, Range of values is 255 to 255
 19532                           ; switch strategies available:
 19533                           ; Name         Instructions Cycles
 19534                           ; simple_byte            4     3 (average)
 19535                           ;	Chosen strategy is simple_byte
 19536  005F0E  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19537  005F10  0AFF               	xorlw	255	; case 255
 19538  005F12  0012               	return	
 19539  005F14                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 19540                           	opt stack 0
 19541                           tblptru	equ	0xFF8
 19542                           tblptrh	equ	0xFF7
 19543                           tblptrl	equ	0xFF6
 19544                           tablat	equ	0xFF5
 19545                           prodh	equ	0xFF4
 19546                           prodl	equ	0xFF3
 19547                           intcon	equ	0xFF2
 19548                           intcon2	equ	0xFF1
 19549                           intcon3	equ	0xFF0
 19550                           indf0	equ	0xFEF
 19551                           postinc0	equ	0xFEE
 19552                           fsr0h	equ	0xFEA
 19553                           fsr0l	equ	0xFE9
 19554                           wreg	equ	0xFE8
 19555                           indf1	equ	0xFE7
 19556                           postdec1	equ	0xFE5
 19557                           plusw1	equ	0xFE3
 19558                           fsr1h	equ	0xFE2
 19559                           fsr1l	equ	0xFE1
 19560                           indf2	equ	0xFDF
 19561                           postinc2	equ	0xFDE
 19562                           postdec2	equ	0xFDD
 19563                           plusw2	equ	0xFDB
 19564                           fsr2h	equ	0xFDA
 19565                           fsr2l	equ	0xFD9
 19566                           status	equ	0xFD8
 19567                           
 19568 ;; *************** function _USBCheckMSDRequest *****************
 19569 ;; Defined at:
 19570 ;;		line 218 in file "usb_device_msd.c"
 19571 ;; Parameters:    Size  Location     Type
 19572 ;;		None
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;		None
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  1    wreg      void 
 19577 ;; Registers used:
 19578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19588 ;;Total ram usage:        4 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; Hardware stack levels required when called:    1
 19591 ;; This function calls:
 19592 ;;		_USBTransferOnePacket
 19593 ;; This function is called by:
 19594 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19595 ;; This function uses a non-reentrant model
 19596 ;;
 19597                           
 19598                           	psect	text89
 19599  005028                     __ptext89:
 19600                           	opt stack 0
 19601  005028                     _USBCheckMSDRequest:
 19602                           	opt stack 27
 19603                           
 19604                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 19605                           
 19606                           ;incstack = 0
 19607  005028  010D               	movlb	13	; () banked
 19608  00502A  5130               	movf	48,w,b	;volatile
 19609  00502C  0B1F               	andlw	31
 19610  00502E  06E8               	decf	wreg,f,c
 19611  005030  A4D8               	btfss	status,2,c
 19612  005032  0012               	return	
 19613                           
 19614                           ; BSR set to: 13
 19615                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 19616                           
 19617                           ; BSR set to: 13
 19618                           
 19619                           ; BSR set to: 13
 19620                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 19621  005034  5134               	movf	52,w,b	;volatile
 19622  005036  A4D8               	btfss	status,2,c
 19623  005038  0012               	return	
 19624  00503A  D04E               	goto	l529
 19625  00503C                     
 19626                           ; BSR set to: 13
 19627                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 19628                           
 19629                           ; BSR set to: 13
 19630  00503C  5132               	movf	50,w,b	;volatile
 19631  00503E  1133               	iorwf	51,w,b	;volatile
 19632  005040  A4D8               	btfss	status,2,c
 19633  005042  0012               	return	
 19634                           
 19635                           ; BSR set to: 13
 19636  005044  5136               	movf	54,w,b	;volatile
 19637  005046  1137               	iorwf	55,w,b	;volatile
 19638  005048  A4D8               	btfss	status,2,c
 19639  00504A  0012               	return	
 19640                           
 19641                           ; BSR set to: 13
 19642                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 19643                           
 19644                           ; BSR set to: 13
 19645                           
 19646                           ; BSR set to: 13
 19647                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 19648  00504C  0E00               	movlw	0
 19649  00504E  0100               	movlb	0	; () banked
 19650  005050  6FA8               	movwf	_MSD_State& (0+255),b
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 19654  005052  69A7               	setf	_MSDCommandState& (0+255),b
 19655                           
 19656                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 19657  005054  0E00               	movlw	0
 19658  005056  6FA6               	movwf	_MSDReadState& (0+255),b
 19659                           
 19660                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 19661  005058  0E00               	movlw	0
 19662  00505A  6FA5               	movwf	_MSDWriteState& (0+255),b
 19663                           
 19664                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 19665  00505C  0E01               	movlw	1
 19666  00505E  6FA0               	movwf	_MSDCBWValid& (0+255),b
 19667                           
 19668                           ; BSR set to: 0
 19669                           
 19670                           ; BSR set to: 0
 19671                           
 19672                           ; BSR set to: 0
 19673                           
 19674                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 19675  005060  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 19676  005064  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 19677                           
 19678                           ; BSR set to: 0
 19679  005068  500C               	movf	_USBCheckMSDRequest$2319,w,c
 19680  00506A  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 19681  00506C  B4D8               	btfsc	status,2,c
 19682  00506E  D00A               	goto	u6460
 19683                           
 19684                           ; BSR set to: 0
 19685                           
 19686                           ; BSR set to: 0
 19687                           
 19688                           ; BSR set to: 0
 19689                           
 19690                           ; BSR set to: 0
 19691  005070  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 19692  005074  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 19693                           
 19694                           ; BSR set to: 0
 19695                           
 19696                           ; BSR set to: 0
 19697  005078  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 19698  00507C  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 19699  005080  BEDF               	btfsc	indf2,7,c
 19700  005082  D00F               	goto	l534
 19701  005084                     u6460:
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19705                           
 19706                           ; BSR set to: 0
 19707  005084  0E00               	movlw	0
 19708  005086  6E01               	movwf	USBTransferOnePacket@dir,c
 19709  005088  0E40               	movlw	64
 19710  00508A  6E02               	movwf	USBTransferOnePacket@data,c
 19711  00508C  0E0D               	movlw	13
 19712  00508E  6E03               	movwf	USBTransferOnePacket@data+1,c
 19713  005090  0E40               	movlw	64
 19714  005092  6E04               	movwf	USBTransferOnePacket@len,c
 19715  005094  0E02               	movlw	2
 19716  005096  EC61  F020         	call	_USBTransferOnePacket
 19717  00509A  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19718  00509E  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19719  0050A2                     l534:
 19720                           
 19721                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 19722  0050A2  0E80               	movlw	128
 19723  0050A4  0100               	movlb	0	; () banked
 19724  0050A6  6F69               	movwf	(_inPipes+3)& (0+255),b
 19725                           
 19726                           ;usb_device_msd.c: 263: break;
 19727  0050A8  0012               	return	
 19728  0050AA                     
 19729                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 19730                           
 19731                           ; BSR set to: 0
 19732  0050AA  010D               	movlb	13	; () banked
 19733  0050AC  5132               	movf	50,w,b	;volatile
 19734  0050AE  1133               	iorwf	51,w,b	;volatile
 19735  0050B0  A4D8               	btfss	status,2,c
 19736  0050B2  0012               	return	
 19737                           
 19738                           ; BSR set to: 13
 19739  0050B4  0536               	decf	54,w,b	;volatile
 19740  0050B6  1137               	iorwf	55,w,b	;volatile
 19741  0050B8  A4D8               	btfss	status,2,c
 19742  0050BA  0012               	return	
 19743                           
 19744                           ; BSR set to: 13
 19745                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 19746                           
 19747                           ; BSR set to: 13
 19748                           
 19749                           ; BSR set to: 13
 19750                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 19751  0050BC  0E00               	movlw	0
 19752  0050BE  6F38               	movwf	56,b	;volatile
 19753                           
 19754                           ; BSR set to: 13
 19755                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19756  0050C0  0E38               	movlw	56
 19757  0050C2  0100               	movlb	0	; () banked
 19758  0050C4  6F66               	movwf	_inPipes& (0+255),b
 19759  0050C6  0E0D               	movlw	13
 19760  0050C8  6F67               	movwf	(_inPipes+1)& (0+255),b
 19761                           
 19762                           ; BSR set to: 0
 19763  0050CA  0E00               	movlw	0
 19764  0050CC  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19765  0050CE  0E01               	movlw	1
 19766  0050D0  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19767                           
 19768                           ; BSR set to: 0
 19769  0050D2  0EC1               	movlw	193
 19770  0050D4  6F69               	movwf	(_inPipes+3)& (0+255),b
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;usb_device_msd.c: 278: }
 19774                           
 19775                           ;usb_device_msd.c: 277: break;
 19776  0050D6  0012               	return	
 19777  0050D8                     l529:
 19778                           
 19779                           ; BSR set to: 0
 19780  0050D8  010D               	movlb	13	; () banked
 19781  0050DA  5131               	movf	49,w,b	;volatile
 19782                           
 19783                           ; Switch size 1, requested type "space"
 19784                           ; Number of cases is 2, Range of values is 254 to 255
 19785                           ; switch strategies available:
 19786                           ; Name         Instructions Cycles
 19787                           ; simple_byte            7     4 (average)
 19788                           ;	Chosen strategy is simple_byte
 19789  0050DC  0AFE               	xorlw	254	; case 254
 19790  0050DE  B4D8               	btfsc	status,2,c
 19791  0050E0  D7E4               	goto	l546
 19792  0050E2  0A01               	xorlw	1	; case 255
 19793  0050E4  A4D8               	btfss	status,2,c
 19794  0050E6  0012               	return	
 19795  0050E8  D7A9               	goto	l530
 19796  0050EA                     __end_of_USBCheckMSDRequest:
 19797                           	opt stack 0
 19798                           tblptru	equ	0xFF8
 19799                           tblptrh	equ	0xFF7
 19800                           tblptrl	equ	0xFF6
 19801                           tablat	equ	0xFF5
 19802                           prodh	equ	0xFF4
 19803                           prodl	equ	0xFF3
 19804                           intcon	equ	0xFF2
 19805                           intcon2	equ	0xFF1
 19806                           intcon3	equ	0xFF0
 19807                           indf0	equ	0xFEF
 19808                           postinc0	equ	0xFEE
 19809                           fsr0h	equ	0xFEA
 19810                           fsr0l	equ	0xFE9
 19811                           wreg	equ	0xFE8
 19812                           indf1	equ	0xFE7
 19813                           postdec1	equ	0xFE5
 19814                           plusw1	equ	0xFE3
 19815                           fsr1h	equ	0xFE2
 19816                           fsr1l	equ	0xFE1
 19817                           indf2	equ	0xFDF
 19818                           postinc2	equ	0xFDE
 19819                           postdec2	equ	0xFDD
 19820                           plusw2	equ	0xFDB
 19821                           fsr2h	equ	0xFDA
 19822                           fsr2l	equ	0xFD9
 19823                           status	equ	0xFD8
 19824                           
 19825 ;; *************** function _USBCheckHIDRequest *****************
 19826 ;; Defined at:
 19827 ;;		line 153 in file "usb_device_hid.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;		None
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;		None
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  1    wreg      void 
 19834 ;; Registers used:
 19835 ;;		wreg, status,2, status,0
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/0
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19845 ;;Total ram usage:        0 bytes
 19846 ;; Hardware stack levels used:    1
 19847 ;; This function calls:
 19848 ;;		Nothing
 19849 ;; This function is called by:
 19850 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19851 ;; This function uses a non-reentrant model
 19852 ;;
 19853                           
 19854                           	psect	text90
 19855  004498                     __ptext90:
 19856                           	opt stack 0
 19857  004498                     _USBCheckHIDRequest:
 19858                           	opt stack 28
 19859                           
 19860                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 19861                           
 19862                           ;incstack = 0
 19863  004498  010D               	movlb	13	; () banked
 19864  00449A  5130               	movf	48,w,b	;volatile
 19865  00449C  0B1F               	andlw	31
 19866  00449E  06E8               	decf	wreg,f,c
 19867  0044A0  A4D8               	btfss	status,2,c
 19868  0044A2  0012               	return	
 19869                           
 19870                           ; BSR set to: 13
 19871                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 19872                           
 19873                           ; BSR set to: 13
 19874                           
 19875                           ; BSR set to: 13
 19876  0044A4  5134               	movf	52,w,b	;volatile
 19877  0044A6  A4D8               	btfss	status,2,c
 19878  0044A8  0012               	return	
 19879                           
 19880                           ; BSR set to: 13
 19881                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 19882                           
 19883                           ; BSR set to: 13
 19884                           
 19885                           ; BSR set to: 13
 19886  0044AA  0E06               	movlw	6
 19887  0044AC  1931               	xorwf	49,w,b	;volatile
 19888  0044AE  B4D8               	btfsc	status,2,c
 19889  0044B0  D01A               	goto	l411
 19890  0044B2  D022               	goto	l414
 19891  0044B4                     
 19892                           ; BSR set to: 13
 19893                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 19894                           
 19895                           ; BSR set to: 13
 19896  0044B4  0100               	movlb	0	; () banked
 19897  0044B6  05BB               	decf	_USBActiveConfiguration& (0+255),w,b
 19898  0044B8  A4D8               	btfss	status,2,c
 19899  0044BA  D01E               	goto	l414
 19900                           
 19901                           ; BSR set to: 0
 19902                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 19903  0044BC  0EB9               	movlw	low (_configDescriptor1+18)
 19904  0044BE  6F66               	movwf	_inPipes& (0+255),b
 19905  0044C0  0E8E               	movlw	high (_configDescriptor1+18)
 19906  0044C2  6F67               	movwf	(_inPipes+1)& (0+255),b
 19907                           
 19908                           ; BSR set to: 0
 19909  0044C4  0E00               	movlw	0
 19910  0044C6  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19911  0044C8  0E09               	movlw	9
 19912  0044CA  D00B               	goto	L13
 19913  0044CC                     l9553:
 19914                           
 19915                           ; BSR set to: 0
 19916  0044CC  0EC0               	movlw	192
 19917  0044CE  6F69               	movwf	(_inPipes+3)& (0+255),b
 19918                           
 19919                           ; BSR set to: 0
 19920                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 19921  0044D0  D013               	goto	l414
 19922  0044D2                     
 19923                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 19924                           
 19925                           ; BSR set to: 0
 19926  0044D2  0E6D               	movlw	low _hid_rpt01
 19927  0044D4  0100               	movlb	0	; () banked
 19928  0044D6  6F66               	movwf	_inPipes& (0+255),b
 19929  0044D8  0E8F               	movlw	high _hid_rpt01
 19930  0044DA  6F67               	movwf	(_inPipes+1)& (0+255),b
 19931                           
 19932                           ; BSR set to: 0
 19933  0044DC  0E00               	movlw	0
 19934  0044DE  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19935  0044E0  0E1D               	movlw	29
 19936  0044E2                     L13:
 19937  0044E2  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19938  0044E4  D7F3               	goto	l9553
 19939  0044E6                     l411:
 19940                           
 19941                           ; BSR set to: 0
 19942  0044E6  010D               	movlb	13	; () banked
 19943  0044E8  5133               	movf	51,w,b	;volatile
 19944                           
 19945                           ; Switch size 1, requested type "space"
 19946                           ; Number of cases is 3, Range of values is 33 to 35
 19947                           ; switch strategies available:
 19948                           ; Name         Instructions Cycles
 19949                           ; simple_byte           10     6 (average)
 19950                           ;	Chosen strategy is simple_byte
 19951  0044EA  0A21               	xorlw	33	; case 33
 19952  0044EC  B4D8               	btfsc	status,2,c
 19953  0044EE  D7E2               	goto	l412
 19954  0044F0  0A03               	xorlw	3	; case 34
 19955  0044F2  B4D8               	btfsc	status,2,c
 19956  0044F4  D7EE               	goto	l415
 19957  0044F6  0A01               	xorlw	1	; case 35
 19958  0044F8                     l414:
 19959                           
 19960                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 19961                           
 19962                           ; BSR set to: 13
 19963                           
 19964                           ; BSR set to: 13
 19965  0044F8  010D               	movlb	13	; () banked
 19966  0044FA  3930               	swapf	48,w,b	;volatile
 19967  0044FC  32E8               	rrcf	wreg,f,c
 19968  0044FE  0B03               	andlw	3
 19969  004500  06E8               	decf	wreg,f,c
 19970  004502  A4D8               	btfss	status,2,c
 19971  004504  0012               	return	
 19972  004506  D024               	goto	l418
 19973  004508                     
 19974                           ; BSR set to: 13
 19975                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19976                           
 19977                           ; BSR set to: 13
 19978  004508  0EB9               	movlw	low _idle_rate
 19979  00450A  0100               	movlb	0	; () banked
 19980  00450C  6F66               	movwf	_inPipes& (0+255),b
 19981  00450E  0E00               	movlw	high _idle_rate
 19982  004510  6F67               	movwf	(_inPipes+1)& (0+255),b
 19983                           
 19984                           ; BSR set to: 0
 19985  004512  0E00               	movlw	0
 19986  004514  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19987  004516  0E01               	movlw	1
 19988  004518  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19989                           
 19990                           ; BSR set to: 0
 19991  00451A  0EC1               	movlw	193
 19992  00451C  6F69               	movwf	(_inPipes+3)& (0+255),b
 19993                           
 19994                           ;usb_device_hid.c: 223: break;
 19995  00451E  0012               	return	
 19996  004520                     
 19997                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 19998                           
 19999                           ; BSR set to: 0
 20000  004520  0E80               	movlw	128
 20001  004522  0100               	movlb	0	; () banked
 20002  004524  6F69               	movwf	(_inPipes+3)& (0+255),b
 20003                           
 20004                           ; BSR set to: 0
 20005                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 20006  004526  CD33 F0B9          	movff	3379,_idle_rate	;volatile
 20007                           
 20008                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 20009  00452A  0012               	return	
 20010  00452C                     
 20011                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 20012                           
 20013                           ; BSR set to: 0
 20014  00452C  0EB8               	movlw	low _active_protocol
 20015  00452E  0100               	movlb	0	; () banked
 20016  004530  6F66               	movwf	_inPipes& (0+255),b
 20017  004532  0E00               	movlw	high _active_protocol
 20018  004534  6F67               	movwf	(_inPipes+1)& (0+255),b
 20019                           
 20020                           ; BSR set to: 0
 20021  004536  0E00               	movlw	0
 20022  004538  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20023  00453A  0E01               	movlw	1
 20024  00453C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20025                           
 20026                           ; BSR set to: 0
 20027  00453E  0E81               	movlw	129
 20028  004540  6F69               	movwf	(_inPipes+3)& (0+255),b
 20029                           
 20030                           ;usb_device_hid.c: 234: break;
 20031  004542  0012               	return	
 20032  004544                     
 20033                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 20034                           
 20035                           ; BSR set to: 0
 20036  004544  0E80               	movlw	128
 20037  004546  0100               	movlb	0	; () banked
 20038  004548  6F69               	movwf	(_inPipes+3)& (0+255),b
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 20042  00454A  CD32 F0B8          	movff	3378,_active_protocol	;volatile
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;usb_device_hid.c: 239: }
 20046                           
 20047                           ;usb_device_hid.c: 238: break;
 20048  00454E  0012               	return	
 20049  004550                     l418:
 20050                           
 20051                           ; BSR set to: 0
 20052  004550  010D               	movlb	13	; () banked
 20053  004552  5131               	movf	49,w,b	;volatile
 20054                           
 20055                           ; Switch size 1, requested type "space"
 20056                           ; Number of cases is 6, Range of values is 1 to 11
 20057                           ; switch strategies available:
 20058                           ; Name         Instructions Cycles
 20059                           ; simple_byte           19    10 (average)
 20060                           ;	Chosen strategy is simple_byte
 20061  004554  0A01               	xorlw	1	; case 1
 20062  004556  B4D8               	btfsc	status,2,c
 20063  004558  0012               	return	
 20064  00455A  0A03               	xorlw	3	; case 2
 20065  00455C  B4D8               	btfsc	status,2,c
 20066  00455E  D7D4               	goto	l422
 20067  004560  0A01               	xorlw	1	; case 3
 20068  004562  B4D8               	btfsc	status,2,c
 20069  004564  D7E3               	goto	l424
 20070  004566  0A0A               	xorlw	10	; case 9
 20071  004568  B4D8               	btfsc	status,2,c
 20072  00456A  0012               	return	
 20073  00456C  0A03               	xorlw	3	; case 10
 20074  00456E  B4D8               	btfsc	status,2,c
 20075  004570  D7D7               	goto	l423
 20076  004572  0A01               	xorlw	1	; case 11
 20077  004574  A4D8               	btfss	status,2,c
 20078  004576  0012               	return	
 20079  004578  D7E5               	goto	l425
 20080  00457A                     __end_of_USBCheckHIDRequest:
 20081                           	opt stack 0
 20082                           tblptru	equ	0xFF8
 20083                           tblptrh	equ	0xFF7
 20084                           tblptrl	equ	0xFF6
 20085                           tablat	equ	0xFF5
 20086                           prodh	equ	0xFF4
 20087                           prodl	equ	0xFF3
 20088                           intcon	equ	0xFF2
 20089                           intcon2	equ	0xFF1
 20090                           intcon3	equ	0xFF0
 20091                           indf0	equ	0xFEF
 20092                           postinc0	equ	0xFEE
 20093                           fsr0h	equ	0xFEA
 20094                           fsr0l	equ	0xFE9
 20095                           wreg	equ	0xFE8
 20096                           indf1	equ	0xFE7
 20097                           postdec1	equ	0xFE5
 20098                           plusw1	equ	0xFE3
 20099                           fsr1h	equ	0xFE2
 20100                           fsr1l	equ	0xFE1
 20101                           indf2	equ	0xFDF
 20102                           postinc2	equ	0xFDE
 20103                           postdec2	equ	0xFDD
 20104                           plusw2	equ	0xFDB
 20105                           fsr2h	equ	0xFDA
 20106                           fsr2l	equ	0xFD9
 20107                           status	equ	0xFD8
 20108                           
 20109 ;; *************** function _SYSTEM_Initialize *****************
 20110 ;; Defined at:
 20111 ;;		line 80 in file "system.c"
 20112 ;; Parameters:    Size  Location     Type
 20113 ;;  state           1    wreg     enum E6623
 20114 ;; Auto vars:     Size  Location     Type
 20115 ;;  state           1    4[COMRAM] enum E6623
 20116 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 20117 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 20118 ;; Return value:  Size  Location     Type
 20119 ;;                  1    wreg      void 
 20120 ;; Registers used:
 20121 ;;		wreg, status,2, status,0
 20122 ;; Tracked objects:
 20123 ;;		On entry : 0/0
 20124 ;;		On exit  : 0/0
 20125 ;;		Unchanged: 0/0
 20126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20128 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20130 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20131 ;;Total ram usage:        5 bytes
 20132 ;; Hardware stack levels used:    1
 20133 ;; This function calls:
 20134 ;;		Nothing
 20135 ;; This function is called by:
 20136 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20137 ;;		_main
 20138 ;; This function uses a non-reentrant model
 20139 ;;
 20140                           
 20141                           	psect	text91
 20142  006F58                     __ptext91:
 20143                           	opt stack 0
 20144  006F58                     _SYSTEM_Initialize:
 20145                           	opt stack 28
 20146                           
 20147                           ;incstack = 0
 20148                           ;SYSTEM_Initialize@state stored from wreg
 20149  006F58  6E05               	movwf	SYSTEM_Initialize@state,c
 20150                           
 20151                           ;system.c: 82: switch(state)
 20152  006F5A  D01D               	goto	l890
 20153  006F5C                     
 20154                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 20155  006F5C  0E02               	movlw	2
 20156  006F5E  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 20157  006F60  0E58               	movlw	88
 20158  006F62  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 20159                           
 20160                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 20161  006F64  8C9B               	bsf	3995,6,c	;volatile
 20162  006F66                     l9739:
 20163  006F66  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 20164  006F68  A0D8               	btfss	status,0,c
 20165  006F6A  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 20166  006F6C  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 20167  006F6E  E1FB               	bnz	l9739
 20168  006F70  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 20169  006F72  B4D8               	btfsc	status,2,c
 20170  006F74  0012               	return	
 20171  006F76  D7F7               	goto	l893
 20172  006F78                     
 20173                           ;system.c: 119: OSCCON = 0x70;
 20174  006F78  0E70               	movlw	112
 20175  006F7A  6ED3               	movwf	4051,c	;volatile
 20176                           
 20177                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 20178  006F7C  0E03               	movlw	3
 20179  006F7E  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2849+1,c
 20180  006F80  0E20               	movlw	32
 20181  006F82  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2849,c
 20182  006F84                     l9743:
 20183  006F84  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2849,f,c
 20184  006F86  A0D8               	btfss	status,0,c
 20185  006F88  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2849+1,f,c
 20186  006F8A  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2849,w,c
 20187  006F8C  E1FB               	bnz	l9743
 20188  006F8E  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2849+1,w,c
 20189  006F90  B4D8               	btfsc	status,2,c
 20190  006F92  0012               	return	
 20191  006F94  D7F7               	goto	l899
 20192  006F96                     l890:
 20193  006F96  5005               	movf	SYSTEM_Initialize@state,w,c
 20194                           
 20195                           ; Switch size 1, requested type "space"
 20196                           ; Number of cases is 3, Range of values is 0 to 2
 20197                           ; switch strategies available:
 20198                           ; Name         Instructions Cycles
 20199                           ; simple_byte           10     6 (average)
 20200                           ;	Chosen strategy is simple_byte
 20201  006F98  0A00               	xorlw	0	; case 0
 20202  006F9A  B4D8               	btfsc	status,2,c
 20203  006F9C  D7DF               	goto	l891
 20204  006F9E  0A01               	xorlw	1	; case 1
 20205  006FA0  B4D8               	btfsc	status,2,c
 20206  006FA2  0012               	return	
 20207  006FA4  0A03               	xorlw	3	; case 2
 20208  006FA6  A4D8               	btfss	status,2,c
 20209  006FA8  0012               	return	
 20210  006FAA  D7E6               	goto	l897
 20211  006FAC                     __end_of_SYSTEM_Initialize:
 20212                           	opt stack 0
 20213                           tblptru	equ	0xFF8
 20214                           tblptrh	equ	0xFF7
 20215                           tblptrl	equ	0xFF6
 20216                           tablat	equ	0xFF5
 20217                           prodh	equ	0xFF4
 20218                           prodl	equ	0xFF3
 20219                           intcon	equ	0xFF2
 20220                           intcon2	equ	0xFF1
 20221                           intcon3	equ	0xFF0
 20222                           indf0	equ	0xFEF
 20223                           postinc0	equ	0xFEE
 20224                           fsr0h	equ	0xFEA
 20225                           fsr0l	equ	0xFE9
 20226                           wreg	equ	0xFE8
 20227                           indf1	equ	0xFE7
 20228                           postdec1	equ	0xFE5
 20229                           plusw1	equ	0xFE3
 20230                           fsr1h	equ	0xFE2
 20231                           fsr1l	equ	0xFE1
 20232                           indf2	equ	0xFDF
 20233                           postinc2	equ	0xFDE
 20234                           postdec2	equ	0xFDD
 20235                           plusw2	equ	0xFDB
 20236                           fsr2h	equ	0xFDA
 20237                           fsr2l	equ	0xFD9
 20238                           status	equ	0xFD8
 20239                           
 20240 ;; *************** function _MSDTransferTerminated *****************
 20241 ;; Defined at:
 20242 ;;		line 1674 in file "usb_device_msd.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;  handle          2   11[COMRAM] PTR void 
 20245 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20246 ;;		 -> BDT(48), 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;		None
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  1    wreg      void 
 20251 ;; Registers used:
 20252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20262 ;;Total ram usage:        4 bytes
 20263 ;; Hardware stack levels used:    1
 20264 ;; Hardware stack levels required when called:    1
 20265 ;; This function calls:
 20266 ;;		_USBStallEndpoint
 20267 ;;		_USBTransferOnePacket
 20268 ;; This function is called by:
 20269 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20270 ;; This function uses a non-reentrant model
 20271 ;;
 20272                           
 20273                           	psect	text92
 20274  006E56                     __ptext92:
 20275                           	opt stack 0
 20276  006E56                     _MSDTransferTerminated:
 20277                           	opt stack 27
 20278                           
 20279                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 20280                           
 20281                           ;incstack = 0
 20282  006E56  0100               	movlb	0	; () banked
 20283  006E58  51A0               	movf	_MSDCBWValid& (0+255),w,b
 20284  006E5A  A4D8               	btfss	status,2,c
 20285  006E5C  D00B               	goto	l764
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 20289  006E5E  0E01               	movlw	1
 20290  006E60  6E01               	movwf	USBStallEndpoint@dir,c
 20291  006E62  0E02               	movlw	2
 20292  006E64  ECD7  F01E         	call	_USBStallEndpoint
 20293                           
 20294                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 20295  006E68  0E00               	movlw	0
 20296  006E6A  6E01               	movwf	USBStallEndpoint@dir,c
 20297  006E6C  0E02               	movlw	2
 20298  006E6E  ECD7  F01E         	call	_USBStallEndpoint
 20299                           
 20300                           ;usb_device_msd.c: 1681: }
 20301  006E72  0012               	return	
 20302  006E74                     l764:
 20303  006E74  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 20304  006E78  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 20305  006E7C  500E               	movf	_MSDTransferTerminated$2407,w,c
 20306  006E7E  180C               	xorwf	MSDTransferTerminated@handle,w,c
 20307  006E80  E114               	bnz	l767
 20308  006E82  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 20309  006E84  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 20310  006E86  A4D8               	btfss	status,2,c
 20311  006E88  0012               	return	
 20312                           
 20313                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 20314  006E8A  0E00               	movlw	0
 20315  006E8C  6E01               	movwf	USBTransferOnePacket@dir,c
 20316  006E8E  0E40               	movlw	64
 20317  006E90  6E02               	movwf	USBTransferOnePacket@data,c
 20318  006E92  0E0D               	movlw	13
 20319  006E94  6E03               	movwf	USBTransferOnePacket@data+1,c
 20320  006E96  0E40               	movlw	64
 20321  006E98  6E04               	movwf	USBTransferOnePacket@len,c
 20322  006E9A  0E02               	movlw	2
 20323  006E9C  EC61  F020         	call	_USBTransferOnePacket
 20324  006EA0  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20325  006EA4  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20326  006EA8  0012               	return	
 20327  006EAA                     l767:
 20328  006EAA  0012               	return		;funcret
 20329  006EAC                     __end_of_MSDTransferTerminated:
 20330                           	opt stack 0
 20331                           tblptru	equ	0xFF8
 20332                           tblptrh	equ	0xFF7
 20333                           tblptrl	equ	0xFF6
 20334                           tablat	equ	0xFF5
 20335                           prodh	equ	0xFF4
 20336                           prodl	equ	0xFF3
 20337                           intcon	equ	0xFF2
 20338                           intcon2	equ	0xFF1
 20339                           intcon3	equ	0xFF0
 20340                           indf0	equ	0xFEF
 20341                           postinc0	equ	0xFEE
 20342                           fsr0h	equ	0xFEA
 20343                           fsr0l	equ	0xFE9
 20344                           wreg	equ	0xFE8
 20345                           indf1	equ	0xFE7
 20346                           postdec1	equ	0xFE5
 20347                           plusw1	equ	0xFE3
 20348                           fsr1h	equ	0xFE2
 20349                           fsr1l	equ	0xFE1
 20350                           indf2	equ	0xFDF
 20351                           postinc2	equ	0xFDE
 20352                           postdec2	equ	0xFDD
 20353                           plusw2	equ	0xFDB
 20354                           fsr2h	equ	0xFDA
 20355                           fsr2l	equ	0xFD9
 20356                           status	equ	0xFD8
 20357                           
 20358 ;; *************** function _APP_DeviceMSDInitialize *****************
 20359 ;; Defined at:
 20360 ;;		line 84 in file "app_device_msd.c"
 20361 ;; Parameters:    Size  Location     Type
 20362 ;;		None
 20363 ;; Auto vars:     Size  Location     Type
 20364 ;;		None
 20365 ;; Return value:  Size  Location     Type
 20366 ;;                  1    wreg      void 
 20367 ;; Registers used:
 20368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20369 ;; Tracked objects:
 20370 ;;		On entry : 0/0
 20371 ;;		On exit  : 0/0
 20372 ;;		Unchanged: 0/0
 20373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20378 ;;Total ram usage:        0 bytes
 20379 ;; Hardware stack levels used:    1
 20380 ;; Hardware stack levels required when called:    2
 20381 ;; This function calls:
 20382 ;;		_USBEnableEndpoint
 20383 ;;		_USBMSDInit
 20384 ;; This function is called by:
 20385 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389                           	psect	text93
 20390  007AE6                     __ptext93:
 20391                           	opt stack 0
 20392  007AE6                     _APP_DeviceMSDInitialize:
 20393                           	opt stack 26
 20394                           
 20395                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 20396                           
 20397                           ;incstack = 0
 20398  007AE6  0E1E               	movlw	30
 20399  007AE8  6E09               	movwf	USBEnableEndpoint@options,c
 20400  007AEA  0E02               	movlw	2
 20401  007AEC  ECEE  F039         	call	_USBEnableEndpoint
 20402                           
 20403                           ;app_device_msd.c: 93: USBMSDInit();
 20404  007AF0  EC5B  F01F         	call	_USBMSDInit	;wreg free
 20405  007AF4  0012               	return		;funcret
 20406  007AF6                     __end_of_APP_DeviceMSDInitialize:
 20407                           	opt stack 0
 20408                           tblptru	equ	0xFF8
 20409                           tblptrh	equ	0xFF7
 20410                           tblptrl	equ	0xFF6
 20411                           tablat	equ	0xFF5
 20412                           prodh	equ	0xFF4
 20413                           prodl	equ	0xFF3
 20414                           intcon	equ	0xFF2
 20415                           intcon2	equ	0xFF1
 20416                           intcon3	equ	0xFF0
 20417                           indf0	equ	0xFEF
 20418                           postinc0	equ	0xFEE
 20419                           fsr0h	equ	0xFEA
 20420                           fsr0l	equ	0xFE9
 20421                           wreg	equ	0xFE8
 20422                           indf1	equ	0xFE7
 20423                           postdec1	equ	0xFE5
 20424                           plusw1	equ	0xFE3
 20425                           fsr1h	equ	0xFE2
 20426                           fsr1l	equ	0xFE1
 20427                           indf2	equ	0xFDF
 20428                           postinc2	equ	0xFDE
 20429                           postdec2	equ	0xFDD
 20430                           plusw2	equ	0xFDB
 20431                           fsr2h	equ	0xFDA
 20432                           fsr2l	equ	0xFD9
 20433                           status	equ	0xFD8
 20434                           
 20435 ;; *************** function _USBMSDInit *****************
 20436 ;; Defined at:
 20437 ;;		line 142 in file "usb_device_msd.c"
 20438 ;; Parameters:    Size  Location     Type
 20439 ;;		None
 20440 ;; Auto vars:     Size  Location     Type
 20441 ;;		None
 20442 ;; Return value:  Size  Location     Type
 20443 ;;                  1    wreg      void 
 20444 ;; Registers used:
 20445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20446 ;; Tracked objects:
 20447 ;;		On entry : 0/0
 20448 ;;		On exit  : 0/0
 20449 ;;		Unchanged: 0/0
 20450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20455 ;;Total ram usage:        3 bytes
 20456 ;; Hardware stack levels used:    1
 20457 ;; Hardware stack levels required when called:    1
 20458 ;; This function calls:
 20459 ;;		_ExternalFlash_MediaDetect
 20460 ;;		_ExternalFlash_MediaInitialize
 20461 ;;		_ResetSenseData
 20462 ;;		_USBTransferOnePacket
 20463 ;; This function is called by:
 20464 ;;		_APP_DeviceMSDInitialize
 20465 ;; This function uses a non-reentrant model
 20466 ;;
 20467                           
 20468                           	psect	text94
 20469  003EB6                     __ptext94:
 20470                           	opt stack 0
 20471  003EB6                     _USBMSDInit:
 20472                           	opt stack 26
 20473                           
 20474                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 20475                           
 20476                           ;incstack = 0
 20477  003EB6  0E00               	movlw	0
 20478  003EB8  6E01               	movwf	USBTransferOnePacket@dir,c
 20479  003EBA  0E40               	movlw	64
 20480  003EBC  6E02               	movwf	USBTransferOnePacket@data,c
 20481  003EBE  0E0D               	movlw	13
 20482  003EC0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20483  003EC2  0E40               	movlw	64
 20484  003EC4  6E04               	movwf	USBTransferOnePacket@len,c
 20485  003EC6  0E02               	movlw	2
 20486  003EC8  EC61  F020         	call	_USBTransferOnePacket
 20487  003ECC  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20488  003ED0  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20489  003ED4  C070  F08E         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 20490  003ED8  C071  F08F         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 20491                           
 20492                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 20493  003EDC  0E00               	movlw	0
 20494  003EDE  0100               	movlb	0	; () banked
 20495  003EE0  6FA8               	movwf	_MSD_State& (0+255),b
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 20499  003EE2  69A7               	setf	_MSDCommandState& (0+255),b
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 20503  003EE4  0E00               	movlw	0
 20504  003EE6  6FA6               	movwf	_MSDReadState& (0+255),b
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 20508  003EE8  0E00               	movlw	0
 20509  003EEA  6FA5               	movwf	_MSDWriteState& (0+255),b
 20510                           
 20511                           ; BSR set to: 0
 20512                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 20513  003EEC  0E00               	movlw	0
 20514  003EEE  6FA1               	movwf	_MSDHostNoData& (0+255),b
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 20518  003EF0  0E00               	movlw	0
 20519  003EF2  0101               	movlb	1	; () banked
 20520  003EF4  6F50               	movwf	_gblNumBLKS& (0+255),b
 20521  003EF6  0E00               	movlw	0
 20522  003EF8  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 20523  003EFA  0E00               	movlw	0
 20524  003EFC  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 20525  003EFE  0E00               	movlw	0
 20526  003F00  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 20527                           
 20528                           ; BSR set to: 1
 20529                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 20530  003F02  0E00               	movlw	0
 20531  003F04  6F4C               	movwf	_gblBLKLen& (0+255),b
 20532  003F06  0E00               	movlw	0
 20533  003F08  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 20534  003F0A  0E00               	movlw	0
 20535  003F0C  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 20536  003F0E  0E00               	movlw	0
 20537  003F10  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 20538                           
 20539                           ; BSR set to: 1
 20540                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 20541  003F12  0E01               	movlw	1
 20542  003F14  0100               	movlb	0	; () banked
 20543  003F16  6FA0               	movwf	_MSDCBWValid& (0+255),b
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 20547  003F18  0E00               	movlw	0
 20548  003F1A  0101               	movlb	1	; () banked
 20549  003F1C  6F6B               	movwf	(_gblMediaPresent+1)& (0+255),b
 20550  003F1E  0E00               	movlw	0
 20551  003F20  6F6A               	movwf	_gblMediaPresent& (0+255),b
 20552                           
 20553                           ; BSR set to: 1
 20554                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 20555  003F22  0E00               	movlw	0
 20556  003F24  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 20557  003F26  D046               	goto	l518
 20558  003F28                     
 20559                           ; BSR set to: 1
 20560                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 20561                           
 20562                           ; BSR set to: 1
 20563  003F28  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20564  003F2A  0D01               	mullw	1
 20565  003F2C  0EA2               	movlw	low _SoftDetach
 20566  003F2E  24F3               	addwf	prodl,w,c
 20567  003F30  6ED9               	movwf	fsr2l,c
 20568  003F32  0E00               	movlw	high _SoftDetach
 20569  003F34  20F4               	addwfc	prodh,w,c
 20570  003F36  6EDA               	movwf	fsr2h,c
 20571  003F38  0E00               	movlw	0
 20572  003F3A  6EDF               	movwf	indf2,c
 20573                           
 20574                           ; BSR set to: 1
 20575                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 20576  003F3C  C1E8  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 20577  003F40  C1E9  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 20578  003F44  D801               	call	u6198
 20579  003F46  D009               	goto	u6199
 20580  003F48                     u6198:
 20581  003F48  0005               	push	
 20582  003F4A  6EFA               	movwf	pclath,c
 20583  003F4C  51E0               	movf	(_LUN+6)& (0+255),w,b
 20584  003F4E  6EFD               	movwf	tosl,c
 20585  003F50  51E1               	movf	(_LUN+7)& (0+255),w,b
 20586  003F52  6EFE               	movwf	tosh,c
 20587  003F54  6AFF               	clrf	tosu,c
 20588  003F56  50FA               	movf	pclath,w,c
 20589  003F58  0012               	return		;indir
 20590  003F5A                     u6199:
 20591  003F5A  0900               	iorlw	0
 20592  003F5C  B4D8               	btfsc	status,2,c
 20593  003F5E  D026               	goto	l521
 20594                           
 20595                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 20596  003F60  C1E8  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 20597  003F64  C1E9  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 20598  003F68  D801               	call	u6218
 20599  003F6A  D00A               	goto	u6219
 20600  003F6C                     u6218:
 20601  003F6C  0005               	push	
 20602  003F6E  6EFA               	movwf	pclath,c
 20603  003F70  0101               	movlb	1	; () banked
 20604  003F72  51DA               	movf	_LUN& (0+255),w,b
 20605  003F74  6EFD               	movwf	tosl,c
 20606  003F76  51DB               	movf	(_LUN+1)& (0+255),w,b
 20607  003F78  6EFE               	movwf	tosh,c
 20608  003F7A  6AFF               	clrf	tosu,c
 20609  003F7C  50FA               	movf	pclath,w,c
 20610  003F7E  0012               	return		;indir
 20611  003F80                     u6219:
 20612  003F80  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 20613  003F82  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 20614  003F84  B4D8               	btfsc	status,2,c
 20615  003F86  D012               	goto	l521
 20616                           
 20617                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 20618  003F88  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 20619  003F8C  0E01               	movlw	1
 20620  003F8E  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 20621  003F90  0E00               	movlw	0
 20622  003F92  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 20623  003F94  2A0C               	incf	??_USBMSDInit,f,c
 20624  003F96  D003               	goto	u6234
 20625  003F98                     u6235:
 20626  003F98  90D8               	bcf	status,0,c
 20627  003F9A  360D               	rlcf	??_USBMSDInit+1,f,c
 20628  003F9C  360E               	rlcf	??_USBMSDInit+2,f,c
 20629  003F9E                     u6234:
 20630  003F9E  2E0C               	decfsz	??_USBMSDInit,f,c
 20631  003FA0  D7FB               	goto	u6235
 20632  003FA2  500D               	movf	??_USBMSDInit+1,w,c
 20633  003FA4  0101               	movlb	1	; () banked
 20634  003FA6  136A               	iorwf	_gblMediaPresent& (0+255),f,b
 20635  003FA8  500E               	movf	??_USBMSDInit+2,w,c
 20636  003FAA  136B               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 20637  003FAC                     l521:
 20638                           
 20639                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 20640                           
 20641                           ; BSR set to: 1
 20642                           
 20643                           ; BSR set to: 1
 20644  003FAC  ECDD  F034         	call	_ResetSenseData	;wreg free
 20645  003FB0  0101               	movlb	1	; () banked
 20646  003FB2  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 20647  003FB4                     l518:
 20648                           
 20649                           ; BSR set to: 1
 20650                           
 20651                           ; BSR set to: 1
 20652  003FB4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20653  003FB6  A4D8               	btfss	status,2,c
 20654  003FB8  0012               	return	
 20655  003FBA  D7B6               	goto	l519
 20656  003FBC                     __end_of_USBMSDInit:
 20657                           	opt stack 0
 20658                           tosu	equ	0xFFF
 20659                           tosh	equ	0xFFE
 20660                           tosl	equ	0xFFD
 20661                           pclath	equ	0xFFA
 20662                           tblptru	equ	0xFF8
 20663                           tblptrh	equ	0xFF7
 20664                           tblptrl	equ	0xFF6
 20665                           tablat	equ	0xFF5
 20666                           prodh	equ	0xFF4
 20667                           prodl	equ	0xFF3
 20668                           intcon	equ	0xFF2
 20669                           intcon2	equ	0xFF1
 20670                           intcon3	equ	0xFF0
 20671                           indf0	equ	0xFEF
 20672                           postinc0	equ	0xFEE
 20673                           fsr0h	equ	0xFEA
 20674                           fsr0l	equ	0xFE9
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postdec1	equ	0xFE5
 20678                           plusw1	equ	0xFE3
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           indf2	equ	0xFDF
 20682                           postinc2	equ	0xFDE
 20683                           postdec2	equ	0xFDD
 20684                           plusw2	equ	0xFDB
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 20690 ;; Defined at:
 20691 ;;		line 47 in file "app_device_custom_hid.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;		None
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;		None
 20696 ;; Return value:  Size  Location     Type
 20697 ;;                  1    wreg      void 
 20698 ;; Registers used:
 20699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20700 ;; Tracked objects:
 20701 ;;		On entry : 0/0
 20702 ;;		On exit  : 0/0
 20703 ;;		Unchanged: 0/0
 20704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20709 ;;Total ram usage:        0 bytes
 20710 ;; Hardware stack levels used:    1
 20711 ;; Hardware stack levels required when called:    2
 20712 ;; This function calls:
 20713 ;;		_USBEnableEndpoint
 20714 ;;		_USBTransferOnePacket
 20715 ;; This function is called by:
 20716 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20717 ;; This function uses a non-reentrant model
 20718 ;;
 20719                           
 20720                           	psect	text95
 20721  0075CC                     __ptext95:
 20722                           	opt stack 0
 20723  0075CC                     _APP_DeviceCustomHIDInitialize:
 20724                           	opt stack 26
 20725                           
 20726                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 20727                           
 20728                           ; BSR set to: 1
 20729                           ;incstack = 0
 20730  0075CC  0E00               	movlw	0
 20731  0075CE  0100               	movlb	0	; () banked
 20732  0075D0  6F88               	movwf	_USBInHandle& (0+255),b
 20733  0075D2  0E00               	movlw	0
 20734  0075D4  6F89               	movwf	(_USBInHandle+1)& (0+255),b
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 20738  0075D6  0E1E               	movlw	30
 20739  0075D8  6E09               	movwf	USBEnableEndpoint@options,c
 20740  0075DA  0E01               	movlw	1
 20741  0075DC  ECEE  F039         	call	_USBEnableEndpoint
 20742                           
 20743                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 20744  0075E0  0E00               	movlw	0
 20745  0075E2  6E01               	movwf	USBTransferOnePacket@dir,c
 20746  0075E4  0E40               	movlw	low _ReceivedDataBuffer
 20747  0075E6  6E02               	movwf	USBTransferOnePacket@data,c
 20748  0075E8  0E02               	movlw	high _ReceivedDataBuffer
 20749  0075EA  6E03               	movwf	USBTransferOnePacket@data+1,c
 20750  0075EC  0E40               	movlw	64
 20751  0075EE  6E04               	movwf	USBTransferOnePacket@len,c
 20752  0075F0  0E01               	movlw	1
 20753  0075F2  EC61  F020         	call	_USBTransferOnePacket
 20754  0075F6  C001  F08A         	movff	?_USBTransferOnePacket,_USBOutHandle
 20755  0075FA  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 20756  0075FE  0012               	return		;funcret
 20757  007600                     __end_of_APP_DeviceCustomHIDInitialize:
 20758                           	opt stack 0
 20759                           tosu	equ	0xFFF
 20760                           tosh	equ	0xFFE
 20761                           tosl	equ	0xFFD
 20762                           pclath	equ	0xFFA
 20763                           tblptru	equ	0xFF8
 20764                           tblptrh	equ	0xFF7
 20765                           tblptrl	equ	0xFF6
 20766                           tablat	equ	0xFF5
 20767                           prodh	equ	0xFF4
 20768                           prodl	equ	0xFF3
 20769                           intcon	equ	0xFF2
 20770                           intcon2	equ	0xFF1
 20771                           intcon3	equ	0xFF0
 20772                           indf0	equ	0xFEF
 20773                           postinc0	equ	0xFEE
 20774                           fsr0h	equ	0xFEA
 20775                           fsr0l	equ	0xFE9
 20776                           wreg	equ	0xFE8
 20777                           indf1	equ	0xFE7
 20778                           postdec1	equ	0xFE5
 20779                           plusw1	equ	0xFE3
 20780                           fsr1h	equ	0xFE2
 20781                           fsr1l	equ	0xFE1
 20782                           indf2	equ	0xFDF
 20783                           postinc2	equ	0xFDE
 20784                           postdec2	equ	0xFDD
 20785                           plusw2	equ	0xFDB
 20786                           fsr2h	equ	0xFDA
 20787                           fsr2l	equ	0xFD9
 20788                           status	equ	0xFD8
 20789                           
 20790 ;; *************** function _USBEnableEndpoint *****************
 20791 ;; Defined at:
 20792 ;;		line 878 in file "usb_device.c"
 20793 ;; Parameters:    Size  Location     Type
 20794 ;;  ep              1    wreg     unsigned char 
 20795 ;;  options         1    8[COMRAM] unsigned char 
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;  ep              1   11[COMRAM] unsigned char 
 20798 ;;  p               2    9[COMRAM] PTR unsigned char 
 20799 ;;		 -> UEP0(1), 
 20800 ;; Return value:  Size  Location     Type
 20801 ;;                  1    wreg      void 
 20802 ;; Registers used:
 20803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20804 ;; Tracked objects:
 20805 ;;		On entry : 0/0
 20806 ;;		On exit  : 0/0
 20807 ;;		Unchanged: 0/0
 20808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20813 ;;Total ram usage:        4 bytes
 20814 ;; Hardware stack levels used:    1
 20815 ;; Hardware stack levels required when called:    1
 20816 ;; This function calls:
 20817 ;;		_USBConfigureEndpoint
 20818 ;; This function is called by:
 20819 ;;		_APP_DeviceCustomHIDInitialize
 20820 ;;		_APP_DeviceMSDInitialize
 20821 ;; This function uses a non-reentrant model
 20822 ;;
 20823                           
 20824                           	psect	text96
 20825  0073DC                     __ptext96:
 20826                           	opt stack 0
 20827  0073DC                     _USBEnableEndpoint:
 20828                           	opt stack 26
 20829                           
 20830                           ;incstack = 0
 20831                           ;USBEnableEndpoint@ep stored from wreg
 20832  0073DC  6E0C               	movwf	USBEnableEndpoint@ep,c
 20833                           
 20834                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 20835  0073DE  A409               	btfss	USBEnableEndpoint@options,2,c
 20836  0073E0  D005               	goto	l178
 20837                           
 20838                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 20839  0073E2  0E00               	movlw	0
 20840  0073E4  6E01               	movwf	USBConfigureEndpoint@direction,c
 20841  0073E6  500C               	movf	USBEnableEndpoint@ep,w,c
 20842  0073E8  EC55  F02D         	call	_USBConfigureEndpoint
 20843  0073EC                     l178:
 20844                           
 20845                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 20846  0073EC  A209               	btfss	USBEnableEndpoint@options,1,c
 20847  0073EE  D005               	goto	l179
 20848                           
 20849                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 20850  0073F0  0E01               	movlw	1
 20851  0073F2  6E01               	movwf	USBConfigureEndpoint@direction,c
 20852  0073F4  500C               	movf	USBEnableEndpoint@ep,w,c
 20853  0073F6  EC55  F02D         	call	_USBConfigureEndpoint
 20854  0073FA                     l179:
 20855                           
 20856                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 20857  0073FA  500C               	movf	USBEnableEndpoint@ep,w,c
 20858  0073FC  0D01               	mullw	1
 20859  0073FE  0E26               	movlw	38
 20860  007400  24F3               	addwf	prodl,w,c
 20861  007402  6E0A               	movwf	USBEnableEndpoint@p,c
 20862  007404  0E0F               	movlw	15
 20863  007406  20F4               	addwfc	prodh,w,c
 20864  007408  6E0B               	movwf	USBEnableEndpoint@p+1,c
 20865                           
 20866                           ;usb_device.c: 901: *p = options;
 20867  00740A  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 20868  00740E  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 20869  007412  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 20870  007416  0012               	return		;funcret
 20871  007418                     __end_of_USBEnableEndpoint:
 20872                           	opt stack 0
 20873                           tosu	equ	0xFFF
 20874                           tosh	equ	0xFFE
 20875                           tosl	equ	0xFFD
 20876                           pclath	equ	0xFFA
 20877                           tblptru	equ	0xFF8
 20878                           tblptrh	equ	0xFF7
 20879                           tblptrl	equ	0xFF6
 20880                           tablat	equ	0xFF5
 20881                           prodh	equ	0xFF4
 20882                           prodl	equ	0xFF3
 20883                           intcon	equ	0xFF2
 20884                           intcon2	equ	0xFF1
 20885                           intcon3	equ	0xFF0
 20886                           indf0	equ	0xFEF
 20887                           postinc0	equ	0xFEE
 20888                           fsr0h	equ	0xFEA
 20889                           fsr0l	equ	0xFE9
 20890                           wreg	equ	0xFE8
 20891                           indf1	equ	0xFE7
 20892                           postdec1	equ	0xFE5
 20893                           plusw1	equ	0xFE3
 20894                           fsr1h	equ	0xFE2
 20895                           fsr1l	equ	0xFE1
 20896                           indf2	equ	0xFDF
 20897                           postinc2	equ	0xFDE
 20898                           postdec2	equ	0xFDD
 20899                           plusw2	equ	0xFDB
 20900                           fsr2h	equ	0xFDA
 20901                           fsr2l	equ	0xFD9
 20902                           status	equ	0xFD8
 20903                           
 20904 ;; *************** function _USBConfigureEndpoint *****************
 20905 ;; Defined at:
 20906 ;;		line 1545 in file "usb_device.c"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;  EPNum           1    wreg     unsigned char 
 20909 ;;  direction       1    0[COMRAM] unsigned char 
 20910 ;; Auto vars:     Size  Location     Type
 20911 ;;  EPNum           1    5[COMRAM] unsigned char 
 20912 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 20913 ;;		 -> BDT(48), 
 20914 ;; Return value:  Size  Location     Type
 20915 ;;                  1    wreg      void 
 20916 ;; Registers used:
 20917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20923 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20924 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20926 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20927 ;;Total ram usage:        8 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; This function calls:
 20930 ;;		Nothing
 20931 ;; This function is called by:
 20932 ;;		_USBEnableEndpoint
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           	psect	text97
 20937  005AAA                     __ptext97:
 20938                           	opt stack 0
 20939  005AAA                     _USBConfigureEndpoint:
 20940                           	opt stack 26
 20941                           
 20942                           ;incstack = 0
 20943                           ;USBConfigureEndpoint@EPNum stored from wreg
 20944  005AAA  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 20945                           
 20946                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 20947  005AAC  0E00               	movlw	0
 20948  005AAE  6E07               	movwf	USBConfigureEndpoint@handle,c
 20949  005AB0  0E0D               	movlw	13
 20950  005AB2  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 20951                           
 20952                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 20953  005AB4  5001               	movf	USBConfigureEndpoint@direction,w,c
 20954  005AB6  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 20955  005AB8  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 20956  005ABA  90D8               	bcf	status,0,c
 20957  005ABC  3602               	rlcf	??_USBConfigureEndpoint,f,c
 20958  005ABE  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 20959  005AC0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20960  005AC2  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 20961  005AC4  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 20962  005AC6  90D8               	bcf	status,0,c
 20963  005AC8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20964  005ACA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20965  005ACC  90D8               	bcf	status,0,c
 20966  005ACE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20967  005AD0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20968  005AD2  5002               	movf	??_USBConfigureEndpoint,w,c
 20969  005AD4  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 20970  005AD6  5003               	movf	??_USBConfigureEndpoint+1,w,c
 20971  005AD8  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 20972  005ADA  90D8               	bcf	status,0,c
 20973  005ADC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20974  005ADE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20975  005AE0  90D8               	bcf	status,0,c
 20976  005AE2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20977  005AE4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20978  005AE6  5004               	movf	??_USBConfigureEndpoint+2,w,c
 20979  005AE8  2607               	addwf	USBConfigureEndpoint@handle,f,c
 20980  005AEA  5005               	movf	??_USBConfigureEndpoint+3,w,c
 20981  005AEC  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 20982                           
 20983                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 20984  005AEE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20985  005AF2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20986  005AF6  9EDF               	bcf	indf2,7,c
 20987                           
 20988                           ;usb_device.c: 1559: if(direction == 0)
 20989  005AF8  5001               	movf	USBConfigureEndpoint@direction,w,c
 20990  005AFA  A4D8               	btfss	status,2,c
 20991  005AFC  D007               	goto	l214
 20992                           
 20993                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 20994  005AFE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20995  005B00  0D02               	mullw	2
 20996  005B02  0E72               	movlw	low _pBDTEntryOut
 20997  005B04  24F3               	addwf	prodl,w,c
 20998  005B06  6ED9               	movwf	fsr2l,c
 20999  005B08  0E00               	movlw	high _pBDTEntryOut
 21000  005B0A  D006               	goto	L14
 21001  005B0C                     l214:
 21002                           
 21003                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 21004  005B0C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21005  005B0E  0D02               	mullw	2
 21006  005B10  0E6C               	movlw	low _pBDTEntryIn
 21007  005B12  24F3               	addwf	prodl,w,c
 21008  005B14  6ED9               	movwf	fsr2l,c
 21009  005B16  0E00               	movlw	high _pBDTEntryIn
 21010  005B18                     L14:
 21011  005B18  20F4               	addwfc	prodh,w,c
 21012  005B1A  6EDA               	movwf	fsr2h,c
 21013  005B1C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 21014  005B20  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 21015                           
 21016                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 21017  005B24  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21018  005B28  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21019  005B2C  9CDF               	bcf	indf2,6,c
 21020                           
 21021                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 21022  005B2E  EE20 F004          	lfsr	2,4
 21023  005B32  5007               	movf	USBConfigureEndpoint@handle,w,c
 21024  005B34  26D9               	addwf	fsr2l,f,c
 21025  005B36  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21026  005B38  22DA               	addwfc	fsr2h,f,c
 21027  005B3A  8CDF               	bsf	indf2,6,c
 21028  005B3C  0012               	return		;funcret
 21029  005B3E                     __end_of_USBConfigureEndpoint:
 21030                           	opt stack 0
 21031                           tosu	equ	0xFFF
 21032                           tosh	equ	0xFFE
 21033                           tosl	equ	0xFFD
 21034                           pclath	equ	0xFFA
 21035                           tblptru	equ	0xFF8
 21036                           tblptrh	equ	0xFF7
 21037                           tblptrl	equ	0xFF6
 21038                           tablat	equ	0xFF5
 21039                           prodh	equ	0xFF4
 21040                           prodl	equ	0xFF3
 21041                           intcon	equ	0xFF2
 21042                           intcon2	equ	0xFF1
 21043                           intcon3	equ	0xFF0
 21044                           indf0	equ	0xFEF
 21045                           postinc0	equ	0xFEE
 21046                           fsr0h	equ	0xFEA
 21047                           fsr0l	equ	0xFE9
 21048                           wreg	equ	0xFE8
 21049                           indf1	equ	0xFE7
 21050                           postdec1	equ	0xFE5
 21051                           plusw1	equ	0xFE3
 21052                           fsr1h	equ	0xFE2
 21053                           fsr1l	equ	0xFE1
 21054                           indf2	equ	0xFDF
 21055                           postinc2	equ	0xFDE
 21056                           postdec2	equ	0xFDD
 21057                           plusw2	equ	0xFDB
 21058                           fsr2h	equ	0xFDA
 21059                           fsr2l	equ	0xFD9
 21060                           status	equ	0xFD8
 21061                           
 21062 ;; *************** function _USBCtrlTrfOutHandler *****************
 21063 ;; Defined at:
 21064 ;;		line 2540 in file "usb_device.c"
 21065 ;; Parameters:    Size  Location     Type
 21066 ;;		None
 21067 ;; Auto vars:     Size  Location     Type
 21068 ;;		None
 21069 ;; Return value:  Size  Location     Type
 21070 ;;                  1    wreg      void 
 21071 ;; Registers used:
 21072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21073 ;; Tracked objects:
 21074 ;;		On entry : 0/0
 21075 ;;		On exit  : 0/0
 21076 ;;		Unchanged: 0/0
 21077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21082 ;;Total ram usage:        0 bytes
 21083 ;; Hardware stack levels used:    1
 21084 ;; Hardware stack levels required when called:    2
 21085 ;; This function calls:
 21086 ;;		_USBCtrlTrfRxService
 21087 ;; This function is called by:
 21088 ;;		_USBCtrlEPService
 21089 ;; This function uses a non-reentrant model
 21090 ;;
 21091                           
 21092                           	psect	text98
 21093  006A7C                     __ptext98:
 21094                           	opt stack 0
 21095  006A7C                     _USBCtrlTrfOutHandler:
 21096                           	opt stack 26
 21097                           
 21098                           ;usb_device.c: 2542: if(controlTransferState == 2)
 21099                           
 21100                           ;incstack = 0
 21101  006A7C  0E02               	movlw	2
 21102  006A7E  0100               	movlb	0	; () banked
 21103  006A80  19B4               	xorwf	_controlTransferState& (0+255),w,b
 21104  006A82  A4D8               	btfss	status,2,c
 21105  006A84  D003               	goto	l320
 21106                           
 21107                           ; BSR set to: 0
 21108                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 21109  006A86  ECC2  F01D         	call	_USBCtrlTrfRxService	;wreg free
 21110                           
 21111                           ;usb_device.c: 2545: }
 21112  006A8A  0012               	return	
 21113  006A8C                     l320:
 21114                           
 21115                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 21116  006A8C  0E00               	movlw	0
 21117  006A8E  0100               	movlb	0	; () banked
 21118  006A90  6FB4               	movwf	_controlTransferState& (0+255),b
 21119                           
 21120                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 21121  006A92  51B0               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 21122  006A94  A4D8               	btfss	status,2,c
 21123  006A96  D01F               	goto	l322
 21124                           
 21125                           ; BSR set to: 0
 21126                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 21127  006A98  EE20 F001          	lfsr	2,1
 21128  006A9C  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21129  006A9E  26D9               	addwf	fsr2l,f,c
 21130  006AA0  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21131  006AA2  22DA               	addwfc	fsr2h,f,c
 21132  006AA4  0E08               	movlw	8
 21133  006AA6  6EDF               	movwf	indf2,c
 21134                           
 21135                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21136  006AA8  EE20 F002          	lfsr	2,2
 21137  006AAC  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21138  006AAE  26D9               	addwf	fsr2l,f,c
 21139  006AB0  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21140  006AB2  22DA               	addwfc	fsr2h,f,c
 21141  006AB4  0E30               	movlw	48
 21142  006AB6  6EDE               	movwf	postinc2,c
 21143  006AB8  0E0D               	movlw	13
 21144  006ABA  6EDD               	movwf	postdec2,c
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21148  006ABC  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21149  006AC0  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21150  006AC4  0E0C               	movlw	12
 21151  006AC6  6EDF               	movwf	indf2,c
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21155  006AC8  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21156  006ACC  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21157  006AD0  0E00               	movlw	0
 21158  006AD2  8EDB               	bsf	plusw2,7,c
 21159                           
 21160                           ;usb_device.c: 2563: }
 21161  006AD4  0012               	return	
 21162  006AD6                     l322:
 21163                           
 21164                           ; BSR set to: 0
 21165                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 21166                           
 21167                           ; BSR set to: 0
 21168  006AD6  0E00               	movlw	0
 21169  006AD8  6FB0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21170                           
 21171                           ; BSR set to: 0
 21172  006ADA  0012               	return	
 21173  006ADC                     __end_of_USBCtrlTrfOutHandler:
 21174                           	opt stack 0
 21175                           tosu	equ	0xFFF
 21176                           tosh	equ	0xFFE
 21177                           tosl	equ	0xFFD
 21178                           pclath	equ	0xFFA
 21179                           tblptru	equ	0xFF8
 21180                           tblptrh	equ	0xFF7
 21181                           tblptrl	equ	0xFF6
 21182                           tablat	equ	0xFF5
 21183                           prodh	equ	0xFF4
 21184                           prodl	equ	0xFF3
 21185                           intcon	equ	0xFF2
 21186                           intcon2	equ	0xFF1
 21187                           intcon3	equ	0xFF0
 21188                           indf0	equ	0xFEF
 21189                           postinc0	equ	0xFEE
 21190                           fsr0h	equ	0xFEA
 21191                           fsr0l	equ	0xFE9
 21192                           wreg	equ	0xFE8
 21193                           indf1	equ	0xFE7
 21194                           postdec1	equ	0xFE5
 21195                           plusw1	equ	0xFE3
 21196                           fsr1h	equ	0xFE2
 21197                           fsr1l	equ	0xFE1
 21198                           indf2	equ	0xFDF
 21199                           postinc2	equ	0xFDE
 21200                           postdec2	equ	0xFDD
 21201                           plusw2	equ	0xFDB
 21202                           fsr2h	equ	0xFDA
 21203                           fsr2l	equ	0xFD9
 21204                           status	equ	0xFD8
 21205                           
 21206 ;; *************** function _USBCtrlTrfRxService *****************
 21207 ;; Defined at:
 21208 ;;		line 1854 in file "usb_device.c"
 21209 ;; Parameters:    Size  Location     Type
 21210 ;;		None
 21211 ;; Auto vars:     Size  Location     Type
 21212 ;;  byteToRead      1    1[COMRAM] unsigned char 
 21213 ;;  i               1    0[COMRAM] unsigned char 
 21214 ;; Return value:  Size  Location     Type
 21215 ;;                  1    wreg      void 
 21216 ;; Registers used:
 21217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21218 ;; Tracked objects:
 21219 ;;		On entry : 0/0
 21220 ;;		On exit  : 0/0
 21221 ;;		Unchanged: 0/0
 21222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21227 ;;Total ram usage:        2 bytes
 21228 ;; Hardware stack levels used:    1
 21229 ;; Hardware stack levels required when called:    1
 21230 ;; This function calls:
 21231 ;;		_USBCtrlEPAllowStatusStage
 21232 ;; This function is called by:
 21233 ;;		_USBCtrlTrfOutHandler
 21234 ;; This function uses a non-reentrant model
 21235 ;;
 21236                           
 21237                           	psect	text99
 21238  003B84                     __ptext99:
 21239                           	opt stack 0
 21240  003B84                     _USBCtrlTrfRxService:
 21241                           	opt stack 26
 21242                           
 21243                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21244                           
 21245                           ;incstack = 0
 21246  003B84  0100               	movlb	0	; () banked
 21247  003B86  EE20 F001          	lfsr	2,1
 21248  003B8A  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21249  003B8C  26D9               	addwf	fsr2l,f,c
 21250  003B8E  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21251  003B90  22DA               	addwfc	fsr2h,f,c
 21252  003B92  50DF               	movf	indf2,w,c
 21253  003B94  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 21254                           
 21255                           ; BSR set to: 0
 21256                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 21257  003B96  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21258  003B98  0101               	movlb	1	; () banked
 21259  003B9A  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 21260  003B9C  0E00               	movlw	0
 21261  003B9E  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 21262  003BA0  A0D8               	btfss	status,0,c
 21263                           
 21264                           ; BSR set to: 1
 21265                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 21266  003BA2  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 21267                           
 21268                           ; BSR set to: 1
 21269                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 21270                           
 21271                           ; BSR set to: 1
 21272  003BA6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21273  003BA8  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 21274  003BAA  0E00               	movlw	0
 21275  003BAC  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 21276                           
 21277                           ; BSR set to: 1
 21278                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 21279  003BAE  0E00               	movlw	0
 21280  003BB0  6E01               	movwf	USBCtrlTrfRxService@i,c
 21281  003BB2  D011               	goto	l248
 21282  003BB4                     
 21283                           ; BSR set to: 1
 21284                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21285                           
 21286                           ; BSR set to: 1
 21287  003BB4  5001               	movf	USBCtrlTrfRxService@i,w,c
 21288  003BB6  0D01               	mullw	1
 21289  003BB8  0E38               	movlw	56
 21290  003BBA  24F3               	addwf	prodl,w,c
 21291  003BBC  6ED9               	movwf	fsr2l,c
 21292  003BBE  0E0D               	movlw	13
 21293  003BC0  20F4               	addwfc	prodh,w,c
 21294  003BC2  6EDA               	movwf	fsr2h,c
 21295  003BC4  C131  FFE1         	movff	_outPipes,fsr1l
 21296  003BC8  C132  FFE2         	movff	_outPipes+1,fsr1h
 21297  003BCC  CFDF FFE7          	movff	indf2,indf1
 21298                           
 21299                           ; BSR set to: 1
 21300  003BD0  4B31               	infsnz	_outPipes& (0+255),f,b
 21301  003BD2  2B32               	incf	(_outPipes+1)& (0+255),f,b
 21302                           
 21303                           ; BSR set to: 1
 21304  003BD4  2A01               	incf	USBCtrlTrfRxService@i,f,c
 21305  003BD6                     l248:
 21306                           
 21307                           ; BSR set to: 1
 21308                           
 21309                           ; BSR set to: 1
 21310  003BD6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21311  003BD8  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 21312  003BDA  A0D8               	btfss	status,0,c
 21313  003BDC  D7EB               	goto	l249
 21314                           
 21315                           ; BSR set to: 1
 21316                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 21317                           
 21318                           ; BSR set to: 1
 21319  003BDE  5135               	movf	(_outPipes+4)& (0+255),w,b
 21320  003BE0  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 21321  003BE2  B4D8               	btfsc	status,2,c
 21322  003BE4  D033               	goto	l251
 21323                           
 21324                           ; BSR set to: 1
 21325                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 21326  003BE6  0100               	movlb	0	; () banked
 21327  003BE8  EE20 F001          	lfsr	2,1
 21328  003BEC  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21329  003BEE  26D9               	addwf	fsr2l,f,c
 21330  003BF0  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21331  003BF2  22DA               	addwfc	fsr2h,f,c
 21332  003BF4  0E08               	movlw	8
 21333  003BF6  6EDF               	movwf	indf2,c
 21334                           
 21335                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21336  003BF8  EE20 F002          	lfsr	2,2
 21337  003BFC  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21338  003BFE  26D9               	addwf	fsr2l,f,c
 21339  003C00  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21340  003C02  22DA               	addwfc	fsr2h,f,c
 21341  003C04  0E38               	movlw	56
 21342  003C06  6EDE               	movwf	postinc2,c
 21343  003C08  0E0D               	movlw	13
 21344  003C0A  6EDD               	movwf	postdec2,c
 21345                           
 21346                           ; BSR set to: 0
 21347                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21348  003C0C  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21349  003C10  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21350  003C14  BCDF               	btfsc	indf2,6,c
 21351  003C16  D00D               	goto	l252
 21352                           
 21353                           ; BSR set to: 0
 21354                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 21355  003C18  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21356  003C1C  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21357  003C20  0E48               	movlw	72
 21358  003C22  6EDF               	movwf	indf2,c
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21362  003C24  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21363  003C28  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21364  003C2C  0E00               	movlw	0
 21365  003C2E  8EDB               	bsf	plusw2,7,c
 21366                           
 21367                           ;usb_device.c: 1891: }
 21368  003C30  0012               	return	
 21369  003C32                     l252:
 21370                           
 21371                           ; BSR set to: 0
 21372                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 21373                           
 21374                           ; BSR set to: 0
 21375  003C32  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21376  003C36  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21377  003C3A  0E08               	movlw	8
 21378  003C3C  6EDF               	movwf	indf2,c
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21382  003C3E  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21383  003C42  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21384  003C46  0E00               	movlw	0
 21385  003C48  8EDB               	bsf	plusw2,7,c
 21386                           
 21387                           ; BSR set to: 0
 21388                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 21389  003C4A  0012               	return	
 21390  003C4C                     l251:
 21391                           
 21392                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 21393                           
 21394                           ; BSR set to: 0
 21395  003C4C  0100               	movlb	0	; () banked
 21396  003C4E  EE20 F001          	lfsr	2,1
 21397  003C52  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21398  003C54  26D9               	addwf	fsr2l,f,c
 21399  003C56  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21400  003C58  22DA               	addwfc	fsr2h,f,c
 21401  003C5A  0E08               	movlw	8
 21402  003C5C  6EDF               	movwf	indf2,c
 21403                           
 21404                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21405  003C5E  EE20 F002          	lfsr	2,2
 21406  003C62  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21407  003C64  26D9               	addwf	fsr2l,f,c
 21408  003C66  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21409  003C68  22DA               	addwfc	fsr2h,f,c
 21410  003C6A  0E30               	movlw	48
 21411  003C6C  6EDE               	movwf	postinc2,c
 21412  003C6E  0E0D               	movlw	13
 21413  003C70  6EDD               	movwf	postdec2,c
 21414                           
 21415                           ; BSR set to: 0
 21416                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21417  003C72  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21418  003C76  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21419  003C7A  0E04               	movlw	4
 21420  003C7C  6EDF               	movwf	indf2,c
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21424  003C7E  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21425  003C82  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21426  003C86  0E00               	movlw	0
 21427  003C88  8EDB               	bsf	plusw2,7,c
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 21431                           
 21432                           ; BSR set to: 0
 21433  003C8A  0101               	movlb	1	; () banked
 21434  003C8C  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21435                           
 21436                           ; BSR set to: 1
 21437                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 21438  003C8E  0100               	movlb	0	; () banked
 21439  003C90  51AE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21440  003C92  A4D8               	btfss	status,2,c
 21441  003C94  0012               	return	
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 21445  003C96  ECB2  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21446  003C9A  0012               	return	
 21447  003C9C                     __end_of_USBCtrlTrfRxService:
 21448                           	opt stack 0
 21449                           tosu	equ	0xFFF
 21450                           tosh	equ	0xFFE
 21451                           tosl	equ	0xFFD
 21452                           pclath	equ	0xFFA
 21453                           tblptru	equ	0xFF8
 21454                           tblptrh	equ	0xFF7
 21455                           tblptrl	equ	0xFF6
 21456                           tablat	equ	0xFF5
 21457                           prodh	equ	0xFF4
 21458                           prodl	equ	0xFF3
 21459                           intcon	equ	0xFF2
 21460                           intcon2	equ	0xFF1
 21461                           intcon3	equ	0xFF0
 21462                           indf0	equ	0xFEF
 21463                           postinc0	equ	0xFEE
 21464                           fsr0h	equ	0xFEA
 21465                           fsr0l	equ	0xFE9
 21466                           wreg	equ	0xFE8
 21467                           indf1	equ	0xFE7
 21468                           postdec1	equ	0xFE5
 21469                           plusw1	equ	0xFE3
 21470                           fsr1h	equ	0xFE2
 21471                           fsr1l	equ	0xFE1
 21472                           indf2	equ	0xFDF
 21473                           postinc2	equ	0xFDE
 21474                           postdec2	equ	0xFDD
 21475                           plusw2	equ	0xFDB
 21476                           fsr2h	equ	0xFDA
 21477                           fsr2l	equ	0xFD9
 21478                           status	equ	0xFD8
 21479                           
 21480 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21481 ;; Defined at:
 21482 ;;		line 1418 in file "usb_device.c"
 21483 ;; Parameters:    Size  Location     Type
 21484 ;;		None
 21485 ;; Auto vars:     Size  Location     Type
 21486 ;;		None
 21487 ;; Return value:  Size  Location     Type
 21488 ;;                  1    wreg      void 
 21489 ;; Registers used:
 21490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21491 ;; Tracked objects:
 21492 ;;		On entry : 0/0
 21493 ;;		On exit  : 0/0
 21494 ;;		Unchanged: 0/0
 21495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21500 ;;Total ram usage:        0 bytes
 21501 ;; Hardware stack levels used:    1
 21502 ;; This function calls:
 21503 ;;		Nothing
 21504 ;; This function is called by:
 21505 ;;		_USBDeviceTasks
 21506 ;;		_USBCtrlEPServiceComplete
 21507 ;;		_USBCtrlTrfRxService
 21508 ;; This function uses a non-reentrant model
 21509 ;;
 21510                           
 21511                           	psect	text100
 21512  004F64                     __ptext100:
 21513                           	opt stack 0
 21514  004F64                     _USBCtrlEPAllowStatusStage:
 21515                           	opt stack 26
 21516                           
 21517                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 21518                           
 21519                           ;incstack = 0
 21520  004F64  0100               	movlb	0	; () banked
 21521  004F66  51AD               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21522  004F68  A4D8               	btfss	status,2,c
 21523  004F6A  0012               	return	
 21524                           
 21525                           ; BSR set to: 0
 21526                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 21527  004F6C  0E01               	movlw	1
 21528  004F6E  6FAD               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21529                           
 21530                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 21531  004F70  51AC               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21532  004F72  A4D8               	btfss	status,2,c
 21533  004F74  0012               	return	
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 21537  004F76  0E01               	movlw	1
 21538  004F78  6FAC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;usb_device.c: 1434: if(controlTransferState == 2)
 21542  004F7A  0E02               	movlw	2
 21543  004F7C  19B4               	xorwf	_controlTransferState& (0+255),w,b
 21544  004F7E  A4D8               	btfss	status,2,c
 21545  004F80  D015               	goto	l202
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 21549  004F82  EE20 F001          	lfsr	2,1
 21550  004F86  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21551  004F88  26D9               	addwf	fsr2l,f,c
 21552  004F8A  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21553  004F8C  22DA               	addwfc	fsr2h,f,c
 21554  004F8E  0E00               	movlw	0
 21555  004F90  6EDF               	movwf	indf2,c
 21556                           
 21557                           ; BSR set to: 0
 21558                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21559  004F92  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21560  004F96  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21561  004F9A  0E48               	movlw	72
 21562  004F9C  6EDF               	movwf	indf2,c
 21563                           
 21564                           ; BSR set to: 0
 21565                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21566  004F9E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21567  004FA2  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21568  004FA6  0E00               	movlw	0
 21569  004FA8  8EDB               	bsf	plusw2,7,c
 21570                           
 21571                           ;usb_device.c: 1439: }
 21572  004FAA  0012               	return	
 21573  004FAC                     l202:
 21574                           
 21575                           ; BSR set to: 0
 21576                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 21577                           
 21578                           ; BSR set to: 0
 21579  004FAC  05B4               	decf	_controlTransferState& (0+255),w,b
 21580  004FAE  A4D8               	btfss	status,2,c
 21581  004FB0  0012               	return	
 21582                           
 21583                           ; BSR set to: 0
 21584                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 21585  004FB2  0E00               	movlw	0
 21586  004FB4  6FB0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21587                           
 21588                           ; BSR set to: 0
 21589                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 21590  004FB6  EE20 F001          	lfsr	2,1
 21591  004FBA  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21592  004FBC  26D9               	addwf	fsr2l,f,c
 21593  004FBE  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21594  004FC0  22DA               	addwfc	fsr2h,f,c
 21595  004FC2  0E08               	movlw	8
 21596  004FC4  6EDF               	movwf	indf2,c
 21597                           
 21598                           ; BSR set to: 0
 21599                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21600  004FC6  EE20 F002          	lfsr	2,2
 21601  004FCA  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21602  004FCC  26D9               	addwf	fsr2l,f,c
 21603  004FCE  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21604  004FD0  22DA               	addwfc	fsr2h,f,c
 21605  004FD2  0E30               	movlw	48
 21606  004FD4  6EDE               	movwf	postinc2,c
 21607  004FD6  0E0D               	movlw	13
 21608  004FD8  6EDD               	movwf	postdec2,c
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 21612  004FDA  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21613  004FDE  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21614  004FE2  0E04               	movlw	4
 21615  004FE4  6EDF               	movwf	indf2,c
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21619  004FE6  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21620  004FEA  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21621  004FEE  0E00               	movlw	0
 21622  004FF0  8EDB               	bsf	plusw2,7,c
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 21626  004FF2  0E01               	movlw	1
 21627  004FF4  6FB0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21628                           
 21629                           ; BSR set to: 0
 21630                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 21631  004FF6  EE20 F001          	lfsr	2,1
 21632  004FFA  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21633  004FFC  26D9               	addwf	fsr2l,f,c
 21634  004FFE  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21635  005000  22DA               	addwfc	fsr2h,f,c
 21636  005002  0E08               	movlw	8
 21637  005004  6EDF               	movwf	indf2,c
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21641  005006  EE20 F002          	lfsr	2,2
 21642  00500A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21643  00500C  26D9               	addwf	fsr2l,f,c
 21644  00500E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21645  005010  22DA               	addwfc	fsr2h,f,c
 21646  005012  0E30               	movlw	48
 21647  005014  6EDE               	movwf	postinc2,c
 21648  005016  0E0D               	movlw	13
 21649  005018  6EDD               	movwf	postdec2,c
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 21653  00501A  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21654  00501E  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21655  005022  0E80               	movlw	128
 21656  005024  6EDF               	movwf	indf2,c
 21657                           
 21658                           ; BSR set to: 0
 21659                           
 21660                           ; BSR set to: 0
 21661                           
 21662                           ; BSR set to: 0
 21663  005026  0012               	return	
 21664  005028                     __end_of_USBCtrlEPAllowStatusStage:
 21665                           	opt stack 0
 21666                           tosu	equ	0xFFF
 21667                           tosh	equ	0xFFE
 21668                           tosl	equ	0xFFD
 21669                           pclath	equ	0xFFA
 21670                           tblptru	equ	0xFF8
 21671                           tblptrh	equ	0xFF7
 21672                           tblptrl	equ	0xFF6
 21673                           tablat	equ	0xFF5
 21674                           prodh	equ	0xFF4
 21675                           prodl	equ	0xFF3
 21676                           intcon	equ	0xFF2
 21677                           intcon2	equ	0xFF1
 21678                           intcon3	equ	0xFF0
 21679                           indf0	equ	0xFEF
 21680                           postinc0	equ	0xFEE
 21681                           fsr0h	equ	0xFEA
 21682                           fsr0l	equ	0xFE9
 21683                           wreg	equ	0xFE8
 21684                           indf1	equ	0xFE7
 21685                           postdec1	equ	0xFE5
 21686                           plusw1	equ	0xFE3
 21687                           fsr1h	equ	0xFE2
 21688                           fsr1l	equ	0xFE1
 21689                           indf2	equ	0xFDF
 21690                           postinc2	equ	0xFDE
 21691                           postdec2	equ	0xFDD
 21692                           plusw2	equ	0xFDB
 21693                           fsr2h	equ	0xFDA
 21694                           fsr2l	equ	0xFD9
 21695                           status	equ	0xFD8
 21696                           
 21697 ;; *************** function _USBCtrlTrfInHandler *****************
 21698 ;; Defined at:
 21699 ;;		line 2594 in file "usb_device.c"
 21700 ;; Parameters:    Size  Location     Type
 21701 ;;		None
 21702 ;; Auto vars:     Size  Location     Type
 21703 ;;  lastDTS         1    1[COMRAM] unsigned char 
 21704 ;; Return value:  Size  Location     Type
 21705 ;;                  1    wreg      void 
 21706 ;; Registers used:
 21707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21708 ;; Tracked objects:
 21709 ;;		On entry : 0/0
 21710 ;;		On exit  : 0/0
 21711 ;;		Unchanged: 0/0
 21712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21717 ;;Total ram usage:        1 bytes
 21718 ;; Hardware stack levels used:    1
 21719 ;; Hardware stack levels required when called:    1
 21720 ;; This function calls:
 21721 ;;		_USBCtrlTrfTxService
 21722 ;; This function is called by:
 21723 ;;		_USBCtrlEPService
 21724 ;; This function uses a non-reentrant model
 21725 ;;
 21726                           
 21727                           	psect	text101
 21728  004DD8                     __ptext101:
 21729                           	opt stack 0
 21730  004DD8                     _USBCtrlTrfInHandler:
 21731                           	opt stack 27
 21732                           
 21733                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 21734                           
 21735                           ; BSR set to: 0
 21736                           ;incstack = 0
 21737  004DD8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21738  004DDC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21739  004DE0  0100               	movlb	0	; () banked
 21740  004DE2  0E00               	movlw	0
 21741  004DE4  BCDF               	btfsc	indf2,6,c
 21742  004DE6  0E01               	movlw	1
 21743  004DE8  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21747  004DEA  0E04               	movlw	4
 21748  004DEC  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 21749  004DEE  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 21750  004DF0  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21751  004DF2  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21752                           
 21753                           ; BSR set to: 0
 21754                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 21755  004DF4  0E08               	movlw	8
 21756  004DF6  185F               	xorwf	_USBDeviceState,w,c
 21757  004DF8  A4D8               	btfss	status,2,c
 21758  004DFA  D00C               	goto	l329
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 21762  004DFC  010D               	movlb	13	; () banked
 21763  004DFE  5132               	movf	50,w,b	;volatile
 21764  004E00  0B7F               	andlw	127
 21765  004E02  010F               	movlb	15	; () banked
 21766  004E04  6F38               	movwf	56,b	;volatile
 21767                           
 21768                           ; BSR set to: 15
 21769                           ;usb_device.c: 2609: if(UADDR != 0u)
 21770  004E06  5138               	movf	56,w,b	;volatile
 21771  004E08  B4D8               	btfsc	status,2,c
 21772  004E0A  D002               	goto	l328
 21773                           
 21774                           ; BSR set to: 15
 21775                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 21776  004E0C  0E10               	movlw	16
 21777  004E0E  D001               	goto	L15
 21778  004E10                     l328:
 21779                           
 21780                           ; BSR set to: 15
 21781                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 21782                           
 21783                           ; BSR set to: 15
 21784  004E10  0E04               	movlw	4
 21785  004E12                     L15:
 21786  004E12  6E5F               	movwf	_USBDeviceState,c
 21787  004E14                     l329:
 21788                           
 21789                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 21790                           
 21791                           ; BSR set to: 15
 21792                           
 21793                           ; BSR set to: 15
 21794  004E14  0100               	movlb	0	; () banked
 21795  004E16  05B4               	decf	_controlTransferState& (0+255),w,b
 21796  004E18  A4D8               	btfss	status,2,c
 21797  004E1A  D03B               	goto	l330
 21798                           
 21799                           ; BSR set to: 0
 21800                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 21801  004E1C  EE20 F002          	lfsr	2,2
 21802  004E20  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21803  004E22  26D9               	addwf	fsr2l,f,c
 21804  004E24  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21805  004E26  22DA               	addwfc	fsr2h,f,c
 21806  004E28  0E38               	movlw	56
 21807  004E2A  6EDE               	movwf	postinc2,c
 21808  004E2C  0E0D               	movlw	13
 21809  004E2E  6EDD               	movwf	postdec2,c
 21810                           
 21811                           ; BSR set to: 0
 21812                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 21813  004E30  EC86  F026         	call	_USBCtrlTrfTxService	;wreg free
 21814                           
 21815                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 21816  004E34  0E02               	movlw	2
 21817  004E36  0100               	movlb	0	; () banked
 21818  004E38  19B5               	xorwf	_shortPacketStatus& (0+255),w,b
 21819  004E3A  A4D8               	btfss	status,2,c
 21820  004E3C  D00D               	goto	l331
 21821                           
 21822                           ; BSR set to: 0
 21823                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 21824  004E3E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21825  004E42  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21826  004E46  0E04               	movlw	4
 21827  004E48  6EDF               	movwf	indf2,c
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21831  004E4A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21832  004E4E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21833  004E52  0E00               	movlw	0
 21834  004E54  8EDB               	bsf	plusw2,7,c
 21835                           
 21836                           ;usb_device.c: 2635: }
 21837  004E56  0012               	return	
 21838  004E58                     l331:
 21839                           
 21840                           ; BSR set to: 0
 21841                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 21842                           
 21843                           ; BSR set to: 0
 21844  004E58  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 21845  004E5A  A4D8               	btfss	status,2,c
 21846  004E5C  D00D               	goto	l333
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 21850  004E5E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21851  004E62  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21852  004E66  0E48               	movlw	72
 21853  004E68  6EDF               	movwf	indf2,c
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21857  004E6A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21858  004E6E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21859  004E72  0E00               	movlw	0
 21860  004E74  8EDB               	bsf	plusw2,7,c
 21861                           
 21862                           ;usb_device.c: 2642: }
 21863  004E76  0012               	return	
 21864  004E78                     l333:
 21865                           
 21866                           ; BSR set to: 0
 21867                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 21868                           
 21869                           ; BSR set to: 0
 21870  004E78  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21871  004E7C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21872  004E80  0E08               	movlw	8
 21873  004E82  6EDF               	movwf	indf2,c
 21874                           
 21875                           ; BSR set to: 0
 21876                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21877  004E84  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21878  004E88  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21879  004E8C  0E00               	movlw	0
 21880  004E8E  8EDB               	bsf	plusw2,7,c
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 21884                           
 21885                           ; BSR set to: 0
 21886  004E90  0012               	return	
 21887  004E92                     l330:
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 21891  004E92  0101               	movlb	1	; () banked
 21892  004E94  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 21893                           
 21894                           ; BSR set to: 1
 21895                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 21896                           
 21897                           ; BSR set to: 1
 21898  004E96  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21899                           
 21900                           ; BSR set to: 1
 21901                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 21902                           
 21903                           ; BSR set to: 1
 21904  004E98  0E00               	movlw	0
 21905  004E9A  0100               	movlb	0	; () banked
 21906  004E9C  6FB4               	movwf	_controlTransferState& (0+255),b
 21907  004E9E  0012               	return	
 21908  004EA0                     __end_of_USBCtrlTrfInHandler:
 21909                           	opt stack 0
 21910                           tosu	equ	0xFFF
 21911                           tosh	equ	0xFFE
 21912                           tosl	equ	0xFFD
 21913                           pclath	equ	0xFFA
 21914                           tblptru	equ	0xFF8
 21915                           tblptrh	equ	0xFF7
 21916                           tblptrl	equ	0xFF6
 21917                           tablat	equ	0xFF5
 21918                           prodh	equ	0xFF4
 21919                           prodl	equ	0xFF3
 21920                           intcon	equ	0xFF2
 21921                           intcon2	equ	0xFF1
 21922                           intcon3	equ	0xFF0
 21923                           indf0	equ	0xFEF
 21924                           postinc0	equ	0xFEE
 21925                           fsr0h	equ	0xFEA
 21926                           fsr0l	equ	0xFE9
 21927                           wreg	equ	0xFE8
 21928                           indf1	equ	0xFE7
 21929                           postdec1	equ	0xFE5
 21930                           plusw1	equ	0xFE3
 21931                           fsr1h	equ	0xFE2
 21932                           fsr1l	equ	0xFE1
 21933                           indf2	equ	0xFDF
 21934                           postinc2	equ	0xFDE
 21935                           postdec2	equ	0xFDD
 21936                           plusw2	equ	0xFDB
 21937                           fsr2h	equ	0xFDA
 21938                           fsr2l	equ	0xFD9
 21939                           status	equ	0xFD8
 21940                           
 21941 ;; *************** function _USBCtrlTrfTxService *****************
 21942 ;; Defined at:
 21943 ;;		line 1773 in file "usb_device.c"
 21944 ;; Parameters:    Size  Location     Type
 21945 ;;		None
 21946 ;; Auto vars:     Size  Location     Type
 21947 ;;  byteToSend      1    0[COMRAM] unsigned char 
 21948 ;; Return value:  Size  Location     Type
 21949 ;;                  1    wreg      void 
 21950 ;; Registers used:
 21951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21952 ;; Tracked objects:
 21953 ;;		On entry : 0/0
 21954 ;;		On exit  : 0/0
 21955 ;;		Unchanged: 0/0
 21956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21961 ;;Total ram usage:        1 bytes
 21962 ;; Hardware stack levels used:    1
 21963 ;; This function calls:
 21964 ;;		Nothing
 21965 ;; This function is called by:
 21966 ;;		_USBCtrlEPAllowDataStage
 21967 ;;		_USBCtrlTrfInHandler
 21968 ;; This function uses a non-reentrant model
 21969 ;;
 21970                           
 21971                           	psect	text102
 21972  004D0C                     __ptext102:
 21973                           	opt stack 0
 21974  004D0C                     _USBCtrlTrfTxService:
 21975                           	opt stack 25
 21976                           
 21977                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 21978                           
 21979                           ; BSR set to: 0
 21980                           ;incstack = 0
 21981  004D0C  0E08               	movlw	8
 21982  004D0E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 21983                           
 21984                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 21985  004D10  0100               	movlb	0	; () banked
 21986  004D12  516B               	movf	(_inPipes+5)& (0+255),w,b
 21987  004D14  E110               	bnz	l9935
 21988  004D16  0E08               	movlw	8
 21989  004D18  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 21990  004D1A  B0D8               	btfsc	status,0,c
 21991  004D1C  D00C               	goto	l235
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 21995  004D1E  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 21996                           
 21997                           ; BSR set to: 0
 21998                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 21999  004D22  51B5               	movf	_shortPacketStatus& (0+255),w,b
 22000  004D24  A4D8               	btfss	status,2,c
 22001  004D26  D002               	goto	l233
 22002                           
 22003                           ; BSR set to: 0
 22004                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 22005  004D28  0E01               	movlw	1
 22006  004D2A  D004               	goto	L16
 22007  004D2C                     l233:
 22008                           
 22009                           ; BSR set to: 0
 22010                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 22011                           
 22012                           ; BSR set to: 0
 22013  004D2C  05B5               	decf	_shortPacketStatus& (0+255),w,b
 22014  004D2E  A4D8               	btfss	status,2,c
 22015  004D30  D002               	goto	l235
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 22019  004D32  0E02               	movlw	2
 22020  004D34                     L16:
 22021  004D34  6FB5               	movwf	_shortPacketStatus& (0+255),b
 22022  004D36                     l235:
 22023  004D36                     l9935:
 22024                           
 22025                           ; BSR set to: 0
 22026                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 22027  004D36  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22028  004D38  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 22029  004D3A  0E00               	movlw	0
 22030  004D3C  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 22031                           
 22032                           ; BSR set to: 0
 22033                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 22034  004D3E  EE20 F001          	lfsr	2,1
 22035  004D42  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22036  004D44  26D9               	addwf	fsr2l,f,c
 22037  004D46  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22038  004D48  22DA               	addwfc	fsr2h,f,c
 22039  004D4A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 22043  004D4E  0E38               	movlw	56
 22044  004D50  6F94               	movwf	_pDst& (0+255),b
 22045  004D52  0E0D               	movlw	13
 22046  004D54  6F95               	movwf	(_pDst+1)& (0+255),b
 22047                           
 22048                           ; BSR set to: 0
 22049                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22050  004D56  A169               	btfss	(_inPipes+3)& (0+255),0,b
 22051  004D58  D01C               	goto	l237
 22052  004D5A  D03A               	goto	l241
 22053  004D5C                     
 22054                           ; BSR set to: 0
 22055                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 22056                           
 22057                           ; BSR set to: 0
 22058  004D5C  C066  FFF6         	movff	_inPipes,tblptrl
 22059  004D60  C067  FFF7         	movff	_inPipes+1,tblptrh
 22060  004D64  6AF8               	clrf	tblptru,c
 22061  004D66  C094  FFD9         	movff	_pDst,fsr2l
 22062  004D6A  C095  FFDA         	movff	_pDst+1,fsr2h
 22063  004D6E  0E0E               	movlw	(high __ramtop+-1)
 22064  004D70  64F7               	cpfsgt	tblptrh,c
 22065  004D72  D003               	bra	u6957
 22066  004D74  0008               	tblrd		*
 22067  004D76  50F5               	movf	tablat,w,c
 22068  004D78  D005               	bra	u6950
 22069  004D7A                     u6957:
 22070  004D7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 22071  004D7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 22072  004D82  50EF               	movf	indf0,w,c
 22073  004D84                     u6950:
 22074  004D84  6EDF               	movwf	indf2,c
 22075  004D86  0100               	movlb	0	; () banked
 22076  004D88  4B66               	infsnz	_inPipes& (0+255),f,b
 22077  004D8A  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22078                           
 22079                           ; BSR set to: 0
 22080  004D8C  4B94               	infsnz	_pDst& (0+255),f,b
 22081  004D8E  2B95               	incf	(_pDst+1)& (0+255),f,b
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;usb_device.c: 1816: byteToSend--;
 22085  004D90  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22086  004D92                     l237:
 22087                           
 22088                           ; BSR set to: 0
 22089                           
 22090                           ; BSR set to: 0
 22091  004D92  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22092  004D94  B4D8               	btfsc	status,2,c
 22093  004D96  0012               	return	
 22094  004D98  D7E1               	goto	l238
 22095  004D9A                     
 22096                           ; BSR set to: 0
 22097                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 22098                           
 22099                           ; BSR set to: 0
 22100  004D9A  C066  FFF6         	movff	_inPipes,tblptrl
 22101  004D9E  C067  FFF7         	movff	_inPipes+1,tblptrh
 22102  004DA2  6AF8               	clrf	tblptru,c
 22103  004DA4  C094  FFD9         	movff	_pDst,fsr2l
 22104  004DA8  C095  FFDA         	movff	_pDst+1,fsr2h
 22105  004DAC  0E0E               	movlw	(high __ramtop+-1)
 22106  004DAE  64F7               	cpfsgt	tblptrh,c
 22107  004DB0  D003               	bra	u6977
 22108  004DB2  0008               	tblrd		*
 22109  004DB4  50F5               	movf	tablat,w,c
 22110  004DB6  D005               	bra	u6970
 22111  004DB8                     u6977:
 22112  004DB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 22113  004DBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 22114  004DC0  50EF               	movf	indf0,w,c
 22115  004DC2                     u6970:
 22116  004DC2  6EDF               	movwf	indf2,c
 22117  004DC4  0100               	movlb	0	; () banked
 22118  004DC6  4B66               	infsnz	_inPipes& (0+255),f,b
 22119  004DC8  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22120                           
 22121                           ; BSR set to: 0
 22122  004DCA  4B94               	infsnz	_pDst& (0+255),f,b
 22123  004DCC  2B95               	incf	(_pDst+1)& (0+255),f,b
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;usb_device.c: 1824: byteToSend--;
 22127  004DCE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22128  004DD0                     l241:
 22129                           
 22130                           ; BSR set to: 0
 22131                           
 22132                           ; BSR set to: 0
 22133  004DD0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22134  004DD2  B4D8               	btfsc	status,2,c
 22135  004DD4  0012               	return	
 22136  004DD6  D7E1               	goto	l242
 22137  004DD8                     __end_of_USBCtrlTrfTxService:
 22138                           	opt stack 0
 22139                           tosu	equ	0xFFF
 22140                           tosh	equ	0xFFE
 22141                           tosl	equ	0xFFD
 22142                           pclath	equ	0xFFA
 22143                           tblptru	equ	0xFF8
 22144                           tblptrh	equ	0xFF7
 22145                           tblptrl	equ	0xFF6
 22146                           tablat	equ	0xFF5
 22147                           prodh	equ	0xFF4
 22148                           prodl	equ	0xFF3
 22149                           intcon	equ	0xFF2
 22150                           intcon2	equ	0xFF1
 22151                           intcon3	equ	0xFF0
 22152                           indf0	equ	0xFEF
 22153                           postinc0	equ	0xFEE
 22154                           fsr0h	equ	0xFEA
 22155                           fsr0l	equ	0xFE9
 22156                           wreg	equ	0xFE8
 22157                           indf1	equ	0xFE7
 22158                           postdec1	equ	0xFE5
 22159                           plusw1	equ	0xFE3
 22160                           fsr1h	equ	0xFE2
 22161                           fsr1l	equ	0xFE1
 22162                           indf2	equ	0xFDF
 22163                           postinc2	equ	0xFDE
 22164                           postdec2	equ	0xFDD
 22165                           plusw2	equ	0xFDB
 22166                           fsr2h	equ	0xFDA
 22167                           fsr2l	equ	0xFD9
 22168                           status	equ	0xFD8
 22169                           
 22170 ;; *************** function _APP_DeviceMSDTasks *****************
 22171 ;; Defined at:
 22172 ;;		line 110 in file "app_device_msd.c"
 22173 ;; Parameters:    Size  Location     Type
 22174 ;;		None
 22175 ;; Auto vars:     Size  Location     Type
 22176 ;;		None
 22177 ;; Return value:  Size  Location     Type
 22178 ;;                  1    wreg      void 
 22179 ;; Registers used:
 22180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22181 ;; Tracked objects:
 22182 ;;		On entry : 0/0
 22183 ;;		On exit  : 0/0
 22184 ;;		Unchanged: 0/0
 22185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22190 ;;Total ram usage:        0 bytes
 22191 ;; Hardware stack levels used:    1
 22192 ;; Hardware stack levels required when called:   13
 22193 ;; This function calls:
 22194 ;;		_MSDTasks
 22195 ;; This function is called by:
 22196 ;;		_main
 22197 ;; This function uses a non-reentrant model
 22198 ;;
 22199                           
 22200                           	psect	text103
 22201  007A90                     __ptext103:
 22202                           	opt stack 0
 22203  007A90                     _APP_DeviceMSDTasks:
 22204                           	opt stack 17
 22205                           
 22206                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;incstack = 0
 22210  007A90  0E20               	movlw	32
 22211  007A92  605F               	cpfslt	_USBDeviceState,c
 22212  007A94  D001               	goto	l972
 22213  007A96  0012               	return	
 22214  007A98                     l972:
 22215                           
 22216                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 22217  007A98  B265               	btfsc	3941,1,c	;volatile
 22218  007A9A  0012               	return	
 22219                           
 22220                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 22221                           
 22222                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 22223  007A9C  EC4C  F00E         	call	_MSDTasks	;wreg free
 22224  007AA0  0012               	return		;funcret
 22225  007AA2                     __end_of_APP_DeviceMSDTasks:
 22226                           	opt stack 0
 22227                           tosu	equ	0xFFF
 22228                           tosh	equ	0xFFE
 22229                           tosl	equ	0xFFD
 22230                           pclath	equ	0xFFA
 22231                           tblptru	equ	0xFF8
 22232                           tblptrh	equ	0xFF7
 22233                           tblptrl	equ	0xFF6
 22234                           tablat	equ	0xFF5
 22235                           prodh	equ	0xFF4
 22236                           prodl	equ	0xFF3
 22237                           intcon	equ	0xFF2
 22238                           intcon2	equ	0xFF1
 22239                           intcon3	equ	0xFF0
 22240                           indf0	equ	0xFEF
 22241                           postinc0	equ	0xFEE
 22242                           fsr0h	equ	0xFEA
 22243                           fsr0l	equ	0xFE9
 22244                           wreg	equ	0xFE8
 22245                           indf1	equ	0xFE7
 22246                           postdec1	equ	0xFE5
 22247                           plusw1	equ	0xFE3
 22248                           fsr1h	equ	0xFE2
 22249                           fsr1l	equ	0xFE1
 22250                           indf2	equ	0xFDF
 22251                           postinc2	equ	0xFDE
 22252                           postdec2	equ	0xFDD
 22253                           plusw2	equ	0xFDB
 22254                           fsr2h	equ	0xFDA
 22255                           fsr2l	equ	0xFD9
 22256                           status	equ	0xFD8
 22257                           
 22258 ;; *************** function _MSDTasks *****************
 22259 ;; Defined at:
 22260 ;;		line 335 in file "usb_device_msd.c"
 22261 ;; Parameters:    Size  Location     Type
 22262 ;;		None
 22263 ;; Auto vars:     Size  Location     Type
 22264 ;;  i               1   82[COMRAM] unsigned char 
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  1    wreg      unsigned char 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/0
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22275 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22278 ;;Total ram usage:        6 bytes
 22279 ;; Hardware stack levels used:    1
 22280 ;; Hardware stack levels required when called:   12
 22281 ;; This function calls:
 22282 ;;		_MSDProcessCommand
 22283 ;;		_USBStallEndpoint
 22284 ;;		_USBTransferOnePacket
 22285 ;; This function is called by:
 22286 ;;		_APP_DeviceMSDTasks
 22287 ;; This function uses a non-reentrant model
 22288 ;;
 22289                           
 22290                           	psect	text104
 22291  001C98                     __ptext104:
 22292                           	opt stack 0
 22293  001C98                     _MSDTasks:
 22294                           	opt stack 17
 22295                           
 22296                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 22297                           
 22298                           ;incstack = 0
 22299  001C98  0E20               	movlw	32
 22300  001C9A  185F               	xorwf	_USBDeviceState,w,c
 22301  001C9C  A4D8               	btfss	status,2,c
 22302  001C9E  0012               	return	
 22303  001CA0  D118               	goto	l554
 22304  001CA2                     
 22305                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 22306  001CA2  0100               	movlb	0	; () banked
 22307  001CA4  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 22308  001CA6  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22309  001CA8  B4D8               	btfsc	status,2,c
 22310  001CAA  D006               	goto	u10080
 22311                           
 22312                           ; BSR set to: 0
 22313  001CAC  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22314  001CB0  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22315  001CB4  BEDF               	btfsc	indf2,7,c
 22316  001CB6  0012               	return	
 22317  001CB8                     u10080:
 22318                           
 22319                           ; BSR set to: 0
 22320                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 22321                           
 22322                           ; BSR set to: 0
 22323  001CB8  0E00               	movlw	0
 22324  001CBA  6E53               	movwf	MSDTasks@i,c
 22325  001CBC                     l12987:
 22326                           
 22327                           ; BSR set to: 0
 22328  001CBC  0E1E               	movlw	30
 22329  001CBE  6453               	cpfsgt	MSDTasks@i,c
 22330  001CC0  D001               	goto	l559
 22331  001CC2  D014               	goto	u10100
 22332  001CC4                     l559:
 22333                           
 22334                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 22335                           
 22336                           ; BSR set to: 0
 22337  001CC4  5053               	movf	MSDTasks@i,w,c
 22338  001CC6  0D01               	mullw	1
 22339  001CC8  0E40               	movlw	64
 22340  001CCA  24F3               	addwf	prodl,w,c
 22341  001CCC  6ED9               	movwf	fsr2l,c
 22342  001CCE  0E0D               	movlw	13
 22343  001CD0  20F4               	addwfc	prodh,w,c
 22344  001CD2  6EDA               	movwf	fsr2h,c
 22345  001CD4  5053               	movf	MSDTasks@i,w,c
 22346  001CD6  0D01               	mullw	1
 22347  001CD8  0E00               	movlw	low _gblCBW
 22348  001CDA  24F3               	addwf	prodl,w,c
 22349  001CDC  6EE1               	movwf	fsr1l,c
 22350  001CDE  0E01               	movlw	high _gblCBW
 22351  001CE0  20F4               	addwfc	prodh,w,c
 22352  001CE2  6EE2               	movwf	fsr1h,c
 22353  001CE4  CFDF FFE7          	movff	indf2,indf1
 22354  001CE8  2A53               	incf	MSDTasks@i,f,c
 22355  001CEA  D7E8               	goto	l12987
 22356  001CEC                     u10100:
 22357                           
 22358                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 22359  001CEC  0100               	movlb	0	; () banked
 22360  001CEE  EE20 F001          	lfsr	2,1
 22361  001CF2  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 22362  001CF4  26D9               	addwf	fsr2l,f,c
 22363  001CF6  5191               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22364  001CF8  22DA               	addwfc	fsr2h,f,c
 22365  001CFA  0E1F               	movlw	31
 22366  001CFC  18DE               	xorwf	postinc2,w,c
 22367  001CFE  A4D8               	btfss	status,2,c
 22368  001D00  D072               	goto	l561
 22369                           
 22370                           ; BSR set to: 0
 22371  001D02  0E55               	movlw	85
 22372  001D04  0101               	movlb	1	; () banked
 22373  001D06  1900               	xorwf	_gblCBW& (0+255),w,b
 22374  001D08  E16E               	bnz	l561
 22375  001D0A  0E53               	movlw	83
 22376  001D0C  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 22377  001D0E  E16B               	bnz	l561
 22378  001D10  0E42               	movlw	66
 22379  001D12  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 22380  001D14  E168               	bnz	l561
 22381  001D16  0E43               	movlw	67
 22382  001D18  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 22383  001D1A  A4D8               	btfss	status,2,c
 22384  001D1C  D064               	goto	l561
 22385                           
 22386                           ; BSR set to: 1
 22387                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 22388  001D1E  0E01               	movlw	1
 22389  001D20  0100               	movlb	0	; () banked
 22390  001D22  6FA0               	movwf	_MSDCBWValid& (0+255),b
 22391                           
 22392                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 22393  001D24  0101               	movlb	1	; () banked
 22394  001D26  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22395  001D28  A4D8               	btfss	status,2,c
 22396  001D2A  D052               	goto	l562
 22397                           
 22398                           ; BSR set to: 1
 22399  001D2C  0E11               	movlw	17
 22400  001D2E  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 22401  001D30  D04F               	goto	l562
 22402                           
 22403                           ; BSR set to: 1
 22404  001D32  510E               	movf	(_gblCBW+14)& (0+255),w,b
 22405  001D34  B4D8               	btfsc	status,2,c
 22406  001D36  D04C               	goto	l562
 22407                           
 22408                           ; BSR set to: 1
 22409  001D38  C10C  F04E         	movff	_gblCBW+12,??_MSDTasks
 22410  001D3C  0E3F               	movlw	63
 22411  001D3E  164E               	andwf	??_MSDTasks,f,c
 22412  001D40  A4D8               	btfss	status,2,c
 22413  001D42  D046               	goto	l562
 22414                           
 22415                           ; BSR set to: 1
 22416                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 22417  001D44  0E55               	movlw	85
 22418  001D46  010D               	movlb	13	; () banked
 22419  001D48  6F80               	movwf	128,b	;volatile
 22420  001D4A  0E53               	movlw	83
 22421  001D4C  6F81               	movwf	129,b	;volatile
 22422  001D4E  0E42               	movlw	66
 22423  001D50  6F82               	movwf	130,b	;volatile
 22424  001D52  0E53               	movlw	83
 22425  001D54  6F83               	movwf	131,b	;volatile
 22426                           
 22427                           ; BSR set to: 13
 22428                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 22429  001D56  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 22430  001D5A  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 22431  001D5E  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 22432  001D62  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 22433                           
 22434                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 22435  001D66  0E00               	movlw	0
 22436  001D68  6F88               	movwf	136,b	;volatile
 22437  001D6A  0E00               	movlw	0
 22438  001D6C  6F89               	movwf	137,b	;volatile
 22439  001D6E  0E00               	movlw	0
 22440  001D70  6F8A               	movwf	138,b	;volatile
 22441  001D72  0E00               	movlw	0
 22442  001D74  6F8B               	movwf	139,b	;volatile
 22443                           
 22444                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 22445  001D76  0E00               	movlw	0
 22446  001D78  6F8C               	movwf	140,b	;volatile
 22447                           
 22448                           ; BSR set to: 13
 22449                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 22450  001D7A  0100               	movlb	0	; () banked
 22451  001D7C  69A7               	setf	_MSDCommandState& (0+255),b
 22452                           
 22453                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 22454  001D7E  0E00               	movlw	0
 22455  001D80  6FA6               	movwf	_MSDReadState& (0+255),b
 22456                           
 22457                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 22458  001D82  0E00               	movlw	0
 22459  001D84  6FA5               	movwf	_MSDWriteState& (0+255),b
 22460                           
 22461                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 22462  001D86  0E00               	movlw	0
 22463  001D88  6FA4               	movwf	_MSDRetryAttempt& (0+255),b
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 22467  001D8A  0E03               	movlw	3
 22468  001D8C  0101               	movlb	1	; () banked
 22469  001D8E  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 22470  001D90  B4D8               	btfsc	status,2,c
 22471  001D92  D008               	goto	l563
 22472                           
 22473                           ; BSR set to: 1
 22474                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 22475  001D94  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22476  001D96  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22477  001D98  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22478  001D9A  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22479                           
 22480                           ; BSR set to: 1
 22481                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 22482  001D9C  0E00               	movlw	0
 22483  001D9E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22484                           
 22485                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 22486  001DA0  0E00               	movlw	0
 22487  001DA2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22488  001DA4                     l563:
 22489                           
 22490                           ; BSR set to: 1
 22491                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 22492                           
 22493                           ; BSR set to: 1
 22494  001DA4  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 22495  001DA6  D002               	goto	l564
 22496                           
 22497                           ; BSR set to: 1
 22498                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 22499  001DA8  0E01               	movlw	1
 22500  001DAA  D001               	goto	L17
 22501  001DAC                     l564:
 22502                           
 22503                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 22504                           
 22505                           ; BSR set to: 0
 22506  001DAC  0E02               	movlw	2
 22507  001DAE                     L17:
 22508  001DAE  0100               	movlb	0	; () banked
 22509  001DB0  6FA8               	movwf	_MSD_State& (0+255),b
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 22513                           
 22514                           ; BSR set to: 0
 22515  001DB2  0101               	movlb	1	; () banked
 22516  001DB4  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22517  001DB6  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22518  001DB8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22519  001DBA  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22520  001DBC  B4D8               	btfsc	status,2,c
 22521  001DBE  D002               	goto	l566
 22522                           
 22523                           ; BSR set to: 1
 22524                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 22525  001DC0  0E00               	movlw	0
 22526  001DC2  D001               	goto	L18
 22527  001DC4                     l566:
 22528                           
 22529                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 22530                           
 22531                           ; BSR set to: 0
 22532  001DC4  0E01               	movlw	1
 22533  001DC6                     L18:
 22534  001DC6  0100               	movlb	0	; () banked
 22535  001DC8  6FA1               	movwf	_MSDHostNoData& (0+255),b
 22536                           
 22537                           ; BSR set to: 0
 22538                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 22539                           
 22540                           ; BSR set to: 0
 22541  001DCA  C10F  F0A7         	movff	_gblCBW+15,_MSDCommandState
 22542                           
 22543                           ;usb_device_msd.c: 454: }
 22544  001DCE  0012               	return	
 22545  001DD0                     l562:
 22546                           
 22547                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 22548                           
 22549                           ; BSR set to: 0
 22550  001DD0  0E01               	movlw	1
 22551  001DD2  6E01               	movwf	USBStallEndpoint@dir,c
 22552  001DD4  0E02               	movlw	2
 22553  001DD6  ECD7  F01E         	call	_USBStallEndpoint
 22554                           
 22555                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 22556  001DDA  0E00               	movlw	0
 22557  001DDC  6E01               	movwf	USBStallEndpoint@dir,c
 22558  001DDE  0E02               	movlw	2
 22559  001DE0  ECD7  F01E         	call	_USBStallEndpoint
 22560                           
 22561                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 22562  001DE4  0012               	return	
 22563  001DE6                     l561:
 22564                           
 22565                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 22566  001DE6  0E01               	movlw	1
 22567  001DE8  6E01               	movwf	USBStallEndpoint@dir,c
 22568  001DEA  0E02               	movlw	2
 22569  001DEC  ECD7  F01E         	call	_USBStallEndpoint
 22570                           
 22571                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 22572  001DF0  0E00               	movlw	0
 22573  001DF2  6E01               	movwf	USBStallEndpoint@dir,c
 22574  001DF4  0E02               	movlw	2
 22575  001DF6  ECD7  F01E         	call	_USBStallEndpoint
 22576                           
 22577                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 22578  001DFA  0E00               	movlw	0
 22579  001DFC  0100               	movlb	0	; () banked
 22580  001DFE  6FA0               	movwf	_MSDCBWValid& (0+255),b
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 22584                           
 22585                           ; BSR set to: 0
 22586  001E00  0012               	return	
 22587  001E02                     
 22588                           ; BSR set to: 0
 22589                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 22590                           
 22591                           ; BSR set to: 0
 22592  001E02  EC4E  F01E         	call	_MSDProcessCommand	;wreg free
 22593  001E06  0AFF               	xorlw	255
 22594  001E08  A4D8               	btfss	status,2,c
 22595  001E0A  0012               	return	
 22596                           
 22597                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 22598  001E0C  0E03               	movlw	3
 22599  001E0E  0100               	movlb	0	; () banked
 22600  001E10  6FA8               	movwf	_MSD_State& (0+255),b
 22601                           
 22602                           ; BSR set to: 0
 22603                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 22604  001E12  0012               	return	
 22605  001E14                     
 22606                           ; BSR set to: 0
 22607                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 22608                           
 22609                           ; BSR set to: 0
 22610  001E14  EC4E  F01E         	call	_MSDProcessCommand	;wreg free
 22611  001E18  0AFF               	xorlw	255
 22612  001E1A  A4D8               	btfss	status,2,c
 22613  001E1C  0012               	return	
 22614                           
 22615                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 22616  001E1E  010D               	movlb	13	; () banked
 22617  001E20  518C               	movf	140,w,b	;volatile
 22618  001E22  A4D8               	btfss	status,2,c
 22619  001E24  D008               	goto	l575
 22620                           
 22621                           ; BSR set to: 13
 22622  001E26  5188               	movf	136,w,b	;volatile
 22623  001E28  1189               	iorwf	137,w,b	;volatile
 22624  001E2A  118A               	iorwf	138,w,b	;volatile
 22625  001E2C  118B               	iorwf	139,w,b	;volatile
 22626  001E2E  B4D8               	btfsc	status,2,c
 22627  001E30  D002               	goto	l575
 22628                           
 22629                           ; BSR set to: 13
 22630                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 22631  001E32  0E02               	movlw	2
 22632  001E34  6F8C               	movwf	140,b	;volatile
 22633  001E36                     l575:
 22634                           
 22635                           ; BSR set to: 13
 22636                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 22637  001E36  0E03               	movlw	3
 22638  001E38  0100               	movlb	0	; () banked
 22639  001E3A  6FA8               	movwf	_MSD_State& (0+255),b
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 22643  001E3C  0012               	return	
 22644  001E3E                     
 22645                           ; BSR set to: 0
 22646                           
 22647                           ; BSR set to: 0
 22648  001E3E  C070  F04F         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 22649  001E42  C071  F050         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 22650                           
 22651                           ; BSR set to: 0
 22652                           
 22653                           ; BSR set to: 0
 22654                           
 22655                           ; BSR set to: 0
 22656  001E46  504F               	movf	_MSDTasks$2372,w,c
 22657  001E48  1050               	iorwf	_MSDTasks$2372+1,w,c
 22658  001E4A  B4D8               	btfsc	status,2,c
 22659  001E4C  D00A               	goto	l577
 22660                           
 22661                           ; BSR set to: 0
 22662  001E4E  C070  F051         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 22663  001E52  C071  F052         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 22664                           
 22665                           ; BSR set to: 0
 22666                           
 22667                           ; BSR set to: 0
 22668                           
 22669                           ; BSR set to: 0
 22670                           
 22671                           ; BSR set to: 0
 22672  001E56  C051  FFD9         	movff	_MSDTasks$2373,fsr2l
 22673  001E5A  C052  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 22674  001E5E  BEDF               	btfsc	indf2,7,c
 22675  001E60  0012               	return	
 22676  001E62                     l577:
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 22680                           
 22681                           ; BSR set to: 0
 22682  001E62  0E01               	movlw	1
 22683  001E64  6E01               	movwf	USBTransferOnePacket@dir,c
 22684  001E66  0E80               	movlw	128
 22685  001E68  6E02               	movwf	USBTransferOnePacket@data,c
 22686  001E6A  0E0D               	movlw	13
 22687  001E6C  6E03               	movwf	USBTransferOnePacket@data+1,c
 22688  001E6E  0E0D               	movlw	13
 22689  001E70  6E04               	movwf	USBTransferOnePacket@len,c
 22690  001E72  0E02               	movlw	2
 22691  001E74  EC61  F020         	call	_USBTransferOnePacket
 22692  001E78  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 22693  001E7C  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 22694                           
 22695                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 22696  001E80  0100               	movlb	0	; () banked
 22697  001E82  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 22698  001E84  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22699  001E86  B4D8               	btfsc	status,2,c
 22700  001E88  D006               	goto	u10270
 22701                           
 22702                           ; BSR set to: 0
 22703  001E8A  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22704  001E8E  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22705  001E92  BEDF               	btfsc	indf2,7,c
 22706  001E94  D00F               	goto	l586
 22707  001E96                     u10270:
 22708                           
 22709                           ; BSR set to: 0
 22710                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 22711                           
 22712                           ; BSR set to: 0
 22713  001E96  0E00               	movlw	0
 22714  001E98  6E01               	movwf	USBTransferOnePacket@dir,c
 22715  001E9A  0E40               	movlw	64
 22716  001E9C  6E02               	movwf	USBTransferOnePacket@data,c
 22717  001E9E  0E0D               	movlw	13
 22718  001EA0  6E03               	movwf	USBTransferOnePacket@data+1,c
 22719  001EA2  0E40               	movlw	64
 22720  001EA4  6E04               	movwf	USBTransferOnePacket@len,c
 22721  001EA6  0E02               	movlw	2
 22722  001EA8  EC61  F020         	call	_USBTransferOnePacket
 22723  001EAC  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 22724  001EB0  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 22725  001EB4                     l586:
 22726                           
 22727                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 22728  001EB4  0E00               	movlw	0
 22729  001EB6  0100               	movlb	0	; () banked
 22730  001EB8  6FA8               	movwf	_MSD_State& (0+255),b
 22731                           
 22732                           ;usb_device_msd.c: 513: break;
 22733  001EBA  0012               	return	
 22734  001EBC                     
 22735                           ; BSR set to: 0
 22736                           ;usb_device_msd.c: 518: MSD_State=0x00;
 22737                           
 22738                           ; BSR set to: 0
 22739  001EBC  0E00               	movlw	0
 22740  001EBE  6FA8               	movwf	_MSD_State& (0+255),b
 22741                           
 22742                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 22743  001EC0  0E02               	movlw	2
 22744  001EC2  010D               	movlb	13	; () banked
 22745  001EC4  6F8C               	movwf	140,b	;volatile
 22746                           
 22747                           ; BSR set to: 13
 22748                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 22749  001EC6  0E00               	movlw	0
 22750  001EC8  6E01               	movwf	USBStallEndpoint@dir,c
 22751  001ECA  0E02               	movlw	2
 22752  001ECC  ECD7  F01E         	call	_USBStallEndpoint
 22753                           
 22754                           ;usb_device_msd.c: 521: }
 22755  001ED0  0012               	return	
 22756  001ED2                     l554:
 22757  001ED2  0100               	movlb	0	; () banked
 22758  001ED4  51A8               	movf	_MSD_State& (0+255),w,b
 22759                           
 22760                           ; Switch size 1, requested type "space"
 22761                           ; Number of cases is 4, Range of values is 0 to 3
 22762                           ; switch strategies available:
 22763                           ; Name         Instructions Cycles
 22764                           ; simple_byte           13     7 (average)
 22765                           ;	Chosen strategy is simple_byte
 22766  001ED6  0A00               	xorlw	0	; case 0
 22767  001ED8  B4D8               	btfsc	status,2,c
 22768  001EDA  D6E3               	goto	l555
 22769  001EDC  0A01               	xorlw	1	; case 1
 22770  001EDE  B4D8               	btfsc	status,2,c
 22771  001EE0  D790               	goto	l571
 22772  001EE2  0A03               	xorlw	3	; case 2
 22773  001EE4  B4D8               	btfsc	status,2,c
 22774  001EE6  D796               	goto	l573
 22775  001EE8  0A01               	xorlw	1	; case 3
 22776  001EEA  B4D8               	btfsc	status,2,c
 22777  001EEC  D7A8               	goto	l576
 22778  001EEE  D7E6               	goto	l589
 22779  001EF0                     __end_of_MSDTasks:
 22780                           	opt stack 0
 22781                           tosu	equ	0xFFF
 22782                           tosh	equ	0xFFE
 22783                           tosl	equ	0xFFD
 22784                           pclath	equ	0xFFA
 22785                           tblptru	equ	0xFF8
 22786                           tblptrh	equ	0xFF7
 22787                           tblptrl	equ	0xFF6
 22788                           tablat	equ	0xFF5
 22789                           prodh	equ	0xFF4
 22790                           prodl	equ	0xFF3
 22791                           intcon	equ	0xFF2
 22792                           intcon2	equ	0xFF1
 22793                           intcon3	equ	0xFF0
 22794                           indf0	equ	0xFEF
 22795                           postinc0	equ	0xFEE
 22796                           fsr0h	equ	0xFEA
 22797                           fsr0l	equ	0xFE9
 22798                           wreg	equ	0xFE8
 22799                           indf1	equ	0xFE7
 22800                           postdec1	equ	0xFE5
 22801                           plusw1	equ	0xFE3
 22802                           fsr1h	equ	0xFE2
 22803                           fsr1l	equ	0xFE1
 22804                           indf2	equ	0xFDF
 22805                           postinc2	equ	0xFDE
 22806                           postdec2	equ	0xFDD
 22807                           plusw2	equ	0xFDB
 22808                           fsr2h	equ	0xFDA
 22809                           fsr2l	equ	0xFD9
 22810                           status	equ	0xFD8
 22811                           
 22812 ;; *************** function _MSDProcessCommand *****************
 22813 ;; Defined at:
 22814 ;;		line 553 in file "usb_device_msd.c"
 22815 ;; Parameters:    Size  Location     Type
 22816 ;;		None
 22817 ;; Auto vars:     Size  Location     Type
 22818 ;;		None
 22819 ;; Return value:  Size  Location     Type
 22820 ;;                  1    wreg      unsigned char 
 22821 ;; Registers used:
 22822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22823 ;; Tracked objects:
 22824 ;;		On entry : 0/0
 22825 ;;		On exit  : 0/0
 22826 ;;		Unchanged: 0/0
 22827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22830 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22831 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22832 ;;Total ram usage:        5 bytes
 22833 ;; Hardware stack levels used:    1
 22834 ;; Hardware stack levels required when called:   11
 22835 ;; This function calls:
 22836 ;;		_ExternalFlash_MediaDetect
 22837 ;;		_ExternalFlash_MediaInitialize
 22838 ;;		_MSDProcessCommandMediaAbsent
 22839 ;;		_MSDProcessCommandMediaPresent
 22840 ;; This function is called by:
 22841 ;;		_MSDTasks
 22842 ;; This function uses a non-reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text105
 22846  003C9C                     __ptext105:
 22847                           	opt stack 0
 22848  003C9C                     _MSDProcessCommand:
 22849                           	opt stack 17
 22850                           
 22851                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 22852                           
 22853                           ;incstack = 0
 22854  003C9C  C1E8  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 22855  003CA0  C1E9  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 22856  003CA4  D801               	call	u9178
 22857  003CA6  D00A               	goto	u9179
 22858  003CA8                     u9178:
 22859  003CA8  0005               	push	
 22860  003CAA  6EFA               	movwf	pclath,c
 22861  003CAC  0101               	movlb	1	; () banked
 22862  003CAE  51E0               	movf	(_LUN+6)& (0+255),w,b
 22863  003CB0  6EFD               	movwf	tosl,c
 22864  003CB2  51E1               	movf	(_LUN+7)& (0+255),w,b
 22865  003CB4  6EFE               	movwf	tosh,c
 22866  003CB6  6AFF               	clrf	tosu,c
 22867  003CB8  50FA               	movf	pclath,w,c
 22868  003CBA  0012               	return		;indir
 22869  003CBC                     u9179:
 22870  003CBC  0900               	iorlw	0
 22871  003CBE  B4D8               	btfsc	status,2,c
 22872  003CC0  D00C               	goto	u9190
 22873  003CC2  0101               	movlb	1	; () banked
 22874  003CC4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22875  003CC6  0D01               	mullw	1
 22876  003CC8  0EA2               	movlw	low _SoftDetach
 22877  003CCA  24F3               	addwf	prodl,w,c
 22878  003CCC  6ED9               	movwf	fsr2l,c
 22879  003CCE  0E00               	movlw	high _SoftDetach
 22880  003CD0  20F4               	addwfc	prodh,w,c
 22881  003CD2  6EDA               	movwf	fsr2h,c
 22882  003CD4  04DE               	decf	postinc2,w,c
 22883  003CD6  A4D8               	btfss	status,2,c
 22884  003CD8  D019               	goto	l592
 22885  003CDA                     u9190:
 22886                           
 22887                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 22888                           
 22889                           ; BSR set to: 1
 22890  003CDA  C10D  F049         	movff	_gblCBW+13,??_MSDProcessCommand
 22891  003CDE  0E01               	movlw	1
 22892  003CE0  6E4A               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22893  003CE2  0E00               	movlw	0
 22894  003CE4  6E4B               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22895  003CE6  2A49               	incf	??_MSDProcessCommand,f,c
 22896  003CE8  D003               	goto	u9204
 22897  003CEA                     u9205:
 22898  003CEA  90D8               	bcf	status,0,c
 22899  003CEC  364A               	rlcf	??_MSDProcessCommand+1,f,c
 22900  003CEE  364B               	rlcf	??_MSDProcessCommand+2,f,c
 22901  003CF0                     u9204:
 22902  003CF0  2E49               	decfsz	??_MSDProcessCommand,f,c
 22903  003CF2  D7FB               	goto	u9205
 22904  003CF4  1C4A               	comf	??_MSDProcessCommand+1,w,c
 22905  003CF6  6E4C               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 22906  003CF8  1C4B               	comf	??_MSDProcessCommand+2,w,c
 22907  003CFA  6E4D               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 22908  003CFC  504C               	movf	??_MSDProcessCommand+3,w,c
 22909  003CFE  0101               	movlb	1	; () banked
 22910  003D00  176A               	andwf	_gblMediaPresent& (0+255),f,b
 22911  003D02  504D               	movf	??_MSDProcessCommand+4,w,c
 22912  003D04  176B               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 22913                           
 22914                           ; BSR set to: 1
 22915                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 22916  003D06  ECAC  F034         	call	_MSDProcessCommandMediaAbsent	;wreg free
 22917                           
 22918                           ;usb_device_msd.c: 563: }
 22919  003D0A  D04E               	goto	l599
 22920  003D0C                     l592:
 22921                           
 22922                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 22923  003D0C  C10D  F049         	movff	_gblCBW+13,??_MSDProcessCommand
 22924  003D10  0E01               	movlw	1
 22925  003D12  6E4A               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22926  003D14  0E00               	movlw	0
 22927  003D16  6E4B               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22928  003D18  2A49               	incf	??_MSDProcessCommand,f,c
 22929  003D1A  D003               	goto	u9214
 22930  003D1C                     u9215:
 22931  003D1C  90D8               	bcf	status,0,c
 22932  003D1E  364A               	rlcf	??_MSDProcessCommand+1,f,c
 22933  003D20  364B               	rlcf	??_MSDProcessCommand+2,f,c
 22934  003D22                     u9214:
 22935  003D22  2E49               	decfsz	??_MSDProcessCommand,f,c
 22936  003D24  D7FB               	goto	u9215
 22937  003D26  0101               	movlb	1	; () banked
 22938  003D28  516A               	movf	_gblMediaPresent& (0+255),w,b
 22939  003D2A  164A               	andwf	??_MSDProcessCommand+1,f,c
 22940  003D2C  516B               	movf	(_gblMediaPresent+1)& (0+255),w,b
 22941  003D2E  164B               	andwf	??_MSDProcessCommand+2,f,c
 22942  003D30  504A               	movf	??_MSDProcessCommand+1,w,c
 22943  003D32  104B               	iorwf	??_MSDProcessCommand+2,w,c
 22944  003D34  A4D8               	btfss	status,2,c
 22945  003D36  D036               	goto	l596
 22946                           
 22947                           ; BSR set to: 1
 22948                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 22949  003D38  C1E8  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 22950  003D3C  C1E9  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 22951  003D40  D801               	call	u9238
 22952  003D42  D009               	goto	u9239
 22953  003D44                     u9238:
 22954  003D44  0005               	push	
 22955  003D46  6EFA               	movwf	pclath,c
 22956  003D48  51DA               	movf	_LUN& (0+255),w,b
 22957  003D4A  6EFD               	movwf	tosl,c
 22958  003D4C  51DB               	movf	(_LUN+1)& (0+255),w,b
 22959  003D4E  6EFE               	movwf	tosh,c
 22960  003D50  6AFF               	clrf	tosu,c
 22961  003D52  50FA               	movf	pclath,w,c
 22962  003D54  0012               	return		;indir
 22963  003D56                     u9239:
 22964  003D56  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 22965  003D58  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 22966  003D5A  B4D8               	btfsc	status,2,c
 22967  003D5C  D020               	goto	l597
 22968                           
 22969                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 22970  003D5E  C10D  F049         	movff	_gblCBW+13,??_MSDProcessCommand
 22971  003D62  0E01               	movlw	1
 22972  003D64  6E4A               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22973  003D66  0E00               	movlw	0
 22974  003D68  6E4B               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22975  003D6A  2A49               	incf	??_MSDProcessCommand,f,c
 22976  003D6C  D003               	goto	u9254
 22977  003D6E                     u9255:
 22978  003D6E  90D8               	bcf	status,0,c
 22979  003D70  364A               	rlcf	??_MSDProcessCommand+1,f,c
 22980  003D72  364B               	rlcf	??_MSDProcessCommand+2,f,c
 22981  003D74                     u9254:
 22982  003D74  2E49               	decfsz	??_MSDProcessCommand,f,c
 22983  003D76  D7FB               	goto	u9255
 22984  003D78  504A               	movf	??_MSDProcessCommand+1,w,c
 22985  003D7A  0101               	movlb	1	; () banked
 22986  003D7C  136A               	iorwf	_gblMediaPresent& (0+255),f,b
 22987  003D7E  504B               	movf	??_MSDProcessCommand+2,w,c
 22988  003D80  136B               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 22989                           
 22990                           ; BSR set to: 1
 22991                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 22992  003D82  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22993  003D84  0BF0               	andlw	-16
 22994  003D86  0906               	iorlw	6
 22995  003D88  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22996                           
 22997                           ; BSR set to: 1
 22998                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 22999  003D8A  0E28               	movlw	40
 23000  003D8C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23001                           
 23002                           ; BSR set to: 1
 23003                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 23004  003D8E  0E00               	movlw	0
 23005  003D90  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23006                           
 23007                           ; BSR set to: 1
 23008                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 23009  003D92  0E01               	movlw	1
 23010  003D94  010D               	movlb	13	; () banked
 23011  003D96  6F8C               	movwf	140,b	;volatile
 23012                           
 23013                           ; BSR set to: 13
 23014                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 23015  003D98  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23016                           
 23017                           ;usb_device_msd.c: 589: }
 23018  003D9C  D005               	goto	l599
 23019  003D9E                     l597:
 23020                           
 23021                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23022  003D9E  ECAC  F034         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23023                           
 23024                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23025  003DA2  D002               	goto	l599
 23026  003DA4                     l596:
 23027                           
 23028                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23029  003DA4  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23030  003DA8                     l599:
 23031                           
 23032                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23033  003DA8  0100               	movlb	0	; () banked
 23034  003DAA  51A7               	movf	_MSDCommandState& (0+255),w,b
 23035  003DAC  0012               	return	
 23036  003DAE                     __end_of_MSDProcessCommand:
 23037                           	opt stack 0
 23038                           tosu	equ	0xFFF
 23039                           tosh	equ	0xFFE
 23040                           tosl	equ	0xFFD
 23041                           pclath	equ	0xFFA
 23042                           tblptru	equ	0xFF8
 23043                           tblptrh	equ	0xFF7
 23044                           tblptrl	equ	0xFF6
 23045                           tablat	equ	0xFF5
 23046                           prodh	equ	0xFF4
 23047                           prodl	equ	0xFF3
 23048                           intcon	equ	0xFF2
 23049                           intcon2	equ	0xFF1
 23050                           intcon3	equ	0xFF0
 23051                           indf0	equ	0xFEF
 23052                           postinc0	equ	0xFEE
 23053                           fsr0h	equ	0xFEA
 23054                           fsr0l	equ	0xFE9
 23055                           wreg	equ	0xFE8
 23056                           indf1	equ	0xFE7
 23057                           postdec1	equ	0xFE5
 23058                           plusw1	equ	0xFE3
 23059                           fsr1h	equ	0xFE2
 23060                           fsr1l	equ	0xFE1
 23061                           indf2	equ	0xFDF
 23062                           postinc2	equ	0xFDE
 23063                           postdec2	equ	0xFDD
 23064                           plusw2	equ	0xFDB
 23065                           fsr2h	equ	0xFDA
 23066                           fsr2l	equ	0xFD9
 23067                           status	equ	0xFD8
 23068                           
 23069 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23070 ;; Defined at:
 23071 ;;		line 635 in file "usb_device_msd.c"
 23072 ;; Parameters:    Size  Location     Type
 23073 ;;		None
 23074 ;; Auto vars:     Size  Location     Type
 23075 ;;		None
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1    wreg      void 
 23078 ;; Registers used:
 23079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23080 ;; Tracked objects:
 23081 ;;		On entry : 0/0
 23082 ;;		On exit  : 0/0
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23089 ;;Total ram usage:        0 bytes
 23090 ;; Hardware stack levels used:    1
 23091 ;; Hardware stack levels required when called:   10
 23092 ;; This function calls:
 23093 ;;		_MSDErrorHandler
 23094 ;;		_MSDProcessCommandMediaPresent
 23095 ;;		_ResetSenseData
 23096 ;; This function is called by:
 23097 ;;		_MSDProcessCommand
 23098 ;; This function uses a non-reentrant model
 23099 ;;
 23100                           
 23101                           	psect	text106
 23102  006958                     __ptext106:
 23103                           	opt stack 0
 23104  006958                     _MSDProcessCommandMediaAbsent:
 23105                           	opt stack 17
 23106                           
 23107                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 23108                           
 23109                           ; BSR set to: 0
 23110                           ;incstack = 0
 23111  006958  D01E               	goto	l603
 23112  00695A                     
 23113                           ;usb_device_msd.c: 646: ResetSenseData();
 23114  00695A  ECDD  F034         	call	_ResetSenseData	;wreg free
 23115                           
 23116                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 23117  00695E  0101               	movlb	1	; () banked
 23118  006960  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23119  006962  0BF0               	andlw	-16
 23120  006964  0902               	iorlw	2
 23121  006966  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23122                           
 23123                           ; BSR set to: 1
 23124                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 23125  006968  0E3A               	movlw	58
 23126  00696A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23127                           
 23128                           ; BSR set to: 1
 23129                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 23130  00696C  0E00               	movlw	0
 23131  00696E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 23135  006970  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23136                           
 23137                           ;usb_device_msd.c: 655: break;
 23138  006974  0012               	return	
 23139  006976                     
 23140                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 23141  006976  0E01               	movlw	1
 23142  006978  010D               	movlb	13	; () banked
 23143  00697A  6F8C               	movwf	140,b	;volatile
 23144                           
 23145                           ; BSR set to: 13
 23146                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 23147  00697C  0100               	movlb	0	; () banked
 23148  00697E  69A7               	setf	_MSDCommandState& (0+255),b
 23149                           
 23150                           ;usb_device_msd.c: 665: break;
 23151  006980  0012               	return	
 23152  006982                     
 23153                           ; BSR set to: 0
 23154                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 23155                           
 23156                           ; BSR set to: 0
 23157  006982  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23158                           
 23159                           ;usb_device_msd.c: 671: break;
 23160  006986  0012               	return	
 23161  006988                     
 23162                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 23163  006988  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23164                           
 23165                           ;usb_device_msd.c: 677: break;
 23166  00698C  0012               	return	
 23167  00698E                     
 23168                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 23169  00698E  0E7F               	movlw	127
 23170  006990  ECDE  F01F         	call	_MSDErrorHandler
 23171                           
 23172                           ;usb_device_msd.c: 685: }
 23173                           
 23174                           ;usb_device_msd.c: 684: break;
 23175  006994  0012               	return	
 23176  006996                     l603:
 23177  006996  0100               	movlb	0	; () banked
 23178  006998  51A7               	movf	_MSDCommandState& (0+255),w,b
 23179                           
 23180                           ; Switch size 1, requested type "space"
 23181                           ; Number of cases is 5, Range of values is 0 to 253
 23182                           ; switch strategies available:
 23183                           ; Name         Instructions Cycles
 23184                           ; simple_byte           16     9 (average)
 23185                           ;	Chosen strategy is simple_byte
 23186  00699A  0A00               	xorlw	0	; case 0
 23187  00699C  B4D8               	btfsc	status,2,c
 23188  00699E  D7EB               	goto	l606
 23189  0069A0  0A03               	xorlw	3	; case 3
 23190  0069A2  B4D8               	btfsc	status,2,c
 23191  0069A4  D7DA               	goto	l604
 23192  0069A6  0A11               	xorlw	17	; case 18
 23193  0069A8  B4D8               	btfsc	status,2,c
 23194  0069AA  D7EB               	goto	l608
 23195  0069AC  0A0C               	xorlw	12	; case 30
 23196  0069AE  B4D8               	btfsc	status,2,c
 23197  0069B0  D7E2               	goto	l606
 23198  0069B2  0AE3               	xorlw	227	; case 253
 23199  0069B4  B4D8               	btfsc	status,2,c
 23200  0069B6  D7E8               	goto	l609
 23201  0069B8  D7EA               	goto	l610
 23202  0069BA                     __end_of_MSDProcessCommandMediaAbsent:
 23203                           	opt stack 0
 23204                           tosu	equ	0xFFF
 23205                           tosh	equ	0xFFE
 23206                           tosl	equ	0xFFD
 23207                           pclath	equ	0xFFA
 23208                           tblptru	equ	0xFF8
 23209                           tblptrh	equ	0xFF7
 23210                           tblptrl	equ	0xFF6
 23211                           tablat	equ	0xFF5
 23212                           prodh	equ	0xFF4
 23213                           prodl	equ	0xFF3
 23214                           intcon	equ	0xFF2
 23215                           intcon2	equ	0xFF1
 23216                           intcon3	equ	0xFF0
 23217                           indf0	equ	0xFEF
 23218                           postinc0	equ	0xFEE
 23219                           fsr0h	equ	0xFEA
 23220                           fsr0l	equ	0xFE9
 23221                           wreg	equ	0xFE8
 23222                           indf1	equ	0xFE7
 23223                           postdec1	equ	0xFE5
 23224                           plusw1	equ	0xFE3
 23225                           fsr1h	equ	0xFE2
 23226                           fsr1l	equ	0xFE1
 23227                           indf2	equ	0xFDF
 23228                           postinc2	equ	0xFDE
 23229                           postdec2	equ	0xFDD
 23230                           plusw2	equ	0xFDB
 23231                           fsr2h	equ	0xFDA
 23232                           fsr2l	equ	0xFD9
 23233                           status	equ	0xFD8
 23234                           
 23235 ;; *************** function _MSDProcessCommandMediaPresent *****************
 23236 ;; Defined at:
 23237 ;;		line 712 in file "usb_device_msd.c"
 23238 ;; Parameters:    Size  Location     Type
 23239 ;;		None
 23240 ;; Auto vars:     Size  Location     Type
 23241 ;;  capacity        4   67[COMRAM] struct .
 23242 ;;  sectorSize      4   63[COMRAM] struct .
 23243 ;;  i               1   71[COMRAM] unsigned char 
 23244 ;;  NumBytesInPa    1   62[COMRAM] unsigned char 
 23245 ;; Return value:  Size  Location     Type
 23246 ;;                  1    wreg      void 
 23247 ;; Registers used:
 23248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23249 ;; Tracked objects:
 23250 ;;		On entry : 0/0
 23251 ;;		On exit  : 0/0
 23252 ;;		Unchanged: 0/0
 23253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23255 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23257 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23258 ;;Total ram usage:       14 bytes
 23259 ;; Hardware stack levels used:    1
 23260 ;; Hardware stack levels required when called:    9
 23261 ;; This function calls:
 23262 ;;		_ExternalFlash_CapacityRead
 23263 ;;		_ExternalFlash_SectorSizeRead
 23264 ;;		_ExternalFlash_WriteProtectStateGet
 23265 ;;		_MSDCheckForErrorCases
 23266 ;;		_MSDComputeDeviceInAndResidue
 23267 ;;		_MSDErrorHandler
 23268 ;;		_MSDReadHandler
 23269 ;;		_MSDWriteHandler
 23270 ;;		_ResetSenseData
 23271 ;;		_USBTransferOnePacket
 23272 ;;		_memcpy
 23273 ;; This function is called by:
 23274 ;;		_MSDProcessCommand
 23275 ;;		_MSDProcessCommandMediaAbsent
 23276 ;; This function uses a non-reentrant model
 23277 ;;
 23278                           
 23279                           	psect	text107
 23280  00049C                     __ptext107:
 23281                           	opt stack 0
 23282  00049C                     _MSDProcessCommandMediaPresent:
 23283                           	opt stack 18
 23284                           
 23285                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 23286                           
 23287                           ;incstack = 0
 23288  00049C  D1B9               	goto	l614
 23289  00049E                     
 23290                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 23291  00049E  EC8B  F015         	call	_MSDReadHandler	;wreg free
 23292  0004A2  0900               	iorlw	0
 23293  0004A4  A4D8               	btfss	status,2,c
 23294  0004A6  0012               	return	
 23295                           
 23296                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 23297  0004A8  0100               	movlb	0	; () banked
 23298  0004AA  69A7               	setf	_MSDCommandState& (0+255),b
 23299                           
 23300                           ; BSR set to: 0
 23301                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 23302  0004AC  0012               	return	
 23303  0004AE                     
 23304                           ; BSR set to: 0
 23305                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 23306                           
 23307                           ; BSR set to: 0
 23308  0004AE  EC7C  F00A         	call	_MSDWriteHandler	;wreg free
 23309  0004B2  0900               	iorlw	0
 23310  0004B4  A4D8               	btfss	status,2,c
 23311  0004B6  0012               	return	
 23312                           
 23313                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 23314  0004B8  0100               	movlb	0	; () banked
 23315  0004BA  69A7               	setf	_MSDCommandState& (0+255),b
 23316                           
 23317                           ; BSR set to: 0
 23318                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 23319  0004BC  0012               	return	
 23320  0004BE                     
 23321                           ; BSR set to: 0
 23322                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 23323                           
 23324                           ; BSR set to: 0
 23325  0004BE  05A1               	decf	_MSDHostNoData& (0+255),w,b
 23326  0004C0  A4D8               	btfss	status,2,c
 23327  0004C2  D002               	goto	l621
 23328                           
 23329                           ; BSR set to: 0
 23330                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 23331  0004C4  69A7               	setf	_MSDCommandState& (0+255),b
 23332                           
 23333                           ;usb_device_msd.c: 751: break;
 23334  0004C6  0012               	return	
 23335  0004C8                     l621:
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 23339  0004C8  C112  F08D         	movff	_gblCBW+18,_TransferLength+1
 23340                           
 23341                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 23342  0004CC  C113  F08C         	movff	_gblCBW+19,_TransferLength
 23343                           
 23344                           ; BSR set to: 0
 23345                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 23346  0004D0  C08C  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 23347  0004D4  C08D  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 23348  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 23349  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 23350  0004DC  ECBD  F022         	call	_MSDCheckForErrorCases	;wreg free
 23351  0004E0  0900               	iorlw	0
 23352  0004E2  A4D8               	btfss	status,2,c
 23353  0004E4  0012               	return	
 23354                           
 23355                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 23356                           
 23357                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 23358  0004E6  0E00               	movlw	0
 23359  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23360  0004EA  0E24               	movlw	36
 23361  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23362  0004EE  EC70  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23363                           
 23364                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 23365  0004F2  0E00               	movlw	0
 23366  0004F4  6E01               	movwf	memcpy@d1,c
 23367  0004F6  0E06               	movlw	6
 23368  0004F8  6E02               	movwf	memcpy@d1+1,c
 23369  0004FA  0E49               	movlw	low _inq_resp
 23370  0004FC  6E03               	movwf	memcpy@s1,c
 23371  0004FE  0E8F               	movlw	high _inq_resp
 23372  000500  6E04               	movwf	memcpy@s1+1,c
 23373  000502  5003               	movf	memcpy@s1,w,c
 23374  000504  1004               	iorwf	memcpy@s1+1,w,c
 23375  000506  A4D8               	btfss	status,2,c
 23376  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 23377  00050A  6E05               	movwf	memcpy@s1+2,c
 23378  00050C  0E00               	movlw	0
 23379  00050E  6E07               	movwf	memcpy@n+1,c
 23380  000510  0E24               	movlw	36
 23381  000512  6E06               	movwf	memcpy@n,c
 23382  000514  EC79  F034         	call	_memcpy	;wreg free
 23383                           
 23384                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 23385  000518  0EFD               	movlw	253
 23386  00051A  0100               	movlb	0	; () banked
 23387  00051C  6FA7               	movwf	_MSDCommandState& (0+255),b
 23388                           
 23389                           ;usb_device_msd.c: 773: break;
 23390  00051E  0012               	return	
 23391  000520                     
 23392                           ; BSR set to: 0
 23393                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 23394                           
 23395                           ; BSR set to: 0
 23396  000520  C1E8  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 23397  000524  C1E9  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 23398  000528  D801               	call	u8108
 23399  00052A  D00A               	goto	u8109
 23400  00052C                     u8108:
 23401  00052C  0005               	push	
 23402  00052E  6EFA               	movwf	pclath,c
 23403  000530  0101               	movlb	1	; () banked
 23404  000532  51DC               	movf	(_LUN+2)& (0+255),w,b
 23405  000534  6EFD               	movwf	tosl,c
 23406  000536  51DD               	movf	(_LUN+3)& (0+255),w,b
 23407  000538  6EFE               	movwf	tosh,c
 23408  00053A  6AFF               	clrf	tosu,c
 23409  00053C  50FA               	movf	pclath,w,c
 23410  00053E  0012               	return		;indir
 23411  000540                     u8109:
 23412  000540  C001  F044         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 23413  000544  C002  F045         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 23414  000548  C003  F046         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 23415  00054C  C004  F047         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 23416                           
 23417                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 23418  000550  C1E8  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 23419  000554  C1E9  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 23420  000558  D801               	call	u8118
 23421  00055A  D00A               	goto	u8119
 23422  00055C                     u8118:
 23423  00055C  0005               	push	
 23424  00055E  6EFA               	movwf	pclath,c
 23425  000560  0101               	movlb	1	; () banked
 23426  000562  51DE               	movf	(_LUN+4)& (0+255),w,b
 23427  000564  6EFD               	movwf	tosl,c
 23428  000566  51DF               	movf	(_LUN+5)& (0+255),w,b
 23429  000568  6EFE               	movwf	tosh,c
 23430  00056A  6AFF               	clrf	tosu,c
 23431  00056C  50FA               	movf	pclath,w,c
 23432  00056E  0012               	return		;indir
 23433  000570                     u8119:
 23434  000570  C001  F040         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 23435  000574  C002  F041         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 23436  000578  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 23437  00057A  6A43               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 23438                           
 23439                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 23440  00057C  EE26 F000          	lfsr	2,1536
 23441  000580  C047  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 23442                           
 23443                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 23444  000584  EE26 F001          	lfsr	2,1537	;volatile
 23445  000588  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 23446                           
 23447                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 23448  00058C  EE26 F002          	lfsr	2,1538	;volatile
 23449  000590  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 23450                           
 23451                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 23452  000594  EE26 F003          	lfsr	2,1539	;volatile
 23453  000598  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 23454                           
 23455                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 23456  00059C  EE26 F004          	lfsr	2,1540	;volatile
 23457  0005A0  C043  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 23458                           
 23459                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 23460  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 23461  0005A8  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 23462                           
 23463                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 23464  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 23465  0005B0  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 23466                           
 23467                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 23468  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 23469  0005B8  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 23470                           
 23471                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 23472  0005BC  0E00               	movlw	0
 23473  0005BE  0100               	movlb	0	; () banked
 23474  0005C0  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23475  0005C2  0E08               	movlw	8
 23476  0005C4  6F8C               	movwf	_TransferLength& (0+255),b
 23477                           
 23478                           ; BSR set to: 0
 23479                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 23480  0005C6  0E00               	movlw	0
 23481  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23482  0005CA  0E08               	movlw	8
 23483  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23484  0005CE  EC70  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23485                           
 23486                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 23487  0005D2  0EFD               	movlw	253
 23488  0005D4  0100               	movlb	0	; () banked
 23489  0005D6  6FA7               	movwf	_MSDCommandState& (0+255),b
 23490                           
 23491                           ;usb_device_msd.c: 802: break;
 23492  0005D8  0012               	return	
 23493  0005DA                     
 23494                           ; BSR set to: 0
 23495                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 23496                           
 23497                           ; BSR set to: 0
 23498  0005DA  05A1               	decf	_MSDHostNoData& (0+255),w,b
 23499  0005DC  A4D8               	btfss	status,2,c
 23500  0005DE  D002               	goto	l625
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 23504  0005E0  69A7               	setf	_MSDCommandState& (0+255),b
 23505                           
 23506                           ;usb_device_msd.c: 814: break;
 23507  0005E2  0012               	return	
 23508  0005E4                     l625:
 23509                           
 23510                           ; BSR set to: 0
 23511                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 23512                           
 23513                           ; BSR set to: 0
 23514  0005E4  0E00               	movlw	0
 23515  0005E6  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23516  0005E8  0E12               	movlw	18
 23517  0005EA  6F8C               	movwf	_TransferLength& (0+255),b
 23518                           
 23519                           ; BSR set to: 0
 23520                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 23521  0005EC  0E00               	movlw	0
 23522  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23523  0005F0  0E12               	movlw	18
 23524  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23525  0005F4  EC70  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23526                           
 23527                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 23528  0005F8  0E00               	movlw	0
 23529  0005FA  6E48               	movwf	MSDProcessCommandMediaPresent@i,c
 23530  0005FC                     l10691:
 23531  0005FC  0E11               	movlw	17
 23532  0005FE  6448               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 23533  000600  D001               	goto	l626
 23534  000602  D014               	goto	u8140
 23535  000604                     l626:
 23536                           
 23537                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 23538  000604  5048               	movf	MSDProcessCommandMediaPresent@i,w,c
 23539  000606  0D01               	mullw	1
 23540  000608  0E1F               	movlw	low _gblSenseData
 23541  00060A  24F3               	addwf	prodl,w,c
 23542  00060C  6ED9               	movwf	fsr2l,c
 23543  00060E  0E01               	movlw	high _gblSenseData
 23544  000610  20F4               	addwfc	prodh,w,c
 23545  000612  6EDA               	movwf	fsr2h,c
 23546  000614  5048               	movf	MSDProcessCommandMediaPresent@i,w,c
 23547  000616  0D01               	mullw	1
 23548  000618  0E00               	movlw	0
 23549  00061A  24F3               	addwf	prodl,w,c
 23550  00061C  6EE1               	movwf	fsr1l,c
 23551  00061E  0E06               	movlw	6
 23552  000620  20F4               	addwfc	prodh,w,c
 23553  000622  6EE2               	movwf	fsr1h,c
 23554  000624  CFDF FFE7          	movff	indf2,indf1
 23555  000628  2A48               	incf	MSDProcessCommandMediaPresent@i,f,c
 23556  00062A  D7E8               	goto	l10691
 23557  00062C                     u8140:
 23558                           
 23559                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 23560  00062C  0EFD               	movlw	253
 23561  00062E  0100               	movlb	0	; () banked
 23562  000630  6FA7               	movwf	_MSDCommandState& (0+255),b
 23563                           
 23564                           ;usb_device_msd.c: 827: break;
 23565  000632  0012               	return	
 23566  000634                     l628:
 23567                           
 23568                           ; BSR set to: 0
 23569                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 23570  000634  0E03               	movlw	3
 23571  000636  CFE8 F600          	movff	wreg,1536
 23572                           
 23573                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 23574  00063A  0E00               	movlw	0
 23575  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 23576                           
 23577                           ; BSR set to: 0
 23578                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 23579  000640  C1E8  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 23580  000644  C1E9  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 23581  000648  D801               	call	u8158
 23582  00064A  D00A               	goto	u8159
 23583  00064C                     u8158:
 23584  00064C  0005               	push	
 23585  00064E  6EFA               	movwf	pclath,c
 23586  000650  0101               	movlb	1	; () banked
 23587  000652  51E4               	movf	(_LUN+10)& (0+255),w,b
 23588  000654  6EFD               	movwf	tosl,c
 23589  000656  51E5               	movf	(_LUN+11)& (0+255),w,b
 23590  000658  6EFE               	movwf	tosh,c
 23591  00065A  6AFF               	clrf	tosu,c
 23592  00065C  50FA               	movf	pclath,w,c
 23593  00065E  0012               	return		;indir
 23594  000660                     u8159:
 23595  000660  0900               	iorlw	0
 23596  000662  A4D8               	btfss	status,2,c
 23597  000664  D004               	goto	l630
 23598  000666  0E00               	movlw	0
 23599  000668  6E3E               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 23600  00066A  0E00               	movlw	0
 23601  00066C  D003               	goto	L19
 23602  00066E                     l630:
 23603  00066E  0E00               	movlw	0
 23604  000670  6E3E               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 23605  000672  0E80               	movlw	128
 23606  000674                     L19:
 23607  000674  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390,c
 23608  000676  EE26 F002          	lfsr	2,1538	;volatile
 23609  00067A  C03D  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 23610                           
 23611                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 23612  00067E  0E00               	movlw	0
 23613  000680  CFE8 F603          	movff	wreg,1539	;volatile
 23614                           
 23615                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 23616  000684  0E00               	movlw	0
 23617  000686  0100               	movlb	0	; () banked
 23618  000688  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23619  00068A  0E04               	movlw	4
 23620  00068C  6F8C               	movwf	_TransferLength& (0+255),b
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 23624  00068E  0E00               	movlw	0
 23625  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23626  000692  0E04               	movlw	4
 23627  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23628  000696  EC70  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23629                           
 23630                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 23631  00069A  0EFD               	movlw	253
 23632  00069C  0100               	movlb	0	; () banked
 23633  00069E  6FA7               	movwf	_MSDCommandState& (0+255),b
 23634                           
 23635                           ;usb_device_msd.c: 839: break;
 23636  0006A0  0012               	return	
 23637  0006A2                     
 23638                           ; BSR set to: 0
 23639                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 23640                           
 23641                           ; BSR set to: 0
 23642  0006A2  0101               	movlb	1	; () banked
 23643  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23644  0006A6  0BF0               	andlw	-16
 23645  0006A8  0905               	iorlw	5
 23646  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23647                           
 23648                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 23649  0006AC  0E20               	movlw	32
 23650  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23651                           
 23652                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 23653  0006B0  0E00               	movlw	0
 23654  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23655                           
 23656                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 23657  0006B4  0E01               	movlw	1
 23658  0006B6  010D               	movlb	13	; () banked
 23659  0006B8  6F8C               	movwf	140,b	;volatile
 23660                           
 23661                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 23662  0006BA  0E00               	movlw	0
 23663  0006BC  6F88               	movwf	136,b	;volatile
 23664  0006BE  0E00               	movlw	0
 23665  0006C0  6F89               	movwf	137,b	;volatile
 23666  0006C2  0E00               	movlw	0
 23667  0006C4  6F8A               	movwf	138,b	;volatile
 23668  0006C6  0E00               	movlw	0
 23669  0006C8  6F8B               	movwf	139,b	;volatile
 23670                           
 23671                           ; BSR set to: 13
 23672                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 23673  0006CA  0100               	movlb	0	; () banked
 23674  0006CC  69A7               	setf	_MSDCommandState& (0+255),b
 23675                           
 23676                           ;usb_device_msd.c: 848: break;
 23677  0006CE  0012               	return	
 23678  0006D0                     
 23679                           ; BSR set to: 0
 23680                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 23681                           
 23682                           ; BSR set to: 0
 23683  0006D0  0E00               	movlw	0
 23684  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 23685  0006D4  0E00               	movlw	0
 23686  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 23687  0006D8  0E00               	movlw	0
 23688  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 23689  0006DC  0E00               	movlw	0
 23690  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 23691  0006E0  ECBD  F022         	call	_MSDCheckForErrorCases	;wreg free
 23692  0006E4  0900               	iorlw	0
 23693  0006E6  A4D8               	btfss	status,2,c
 23694  0006E8  0012               	return	
 23695                           
 23696                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 23697                           
 23698                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 23699  0006EA  0101               	movlb	1	; () banked
 23700  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23701  0006EE  0B0F               	andlw	15
 23702  0006F0  0A06               	xorlw	6
 23703  0006F2  A4D8               	btfss	status,2,c
 23704  0006F4  D007               	goto	l636
 23705                           
 23706                           ; BSR set to: 1
 23707  0006F6  010D               	movlb	13	; () banked
 23708  0006F8  058C               	decf	140,w,b	;volatile
 23709  0006FA  A4D8               	btfss	status,2,c
 23710  0006FC  D003               	goto	l636
 23711                           
 23712                           ; BSR set to: 13
 23713                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 23714  0006FE  0100               	movlb	0	; () banked
 23715  000700  69A7               	setf	_MSDCommandState& (0+255),b
 23716                           
 23717                           ;usb_device_msd.c: 870: }
 23718  000702  0012               	return	
 23719  000704                     l636:
 23720                           
 23721                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 23722                           
 23723                           ; BSR set to: 0
 23724  000704  ECDD  F034         	call	_ResetSenseData	;wreg free
 23725                           
 23726                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 23727  000708  0E00               	movlw	0
 23728  00070A  010D               	movlb	13	; () banked
 23729  00070C  6F88               	movwf	136,b	;volatile
 23730  00070E  0E00               	movlw	0
 23731  000710  6F89               	movwf	137,b	;volatile
 23732  000712  0E00               	movlw	0
 23733  000714  6F8A               	movwf	138,b	;volatile
 23734  000716  0E00               	movlw	0
 23735  000718  6F8B               	movwf	139,b	;volatile
 23736                           
 23737                           ; BSR set to: 13
 23738                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 23739  00071A  0100               	movlb	0	; () banked
 23740  00071C  69A7               	setf	_MSDCommandState& (0+255),b
 23741                           
 23742                           ; BSR set to: 0
 23743                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 23744  00071E  0012               	return	
 23745  000720                     
 23746                           ; BSR set to: 0
 23747                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 23748                           
 23749                           ; BSR set to: 0
 23750                           
 23751                           ; BSR set to: 0
 23752  000720  0E00               	movlw	0
 23753  000722  010D               	movlb	13	; () banked
 23754  000724  6F88               	movwf	136,b	;volatile
 23755  000726  0E00               	movlw	0
 23756  000728  6F89               	movwf	137,b	;volatile
 23757  00072A  0E00               	movlw	0
 23758  00072C  6F8A               	movwf	138,b	;volatile
 23759  00072E  0E00               	movlw	0
 23760  000730  6F8B               	movwf	139,b	;volatile
 23761                           
 23762                           ; BSR set to: 13
 23763                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 23764  000732  0100               	movlb	0	; () banked
 23765  000734  69A7               	setf	_MSDCommandState& (0+255),b
 23766                           
 23767                           ;usb_device_msd.c: 885: break;
 23768  000736  0012               	return	
 23769  000738                     
 23770                           ; BSR set to: 0
 23771                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 23772                           
 23773                           ; BSR set to: 0
 23774  000738  518E               	movf	_USBMSDInHandle& (0+255),w,b
 23775  00073A  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 23776  00073C  B4D8               	btfsc	status,2,c
 23777  00073E  D006               	goto	u8210
 23778                           
 23779                           ; BSR set to: 0
 23780  000740  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 23781  000744  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 23782  000748  BEDF               	btfsc	indf2,7,c
 23783  00074A  0012               	return	
 23784  00074C                     u8210:
 23785                           
 23786                           ; BSR set to: 0
 23787                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 23788                           
 23789                           ; BSR set to: 0
 23790  00074C  0101               	movlb	1	; () banked
 23791  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23792  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23793  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23794  000754  E104               	bnz	u8220
 23795  000756  0E40               	movlw	64
 23796  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23797  00075A  A0D8               	btfss	status,0,c
 23798  00075C  D009               	goto	l644
 23799  00075E                     u8220:
 23800                           
 23801                           ; BSR set to: 1
 23802                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 23803  00075E  0E40               	movlw	64
 23804  000760  6E3F               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 23805                           
 23806                           ; BSR set to: 1
 23807                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 23808  000762  0E40               	movlw	64
 23809  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 23810  000766  0E00               	movlw	0
 23811  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 23812  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 23813  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 23814                           
 23815                           ;usb_device_msd.c: 900: }
 23816  00076E  D00A               	goto	l645
 23817  000770                     l644:
 23818                           
 23819                           ; BSR set to: 1
 23820                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 23821  000770  C108  F03F         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 23822                           
 23823                           ; BSR set to: 1
 23824                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 23825  000774  0E00               	movlw	0
 23826  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 23827  000778  0E00               	movlw	0
 23828  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 23829  00077C  0E00               	movlw	0
 23830  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 23831  000780  0E00               	movlw	0
 23832  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 23833  000784                     l645:
 23834                           
 23835                           ; BSR set to: 1
 23836                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 23837                           
 23838                           ; BSR set to: 1
 23839  000784  503F               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23840  000786  6E3B               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 23841  000788  6A3C               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 23842  00078A  503B               	movf	??_MSDProcessCommandMediaPresent,w,c
 23843  00078C  0100               	movlb	0	; () banked
 23844  00078E  5D8C               	subwf	_TransferLength& (0+255),w,b
 23845  000790  503C               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 23846  000792  598D               	subwfb	(_TransferLength+1)& (0+255),w,b
 23847  000794  A0D8               	btfss	status,0,c
 23848  000796  D005               	goto	l646
 23849                           
 23850                           ; BSR set to: 0
 23851                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 23852  000798  503F               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23853  00079A  5F8C               	subwf	_TransferLength& (0+255),f,b
 23854  00079C  0E00               	movlw	0
 23855  00079E  5B8D               	subwfb	(_TransferLength+1)& (0+255),f,b
 23856                           
 23857                           ;usb_device_msd.c: 918: }
 23858  0007A0  D01A               	goto	u8250
 23859  0007A2                     l646:
 23860                           
 23861                           ; BSR set to: 0
 23862                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 23863                           
 23864                           ; BSR set to: 0
 23865  0007A2  0E00               	movlw	0
 23866  0007A4  6E48               	movwf	MSDProcessCommandMediaPresent@i,c
 23867  0007A6  D013               	goto	l648
 23868  0007A8                     
 23869                           ; BSR set to: 0
 23870                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 23871                           
 23872                           ; BSR set to: 0
 23873  0007A8  518C               	movf	_TransferLength& (0+255),w,b
 23874  0007AA  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 23875  0007AC  B4D8               	btfsc	status,2,c
 23876  0007AE  D004               	goto	l650
 23877                           
 23878                           ; BSR set to: 0
 23879                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 23880  0007B0  078C               	decf	_TransferLength& (0+255),f,b
 23881  0007B2  A0D8               	btfss	status,0,c
 23882  0007B4  078D               	decf	(_TransferLength+1)& (0+255),f,b
 23883                           
 23884                           ;usb_device_msd.c: 932: }
 23885  0007B6  D00A               	goto	l651
 23886  0007B8                     l650:
 23887                           
 23888                           ; BSR set to: 0
 23889                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 23890                           
 23891                           ; BSR set to: 0
 23892  0007B8  5048               	movf	MSDProcessCommandMediaPresent@i,w,c
 23893  0007BA  0D01               	mullw	1
 23894  0007BC  0E00               	movlw	0
 23895  0007BE  24F3               	addwf	prodl,w,c
 23896  0007C0  6ED9               	movwf	fsr2l,c
 23897  0007C2  0E06               	movlw	6
 23898  0007C4  20F4               	addwfc	prodh,w,c
 23899  0007C6  6EDA               	movwf	fsr2h,c
 23900  0007C8  0E00               	movlw	0
 23901  0007CA  6EDF               	movwf	indf2,c
 23902  0007CC                     l651:
 23903                           
 23904                           ; BSR set to: 0
 23905                           
 23906                           ; BSR set to: 0
 23907  0007CC  2A48               	incf	MSDProcessCommandMediaPresent@i,f,c
 23908  0007CE                     l648:
 23909                           
 23910                           ; BSR set to: 0
 23911                           
 23912                           ; BSR set to: 0
 23913  0007CE  503F               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23914  0007D0  5C48               	subwf	MSDProcessCommandMediaPresent@i,w,c
 23915  0007D2  A0D8               	btfss	status,0,c
 23916  0007D4  D7E9               	goto	l649
 23917  0007D6                     u8250:
 23918                           
 23919                           ; BSR set to: 0
 23920                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 23921                           
 23922                           ; BSR set to: 0
 23923                           
 23924                           ; BSR set to: 0
 23925  0007D6  0E01               	movlw	1
 23926  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 23927  0007DA  0E00               	movlw	0
 23928  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 23929  0007DE  0E06               	movlw	6
 23930  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 23931  0007E2  C03F  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 23932  0007E6  0E02               	movlw	2
 23933  0007E8  EC61  F020         	call	_USBTransferOnePacket
 23934  0007EC  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23935  0007F0  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23936                           
 23937                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 23938  0007F4  0101               	movlb	1	; () banked
 23939  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23940  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23941  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23942  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 23943  0007FE  A4D8               	btfss	status,2,c
 23944  000800  0012               	return	
 23945                           
 23946                           ; BSR set to: 1
 23947                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 23948  000802  0100               	movlb	0	; () banked
 23949  000804  69A7               	setf	_MSDCommandState& (0+255),b
 23950                           
 23951                           ; BSR set to: 0
 23952                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 23953                           
 23954                           ; BSR set to: 0
 23955                           
 23956                           ;usb_device_msd.c: 949: break;
 23957  000806  0012               	return	
 23958  000808                     
 23959                           ; BSR set to: 0
 23960                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 23961                           
 23962                           ; BSR set to: 0
 23963                           
 23964                           ;usb_device_msd.c: 954: default:
 23965                           
 23966                           ; BSR set to: 0
 23967  000808  0E7F               	movlw	127
 23968  00080A  ECDE  F01F         	call	_MSDErrorHandler
 23969                           
 23970                           ;usb_device_msd.c: 960: }
 23971                           
 23972                           ;usb_device_msd.c: 959: break;
 23973  00080E  0012               	return	
 23974  000810                     l614:
 23975  000810  0100               	movlb	0	; () banked
 23976  000812  51A7               	movf	_MSDCommandState& (0+255),w,b
 23977                           
 23978                           ; Switch size 1, requested type "space"
 23979                           ; Number of cases is 12, Range of values is 0 to 254
 23980                           ; switch strategies available:
 23981                           ; Name         Instructions Cycles
 23982                           ; simple_byte           37    19 (average)
 23983                           ;	Chosen strategy is simple_byte
 23984  000814  0A00               	xorlw	0	; case 0
 23985  000816  B4D8               	btfsc	status,2,c
 23986  000818  D75B               	goto	l634
 23987  00081A  0A03               	xorlw	3	; case 3
 23988  00081C  B4D8               	btfsc	status,2,c
 23989  00081E  D6DD               	goto	l624
 23990  000820  0A11               	xorlw	17	; case 18
 23991  000822  B4D8               	btfsc	status,2,c
 23992  000824  D64C               	goto	l620
 23993  000826  0A08               	xorlw	8	; case 26
 23994  000828  B4D8               	btfsc	status,2,c
 23995  00082A  D704               	goto	l628
 23996  00082C  0A01               	xorlw	1	; case 27
 23997  00082E  B4D8               	btfsc	status,2,c
 23998  000830  D777               	goto	l638
 23999  000832  0A05               	xorlw	5	; case 30
 24000  000834  B4D8               	btfsc	status,2,c
 24001  000836  D735               	goto	l633
 24002  000838  0A3B               	xorlw	59	; case 37
 24003  00083A  B4D8               	btfsc	status,2,c
 24004  00083C  D671               	goto	l623
 24005  00083E  0A0D               	xorlw	13	; case 40
 24006  000840  B4D8               	btfsc	status,2,c
 24007  000842  D62D               	goto	l615
 24008  000844  0A02               	xorlw	2	; case 42
 24009  000846  B4D8               	btfsc	status,2,c
 24010  000848  D632               	goto	l618
 24011  00084A  0A05               	xorlw	5	; case 47
 24012  00084C  B4D8               	btfsc	status,2,c
 24013  00084E  D768               	goto	l638
 24014  000850  0AD2               	xorlw	210	; case 253
 24015  000852  B4D8               	btfsc	status,2,c
 24016  000854  D771               	goto	l640
 24017  000856  0A03               	xorlw	3	; case 254
 24018  000858  D7D7               	goto	l654
 24019  00085A                     __end_of_MSDProcessCommandMediaPresent:
 24020                           	opt stack 0
 24021                           tosu	equ	0xFFF
 24022                           tosh	equ	0xFFE
 24023                           tosl	equ	0xFFD
 24024                           pclath	equ	0xFFA
 24025                           tblptru	equ	0xFF8
 24026                           tblptrh	equ	0xFF7
 24027                           tblptrl	equ	0xFF6
 24028                           tablat	equ	0xFF5
 24029                           prodh	equ	0xFF4
 24030                           prodl	equ	0xFF3
 24031                           intcon	equ	0xFF2
 24032                           intcon2	equ	0xFF1
 24033                           intcon3	equ	0xFF0
 24034                           indf0	equ	0xFEF
 24035                           postinc0	equ	0xFEE
 24036                           fsr0h	equ	0xFEA
 24037                           fsr0l	equ	0xFE9
 24038                           wreg	equ	0xFE8
 24039                           indf1	equ	0xFE7
 24040                           postdec1	equ	0xFE5
 24041                           plusw1	equ	0xFE3
 24042                           fsr1h	equ	0xFE2
 24043                           fsr1l	equ	0xFE1
 24044                           indf2	equ	0xFDF
 24045                           postinc2	equ	0xFDE
 24046                           postdec2	equ	0xFDD
 24047                           plusw2	equ	0xFDB
 24048                           fsr2h	equ	0xFDA
 24049                           fsr2l	equ	0xFD9
 24050                           status	equ	0xFD8
 24051                           
 24052 ;; *************** function _MSDWriteHandler *****************
 24053 ;; Defined at:
 24054 ;;		line 1188 in file "usb_device_msd.c"
 24055 ;; Parameters:    Size  Location     Type
 24056 ;;		None
 24057 ;; Auto vars:     Size  Location     Type
 24058 ;;		None
 24059 ;; Return value:  Size  Location     Type
 24060 ;;                  1    wreg      unsigned char 
 24061 ;; Registers used:
 24062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24063 ;; Tracked objects:
 24064 ;;		On entry : 0/0
 24065 ;;		On exit  : 0/0
 24066 ;;		Unchanged: 0/0
 24067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24070 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24071 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24072 ;;Total ram usage:        5 bytes
 24073 ;; Hardware stack levels used:    1
 24074 ;; Hardware stack levels required when called:    7
 24075 ;; This function calls:
 24076 ;;		_ExternalFlash_SectorWrite
 24077 ;;		_ExternalFlash_WriteProtectStateGet
 24078 ;;		_MSDCheckForErrorCases
 24079 ;;		_USBStallEndpoint
 24080 ;;		_USBTransferOnePacket
 24081 ;; This function is called by:
 24082 ;;		_MSDProcessCommandMediaPresent
 24083 ;; This function uses a non-reentrant model
 24084 ;;
 24085                           
 24086                           	psect	text108
 24087  0014F8                     __ptext108:
 24088                           	opt stack 0
 24089  0014F8                     _MSDWriteHandler:
 24090                           	opt stack 19
 24091                           
 24092                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 24093                           
 24094                           ;incstack = 0
 24095  0014F8  D144               	goto	l684
 24096  0014FA                     l685:
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 24100  0014FA  C111  F083         	movff	_gblCBW+17,_LBA+3
 24101                           
 24102                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 24103  0014FE  C112  F082         	movff	_gblCBW+18,_LBA+2
 24104                           
 24105                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 24106  001502  C113  F081         	movff	_gblCBW+19,_LBA+1
 24107                           
 24108                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 24109  001506  C114  F080         	movff	_gblCBW+20,_LBA
 24110                           
 24111                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 24112  00150A  C116  F08D         	movff	_gblCBW+22,_TransferLength+1
 24113                           
 24114                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 24115  00150E  C117  F08C         	movff	_gblCBW+23,_TransferLength
 24116                           
 24117                           ; BSR set to: 0
 24118                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24119  001512  518C               	movf	_TransferLength& (0+255),w,b
 24120  001514  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24121  001516  518D               	movf	(_TransferLength+1)& (0+255),w,b
 24122  001518  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 24123  00151A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24124  00151C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24125  00151E  0E09               	movlw	9
 24126  001520                     u7125:
 24127  001520  90D8               	bcf	status,0,c
 24128  001522  3630               	rlcf	??_MSDWriteHandler,f,c
 24129  001524  3631               	rlcf	??_MSDWriteHandler+1,f,c
 24130  001526  3632               	rlcf	??_MSDWriteHandler+2,f,c
 24131  001528  3633               	rlcf	??_MSDWriteHandler+3,f,c
 24132  00152A  2EE8               	decfsz	wreg,f,c
 24133  00152C  D7F9               	goto	u7125
 24134  00152E  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 24135  001532  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 24136  001536  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 24137  00153A  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 24138  00153E  ECBD  F022         	call	_MSDCheckForErrorCases	;wreg free
 24139  001542  0900               	iorlw	0
 24140  001544  A4D8               	btfss	status,2,c
 24141  001546  D12F               	goto	l687
 24142                           
 24143                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 24144                           
 24145                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 24146  001548  C1E8  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24147  00154C  C1E9  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24148  001550  D801               	call	u7148
 24149  001552  D00A               	goto	u7149
 24150  001554                     u7148:
 24151  001554  0005               	push	
 24152  001556  6EFA               	movwf	pclath,c
 24153  001558  0101               	movlb	1	; () banked
 24154  00155A  51E4               	movf	(_LUN+10)& (0+255),w,b
 24155  00155C  6EFD               	movwf	tosl,c
 24156  00155E  51E5               	movf	(_LUN+11)& (0+255),w,b
 24157  001560  6EFE               	movwf	tosh,c
 24158  001562  6AFF               	clrf	tosu,c
 24159  001564  50FA               	movf	pclath,w,c
 24160  001566  0012               	return		;indir
 24161  001568                     u7149:
 24162  001568  0900               	iorlw	0
 24163  00156A  B4D8               	btfsc	status,2,c
 24164  00156C  D016               	goto	l688
 24165                           
 24166                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 24167  00156E  0E01               	movlw	1
 24168  001570  010D               	movlb	13	; () banked
 24169  001572  6F8C               	movwf	140,b	;volatile
 24170                           
 24171                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 24172  001574  0101               	movlb	1	; () banked
 24173  001576  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24174  001578  0BF0               	andlw	-16
 24175  00157A  0907               	iorlw	7
 24176  00157C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24177                           
 24178                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 24179  00157E  0E27               	movlw	39
 24180  001580  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24181                           
 24182                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 24183  001582  0E00               	movlw	0
 24184  001584  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24185                           
 24186                           ; BSR set to: 1
 24187                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 24188  001586  0E00               	movlw	0
 24189  001588  6E01               	movwf	USBStallEndpoint@dir,c
 24190  00158A  0E02               	movlw	2
 24191  00158C  ECD7  F01E         	call	_USBStallEndpoint
 24192                           
 24193                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 24194  001590  0E00               	movlw	0
 24195  001592  0100               	movlb	0	; () banked
 24196  001594  6FA5               	movwf	_MSDWriteState& (0+255),b
 24197                           
 24198                           ; BSR set to: 0
 24199                           ;usb_device_msd.c: 1228: return MSDWriteState;
 24200  001596  51A5               	movf	_MSDWriteState& (0+255),w,b
 24201                           
 24202                           ; BSR set to: 0
 24203  001598  0012               	return	
 24204  00159A                     l688:
 24205                           
 24206                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 24207                           
 24208                           ; BSR set to: 0
 24209  00159A  0E01               	movlw	1
 24210  00159C  0100               	movlb	0	; () banked
 24211  00159E  6FA8               	movwf	_MSD_State& (0+255),b
 24212  0015A0                     
 24213                           ; BSR set to: 0
 24214                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 24215                           
 24216                           ; BSR set to: 0
 24217  0015A0  518C               	movf	_TransferLength& (0+255),w,b
 24218  0015A2  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 24219  0015A4  A4D8               	btfss	status,2,c
 24220  0015A6  D002               	goto	l691
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 24224  0015A8  0E00               	movlw	0
 24225  0015AA  D0E9               	goto	L23
 24226  0015AC                     l691:
 24227                           
 24228                           ; BSR set to: 0
 24229                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 24230                           
 24231                           ; BSR set to: 0
 24232  0015AC  0E03               	movlw	3
 24233  0015AE  6FA5               	movwf	_MSDWriteState& (0+255),b
 24234                           
 24235                           ; BSR set to: 0
 24236                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 24237  0015B0  0E00               	movlw	0
 24238  0015B2  6F92               	movwf	_ptrNextData& (0+255),b
 24239  0015B4  0E06               	movlw	6
 24240  0015B6  6F93               	movwf	(_ptrNextData+1)& (0+255),b
 24241                           
 24242                           ; BSR set to: 0
 24243                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 24244  0015B8  0E00               	movlw	0
 24245  0015BA  010D               	movlb	13	; () banked
 24246  0015BC  6F88               	movwf	136,b	;volatile
 24247  0015BE  0E02               	movlw	2
 24248  0015C0  6F89               	movwf	137,b	;volatile
 24249  0015C2  0E00               	movlw	0
 24250  0015C4  6F8A               	movwf	138,b	;volatile
 24251  0015C6  0E00               	movlw	0
 24252  0015C8  6F8B               	movwf	139,b	;volatile
 24253  0015CA                     l692:
 24254                           
 24255                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 24256  0015CA  010D               	movlb	13	; () banked
 24257  0015CC  5188               	movf	136,w,b	;volatile
 24258  0015CE  1189               	iorwf	137,w,b	;volatile
 24259  0015D0  118A               	iorwf	138,w,b	;volatile
 24260  0015D2  118B               	iorwf	139,w,b	;volatile
 24261  0015D4  B4D8               	btfsc	status,2,c
 24262  0015D6  D01E               	goto	l693
 24263                           
 24264                           ; BSR set to: 13
 24265                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 24266  0015D8  0100               	movlb	0	; () banked
 24267  0015DA  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24268  0015DC  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24269  0015DE  B4D8               	btfsc	status,2,c
 24270  0015E0  D006               	goto	l694
 24271                           
 24272                           ; BSR set to: 0
 24273  0015E2  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24274  0015E6  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24275  0015EA  BEDF               	btfsc	indf2,7,c
 24276  0015EC  D0DC               	goto	l687
 24277  0015EE                     l694:
 24278                           
 24279                           ; BSR set to: 0
 24280                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 24281                           
 24282                           ; BSR set to: 0
 24283  0015EE  0E00               	movlw	0
 24284  0015F0  6E01               	movwf	USBTransferOnePacket@dir,c
 24285  0015F2  C092  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 24286  0015F6  C093  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 24287  0015FA  0E40               	movlw	64
 24288  0015FC  6E04               	movwf	USBTransferOnePacket@len,c
 24289  0015FE  0E02               	movlw	2
 24290  001600  EC61  F020         	call	_USBTransferOnePacket
 24291  001604  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24292  001608  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24293                           
 24294                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 24295  00160C  0E04               	movlw	4
 24296  00160E  0100               	movlb	0	; () banked
 24297  001610  6FA5               	movwf	_MSDWriteState& (0+255),b
 24298                           
 24299                           ;usb_device_msd.c: 1260: }
 24300  001612  D021               	goto	l695
 24301  001614                     l693:
 24302                           
 24303                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 24304                           
 24305                           ; BSR set to: 0
 24306  001614  C1E8  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24307  001618  C1E9  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24308  00161C  D801               	call	u7208
 24309  00161E  D00A               	goto	u7209
 24310  001620                     u7208:
 24311  001620  0005               	push	
 24312  001622  6EFA               	movwf	pclath,c
 24313  001624  0101               	movlb	1	; () banked
 24314  001626  51E4               	movf	(_LUN+10)& (0+255),w,b
 24315  001628  6EFD               	movwf	tosl,c
 24316  00162A  51E5               	movf	(_LUN+11)& (0+255),w,b
 24317  00162C  6EFE               	movwf	tosh,c
 24318  00162E  6AFF               	clrf	tosu,c
 24319  001630  50FA               	movf	pclath,w,c
 24320  001632  0012               	return		;indir
 24321  001634                     u7209:
 24322  001634  0900               	iorlw	0
 24323  001636  B4D8               	btfsc	status,2,c
 24324  001638  D00C               	goto	l696
 24325                           
 24326                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 24327  00163A  0E01               	movlw	1
 24328  00163C  010D               	movlb	13	; () banked
 24329  00163E  6F8C               	movwf	140,b	;volatile
 24330                           
 24331                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 24332  001640  0101               	movlb	1	; () banked
 24333  001642  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24334  001644  0BF0               	andlw	-16
 24335  001646  0902               	iorlw	2
 24336  001648  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24337                           
 24338                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 24339  00164A  0E27               	movlw	39
 24340  00164C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24341                           
 24342                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 24343  00164E  0E00               	movlw	0
 24344  001650  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24345  001652                     l696:
 24346                           
 24347                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 24348  001652  0E02               	movlw	2
 24349  001654  D093               	goto	L43
 24350  001656                     l695:
 24351                           
 24352                           ; BSR set to: 0
 24353                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 24354                           
 24355                           ; BSR set to: 0
 24356                           
 24357                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 24358                           
 24359                           ; BSR set to: 0
 24360  001656  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24361  001658  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24362  00165A  B4D8               	btfsc	status,2,c
 24363  00165C  D006               	goto	l698
 24364                           
 24365                           ; BSR set to: 0
 24366  00165E  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24367  001662  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24368  001666  BEDF               	btfsc	indf2,7,c
 24369  001668  D09E               	goto	l687
 24370  00166A                     l698:
 24371                           
 24372                           ; BSR set to: 0
 24373                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 24374                           
 24375                           ; BSR set to: 0
 24376  00166A  EE20 F001          	lfsr	2,1
 24377  00166E  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24378  001670  26D9               	addwf	fsr2l,f,c
 24379  001672  5191               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24380  001674  22DA               	addwfc	fsr2h,f,c
 24381  001676  50DF               	movf	indf2,w,c
 24382  001678  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24383  00167A  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24384  00167E  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24385  001680  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24386  001682  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24387  001684  5031               	movf	??_MSDWriteHandler+1,w,c
 24388  001686  0101               	movlb	1	; () banked
 24389  001688  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24390  00168A  5032               	movf	??_MSDWriteHandler+2,w,c
 24391  00168C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24392  00168E  5033               	movf	??_MSDWriteHandler+3,w,c
 24393  001690  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24394  001692  5034               	movf	??_MSDWriteHandler+4,w,c
 24395  001694  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24396                           
 24397                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 24398  001696  0100               	movlb	0	; () banked
 24399  001698  EE20 F001          	lfsr	2,1
 24400  00169C  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24401  00169E  26D9               	addwf	fsr2l,f,c
 24402  0016A0  5191               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24403  0016A2  22DA               	addwfc	fsr2h,f,c
 24404  0016A4  50DF               	movf	indf2,w,c
 24405  0016A6  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24406  0016A8  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24407  0016AC  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24408  0016AE  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24409  0016B0  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24410  0016B2  5031               	movf	??_MSDWriteHandler+1,w,c
 24411  0016B4  010D               	movlb	13	; () banked
 24412  0016B6  5F88               	subwf	136,f,b	;volatile
 24413  0016B8  5032               	movf	??_MSDWriteHandler+2,w,c
 24414  0016BA  5B89               	subwfb	137,f,b	;volatile
 24415  0016BC  5033               	movf	??_MSDWriteHandler+3,w,c
 24416  0016BE  5B8A               	subwfb	138,f,b	;volatile
 24417  0016C0  5034               	movf	??_MSDWriteHandler+4,w,c
 24418  0016C2  5B8B               	subwfb	139,f,b	;volatile
 24419                           
 24420                           ; BSR set to: 13
 24421                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 24422  0016C4  0E40               	movlw	64
 24423  0016C6  0100               	movlb	0	; () banked
 24424  0016C8  2792               	addwf	_ptrNextData& (0+255),f,b
 24425  0016CA  0E00               	movlw	0
 24426  0016CC  2393               	addwfc	(_ptrNextData+1)& (0+255),f,b
 24427                           
 24428                           ; BSR set to: 0
 24429                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 24430  0016CE  0E03               	movlw	3
 24431  0016D0  D056               	goto	L23
 24432  0016D2                     
 24433                           ; BSR set to: 0
 24434                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 24435                           
 24436                           ; BSR set to: 0
 24437  0016D2  010D               	movlb	13	; () banked
 24438  0016D4  518C               	movf	140,w,b	;volatile
 24439  0016D6  A4D8               	btfss	status,2,c
 24440  0016D8  D03C               	goto	l703
 24441                           
 24442                           ; BSR set to: 13
 24443                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 24444  0016DA  C1E8  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 24445  0016DE  C1E9  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 24446  0016E2  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 24447  0016E6  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 24448  0016EA  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 24449  0016EE  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 24450  0016F2  0E00               	movlw	0
 24451  0016F4  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 24452  0016F6  0E06               	movlw	6
 24453  0016F8  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 24454  0016FA  0100               	movlb	0	; () banked
 24455  0016FC  5180               	movf	_LBA& (0+255),w,b
 24456  0016FE  1181               	iorwf	(_LBA+1)& (0+255),w,b
 24457  001700  1182               	iorwf	(_LBA+2)& (0+255),w,b
 24458  001702  1183               	iorwf	(_LBA+3)& (0+255),w,b
 24459  001704  A4D8               	btfss	status,2,c
 24460  001706  D002               	goto	u7250
 24461  001708  0E01               	movlw	1
 24462  00170A  D001               	goto	u7260
 24463  00170C                     u7250:
 24464  00170C  0E00               	movlw	0
 24465  00170E                     u7260:
 24466  00170E  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 24467  001710  D801               	call	u7278
 24468  001712  D00A               	goto	u7279
 24469  001714                     u7278:
 24470  001714  0005               	push	
 24471  001716  6EFA               	movwf	pclath,c
 24472  001718  0101               	movlb	1	; () banked
 24473  00171A  51E6               	movf	(_LUN+12)& (0+255),w,b
 24474  00171C  6EFD               	movwf	tosl,c
 24475  00171E  51E7               	movf	(_LUN+13)& (0+255),w,b
 24476  001720  6EFE               	movwf	tosh,c
 24477  001722  6AFF               	clrf	tosu,c
 24478  001724  50FA               	movf	pclath,w,c
 24479  001726  0012               	return		;indir
 24480  001728                     u7279:
 24481  001728  06E8               	decf	wreg,f,c
 24482  00172A  B4D8               	btfsc	status,2,c
 24483  00172C  D012               	goto	l703
 24484                           
 24485                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 24486  00172E  0E64               	movlw	100
 24487  001730  0100               	movlb	0	; () banked
 24488  001732  61A4               	cpfslt	_MSDRetryAttempt& (0+255),b
 24489  001734  D002               	goto	l702
 24490                           
 24491                           ; BSR set to: 0
 24492                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 24493  001736  2BA4               	incf	_MSDRetryAttempt& (0+255),f,b
 24494                           
 24495                           ;usb_device_msd.c: 1314: break;
 24496  001738  D036               	goto	l687
 24497  00173A                     l702:
 24498                           
 24499                           ; BSR set to: 0
 24500                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 24501                           
 24502                           ; BSR set to: 0
 24503  00173A  0E01               	movlw	1
 24504  00173C  010D               	movlb	13	; () banked
 24505  00173E  6F8C               	movwf	140,b	;volatile
 24506                           
 24507                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 24508  001740  0101               	movlb	1	; () banked
 24509  001742  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24510  001744  0BF0               	andlw	-16
 24511  001746  0903               	iorlw	3
 24512  001748  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24513                           
 24514                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 24515  00174A  0E00               	movlw	0
 24516  00174C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24517                           
 24518                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 24519  00174E  0E00               	movlw	0
 24520  001750  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24521  001752                     l703:
 24522                           
 24523                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 24524                           
 24525                           ; BSR set to: 1
 24526                           
 24527                           ; BSR set to: 1
 24528                           
 24529                           ; BSR set to: 1
 24530  001752  0E01               	movlw	1
 24531  001754  0100               	movlb	0	; () banked
 24532  001756  2780               	addwf	_LBA& (0+255),f,b
 24533  001758  0E00               	movlw	0
 24534  00175A  2381               	addwfc	(_LBA+1)& (0+255),f,b
 24535  00175C  2382               	addwfc	(_LBA+2)& (0+255),f,b
 24536  00175E  2383               	addwfc	(_LBA+3)& (0+255),f,b
 24537                           
 24538                           ; BSR set to: 0
 24539                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 24540  001760  078C               	decf	_TransferLength& (0+255),f,b
 24541  001762  A0D8               	btfss	status,0,c
 24542  001764  078D               	decf	(_TransferLength+1)& (0+255),f,b
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 24546  001766  0E01               	movlw	1
 24547  001768  D00A               	goto	L23
 24548  00176A                     
 24549                           ; BSR set to: 0
 24550                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 24551                           
 24552                           ; BSR set to: 0
 24553  00176A  0E02               	movlw	2
 24554  00176C  010D               	movlb	13	; () banked
 24555  00176E  6F8C               	movwf	140,b	;volatile
 24556                           
 24557                           ; BSR set to: 13
 24558                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 24559  001770  0E00               	movlw	0
 24560  001772  6E01               	movwf	USBStallEndpoint@dir,c
 24561  001774  0E02               	movlw	2
 24562  001776  ECD7  F01E         	call	_USBStallEndpoint
 24563                           
 24564                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 24565  00177A  0E00               	movlw	0
 24566  00177C                     L43:
 24567  00177C  0100               	movlb	0	; () banked
 24568  00177E                     L23:
 24569  00177E  6FA5               	movwf	_MSDWriteState& (0+255),b
 24570                           
 24571                           ; BSR set to: 0
 24572                           ;usb_device_msd.c: 1345: }
 24573                           
 24574                           ;usb_device_msd.c: 1344: break;
 24575  001780  D012               	goto	l687
 24576  001782                     l684:
 24577                           
 24578                           ; BSR set to: 0
 24579  001782  0100               	movlb	0	; () banked
 24580  001784  51A5               	movf	_MSDWriteState& (0+255),w,b
 24581                           
 24582                           ; Switch size 1, requested type "space"
 24583                           ; Number of cases is 5, Range of values is 0 to 4
 24584                           ; switch strategies available:
 24585                           ; Name         Instructions Cycles
 24586                           ; simple_byte           16     9 (average)
 24587                           ;	Chosen strategy is simple_byte
 24588  001786  0A00               	xorlw	0	; case 0
 24589  001788  B4D8               	btfsc	status,2,c
 24590  00178A  D6B7               	goto	l685
 24591  00178C  0A01               	xorlw	1	; case 1
 24592  00178E  B4D8               	btfsc	status,2,c
 24593  001790  D707               	goto	l690
 24594  001792  0A03               	xorlw	3	; case 2
 24595  001794  B4D8               	btfsc	status,2,c
 24596  001796  D79D               	goto	l699
 24597  001798  0A01               	xorlw	1	; case 3
 24598  00179A  B4D8               	btfsc	status,2,c
 24599  00179C  D716               	goto	l692
 24600  00179E  0A07               	xorlw	7	; case 4
 24601  0017A0  B4D8               	btfsc	status,2,c
 24602  0017A2  D759               	goto	l695
 24603  0017A4  D7E2               	goto	l704
 24604  0017A6                     l687:
 24605                           
 24606                           ;usb_device_msd.c: 1347: return MSDWriteState;
 24607                           
 24608                           ; BSR set to: 0
 24609  0017A6  0100               	movlb	0	; () banked
 24610  0017A8  51A5               	movf	_MSDWriteState& (0+255),w,b
 24611  0017AA  0012               	return	
 24612  0017AC                     __end_of_MSDWriteHandler:
 24613                           	opt stack 0
 24614                           tosu	equ	0xFFF
 24615                           tosh	equ	0xFFE
 24616                           tosl	equ	0xFFD
 24617                           pclath	equ	0xFFA
 24618                           tblptru	equ	0xFF8
 24619                           tblptrh	equ	0xFF7
 24620                           tblptrl	equ	0xFF6
 24621                           tablat	equ	0xFF5
 24622                           prodh	equ	0xFF4
 24623                           prodl	equ	0xFF3
 24624                           intcon	equ	0xFF2
 24625                           intcon2	equ	0xFF1
 24626                           intcon3	equ	0xFF0
 24627                           indf0	equ	0xFEF
 24628                           postinc0	equ	0xFEE
 24629                           fsr0h	equ	0xFEA
 24630                           fsr0l	equ	0xFE9
 24631                           wreg	equ	0xFE8
 24632                           indf1	equ	0xFE7
 24633                           postdec1	equ	0xFE5
 24634                           plusw1	equ	0xFE3
 24635                           fsr1h	equ	0xFE2
 24636                           fsr1l	equ	0xFE1
 24637                           indf2	equ	0xFDF
 24638                           postinc2	equ	0xFDE
 24639                           postdec2	equ	0xFDD
 24640                           plusw2	equ	0xFDB
 24641                           fsr2h	equ	0xFDA
 24642                           fsr2l	equ	0xFD9
 24643                           status	equ	0xFD8
 24644                           
 24645 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 24646 ;; Defined at:
 24647 ;;		line 34 in file "external_flash.c"
 24648 ;; Parameters:    Size  Location     Type
 24649 ;;  config          2    0[COMRAM] PTR void 
 24650 ;;		 -> NULL(0), 
 24651 ;; Auto vars:     Size  Location     Type
 24652 ;;		None
 24653 ;; Return value:  Size  Location     Type
 24654 ;;                  1    wreg      unsigned char 
 24655 ;; Registers used:
 24656 ;;		wreg
 24657 ;; Tracked objects:
 24658 ;;		On entry : 0/0
 24659 ;;		On exit  : 0/0
 24660 ;;		Unchanged: 0/0
 24661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24666 ;;Total ram usage:        2 bytes
 24667 ;; Hardware stack levels used:    1
 24668 ;; This function calls:
 24669 ;;		Nothing
 24670 ;; This function is called by:
 24671 ;;		_MSDWriteHandler
 24672 ;;		_MSDProcessCommandMediaPresent
 24673 ;; This function uses a non-reentrant model
 24674 ;;
 24675                           
 24676                           	psect	text109
 24677  007BBE                     __ptext109:
 24678                           	opt stack 0
 24679  007BBE                     _ExternalFlash_WriteProtectStateGet:
 24680                           	opt stack 25
 24681                           
 24682                           ;external_flash.c: 37: return 0;
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;incstack = 0
 24686  007BBE  0E00               	movlw	0
 24687  007BC0  0012               	return	
 24688  007BC2                     __end_of_ExternalFlash_WriteProtectStateGet:
 24689                           	opt stack 0
 24690                           tosu	equ	0xFFF
 24691                           tosh	equ	0xFFE
 24692                           tosl	equ	0xFFD
 24693                           pclath	equ	0xFFA
 24694                           tblptru	equ	0xFF8
 24695                           tblptrh	equ	0xFF7
 24696                           tblptrl	equ	0xFF6
 24697                           tablat	equ	0xFF5
 24698                           prodh	equ	0xFF4
 24699                           prodl	equ	0xFF3
 24700                           intcon	equ	0xFF2
 24701                           intcon2	equ	0xFF1
 24702                           intcon3	equ	0xFF0
 24703                           indf0	equ	0xFEF
 24704                           postinc0	equ	0xFEE
 24705                           fsr0h	equ	0xFEA
 24706                           fsr0l	equ	0xFE9
 24707                           wreg	equ	0xFE8
 24708                           indf1	equ	0xFE7
 24709                           postdec1	equ	0xFE5
 24710                           plusw1	equ	0xFE3
 24711                           fsr1h	equ	0xFE2
 24712                           fsr1l	equ	0xFE1
 24713                           indf2	equ	0xFDF
 24714                           postinc2	equ	0xFDE
 24715                           postdec2	equ	0xFDD
 24716                           plusw2	equ	0xFDB
 24717                           fsr2h	equ	0xFDA
 24718                           fsr2l	equ	0xFD9
 24719                           status	equ	0xFD8
 24720                           
 24721 ;; *************** function _ExternalFlash_SectorWrite *****************
 24722 ;; Defined at:
 24723 ;;		line 56 in file "external_flash.c"
 24724 ;; Parameters:    Size  Location     Type
 24725 ;;  config          2   36[COMRAM] PTR void 
 24726 ;;		 -> NULL(0), 
 24727 ;;  sector_addr     4   38[COMRAM] unsigned long 
 24728 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 24729 ;;		 -> msd_buffer(512), 
 24730 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 24731 ;; Auto vars:     Size  Location     Type
 24732 ;;  page            2   45[COMRAM] unsigned int 
 24733 ;; Return value:  Size  Location     Type
 24734 ;;                  1    wreg      unsigned char 
 24735 ;; Registers used:
 24736 ;;		wreg, status,2, status,0, cstack
 24737 ;; Tracked objects:
 24738 ;;		On entry : 0/0
 24739 ;;		On exit  : 0/0
 24740 ;;		Unchanged: 0/0
 24741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24742 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24745 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24746 ;;Total ram usage:       11 bytes
 24747 ;; Hardware stack levels used:    1
 24748 ;; Hardware stack levels required when called:    6
 24749 ;; This function calls:
 24750 ;;		_flash_page_write
 24751 ;; This function is called by:
 24752 ;;		_MSDWriteHandler
 24753 ;; This function uses a non-reentrant model
 24754 ;;
 24755                           
 24756                           	psect	text110
 24757  0074F8                     __ptext110:
 24758                           	opt stack 0
 24759  0074F8                     _ExternalFlash_SectorWrite:
 24760                           	opt stack 19
 24761                           
 24762                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 24763                           
 24764                           ;incstack = 0
 24765  0074F8  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 24766  0074FC  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 24767                           
 24768                           ;external_flash.c: 61: if(sector_addr >= 8196)
 24769  007500  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 24770  007502  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 24771  007504  E106               	bnz	u6740
 24772  007506  0E04               	movlw	4
 24773  007508  5C27               	subwf	ExternalFlash_SectorWrite@sector_addr,w,c
 24774  00750A  0E20               	movlw	32
 24775  00750C  5828               	subwfb	ExternalFlash_SectorWrite@sector_addr+1,w,c
 24776  00750E  A0D8               	btfss	status,0,c
 24777  007510  D002               	goto	l1739
 24778  007512                     u6740:
 24779                           
 24780                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 24781  007512  0E00               	movlw	0
 24782  007514  0012               	return	
 24783  007516                     l1739:
 24784                           
 24785                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 24786  007516  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 24787  00751A  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 24788  00751E  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 24789  007522  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 24790  007526  EC56  F037         	call	_flash_page_write	;wreg free
 24791                           
 24792                           ;external_flash.c: 69: return 1;
 24793  00752A  0E01               	movlw	1
 24794  00752C  0012               	return	
 24795  00752E                     __end_of_ExternalFlash_SectorWrite:
 24796                           	opt stack 0
 24797                           tosu	equ	0xFFF
 24798                           tosh	equ	0xFFE
 24799                           tosl	equ	0xFFD
 24800                           pclath	equ	0xFFA
 24801                           tblptru	equ	0xFF8
 24802                           tblptrh	equ	0xFF7
 24803                           tblptrl	equ	0xFF6
 24804                           tablat	equ	0xFF5
 24805                           prodh	equ	0xFF4
 24806                           prodl	equ	0xFF3
 24807                           intcon	equ	0xFF2
 24808                           intcon2	equ	0xFF1
 24809                           intcon3	equ	0xFF0
 24810                           indf0	equ	0xFEF
 24811                           postinc0	equ	0xFEE
 24812                           fsr0h	equ	0xFEA
 24813                           fsr0l	equ	0xFE9
 24814                           wreg	equ	0xFE8
 24815                           indf1	equ	0xFE7
 24816                           postdec1	equ	0xFE5
 24817                           plusw1	equ	0xFE3
 24818                           fsr1h	equ	0xFE2
 24819                           fsr1l	equ	0xFE1
 24820                           indf2	equ	0xFDF
 24821                           postinc2	equ	0xFDE
 24822                           postdec2	equ	0xFDD
 24823                           plusw2	equ	0xFDB
 24824                           fsr2h	equ	0xFDA
 24825                           fsr2l	equ	0xFD9
 24826                           status	equ	0xFD8
 24827                           
 24828 ;; *************** function _flash_page_write *****************
 24829 ;; Defined at:
 24830 ;;		line 430 in file "flash.c"
 24831 ;; Parameters:    Size  Location     Type
 24832 ;;  page            2   31[COMRAM] unsigned int 
 24833 ;;  data            2   33[COMRAM] PTR unsigned char 
 24834 ;;		 -> buffer(512), msd_buffer(512), 
 24835 ;; Auto vars:     Size  Location     Type
 24836 ;;  match           1   35[COMRAM] enum E6878
 24837 ;; Return value:  Size  Location     Type
 24838 ;;                  1    wreg      void 
 24839 ;; Registers used:
 24840 ;;		wreg, status,2, status,0, cstack
 24841 ;; Tracked objects:
 24842 ;;		On entry : 0/0
 24843 ;;		On exit  : 0/0
 24844 ;;		Unchanged: 0/0
 24845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24849 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24850 ;;Total ram usage:        5 bytes
 24851 ;; Hardware stack levels used:    1
 24852 ;; Hardware stack levels required when called:    5
 24853 ;; This function calls:
 24854 ;;		__flash_compare_page_to_buffer
 24855 ;;		__flash_write_page_from_buffer
 24856 ;;		__flash_write_to_buffer
 24857 ;;		_spi_set_configuration
 24858 ;; This function is called by:
 24859 ;;		_ExternalFlash_SectorWrite
 24860 ;;		_fat_format
 24861 ;; This function uses a non-reentrant model
 24862 ;;
 24863                           
 24864                           	psect	text111
 24865  006EAC                     __ptext111:
 24866                           	opt stack 0
 24867  006EAC                     _flash_page_write:
 24868                           	opt stack 22
 24869                           
 24870                           ;flash.c: 432: flashMatchResult_t match;;flash.c: 435: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 24871                           
 24872                           ;incstack = 0
 24873  006EAC  0E00               	movlw	0
 24874  006EAE  EC6E  F035         	call	_spi_set_configuration
 24875                           
 24876                           ;flash.c: 438: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 24877  006EB2  0E00               	movlw	0
 24878  006EB4  6E15               	movwf	__flash_write_to_buffer@start+1,c
 24879  006EB6  0E00               	movlw	0
 24880  006EB8  6E14               	movwf	__flash_write_to_buffer@start,c
 24881  006EBA  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 24882  006EBE  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 24883  006EC2  0E02               	movlw	2
 24884  006EC4  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 24885  006EC6  0E00               	movlw	0
 24886  006EC8  6E18               	movwf	__flash_write_to_buffer@data_length,c
 24887  006ECA  0E00               	movlw	0
 24888  006ECC  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 24889  006ECE  EC50  F038         	call	__flash_write_to_buffer	;wreg free
 24890                           
 24891                           ;flash.c: 441: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 24892  006ED2  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 24893  006ED6  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 24894  006EDA  0E00               	movlw	0
 24895  006EDC  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 24896  006EDE  ECC6  F030         	call	__flash_compare_page_to_buffer	;wreg free
 24897  006EE2  6E24               	movwf	flash_page_write@match,c
 24898                           
 24899                           ;flash.c: 444: if(match==DATA_DOES_NOT_MATCH)
 24900  006EE4  0424               	decf	flash_page_write@match,w,c
 24901  006EE6  A4D8               	btfss	status,2,c
 24902  006EE8  D008               	goto	l1696
 24903                           
 24904                           ;flash.c: 445: {;flash.c: 446: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 24905  006EEA  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 24906  006EEE  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 24907  006EF2  0E00               	movlw	0
 24908  006EF4  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 24909  006EF6  EC7D  F036         	call	__flash_write_page_from_buffer	;wreg free
 24910  006EFA                     l1696:
 24911                           
 24912                           ;flash.c: 447: };flash.c: 450: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24913  006EFA  0E01               	movlw	1
 24914  006EFC  EC6E  F035         	call	_spi_set_configuration
 24915  006F00  0012               	return		;funcret
 24916  006F02                     __end_of_flash_page_write:
 24917                           	opt stack 0
 24918                           tosu	equ	0xFFF
 24919                           tosh	equ	0xFFE
 24920                           tosl	equ	0xFFD
 24921                           pclath	equ	0xFFA
 24922                           tblptru	equ	0xFF8
 24923                           tblptrh	equ	0xFF7
 24924                           tblptrl	equ	0xFF6
 24925                           tablat	equ	0xFF5
 24926                           prodh	equ	0xFF4
 24927                           prodl	equ	0xFF3
 24928                           intcon	equ	0xFF2
 24929                           intcon2	equ	0xFF1
 24930                           intcon3	equ	0xFF0
 24931                           indf0	equ	0xFEF
 24932                           postinc0	equ	0xFEE
 24933                           fsr0h	equ	0xFEA
 24934                           fsr0l	equ	0xFE9
 24935                           wreg	equ	0xFE8
 24936                           indf1	equ	0xFE7
 24937                           postdec1	equ	0xFE5
 24938                           plusw1	equ	0xFE3
 24939                           fsr1h	equ	0xFE2
 24940                           fsr1l	equ	0xFE1
 24941                           indf2	equ	0xFDF
 24942                           postinc2	equ	0xFDE
 24943                           postdec2	equ	0xFDD
 24944                           plusw2	equ	0xFDB
 24945                           fsr2h	equ	0xFDA
 24946                           fsr2l	equ	0xFD9
 24947                           status	equ	0xFD8
 24948                           
 24949 ;; *************** function _MSDReadHandler *****************
 24950 ;; Defined at:
 24951 ;;		line 1038 in file "usb_device_msd.c"
 24952 ;; Parameters:    Size  Location     Type
 24953 ;;		None
 24954 ;; Auto vars:     Size  Location     Type
 24955 ;;		None
 24956 ;; Return value:  Size  Location     Type
 24957 ;;                  1    wreg      unsigned char 
 24958 ;; Registers used:
 24959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24960 ;; Tracked objects:
 24961 ;;		On entry : 0/0
 24962 ;;		On exit  : 0/0
 24963 ;;		Unchanged: 0/0
 24964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24969 ;;Total ram usage:        4 bytes
 24970 ;; Hardware stack levels used:    1
 24971 ;; Hardware stack levels required when called:    8
 24972 ;; This function calls:
 24973 ;;		_ExternalFlash_SectorRead
 24974 ;;		_MSDCheckForErrorCases
 24975 ;;		_USBStallEndpoint
 24976 ;;		_USBTransferOnePacket
 24977 ;; This function is called by:
 24978 ;;		_MSDProcessCommandMediaPresent
 24979 ;; This function uses a non-reentrant model
 24980 ;;
 24981                           
 24982                           	psect	text112
 24983  002B16                     __ptext112:
 24984                           	opt stack 0
 24985  002B16                     _MSDReadHandler:
 24986                           	opt stack 18
 24987                           
 24988                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 24989                           
 24990                           ;incstack = 0
 24991  002B16  D0D6               	goto	l665
 24992  002B18                     l666:
 24993                           
 24994                           ; BSR set to: 0
 24995                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 24996  002B18  C111  F083         	movff	_gblCBW+17,_LBA+3
 24997                           
 24998                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 24999  002B1C  C112  F082         	movff	_gblCBW+18,_LBA+2
 25000                           
 25001                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 25002  002B20  C113  F081         	movff	_gblCBW+19,_LBA+1
 25003                           
 25004                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 25005  002B24  C114  F080         	movff	_gblCBW+20,_LBA
 25006                           
 25007                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 25008  002B28  C116  F08D         	movff	_gblCBW+22,_TransferLength+1
 25009                           
 25010                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 25011  002B2C  C117  F08C         	movff	_gblCBW+23,_TransferLength
 25012                           
 25013                           ; BSR set to: 0
 25014                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25015  002B30  518C               	movf	_TransferLength& (0+255),w,b
 25016  002B32  6E37               	movwf	??_MSDReadHandler& (0+255),c
 25017  002B34  518D               	movf	(_TransferLength+1)& (0+255),w,b
 25018  002B36  6E38               	movwf	(??_MSDReadHandler+1)& (0+255),c
 25019  002B38  6A39               	clrf	(??_MSDReadHandler+2)& (0+255),c
 25020  002B3A  6A3A               	clrf	(??_MSDReadHandler+3)& (0+255),c
 25021  002B3C  0E09               	movlw	9
 25022  002B3E                     u7015:
 25023  002B3E  90D8               	bcf	status,0,c
 25024  002B40  3637               	rlcf	??_MSDReadHandler,f,c
 25025  002B42  3638               	rlcf	??_MSDReadHandler+1,f,c
 25026  002B44  3639               	rlcf	??_MSDReadHandler+2,f,c
 25027  002B46  363A               	rlcf	??_MSDReadHandler+3,f,c
 25028  002B48  2EE8               	decfsz	wreg,f,c
 25029  002B4A  D7F9               	goto	u7015
 25030  002B4C  C037  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25031  002B50  C038  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25032  002B54  C039  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25033  002B58  C03A  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25034  002B5C  ECBD  F022         	call	_MSDCheckForErrorCases	;wreg free
 25035  002B60  0900               	iorlw	0
 25036  002B62  A4D8               	btfss	status,2,c
 25037  002B64  D0C1               	goto	l668
 25038                           
 25039                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25040                           
 25041                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25042  002B66  0E01               	movlw	1
 25043  002B68  0100               	movlb	0	; () banked
 25044  002B6A  6FA6               	movwf	_MSDReadState& (0+255),b
 25045  002B6C                     
 25046                           ; BSR set to: 0
 25047                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25048                           
 25049                           ; BSR set to: 0
 25050  002B6C  518C               	movf	_TransferLength& (0+255),w,b
 25051  002B6E  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 25052  002B70  A4D8               	btfss	status,2,c
 25053  002B72  D002               	goto	l670
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25057  002B74  0E00               	movlw	0
 25058  002B76  D046               	goto	L24
 25059  002B78                     l670:
 25060                           
 25061                           ; BSR set to: 0
 25062                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25063                           
 25064                           ; BSR set to: 0
 25065  002B78  078C               	decf	_TransferLength& (0+255),f,b
 25066  002B7A  A0D8               	btfss	status,0,c
 25067  002B7C  078D               	decf	(_TransferLength+1)& (0+255),f,b
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25071  002B7E  0E02               	movlw	2
 25072  002B80  6FA6               	movwf	_MSDReadState& (0+255),b
 25073  002B82                     
 25074                           ; BSR set to: 0
 25075                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25076                           
 25077                           ; BSR set to: 0
 25078  002B82  518E               	movf	_USBMSDInHandle& (0+255),w,b
 25079  002B84  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25080  002B86  B4D8               	btfsc	status,2,c
 25081  002B88  D006               	goto	l672
 25082                           
 25083                           ; BSR set to: 0
 25084  002B8A  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 25085  002B8E  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25086  002B92  BEDF               	btfsc	indf2,7,c
 25087  002B94  D0A9               	goto	l668
 25088  002B96                     l672:
 25089                           
 25090                           ; BSR set to: 0
 25091                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 25092                           
 25093                           ; BSR set to: 0
 25094  002B96  C1E8  F02D         	movff	_LUN+14,ExternalFlash_SectorRead@config
 25095  002B9A  C1E9  F02E         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 25096  002B9E  C080  F02F         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 25097  002BA2  C081  F030         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 25098  002BA6  C082  F031         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 25099  002BAA  C083  F032         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 25100  002BAE  0E00               	movlw	0
 25101  002BB0  6E33               	movwf	ExternalFlash_SectorRead@buffer,c
 25102  002BB2  0E06               	movlw	6
 25103  002BB4  6E34               	movwf	ExternalFlash_SectorRead@buffer+1,c
 25104  002BB6  D801               	call	u7068
 25105  002BB8  D00A               	goto	u7069
 25106  002BBA                     u7068:
 25107  002BBA  0005               	push	
 25108  002BBC  6EFA               	movwf	pclath,c
 25109  002BBE  0101               	movlb	1	; () banked
 25110  002BC0  51E2               	movf	(_LUN+8)& (0+255),w,b
 25111  002BC2  6EFD               	movwf	tosl,c
 25112  002BC4  51E3               	movf	(_LUN+9)& (0+255),w,b
 25113  002BC6  6EFE               	movwf	tosh,c
 25114  002BC8  6AFF               	clrf	tosu,c
 25115  002BCA  50FA               	movf	pclath,w,c
 25116  002BCC  0012               	return		;indir
 25117  002BCE                     u7069:
 25118  002BCE  06E8               	decf	wreg,f,c
 25119  002BD0  B4D8               	btfsc	status,2,c
 25120  002BD2  D01A               	goto	l675
 25121                           
 25122                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 25123  002BD4  0E64               	movlw	100
 25124  002BD6  0100               	movlb	0	; () banked
 25125  002BD8  61A4               	cpfslt	_MSDRetryAttempt& (0+255),b
 25126  002BDA  D002               	goto	l674
 25127                           
 25128                           ; BSR set to: 0
 25129                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 25130  002BDC  2BA4               	incf	_MSDRetryAttempt& (0+255),f,b
 25131                           
 25132                           ;usb_device_msd.c: 1088: break;
 25133  002BDE  D084               	goto	l668
 25134  002BE0                     l674:
 25135                           
 25136                           ; BSR set to: 0
 25137                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 25138                           
 25139                           ; BSR set to: 0
 25140  002BE0  0E02               	movlw	2
 25141  002BE2  010D               	movlb	13	; () banked
 25142  002BE4  6F8C               	movwf	140,b	;volatile
 25143                           
 25144                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 25145  002BE6  0101               	movlb	1	; () banked
 25146  002BE8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25147  002BEA  0BF0               	andlw	-16
 25148  002BEC  0903               	iorlw	3
 25149  002BEE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25150                           
 25151                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 25152  002BF0  0E00               	movlw	0
 25153  002BF2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25154                           
 25155                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 25156  002BF4  0E00               	movlw	0
 25157  002BF6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 25161  002BF8  0E01               	movlw	1
 25162  002BFA  6E01               	movwf	USBStallEndpoint@dir,c
 25163  002BFC  0E02               	movlw	2
 25164  002BFE  ECD7  F01E         	call	_USBStallEndpoint
 25165  002C02  D05D               	goto	l10045
 25166  002C04                     L24:
 25167  002C04  6FA6               	movwf	_MSDReadState& (0+255),b
 25168                           
 25169                           ;usb_device_msd.c: 1109: break;
 25170  002C06  D070               	goto	l668
 25171  002C08                     l675:
 25172                           
 25173                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 25174                           
 25175                           ; BSR set to: 0
 25176                           
 25177                           ; BSR set to: 0
 25178  002C08  0E01               	movlw	1
 25179  002C0A  0100               	movlb	0	; () banked
 25180  002C0C  2780               	addwf	_LBA& (0+255),f,b
 25181  002C0E  0E00               	movlw	0
 25182  002C10  2381               	addwfc	(_LBA+1)& (0+255),f,b
 25183  002C12  2382               	addwfc	(_LBA+2)& (0+255),f,b
 25184  002C14  2383               	addwfc	(_LBA+3)& (0+255),f,b
 25185                           
 25186                           ; BSR set to: 0
 25187                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 25188  002C16  0E00               	movlw	0
 25189  002C18  010D               	movlb	13	; () banked
 25190  002C1A  6F88               	movwf	136,b	;volatile
 25191  002C1C  0E02               	movlw	2
 25192  002C1E  6F89               	movwf	137,b	;volatile
 25193  002C20  0E00               	movlw	0
 25194  002C22  6F8A               	movwf	138,b	;volatile
 25195  002C24  0E00               	movlw	0
 25196  002C26  6F8B               	movwf	139,b	;volatile
 25197                           
 25198                           ; BSR set to: 13
 25199                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 25200  002C28  0E00               	movlw	0
 25201  002C2A  0100               	movlb	0	; () banked
 25202  002C2C  6F92               	movwf	_ptrNextData& (0+255),b
 25203  002C2E  0E06               	movlw	6
 25204  002C30  6F93               	movwf	(_ptrNextData+1)& (0+255),b
 25205                           
 25206                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 25207  002C32  0E03               	movlw	3
 25208  002C34  6FA6               	movwf	_MSDReadState& (0+255),b
 25209  002C36                     
 25210                           ; BSR set to: 0
 25211                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 25212                           
 25213                           ; BSR set to: 0
 25214  002C36  010D               	movlb	13	; () banked
 25215  002C38  5188               	movf	136,w,b	;volatile
 25216  002C3A  1189               	iorwf	137,w,b	;volatile
 25217  002C3C  118A               	iorwf	138,w,b	;volatile
 25218  002C3E  118B               	iorwf	139,w,b	;volatile
 25219  002C40  A4D8               	btfss	status,2,c
 25220  002C42  D002               	goto	l677
 25221                           
 25222                           ; BSR set to: 13
 25223                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 25224  002C44  0E01               	movlw	1
 25225  002C46  D03C               	goto	L26
 25226  002C48                     l677:
 25227                           
 25228                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 25229                           
 25230                           ; BSR set to: 0
 25231  002C48  0E04               	movlw	4
 25232  002C4A  0100               	movlb	0	; () banked
 25233  002C4C  6FA6               	movwf	_MSDReadState& (0+255),b
 25234  002C4E                     
 25235                           ; BSR set to: 0
 25236                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 25237                           
 25238                           ; BSR set to: 0
 25239  002C4E  518E               	movf	_USBMSDInHandle& (0+255),w,b
 25240  002C50  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25241  002C52  B4D8               	btfsc	status,2,c
 25242  002C54  D006               	goto	l679
 25243                           
 25244                           ; BSR set to: 0
 25245  002C56  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 25246  002C5A  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25247  002C5E  BEDF               	btfsc	indf2,7,c
 25248  002C60  D043               	goto	l668
 25249  002C62                     l679:
 25250                           
 25251                           ; BSR set to: 0
 25252                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 25253                           
 25254                           ; BSR set to: 0
 25255  002C62  0E01               	movlw	1
 25256  002C64  6E01               	movwf	USBTransferOnePacket@dir,c
 25257  002C66  C092  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 25258  002C6A  C093  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25259  002C6E  0E40               	movlw	64
 25260  002C70  6E04               	movwf	USBTransferOnePacket@len,c
 25261  002C72  0E02               	movlw	2
 25262  002C74  EC61  F020         	call	_USBTransferOnePacket
 25263  002C78  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25264  002C7C  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25265                           
 25266                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 25267  002C80  0E03               	movlw	3
 25268  002C82  0100               	movlb	0	; () banked
 25269  002C84  6FA6               	movwf	_MSDReadState& (0+255),b
 25270                           
 25271                           ; BSR set to: 0
 25272                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 25273  002C86  0E40               	movlw	64
 25274  002C88  0101               	movlb	1	; () banked
 25275  002C8A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25276  002C8C  0E00               	movlw	0
 25277  002C8E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25278  002C90  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25279  002C92  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25280                           
 25281                           ; BSR set to: 1
 25282                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 25283  002C94  0E40               	movlw	64
 25284  002C96  010D               	movlb	13	; () banked
 25285  002C98  5F88               	subwf	136,f,b	;volatile
 25286  002C9A  0E00               	movlw	0
 25287  002C9C  5B89               	subwfb	137,f,b	;volatile
 25288  002C9E  5B8A               	subwfb	138,f,b	;volatile
 25289  002CA0  5B8B               	subwfb	139,f,b	;volatile
 25290                           
 25291                           ; BSR set to: 13
 25292                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 25293  002CA2  0E40               	movlw	64
 25294  002CA4  0100               	movlb	0	; () banked
 25295  002CA6  2792               	addwf	_ptrNextData& (0+255),f,b
 25296  002CA8  0E00               	movlw	0
 25297  002CAA  2393               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25298                           
 25299                           ;usb_device_msd.c: 1149: break;
 25300  002CAC  D01D               	goto	l668
 25301  002CAE                     
 25302                           ; BSR set to: 0
 25303                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 25304                           
 25305                           ; BSR set to: 0
 25306  002CAE  0E02               	movlw	2
 25307  002CB0  010D               	movlb	13	; () banked
 25308  002CB2  6F8C               	movwf	140,b	;volatile
 25309                           
 25310                           ; BSR set to: 13
 25311                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 25312  002CB4  0E01               	movlw	1
 25313  002CB6  6E01               	movwf	USBStallEndpoint@dir,c
 25314  002CB8  0E02               	movlw	2
 25315  002CBA  ECD7  F01E         	call	_USBStallEndpoint
 25316  002CBE                     l10045:
 25317                           
 25318                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 25319  002CBE  0E00               	movlw	0
 25320  002CC0                     L26:
 25321  002CC0  0100               	movlb	0	; () banked
 25322  002CC2  D7A0               	goto	L24
 25323  002CC4                     l665:
 25324                           
 25325                           ; BSR set to: 0
 25326  002CC4  0100               	movlb	0	; () banked
 25327  002CC6  51A6               	movf	_MSDReadState& (0+255),w,b
 25328                           
 25329                           ; Switch size 1, requested type "space"
 25330                           ; Number of cases is 5, Range of values is 0 to 4
 25331                           ; switch strategies available:
 25332                           ; Name         Instructions Cycles
 25333                           ; simple_byte           16     9 (average)
 25334                           ;	Chosen strategy is simple_byte
 25335  002CC8  0A00               	xorlw	0	; case 0
 25336  002CCA  B4D8               	btfsc	status,2,c
 25337  002CCC  D725               	goto	l666
 25338  002CCE  0A01               	xorlw	1	; case 1
 25339  002CD0  B4D8               	btfsc	status,2,c
 25340  002CD2  D74C               	goto	l669
 25341  002CD4  0A03               	xorlw	3	; case 2
 25342  002CD6  B4D8               	btfsc	status,2,c
 25343  002CD8  D754               	goto	l671
 25344  002CDA  0A01               	xorlw	1	; case 3
 25345  002CDC  B4D8               	btfsc	status,2,c
 25346  002CDE  D7AB               	goto	l676
 25347  002CE0  0A07               	xorlw	7	; case 4
 25348  002CE2  B4D8               	btfsc	status,2,c
 25349  002CE4  D7B4               	goto	l678
 25350  002CE6  D7E3               	goto	l680
 25351  002CE8                     l668:
 25352                           
 25353                           ;usb_device_msd.c: 1161: return MSDReadState;
 25354                           
 25355                           ; BSR set to: 0
 25356  002CE8  0100               	movlb	0	; () banked
 25357  002CEA  51A6               	movf	_MSDReadState& (0+255),w,b
 25358  002CEC  0012               	return	
 25359  002CEE                     __end_of_MSDReadHandler:
 25360                           	opt stack 0
 25361                           tosu	equ	0xFFF
 25362                           tosh	equ	0xFFE
 25363                           tosl	equ	0xFFD
 25364                           pclath	equ	0xFFA
 25365                           tblptru	equ	0xFF8
 25366                           tblptrh	equ	0xFF7
 25367                           tblptrl	equ	0xFF6
 25368                           tablat	equ	0xFF5
 25369                           prodh	equ	0xFF4
 25370                           prodl	equ	0xFF3
 25371                           intcon	equ	0xFF2
 25372                           intcon2	equ	0xFF1
 25373                           intcon3	equ	0xFF0
 25374                           indf0	equ	0xFEF
 25375                           postinc0	equ	0xFEE
 25376                           fsr0h	equ	0xFEA
 25377                           fsr0l	equ	0xFE9
 25378                           wreg	equ	0xFE8
 25379                           indf1	equ	0xFE7
 25380                           postdec1	equ	0xFE5
 25381                           plusw1	equ	0xFE3
 25382                           fsr1h	equ	0xFE2
 25383                           fsr1l	equ	0xFE1
 25384                           indf2	equ	0xFDF
 25385                           postinc2	equ	0xFDE
 25386                           postdec2	equ	0xFDD
 25387                           plusw2	equ	0xFDB
 25388                           fsr2h	equ	0xFDA
 25389                           fsr2l	equ	0xFD9
 25390                           status	equ	0xFD8
 25391                           
 25392 ;; *************** function _MSDCheckForErrorCases *****************
 25393 ;; Defined at:
 25394 ;;		line 1434 in file "usb_device_msd.c"
 25395 ;; Parameters:    Size  Location     Type
 25396 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 25397 ;; Auto vars:     Size  Location     Type
 25398 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 25399 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 25400 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 25401 ;; Return value:  Size  Location     Type
 25402 ;;                  1    wreg      unsigned char 
 25403 ;; Registers used:
 25404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25405 ;; Tracked objects:
 25406 ;;		On entry : 0/0
 25407 ;;		On exit  : 0/0
 25408 ;;		Unchanged: 0/0
 25409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25414 ;;Total ram usage:        7 bytes
 25415 ;; Hardware stack levels used:    1
 25416 ;; Hardware stack levels required when called:    2
 25417 ;; This function calls:
 25418 ;;		_MSDErrorHandler
 25419 ;; This function is called by:
 25420 ;;		_MSDProcessCommandMediaPresent
 25421 ;;		_MSDReadHandler
 25422 ;;		_MSDWriteHandler
 25423 ;; This function uses a non-reentrant model
 25424 ;;
 25425                           
 25426                           	psect	text113
 25427  00457A                     __ptext113:
 25428                           	opt stack 0
 25429  00457A                     _MSDCheckForErrorCases:
 25430                           	opt stack 23
 25431                           
 25432                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 25433                           
 25434                           ; BSR set to: 0
 25435                           ;incstack = 0
 25436  00457A  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25437  00457C  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25438  00457E  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25439  004580  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25440  004582  A4D8               	btfss	status,2,c
 25441  004584  D002               	goto	l710
 25442                           
 25443                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 25444  004586  0E01               	movlw	1
 25445  004588  D001               	goto	L27
 25446  00458A                     l710:
 25447                           
 25448                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 25449  00458A  0E00               	movlw	0
 25450  00458C                     L27:
 25451  00458C  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 25452                           
 25453                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 25454  00458E  0100               	movlb	0	; () banked
 25455  004590  05A1               	decf	_MSDHostNoData& (0+255),w,b
 25456  004592  A4D8               	btfss	status,2,c
 25457  004594  D005               	goto	l712
 25458                           
 25459                           ; BSR set to: 0
 25460  004596  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25461  004598  A4D8               	btfss	status,2,c
 25462  00459A  D002               	goto	l712
 25463                           
 25464                           ; BSR set to: 0
 25465                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 25466  00459C  0E00               	movlw	0
 25467                           
 25468                           ; BSR set to: 0
 25469  00459E  0012               	return	
 25470  0045A0                     l712:
 25471                           
 25472                           ; BSR set to: 0
 25473                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 25474                           
 25475                           ; BSR set to: 0
 25476  0045A0  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25477  0045A2  0101               	movlb	1	; () banked
 25478  0045A4  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 25479  0045A6  E11A               	bnz	l9671
 25480  0045A8  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25481  0045AA  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 25482  0045AC  E117               	bnz	l9671
 25483  0045AE  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25484  0045B0  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 25485  0045B2  E114               	bnz	l9671
 25486  0045B4  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25487  0045B6  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 25488  0045B8  A4D8               	btfss	status,2,c
 25489  0045BA  D010               	goto	l718
 25490                           
 25491                           ; BSR set to: 1
 25492                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 25493  0045BC  0100               	movlb	0	; () banked
 25494  0045BE  05A8               	decf	_MSD_State& (0+255),w,b
 25495  0045C0  A4D8               	btfss	status,2,c
 25496  0045C2  D006               	goto	l715
 25497                           
 25498                           ; BSR set to: 0
 25499                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 25500  0045C4  0E2A               	movlw	42
 25501  0045C6  19A7               	xorwf	_MSDCommandState& (0+255),w,b
 25502  0045C8  B4D8               	btfsc	status,2,c
 25503  0045CA  D008               	goto	l718
 25504                           
 25505                           ; BSR set to: 0
 25506                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 25507  0045CC  0E00               	movlw	0
 25508                           
 25509                           ; BSR set to: 0
 25510  0045CE  0012               	return	
 25511  0045D0                     l715:
 25512                           
 25513                           ; BSR set to: 0
 25514                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 25515                           
 25516                           ; BSR set to: 0
 25517  0045D0  0E2A               	movlw	42
 25518  0045D2  19A7               	xorwf	_MSDCommandState& (0+255),w,b
 25519  0045D4  A4D8               	btfss	status,2,c
 25520  0045D6  D002               	goto	l718
 25521                           
 25522                           ; BSR set to: 0
 25523                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 25524  0045D8  0E00               	movlw	0
 25525                           
 25526                           ; BSR set to: 0
 25527  0045DA  0012               	return	
 25528  0045DC                     l718:
 25529  0045DC                     l9671:
 25530                           
 25531                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 25532  0045DC  0101               	movlb	1	; () banked
 25533  0045DE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25534  0045E0  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 25535  0045E2  5109               	movf	(_gblCBW+9)& (0+255),w,b
 25536  0045E4  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25537  0045E6  510A               	movf	(_gblCBW+10)& (0+255),w,b
 25538  0045E8  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25539  0045EA  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25540  0045EC  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25541  0045EE  B0D8               	btfsc	status,0,c
 25542  0045F0  D002               	goto	l719
 25543                           
 25544                           ; BSR set to: 1
 25545                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 25546  0045F2  0E01               	movlw	1
 25547  0045F4  D001               	goto	L28
 25548  0045F6                     l719:
 25549                           
 25550                           ; BSR set to: 1
 25551                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 25552                           
 25553                           ; BSR set to: 1
 25554  0045F6  0E00               	movlw	0
 25555  0045F8                     L28:
 25556  0045F8  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 25560                           
 25561                           ; BSR set to: 1
 25562  0045FA  0E02               	movlw	2
 25563  0045FC  0100               	movlb	0	; () banked
 25564  0045FE  19A8               	xorwf	_MSD_State& (0+255),w,b
 25565  004600  A4D8               	btfss	status,2,c
 25566  004602  D014               	goto	l721
 25567                           
 25568                           ; BSR set to: 0
 25569                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 25570  004604  0E2A               	movlw	42
 25571  004606  19A7               	xorwf	_MSDCommandState& (0+255),w,b
 25572  004608  B4D8               	btfsc	status,2,c
 25573  00460A  D005               	goto	l722
 25574                           
 25575                           ; BSR set to: 0
 25576  00460C  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 25577  00460E  A4D8               	btfss	status,2,c
 25578  004610  D002               	goto	l722
 25579  004612                     u6590:
 25580                           
 25581                           ; BSR set to: 0
 25582                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 25583  004612  0E05               	movlw	5
 25584  004614  D01D               	goto	L31
 25585  004616                     l722:
 25586                           
 25587                           ; BSR set to: 0
 25588                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 25589                           
 25590                           ; BSR set to: 0
 25591  004616  05A1               	decf	_MSDHostNoData& (0+255),w,b
 25592  004618  B4D8               	btfsc	status,2,c
 25593  00461A  D00F               	goto	u6640
 25594                           
 25595                           ; BSR set to: 0
 25596                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 25597                           
 25598                           ; BSR set to: 0
 25599                           
 25600                           ; BSR set to: 0
 25601                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 25602  00461C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25603  00461E  B4D8               	btfsc	status,2,c
 25604  004620  D003               	goto	u6620
 25605                           
 25606                           ; BSR set to: 0
 25607                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 25608                           
 25609                           ; BSR set to: 0
 25610                           
 25611                           ; BSR set to: 0
 25612                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 25613  004622  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 25614  004624  A4D8               	btfss	status,2,c
 25615  004626  D7F5               	goto	u6590
 25616  004628                     u6620:
 25617                           
 25618                           ; BSR set to: 0
 25619                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 25620  004628  0E04               	movlw	4
 25621  00462A  D012               	goto	L31
 25622  00462C                     l721:
 25623                           
 25624                           ; BSR set to: 0
 25625                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 25626                           
 25627                           ; BSR set to: 0
 25628  00462C  0E2A               	movlw	42
 25629  00462E  19A7               	xorwf	_MSDCommandState& (0+255),w,b
 25630  004630  B4D8               	btfsc	status,2,c
 25631  004632  D00D               	goto	l737
 25632                           
 25633                           ; BSR set to: 0
 25634                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 25635                           
 25636                           ; BSR set to: 0
 25637                           
 25638                           ; BSR set to: 0
 25639                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 25640  004634  05A1               	decf	_MSDHostNoData& (0+255),w,b
 25641  004636  A4D8               	btfss	status,2,c
 25642  004638  D002               	goto	l733
 25643  00463A                     u6640:
 25644                           
 25645                           ; BSR set to: 0
 25646                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 25647  00463A  0E01               	movlw	1
 25648  00463C  D009               	goto	L31
 25649  00463E                     l733:
 25650                           
 25651                           ; BSR set to: 0
 25652                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 25653                           
 25654                           ; BSR set to: 0
 25655  00463E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25656  004640  B4D8               	btfsc	status,2,c
 25657  004642  D003               	goto	u6660
 25658                           
 25659                           ; BSR set to: 0
 25660                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 25661                           
 25662                           ; BSR set to: 0
 25663                           
 25664                           ; BSR set to: 0
 25665                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 25666  004644  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 25667  004646  A4D8               	btfss	status,2,c
 25668  004648  D002               	goto	l737
 25669  00464A                     u6660:
 25670                           
 25671                           ; BSR set to: 0
 25672                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 25673  00464A  0E02               	movlw	2
 25674  00464C  D001               	goto	L31
 25675  00464E                     l737:
 25676                           
 25677                           ; BSR set to: 0
 25678                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 25679                           
 25680                           ; BSR set to: 0
 25681  00464E  0E03               	movlw	3
 25682  004650                     L31:
 25683  004650  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 25687                           
 25688                           ; BSR set to: 0
 25689                           
 25690                           ; BSR set to: 0
 25691                           
 25692                           ; BSR set to: 0
 25693                           
 25694                           ; BSR set to: 0
 25695                           
 25696                           ; BSR set to: 0
 25697  004652  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 25698  004654  ECDE  F01F         	call	_MSDErrorHandler
 25699                           
 25700                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 25701  004658  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 25702  00465A  0012               	return	
 25703  00465C                     __end_of_MSDCheckForErrorCases:
 25704                           	opt stack 0
 25705                           tosu	equ	0xFFF
 25706                           tosh	equ	0xFFE
 25707                           tosl	equ	0xFFD
 25708                           pclath	equ	0xFFA
 25709                           tblptru	equ	0xFF8
 25710                           tblptrh	equ	0xFF7
 25711                           tblptrl	equ	0xFF6
 25712                           tablat	equ	0xFF5
 25713                           prodh	equ	0xFF4
 25714                           prodl	equ	0xFF3
 25715                           intcon	equ	0xFF2
 25716                           intcon2	equ	0xFF1
 25717                           intcon3	equ	0xFF0
 25718                           indf0	equ	0xFEF
 25719                           postinc0	equ	0xFEE
 25720                           fsr0h	equ	0xFEA
 25721                           fsr0l	equ	0xFE9
 25722                           wreg	equ	0xFE8
 25723                           indf1	equ	0xFE7
 25724                           postdec1	equ	0xFE5
 25725                           plusw1	equ	0xFE3
 25726                           fsr1h	equ	0xFE2
 25727                           fsr1l	equ	0xFE1
 25728                           indf2	equ	0xFDF
 25729                           postinc2	equ	0xFDE
 25730                           postdec2	equ	0xFDD
 25731                           plusw2	equ	0xFDB
 25732                           fsr2h	equ	0xFDA
 25733                           fsr2l	equ	0xFD9
 25734                           status	equ	0xFD8
 25735                           
 25736 ;; *************** function _MSDErrorHandler *****************
 25737 ;; Defined at:
 25738 ;;		line 1577 in file "usb_device_msd.c"
 25739 ;; Parameters:    Size  Location     Type
 25740 ;;  ErrorCase       1    wreg     unsigned char 
 25741 ;; Auto vars:     Size  Location     Type
 25742 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 25743 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 25744 ;; Return value:  Size  Location     Type
 25745 ;;                  1    wreg      void 
 25746 ;; Registers used:
 25747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25748 ;; Tracked objects:
 25749 ;;		On entry : 0/0
 25750 ;;		On exit  : 0/0
 25751 ;;		Unchanged: 0/0
 25752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25757 ;;Total ram usage:        2 bytes
 25758 ;; Hardware stack levels used:    1
 25759 ;; Hardware stack levels required when called:    1
 25760 ;; This function calls:
 25761 ;;		_ResetSenseData
 25762 ;;		_USBStallEndpoint
 25763 ;; This function is called by:
 25764 ;;		_MSDProcessCommandMediaAbsent
 25765 ;;		_MSDProcessCommandMediaPresent
 25766 ;;		_MSDCheckForErrorCases
 25767 ;; This function uses a non-reentrant model
 25768 ;;
 25769                           
 25770                           	psect	text114
 25771  003FBC                     __ptext114:
 25772                           	opt stack 0
 25773  003FBC                     _MSDErrorHandler:
 25774                           	opt stack 23
 25775                           
 25776                           ;incstack = 0
 25777                           ;MSDErrorHandler@ErrorCase stored from wreg
 25778  003FBC  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 25779                           
 25780                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 25781  003FBE  0100               	movlb	0	; () banked
 25782  003FC0  518E               	movf	_USBMSDInHandle& (0+255),w,b
 25783  003FC2  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25784  003FC4  B4D8               	btfsc	status,2,c
 25785  003FC6  D006               	goto	u6260
 25786                           
 25787                           ; BSR set to: 0
 25788  003FC8  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 25789  003FCC  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25790  003FD0  BEDF               	btfsc	indf2,7,c
 25791  003FD2  0012               	return	
 25792  003FD4                     u6260:
 25793                           
 25794                           ; BSR set to: 0
 25795                           
 25796                           ; BSR set to: 0
 25797  003FD4  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 25798  003FD6  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25799  003FD8  B4D8               	btfsc	status,2,c
 25800  003FDA  D006               	goto	l741
 25801                           
 25802                           ; BSR set to: 0
 25803  003FDC  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25804  003FE0  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25805  003FE4  BEDF               	btfsc	indf2,7,c
 25806  003FE6  0012               	return	
 25807  003FE8                     l741:
 25808                           
 25809                           ; BSR set to: 0
 25810                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 25811  003FE8  C0A8  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 25812                           
 25813                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 25814  003FEC  69A7               	setf	_MSDCommandState& (0+255),b
 25815                           
 25816                           ; BSR set to: 0
 25817                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 25818  003FEE  0E00               	movlw	0
 25819  003FF0  6FA6               	movwf	_MSDReadState& (0+255),b
 25820                           
 25821                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 25822  003FF2  0E00               	movlw	0
 25823  003FF4  6FA5               	movwf	_MSDWriteState& (0+255),b
 25824                           
 25825                           ; BSR set to: 0
 25826                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 25827  003FF6  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 25828  003FFA  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 25829  003FFE  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 25830  004002  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 25831                           
 25832                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 25833  004006  0E01               	movlw	1
 25834  004008  010D               	movlb	13	; () banked
 25835  00400A  6F8C               	movwf	140,b	;volatile
 25836                           
 25837                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 25838  00400C  0E03               	movlw	3
 25839  00400E  0100               	movlb	0	; () banked
 25840  004010  6FA8               	movwf	_MSD_State& (0+255),b
 25841                           
 25842                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 25843  004012  D043               	goto	l747
 25844  004014                     
 25845                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 25846                           
 25847                           ; BSR set to: 0
 25848  004014  0E02               	movlw	2
 25849  004016  010D               	movlb	13	; () banked
 25850  004018  6F8C               	movwf	140,b	;volatile
 25851                           
 25852                           ;usb_device_msd.c: 1607: break;
 25853  00401A  0012               	return	
 25854  00401C                     
 25855                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 25856                           
 25857                           ; BSR set to: 13
 25858  00401C  0E01               	movlw	1
 25859  00401E  6E01               	movwf	USBStallEndpoint@dir,c
 25860  004020  0E02               	movlw	2
 25861  004022  ECD7  F01E         	call	_USBStallEndpoint
 25862                           
 25863                           ;usb_device_msd.c: 1611: break;
 25864  004026  0012               	return	
 25865  004028                     
 25866                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 25867  004028  0E02               	movlw	2
 25868  00402A  010D               	movlb	13	; () banked
 25869  00402C  6F8C               	movwf	140,b	;volatile
 25870                           
 25871                           ; BSR set to: 13
 25872                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 25873  00402E  0E01               	movlw	1
 25874  004030  6E01               	movwf	USBStallEndpoint@dir,c
 25875  004032  0E02               	movlw	2
 25876  004034  ECD7  F01E         	call	_USBStallEndpoint
 25877                           
 25878                           ;usb_device_msd.c: 1616: break;
 25879  004038  0012               	return	
 25880  00403A                     
 25881                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 25882  00403A  0E00               	movlw	0
 25883  00403C  6E01               	movwf	USBStallEndpoint@dir,c
 25884  00403E  0E02               	movlw	2
 25885  004040  ECD7  F01E         	call	_USBStallEndpoint
 25886                           
 25887                           ;usb_device_msd.c: 1620: break;
 25888  004044  0012               	return	
 25889  004046                     
 25890                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 25891  004046  0E02               	movlw	2
 25892  004048  010D               	movlb	13	; () banked
 25893  00404A  6F8C               	movwf	140,b	;volatile
 25894                           
 25895                           ; BSR set to: 13
 25896                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 25897  00404C  0E00               	movlw	0
 25898  00404E  6E01               	movwf	USBStallEndpoint@dir,c
 25899  004050  0E02               	movlw	2
 25900  004052  ECD7  F01E         	call	_USBStallEndpoint
 25901                           
 25902                           ;usb_device_msd.c: 1625: break;
 25903  004056  0012               	return	
 25904  004058                     
 25905                           ;usb_device_msd.c: 1628: ResetSenseData();
 25906  004058  ECDD  F034         	call	_ResetSenseData	;wreg free
 25907                           
 25908                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 25909  00405C  0101               	movlb	1	; () banked
 25910  00405E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25911  004060  0BF0               	andlw	-16
 25912  004062  0905               	iorlw	5
 25913  004064  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25914                           
 25915                           ; BSR set to: 1
 25916                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 25917  004066  0E20               	movlw	32
 25918  004068  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25919                           
 25920                           ; BSR set to: 1
 25921                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 25922  00406A  0E00               	movlw	0
 25923  00406C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25924                           
 25925                           ; BSR set to: 1
 25926                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 25927  00406E  0E02               	movlw	2
 25928  004070  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 25929  004072  A4D8               	btfss	status,2,c
 25930  004074  D00C               	goto	l755
 25931                           
 25932                           ; BSR set to: 1
 25933  004076  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25934  004078  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25935  00407A  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25936  00407C  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 25937  00407E  B4D8               	btfsc	status,2,c
 25938  004080  D006               	goto	l755
 25939                           
 25940                           ; BSR set to: 1
 25941                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 25942  004082  0E00               	movlw	0
 25943  004084  6E01               	movwf	USBStallEndpoint@dir,c
 25944  004086  0E02               	movlw	2
 25945  004088  ECD7  F01E         	call	_USBStallEndpoint
 25946                           
 25947                           ;usb_device_msd.c: 1636: }
 25948  00408C  0012               	return	
 25949  00408E                     l755:
 25950                           
 25951                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 25952  00408E  0E01               	movlw	1
 25953  004090  6E01               	movwf	USBStallEndpoint@dir,c
 25954  004092  0E02               	movlw	2
 25955  004094  ECD7  F01E         	call	_USBStallEndpoint
 25956                           
 25957                           ;usb_device_msd.c: 1644: }
 25958                           
 25959                           ;usb_device_msd.c: 1643: break;
 25960                           
 25961                           ;usb_device_msd.c: 1642: default:
 25962                           
 25963                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 25964  004098  0012               	return	
 25965  00409A                     l747:
 25966  00409A  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 25967                           
 25968                           ; Switch size 1, requested type "space"
 25969                           ; Number of cases is 6, Range of values is 1 to 127
 25970                           ; switch strategies available:
 25971                           ; Name         Instructions Cycles
 25972                           ; simple_byte           19    10 (average)
 25973                           ;	Chosen strategy is simple_byte
 25974  00409C  0A01               	xorlw	1	; case 1
 25975  00409E  B4D8               	btfsc	status,2,c
 25976  0040A0  D7B9               	goto	l748
 25977  0040A2  0A03               	xorlw	3	; case 2
 25978  0040A4  B4D8               	btfsc	status,2,c
 25979  0040A6  D7BA               	goto	l750
 25980  0040A8  0A01               	xorlw	1	; case 3
 25981  0040AA  B4D8               	btfsc	status,2,c
 25982  0040AC  D7BD               	goto	l751
 25983  0040AE  0A07               	xorlw	7	; case 4
 25984  0040B0  B4D8               	btfsc	status,2,c
 25985  0040B2  D7C3               	goto	l752
 25986  0040B4  0A01               	xorlw	1	; case 5
 25987  0040B6  B4D8               	btfsc	status,2,c
 25988  0040B8  D7C6               	goto	l753
 25989  0040BA  0A7A               	xorlw	122	; case 127
 25990  0040BC  A4D8               	btfss	status,2,c
 25991  0040BE  0012               	return	
 25992  0040C0  D7CB               	goto	l754
 25993  0040C2                     __end_of_MSDErrorHandler:
 25994                           	opt stack 0
 25995                           tosu	equ	0xFFF
 25996                           tosh	equ	0xFFE
 25997                           tosl	equ	0xFFD
 25998                           pclath	equ	0xFFA
 25999                           tblptru	equ	0xFF8
 26000                           tblptrh	equ	0xFF7
 26001                           tblptrl	equ	0xFF6
 26002                           tablat	equ	0xFF5
 26003                           prodh	equ	0xFF4
 26004                           prodl	equ	0xFF3
 26005                           intcon	equ	0xFF2
 26006                           intcon2	equ	0xFF1
 26007                           intcon3	equ	0xFF0
 26008                           indf0	equ	0xFEF
 26009                           postinc0	equ	0xFEE
 26010                           fsr0h	equ	0xFEA
 26011                           fsr0l	equ	0xFE9
 26012                           wreg	equ	0xFE8
 26013                           indf1	equ	0xFE7
 26014                           postdec1	equ	0xFE5
 26015                           plusw1	equ	0xFE3
 26016                           fsr1h	equ	0xFE2
 26017                           fsr1l	equ	0xFE1
 26018                           indf2	equ	0xFDF
 26019                           postinc2	equ	0xFDE
 26020                           postdec2	equ	0xFDD
 26021                           plusw2	equ	0xFDB
 26022                           fsr2h	equ	0xFDA
 26023                           fsr2l	equ	0xFD9
 26024                           status	equ	0xFD8
 26025                           
 26026 ;; *************** function _USBStallEndpoint *****************
 26027 ;; Defined at:
 26028 ;;		line 1073 in file "usb_device.c"
 26029 ;; Parameters:    Size  Location     Type
 26030 ;;  ep              1    wreg     unsigned char 
 26031 ;;  dir             1    0[COMRAM] unsigned char 
 26032 ;; Auto vars:     Size  Location     Type
 26033 ;;  ep              1    5[COMRAM] unsigned char 
 26034 ;;  p               2    6[COMRAM] PTR struct __BDT
 26035 ;;		 -> BDT(48), 
 26036 ;; Return value:  Size  Location     Type
 26037 ;;                  1    wreg      void 
 26038 ;; Registers used:
 26039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26040 ;; Tracked objects:
 26041 ;;		On entry : 0/0
 26042 ;;		On exit  : 0/0
 26043 ;;		Unchanged: 0/0
 26044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26046 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26047 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26049 ;;Total ram usage:        8 bytes
 26050 ;; Hardware stack levels used:    1
 26051 ;; This function calls:
 26052 ;;		Nothing
 26053 ;; This function is called by:
 26054 ;;		_MSDTasks
 26055 ;;		_MSDReadHandler
 26056 ;;		_MSDWriteHandler
 26057 ;;		_MSDErrorHandler
 26058 ;;		_MSDTransferTerminated
 26059 ;; This function uses a non-reentrant model
 26060 ;;
 26061                           
 26062                           	psect	text115
 26063  003DAE                     __ptext115:
 26064                           	opt stack 0
 26065  003DAE                     _USBStallEndpoint:
 26066                           	opt stack 27
 26067                           
 26068                           ;incstack = 0
 26069                           ;USBStallEndpoint@ep stored from wreg
 26070  003DAE  6E06               	movwf	USBStallEndpoint@ep,c
 26071                           
 26072                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26073  003DB0  5006               	movf	USBStallEndpoint@ep,w,c
 26074  003DB2  A4D8               	btfss	status,2,c
 26075  003DB4  D02C               	goto	l191
 26076                           
 26077                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26078  003DB6  0100               	movlb	0	; () banked
 26079  003DB8  EE20 F001          	lfsr	2,1
 26080  003DBC  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26081  003DBE  26D9               	addwf	fsr2l,f,c
 26082  003DC0  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26083  003DC2  22DA               	addwfc	fsr2h,f,c
 26084  003DC4  0E08               	movlw	8
 26085  003DC6  6EDF               	movwf	indf2,c
 26086                           
 26087                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26088  003DC8  EE20 F002          	lfsr	2,2
 26089  003DCC  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26090  003DCE  26D9               	addwf	fsr2l,f,c
 26091  003DD0  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26092  003DD2  22DA               	addwfc	fsr2h,f,c
 26093  003DD4  0E30               	movlw	48
 26094  003DD6  6EDE               	movwf	postinc2,c
 26095  003DD8  0E0D               	movlw	13
 26096  003DDA  6EDD               	movwf	postdec2,c
 26097                           
 26098                           ; BSR set to: 0
 26099                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26100  003DDC  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26101  003DE0  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26102  003DE4  0E0C               	movlw	12
 26103  003DE6  6EDF               	movwf	indf2,c
 26104                           
 26105                           ; BSR set to: 0
 26106                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26107  003DE8  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26108  003DEC  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26109  003DF0  0E00               	movlw	0
 26110  003DF2  8EDB               	bsf	plusw2,7,c
 26111                           
 26112                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 26113  003DF4  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26114  003DF8  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26115  003DFC  0E04               	movlw	4
 26116  003DFE  6EDF               	movwf	indf2,c
 26117                           
 26118                           ; BSR set to: 0
 26119                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26120  003E00  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26121  003E04  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26122  003E08  0E00               	movlw	0
 26123  003E0A  8EDB               	bsf	plusw2,7,c
 26124                           
 26125                           ;usb_device.c: 1089: }
 26126  003E0C  0012               	return	
 26127  003E0E                     l191:
 26128                           
 26129                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 26130                           
 26131                           ; BSR set to: 0
 26132  003E0E  5001               	movf	USBStallEndpoint@dir,w,c
 26133  003E10  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 26134  003E12  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 26135  003E14  90D8               	bcf	status,0,c
 26136  003E16  3602               	rlcf	??_USBStallEndpoint,f,c
 26137  003E18  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26138  003E1A  5006               	movf	USBStallEndpoint@ep,w,c
 26139  003E1C  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 26140  003E1E  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 26141  003E20  90D8               	bcf	status,0,c
 26142  003E22  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26143  003E24  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26144  003E26  90D8               	bcf	status,0,c
 26145  003E28  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26146  003E2A  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26147  003E2C  5002               	movf	??_USBStallEndpoint,w,c
 26148  003E2E  2604               	addwf	??_USBStallEndpoint+2,f,c
 26149  003E30  5003               	movf	??_USBStallEndpoint+1,w,c
 26150  003E32  2205               	addwfc	??_USBStallEndpoint+3,f,c
 26151  003E34  90D8               	bcf	status,0,c
 26152  003E36  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26153  003E38  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26154  003E3A  90D8               	bcf	status,0,c
 26155  003E3C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26156  003E3E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26157  003E40  0E00               	movlw	0
 26158  003E42  2404               	addwf	??_USBStallEndpoint+2,w,c
 26159  003E44  6E07               	movwf	USBStallEndpoint@p,c
 26160  003E46  0E0D               	movlw	13
 26161  003E48  2005               	addwfc	??_USBStallEndpoint+3,w,c
 26162  003E4A  6E08               	movwf	USBStallEndpoint@p+1,c
 26163                           
 26164                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 26165  003E4C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26166  003E50  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26167  003E54  0E00               	movlw	0
 26168  003E56  84DB               	bsf	plusw2,2,c
 26169                           
 26170                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 26171  003E58  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26172  003E5C  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26173  003E60  0E00               	movlw	0
 26174  003E62  8EDB               	bsf	plusw2,7,c
 26175                           
 26176                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 26177  003E64  5006               	movf	USBStallEndpoint@ep,w,c
 26178  003E66  0D04               	mullw	4
 26179  003E68  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 26180  003E6C  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 26181  003E70  5001               	movf	USBStallEndpoint@dir,w,c
 26182  003E72  0D02               	mullw	2
 26183  003E74  50F3               	movf	prodl,w,c
 26184  003E76  2602               	addwf	??_USBStallEndpoint,f,c
 26185  003E78  50F4               	movf	prodh,w,c
 26186  003E7A  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26187  003E7C  90D8               	bcf	status,0,c
 26188  003E7E  3602               	rlcf	??_USBStallEndpoint,f,c
 26189  003E80  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26190  003E82  90D8               	bcf	status,0,c
 26191  003E84  3602               	rlcf	??_USBStallEndpoint,f,c
 26192  003E86  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26193  003E88  0E04               	movlw	4
 26194  003E8A  2602               	addwf	??_USBStallEndpoint,f,c
 26195  003E8C  0E00               	movlw	0
 26196  003E8E  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26197  003E90  0E00               	movlw	0
 26198  003E92  2402               	addwf	??_USBStallEndpoint,w,c
 26199  003E94  6E07               	movwf	USBStallEndpoint@p,c
 26200  003E96  0E0D               	movlw	13
 26201  003E98  2003               	addwfc	??_USBStallEndpoint+1,w,c
 26202  003E9A  6E08               	movwf	USBStallEndpoint@p+1,c
 26203                           
 26204                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 26205  003E9C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26206  003EA0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26207  003EA4  0E00               	movlw	0
 26208  003EA6  84DB               	bsf	plusw2,2,c
 26209                           
 26210                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 26211  003EA8  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26212  003EAC  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26213  003EB0  0E00               	movlw	0
 26214  003EB2  8EDB               	bsf	plusw2,7,c
 26215  003EB4  0012               	return	
 26216  003EB6                     __end_of_USBStallEndpoint:
 26217                           	opt stack 0
 26218                           tosu	equ	0xFFF
 26219                           tosh	equ	0xFFE
 26220                           tosl	equ	0xFFD
 26221                           pclath	equ	0xFFA
 26222                           tblptru	equ	0xFF8
 26223                           tblptrh	equ	0xFF7
 26224                           tblptrl	equ	0xFF6
 26225                           tablat	equ	0xFF5
 26226                           prodh	equ	0xFF4
 26227                           prodl	equ	0xFF3
 26228                           intcon	equ	0xFF2
 26229                           intcon2	equ	0xFF1
 26230                           intcon3	equ	0xFF0
 26231                           indf0	equ	0xFEF
 26232                           postinc0	equ	0xFEE
 26233                           fsr0h	equ	0xFEA
 26234                           fsr0l	equ	0xFE9
 26235                           wreg	equ	0xFE8
 26236                           indf1	equ	0xFE7
 26237                           postdec1	equ	0xFE5
 26238                           plusw1	equ	0xFE3
 26239                           fsr1h	equ	0xFE2
 26240                           fsr1l	equ	0xFE1
 26241                           indf2	equ	0xFDF
 26242                           postinc2	equ	0xFDE
 26243                           postdec2	equ	0xFDD
 26244                           plusw2	equ	0xFDB
 26245                           fsr2h	equ	0xFDA
 26246                           fsr2l	equ	0xFD9
 26247                           status	equ	0xFD8
 26248                           
 26249 ;; *************** function _ResetSenseData *****************
 26250 ;; Defined at:
 26251 ;;		line 1373 in file "usb_device_msd.c"
 26252 ;; Parameters:    Size  Location     Type
 26253 ;;		None
 26254 ;; Auto vars:     Size  Location     Type
 26255 ;;		None
 26256 ;; Return value:  Size  Location     Type
 26257 ;;                  1    wreg      void 
 26258 ;; Registers used:
 26259 ;;		wreg, status,2
 26260 ;; Tracked objects:
 26261 ;;		On entry : 0/0
 26262 ;;		On exit  : 0/0
 26263 ;;		Unchanged: 0/0
 26264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26269 ;;Total ram usage:        0 bytes
 26270 ;; Hardware stack levels used:    1
 26271 ;; This function calls:
 26272 ;;		Nothing
 26273 ;; This function is called by:
 26274 ;;		_USBMSDInit
 26275 ;;		_MSDProcessCommandMediaAbsent
 26276 ;;		_MSDProcessCommandMediaPresent
 26277 ;;		_MSDErrorHandler
 26278 ;; This function uses a non-reentrant model
 26279 ;;
 26280                           
 26281                           	psect	text116
 26282  0069BA                     __ptext116:
 26283                           	opt stack 0
 26284  0069BA                     _ResetSenseData:
 26285                           	opt stack 26
 26286                           
 26287                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 26288                           
 26289                           ;incstack = 0
 26290  0069BA  0101               	movlb	1	; () banked
 26291  0069BC  911F               	bcf	_gblSenseData& (0+255),0,b
 26292  0069BE  931F               	bcf	_gblSenseData& (0+255),1,b
 26293  0069C0  951F               	bcf	_gblSenseData& (0+255),2,b
 26294  0069C2  971F               	bcf	_gblSenseData& (0+255),3,b
 26295  0069C4  891F               	bsf	_gblSenseData& (0+255),4,b
 26296  0069C6  8B1F               	bsf	_gblSenseData& (0+255),5,b
 26297  0069C8  8D1F               	bsf	_gblSenseData& (0+255),6,b
 26298                           
 26299                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 26300  0069CA  9F1F               	bcf	_gblSenseData& (0+255),7,b
 26301                           
 26302                           ; BSR set to: 1
 26303                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 26304  0069CC  0E00               	movlw	0
 26305  0069CE  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 26306                           
 26307                           ; BSR set to: 1
 26308                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 26309  0069D0  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26310  0069D2  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26311  0069D4  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26312  0069D6  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26313                           
 26314                           ; BSR set to: 1
 26315                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 26316  0069D8  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 26317                           
 26318                           ; BSR set to: 1
 26319                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 26320  0069DA  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 26321                           
 26322                           ; BSR set to: 1
 26323                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 26324  0069DC  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 26325                           
 26326                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 26327  0069DE  0E00               	movlw	0
 26328  0069E0  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 26329                           
 26330                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 26331  0069E2  0E00               	movlw	0
 26332  0069E4  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 26333                           
 26334                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 26335  0069E6  0E00               	movlw	0
 26336  0069E8  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 26337                           
 26338                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 26339  0069EA  0E00               	movlw	0
 26340  0069EC  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 26341                           
 26342                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 26343  0069EE  0E0A               	movlw	10
 26344  0069F0  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 26345                           
 26346                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 26347  0069F2  0E00               	movlw	0
 26348  0069F4  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 26349  0069F6  0E00               	movlw	0
 26350  0069F8  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 26351  0069FA  0E00               	movlw	0
 26352  0069FC  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 26353  0069FE  0E00               	movlw	0
 26354  006A00  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 26355                           
 26356                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 26357  006A02  0E00               	movlw	0
 26358  006A04  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26359                           
 26360                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 26361  006A06  0E00               	movlw	0
 26362  006A08  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26363                           
 26364                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 26365  006A0A  0E00               	movlw	0
 26366  006A0C  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 26367                           
 26368                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 26369  006A0E  0E00               	movlw	0
 26370  006A10  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 26371                           
 26372                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 26373  006A12  0E00               	movlw	0
 26374  006A14  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 26375                           
 26376                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 26377  006A16  0E00               	movlw	0
 26378  006A18  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 26379                           
 26380                           ; BSR set to: 1
 26381  006A1A  0012               	return		;funcret
 26382  006A1C                     __end_of_ResetSenseData:
 26383                           	opt stack 0
 26384                           tosu	equ	0xFFF
 26385                           tosh	equ	0xFFE
 26386                           tosl	equ	0xFFD
 26387                           pclath	equ	0xFFA
 26388                           tblptru	equ	0xFF8
 26389                           tblptrh	equ	0xFF7
 26390                           tblptrl	equ	0xFF6
 26391                           tablat	equ	0xFF5
 26392                           prodh	equ	0xFF4
 26393                           prodl	equ	0xFF3
 26394                           intcon	equ	0xFF2
 26395                           intcon2	equ	0xFF1
 26396                           intcon3	equ	0xFF0
 26397                           indf0	equ	0xFEF
 26398                           postinc0	equ	0xFEE
 26399                           fsr0h	equ	0xFEA
 26400                           fsr0l	equ	0xFE9
 26401                           wreg	equ	0xFE8
 26402                           indf1	equ	0xFE7
 26403                           postdec1	equ	0xFE5
 26404                           plusw1	equ	0xFE3
 26405                           fsr1h	equ	0xFE2
 26406                           fsr1l	equ	0xFE1
 26407                           indf2	equ	0xFDF
 26408                           postinc2	equ	0xFDE
 26409                           postdec2	equ	0xFDD
 26410                           plusw2	equ	0xFDB
 26411                           fsr2h	equ	0xFDA
 26412                           fsr2l	equ	0xFD9
 26413                           status	equ	0xFD8
 26414                           
 26415 ;; *************** function _ExternalFlash_SectorRead *****************
 26416 ;; Defined at:
 26417 ;;		line 40 in file "external_flash.c"
 26418 ;; Parameters:    Size  Location     Type
 26419 ;;  config          2   44[COMRAM] PTR void 
 26420 ;;		 -> NULL(0), 
 26421 ;;  sector_addr     4   46[COMRAM] unsigned long 
 26422 ;;  buffer          2   50[COMRAM] PTR unsigned char 
 26423 ;;		 -> msd_buffer(512), 
 26424 ;; Auto vars:     Size  Location     Type
 26425 ;;  page            2   52[COMRAM] unsigned int 
 26426 ;; Return value:  Size  Location     Type
 26427 ;;                  1    wreg      unsigned char 
 26428 ;; Registers used:
 26429 ;;		wreg, status,2, status,0, cstack
 26430 ;; Tracked objects:
 26431 ;;		On entry : 0/0
 26432 ;;		On exit  : 0/0
 26433 ;;		Unchanged: 0/0
 26434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26435 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26438 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26439 ;;Total ram usage:       10 bytes
 26440 ;; Hardware stack levels used:    1
 26441 ;; Hardware stack levels required when called:    7
 26442 ;; This function calls:
 26443 ;;		_flash_page_read
 26444 ;; This function is called by:
 26445 ;;		_MSDReadHandler
 26446 ;; This function uses a non-reentrant model
 26447 ;;
 26448                           
 26449                           	psect	text117
 26450  00752E                     __ptext117:
 26451                           	opt stack 0
 26452  00752E                     _ExternalFlash_SectorRead:
 26453                           	opt stack 18
 26454                           
 26455                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 26456                           
 26457                           ; BSR set to: 1
 26458                           ;incstack = 0
 26459  00752E  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 26460  007532  C030  F036         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 26461                           
 26462                           ;external_flash.c: 45: if(sector_addr >= 8196)
 26463  007536  5032               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 26464  007538  1031               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 26465  00753A  E106               	bnz	u6730
 26466  00753C  0E04               	movlw	4
 26467  00753E  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr,w,c
 26468  007540  0E20               	movlw	32
 26469  007542  5830               	subwfb	ExternalFlash_SectorRead@sector_addr+1,w,c
 26470  007544  A0D8               	btfss	status,0,c
 26471  007546  D002               	goto	l1735
 26472  007548                     u6730:
 26473                           
 26474                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 26475  007548  0E00               	movlw	0
 26476  00754A  0012               	return	
 26477  00754C                     l1735:
 26478                           
 26479                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 26480  00754C  C035  F029         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 26481  007550  C036  F02A         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 26482  007554  C033  F02B         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 26483  007558  C034  F02C         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 26484  00755C  EC00  F03B         	call	_flash_page_read	;wreg free
 26485                           
 26486                           ;external_flash.c: 53: return 1;
 26487  007560  0E01               	movlw	1
 26488  007562  0012               	return	
 26489  007564                     __end_of_ExternalFlash_SectorRead:
 26490                           	opt stack 0
 26491                           tosu	equ	0xFFF
 26492                           tosh	equ	0xFFE
 26493                           tosl	equ	0xFFD
 26494                           pclath	equ	0xFFA
 26495                           tblptru	equ	0xFF8
 26496                           tblptrh	equ	0xFF7
 26497                           tblptrl	equ	0xFF6
 26498                           tablat	equ	0xFF5
 26499                           prodh	equ	0xFF4
 26500                           prodl	equ	0xFF3
 26501                           intcon	equ	0xFF2
 26502                           intcon2	equ	0xFF1
 26503                           intcon3	equ	0xFF0
 26504                           indf0	equ	0xFEF
 26505                           postinc0	equ	0xFEE
 26506                           fsr0h	equ	0xFEA
 26507                           fsr0l	equ	0xFE9
 26508                           wreg	equ	0xFE8
 26509                           indf1	equ	0xFE7
 26510                           postdec1	equ	0xFE5
 26511                           plusw1	equ	0xFE3
 26512                           fsr1h	equ	0xFE2
 26513                           fsr1l	equ	0xFE1
 26514                           indf2	equ	0xFDF
 26515                           postinc2	equ	0xFDE
 26516                           postdec2	equ	0xFDD
 26517                           plusw2	equ	0xFDB
 26518                           fsr2h	equ	0xFDA
 26519                           fsr2l	equ	0xFD9
 26520                           status	equ	0xFD8
 26521                           
 26522 ;; *************** function _flash_page_read *****************
 26523 ;; Defined at:
 26524 ;;		line 416 in file "flash.c"
 26525 ;; Parameters:    Size  Location     Type
 26526 ;;  page            2   40[COMRAM] unsigned int 
 26527 ;;  data            2   42[COMRAM] PTR unsigned char 
 26528 ;;		 -> buffer(512), msd_buffer(512), 
 26529 ;; Auto vars:     Size  Location     Type
 26530 ;;		None
 26531 ;; Return value:  Size  Location     Type
 26532 ;;                  1    wreg      void 
 26533 ;; Registers used:
 26534 ;;		wreg, status,2, status,0, cstack
 26535 ;; Tracked objects:
 26536 ;;		On entry : 0/0
 26537 ;;		On exit  : 0/0
 26538 ;;		Unchanged: 0/0
 26539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26544 ;;Total ram usage:        4 bytes
 26545 ;; Hardware stack levels used:    1
 26546 ;; Hardware stack levels required when called:    6
 26547 ;; This function calls:
 26548 ;;		__flash_partial_read
 26549 ;;		_spi_set_configuration
 26550 ;; This function is called by:
 26551 ;;		_ExternalFlash_SectorRead
 26552 ;;		_fat_get_format_status
 26553 ;; This function uses a non-reentrant model
 26554 ;;
 26555                           
 26556                           	psect	text118
 26557  007600                     __ptext118:
 26558                           	opt stack 0
 26559  007600                     _flash_page_read:
 26560                           	opt stack 21
 26561                           
 26562                           ;flash.c: 419: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 26563                           
 26564                           ;incstack = 0
 26565  007600  0E00               	movlw	0
 26566  007602  EC6E  F035         	call	_spi_set_configuration
 26567                           
 26568                           ;flash.c: 422: _flash_partial_read(page, 0, 512, data);
 26569  007606  C029  F015         	movff	flash_page_read@page,__flash_partial_read@page
 26570  00760A  C02A  F016         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 26571  00760E  0E00               	movlw	0
 26572  007610  6E18               	movwf	__flash_partial_read@start+1,c
 26573  007612  0E00               	movlw	0
 26574  007614  6E17               	movwf	__flash_partial_read@start,c
 26575  007616  0E02               	movlw	2
 26576  007618  6E1A               	movwf	__flash_partial_read@length+1,c
 26577  00761A  0E00               	movlw	0
 26578  00761C  6E19               	movwf	__flash_partial_read@length,c
 26579  00761E  C02B  F01B         	movff	flash_page_read@data,__flash_partial_read@data
 26580  007622  C02C  F01C         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 26581  007626  EC02  F031         	call	__flash_partial_read	;wreg free
 26582                           
 26583                           ;flash.c: 425: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 26584  00762A  0E01               	movlw	1
 26585  00762C  EC6E  F035         	call	_spi_set_configuration
 26586  007630  0012               	return		;funcret
 26587  007632                     __end_of_flash_page_read:
 26588                           	opt stack 0
 26589                           tosu	equ	0xFFF
 26590                           tosh	equ	0xFFE
 26591                           tosl	equ	0xFFD
 26592                           pclath	equ	0xFFA
 26593                           tblptru	equ	0xFF8
 26594                           tblptrh	equ	0xFF7
 26595                           tblptrl	equ	0xFF6
 26596                           tablat	equ	0xFF5
 26597                           prodh	equ	0xFF4
 26598                           prodl	equ	0xFF3
 26599                           intcon	equ	0xFF2
 26600                           intcon2	equ	0xFF1
 26601                           intcon3	equ	0xFF0
 26602                           indf0	equ	0xFEF
 26603                           postinc0	equ	0xFEE
 26604                           fsr0h	equ	0xFEA
 26605                           fsr0l	equ	0xFE9
 26606                           wreg	equ	0xFE8
 26607                           indf1	equ	0xFE7
 26608                           postdec1	equ	0xFE5
 26609                           plusw1	equ	0xFE3
 26610                           fsr1h	equ	0xFE2
 26611                           fsr1l	equ	0xFE1
 26612                           indf2	equ	0xFDF
 26613                           postinc2	equ	0xFDE
 26614                           postdec2	equ	0xFDD
 26615                           plusw2	equ	0xFDB
 26616                           fsr2h	equ	0xFDA
 26617                           fsr2l	equ	0xFD9
 26618                           status	equ	0xFD8
 26619                           
 26620 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 26621 ;; Defined at:
 26622 ;;		line 993 in file "usb_device_msd.c"
 26623 ;; Parameters:    Size  Location     Type
 26624 ;;  DiExpected      2    0[COMRAM] unsigned int 
 26625 ;; Auto vars:     Size  Location     Type
 26626 ;;		None
 26627 ;; Return value:  Size  Location     Type
 26628 ;;                  1    wreg      void 
 26629 ;; Registers used:
 26630 ;;		wreg, status,2, status,0
 26631 ;; Tracked objects:
 26632 ;;		On entry : 0/0
 26633 ;;		On exit  : 0/0
 26634 ;;		Unchanged: 0/0
 26635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26640 ;;Total ram usage:        6 bytes
 26641 ;; Hardware stack levels used:    1
 26642 ;; This function calls:
 26643 ;;		Nothing
 26644 ;; This function is called by:
 26645 ;;		_MSDProcessCommandMediaPresent
 26646 ;; This function uses a non-reentrant model
 26647 ;;
 26648                           
 26649                           	psect	text119
 26650  0058E0                     __ptext119:
 26651                           	opt stack 0
 26652  0058E0                     _MSDComputeDeviceInAndResidue:
 26653                           	opt stack 26
 26654                           
 26655                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 26656                           
 26657                           ;incstack = 0
 26658  0058E0  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 26659  0058E2  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 26660  0058E4  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 26661  0058E6  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 26662  0058E8  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 26663  0058EA  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 26664  0058EC  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 26665  0058EE  0101               	movlb	1	; () banked
 26666  0058F0  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 26667  0058F2  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 26668  0058F4  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 26669  0058F6  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 26670  0058F8  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 26671  0058FA  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 26672  0058FC  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 26673  0058FE  B0D8               	btfsc	status,0,c
 26674  005900  D00E               	goto	l659
 26675                           
 26676                           ; BSR set to: 1
 26677                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 26678  005902  0E00               	movlw	0
 26679  005904  010D               	movlb	13	; () banked
 26680  005906  6F88               	movwf	136,b	;volatile
 26681  005908  0E00               	movlw	0
 26682  00590A  6F89               	movwf	137,b	;volatile
 26683  00590C  0E00               	movlw	0
 26684  00590E  6F8A               	movwf	138,b	;volatile
 26685  005910  0E00               	movlw	0
 26686  005912  6F8B               	movwf	139,b	;volatile
 26687                           
 26688                           ; BSR set to: 13
 26689                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 26690  005914  C108  F08C         	movff	_gblCBW+8,_TransferLength
 26691  005918  C109  F08D         	movff	_gblCBW+9,_TransferLength+1
 26692                           
 26693                           ;usb_device_msd.c: 1002: }
 26694  00591C  0012               	return	
 26695  00591E                     l659:
 26696                           
 26697                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 26698                           
 26699                           ; BSR set to: 13
 26700  00591E  0100               	movlb	0	; () banked
 26701  005920  518C               	movf	_TransferLength& (0+255),w,b
 26702  005922  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 26703  005924  518D               	movf	(_TransferLength+1)& (0+255),w,b
 26704  005926  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 26705  005928  B0D8               	btfsc	status,0,c
 26706  00592A  D004               	goto	l661
 26707                           
 26708                           ; BSR set to: 0
 26709                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 26710  00592C  C001  F08C         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 26711  005930  C002  F08D         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 26712  005934                     l661:
 26713                           
 26714                           ; BSR set to: 0
 26715                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 26716                           
 26717                           ; BSR set to: 0
 26718  005934  518C               	movf	_TransferLength& (0+255),w,b
 26719  005936  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 26720  005938  518D               	movf	(_TransferLength+1)& (0+255),w,b
 26721  00593A  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 26722  00593C  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 26723  00593E  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 26724  005940  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 26725  005942  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 26726  005944  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 26727  005946  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 26728  005948  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 26729  00594A  0E00               	movlw	0
 26730  00594C  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 26731  00594E  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 26732  005950  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 26733  005952  0101               	movlb	1	; () banked
 26734  005954  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26735  005956  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 26736  005958  010D               	movlb	13	; () banked
 26737  00595A  6F88               	movwf	136,b	;volatile
 26738  00595C  0101               	movlb	1	; () banked
 26739  00595E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 26740  005960  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 26741  005962  010D               	movlb	13	; () banked
 26742  005964  6F89               	movwf	137,b	;volatile
 26743  005966  0101               	movlb	1	; () banked
 26744  005968  510A               	movf	(_gblCBW+10)& (0+255),w,b
 26745  00596A  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 26746  00596C  010D               	movlb	13	; () banked
 26747  00596E  6F8A               	movwf	138,b	;volatile
 26748  005970  0101               	movlb	1	; () banked
 26749  005972  510B               	movf	(_gblCBW+11)& (0+255),w,b
 26750  005974  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 26751  005976  010D               	movlb	13	; () banked
 26752  005978  6F8B               	movwf	139,b	;volatile
 26753  00597A  0012               	return	
 26754  00597C                     __end_of_MSDComputeDeviceInAndResidue:
 26755                           	opt stack 0
 26756                           tosu	equ	0xFFF
 26757                           tosh	equ	0xFFE
 26758                           tosl	equ	0xFFD
 26759                           pclath	equ	0xFFA
 26760                           tblptru	equ	0xFF8
 26761                           tblptrh	equ	0xFF7
 26762                           tblptrl	equ	0xFF6
 26763                           tablat	equ	0xFF5
 26764                           prodh	equ	0xFF4
 26765                           prodl	equ	0xFF3
 26766                           intcon	equ	0xFF2
 26767                           intcon2	equ	0xFF1
 26768                           intcon3	equ	0xFF0
 26769                           indf0	equ	0xFEF
 26770                           postinc0	equ	0xFEE
 26771                           fsr0h	equ	0xFEA
 26772                           fsr0l	equ	0xFE9
 26773                           wreg	equ	0xFE8
 26774                           indf1	equ	0xFE7
 26775                           postdec1	equ	0xFE5
 26776                           plusw1	equ	0xFE3
 26777                           fsr1h	equ	0xFE2
 26778                           fsr1l	equ	0xFE1
 26779                           indf2	equ	0xFDF
 26780                           postinc2	equ	0xFDE
 26781                           postdec2	equ	0xFDD
 26782                           plusw2	equ	0xFDB
 26783                           fsr2h	equ	0xFDA
 26784                           fsr2l	equ	0xFD9
 26785                           status	equ	0xFD8
 26786                           
 26787 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 26788 ;; Defined at:
 26789 ;;		line 18 in file "external_flash.c"
 26790 ;; Parameters:    Size  Location     Type
 26791 ;;  config          2    0[COMRAM] PTR void 
 26792 ;;		 -> NULL(0), 
 26793 ;; Auto vars:     Size  Location     Type
 26794 ;;		None
 26795 ;; Return value:  Size  Location     Type
 26796 ;;                  2    0[COMRAM] unsigned int 
 26797 ;; Registers used:
 26798 ;;		wreg, status,2
 26799 ;; Tracked objects:
 26800 ;;		On entry : 0/0
 26801 ;;		On exit  : 0/0
 26802 ;;		Unchanged: 0/0
 26803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26808 ;;Total ram usage:        2 bytes
 26809 ;; Hardware stack levels used:    1
 26810 ;; This function calls:
 26811 ;;		Nothing
 26812 ;; This function is called by:
 26813 ;;		_MSDProcessCommandMediaPresent
 26814 ;; This function uses a non-reentrant model
 26815 ;;
 26816                           
 26817                           	psect	text120
 26818  007B38                     __ptext120:
 26819                           	opt stack 0
 26820  007B38                     _ExternalFlash_SectorSizeRead:
 26821                           	opt stack 26
 26822                           
 26823                           ;external_flash.c: 20: return 512;
 26824                           
 26825                           ; BSR set to: 13
 26826                           ;incstack = 0
 26827  007B38  0E02               	movlw	2
 26828  007B3A  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 26829  007B3C  0E00               	movlw	0
 26830  007B3E  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 26831  007B40  0012               	return	
 26832  007B42                     __end_of_ExternalFlash_SectorSizeRead:
 26833                           	opt stack 0
 26834                           tosu	equ	0xFFF
 26835                           tosh	equ	0xFFE
 26836                           tosl	equ	0xFFD
 26837                           pclath	equ	0xFFA
 26838                           tblptru	equ	0xFF8
 26839                           tblptrh	equ	0xFF7
 26840                           tblptrl	equ	0xFF6
 26841                           tablat	equ	0xFF5
 26842                           prodh	equ	0xFF4
 26843                           prodl	equ	0xFF3
 26844                           intcon	equ	0xFF2
 26845                           intcon2	equ	0xFF1
 26846                           intcon3	equ	0xFF0
 26847                           indf0	equ	0xFEF
 26848                           postinc0	equ	0xFEE
 26849                           fsr0h	equ	0xFEA
 26850                           fsr0l	equ	0xFE9
 26851                           wreg	equ	0xFE8
 26852                           indf1	equ	0xFE7
 26853                           postdec1	equ	0xFE5
 26854                           plusw1	equ	0xFE3
 26855                           fsr1h	equ	0xFE2
 26856                           fsr1l	equ	0xFE1
 26857                           indf2	equ	0xFDF
 26858                           postinc2	equ	0xFDE
 26859                           postdec2	equ	0xFDD
 26860                           plusw2	equ	0xFDB
 26861                           fsr2h	equ	0xFDA
 26862                           fsr2l	equ	0xFD9
 26863                           status	equ	0xFD8
 26864                           
 26865 ;; *************** function _ExternalFlash_CapacityRead *****************
 26866 ;; Defined at:
 26867 ;;		line 23 in file "external_flash.c"
 26868 ;; Parameters:    Size  Location     Type
 26869 ;;  config          2    0[COMRAM] PTR void 
 26870 ;;		 -> NULL(0), 
 26871 ;; Auto vars:     Size  Location     Type
 26872 ;;		None
 26873 ;; Return value:  Size  Location     Type
 26874 ;;                  4    0[COMRAM] unsigned long 
 26875 ;; Registers used:
 26876 ;;		wreg, status,2
 26877 ;; Tracked objects:
 26878 ;;		On entry : 0/0
 26879 ;;		On exit  : 0/0
 26880 ;;		Unchanged: 0/0
 26881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26886 ;;Total ram usage:        4 bytes
 26887 ;; Hardware stack levels used:    1
 26888 ;; This function calls:
 26889 ;;		Nothing
 26890 ;; This function is called by:
 26891 ;;		_MSDProcessCommandMediaPresent
 26892 ;; This function uses a non-reentrant model
 26893 ;;
 26894                           
 26895                           	psect	text121
 26896  007AA2                     __ptext121:
 26897                           	opt stack 0
 26898  007AA2                     _ExternalFlash_CapacityRead:
 26899                           	opt stack 26
 26900                           
 26901                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 26902                           
 26903                           ;incstack = 0
 26904  007AA2  0E03               	movlw	3
 26905  007AA4  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 26906  007AA6  0E20               	movlw	32
 26907  007AA8  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 26908  007AAA  0E00               	movlw	0
 26909  007AAC  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 26910  007AAE  0E00               	movlw	0
 26911  007AB0  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 26912  007AB2  0012               	return	
 26913  007AB4                     __end_of_ExternalFlash_CapacityRead:
 26914                           	opt stack 0
 26915                           tosu	equ	0xFFF
 26916                           tosh	equ	0xFFE
 26917                           tosl	equ	0xFFD
 26918                           pclath	equ	0xFFA
 26919                           tblptru	equ	0xFF8
 26920                           tblptrh	equ	0xFF7
 26921                           tblptrl	equ	0xFF6
 26922                           tablat	equ	0xFF5
 26923                           prodh	equ	0xFF4
 26924                           prodl	equ	0xFF3
 26925                           intcon	equ	0xFF2
 26926                           intcon2	equ	0xFF1
 26927                           intcon3	equ	0xFF0
 26928                           indf0	equ	0xFEF
 26929                           postinc0	equ	0xFEE
 26930                           fsr0h	equ	0xFEA
 26931                           fsr0l	equ	0xFE9
 26932                           wreg	equ	0xFE8
 26933                           indf1	equ	0xFE7
 26934                           postdec1	equ	0xFE5
 26935                           plusw1	equ	0xFE3
 26936                           fsr1h	equ	0xFE2
 26937                           fsr1l	equ	0xFE1
 26938                           indf2	equ	0xFDF
 26939                           postinc2	equ	0xFDE
 26940                           postdec2	equ	0xFDD
 26941                           plusw2	equ	0xFDB
 26942                           fsr2h	equ	0xFDA
 26943                           fsr2l	equ	0xFD9
 26944                           status	equ	0xFD8
 26945                           
 26946 ;; *************** function _ExternalFlash_MediaInitialize *****************
 26947 ;; Defined at:
 26948 ;;		line 10 in file "external_flash.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;  config          2    0[COMRAM] PTR void 
 26951 ;;		 -> NULL(0), 
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;		None
 26954 ;; Return value:  Size  Location     Type
 26955 ;;                  2    0[COMRAM] PTR struct .
 26956 ;; Registers used:
 26957 ;;		wreg, status,2, status,0
 26958 ;; Tracked objects:
 26959 ;;		On entry : 0/0
 26960 ;;		On exit  : 0/0
 26961 ;;		Unchanged: 0/0
 26962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26967 ;;Total ram usage:        2 bytes
 26968 ;; Hardware stack levels used:    1
 26969 ;; This function calls:
 26970 ;;		Nothing
 26971 ;; This function is called by:
 26972 ;;		_USBMSDInit
 26973 ;;		_MSDProcessCommand
 26974 ;; This function uses a non-reentrant model
 26975 ;;
 26976                           
 26977                           	psect	text122
 26978  007A20                     __ptext122:
 26979                           	opt stack 0
 26980  007A20                     _ExternalFlash_MediaInitialize:
 26981                           	opt stack 26
 26982                           
 26983                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 26984                           
 26985                           ;incstack = 0
 26986  007A20  0101               	movlb	1	; () banked
 26987  007A22  81D6               	bsf	(_mediaInformation+1)& (0+255),0,b
 26988                           
 26989                           ; BSR set to: 1
 26990                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 26991  007A24  0E02               	movlw	2
 26992  007A26  6FD8               	movwf	(_mediaInformation+3)& (0+255),b
 26993  007A28  0E00               	movlw	0
 26994  007A2A  6FD7               	movwf	(_mediaInformation+2)& (0+255),b
 26995                           
 26996                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 26997  007A2C  0E00               	movlw	0
 26998  007A2E  6FD5               	movwf	_mediaInformation& (0+255),b
 26999                           
 27000                           ; BSR set to: 1
 27001                           ;external_flash.c: 15: return &mediaInformation;
 27002  007A30  0ED5               	movlw	low _mediaInformation
 27003  007A32  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 27004  007A34  0E01               	movlw	high _mediaInformation
 27005  007A36  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 27006  007A38  0012               	return	
 27007  007A3A                     __end_of_ExternalFlash_MediaInitialize:
 27008                           	opt stack 0
 27009                           tosu	equ	0xFFF
 27010                           tosh	equ	0xFFE
 27011                           tosl	equ	0xFFD
 27012                           pclath	equ	0xFFA
 27013                           tblptru	equ	0xFF8
 27014                           tblptrh	equ	0xFF7
 27015                           tblptrl	equ	0xFF6
 27016                           tablat	equ	0xFF5
 27017                           prodh	equ	0xFF4
 27018                           prodl	equ	0xFF3
 27019                           intcon	equ	0xFF2
 27020                           intcon2	equ	0xFF1
 27021                           intcon3	equ	0xFF0
 27022                           indf0	equ	0xFEF
 27023                           postinc0	equ	0xFEE
 27024                           fsr0h	equ	0xFEA
 27025                           fsr0l	equ	0xFE9
 27026                           wreg	equ	0xFE8
 27027                           indf1	equ	0xFE7
 27028                           postdec1	equ	0xFE5
 27029                           plusw1	equ	0xFE3
 27030                           fsr1h	equ	0xFE2
 27031                           fsr1l	equ	0xFE1
 27032                           indf2	equ	0xFDF
 27033                           postinc2	equ	0xFDE
 27034                           postdec2	equ	0xFDD
 27035                           plusw2	equ	0xFDB
 27036                           fsr2h	equ	0xFDA
 27037                           fsr2l	equ	0xFD9
 27038                           status	equ	0xFD8
 27039                           
 27040 ;; *************** function _ExternalFlash_MediaDetect *****************
 27041 ;; Defined at:
 27042 ;;		line 29 in file "external_flash.c"
 27043 ;; Parameters:    Size  Location     Type
 27044 ;;  config          2    0[COMRAM] PTR void 
 27045 ;;		 -> NULL(0), 
 27046 ;; Auto vars:     Size  Location     Type
 27047 ;;		None
 27048 ;; Return value:  Size  Location     Type
 27049 ;;                  1    wreg      unsigned char 
 27050 ;; Registers used:
 27051 ;;		wreg
 27052 ;; Tracked objects:
 27053 ;;		On entry : 0/0
 27054 ;;		On exit  : 0/0
 27055 ;;		Unchanged: 0/0
 27056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27061 ;;Total ram usage:        2 bytes
 27062 ;; Hardware stack levels used:    1
 27063 ;; This function calls:
 27064 ;;		Nothing
 27065 ;; This function is called by:
 27066 ;;		_USBMSDInit
 27067 ;;		_MSDProcessCommand
 27068 ;; This function uses a non-reentrant model
 27069 ;;
 27070                           
 27071                           	psect	text123
 27072  007BC2                     __ptext123:
 27073                           	opt stack 0
 27074  007BC2                     _ExternalFlash_MediaDetect:
 27075                           	opt stack 26
 27076                           
 27077                           ;external_flash.c: 31: return 1;
 27078                           
 27079                           ; BSR set to: 1
 27080                           ;incstack = 0
 27081  007BC2  0E01               	movlw	1
 27082  007BC4  0012               	return	
 27083  007BC6                     __end_of_ExternalFlash_MediaDetect:
 27084                           	opt stack 0
 27085                           tosu	equ	0xFFF
 27086                           tosh	equ	0xFFE
 27087                           tosl	equ	0xFFD
 27088                           pclath	equ	0xFFA
 27089                           tblptru	equ	0xFF8
 27090                           tblptrh	equ	0xFF7
 27091                           tblptrl	equ	0xFF6
 27092                           tablat	equ	0xFF5
 27093                           prodh	equ	0xFF4
 27094                           prodl	equ	0xFF3
 27095                           intcon	equ	0xFF2
 27096                           intcon2	equ	0xFF1
 27097                           intcon3	equ	0xFF0
 27098                           indf0	equ	0xFEF
 27099                           postinc0	equ	0xFEE
 27100                           fsr0h	equ	0xFEA
 27101                           fsr0l	equ	0xFE9
 27102                           wreg	equ	0xFE8
 27103                           indf1	equ	0xFE7
 27104                           postdec1	equ	0xFE5
 27105                           plusw1	equ	0xFE3
 27106                           fsr1h	equ	0xFE2
 27107                           fsr1l	equ	0xFE1
 27108                           indf2	equ	0xFDF
 27109                           postinc2	equ	0xFDE
 27110                           postdec2	equ	0xFDD
 27111                           plusw2	equ	0xFDB
 27112                           fsr2h	equ	0xFDA
 27113                           fsr2l	equ	0xFD9
 27114                           status	equ	0xFD8
 27115                           
 27116 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 27117 ;; Defined at:
 27118 ;;		line 74 in file "app_device_custom_hid.c"
 27119 ;; Parameters:    Size  Location     Type
 27120 ;;		None
 27121 ;; Auto vars:     Size  Location     Type
 27122 ;;  idx             1    0        unsigned char 
 27123 ;; Return value:  Size  Location     Type
 27124 ;;                  1    wreg      void 
 27125 ;; Registers used:
 27126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27127 ;; Tracked objects:
 27128 ;;		On entry : 0/0
 27129 ;;		On exit  : 0/0
 27130 ;;		Unchanged: 0/0
 27131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27136 ;;Total ram usage:        4 bytes
 27137 ;; Hardware stack levels used:    1
 27138 ;; Hardware stack levels required when called:   13
 27139 ;; This function calls:
 27140 ;;		_USBTransferOnePacket
 27141 ;;		_api_parse
 27142 ;;		_api_prepare
 27143 ;; This function is called by:
 27144 ;;		_main
 27145 ;; This function uses a non-reentrant model
 27146 ;;
 27147                           
 27148                           	psect	text124
 27149  005476                     __ptext124:
 27150                           	opt stack 0
 27151  005476                     _APP_DeviceCustomHIDTasks:
 27152                           	opt stack 17
 27153                           
 27154                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 27155                           
 27156                           ;incstack = 0
 27157  005476  0E20               	movlw	32
 27158  005478  605F               	cpfslt	_USBDeviceState,c
 27159  00547A  D001               	goto	l930
 27160  00547C  0012               	return	
 27161  00547E                     l930:
 27162                           
 27163                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 27164  00547E  B265               	btfsc	3941,1,c	;volatile
 27165  005480  0012               	return	
 27166                           
 27167                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 27168                           
 27169                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 27170  005482  0100               	movlb	0	; () banked
 27171  005484  518A               	movf	_USBOutHandle& (0+255),w,b
 27172  005486  118B               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 27173  005488  B4D8               	btfsc	status,2,c
 27174  00548A  D006               	goto	u11280
 27175                           
 27176                           ; BSR set to: 0
 27177  00548C  C08A  FFD9         	movff	_USBOutHandle,fsr2l
 27178  005490  C08B  FFDA         	movff	_USBOutHandle+1,fsr2h
 27179  005494  BEDF               	btfsc	indf2,7,c
 27180  005496  0012               	return	
 27181  005498                     u11280:
 27182                           
 27183                           ; BSR set to: 0
 27184                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 27185                           
 27186                           ; BSR set to: 0
 27187  005498  5188               	movf	_USBInHandle& (0+255),w,b
 27188  00549A  1189               	iorwf	(_USBInHandle+1)& (0+255),w,b
 27189  00549C  B4D8               	btfsc	status,2,c
 27190  00549E  D006               	goto	u11300
 27191                           
 27192                           ; BSR set to: 0
 27193  0054A0  C088  FFD9         	movff	_USBInHandle,fsr2l
 27194  0054A4  C089  FFDA         	movff	_USBInHandle+1,fsr2h
 27195  0054A8  BEDF               	btfsc	indf2,7,c
 27196  0054AA  D01F               	goto	l936
 27197  0054AC                     u11300:
 27198                           
 27199                           ; BSR set to: 0
 27200                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 27201                           
 27202                           ; BSR set to: 0
 27203  0054AC  0E40               	movlw	_ReceivedDataBuffer& (0+255)
 27204  0054AE  6FF9               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 27205  0054B0  6BFA               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 27206  0054B2  C0F9  F0F5         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 27207  0054B6  C0FA  F0F6         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 27208  0054BA  0E00               	movlw	_ToSendDataBuffer& (0+255)
 27209  0054BC  6FFB               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 27210  0054BE  6BFC               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 27211  0054C0  C0FB  F0F7         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 27212  0054C4  C0FC  F0F8         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 27213  0054C8  EC62  F021         	call	_api_prepare	;wreg free
 27214                           
 27215                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 27216  0054CC  0E01               	movlw	1
 27217  0054CE  6E01               	movwf	USBTransferOnePacket@dir,c
 27218  0054D0  0E00               	movlw	low _ToSendDataBuffer
 27219  0054D2  6E02               	movwf	USBTransferOnePacket@data,c
 27220  0054D4  0E02               	movlw	high _ToSendDataBuffer
 27221  0054D6  6E03               	movwf	USBTransferOnePacket@data+1,c
 27222  0054D8  0E40               	movlw	64
 27223  0054DA  6E04               	movwf	USBTransferOnePacket@len,c
 27224  0054DC  0E01               	movlw	1
 27225  0054DE  EC61  F020         	call	_USBTransferOnePacket
 27226  0054E2  C001  F088         	movff	?_USBTransferOnePacket,_USBInHandle
 27227  0054E6  C002  F089         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 27228  0054EA                     l936:
 27229                           
 27230                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 27231  0054EA  0E40               	movlw	low _ReceivedDataBuffer
 27232  0054EC  0100               	movlb	0	; () banked
 27233  0054EE  6FEF               	movwf	api_parse@inBuffer& (0+255),b
 27234  0054F0  0E02               	movlw	high _ReceivedDataBuffer
 27235  0054F2  6FF0               	movwf	(api_parse@inBuffer+1)& (0+255),b
 27236  0054F4  0E40               	movlw	64
 27237  0054F6  6FF1               	movwf	api_parse@receivedDataLength& (0+255),b
 27238  0054F8  ECE8  F024         	call	_api_parse	;wreg free
 27239                           
 27240                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 27241  0054FC  0E00               	movlw	0
 27242  0054FE  6E01               	movwf	USBTransferOnePacket@dir,c
 27243  005500  0E40               	movlw	low _ReceivedDataBuffer
 27244  005502  6E02               	movwf	USBTransferOnePacket@data,c
 27245  005504  0E02               	movlw	high _ReceivedDataBuffer
 27246  005506  6E03               	movwf	USBTransferOnePacket@data+1,c
 27247  005508  0E40               	movlw	64
 27248  00550A  6E04               	movwf	USBTransferOnePacket@len,c
 27249  00550C  0E01               	movlw	1
 27250  00550E  EC61  F020         	call	_USBTransferOnePacket
 27251  005512  C001  F08A         	movff	?_USBTransferOnePacket,_USBOutHandle
 27252  005516  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 27253  00551A  0012               	return	
 27254  00551C                     __end_of_APP_DeviceCustomHIDTasks:
 27255                           	opt stack 0
 27256                           tosu	equ	0xFFF
 27257                           tosh	equ	0xFFE
 27258                           tosl	equ	0xFFD
 27259                           pclath	equ	0xFFA
 27260                           tblptru	equ	0xFF8
 27261                           tblptrh	equ	0xFF7
 27262                           tblptrl	equ	0xFF6
 27263                           tablat	equ	0xFF5
 27264                           prodh	equ	0xFF4
 27265                           prodl	equ	0xFF3
 27266                           intcon	equ	0xFF2
 27267                           intcon2	equ	0xFF1
 27268                           intcon3	equ	0xFF0
 27269                           indf0	equ	0xFEF
 27270                           postinc0	equ	0xFEE
 27271                           fsr0h	equ	0xFEA
 27272                           fsr0l	equ	0xFE9
 27273                           wreg	equ	0xFE8
 27274                           indf1	equ	0xFE7
 27275                           postdec1	equ	0xFE5
 27276                           plusw1	equ	0xFE3
 27277                           fsr1h	equ	0xFE2
 27278                           fsr1l	equ	0xFE1
 27279                           indf2	equ	0xFDF
 27280                           postinc2	equ	0xFDE
 27281                           postdec2	equ	0xFDD
 27282                           plusw2	equ	0xFDB
 27283                           fsr2h	equ	0xFDA
 27284                           fsr2l	equ	0xFD9
 27285                           status	equ	0xFD8
 27286                           
 27287 ;; *************** function _api_prepare *****************
 27288 ;; Defined at:
 27289 ;;		line 52 in file "api.c"
 27290 ;; Parameters:    Size  Location     Type
 27291 ;;  inBuffer        2   57[BANK0 ] PTR unsigned char 
 27292 ;;		 -> RAM(3759), 
 27293 ;;  outBuffer       2   59[BANK0 ] PTR unsigned char 
 27294 ;;		 -> RAM(3759), 
 27295 ;; Auto vars:     Size  Location     Type
 27296 ;;  command         1   93[COMRAM] enum E6715
 27297 ;; Return value:  Size  Location     Type
 27298 ;;                  1    wreg      void 
 27299 ;; Registers used:
 27300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27301 ;; Tracked objects:
 27302 ;;		On entry : 0/0
 27303 ;;		On exit  : 0/0
 27304 ;;		Unchanged: 0/0
 27305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27306 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27309 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27310 ;;Total ram usage:        5 bytes
 27311 ;; Hardware stack levels used:    1
 27312 ;; Hardware stack levels required when called:   11
 27313 ;; This function calls:
 27314 ;;		__fill_buffer_find_file
 27315 ;;		__fill_buffer_get_bootloader_details
 27316 ;;		__fill_buffer_get_configuration
 27317 ;;		__fill_buffer_get_display
 27318 ;;		__fill_buffer_get_file_details
 27319 ;;		__fill_buffer_get_status
 27320 ;;		__fill_buffer_read_file
 27321 ;;		_flash_is_busy
 27322 ;; This function is called by:
 27323 ;;		_APP_DeviceCustomHIDTasks
 27324 ;; This function uses a non-reentrant model
 27325 ;;
 27326                           
 27327                           	psect	text125
 27328  0042C4                     __ptext125:
 27329                           	opt stack 0
 27330  0042C4                     _api_prepare:
 27331                           	opt stack 18
 27332                           
 27333                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 27334                           
 27335                           ;incstack = 0
 27336  0042C4  C0F5  FFD9         	movff	api_prepare@inBuffer,fsr2l
 27337  0042C8  C0F6  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 27338  0042CC  50DF               	movf	indf2,w,c
 27339  0042CE  6E5E               	movwf	api_prepare@command,c
 27340                           
 27341                           ;api.c: 56: if(command>0x7F)
 27342  0042D0  0E7F               	movlw	127
 27343  0042D2  645E               	cpfsgt	api_prepare@command,c
 27344  0042D4  D05F               	goto	l2425
 27345                           
 27346                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 27347  0042D6  EC34  F03D         	call	_flash_is_busy	;wreg free
 27348  0042DA  0900               	iorlw	0
 27349  0042DC  B4D8               	btfsc	status,2,c
 27350  0042DE  D028               	goto	l2419
 27351                           
 27352                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 27353  0042E0  C0F7  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27354  0042E4  C0F8  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27355  0042E8  EC2E  F023         	call	__fill_buffer_get_status	;wreg free
 27356                           
 27357                           ;api.c: 64: return;
 27358  0042EC  0012               	return	
 27359  0042EE                     
 27360                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 27361  0042EE  C0F5  F040         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 27362  0042F2  C0F6  F041         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 27363  0042F6  C0F7  F042         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 27364  0042FA  C0F8  F043         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 27365  0042FE  ECD0  F032         	call	__fill_buffer_get_file_details	;wreg free
 27366                           
 27367                           ;api.c: 73: break;
 27368  004302  0012               	return	
 27369  004304                     
 27370                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 27371  004304  C0F5  F045         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 27372  004308  C0F6  F046         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 27373  00430C  C0F7  F047         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 27374  004310  C0F8  F048         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 27375  004314  EC32  F02B         	call	__fill_buffer_find_file	;wreg free
 27376                           
 27377                           ;api.c: 78: break;
 27378  004318  0012               	return	
 27379  00431A                     
 27380                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 27381  00431A  C0F5  F056         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 27382  00431E  C0F6  F057         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 27383  004322  C0F7  F058         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 27384  004326  C0F8  F059         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 27385  00432A  EC9B  F011         	call	__fill_buffer_read_file	;wreg free
 27386                           
 27387                           ;api.c: 84: }
 27388                           
 27389                           ;api.c: 83: break;
 27390  00432E  0012               	return	
 27391  004330                     l2419:
 27392  004330  505E               	movf	api_prepare@command,w,c
 27393                           
 27394                           ; Switch size 1, requested type "space"
 27395                           ; Number of cases is 3, Range of values is 128 to 130
 27396                           ; switch strategies available:
 27397                           ; Name         Instructions Cycles
 27398                           ; simple_byte           10     6 (average)
 27399                           ;	Chosen strategy is simple_byte
 27400  004332  0A80               	xorlw	128	; case 128
 27401  004334  B4D8               	btfsc	status,2,c
 27402  004336  D7DB               	goto	l2420
 27403  004338  0A01               	xorlw	1	; case 129
 27404  00433A  B4D8               	btfsc	status,2,c
 27405  00433C  D7E3               	goto	l2422
 27406  00433E  0A03               	xorlw	3	; case 130
 27407  004340  A4D8               	btfss	status,2,c
 27408                           
 27409                           ;api.c: 85: }
 27410  004342  0012               	return	
 27411  004344  D7EA               	goto	l2423
 27412  004346                     
 27413                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 27414  004346  C0F7  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27415  00434A  C0F8  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27416  00434E  EC2E  F023         	call	__fill_buffer_get_status	;wreg free
 27417                           
 27418                           ;api.c: 94: break;
 27419  004352  0012               	return	
 27420  004354                     
 27421                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 27422  004354  C0F7  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27423  004358  C0F8  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27424  00435C  0E00               	movlw	0
 27425  00435E  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27426  004360  EC36  F029         	call	__fill_buffer_get_display	;wreg free
 27427                           
 27428                           ;api.c: 99: break;
 27429  004364  0012               	return	
 27430  004366                     
 27431                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 27432  004366  C0F7  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27433  00436A  C0F8  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27434  00436E  0E01               	movlw	1
 27435  004370  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27436  004372  EC36  F029         	call	__fill_buffer_get_display	;wreg free
 27437                           
 27438                           ;api.c: 104: break;
 27439  004376  0012               	return	
 27440  004378                     
 27441                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 27442  004378  C0F7  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 27443  00437C  C0F8  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 27444  004380  ECA5  F013         	call	__fill_buffer_get_bootloader_details	;wreg free
 27445                           
 27446                           ;api.c: 109: break;
 27447  004384  0012               	return	
 27448  004386                     
 27449                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 27450  004386  C0F7  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 27451  00438A  C0F8  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 27452  00438E  EC21  F02C         	call	__fill_buffer_get_configuration	;wreg free
 27453                           
 27454                           ;api.c: 115: }
 27455                           
 27456                           ;api.c: 114: break;
 27457  004392  0012               	return	
 27458  004394                     l2425:
 27459  004394  505E               	movf	api_prepare@command,w,c
 27460                           
 27461                           ; Switch size 1, requested type "space"
 27462                           ; Number of cases is 5, Range of values is 16 to 20
 27463                           ; switch strategies available:
 27464                           ; Name         Instructions Cycles
 27465                           ; simple_byte           16     9 (average)
 27466                           ;	Chosen strategy is simple_byte
 27467  004396  0A10               	xorlw	16	; case 16
 27468  004398  B4D8               	btfsc	status,2,c
 27469  00439A  D7D5               	goto	l2426
 27470  00439C  0A01               	xorlw	1	; case 17
 27471  00439E  B4D8               	btfsc	status,2,c
 27472  0043A0  D7D9               	goto	l2428
 27473  0043A2  0A03               	xorlw	3	; case 18
 27474  0043A4  B4D8               	btfsc	status,2,c
 27475  0043A6  D7DF               	goto	l2429
 27476  0043A8  0A01               	xorlw	1	; case 19
 27477  0043AA  B4D8               	btfsc	status,2,c
 27478  0043AC  D7E5               	goto	l2430
 27479  0043AE  0A07               	xorlw	7	; case 20
 27480  0043B0  A4D8               	btfss	status,2,c
 27481  0043B2  0012               	return	
 27482  0043B4  D7E8               	goto	l2431
 27483  0043B6                     __end_of_api_prepare:
 27484                           	opt stack 0
 27485                           tosu	equ	0xFFF
 27486                           tosh	equ	0xFFE
 27487                           tosl	equ	0xFFD
 27488                           pclath	equ	0xFFA
 27489                           tblptru	equ	0xFF8
 27490                           tblptrh	equ	0xFF7
 27491                           tblptrl	equ	0xFF6
 27492                           tablat	equ	0xFF5
 27493                           prodh	equ	0xFF4
 27494                           prodl	equ	0xFF3
 27495                           intcon	equ	0xFF2
 27496                           intcon2	equ	0xFF1
 27497                           intcon3	equ	0xFF0
 27498                           indf0	equ	0xFEF
 27499                           postinc0	equ	0xFEE
 27500                           fsr0h	equ	0xFEA
 27501                           fsr0l	equ	0xFE9
 27502                           wreg	equ	0xFE8
 27503                           indf1	equ	0xFE7
 27504                           postdec1	equ	0xFE5
 27505                           plusw1	equ	0xFE3
 27506                           fsr1h	equ	0xFE2
 27507                           fsr1l	equ	0xFE1
 27508                           indf2	equ	0xFDF
 27509                           postinc2	equ	0xFDE
 27510                           postdec2	equ	0xFDD
 27511                           plusw2	equ	0xFDB
 27512                           fsr2h	equ	0xFDA
 27513                           fsr2l	equ	0xFD9
 27514                           status	equ	0xFD8
 27515                           
 27516 ;; *************** function __fill_buffer_read_file *****************
 27517 ;; Defined at:
 27518 ;;		line 367 in file "api.c"
 27519 ;; Parameters:    Size  Location     Type
 27520 ;;  inBuffer        2   85[COMRAM] PTR unsigned char 
 27521 ;;		 -> RAM(3759), 
 27522 ;;  outBuffer       2   87[COMRAM] PTR unsigned char 
 27523 ;;		 -> RAM(3759), 
 27524 ;; Auto vars:     Size  Location     Type
 27525 ;;  start           4   53[BANK0 ] unsigned long 
 27526 ;;  data_length     4   49[BANK0 ] unsigned long 
 27527 ;;  file_size       4   45[BANK0 ] unsigned long 
 27528 ;; Return value:  Size  Location     Type
 27529 ;;                  1    wreg      void 
 27530 ;; Registers used:
 27531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27532 ;; Tracked objects:
 27533 ;;		On entry : 0/0
 27534 ;;		On exit  : 0/0
 27535 ;;		Unchanged: 0/0
 27536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27538 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27540 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27541 ;;Total ram usage:       20 bytes
 27542 ;; Hardware stack levels used:    1
 27543 ;; Hardware stack levels required when called:   10
 27544 ;; This function calls:
 27545 ;;		_fat_get_file_size
 27546 ;;		_fat_read_from_file
 27547 ;; This function is called by:
 27548 ;;		_api_prepare
 27549 ;; This function uses a non-reentrant model
 27550 ;;
 27551                           
 27552                           	psect	text126
 27553  002336                     __ptext126:
 27554                           	opt stack 0
 27555  002336                     __fill_buffer_read_file:
 27556                           	opt stack 18
 27557                           
 27558                           ;api.c: 369: uint32_t start;;api.c: 370: uint32_t file_size;;api.c: 371: uint32_t data_l
      +                          ength;;api.c: 374: outBuffer[0] = DATAREQUEST_FIND_FILE;
 27559                           
 27560                           ;incstack = 0
 27561  002336  C058  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 27562  00233A  C059  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 27563  00233E  0E81               	movlw	129
 27564  002340  6EDF               	movwf	indf2,c
 27565                           
 27566                           ;api.c: 377: outBuffer[1] = (uint8_t) 0xC125;
 27567  002342  EE20 F001          	lfsr	2,1
 27568  002346  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27569  002348  26D9               	addwf	fsr2l,f,c
 27570  00234A  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27571  00234C  22DA               	addwfc	fsr2h,f,c
 27572  00234E  0E25               	movlw	37
 27573  002350  6EDF               	movwf	indf2,c
 27574                           
 27575                           ;api.c: 378: outBuffer[2] = 0xC125 >> 8;
 27576  002352  EE20 F002          	lfsr	2,2
 27577  002356  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27578  002358  26D9               	addwf	fsr2l,f,c
 27579  00235A  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27580  00235C  22DA               	addwfc	fsr2h,f,c
 27581  00235E  0EC1               	movlw	193
 27582  002360  6EDF               	movwf	indf2,c
 27583                           
 27584                           ;api.c: 381: outBuffer[3] = inBuffer[1];
 27585  002362  EE20 F001          	lfsr	2,1
 27586  002366  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27587  002368  26D9               	addwf	fsr2l,f,c
 27588  00236A  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27589  00236C  22DA               	addwfc	fsr2h,f,c
 27590  00236E  EE10 F003          	lfsr	1,3
 27591  002372  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27592  002374  26E1               	addwf	fsr1l,f,c
 27593  002376  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27594  002378  22E2               	addwfc	fsr1h,f,c
 27595  00237A  CFDF FFE7          	movff	indf2,indf1
 27596                           
 27597                           ;api.c: 384: outBuffer[4] = inBuffer[1];
 27598  00237E  EE20 F001          	lfsr	2,1
 27599  002382  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27600  002384  26D9               	addwf	fsr2l,f,c
 27601  002386  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27602  002388  22DA               	addwfc	fsr2h,f,c
 27603  00238A  EE10 F004          	lfsr	1,4
 27604  00238E  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27605  002390  26E1               	addwf	fsr1l,f,c
 27606  002392  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27607  002394  22E2               	addwfc	fsr1h,f,c
 27608  002396  CFDF FFE7          	movff	indf2,indf1
 27609                           
 27610                           ;api.c: 385: outBuffer[5] = inBuffer[2];
 27611  00239A  EE20 F002          	lfsr	2,2
 27612  00239E  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27613  0023A0  26D9               	addwf	fsr2l,f,c
 27614  0023A2  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27615  0023A4  22DA               	addwfc	fsr2h,f,c
 27616  0023A6  EE10 F005          	lfsr	1,5
 27617  0023AA  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27618  0023AC  26E1               	addwf	fsr1l,f,c
 27619  0023AE  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27620  0023B0  22E2               	addwfc	fsr1h,f,c
 27621  0023B2  CFDF FFE7          	movff	indf2,indf1
 27622                           
 27623                           ;api.c: 386: outBuffer[6] = inBuffer[3];
 27624  0023B6  EE20 F003          	lfsr	2,3
 27625  0023BA  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27626  0023BC  26D9               	addwf	fsr2l,f,c
 27627  0023BE  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27628  0023C0  22DA               	addwfc	fsr2h,f,c
 27629  0023C2  EE10 F006          	lfsr	1,6
 27630  0023C6  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27631  0023C8  26E1               	addwf	fsr1l,f,c
 27632  0023CA  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27633  0023CC  22E2               	addwfc	fsr1h,f,c
 27634  0023CE  CFDF FFE7          	movff	indf2,indf1
 27635                           
 27636                           ;api.c: 387: outBuffer[7] = inBuffer[4];
 27637  0023D2  EE20 F004          	lfsr	2,4
 27638  0023D6  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27639  0023D8  26D9               	addwf	fsr2l,f,c
 27640  0023DA  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27641  0023DC  22DA               	addwfc	fsr2h,f,c
 27642  0023DE  EE10 F007          	lfsr	1,7
 27643  0023E2  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27644  0023E4  26E1               	addwf	fsr1l,f,c
 27645  0023E6  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27646  0023E8  22E2               	addwfc	fsr1h,f,c
 27647  0023EA  CFDF FFE7          	movff	indf2,indf1
 27648                           
 27649                           ;api.c: 390: start = inBuffer[4];
 27650  0023EE  EE20 F004          	lfsr	2,4
 27651  0023F2  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27652  0023F4  26D9               	addwf	fsr2l,f,c
 27653  0023F6  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27654  0023F8  22DA               	addwfc	fsr2h,f,c
 27655  0023FA  50DF               	movf	indf2,w,c
 27656  0023FC  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27657  0023FE  505A               	movf	??__fill_buffer_read_file,w,c
 27658  002400  0100               	movlb	0	; () banked
 27659  002402  6FF1               	movwf	__fill_buffer_read_file@start& (0+255),b
 27660  002404  6BF2               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 27661  002406  6BF3               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 27662  002408  6BF4               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;api.c: 391: start <<= 8;
 27666  00240A  C0F3  F0F4         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27667  00240E  C0F2  F0F3         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27668  002412  C0F1  F0F2         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27669  002416  6BF1               	clrf	__fill_buffer_read_file@start& (0+255),b
 27670                           
 27671                           ; BSR set to: 0
 27672                           ;api.c: 392: start |= inBuffer[3];
 27673  002418  EE20 F003          	lfsr	2,3
 27674  00241C  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27675  00241E  26D9               	addwf	fsr2l,f,c
 27676  002420  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27677  002422  22DA               	addwfc	fsr2h,f,c
 27678  002424  50DF               	movf	indf2,w,c
 27679  002426  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27680  002428  505A               	movf	??__fill_buffer_read_file,w,c
 27681  00242A  13F1               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27682                           
 27683                           ; BSR set to: 0
 27684                           ;api.c: 393: start <<= 8;
 27685  00242C  C0F3  F0F4         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27686  002430  C0F2  F0F3         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27687  002434  C0F1  F0F2         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27688  002438  6BF1               	clrf	__fill_buffer_read_file@start& (0+255),b
 27689                           
 27690                           ; BSR set to: 0
 27691                           ;api.c: 394: start |= inBuffer[2];
 27692  00243A  EE20 F002          	lfsr	2,2
 27693  00243E  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27694  002440  26D9               	addwf	fsr2l,f,c
 27695  002442  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27696  002444  22DA               	addwfc	fsr2h,f,c
 27697  002446  50DF               	movf	indf2,w,c
 27698  002448  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27699  00244A  505A               	movf	??__fill_buffer_read_file,w,c
 27700  00244C  13F1               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27701                           
 27702                           ; BSR set to: 0
 27703                           ;api.c: 395: start <<= 8;
 27704  00244E  C0F3  F0F4         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27705  002452  C0F2  F0F3         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27706  002456  C0F1  F0F2         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27707  00245A  6BF1               	clrf	__fill_buffer_read_file@start& (0+255),b
 27708                           
 27709                           ; BSR set to: 0
 27710                           ;api.c: 396: start |= inBuffer[1];
 27711  00245C  EE20 F001          	lfsr	2,1
 27712  002460  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27713  002462  26D9               	addwf	fsr2l,f,c
 27714  002464  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27715  002466  22DA               	addwfc	fsr2h,f,c
 27716  002468  50DF               	movf	indf2,w,c
 27717  00246A  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27718  00246C  505A               	movf	??__fill_buffer_read_file,w,c
 27719  00246E  13F1               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27720                           
 27721                           ; BSR set to: 0
 27722                           ;api.c: 399: file_size = fat_get_file_size(inBuffer[1]);
 27723  002470  EE20 F001          	lfsr	2,1
 27724  002474  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27725  002476  26D9               	addwf	fsr2l,f,c
 27726  002478  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27727  00247A  22DA               	addwfc	fsr2h,f,c
 27728  00247C  50DF               	movf	indf2,w,c
 27729  00247E  EC27  F032         	call	_fat_get_file_size
 27730  002482  C031  F0E9         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 27731  002486  C032  F0EA         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 27732  00248A  C033  F0EB         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 27733  00248E  C034  F0EC         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 27734                           
 27735                           ;api.c: 400: data_length = file_size - start;
 27736  002492  C0F1  F05A         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 27737  002496  C0F2  F05B         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 27738  00249A  C0F3  F05C         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 27739  00249E  C0F4  F05D         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 27740  0024A2  1E5A               	comf	??__fill_buffer_read_file,f,c
 27741  0024A4  1E5B               	comf	??__fill_buffer_read_file+1,f,c
 27742  0024A6  1E5C               	comf	??__fill_buffer_read_file+2,f,c
 27743  0024A8  1E5D               	comf	??__fill_buffer_read_file+3,f,c
 27744  0024AA  2A5A               	incf	??__fill_buffer_read_file,f,c
 27745  0024AC  0E00               	movlw	0
 27746  0024AE  225B               	addwfc	??__fill_buffer_read_file+1,f,c
 27747  0024B0  225C               	addwfc	??__fill_buffer_read_file+2,f,c
 27748  0024B2  225D               	addwfc	??__fill_buffer_read_file+3,f,c
 27749  0024B4  0100               	movlb	0	; () banked
 27750  0024B6  51E9               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 27751  0024B8  245A               	addwf	??__fill_buffer_read_file,w,c
 27752  0024BA  6FED               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 27753  0024BC  51EA               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 27754  0024BE  205B               	addwfc	??__fill_buffer_read_file+1,w,c
 27755  0024C0  6FEE               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 27756  0024C2  51EB               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 27757  0024C4  205C               	addwfc	??__fill_buffer_read_file+2,w,c
 27758  0024C6  6FEF               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 27759  0024C8  51EC               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 27760  0024CA  205D               	addwfc	??__fill_buffer_read_file+3,w,c
 27761  0024CC  6FF0               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;api.c: 401: if(data_length>54)
 27765  0024CE  51F0               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 27766  0024D0  11EF               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 27767  0024D2  11EE               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 27768  0024D4  E104               	bnz	u9840
 27769  0024D6  0E37               	movlw	55
 27770  0024D8  5DED               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 27771  0024DA  A0D8               	btfss	status,0,c
 27772  0024DC  D008               	goto	l2481
 27773  0024DE                     u9840:
 27774                           
 27775                           ; BSR set to: 0
 27776                           ;api.c: 402: {;api.c: 404: data_length = 54;
 27777  0024DE  0E36               	movlw	54
 27778  0024E0  6FED               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 27779  0024E2  0E00               	movlw	0
 27780  0024E4  6FEE               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 27781  0024E6  0E00               	movlw	0
 27782  0024E8  6FEF               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 27783  0024EA  0E00               	movlw	0
 27784  0024EC  6FF0               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 27785  0024EE                     l2481:
 27786                           
 27787                           ; BSR set to: 0
 27788                           ;api.c: 405: };api.c: 408: outBuffer[8] = (uint8_t) data_length;
 27789                           
 27790                           ; BSR set to: 0
 27791  0024EE  EE20 F008          	lfsr	2,8
 27792  0024F2  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27793  0024F4  26D9               	addwf	fsr2l,f,c
 27794  0024F6  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27795  0024F8  22DA               	addwfc	fsr2h,f,c
 27796  0024FA  C0ED  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 27797                           
 27798                           ; BSR set to: 0
 27799                           ;api.c: 411: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 27800  0024FE  EE20 F009          	lfsr	2,9
 27801  002502  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27802  002504  26D9               	addwf	fsr2l,f,c
 27803  002506  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27804  002508  22DA               	addwfc	fsr2h,f,c
 27805  00250A  C0F1  F040         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 27806  00250E  C0F2  F041         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 27807  002512  C0F3  F042         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 27808  002516  C0F4  F043         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 27809  00251A  C0ED  F044         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 27810  00251E  C0EE  F045         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 27811  002522  C0EF  F046         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 27812  002526  C0F0  F047         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 27813  00252A  0E0A               	movlw	10
 27814  00252C  2458               	addwf	__fill_buffer_read_file@outBuffer,w,c
 27815  00252E  6E48               	movwf	fat_read_from_file@data,c
 27816  002530  0E00               	movlw	0
 27817  002532  2059               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 27818  002534  6E49               	movwf	fat_read_from_file@data+1,c
 27819  002536  EE10 F001          	lfsr	1,1
 27820  00253A  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27821  00253C  26E1               	addwf	fsr1l,f,c
 27822  00253E  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27823  002540  22E2               	addwfc	fsr1h,f,c
 27824  002542  50E7               	movf	indf1,w,c
 27825  002544  EC78  F00F         	call	_fat_read_from_file
 27826  002548  6EDF               	movwf	indf2,c
 27827  00254A  0012               	return		;funcret
 27828  00254C                     __end_of__fill_buffer_read_file:
 27829                           	opt stack 0
 27830                           tosu	equ	0xFFF
 27831                           tosh	equ	0xFFE
 27832                           tosl	equ	0xFFD
 27833                           pclath	equ	0xFFA
 27834                           tblptru	equ	0xFF8
 27835                           tblptrh	equ	0xFF7
 27836                           tblptrl	equ	0xFF6
 27837                           tablat	equ	0xFF5
 27838                           prodh	equ	0xFF4
 27839                           prodl	equ	0xFF3
 27840                           intcon	equ	0xFF2
 27841                           intcon2	equ	0xFF1
 27842                           intcon3	equ	0xFF0
 27843                           indf0	equ	0xFEF
 27844                           postinc0	equ	0xFEE
 27845                           fsr0h	equ	0xFEA
 27846                           fsr0l	equ	0xFE9
 27847                           wreg	equ	0xFE8
 27848                           indf1	equ	0xFE7
 27849                           postdec1	equ	0xFE5
 27850                           plusw1	equ	0xFE3
 27851                           fsr1h	equ	0xFE2
 27852                           fsr1l	equ	0xFE1
 27853                           indf2	equ	0xFDF
 27854                           postinc2	equ	0xFDE
 27855                           postdec2	equ	0xFDD
 27856                           plusw2	equ	0xFDB
 27857                           fsr2h	equ	0xFDA
 27858                           fsr2l	equ	0xFD9
 27859                           status	equ	0xFD8
 27860                           
 27861 ;; *************** function _fat_read_from_file *****************
 27862 ;; Defined at:
 27863 ;;		line 559 in file "fat16.c"
 27864 ;; Parameters:    Size  Location     Type
 27865 ;;  file_number     1    wreg     unsigned char 
 27866 ;;  start_byte      4   63[COMRAM] unsigned long 
 27867 ;;  length          4   67[COMRAM] unsigned long 
 27868 ;;  data            2   71[COMRAM] PTR unsigned char 
 27869 ;;		 -> file_buffer(50), RAM(3759), 
 27870 ;; Auto vars:     Size  Location     Type
 27871 ;;  file_number     1    2[BANK0 ] unsigned char 
 27872 ;;  root           32    3[BANK0 ] struct .
 27873 ;;  position        4   41[BANK0 ] unsigned long 
 27874 ;;  read_length     2   39[BANK0 ] unsigned int 
 27875 ;;  offset          2   37[BANK0 ] unsigned int 
 27876 ;;  cluster         2   35[BANK0 ] unsigned int 
 27877 ;;  sector          2    0[BANK0 ] unsigned int 
 27878 ;; Return value:  Size  Location     Type
 27879 ;;                  1    wreg      unsigned char 
 27880 ;; Registers used:
 27881 ;;		wreg, status,2, status,0, cstack
 27882 ;; Tracked objects:
 27883 ;;		On entry : 0/0
 27884 ;;		On exit  : 0/0
 27885 ;;		Unchanged: 0/0
 27886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27887 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27888 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27889 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27890 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27891 ;;Total ram usage:       67 bytes
 27892 ;; Hardware stack levels used:    1
 27893 ;; Hardware stack levels required when called:    9
 27894 ;; This function calls:
 27895 ;;		__read_fat
 27896 ;;		__sector_from_cluster
 27897 ;;		_fat_get_file_information
 27898 ;;		_flash_partial_read
 27899 ;; This function is called by:
 27900 ;;		__bootloader_verify_file
 27901 ;;		__bootloader_program
 27902 ;;		__fill_buffer_read_file
 27903 ;; This function uses a non-reentrant model
 27904 ;;
 27905                           
 27906                           	psect	text127
 27907  001EF0                     __ptext127:
 27908                           	opt stack 0
 27909  001EF0                     _fat_read_from_file:
 27910                           	opt stack 19
 27911                           
 27912                           ;incstack = 0
 27913                           ;fat_read_from_file@file_number stored from wreg
 27914  001EF0  0100               	movlb	0	; () banked
 27915  001EF2  6FBE               	movwf	fat_read_from_file@file_number& (0+255),b
 27916                           
 27917                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 27918  001EF4  0EBF               	movlw	low fat_read_from_file@root
 27919  001EF6  6E38               	movwf	fat_get_file_information@data,c
 27920  001EF8  0E00               	movlw	high fat_read_from_file@root
 27921  001EFA  6E39               	movwf	fat_get_file_information@data+1,c
 27922  001EFC  0100               	movlb	0	; () banked
 27923  001EFE  51BE               	movf	fat_read_from_file@file_number& (0+255),w,b
 27924  001F00  ECB3  F031         	call	_fat_get_file_information
 27925                           
 27926                           ;fat16.c: 570: cluster = root.firstCluster;
 27927  001F04  C0D9  F0DF         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 27928  001F08  C0DA  F0E0         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 27929                           
 27930                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 27931  001F0C  5044               	movf	fat_read_from_file@length,w,c
 27932  001F0E  2440               	addwf	fat_read_from_file@start_byte,w,c
 27933  001F10  6E4A               	movwf	??_fat_read_from_file& (0+255),c
 27934  001F12  5045               	movf	fat_read_from_file@length+1,w,c
 27935  001F14  2041               	addwfc	fat_read_from_file@start_byte+1,w,c
 27936  001F16  6E4B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 27937  001F18  5046               	movf	fat_read_from_file@length+2,w,c
 27938  001F1A  2042               	addwfc	fat_read_from_file@start_byte+2,w,c
 27939  001F1C  6E4C               	movwf	(??_fat_read_from_file+2)& (0+255),c
 27940  001F1E  5047               	movf	fat_read_from_file@length+3,w,c
 27941  001F20  2043               	addwfc	fat_read_from_file@start_byte+3,w,c
 27942  001F22  6E4D               	movwf	(??_fat_read_from_file+3)& (0+255),c
 27943  001F24  504A               	movf	??_fat_read_from_file,w,c
 27944  001F26  0100               	movlb	0	; () banked
 27945  001F28  5DDB               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 27946  001F2A  504B               	movf	??_fat_read_from_file+1,w,c
 27947  001F2C  59DC               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 27948  001F2E  504C               	movf	??_fat_read_from_file+2,w,c
 27949  001F30  59DD               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 27950  001F32  504D               	movf	??_fat_read_from_file+3,w,c
 27951  001F34  59DE               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 27952  001F36  B0D8               	btfsc	status,0,c
 27953  001F38  D002               	goto	l1880
 27954                           
 27955                           ; BSR set to: 0
 27956                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 27957  001F3A  0EFF               	movlw	255
 27958                           
 27959                           ; BSR set to: 0
 27960  001F3C  0012               	return	
 27961  001F3E                     l1880:
 27962                           
 27963                           ; BSR set to: 0
 27964                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 27965                           
 27966                           ; BSR set to: 0
 27967  001F3E  0E00               	movlw	0
 27968  001F40  6FE5               	movwf	fat_read_from_file@position& (0+255),b
 27969  001F42  0E00               	movlw	0
 27970  001F44  6FE6               	movwf	(fat_read_from_file@position+1)& (0+255),b
 27971  001F46  0E00               	movlw	0
 27972  001F48  6FE7               	movwf	(fat_read_from_file@position+2)& (0+255),b
 27973  001F4A  0E00               	movlw	0
 27974  001F4C  6FE8               	movwf	(fat_read_from_file@position+3)& (0+255),b
 27975                           
 27976                           ;fat16.c: 581: while((start_byte-position) >= 512)
 27977  001F4E  D013               	goto	l1882
 27978  001F50                     l11293:
 27979                           
 27980                           ; BSR set to: 0
 27981                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 27982  001F50  C0DF  F031         	movff	fat_read_from_file@cluster,__read_fat@cluster
 27983  001F54  C0E0  F032         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 27984  001F58  ECE7  F038         	call	__read_fat	;wreg free
 27985  001F5C  C031  F0DF         	movff	?__read_fat,fat_read_from_file@cluster
 27986  001F60  C032  F0E0         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 27987                           
 27988                           ;fat16.c: 584: position += 512;
 27989  001F64  0E00               	movlw	0
 27990  001F66  0100               	movlb	0	; () banked
 27991  001F68  27E5               	addwf	fat_read_from_file@position& (0+255),f,b
 27992  001F6A  0E02               	movlw	2
 27993  001F6C  23E6               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 27994  001F6E  0E00               	movlw	0
 27995  001F70  23E7               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 27996  001F72  0E00               	movlw	0
 27997  001F74  23E8               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 27998  001F76                     l1882:
 27999                           
 28000                           ; BSR set to: 0
 28001                           
 28002                           ; BSR set to: 0
 28003  001F76  C0E5  F04A         	movff	fat_read_from_file@position,??_fat_read_from_file
 28004  001F7A  C0E6  F04B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28005  001F7E  C0E7  F04C         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 28006  001F82  C0E8  F04D         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 28007  001F86  1E4A               	comf	??_fat_read_from_file,f,c
 28008  001F88  1E4B               	comf	??_fat_read_from_file+1,f,c
 28009  001F8A  1E4C               	comf	??_fat_read_from_file+2,f,c
 28010  001F8C  1E4D               	comf	??_fat_read_from_file+3,f,c
 28011  001F8E  2A4A               	incf	??_fat_read_from_file,f,c
 28012  001F90  0E00               	movlw	0
 28013  001F92  224B               	addwfc	??_fat_read_from_file+1,f,c
 28014  001F94  224C               	addwfc	??_fat_read_from_file+2,f,c
 28015  001F96  224D               	addwfc	??_fat_read_from_file+3,f,c
 28016  001F98  5040               	movf	fat_read_from_file@start_byte,w,c
 28017  001F9A  244A               	addwf	??_fat_read_from_file,w,c
 28018  001F9C  6E4E               	movwf	(??_fat_read_from_file+4)& (0+255),c
 28019  001F9E  5041               	movf	fat_read_from_file@start_byte+1,w,c
 28020  001FA0  204B               	addwfc	??_fat_read_from_file+1,w,c
 28021  001FA2  6E4F               	movwf	(??_fat_read_from_file+5)& (0+255),c
 28022  001FA4  5042               	movf	fat_read_from_file@start_byte+2,w,c
 28023  001FA6  204C               	addwfc	??_fat_read_from_file+2,w,c
 28024  001FA8  6E50               	movwf	(??_fat_read_from_file+6)& (0+255),c
 28025  001FAA  5043               	movf	fat_read_from_file@start_byte+3,w,c
 28026  001FAC  204D               	addwfc	??_fat_read_from_file+3,w,c
 28027  001FAE  6E51               	movwf	(??_fat_read_from_file+7)& (0+255),c
 28028  001FB0  5051               	movf	??_fat_read_from_file+7,w,c
 28029  001FB2  1050               	iorwf	??_fat_read_from_file+6,w,c
 28030  001FB4  E1CD               	bnz	l11293
 28031  001FB6  0E02               	movlw	2
 28032  001FB8  5C4F               	subwf	??_fat_read_from_file+5,w,c
 28033  001FBA  B0D8               	btfsc	status,0,c
 28034  001FBC  D7C9               	goto	l1883
 28035                           
 28036                           ; BSR set to: 0
 28037                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 28038                           
 28039                           ; BSR set to: 0
 28040  001FBE  C0E5  F04A         	movff	fat_read_from_file@position,??_fat_read_from_file
 28041  001FC2  C0E6  F04B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28042  001FC6  1E4A               	comf	??_fat_read_from_file,f,c
 28043  001FC8  1E4B               	comf	??_fat_read_from_file+1,f,c
 28044  001FCA  4A4A               	infsnz	??_fat_read_from_file,f,c
 28045  001FCC  2A4B               	incf	??_fat_read_from_file+1,f,c
 28046  001FCE  5040               	movf	fat_read_from_file@start_byte,w,c
 28047  001FD0  244A               	addwf	??_fat_read_from_file,w,c
 28048  001FD2  6FE1               	movwf	fat_read_from_file@offset& (0+255),b
 28049  001FD4  5041               	movf	fat_read_from_file@start_byte+1,w,c
 28050  001FD6  204B               	addwfc	??_fat_read_from_file+1,w,c
 28051  001FD8  6FE2               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28052                           
 28053                           ; BSR set to: 0
 28054                           ;fat16.c: 591: position = 0;
 28055  001FDA  0E00               	movlw	0
 28056  001FDC  6FE5               	movwf	fat_read_from_file@position& (0+255),b
 28057  001FDE  0E00               	movlw	0
 28058  001FE0  6FE6               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28059  001FE2  0E00               	movlw	0
 28060  001FE4  6FE7               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28061  001FE6  0E00               	movlw	0
 28062  001FE8  6FE8               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28063                           
 28064                           ;fat16.c: 592: while(position < length)
 28065  001FEA  D089               	goto	l1885
 28066  001FEC                     
 28067                           ; BSR set to: 0
 28068                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 28069                           
 28070                           ; BSR set to: 0
 28071  001FEC  0E02               	movlw	2
 28072  001FEE  19E2               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 28073  001FF0  11E1               	iorwf	fat_read_from_file@offset& (0+255),w,b
 28074  001FF2  A4D8               	btfss	status,2,c
 28075  001FF4  D00F               	goto	l1887
 28076                           
 28077                           ; BSR set to: 0
 28078                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 28079  001FF6  C0DF  F031         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28080  001FFA  C0E0  F032         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28081  001FFE  ECE7  F038         	call	__read_fat	;wreg free
 28082  002002  C031  F0DF         	movff	?__read_fat,fat_read_from_file@cluster
 28083  002006  C032  F0E0         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28084                           
 28085                           ;fat16.c: 599: offset = 0;
 28086  00200A  0E00               	movlw	0
 28087  00200C  0100               	movlb	0	; () banked
 28088  00200E  6FE2               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28089  002010  0E00               	movlw	0
 28090  002012  6FE1               	movwf	fat_read_from_file@offset& (0+255),b
 28091  002014                     l1887:
 28092                           
 28093                           ; BSR set to: 0
 28094                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 28095                           
 28096                           ; BSR set to: 0
 28097  002014  C0DF  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 28098  002018  C0E0  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 28099  00201C  EC7B  F03D         	call	__sector_from_cluster	;wreg free
 28100  002020  C001  F0BC         	movff	?__sector_from_cluster,fat_read_from_file@sector
 28101  002024  C002  F0BD         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 28102                           
 28103                           ;fat16.c: 606: read_length = 512 - offset;
 28104  002028  C0E1  F04A         	movff	fat_read_from_file@offset,??_fat_read_from_file
 28105  00202C  C0E2  F04B         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 28106  002030  1E4A               	comf	??_fat_read_from_file,f,c
 28107  002032  1E4B               	comf	??_fat_read_from_file+1,f,c
 28108  002034  4A4A               	infsnz	??_fat_read_from_file,f,c
 28109  002036  2A4B               	incf	??_fat_read_from_file+1,f,c
 28110  002038  0E00               	movlw	0
 28111  00203A  244A               	addwf	??_fat_read_from_file,w,c
 28112  00203C  0100               	movlb	0	; () banked
 28113  00203E  6FE3               	movwf	fat_read_from_file@read_length& (0+255),b
 28114  002040  0E02               	movlw	2
 28115  002042  204B               	addwfc	??_fat_read_from_file+1,w,c
 28116  002044  6FE4               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28117                           
 28118                           ; BSR set to: 0
 28119                           ;fat16.c: 607: if(read_length > (length-position))
 28120  002046  51E3               	movf	fat_read_from_file@read_length& (0+255),w,b
 28121  002048  6E4A               	movwf	??_fat_read_from_file& (0+255),c
 28122  00204A  51E4               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28123  00204C  6E4B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28124  00204E  6A4C               	clrf	(??_fat_read_from_file+2)& (0+255),c
 28125  002050  6A4D               	clrf	(??_fat_read_from_file+3)& (0+255),c
 28126  002052  C0E5  F04E         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 28127  002056  C0E6  F04F         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 28128  00205A  C0E7  F050         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 28129  00205E  C0E8  F051         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 28130  002062  1E4E               	comf	??_fat_read_from_file+4,f,c
 28131  002064  1E4F               	comf	??_fat_read_from_file+5,f,c
 28132  002066  1E50               	comf	??_fat_read_from_file+6,f,c
 28133  002068  1E51               	comf	??_fat_read_from_file+7,f,c
 28134  00206A  2A4E               	incf	??_fat_read_from_file+4,f,c
 28135  00206C  0E00               	movlw	0
 28136  00206E  224F               	addwfc	??_fat_read_from_file+5,f,c
 28137  002070  2250               	addwfc	??_fat_read_from_file+6,f,c
 28138  002072  2251               	addwfc	??_fat_read_from_file+7,f,c
 28139  002074  5044               	movf	fat_read_from_file@length,w,c
 28140  002076  244E               	addwf	??_fat_read_from_file+4,w,c
 28141  002078  6E52               	movwf	(??_fat_read_from_file+8)& (0+255),c
 28142  00207A  5045               	movf	fat_read_from_file@length+1,w,c
 28143  00207C  204F               	addwfc	??_fat_read_from_file+5,w,c
 28144  00207E  6E53               	movwf	(??_fat_read_from_file+9)& (0+255),c
 28145  002080  5046               	movf	fat_read_from_file@length+2,w,c
 28146  002082  2050               	addwfc	??_fat_read_from_file+6,w,c
 28147  002084  6E54               	movwf	(??_fat_read_from_file+10)& (0+255),c
 28148  002086  5047               	movf	fat_read_from_file@length+3,w,c
 28149  002088  2051               	addwfc	??_fat_read_from_file+7,w,c
 28150  00208A  6E55               	movwf	(??_fat_read_from_file+11)& (0+255),c
 28151  00208C  504A               	movf	??_fat_read_from_file,w,c
 28152  00208E  5C52               	subwf	??_fat_read_from_file+8,w,c
 28153  002090  504B               	movf	??_fat_read_from_file+1,w,c
 28154  002092  5853               	subwfb	??_fat_read_from_file+9,w,c
 28155  002094  504C               	movf	??_fat_read_from_file+2,w,c
 28156  002096  5854               	subwfb	??_fat_read_from_file+10,w,c
 28157  002098  504D               	movf	??_fat_read_from_file+3,w,c
 28158  00209A  5855               	subwfb	??_fat_read_from_file+11,w,c
 28159  00209C  B0D8               	btfsc	status,0,c
 28160  00209E  D00E               	goto	l1888
 28161                           
 28162                           ; BSR set to: 0
 28163                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 28164  0020A0  C0E5  F04A         	movff	fat_read_from_file@position,??_fat_read_from_file
 28165  0020A4  C0E6  F04B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28166  0020A8  1E4A               	comf	??_fat_read_from_file,f,c
 28167  0020AA  1E4B               	comf	??_fat_read_from_file+1,f,c
 28168  0020AC  4A4A               	infsnz	??_fat_read_from_file,f,c
 28169  0020AE  2A4B               	incf	??_fat_read_from_file+1,f,c
 28170  0020B0  5044               	movf	fat_read_from_file@length,w,c
 28171  0020B2  244A               	addwf	??_fat_read_from_file,w,c
 28172  0020B4  6FE3               	movwf	fat_read_from_file@read_length& (0+255),b
 28173  0020B6  5045               	movf	fat_read_from_file@length+1,w,c
 28174  0020B8  204B               	addwfc	??_fat_read_from_file+1,w,c
 28175  0020BA  6FE4               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28176  0020BC                     l1888:
 28177                           
 28178                           ; BSR set to: 0
 28179                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 28180                           
 28181                           ; BSR set to: 0
 28182  0020BC  C0BC  F029         	movff	fat_read_from_file@sector,flash_partial_read@page
 28183  0020C0  C0BD  F02A         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 28184  0020C4  C0E1  F02B         	movff	fat_read_from_file@offset,flash_partial_read@start
 28185  0020C8  C0E2  F02C         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 28186  0020CC  C0E3  F02D         	movff	fat_read_from_file@read_length,flash_partial_read@length
 28187  0020D0  C0E4  F02E         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 28188  0020D4  51E5               	movf	fat_read_from_file@position& (0+255),w,b
 28189  0020D6  2448               	addwf	fat_read_from_file@data,w,c
 28190  0020D8  6E2F               	movwf	flash_partial_read@data,c
 28191  0020DA  51E6               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 28192  0020DC  2049               	addwfc	fat_read_from_file@data+1,w,c
 28193  0020DE  6E30               	movwf	flash_partial_read@data+1,c
 28194  0020E0  EC32  F03B         	call	_flash_partial_read	;wreg free
 28195                           
 28196                           ;fat16.c: 617: position += read_length;
 28197  0020E4  0100               	movlb	0	; () banked
 28198  0020E6  51E3               	movf	fat_read_from_file@read_length& (0+255),w,b
 28199  0020E8  27E5               	addwf	fat_read_from_file@position& (0+255),f,b
 28200  0020EA  51E4               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28201  0020EC  23E6               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28202  0020EE  0E00               	movlw	0
 28203  0020F0  23E7               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28204  0020F2  0E00               	movlw	0
 28205  0020F4  23E8               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28206                           
 28207                           ; BSR set to: 0
 28208                           ;fat16.c: 618: offset += read_length;
 28209  0020F6  51E3               	movf	fat_read_from_file@read_length& (0+255),w,b
 28210  0020F8  27E1               	addwf	fat_read_from_file@offset& (0+255),f,b
 28211  0020FA  51E4               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28212  0020FC  23E2               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 28213  0020FE                     l1885:
 28214                           
 28215                           ; BSR set to: 0
 28216                           
 28217                           ; BSR set to: 0
 28218  0020FE  5044               	movf	fat_read_from_file@length,w,c
 28219  002100  5DE5               	subwf	fat_read_from_file@position& (0+255),w,b
 28220  002102  5045               	movf	fat_read_from_file@length+1,w,c
 28221  002104  59E6               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 28222  002106  5046               	movf	fat_read_from_file@length+2,w,c
 28223  002108  59E7               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 28224  00210A  5047               	movf	fat_read_from_file@length+3,w,c
 28225  00210C  59E8               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 28226  00210E  A0D8               	btfss	status,0,c
 28227  002110  D76D               	goto	l1886
 28228                           
 28229                           ; BSR set to: 0
 28230                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 28231                           
 28232                           ; BSR set to: 0
 28233  002112  0E00               	movlw	0
 28234  002114  0012               	return	
 28235  002116                     __end_of_fat_read_from_file:
 28236                           	opt stack 0
 28237                           tosu	equ	0xFFF
 28238                           tosh	equ	0xFFE
 28239                           tosl	equ	0xFFD
 28240                           pclath	equ	0xFFA
 28241                           tblptru	equ	0xFF8
 28242                           tblptrh	equ	0xFF7
 28243                           tblptrl	equ	0xFF6
 28244                           tablat	equ	0xFF5
 28245                           prodh	equ	0xFF4
 28246                           prodl	equ	0xFF3
 28247                           intcon	equ	0xFF2
 28248                           intcon2	equ	0xFF1
 28249                           intcon3	equ	0xFF0
 28250                           indf0	equ	0xFEF
 28251                           postinc0	equ	0xFEE
 28252                           fsr0h	equ	0xFEA
 28253                           fsr0l	equ	0xFE9
 28254                           wreg	equ	0xFE8
 28255                           indf1	equ	0xFE7
 28256                           postdec1	equ	0xFE5
 28257                           plusw1	equ	0xFE3
 28258                           fsr1h	equ	0xFE2
 28259                           fsr1l	equ	0xFE1
 28260                           indf2	equ	0xFDF
 28261                           postinc2	equ	0xFDE
 28262                           postdec2	equ	0xFDD
 28263                           plusw2	equ	0xFDB
 28264                           fsr2h	equ	0xFDA
 28265                           fsr2l	equ	0xFD9
 28266                           status	equ	0xFD8
 28267                           
 28268 ;; *************** function _fat_get_file_size *****************
 28269 ;; Defined at:
 28270 ;;		line 294 in file "fat16.c"
 28271 ;; Parameters:    Size  Location     Type
 28272 ;;  file_number     1    wreg     unsigned char 
 28273 ;; Auto vars:     Size  Location     Type
 28274 ;;  file_number     1   61[COMRAM] unsigned char 
 28275 ;;  file_size       4   55[COMRAM] unsigned long 
 28276 ;;  offset          2   59[COMRAM] unsigned int 
 28277 ;;  sector          2   53[COMRAM] unsigned int 
 28278 ;; Return value:  Size  Location     Type
 28279 ;;                  4   48[COMRAM] unsigned long 
 28280 ;; Registers used:
 28281 ;;		wreg, status,2, status,0, cstack
 28282 ;; Tracked objects:
 28283 ;;		On entry : 0/0
 28284 ;;		On exit  : 0/0
 28285 ;;		Unchanged: 0/0
 28286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28288 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28290 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28291 ;;Total ram usage:       14 bytes
 28292 ;; Hardware stack levels used:    1
 28293 ;; Hardware stack levels required when called:    7
 28294 ;; This function calls:
 28295 ;;		_flash_partial_read
 28296 ;; This function is called by:
 28297 ;;		__bootloader_find_file
 28298 ;;		__bootloader_verify_file
 28299 ;;		__fill_buffer_read_file
 28300 ;; This function uses a non-reentrant model
 28301 ;;
 28302                           
 28303                           	psect	text128
 28304  00644E                     __ptext128:
 28305                           	opt stack 0
 28306  00644E                     _fat_get_file_size:
 28307                           	opt stack 21
 28308                           
 28309                           ; BSR set to: 0
 28310                           ;incstack = 0
 28311                           ;fat_get_file_size@file_number stored from wreg
 28312  00644E  6E3E               	movwf	fat_get_file_size@file_number,c
 28313                           
 28314                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 28315  006450  C03E  F035         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 28316  006454  3A35               	swapf	??_fat_get_file_size,f,c
 28317  006456  0E0F               	movlw	15
 28318  006458  1635               	andwf	??_fat_get_file_size,f,c
 28319  00645A  5035               	movf	??_fat_get_file_size,w,c
 28320  00645C  6E36               	movwf	fat_get_file_size@sector,c
 28321  00645E  6A37               	clrf	fat_get_file_size@sector+1,c
 28322                           
 28323                           ;fat16.c: 300: sector += 18;
 28324  006460  0E12               	movlw	18
 28325  006462  2636               	addwf	fat_get_file_size@sector,f,c
 28326  006464  0E00               	movlw	0
 28327  006466  2237               	addwfc	fat_get_file_size@sector+1,f,c
 28328                           
 28329                           ;fat16.c: 301: offset = file_number;
 28330  006468  C03E  F03C         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 28331  00646C  6A3D               	clrf	fat_get_file_size@offset+1,c
 28332                           
 28333                           ;fat16.c: 302: offset <<= 5;
 28334  00646E  0E05               	movlw	5
 28335  006470                     u8735:
 28336  006470  90D8               	bcf	status,0,c
 28337  006472  363C               	rlcf	fat_get_file_size@offset,f,c
 28338  006474  363D               	rlcf	fat_get_file_size@offset+1,f,c
 28339  006476  2EE8               	decfsz	wreg,f,c
 28340  006478  D7FB               	goto	u8735
 28341                           
 28342                           ;fat16.c: 303: offset &= 0b111111111;
 28343  00647A  0EFF               	movlw	255
 28344  00647C  163C               	andwf	fat_get_file_size@offset,f,c
 28345  00647E  0E01               	movlw	1
 28346  006480  163D               	andwf	fat_get_file_size@offset+1,f,c
 28347                           
 28348                           ;fat16.c: 304: offset += 28;
 28349  006482  0E1C               	movlw	28
 28350  006484  263C               	addwf	fat_get_file_size@offset,f,c
 28351  006486  0E00               	movlw	0
 28352  006488  223D               	addwfc	fat_get_file_size@offset+1,f,c
 28353                           
 28354                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 28355  00648A  C036  F029         	movff	fat_get_file_size@sector,flash_partial_read@page
 28356  00648E  C037  F02A         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 28357  006492  C03C  F02B         	movff	fat_get_file_size@offset,flash_partial_read@start
 28358  006496  C03D  F02C         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 28359  00649A  0E00               	movlw	0
 28360  00649C  6E2E               	movwf	flash_partial_read@length+1,c
 28361  00649E  0E04               	movlw	4
 28362  0064A0  6E2D               	movwf	flash_partial_read@length,c
 28363  0064A2  0E38               	movlw	low fat_get_file_size@file_size
 28364  0064A4  6E2F               	movwf	flash_partial_read@data,c
 28365  0064A6  0E00               	movlw	high fat_get_file_size@file_size
 28366  0064A8  6E30               	movwf	flash_partial_read@data+1,c
 28367  0064AA  EC32  F03B         	call	_flash_partial_read	;wreg free
 28368                           
 28369                           ;fat16.c: 306: return file_size;
 28370  0064AE  C038  F031         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 28371  0064B2  C039  F032         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 28372  0064B6  C03A  F033         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 28373  0064BA  C03B  F034         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 28374  0064BE  0012               	return	
 28375  0064C0                     __end_of_fat_get_file_size:
 28376                           	opt stack 0
 28377                           tosu	equ	0xFFF
 28378                           tosh	equ	0xFFE
 28379                           tosl	equ	0xFFD
 28380                           pclath	equ	0xFFA
 28381                           tblptru	equ	0xFF8
 28382                           tblptrh	equ	0xFF7
 28383                           tblptrl	equ	0xFF6
 28384                           tablat	equ	0xFF5
 28385                           prodh	equ	0xFF4
 28386                           prodl	equ	0xFF3
 28387                           intcon	equ	0xFF2
 28388                           intcon2	equ	0xFF1
 28389                           intcon3	equ	0xFF0
 28390                           indf0	equ	0xFEF
 28391                           postinc0	equ	0xFEE
 28392                           fsr0h	equ	0xFEA
 28393                           fsr0l	equ	0xFE9
 28394                           wreg	equ	0xFE8
 28395                           indf1	equ	0xFE7
 28396                           postdec1	equ	0xFE5
 28397                           plusw1	equ	0xFE3
 28398                           fsr1h	equ	0xFE2
 28399                           fsr1l	equ	0xFE1
 28400                           indf2	equ	0xFDF
 28401                           postinc2	equ	0xFDE
 28402                           postdec2	equ	0xFDD
 28403                           plusw2	equ	0xFDB
 28404                           fsr2h	equ	0xFDA
 28405                           fsr2l	equ	0xFD9
 28406                           status	equ	0xFD8
 28407                           
 28408 ;; *************** function __fill_buffer_get_status *****************
 28409 ;; Defined at:
 28410 ;;		line 171 in file "api.c"
 28411 ;; Parameters:    Size  Location     Type
 28412 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 28413 ;;		 -> RAM(3759), 
 28414 ;; Auto vars:     Size  Location     Type
 28415 ;;		None
 28416 ;; Return value:  Size  Location     Type
 28417 ;;                  1    wreg      void 
 28418 ;; Registers used:
 28419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28420 ;; Tracked objects:
 28421 ;;		On entry : 0/0
 28422 ;;		On exit  : 0/0
 28423 ;;		Unchanged: 0/0
 28424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28429 ;;Total ram usage:        2 bytes
 28430 ;; Hardware stack levels used:    1
 28431 ;; Hardware stack levels required when called:    5
 28432 ;; This function calls:
 28433 ;;		_flash_is_busy
 28434 ;;		_ui_get_status
 28435 ;; This function is called by:
 28436 ;;		_api_prepare
 28437 ;; This function uses a non-reentrant model
 28438 ;;
 28439                           
 28440                           	psect	text129
 28441  00465C                     __ptext129:
 28442                           	opt stack 0
 28443  00465C                     __fill_buffer_get_status:
 28444                           	opt stack 23
 28445                           
 28446                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 28447                           
 28448                           ;incstack = 0
 28449  00465C  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 28450  004660  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 28451  004664  0E10               	movlw	16
 28452  004666  6EDF               	movwf	indf2,c
 28453                           
 28454                           ;api.c: 177: outBuffer[1] = (uint8_t) 0xC125;
 28455  004668  EE20 F001          	lfsr	2,1
 28456  00466C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28457  00466E  26D9               	addwf	fsr2l,f,c
 28458  004670  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28459  004672  22DA               	addwfc	fsr2h,f,c
 28460  004674  0E25               	movlw	37
 28461  004676  6EDF               	movwf	indf2,c
 28462                           
 28463                           ;api.c: 178: outBuffer[2] = 0xC125 >> 8;
 28464  004678  EE20 F002          	lfsr	2,2
 28465  00467C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28466  00467E  26D9               	addwf	fsr2l,f,c
 28467  004680  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28468  004682  22DA               	addwfc	fsr2h,f,c
 28469  004684  0EC1               	movlw	193
 28470  004686  6EDF               	movwf	indf2,c
 28471                           
 28472                           ;api.c: 181: outBuffer[3] = (uint8_t) flash_is_busy();
 28473  004688  EE20 F003          	lfsr	2,3
 28474  00468C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28475  00468E  26D9               	addwf	fsr2l,f,c
 28476  004690  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28477  004692  22DA               	addwfc	fsr2h,f,c
 28478  004694  EC34  F03D         	call	_flash_is_busy	;wreg free
 28479  004698  6EDF               	movwf	indf2,c
 28480                           
 28481                           ;api.c: 184: outBuffer[4] = 0x00;
 28482  00469A  EE20 F004          	lfsr	2,4
 28483  00469E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28484  0046A0  26D9               	addwf	fsr2l,f,c
 28485  0046A2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28486  0046A4  22DA               	addwfc	fsr2h,f,c
 28487  0046A6  0E00               	movlw	0
 28488  0046A8  6EDF               	movwf	indf2,c
 28489                           
 28490                           ;api.c: 185: outBuffer[5] = 0x01;
 28491  0046AA  EE20 F005          	lfsr	2,5
 28492  0046AE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28493  0046B0  26D9               	addwf	fsr2l,f,c
 28494  0046B2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28495  0046B4  22DA               	addwfc	fsr2h,f,c
 28496  0046B6  0E01               	movlw	1
 28497  0046B8  6EDF               	movwf	indf2,c
 28498                           
 28499                           ;api.c: 186: outBuffer[6] = 0x00;
 28500  0046BA  EE20 F006          	lfsr	2,6
 28501  0046BE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28502  0046C0  26D9               	addwf	fsr2l,f,c
 28503  0046C2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28504  0046C4  22DA               	addwfc	fsr2h,f,c
 28505  0046C6  0E00               	movlw	0
 28506  0046C8  6EDF               	movwf	indf2,c
 28507                           
 28508                           ;api.c: 189: outBuffer[7] = ui_get_status();
 28509  0046CA  EE20 F007          	lfsr	2,7
 28510  0046CE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28511  0046D0  26D9               	addwf	fsr2l,f,c
 28512  0046D2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28513  0046D4  22DA               	addwfc	fsr2h,f,c
 28514  0046D6  ECD0  F03D         	call	_ui_get_status	;wreg free
 28515  0046DA  6EDF               	movwf	indf2,c
 28516                           
 28517                           ;api.c: 192: outBuffer[8] = os.encoderCount;
 28518  0046DC  EE20 F008          	lfsr	2,8
 28519  0046E0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28520  0046E2  26D9               	addwf	fsr2l,f,c
 28521  0046E4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28522  0046E6  22DA               	addwfc	fsr2h,f,c
 28523  0046E8  C060  FFDF         	movff	_os,indf2	;volatile
 28524                           
 28525                           ;api.c: 193: outBuffer[9] = os.buttonCount;
 28526  0046EC  EE20 F009          	lfsr	2,9
 28527  0046F0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28528  0046F2  26D9               	addwf	fsr2l,f,c
 28529  0046F4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28530  0046F6  22DA               	addwfc	fsr2h,f,c
 28531  0046F8  C061  FFDF         	movff	_os+1,indf2	;volatile
 28532                           
 28533                           ;api.c: 194: outBuffer[10] = os.timeSlot;
 28534  0046FC  EE20 F00A          	lfsr	2,10
 28535  004700  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28536  004702  26D9               	addwf	fsr2l,f,c
 28537  004704  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28538  004706  22DA               	addwfc	fsr2h,f,c
 28539  004708  C062  FFDF         	movff	_os+2,indf2	;volatile
 28540                           
 28541                           ;api.c: 195: outBuffer[11] = os.done;
 28542  00470C  EE20 F00B          	lfsr	2,11
 28543  004710  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28544  004712  26D9               	addwf	fsr2l,f,c
 28545  004714  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28546  004716  22DA               	addwfc	fsr2h,f,c
 28547  004718  C063  FFDF         	movff	_os+3,indf2	;volatile
 28548                           
 28549                           ;api.c: 196: outBuffer[12] = os.bootloader_mode;
 28550  00471C  EE20 F00C          	lfsr	2,12
 28551  004720  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28552  004722  26D9               	addwf	fsr2l,f,c
 28553  004724  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28554  004726  22DA               	addwfc	fsr2h,f,c
 28555  004728  C064  FFDF         	movff	_os+4,indf2	;volatile
 28556                           
 28557                           ;api.c: 197: outBuffer[13] = os.display_mode;
 28558  00472C  EE20 F00D          	lfsr	2,13
 28559  004730  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28560  004732  26D9               	addwf	fsr2l,f,c
 28561  004734  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28562  004736  22DA               	addwfc	fsr2h,f,c
 28563  004738  C065  FFDF         	movff	_os+5,indf2	;volatile
 28564  00473C  0012               	return		;funcret
 28565  00473E                     __end_of__fill_buffer_get_status:
 28566                           	opt stack 0
 28567                           tosu	equ	0xFFF
 28568                           tosh	equ	0xFFE
 28569                           tosl	equ	0xFFD
 28570                           pclath	equ	0xFFA
 28571                           tblptru	equ	0xFF8
 28572                           tblptrh	equ	0xFF7
 28573                           tblptrl	equ	0xFF6
 28574                           tablat	equ	0xFF5
 28575                           prodh	equ	0xFF4
 28576                           prodl	equ	0xFF3
 28577                           intcon	equ	0xFF2
 28578                           intcon2	equ	0xFF1
 28579                           intcon3	equ	0xFF0
 28580                           indf0	equ	0xFEF
 28581                           postinc0	equ	0xFEE
 28582                           fsr0h	equ	0xFEA
 28583                           fsr0l	equ	0xFE9
 28584                           wreg	equ	0xFE8
 28585                           indf1	equ	0xFE7
 28586                           postdec1	equ	0xFE5
 28587                           plusw1	equ	0xFE3
 28588                           fsr1h	equ	0xFE2
 28589                           fsr1l	equ	0xFE1
 28590                           indf2	equ	0xFDF
 28591                           postinc2	equ	0xFDE
 28592                           postdec2	equ	0xFDD
 28593                           plusw2	equ	0xFDB
 28594                           fsr2h	equ	0xFDA
 28595                           fsr2l	equ	0xFD9
 28596                           status	equ	0xFD8
 28597                           
 28598 ;; *************** function _ui_get_status *****************
 28599 ;; Defined at:
 28600 ;;		line 72 in file "ui.c"
 28601 ;; Parameters:    Size  Location     Type
 28602 ;;		None
 28603 ;; Auto vars:     Size  Location     Type
 28604 ;;		None
 28605 ;; Return value:  Size  Location     Type
 28606 ;;                  1    wreg      enum E7912
 28607 ;; Registers used:
 28608 ;;		wreg, status,2
 28609 ;; Tracked objects:
 28610 ;;		On entry : 0/0
 28611 ;;		On exit  : 0/0
 28612 ;;		Unchanged: 0/0
 28613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28618 ;;Total ram usage:        0 bytes
 28619 ;; Hardware stack levels used:    1
 28620 ;; This function calls:
 28621 ;;		Nothing
 28622 ;; This function is called by:
 28623 ;;		_main
 28624 ;;		__fill_buffer_get_status
 28625 ;; This function uses a non-reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text130
 28629  007BA0                     __ptext130:
 28630                           	opt stack 0
 28631  007BA0                     _ui_get_status:
 28632                           	opt stack 30
 28633                           
 28634                           ;ui.c: 74: return userInterfaceStatus;
 28635                           
 28636                           ;incstack = 0
 28637  007BA0  0100               	movlb	0	; () banked
 28638  007BA2  519E               	movf	_userInterfaceStatus& (0+255),w,b
 28639  007BA4  0012               	return	
 28640  007BA6                     __end_of_ui_get_status:
 28641                           	opt stack 0
 28642                           tosu	equ	0xFFF
 28643                           tosh	equ	0xFFE
 28644                           tosl	equ	0xFFD
 28645                           pclath	equ	0xFFA
 28646                           tblptru	equ	0xFF8
 28647                           tblptrh	equ	0xFF7
 28648                           tblptrl	equ	0xFF6
 28649                           tablat	equ	0xFF5
 28650                           prodh	equ	0xFF4
 28651                           prodl	equ	0xFF3
 28652                           intcon	equ	0xFF2
 28653                           intcon2	equ	0xFF1
 28654                           intcon3	equ	0xFF0
 28655                           indf0	equ	0xFEF
 28656                           postinc0	equ	0xFEE
 28657                           fsr0h	equ	0xFEA
 28658                           fsr0l	equ	0xFE9
 28659                           wreg	equ	0xFE8
 28660                           indf1	equ	0xFE7
 28661                           postdec1	equ	0xFE5
 28662                           plusw1	equ	0xFE3
 28663                           fsr1h	equ	0xFE2
 28664                           fsr1l	equ	0xFE1
 28665                           indf2	equ	0xFDF
 28666                           postinc2	equ	0xFDE
 28667                           postdec2	equ	0xFDD
 28668                           plusw2	equ	0xFDB
 28669                           fsr2h	equ	0xFDA
 28670                           fsr2l	equ	0xFD9
 28671                           status	equ	0xFD8
 28672                           
 28673 ;; *************** function __fill_buffer_get_file_details *****************
 28674 ;; Defined at:
 28675 ;;		line 328 in file "api.c"
 28676 ;; Parameters:    Size  Location     Type
 28677 ;;  inBuffer        2   63[COMRAM] PTR unsigned char 
 28678 ;;		 -> RAM(3759), 
 28679 ;;  outBuffer       2   65[COMRAM] PTR unsigned char 
 28680 ;;		 -> RAM(3759), 
 28681 ;; Auto vars:     Size  Location     Type
 28682 ;;  file_number     1   67[COMRAM] unsigned char 
 28683 ;; Return value:  Size  Location     Type
 28684 ;;                  1    wreg      void 
 28685 ;; Registers used:
 28686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28687 ;; Tracked objects:
 28688 ;;		On entry : 0/0
 28689 ;;		On exit  : 0/0
 28690 ;;		Unchanged: 0/0
 28691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28696 ;;Total ram usage:        5 bytes
 28697 ;; Hardware stack levels used:    1
 28698 ;; Hardware stack levels required when called:    9
 28699 ;; This function calls:
 28700 ;;		_fat_get_file_information
 28701 ;; This function is called by:
 28702 ;;		_api_prepare
 28703 ;; This function uses a non-reentrant model
 28704 ;;
 28705                           
 28706                           	psect	text131
 28707  0065A0                     __ptext131:
 28708                           	opt stack 0
 28709  0065A0                     __fill_buffer_get_file_details:
 28710                           	opt stack 19
 28711                           
 28712                           ;api.c: 330: uint8_t file_number = inBuffer[2];
 28713                           
 28714                           ; BSR set to: 0
 28715                           ;incstack = 0
 28716  0065A0  EE20 F002          	lfsr	2,2
 28717  0065A4  5040               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 28718  0065A6  26D9               	addwf	fsr2l,f,c
 28719  0065A8  5041               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 28720  0065AA  22DA               	addwfc	fsr2h,f,c
 28721  0065AC  50DF               	movf	indf2,w,c
 28722  0065AE  6E44               	movwf	__fill_buffer_get_file_details@file_number,c
 28723                           
 28724                           ;api.c: 333: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 28725  0065B0  C042  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 28726  0065B4  C043  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 28727  0065B8  0E80               	movlw	128
 28728  0065BA  6EDF               	movwf	indf2,c
 28729                           
 28730                           ;api.c: 336: outBuffer[1] = (uint8_t) 0xC125;
 28731  0065BC  EE20 F001          	lfsr	2,1
 28732  0065C0  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28733  0065C2  26D9               	addwf	fsr2l,f,c
 28734  0065C4  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28735  0065C6  22DA               	addwfc	fsr2h,f,c
 28736  0065C8  0E25               	movlw	37
 28737  0065CA  6EDF               	movwf	indf2,c
 28738                           
 28739                           ;api.c: 337: outBuffer[2] = 0xC125 >> 8;
 28740  0065CC  EE20 F002          	lfsr	2,2
 28741  0065D0  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28742  0065D2  26D9               	addwf	fsr2l,f,c
 28743  0065D4  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28744  0065D6  22DA               	addwfc	fsr2h,f,c
 28745  0065D8  0EC1               	movlw	193
 28746  0065DA  6EDF               	movwf	indf2,c
 28747                           
 28748                           ;api.c: 340: outBuffer[3] = file_number;
 28749  0065DC  EE20 F003          	lfsr	2,3
 28750  0065E0  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28751  0065E2  26D9               	addwf	fsr2l,f,c
 28752  0065E4  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28753  0065E6  22DA               	addwfc	fsr2h,f,c
 28754  0065E8  C044  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 28755                           
 28756                           ;api.c: 343: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 28757  0065EC  EE20 F004          	lfsr	2,4
 28758  0065F0  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28759  0065F2  26D9               	addwf	fsr2l,f,c
 28760  0065F4  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28761  0065F6  22DA               	addwfc	fsr2h,f,c
 28762  0065F8  0E05               	movlw	5
 28763  0065FA  2442               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 28764  0065FC  6E38               	movwf	fat_get_file_information@data,c
 28765  0065FE  0E00               	movlw	0
 28766  006600  2043               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 28767  006602  6E39               	movwf	fat_get_file_information@data+1,c
 28768  006604  5044               	movf	__fill_buffer_get_file_details@file_number,w,c
 28769  006606  ECB3  F031         	call	_fat_get_file_information
 28770  00660A  6EDF               	movwf	indf2,c
 28771  00660C  0012               	return		;funcret
 28772  00660E                     __end_of__fill_buffer_get_file_details:
 28773                           	opt stack 0
 28774                           tosu	equ	0xFFF
 28775                           tosh	equ	0xFFE
 28776                           tosl	equ	0xFFD
 28777                           pclath	equ	0xFFA
 28778                           tblptru	equ	0xFF8
 28779                           tblptrh	equ	0xFF7
 28780                           tblptrl	equ	0xFF6
 28781                           tablat	equ	0xFF5
 28782                           prodh	equ	0xFF4
 28783                           prodl	equ	0xFF3
 28784                           intcon	equ	0xFF2
 28785                           intcon2	equ	0xFF1
 28786                           intcon3	equ	0xFF0
 28787                           indf0	equ	0xFEF
 28788                           postinc0	equ	0xFEE
 28789                           fsr0h	equ	0xFEA
 28790                           fsr0l	equ	0xFE9
 28791                           wreg	equ	0xFE8
 28792                           indf1	equ	0xFE7
 28793                           postdec1	equ	0xFE5
 28794                           plusw1	equ	0xFE3
 28795                           fsr1h	equ	0xFE2
 28796                           fsr1l	equ	0xFE1
 28797                           indf2	equ	0xFDF
 28798                           postinc2	equ	0xFDE
 28799                           postdec2	equ	0xFDD
 28800                           plusw2	equ	0xFDB
 28801                           fsr2h	equ	0xFDA
 28802                           fsr2l	equ	0xFD9
 28803                           status	equ	0xFD8
 28804                           
 28805 ;; *************** function __fill_buffer_get_display *****************
 28806 ;; Defined at:
 28807 ;;		line 201 in file "api.c"
 28808 ;; Parameters:    Size  Location     Type
 28809 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 28810 ;;		 -> RAM(3759), 
 28811 ;;  secondHalf      1    6[COMRAM] unsigned char 
 28812 ;; Auto vars:     Size  Location     Type
 28813 ;;  position        1   15[COMRAM] unsigned char 
 28814 ;;  start_line      1   14[COMRAM] unsigned char 
 28815 ;;  line            1   13[COMRAM] unsigned char 
 28816 ;;  cntr            1   12[COMRAM] unsigned char 
 28817 ;; Return value:  Size  Location     Type
 28818 ;;                  1    wreg      void 
 28819 ;; Registers used:
 28820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28821 ;; Tracked objects:
 28822 ;;		On entry : 0/0
 28823 ;;		On exit  : 0/0
 28824 ;;		Unchanged: 0/0
 28825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28826 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28827 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28828 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28829 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28830 ;;Total ram usage:       12 bytes
 28831 ;; Hardware stack levels used:    1
 28832 ;; Hardware stack levels required when called:    1
 28833 ;; This function calls:
 28834 ;;		_display_get_character
 28835 ;; This function is called by:
 28836 ;;		_api_prepare
 28837 ;; This function uses a non-reentrant model
 28838 ;;
 28839                           
 28840                           	psect	text132
 28841  00526C                     __ptext132:
 28842                           	opt stack 0
 28843  00526C                     __fill_buffer_get_display:
 28844                           	opt stack 27
 28845                           
 28846                           ;api.c: 203: uint8_t cntr;;api.c: 204: uint8_t line;;api.c: 205: uint8_t start_line;;api
      +                          .c: 206: uint8_t position;;api.c: 209: if(secondHalf)
 28847                           
 28848                           ;incstack = 0
 28849  00526C  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 28850  00526E  B4D8               	btfsc	status,2,c
 28851  005270  D006               	goto	l2451
 28852                           
 28853                           ;api.c: 210: {;api.c: 211: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 28854  005272  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 28855  005276  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 28856  00527A  0E12               	movlw	18
 28857  00527C  D005               	goto	L32
 28858  00527E                     l2451:
 28859                           
 28860                           ;api.c: 213: else;api.c: 214: {;api.c: 215: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 28861  00527E  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 28862  005282  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 28863  005286  0E11               	movlw	17
 28864  005288                     L32:
 28865  005288  6EDF               	movwf	indf2,c
 28866                           
 28867                           ;api.c: 216: };api.c: 219: outBuffer[1] = (uint8_t) 0xC125;
 28868  00528A  EE20 F001          	lfsr	2,1
 28869  00528E  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 28870  005290  26D9               	addwf	fsr2l,f,c
 28871  005292  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 28872  005294  22DA               	addwfc	fsr2h,f,c
 28873  005296  0E25               	movlw	37
 28874  005298  6EDF               	movwf	indf2,c
 28875                           
 28876                           ;api.c: 220: outBuffer[2] = 0xC125 >> 8;
 28877  00529A  EE20 F002          	lfsr	2,2
 28878  00529E  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 28879  0052A0  26D9               	addwf	fsr2l,f,c
 28880  0052A2  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 28881  0052A4  22DA               	addwfc	fsr2h,f,c
 28882  0052A6  0EC1               	movlw	193
 28883  0052A8  6EDF               	movwf	indf2,c
 28884                           
 28885                           ;api.c: 223: cntr = 3;
 28886  0052AA  0E03               	movlw	3
 28887  0052AC  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 28888                           
 28889                           ;api.c: 224: if(secondHalf)
 28890  0052AE  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 28891  0052B0  B4D8               	btfsc	status,2,c
 28892  0052B2  D002               	goto	l2453
 28893                           
 28894                           ;api.c: 225: {;api.c: 226: start_line = 2;
 28895  0052B4  0E02               	movlw	2
 28896  0052B6  D001               	goto	L33
 28897  0052B8                     l2453:
 28898                           
 28899                           ;api.c: 228: else;api.c: 229: {;api.c: 230: start_line = 0;
 28900  0052B8  0E00               	movlw	0
 28901  0052BA                     L33:
 28902  0052BA  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 28903                           
 28904                           ;api.c: 231: };api.c: 232: for(line=start_line; line<start_line+2; ++line)
 28905  0052BC  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 28906  0052C0  D01A               	goto	l2455
 28907  0052C2                     
 28908                           ;api.c: 233: {;api.c: 234: for(position=0; position<20; ++position)
 28909  0052C2  0E00               	movlw	0
 28910  0052C4  6E10               	movwf	__fill_buffer_get_display@position,c
 28911  0052C6                     l12691:
 28912  0052C6  0E13               	movlw	19
 28913  0052C8  6410               	cpfsgt	__fill_buffer_get_display@position,c
 28914  0052CA  D001               	goto	l2457
 28915  0052CC  D013               	goto	u9880
 28916  0052CE                     l2457:
 28917                           
 28918                           ;api.c: 235: {;api.c: 236: outBuffer[cntr] = display_get_character(line, position);
 28919  0052CE  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 28920  0052D2  500E               	movf	__fill_buffer_get_display@line,w,c
 28921  0052D4  ECEB  F03B         	call	_display_get_character
 28922  0052D8  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 28923  0052DA  500D               	movf	__fill_buffer_get_display@cntr,w,c
 28924  0052DC  0D01               	mullw	1
 28925  0052DE  50F3               	movf	prodl,w,c
 28926  0052E0  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 28927  0052E2  6ED9               	movwf	fsr2l,c
 28928  0052E4  50F4               	movf	prodh,w,c
 28929  0052E6  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 28930  0052E8  6EDA               	movwf	fsr2h,c
 28931  0052EA  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 28932                           
 28933                           ;api.c: 237: ++cntr;
 28934  0052EE  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 28935  0052F0  2A10               	incf	__fill_buffer_get_display@position,f,c
 28936  0052F2  D7E9               	goto	l12691
 28937  0052F4                     u9880:
 28938  0052F4  2A0E               	incf	__fill_buffer_get_display@line,f,c
 28939  0052F6                     l2455:
 28940  0052F6  500F               	movf	__fill_buffer_get_display@start_line,w,c
 28941  0052F8  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 28942  0052FA  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 28943  0052FC  0E02               	movlw	2
 28944  0052FE  2608               	addwf	??__fill_buffer_get_display,f,c
 28945  005300  0E00               	movlw	0
 28946  005302  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 28947  005304  500E               	movf	__fill_buffer_get_display@line,w,c
 28948  005306  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 28949  005308  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 28950  00530A  5008               	movf	??__fill_buffer_get_display,w,c
 28951  00530C  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 28952  00530E  500B               	movf	??__fill_buffer_get_display+3,w,c
 28953  005310  0A80               	xorlw	128
 28954  005312  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 28955  005314  5009               	movf	??__fill_buffer_get_display+1,w,c
 28956  005316  0A80               	xorlw	128
 28957  005318  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 28958  00531A  B0D8               	btfsc	status,0,c
 28959  00531C  0012               	return	
 28960  00531E  D7D1               	goto	l2456
 28961  005320                     __end_of__fill_buffer_get_display:
 28962                           	opt stack 0
 28963                           tosu	equ	0xFFF
 28964                           tosh	equ	0xFFE
 28965                           tosl	equ	0xFFD
 28966                           pclath	equ	0xFFA
 28967                           tblptru	equ	0xFF8
 28968                           tblptrh	equ	0xFF7
 28969                           tblptrl	equ	0xFF6
 28970                           tablat	equ	0xFF5
 28971                           prodh	equ	0xFF4
 28972                           prodl	equ	0xFF3
 28973                           intcon	equ	0xFF2
 28974                           intcon2	equ	0xFF1
 28975                           intcon3	equ	0xFF0
 28976                           indf0	equ	0xFEF
 28977                           postinc0	equ	0xFEE
 28978                           fsr0h	equ	0xFEA
 28979                           fsr0l	equ	0xFE9
 28980                           wreg	equ	0xFE8
 28981                           indf1	equ	0xFE7
 28982                           postdec1	equ	0xFE5
 28983                           plusw1	equ	0xFE3
 28984                           fsr1h	equ	0xFE2
 28985                           fsr1l	equ	0xFE1
 28986                           indf2	equ	0xFDF
 28987                           postinc2	equ	0xFDE
 28988                           postdec2	equ	0xFDD
 28989                           plusw2	equ	0xFDB
 28990                           fsr2h	equ	0xFDA
 28991                           fsr2l	equ	0xFD9
 28992                           status	equ	0xFD8
 28993                           
 28994 ;; *************** function _display_get_character *****************
 28995 ;; Defined at:
 28996 ;;		line 60 in file "display.c"
 28997 ;; Parameters:    Size  Location     Type
 28998 ;;  line            1    wreg     unsigned char 
 28999 ;;  position        1    0[COMRAM] unsigned char 
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;  line            1    3[COMRAM] unsigned char 
 29002 ;; Return value:  Size  Location     Type
 29003 ;;                  1    wreg      unsigned char 
 29004 ;; Registers used:
 29005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29006 ;; Tracked objects:
 29007 ;;		On entry : 0/0
 29008 ;;		On exit  : 0/0
 29009 ;;		Unchanged: 0/0
 29010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29011 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29015 ;;Total ram usage:        4 bytes
 29016 ;; Hardware stack levels used:    1
 29017 ;; This function calls:
 29018 ;;		Nothing
 29019 ;; This function is called by:
 29020 ;;		__fill_buffer_get_display
 29021 ;; This function uses a non-reentrant model
 29022 ;;
 29023                           
 29024                           	psect	text133
 29025  0077D6                     __ptext133:
 29026                           	opt stack 0
 29027  0077D6                     _display_get_character:
 29028                           	opt stack 27
 29029                           
 29030                           ;incstack = 0
 29031                           ;display_get_character@line stored from wreg
 29032  0077D6  6E04               	movwf	display_get_character@line,c
 29033                           
 29034                           ;display.c: 62: return display_content[line][position];
 29035  0077D8  5004               	movf	display_get_character@line,w,c
 29036  0077DA  0D14               	mullw	20
 29037  0077DC  0E6E               	movlw	low _display_content
 29038  0077DE  6E02               	movwf	??_display_get_character& (0+255),c
 29039  0077E0  0E01               	movlw	high _display_content
 29040  0077E2  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 29041  0077E4  50F3               	movf	prodl,w,c
 29042  0077E6  2602               	addwf	??_display_get_character,f,c
 29043  0077E8  50F4               	movf	prodh,w,c
 29044  0077EA  2203               	addwfc	??_display_get_character+1,f,c
 29045  0077EC  5001               	movf	display_get_character@position,w,c
 29046  0077EE  0D01               	mullw	1
 29047  0077F0  50F3               	movf	prodl,w,c
 29048  0077F2  2402               	addwf	??_display_get_character,w,c
 29049  0077F4  6ED9               	movwf	fsr2l,c
 29050  0077F6  50F4               	movf	prodh,w,c
 29051  0077F8  2003               	addwfc	??_display_get_character+1,w,c
 29052  0077FA  6EDA               	movwf	fsr2h,c
 29053  0077FC  50DF               	movf	indf2,w,c
 29054  0077FE  0012               	return	
 29055  007800                     __end_of_display_get_character:
 29056                           	opt stack 0
 29057                           tosu	equ	0xFFF
 29058                           tosh	equ	0xFFE
 29059                           tosl	equ	0xFFD
 29060                           pclath	equ	0xFFA
 29061                           tblptru	equ	0xFF8
 29062                           tblptrh	equ	0xFF7
 29063                           tblptrl	equ	0xFF6
 29064                           tablat	equ	0xFF5
 29065                           prodh	equ	0xFF4
 29066                           prodl	equ	0xFF3
 29067                           intcon	equ	0xFF2
 29068                           intcon2	equ	0xFF1
 29069                           intcon3	equ	0xFF0
 29070                           indf0	equ	0xFEF
 29071                           postinc0	equ	0xFEE
 29072                           fsr0h	equ	0xFEA
 29073                           fsr0l	equ	0xFE9
 29074                           wreg	equ	0xFE8
 29075                           indf1	equ	0xFE7
 29076                           postdec1	equ	0xFE5
 29077                           plusw1	equ	0xFE3
 29078                           fsr1h	equ	0xFE2
 29079                           fsr1l	equ	0xFE1
 29080                           indf2	equ	0xFDF
 29081                           postinc2	equ	0xFDE
 29082                           postdec2	equ	0xFDD
 29083                           plusw2	equ	0xFDB
 29084                           fsr2h	equ	0xFDA
 29085                           fsr2l	equ	0xFD9
 29086                           status	equ	0xFD8
 29087                           
 29088 ;; *************** function __fill_buffer_get_configuration *****************
 29089 ;; Defined at:
 29090 ;;		line 302 in file "api.c"
 29091 ;; Parameters:    Size  Location     Type
 29092 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 29093 ;;		 -> RAM(3759), 
 29094 ;; Auto vars:     Size  Location     Type
 29095 ;;  buffer_large    4    0        unsigned long 
 29096 ;;  buffer_small    2    0        unsigned int 
 29097 ;;  data_length     1    0        unsigned char 
 29098 ;;  cntr            1    0        unsigned char 
 29099 ;; Return value:  Size  Location     Type
 29100 ;;                  1    wreg      void 
 29101 ;; Registers used:
 29102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29103 ;; Tracked objects:
 29104 ;;		On entry : 0/0
 29105 ;;		On exit  : 0/0
 29106 ;;		Unchanged: 0/0
 29107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29111 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29112 ;;Total ram usage:        2 bytes
 29113 ;; Hardware stack levels used:    1
 29114 ;; This function calls:
 29115 ;;		Nothing
 29116 ;; This function is called by:
 29117 ;;		_api_prepare
 29118 ;; This function uses a non-reentrant model
 29119 ;;
 29120                           
 29121                           	psect	text134
 29122  005842                     __ptext134:
 29123                           	opt stack 0
 29124  005842                     __fill_buffer_get_configuration:
 29125                           	opt stack 28
 29126                           
 29127                           ;api.c: 304: uint8_t cntr;;api.c: 305: uint8_t data_length;;api.c: 306: uint16_t buffer_
      +                          small;;api.c: 307: uint32_t buffer_large;;api.c: 310: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29128                           
 29129                           ;incstack = 0
 29130  005842  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 29131  005846  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 29132  00584A  0E10               	movlw	16
 29133  00584C  6EDF               	movwf	indf2,c
 29134                           
 29135                           ;api.c: 313: outBuffer[1] = (uint8_t) 0xC125;
 29136  00584E  EE20 F001          	lfsr	2,1
 29137  005852  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29138  005854  26D9               	addwf	fsr2l,f,c
 29139  005856  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29140  005858  22DA               	addwfc	fsr2h,f,c
 29141  00585A  0E25               	movlw	37
 29142  00585C  6EDF               	movwf	indf2,c
 29143                           
 29144                           ;api.c: 314: outBuffer[2] = 0xC125 >> 8;
 29145  00585E  EE20 F002          	lfsr	2,2
 29146  005862  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29147  005864  26D9               	addwf	fsr2l,f,c
 29148  005866  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29149  005868  22DA               	addwfc	fsr2h,f,c
 29150  00586A  0EC1               	movlw	193
 29151  00586C  6EDF               	movwf	indf2,c
 29152                           
 29153                           ;api.c: 317: outBuffer[3] = communicationSettings.spiMode;
 29154  00586E  EE20 F003          	lfsr	2,3
 29155  005872  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29156  005874  26D9               	addwf	fsr2l,f,c
 29157  005876  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29158  005878  22DA               	addwfc	fsr2h,f,c
 29159  00587A  C139  FFDF         	movff	_communicationSettings,indf2
 29160                           
 29161                           ;api.c: 318: outBuffer[4] = communicationSettings.spiFrequency;
 29162  00587E  EE20 F004          	lfsr	2,4
 29163  005882  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29164  005884  26D9               	addwf	fsr2l,f,c
 29165  005886  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29166  005888  22DA               	addwfc	fsr2h,f,c
 29167  00588A  C13A  FFDF         	movff	_communicationSettings+1,indf2
 29168                           
 29169                           ;api.c: 319: outBuffer[5] = communicationSettings.spiPolarity;
 29170  00588E  EE20 F005          	lfsr	2,5
 29171  005892  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29172  005894  26D9               	addwf	fsr2l,f,c
 29173  005896  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29174  005898  22DA               	addwfc	fsr2h,f,c
 29175  00589A  C13B  FFDF         	movff	_communicationSettings+2,indf2
 29176                           
 29177                           ;api.c: 322: outBuffer[6] = communicationSettings.i2cMode;
 29178  00589E  EE20 F006          	lfsr	2,6
 29179  0058A2  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29180  0058A4  26D9               	addwf	fsr2l,f,c
 29181  0058A6  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29182  0058A8  22DA               	addwfc	fsr2h,f,c
 29183  0058AA  C13C  FFDF         	movff	_communicationSettings+3,indf2
 29184                           
 29185                           ;api.c: 323: outBuffer[7] = communicationSettings.i2cFrequency;
 29186  0058AE  EE20 F007          	lfsr	2,7
 29187  0058B2  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29188  0058B4  26D9               	addwf	fsr2l,f,c
 29189  0058B6  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29190  0058B8  22DA               	addwfc	fsr2h,f,c
 29191  0058BA  C13D  FFDF         	movff	_communicationSettings+4,indf2
 29192                           
 29193                           ;api.c: 324: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 29194  0058BE  EE20 F008          	lfsr	2,8
 29195  0058C2  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29196  0058C4  26D9               	addwf	fsr2l,f,c
 29197  0058C6  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29198  0058C8  22DA               	addwfc	fsr2h,f,c
 29199  0058CA  C13E  FFDF         	movff	_communicationSettings+5,indf2
 29200                           
 29201                           ;api.c: 325: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 29202  0058CE  EE20 F009          	lfsr	2,9
 29203  0058D2  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29204  0058D4  26D9               	addwf	fsr2l,f,c
 29205  0058D6  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29206  0058D8  22DA               	addwfc	fsr2h,f,c
 29207  0058DA  C13F  FFDF         	movff	_communicationSettings+6,indf2
 29208  0058DE  0012               	return		;funcret
 29209  0058E0                     __end_of__fill_buffer_get_configuration:
 29210                           	opt stack 0
 29211                           tosu	equ	0xFFF
 29212                           tosh	equ	0xFFE
 29213                           tosl	equ	0xFFD
 29214                           pclath	equ	0xFFA
 29215                           tblptru	equ	0xFF8
 29216                           tblptrh	equ	0xFF7
 29217                           tblptrl	equ	0xFF6
 29218                           tablat	equ	0xFF5
 29219                           prodh	equ	0xFF4
 29220                           prodl	equ	0xFF3
 29221                           intcon	equ	0xFF2
 29222                           intcon2	equ	0xFF1
 29223                           intcon3	equ	0xFF0
 29224                           indf0	equ	0xFEF
 29225                           postinc0	equ	0xFEE
 29226                           fsr0h	equ	0xFEA
 29227                           fsr0l	equ	0xFE9
 29228                           wreg	equ	0xFE8
 29229                           indf1	equ	0xFE7
 29230                           postdec1	equ	0xFE5
 29231                           plusw1	equ	0xFE3
 29232                           fsr1h	equ	0xFE2
 29233                           fsr1l	equ	0xFE1
 29234                           indf2	equ	0xFDF
 29235                           postinc2	equ	0xFDE
 29236                           postdec2	equ	0xFDD
 29237                           plusw2	equ	0xFDB
 29238                           fsr2h	equ	0xFDA
 29239                           fsr2l	equ	0xFD9
 29240                           status	equ	0xFD8
 29241                           
 29242 ;; *************** function __fill_buffer_get_bootloader_details *****************
 29243 ;; Defined at:
 29244 ;;		line 242 in file "api.c"
 29245 ;; Parameters:    Size  Location     Type
 29246 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29247 ;;		 -> RAM(3759), 
 29248 ;; Auto vars:     Size  Location     Type
 29249 ;;  buffer_large    4   11[COMRAM] unsigned long 
 29250 ;;  buffer_small    2   15[COMRAM] unsigned int 
 29251 ;;  cntr            1   10[COMRAM] unsigned char 
 29252 ;;  data_length     1    9[COMRAM] unsigned char 
 29253 ;; Return value:  Size  Location     Type
 29254 ;;                  1    wreg      void 
 29255 ;; Registers used:
 29256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29257 ;; Tracked objects:
 29258 ;;		On entry : 0/0
 29259 ;;		On exit  : 0/0
 29260 ;;		Unchanged: 0/0
 29261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29263 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29264 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29265 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29266 ;;Total ram usage:       13 bytes
 29267 ;; Hardware stack levels used:    1
 29268 ;; Hardware stack levels required when called:    1
 29269 ;; This function calls:
 29270 ;;		_bootloader_get_entries
 29271 ;;		_bootloader_get_error
 29272 ;;		_bootloader_get_file_size
 29273 ;;		_bootloader_get_flashPagesWritten
 29274 ;;		_bootloader_get_rec_address
 29275 ;;		_bootloader_get_rec_checksum
 29276 ;;		_bootloader_get_rec_checksumCheck
 29277 ;;		_bootloader_get_rec_data
 29278 ;;		_bootloader_get_rec_dataLength
 29279 ;;		_bootloader_get_rec_recordType
 29280 ;;		_bootloader_get_total_entries
 29281 ;; This function is called by:
 29282 ;;		_api_prepare
 29283 ;; This function uses a non-reentrant model
 29284 ;;
 29285                           
 29286                           	psect	text135
 29287  00274A                     __ptext135:
 29288                           	opt stack 0
 29289  00274A                     __fill_buffer_get_bootloader_details:
 29290                           	opt stack 27
 29291                           
 29292                           ;api.c: 244: uint8_t cntr;;api.c: 245: uint8_t data_length;;api.c: 246: uint16_t buffer_
      +                          small;;api.c: 247: uint32_t buffer_large;;api.c: 250: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29293                           
 29294                           ;incstack = 0
 29295  00274A  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 29296  00274E  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 29297  002752  0E10               	movlw	16
 29298  002754  6EDF               	movwf	indf2,c
 29299                           
 29300                           ;api.c: 253: outBuffer[1] = (uint8_t) 0xC125;
 29301  002756  EE20 F001          	lfsr	2,1
 29302  00275A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29303  00275C  26D9               	addwf	fsr2l,f,c
 29304  00275E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29305  002760  22DA               	addwfc	fsr2h,f,c
 29306  002762  0E25               	movlw	37
 29307  002764  6EDF               	movwf	indf2,c
 29308                           
 29309                           ;api.c: 254: outBuffer[2] = 0xC125 >> 8;
 29310  002766  EE20 F002          	lfsr	2,2
 29311  00276A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29312  00276C  26D9               	addwf	fsr2l,f,c
 29313  00276E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29314  002770  22DA               	addwfc	fsr2h,f,c
 29315  002772  0EC1               	movlw	193
 29316  002774  6EDF               	movwf	indf2,c
 29317                           
 29318                           ;api.c: 257: buffer_large = bootloader_get_file_size();
 29319  002776  EC5A  F03D         	call	_bootloader_get_file_size	;wreg free
 29320  00277A  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 29321  00277E  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 29322  002782  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 29323  002786  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 29324                           
 29325                           ;api.c: 258: outBuffer[3] = (uint8_t) buffer_large;
 29326  00278A  EE20 F003          	lfsr	2,3
 29327  00278E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29328  002790  26D9               	addwf	fsr2l,f,c
 29329  002792  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29330  002794  22DA               	addwfc	fsr2h,f,c
 29331  002796  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29332                           
 29333                           ;api.c: 259: outBuffer[4] = (uint8_t) (buffer_large>>8);
 29334  00279A  EE20 F004          	lfsr	2,4
 29335  00279E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29336  0027A0  26D9               	addwf	fsr2l,f,c
 29337  0027A2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29338  0027A4  22DA               	addwfc	fsr2h,f,c
 29339  0027A6  C00D  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+1,indf2
 29340                           
 29341                           ;api.c: 260: outBuffer[5] = (uint8_t) (buffer_large>>16);
 29342  0027AA  EE20 F005          	lfsr	2,5
 29343  0027AE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29344  0027B0  26D9               	addwf	fsr2l,f,c
 29345  0027B2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29346  0027B4  22DA               	addwfc	fsr2h,f,c
 29347  0027B6  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 29348                           
 29349                           ;api.c: 261: outBuffer[6] = (uint8_t) (buffer_large>>32);
 29350  0027BA  EE20 F006          	lfsr	2,6
 29351  0027BE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29352  0027C0  26D9               	addwf	fsr2l,f,c
 29353  0027C2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29354  0027C4  22DA               	addwfc	fsr2h,f,c
 29355  0027C6  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29356                           
 29357                           ;api.c: 263: buffer_small = bootloader_get_entries();
 29358  0027CA  ECB5  F03D         	call	_bootloader_get_entries	;wreg free
 29359  0027CE  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 29360  0027D2  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 29361                           
 29362                           ;api.c: 264: outBuffer[7] = (uint8_t) buffer_small;
 29363  0027D6  EE20 F007          	lfsr	2,7
 29364  0027DA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29365  0027DC  26D9               	addwf	fsr2l,f,c
 29366  0027DE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29367  0027E0  22DA               	addwfc	fsr2h,f,c
 29368  0027E2  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29369                           
 29370                           ;api.c: 265: outBuffer[8] = (uint8_t) (buffer_small>>8);
 29371  0027E6  EE20 F008          	lfsr	2,8
 29372  0027EA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29373  0027EC  26D9               	addwf	fsr2l,f,c
 29374  0027EE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29375  0027F0  22DA               	addwfc	fsr2h,f,c
 29376  0027F2  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29377  0027F4  6EDF               	movwf	indf2,c
 29378                           
 29379                           ;api.c: 267: buffer_small = bootloader_get_total_entries();
 29380  0027F6  ECA1  F03D         	call	_bootloader_get_total_entries	;wreg free
 29381  0027FA  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 29382  0027FE  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 29383                           
 29384                           ;api.c: 268: outBuffer[9] = (uint8_t) buffer_small;
 29385  002802  EE20 F009          	lfsr	2,9
 29386  002806  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29387  002808  26D9               	addwf	fsr2l,f,c
 29388  00280A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29389  00280C  22DA               	addwfc	fsr2h,f,c
 29390  00280E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29391                           
 29392                           ;api.c: 269: outBuffer[10] = (uint8_t) (buffer_small>>8);
 29393  002812  EE20 F00A          	lfsr	2,10
 29394  002816  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29395  002818  26D9               	addwf	fsr2l,f,c
 29396  00281A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29397  00281C  22DA               	addwfc	fsr2h,f,c
 29398  00281E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29399  002820  6EDF               	movwf	indf2,c
 29400                           
 29401                           ;api.c: 271: outBuffer[11] = (uint8_t) bootloader_get_error();
 29402  002822  EE20 F00B          	lfsr	2,11
 29403  002826  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29404  002828  26D9               	addwf	fsr2l,f,c
 29405  00282A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29406  00282C  22DA               	addwfc	fsr2h,f,c
 29407  00282E  ECDC  F03D         	call	_bootloader_get_error	;wreg free
 29408  002832  6EDF               	movwf	indf2,c
 29409                           
 29410                           ;api.c: 273: buffer_small = bootloader_get_flashPagesWritten();
 29411  002834  ECB0  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
 29412  002838  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 29413  00283C  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 29414                           
 29415                           ;api.c: 274: outBuffer[12] = (uint8_t) buffer_small;
 29416  002840  EE20 F00C          	lfsr	2,12
 29417  002844  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29418  002846  26D9               	addwf	fsr2l,f,c
 29419  002848  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29420  00284A  22DA               	addwfc	fsr2h,f,c
 29421  00284C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29422                           
 29423                           ;api.c: 275: outBuffer[13] = (uint8_t) (buffer_small>>8);
 29424  002850  EE20 F00D          	lfsr	2,13
 29425  002854  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29426  002856  26D9               	addwf	fsr2l,f,c
 29427  002858  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29428  00285A  22DA               	addwfc	fsr2h,f,c
 29429  00285C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29430  00285E  6EDF               	movwf	indf2,c
 29431                           
 29432                           ;api.c: 278: buffer_small = bootloader_get_rec_dataLength();
 29433  002860  ECA6  F03D         	call	_bootloader_get_rec_dataLength	;wreg free
 29434  002864  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 29435  002868  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 29436                           
 29437                           ;api.c: 279: outBuffer[14] = (uint8_t) buffer_small;
 29438  00286C  EE20 F00E          	lfsr	2,14
 29439  002870  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29440  002872  26D9               	addwf	fsr2l,f,c
 29441  002874  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29442  002876  22DA               	addwfc	fsr2h,f,c
 29443  002878  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29444                           
 29445                           ;api.c: 280: outBuffer[15] = (uint8_t) (buffer_small>>8);
 29446  00287C  EE20 F00F          	lfsr	2,15
 29447  002880  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29448  002882  26D9               	addwf	fsr2l,f,c
 29449  002884  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29450  002886  22DA               	addwfc	fsr2h,f,c
 29451  002888  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29452  00288A  6EDF               	movwf	indf2,c
 29453                           
 29454                           ;api.c: 282: buffer_small = bootloader_get_rec_address();
 29455  00288C  ECAB  F03D         	call	_bootloader_get_rec_address	;wreg free
 29456  002890  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 29457  002894  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 29458                           
 29459                           ;api.c: 283: outBuffer[16] = (uint8_t) buffer_small;
 29460  002898  EE20 F010          	lfsr	2,16
 29461  00289C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29462  00289E  26D9               	addwf	fsr2l,f,c
 29463  0028A0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29464  0028A2  22DA               	addwfc	fsr2h,f,c
 29465  0028A4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29466                           
 29467                           ;api.c: 284: outBuffer[17] = (uint8_t) (buffer_small>>8);
 29468  0028A8  EE20 F011          	lfsr	2,17
 29469  0028AC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29470  0028AE  26D9               	addwf	fsr2l,f,c
 29471  0028B0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29472  0028B2  22DA               	addwfc	fsr2h,f,c
 29473  0028B4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29474  0028B6  6EDF               	movwf	indf2,c
 29475                           
 29476                           ;api.c: 286: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 29477  0028B8  EE20 F012          	lfsr	2,18
 29478  0028BC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29479  0028BE  26D9               	addwf	fsr2l,f,c
 29480  0028C0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29481  0028C2  22DA               	addwfc	fsr2h,f,c
 29482  0028C4  ECD3  F03D         	call	_bootloader_get_rec_recordType	;wreg free
 29483  0028C8  6EDF               	movwf	indf2,c
 29484                           
 29485                           ;api.c: 287: outBuffer[19] = bootloader_get_rec_checksum();
 29486  0028CA  EE20 F013          	lfsr	2,19
 29487  0028CE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29488  0028D0  26D9               	addwf	fsr2l,f,c
 29489  0028D2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29490  0028D4  22DA               	addwfc	fsr2h,f,c
 29491  0028D6  ECD9  F03D         	call	_bootloader_get_rec_checksum	;wreg free
 29492  0028DA  6EDF               	movwf	indf2,c
 29493                           
 29494                           ;api.c: 288: outBuffer[20] = bootloader_get_rec_checksumCheck();
 29495  0028DC  EE20 F014          	lfsr	2,20
 29496  0028E0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29497  0028E2  26D9               	addwf	fsr2l,f,c
 29498  0028E4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29499  0028E6  22DA               	addwfc	fsr2h,f,c
 29500  0028E8  ECD6  F03D         	call	_bootloader_get_rec_checksumCheck	;wreg free
 29501  0028EC  6EDF               	movwf	indf2,c
 29502                           
 29503                           ;api.c: 290: data_length = (uint8_t) bootloader_get_rec_dataLength();
 29504  0028EE  ECA6  F03D         	call	_bootloader_get_rec_dataLength	;wreg free
 29505  0028F2  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 29506  0028F4  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29507                           
 29508                           ;api.c: 291: if(data_length>43)
 29509  0028F6  0E2B               	movlw	43
 29510  0028F8  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 29511  0028FA  D002               	goto	l2463
 29512                           
 29513                           ;api.c: 292: {;api.c: 294: data_length = 43;
 29514  0028FC  0E2B               	movlw	43
 29515  0028FE  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29516  002900                     l2463:
 29517                           
 29518                           ;api.c: 295: };api.c: 296: for(cntr=0; cntr<data_length; ++cntr)
 29519  002900  0E00               	movlw	0
 29520  002902  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 29521  002904  D014               	goto	l2464
 29522  002906                     
 29523                           ;api.c: 297: {;api.c: 298: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 29524  002906  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29525  002908  EC29  F03D         	call	_bootloader_get_rec_data
 29526  00290C  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 29527  00290E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29528  002910  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 29529  002912  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 29530  002914  0E15               	movlw	21
 29531  002916  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 29532  002918  0E00               	movlw	0
 29533  00291A  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 29534  00291C  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 29535  00291E  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29536  002920  6ED9               	movwf	fsr2l,c
 29537  002922  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 29538  002924  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29539  002926  6EDA               	movwf	fsr2h,c
 29540  002928  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 29541  00292C  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 29542  00292E                     l2464:
 29543  00292E  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 29544  002930  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 29545  002932  B0D8               	btfsc	status,0,c
 29546  002934  0012               	return	
 29547  002936  D7E7               	goto	l2465
 29548  002938                     __end_of__fill_buffer_get_bootloader_details:
 29549                           	opt stack 0
 29550                           tosu	equ	0xFFF
 29551                           tosh	equ	0xFFE
 29552                           tosl	equ	0xFFD
 29553                           pclath	equ	0xFFA
 29554                           tblptru	equ	0xFF8
 29555                           tblptrh	equ	0xFF7
 29556                           tblptrl	equ	0xFF6
 29557                           tablat	equ	0xFF5
 29558                           prodh	equ	0xFF4
 29559                           prodl	equ	0xFF3
 29560                           intcon	equ	0xFF2
 29561                           intcon2	equ	0xFF1
 29562                           intcon3	equ	0xFF0
 29563                           indf0	equ	0xFEF
 29564                           postinc0	equ	0xFEE
 29565                           fsr0h	equ	0xFEA
 29566                           fsr0l	equ	0xFE9
 29567                           wreg	equ	0xFE8
 29568                           indf1	equ	0xFE7
 29569                           postdec1	equ	0xFE5
 29570                           plusw1	equ	0xFE3
 29571                           fsr1h	equ	0xFE2
 29572                           fsr1l	equ	0xFE1
 29573                           indf2	equ	0xFDF
 29574                           postinc2	equ	0xFDE
 29575                           postdec2	equ	0xFDD
 29576                           plusw2	equ	0xFDB
 29577                           fsr2h	equ	0xFDA
 29578                           fsr2l	equ	0xFD9
 29579                           status	equ	0xFD8
 29580                           
 29581 ;; *************** function _bootloader_get_total_entries *****************
 29582 ;; Defined at:
 29583 ;;		line 432 in file "bootloader.c"
 29584 ;; Parameters:    Size  Location     Type
 29585 ;;		None
 29586 ;; Auto vars:     Size  Location     Type
 29587 ;;		None
 29588 ;; Return value:  Size  Location     Type
 29589 ;;                  2    0[COMRAM] unsigned int 
 29590 ;; Registers used:
 29591 ;;		None
 29592 ;; Tracked objects:
 29593 ;;		On entry : 0/0
 29594 ;;		On exit  : 0/0
 29595 ;;		Unchanged: 0/0
 29596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29601 ;;Total ram usage:        2 bytes
 29602 ;; Hardware stack levels used:    1
 29603 ;; This function calls:
 29604 ;;		Nothing
 29605 ;; This function is called by:
 29606 ;;		__display_checked
 29607 ;;		__display_programming
 29608 ;;		__fill_buffer_get_bootloader_details
 29609 ;; This function uses a non-reentrant model
 29610 ;;
 29611                           
 29612                           	psect	text136
 29613  007B42                     __ptext136:
 29614                           	opt stack 0
 29615  007B42                     _bootloader_get_total_entries:
 29616                           	opt stack 28
 29617                           
 29618                           ;bootloader.c: 434: return total_hex_file_entries;
 29619                           
 29620                           ;incstack = 0
 29621  007B42  C168  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 29622  007B46  C169  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 29623  007B4A  0012               	return		;funcret
 29624  007B4C                     __end_of_bootloader_get_total_entries:
 29625                           	opt stack 0
 29626                           tosu	equ	0xFFF
 29627                           tosh	equ	0xFFE
 29628                           tosl	equ	0xFFD
 29629                           pclath	equ	0xFFA
 29630                           tblptru	equ	0xFF8
 29631                           tblptrh	equ	0xFF7
 29632                           tblptrl	equ	0xFF6
 29633                           tablat	equ	0xFF5
 29634                           prodh	equ	0xFF4
 29635                           prodl	equ	0xFF3
 29636                           intcon	equ	0xFF2
 29637                           intcon2	equ	0xFF1
 29638                           intcon3	equ	0xFF0
 29639                           indf0	equ	0xFEF
 29640                           postinc0	equ	0xFEE
 29641                           fsr0h	equ	0xFEA
 29642                           fsr0l	equ	0xFE9
 29643                           wreg	equ	0xFE8
 29644                           indf1	equ	0xFE7
 29645                           postdec1	equ	0xFE5
 29646                           plusw1	equ	0xFE3
 29647                           fsr1h	equ	0xFE2
 29648                           fsr1l	equ	0xFE1
 29649                           indf2	equ	0xFDF
 29650                           postinc2	equ	0xFDE
 29651                           postdec2	equ	0xFDD
 29652                           plusw2	equ	0xFDB
 29653                           fsr2h	equ	0xFDA
 29654                           fsr2l	equ	0xFD9
 29655                           status	equ	0xFD8
 29656                           
 29657 ;; *************** function _bootloader_get_rec_recordType *****************
 29658 ;; Defined at:
 29659 ;;		line 453 in file "bootloader.c"
 29660 ;; Parameters:    Size  Location     Type
 29661 ;;		None
 29662 ;; Auto vars:     Size  Location     Type
 29663 ;;		None
 29664 ;; Return value:  Size  Location     Type
 29665 ;;                  1    wreg      enum E6756
 29666 ;; Registers used:
 29667 ;;		wreg, status,2
 29668 ;; Tracked objects:
 29669 ;;		On entry : 0/0
 29670 ;;		On exit  : 0/0
 29671 ;;		Unchanged: 0/0
 29672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29677 ;;Total ram usage:        0 bytes
 29678 ;; Hardware stack levels used:    1
 29679 ;; This function calls:
 29680 ;;		Nothing
 29681 ;; This function is called by:
 29682 ;;		__fill_buffer_get_bootloader_details
 29683 ;; This function uses a non-reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text137
 29687  007BA6                     __ptext137:
 29688                           	opt stack 0
 29689  007BA6                     _bootloader_get_rec_recordType:
 29690                           	opt stack 27
 29691                           
 29692                           ;bootloader.c: 455: return hex_file_entry.recordType;
 29693                           
 29694                           ;incstack = 0
 29695  007BA6  0101               	movlb	1	; () banked
 29696  007BA8  51C2               	movf	(_hex_file_entry+4)& (0+255),w,b
 29697  007BAA  0012               	return	
 29698  007BAC                     __end_of_bootloader_get_rec_recordType:
 29699                           	opt stack 0
 29700                           tosu	equ	0xFFF
 29701                           tosh	equ	0xFFE
 29702                           tosl	equ	0xFFD
 29703                           pclath	equ	0xFFA
 29704                           tblptru	equ	0xFF8
 29705                           tblptrh	equ	0xFF7
 29706                           tblptrl	equ	0xFF6
 29707                           tablat	equ	0xFF5
 29708                           prodh	equ	0xFF4
 29709                           prodl	equ	0xFF3
 29710                           intcon	equ	0xFF2
 29711                           intcon2	equ	0xFF1
 29712                           intcon3	equ	0xFF0
 29713                           indf0	equ	0xFEF
 29714                           postinc0	equ	0xFEE
 29715                           fsr0h	equ	0xFEA
 29716                           fsr0l	equ	0xFE9
 29717                           wreg	equ	0xFE8
 29718                           indf1	equ	0xFE7
 29719                           postdec1	equ	0xFE5
 29720                           plusw1	equ	0xFE3
 29721                           fsr1h	equ	0xFE2
 29722                           fsr1l	equ	0xFE1
 29723                           indf2	equ	0xFDF
 29724                           postinc2	equ	0xFDE
 29725                           postdec2	equ	0xFDD
 29726                           plusw2	equ	0xFDB
 29727                           fsr2h	equ	0xFDA
 29728                           fsr2l	equ	0xFD9
 29729                           status	equ	0xFD8
 29730                           
 29731 ;; *************** function _bootloader_get_rec_dataLength *****************
 29732 ;; Defined at:
 29733 ;;		line 442 in file "bootloader.c"
 29734 ;; Parameters:    Size  Location     Type
 29735 ;;		None
 29736 ;; Auto vars:     Size  Location     Type
 29737 ;;		None
 29738 ;; Return value:  Size  Location     Type
 29739 ;;                  2    0[COMRAM] unsigned int 
 29740 ;; Registers used:
 29741 ;;		None
 29742 ;; Tracked objects:
 29743 ;;		On entry : 0/0
 29744 ;;		On exit  : 0/0
 29745 ;;		Unchanged: 0/0
 29746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29751 ;;Total ram usage:        2 bytes
 29752 ;; Hardware stack levels used:    1
 29753 ;; This function calls:
 29754 ;;		Nothing
 29755 ;; This function is called by:
 29756 ;;		__fill_buffer_get_bootloader_details
 29757 ;; This function uses a non-reentrant model
 29758 ;;
 29759                           
 29760                           	psect	text138
 29761  007B4C                     __ptext138:
 29762                           	opt stack 0
 29763  007B4C                     _bootloader_get_rec_dataLength:
 29764                           	opt stack 27
 29765                           
 29766                           ;bootloader.c: 444: return hex_file_entry.dataLength;
 29767                           
 29768                           ; BSR set to: 1
 29769                           ;incstack = 0
 29770  007B4C  C1BE  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 29771  007B50  C1BF  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 29772  007B54  0012               	return		;funcret
 29773  007B56                     __end_of_bootloader_get_rec_dataLength:
 29774                           	opt stack 0
 29775                           tosu	equ	0xFFF
 29776                           tosh	equ	0xFFE
 29777                           tosl	equ	0xFFD
 29778                           pclath	equ	0xFFA
 29779                           tblptru	equ	0xFF8
 29780                           tblptrh	equ	0xFF7
 29781                           tblptrl	equ	0xFF6
 29782                           tablat	equ	0xFF5
 29783                           prodh	equ	0xFF4
 29784                           prodl	equ	0xFF3
 29785                           intcon	equ	0xFF2
 29786                           intcon2	equ	0xFF1
 29787                           intcon3	equ	0xFF0
 29788                           indf0	equ	0xFEF
 29789                           postinc0	equ	0xFEE
 29790                           fsr0h	equ	0xFEA
 29791                           fsr0l	equ	0xFE9
 29792                           wreg	equ	0xFE8
 29793                           indf1	equ	0xFE7
 29794                           postdec1	equ	0xFE5
 29795                           plusw1	equ	0xFE3
 29796                           fsr1h	equ	0xFE2
 29797                           fsr1l	equ	0xFE1
 29798                           indf2	equ	0xFDF
 29799                           postinc2	equ	0xFDE
 29800                           postdec2	equ	0xFDD
 29801                           plusw2	equ	0xFDB
 29802                           fsr2h	equ	0xFDA
 29803                           fsr2l	equ	0xFD9
 29804                           status	equ	0xFD8
 29805                           
 29806 ;; *************** function _bootloader_get_rec_data *****************
 29807 ;; Defined at:
 29808 ;;		line 458 in file "bootloader.c"
 29809 ;; Parameters:    Size  Location     Type
 29810 ;;  index           1    wreg     unsigned char 
 29811 ;; Auto vars:     Size  Location     Type
 29812 ;;  index           1    0[COMRAM] unsigned char 
 29813 ;; Return value:  Size  Location     Type
 29814 ;;                  1    wreg      unsigned char 
 29815 ;; Registers used:
 29816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29817 ;; Tracked objects:
 29818 ;;		On entry : 0/0
 29819 ;;		On exit  : 0/0
 29820 ;;		Unchanged: 0/0
 29821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29826 ;;Total ram usage:        1 bytes
 29827 ;; Hardware stack levels used:    1
 29828 ;; This function calls:
 29829 ;;		Nothing
 29830 ;; This function is called by:
 29831 ;;		__fill_buffer_get_bootloader_details
 29832 ;; This function uses a non-reentrant model
 29833 ;;
 29834                           
 29835                           	psect	text139
 29836  007A52                     __ptext139:
 29837                           	opt stack 0
 29838  007A52                     _bootloader_get_rec_data:
 29839                           	opt stack 27
 29840                           
 29841                           ;incstack = 0
 29842                           ;bootloader_get_rec_data@index stored from wreg
 29843  007A52  6E01               	movwf	bootloader_get_rec_data@index,c
 29844                           
 29845                           ;bootloader.c: 460: return hex_file_entry.data[index];
 29846  007A54  5001               	movf	bootloader_get_rec_data@index,w,c
 29847  007A56  0D01               	mullw	1
 29848  007A58  0EC3               	movlw	low (_hex_file_entry+5)
 29849  007A5A  24F3               	addwf	prodl,w,c
 29850  007A5C  6ED9               	movwf	fsr2l,c
 29851  007A5E  0E01               	movlw	high (_hex_file_entry+5)
 29852  007A60  20F4               	addwfc	prodh,w,c
 29853  007A62  6EDA               	movwf	fsr2h,c
 29854  007A64  50DF               	movf	indf2,w,c
 29855  007A66  0012               	return	
 29856  007A68                     __end_of_bootloader_get_rec_data:
 29857                           	opt stack 0
 29858                           tosu	equ	0xFFF
 29859                           tosh	equ	0xFFE
 29860                           tosl	equ	0xFFD
 29861                           pclath	equ	0xFFA
 29862                           tblptru	equ	0xFF8
 29863                           tblptrh	equ	0xFF7
 29864                           tblptrl	equ	0xFF6
 29865                           tablat	equ	0xFF5
 29866                           prodh	equ	0xFF4
 29867                           prodl	equ	0xFF3
 29868                           intcon	equ	0xFF2
 29869                           intcon2	equ	0xFF1
 29870                           intcon3	equ	0xFF0
 29871                           indf0	equ	0xFEF
 29872                           postinc0	equ	0xFEE
 29873                           fsr0h	equ	0xFEA
 29874                           fsr0l	equ	0xFE9
 29875                           wreg	equ	0xFE8
 29876                           indf1	equ	0xFE7
 29877                           postdec1	equ	0xFE5
 29878                           plusw1	equ	0xFE3
 29879                           fsr1h	equ	0xFE2
 29880                           fsr1l	equ	0xFE1
 29881                           indf2	equ	0xFDF
 29882                           postinc2	equ	0xFDE
 29883                           postdec2	equ	0xFDD
 29884                           plusw2	equ	0xFDB
 29885                           fsr2h	equ	0xFDA
 29886                           fsr2l	equ	0xFD9
 29887                           status	equ	0xFD8
 29888                           
 29889 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 29890 ;; Defined at:
 29891 ;;		line 468 in file "bootloader.c"
 29892 ;; Parameters:    Size  Location     Type
 29893 ;;		None
 29894 ;; Auto vars:     Size  Location     Type
 29895 ;;		None
 29896 ;; Return value:  Size  Location     Type
 29897 ;;                  1    wreg      unsigned char 
 29898 ;; Registers used:
 29899 ;;		wreg, status,2
 29900 ;; Tracked objects:
 29901 ;;		On entry : 0/0
 29902 ;;		On exit  : 0/0
 29903 ;;		Unchanged: 0/0
 29904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29909 ;;Total ram usage:        0 bytes
 29910 ;; Hardware stack levels used:    1
 29911 ;; This function calls:
 29912 ;;		Nothing
 29913 ;; This function is called by:
 29914 ;;		__fill_buffer_get_bootloader_details
 29915 ;; This function uses a non-reentrant model
 29916 ;;
 29917                           
 29918                           	psect	text140
 29919  007BAC                     __ptext140:
 29920                           	opt stack 0
 29921  007BAC                     _bootloader_get_rec_checksumCheck:
 29922                           	opt stack 27
 29923                           
 29924                           ;bootloader.c: 470: return hex_file_entry.checksumCheck;
 29925                           
 29926                           ;incstack = 0
 29927  007BAC  0101               	movlb	1	; () banked
 29928  007BAE  51D4               	movf	(_hex_file_entry+22)& (0+255),w,b
 29929  007BB0  0012               	return	
 29930  007BB2                     __end_of_bootloader_get_rec_checksumCheck:
 29931                           	opt stack 0
 29932                           tosu	equ	0xFFF
 29933                           tosh	equ	0xFFE
 29934                           tosl	equ	0xFFD
 29935                           pclath	equ	0xFFA
 29936                           tblptru	equ	0xFF8
 29937                           tblptrh	equ	0xFF7
 29938                           tblptrl	equ	0xFF6
 29939                           tablat	equ	0xFF5
 29940                           prodh	equ	0xFF4
 29941                           prodl	equ	0xFF3
 29942                           intcon	equ	0xFF2
 29943                           intcon2	equ	0xFF1
 29944                           intcon3	equ	0xFF0
 29945                           indf0	equ	0xFEF
 29946                           postinc0	equ	0xFEE
 29947                           fsr0h	equ	0xFEA
 29948                           fsr0l	equ	0xFE9
 29949                           wreg	equ	0xFE8
 29950                           indf1	equ	0xFE7
 29951                           postdec1	equ	0xFE5
 29952                           plusw1	equ	0xFE3
 29953                           fsr1h	equ	0xFE2
 29954                           fsr1l	equ	0xFE1
 29955                           indf2	equ	0xFDF
 29956                           postinc2	equ	0xFDE
 29957                           postdec2	equ	0xFDD
 29958                           plusw2	equ	0xFDB
 29959                           fsr2h	equ	0xFDA
 29960                           fsr2l	equ	0xFD9
 29961                           status	equ	0xFD8
 29962                           
 29963 ;; *************** function _bootloader_get_rec_checksum *****************
 29964 ;; Defined at:
 29965 ;;		line 463 in file "bootloader.c"
 29966 ;; Parameters:    Size  Location     Type
 29967 ;;		None
 29968 ;; Auto vars:     Size  Location     Type
 29969 ;;		None
 29970 ;; Return value:  Size  Location     Type
 29971 ;;                  1    wreg      unsigned char 
 29972 ;; Registers used:
 29973 ;;		wreg, status,2
 29974 ;; Tracked objects:
 29975 ;;		On entry : 0/0
 29976 ;;		On exit  : 0/0
 29977 ;;		Unchanged: 0/0
 29978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29983 ;;Total ram usage:        0 bytes
 29984 ;; Hardware stack levels used:    1
 29985 ;; This function calls:
 29986 ;;		Nothing
 29987 ;; This function is called by:
 29988 ;;		__fill_buffer_get_bootloader_details
 29989 ;; This function uses a non-reentrant model
 29990 ;;
 29991                           
 29992                           	psect	text141
 29993  007BB2                     __ptext141:
 29994                           	opt stack 0
 29995  007BB2                     _bootloader_get_rec_checksum:
 29996                           	opt stack 27
 29997                           
 29998                           ;bootloader.c: 465: return hex_file_entry.checksum;
 29999                           
 30000                           ; BSR set to: 1
 30001                           ;incstack = 0
 30002  007BB2  0101               	movlb	1	; () banked
 30003  007BB4  51D3               	movf	(_hex_file_entry+21)& (0+255),w,b
 30004  007BB6  0012               	return	
 30005  007BB8                     __end_of_bootloader_get_rec_checksum:
 30006                           	opt stack 0
 30007                           tosu	equ	0xFFF
 30008                           tosh	equ	0xFFE
 30009                           tosl	equ	0xFFD
 30010                           pclath	equ	0xFFA
 30011                           tblptru	equ	0xFF8
 30012                           tblptrh	equ	0xFF7
 30013                           tblptrl	equ	0xFF6
 30014                           tablat	equ	0xFF5
 30015                           prodh	equ	0xFF4
 30016                           prodl	equ	0xFF3
 30017                           intcon	equ	0xFF2
 30018                           intcon2	equ	0xFF1
 30019                           intcon3	equ	0xFF0
 30020                           indf0	equ	0xFEF
 30021                           postinc0	equ	0xFEE
 30022                           fsr0h	equ	0xFEA
 30023                           fsr0l	equ	0xFE9
 30024                           wreg	equ	0xFE8
 30025                           indf1	equ	0xFE7
 30026                           postdec1	equ	0xFE5
 30027                           plusw1	equ	0xFE3
 30028                           fsr1h	equ	0xFE2
 30029                           fsr1l	equ	0xFE1
 30030                           indf2	equ	0xFDF
 30031                           postinc2	equ	0xFDE
 30032                           postdec2	equ	0xFDD
 30033                           plusw2	equ	0xFDB
 30034                           fsr2h	equ	0xFDA
 30035                           fsr2l	equ	0xFD9
 30036                           status	equ	0xFD8
 30037                           
 30038 ;; *************** function _bootloader_get_rec_address *****************
 30039 ;; Defined at:
 30040 ;;		line 447 in file "bootloader.c"
 30041 ;; Parameters:    Size  Location     Type
 30042 ;;		None
 30043 ;; Auto vars:     Size  Location     Type
 30044 ;;		None
 30045 ;; Return value:  Size  Location     Type
 30046 ;;                  2    0[COMRAM] unsigned int 
 30047 ;; Registers used:
 30048 ;;		None
 30049 ;; Tracked objects:
 30050 ;;		On entry : 0/0
 30051 ;;		On exit  : 0/0
 30052 ;;		Unchanged: 0/0
 30053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30058 ;;Total ram usage:        2 bytes
 30059 ;; Hardware stack levels used:    1
 30060 ;; This function calls:
 30061 ;;		Nothing
 30062 ;; This function is called by:
 30063 ;;		__display_failed
 30064 ;;		__fill_buffer_get_bootloader_details
 30065 ;; This function uses a non-reentrant model
 30066 ;;
 30067                           
 30068                           	psect	text142
 30069  007B56                     __ptext142:
 30070                           	opt stack 0
 30071  007B56                     _bootloader_get_rec_address:
 30072                           	opt stack 28
 30073                           
 30074                           ;bootloader.c: 450: return hex_file_entry.address;
 30075                           
 30076                           ; BSR set to: 1
 30077                           ;incstack = 0
 30078  007B56  C1C0  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30079  007B5A  C1C1  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30080  007B5E  0012               	return		;funcret
 30081  007B60                     __end_of_bootloader_get_rec_address:
 30082                           	opt stack 0
 30083                           tosu	equ	0xFFF
 30084                           tosh	equ	0xFFE
 30085                           tosl	equ	0xFFD
 30086                           pclath	equ	0xFFA
 30087                           tblptru	equ	0xFF8
 30088                           tblptrh	equ	0xFF7
 30089                           tblptrl	equ	0xFF6
 30090                           tablat	equ	0xFF5
 30091                           prodh	equ	0xFF4
 30092                           prodl	equ	0xFF3
 30093                           intcon	equ	0xFF2
 30094                           intcon2	equ	0xFF1
 30095                           intcon3	equ	0xFF0
 30096                           indf0	equ	0xFEF
 30097                           postinc0	equ	0xFEE
 30098                           fsr0h	equ	0xFEA
 30099                           fsr0l	equ	0xFE9
 30100                           wreg	equ	0xFE8
 30101                           indf1	equ	0xFE7
 30102                           postdec1	equ	0xFE5
 30103                           plusw1	equ	0xFE3
 30104                           fsr1h	equ	0xFE2
 30105                           fsr1l	equ	0xFE1
 30106                           indf2	equ	0xFDF
 30107                           postinc2	equ	0xFDE
 30108                           postdec2	equ	0xFDD
 30109                           plusw2	equ	0xFDB
 30110                           fsr2h	equ	0xFDA
 30111                           fsr2l	equ	0xFD9
 30112                           status	equ	0xFD8
 30113                           
 30114 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30115 ;; Defined at:
 30116 ;;		line 473 in file "bootloader.c"
 30117 ;; Parameters:    Size  Location     Type
 30118 ;;		None
 30119 ;; Auto vars:     Size  Location     Type
 30120 ;;		None
 30121 ;; Return value:  Size  Location     Type
 30122 ;;                  2    0[COMRAM] unsigned int 
 30123 ;; Registers used:
 30124 ;;		None
 30125 ;; Tracked objects:
 30126 ;;		On entry : 0/0
 30127 ;;		On exit  : 0/0
 30128 ;;		Unchanged: 0/0
 30129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30134 ;;Total ram usage:        2 bytes
 30135 ;; Hardware stack levels used:    1
 30136 ;; This function calls:
 30137 ;;		Nothing
 30138 ;; This function is called by:
 30139 ;;		__display_programming
 30140 ;;		__display_done
 30141 ;;		__fill_buffer_get_bootloader_details
 30142 ;; This function uses a non-reentrant model
 30143 ;;
 30144                           
 30145                           	psect	text143
 30146  007B60                     __ptext143:
 30147                           	opt stack 0
 30148  007B60                     _bootloader_get_flashPagesWritten:
 30149                           	opt stack 28
 30150                           
 30151                           ;bootloader.c: 475: return flash_pages_written;
 30152                           
 30153                           ;incstack = 0
 30154  007B60  C166  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30155  007B64  C167  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30156  007B68  0012               	return		;funcret
 30157  007B6A                     __end_of_bootloader_get_flashPagesWritten:
 30158                           	opt stack 0
 30159                           tosu	equ	0xFFF
 30160                           tosh	equ	0xFFE
 30161                           tosl	equ	0xFFD
 30162                           pclath	equ	0xFFA
 30163                           tblptru	equ	0xFF8
 30164                           tblptrh	equ	0xFF7
 30165                           tblptrl	equ	0xFF6
 30166                           tablat	equ	0xFF5
 30167                           prodh	equ	0xFF4
 30168                           prodl	equ	0xFF3
 30169                           intcon	equ	0xFF2
 30170                           intcon2	equ	0xFF1
 30171                           intcon3	equ	0xFF0
 30172                           indf0	equ	0xFEF
 30173                           postinc0	equ	0xFEE
 30174                           fsr0h	equ	0xFEA
 30175                           fsr0l	equ	0xFE9
 30176                           wreg	equ	0xFE8
 30177                           indf1	equ	0xFE7
 30178                           postdec1	equ	0xFE5
 30179                           plusw1	equ	0xFE3
 30180                           fsr1h	equ	0xFE2
 30181                           fsr1l	equ	0xFE1
 30182                           indf2	equ	0xFDF
 30183                           postinc2	equ	0xFDE
 30184                           postdec2	equ	0xFDD
 30185                           plusw2	equ	0xFDB
 30186                           fsr2h	equ	0xFDA
 30187                           fsr2l	equ	0xFD9
 30188                           status	equ	0xFD8
 30189                           
 30190 ;; *************** function _bootloader_get_file_size *****************
 30191 ;; Defined at:
 30192 ;;		line 422 in file "bootloader.c"
 30193 ;; Parameters:    Size  Location     Type
 30194 ;;		None
 30195 ;; Auto vars:     Size  Location     Type
 30196 ;;		None
 30197 ;; Return value:  Size  Location     Type
 30198 ;;                  4    0[COMRAM] unsigned long 
 30199 ;; Registers used:
 30200 ;;		None
 30201 ;; Tracked objects:
 30202 ;;		On entry : 0/0
 30203 ;;		On exit  : 0/0
 30204 ;;		Unchanged: 0/0
 30205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30210 ;;Total ram usage:        4 bytes
 30211 ;; Hardware stack levels used:    1
 30212 ;; This function calls:
 30213 ;;		Nothing
 30214 ;; This function is called by:
 30215 ;;		__display_found
 30216 ;;		__fill_buffer_get_bootloader_details
 30217 ;; This function uses a non-reentrant model
 30218 ;;
 30219                           
 30220                           	psect	text144
 30221  007AB4                     __ptext144:
 30222                           	opt stack 0
 30223  007AB4                     _bootloader_get_file_size:
 30224                           	opt stack 28
 30225                           
 30226                           ;bootloader.c: 424: return hex_file_size;
 30227                           
 30228                           ;incstack = 0
 30229  007AB4  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 30230  007AB8  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 30231  007ABC  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 30232  007AC0  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 30233  007AC4  0012               	return		;funcret
 30234  007AC6                     __end_of_bootloader_get_file_size:
 30235                           	opt stack 0
 30236                           tosu	equ	0xFFF
 30237                           tosh	equ	0xFFE
 30238                           tosl	equ	0xFFD
 30239                           pclath	equ	0xFFA
 30240                           tblptru	equ	0xFF8
 30241                           tblptrh	equ	0xFF7
 30242                           tblptrl	equ	0xFF6
 30243                           tablat	equ	0xFF5
 30244                           prodh	equ	0xFF4
 30245                           prodl	equ	0xFF3
 30246                           intcon	equ	0xFF2
 30247                           intcon2	equ	0xFF1
 30248                           intcon3	equ	0xFF0
 30249                           indf0	equ	0xFEF
 30250                           postinc0	equ	0xFEE
 30251                           fsr0h	equ	0xFEA
 30252                           fsr0l	equ	0xFE9
 30253                           wreg	equ	0xFE8
 30254                           indf1	equ	0xFE7
 30255                           postdec1	equ	0xFE5
 30256                           plusw1	equ	0xFE3
 30257                           fsr1h	equ	0xFE2
 30258                           fsr1l	equ	0xFE1
 30259                           indf2	equ	0xFDF
 30260                           postinc2	equ	0xFDE
 30261                           postdec2	equ	0xFDD
 30262                           plusw2	equ	0xFDB
 30263                           fsr2h	equ	0xFDA
 30264                           fsr2l	equ	0xFD9
 30265                           status	equ	0xFD8
 30266                           
 30267 ;; *************** function _bootloader_get_error *****************
 30268 ;; Defined at:
 30269 ;;		line 437 in file "bootloader.c"
 30270 ;; Parameters:    Size  Location     Type
 30271 ;;		None
 30272 ;; Auto vars:     Size  Location     Type
 30273 ;;		None
 30274 ;; Return value:  Size  Location     Type
 30275 ;;                  1    wreg      enum E6998
 30276 ;; Registers used:
 30277 ;;		wreg, status,2
 30278 ;; Tracked objects:
 30279 ;;		On entry : 0/0
 30280 ;;		On exit  : 0/0
 30281 ;;		Unchanged: 0/0
 30282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30287 ;;Total ram usage:        0 bytes
 30288 ;; Hardware stack levels used:    1
 30289 ;; This function calls:
 30290 ;;		Nothing
 30291 ;; This function is called by:
 30292 ;;		__display_failed
 30293 ;;		__fill_buffer_get_bootloader_details
 30294 ;; This function uses a non-reentrant model
 30295 ;;
 30296                           
 30297                           	psect	text145
 30298  007BB8                     __ptext145:
 30299                           	opt stack 0
 30300  007BB8                     _bootloader_get_error:
 30301                           	opt stack 28
 30302                           
 30303                           ;bootloader.c: 439: return last_error;
 30304                           
 30305                           ;incstack = 0
 30306  007BB8  0100               	movlb	0	; () banked
 30307  007BBA  519C               	movf	_last_error& (0+255),w,b
 30308  007BBC  0012               	return	
 30309  007BBE                     __end_of_bootloader_get_error:
 30310                           	opt stack 0
 30311                           tosu	equ	0xFFF
 30312                           tosh	equ	0xFFE
 30313                           tosl	equ	0xFFD
 30314                           pclath	equ	0xFFA
 30315                           tblptru	equ	0xFF8
 30316                           tblptrh	equ	0xFF7
 30317                           tblptrl	equ	0xFF6
 30318                           tablat	equ	0xFF5
 30319                           prodh	equ	0xFF4
 30320                           prodl	equ	0xFF3
 30321                           intcon	equ	0xFF2
 30322                           intcon2	equ	0xFF1
 30323                           intcon3	equ	0xFF0
 30324                           indf0	equ	0xFEF
 30325                           postinc0	equ	0xFEE
 30326                           fsr0h	equ	0xFEA
 30327                           fsr0l	equ	0xFE9
 30328                           wreg	equ	0xFE8
 30329                           indf1	equ	0xFE7
 30330                           postdec1	equ	0xFE5
 30331                           plusw1	equ	0xFE3
 30332                           fsr1h	equ	0xFE2
 30333                           fsr1l	equ	0xFE1
 30334                           indf2	equ	0xFDF
 30335                           postinc2	equ	0xFDE
 30336                           postdec2	equ	0xFDD
 30337                           plusw2	equ	0xFDB
 30338                           fsr2h	equ	0xFDA
 30339                           fsr2l	equ	0xFD9
 30340                           status	equ	0xFD8
 30341                           
 30342 ;; *************** function _bootloader_get_entries *****************
 30343 ;; Defined at:
 30344 ;;		line 427 in file "bootloader.c"
 30345 ;; Parameters:    Size  Location     Type
 30346 ;;		None
 30347 ;; Auto vars:     Size  Location     Type
 30348 ;;		None
 30349 ;; Return value:  Size  Location     Type
 30350 ;;                  2    0[COMRAM] unsigned int 
 30351 ;; Registers used:
 30352 ;;		None
 30353 ;; Tracked objects:
 30354 ;;		On entry : 0/0
 30355 ;;		On exit  : 0/0
 30356 ;;		Unchanged: 0/0
 30357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30362 ;;Total ram usage:        2 bytes
 30363 ;; Hardware stack levels used:    1
 30364 ;; This function calls:
 30365 ;;		Nothing
 30366 ;; This function is called by:
 30367 ;;		__display_verify
 30368 ;;		__display_failed
 30369 ;;		__display_programming
 30370 ;;		__fill_buffer_get_bootloader_details
 30371 ;; This function uses a non-reentrant model
 30372 ;;
 30373                           
 30374                           	psect	text146
 30375  007B6A                     __ptext146:
 30376                           	opt stack 0
 30377  007B6A                     _bootloader_get_entries:
 30378                           	opt stack 28
 30379                           
 30380                           ;bootloader.c: 429: return hex_file_entries;
 30381                           
 30382                           ; BSR set to: 0
 30383                           ;incstack = 0
 30384  007B6A  C084  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30385  007B6E  C085  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30386  007B72  0012               	return		;funcret
 30387  007B74                     __end_of_bootloader_get_entries:
 30388                           	opt stack 0
 30389                           tosu	equ	0xFFF
 30390                           tosh	equ	0xFFE
 30391                           tosl	equ	0xFFD
 30392                           pclath	equ	0xFFA
 30393                           tblptru	equ	0xFF8
 30394                           tblptrh	equ	0xFF7
 30395                           tblptrl	equ	0xFF6
 30396                           tablat	equ	0xFF5
 30397                           prodh	equ	0xFF4
 30398                           prodl	equ	0xFF3
 30399                           intcon	equ	0xFF2
 30400                           intcon2	equ	0xFF1
 30401                           intcon3	equ	0xFF0
 30402                           indf0	equ	0xFEF
 30403                           postinc0	equ	0xFEE
 30404                           fsr0h	equ	0xFEA
 30405                           fsr0l	equ	0xFE9
 30406                           wreg	equ	0xFE8
 30407                           indf1	equ	0xFE7
 30408                           postdec1	equ	0xFE5
 30409                           plusw1	equ	0xFE3
 30410                           fsr1h	equ	0xFE2
 30411                           fsr1l	equ	0xFE1
 30412                           indf2	equ	0xFDF
 30413                           postinc2	equ	0xFDE
 30414                           postdec2	equ	0xFDD
 30415                           plusw2	equ	0xFDB
 30416                           fsr2h	equ	0xFDA
 30417                           fsr2l	equ	0xFD9
 30418                           status	equ	0xFD8
 30419                           
 30420 ;; *************** function __fill_buffer_find_file *****************
 30421 ;; Defined at:
 30422 ;;		line 346 in file "api.c"
 30423 ;; Parameters:    Size  Location     Type
 30424 ;;  inBuffer        2   68[COMRAM] PTR unsigned char 
 30425 ;;		 -> RAM(3759), 
 30426 ;;  outBuffer       2   70[COMRAM] PTR unsigned char 
 30427 ;;		 -> RAM(3759), 
 30428 ;; Auto vars:     Size  Location     Type
 30429 ;;  cntr            1   76[COMRAM] unsigned char 
 30430 ;; Return value:  Size  Location     Type
 30431 ;;                  1    wreg      void 
 30432 ;; Registers used:
 30433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30434 ;; Tracked objects:
 30435 ;;		On entry : 0/0
 30436 ;;		On exit  : 0/0
 30437 ;;		Unchanged: 0/0
 30438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30441 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30442 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30443 ;;Total ram usage:        9 bytes
 30444 ;; Hardware stack levels used:    1
 30445 ;; Hardware stack levels required when called:    8
 30446 ;; This function calls:
 30447 ;;		_fat_find_file
 30448 ;; This function is called by:
 30449 ;;		_api_prepare
 30450 ;; This function uses a non-reentrant model
 30451 ;;
 30452                           
 30453                           	psect	text147
 30454  005664                     __ptext147:
 30455                           	opt stack 0
 30456  005664                     __fill_buffer_find_file:
 30457                           	opt stack 20
 30458                           
 30459                           ;api.c: 348: uint8_t cntr;;api.c: 351: outBuffer[0] = DATAREQUEST_FIND_FILE;
 30460                           
 30461                           ;incstack = 0
 30462  005664  C047  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 30463  005668  C048  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 30464  00566C  0E81               	movlw	129
 30465  00566E  6EDF               	movwf	indf2,c
 30466                           
 30467                           ;api.c: 354: outBuffer[1] = (uint8_t) 0xC125;
 30468  005670  EE20 F001          	lfsr	2,1
 30469  005674  5047               	movf	__fill_buffer_find_file@outBuffer,w,c
 30470  005676  26D9               	addwf	fsr2l,f,c
 30471  005678  5048               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30472  00567A  22DA               	addwfc	fsr2h,f,c
 30473  00567C  0E25               	movlw	37
 30474  00567E  6EDF               	movwf	indf2,c
 30475                           
 30476                           ;api.c: 355: outBuffer[2] = 0xC125 >> 8;
 30477  005680  EE20 F002          	lfsr	2,2
 30478  005684  5047               	movf	__fill_buffer_find_file@outBuffer,w,c
 30479  005686  26D9               	addwf	fsr2l,f,c
 30480  005688  5048               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30481  00568A  22DA               	addwfc	fsr2h,f,c
 30482  00568C  0EC1               	movlw	193
 30483  00568E  6EDF               	movwf	indf2,c
 30484                           
 30485                           ;api.c: 358: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 30486  005690  0E01               	movlw	1
 30487  005692  2445               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30488  005694  6E31               	movwf	fat_find_file@name,c
 30489  005696  0E00               	movlw	0
 30490  005698  2046               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30491  00569A  6E32               	movwf	fat_find_file@name+1,c
 30492  00569C  0E09               	movlw	9
 30493  00569E  2445               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30494  0056A0  6E33               	movwf	fat_find_file@extension,c
 30495  0056A2  0E00               	movlw	0
 30496  0056A4  2046               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30497  0056A6  6E34               	movwf	fat_find_file@extension+1,c
 30498  0056A8  ECD6  F028         	call	_fat_find_file	;wreg free
 30499  0056AC  6E49               	movwf	??__fill_buffer_find_file& (0+255),c
 30500  0056AE  EE20 F003          	lfsr	2,3
 30501  0056B2  5047               	movf	__fill_buffer_find_file@outBuffer,w,c
 30502  0056B4  26D9               	addwf	fsr2l,f,c
 30503  0056B6  5048               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30504  0056B8  22DA               	addwfc	fsr2h,f,c
 30505  0056BA  C049  FFDF         	movff	??__fill_buffer_find_file,indf2
 30506                           
 30507                           ;api.c: 361: for(cntr=0; cntr<11; ++cntr)
 30508  0056BE  0E00               	movlw	0
 30509  0056C0  6E4D               	movwf	__fill_buffer_find_file@cntr,c
 30510  0056C2                     l12617:
 30511  0056C2  0E0A               	movlw	10
 30512  0056C4  644D               	cpfsgt	__fill_buffer_find_file@cntr,c
 30513  0056C6  D001               	goto	l2476
 30514  0056C8  0012               	return	
 30515  0056CA                     l2476:
 30516                           
 30517                           ;api.c: 362: {;api.c: 363: outBuffer[cntr+12] = inBuffer[cntr+1];
 30518  0056CA  504D               	movf	__fill_buffer_find_file@cntr,w,c
 30519  0056CC  6E49               	movwf	??__fill_buffer_find_file& (0+255),c
 30520  0056CE  6A4A               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 30521  0056D0  0E01               	movlw	1
 30522  0056D2  2649               	addwf	??__fill_buffer_find_file,f,c
 30523  0056D4  0E00               	movlw	0
 30524  0056D6  224A               	addwfc	??__fill_buffer_find_file+1,f,c
 30525  0056D8  5049               	movf	??__fill_buffer_find_file,w,c
 30526  0056DA  2445               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30527  0056DC  6ED9               	movwf	fsr2l,c
 30528  0056DE  504A               	movf	??__fill_buffer_find_file+1,w,c
 30529  0056E0  2046               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30530  0056E2  6EDA               	movwf	fsr2h,c
 30531  0056E4  504D               	movf	__fill_buffer_find_file@cntr,w,c
 30532  0056E6  6E4B               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 30533  0056E8  6A4C               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 30534  0056EA  0E0C               	movlw	12
 30535  0056EC  264B               	addwf	??__fill_buffer_find_file+2,f,c
 30536  0056EE  0E00               	movlw	0
 30537  0056F0  224C               	addwfc	??__fill_buffer_find_file+3,f,c
 30538  0056F2  504B               	movf	??__fill_buffer_find_file+2,w,c
 30539  0056F4  2447               	addwf	__fill_buffer_find_file@outBuffer,w,c
 30540  0056F6  6EE1               	movwf	fsr1l,c
 30541  0056F8  504C               	movf	??__fill_buffer_find_file+3,w,c
 30542  0056FA  2048               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 30543  0056FC  6EE2               	movwf	fsr1h,c
 30544  0056FE  CFDF FFE7          	movff	indf2,indf1
 30545  005702  2A4D               	incf	__fill_buffer_find_file@cntr,f,c
 30546  005704  D7DE               	goto	l12617
 30547  005706                     __end_of__fill_buffer_find_file:
 30548                           	opt stack 0
 30549                           tosu	equ	0xFFF
 30550                           tosh	equ	0xFFE
 30551                           tosl	equ	0xFFD
 30552                           pclath	equ	0xFFA
 30553                           tblptru	equ	0xFF8
 30554                           tblptrh	equ	0xFF7
 30555                           tblptrl	equ	0xFF6
 30556                           tablat	equ	0xFF5
 30557                           prodh	equ	0xFF4
 30558                           prodl	equ	0xFF3
 30559                           intcon	equ	0xFF2
 30560                           intcon2	equ	0xFF1
 30561                           intcon3	equ	0xFF0
 30562                           indf0	equ	0xFEF
 30563                           postinc0	equ	0xFEE
 30564                           fsr0h	equ	0xFEA
 30565                           fsr0l	equ	0xFE9
 30566                           wreg	equ	0xFE8
 30567                           indf1	equ	0xFE7
 30568                           postdec1	equ	0xFE5
 30569                           plusw1	equ	0xFE3
 30570                           fsr1h	equ	0xFE2
 30571                           fsr1l	equ	0xFE1
 30572                           indf2	equ	0xFDF
 30573                           postinc2	equ	0xFDE
 30574                           postdec2	equ	0xFDD
 30575                           plusw2	equ	0xFDB
 30576                           fsr2h	equ	0xFDA
 30577                           fsr2l	equ	0xFD9
 30578                           status	equ	0xFD8
 30579                           
 30580 ;; *************** function _api_parse *****************
 30581 ;; Defined at:
 30582 ;;		line 119 in file "api.c"
 30583 ;; Parameters:    Size  Location     Type
 30584 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 30585 ;;		 -> ReceivedDataBuffer(64), 
 30586 ;;  receivedData    1   53[BANK0 ] unsigned char 
 30587 ;; Auto vars:     Size  Location     Type
 30588 ;;  idx             1   88[COMRAM] unsigned char 
 30589 ;; Return value:  Size  Location     Type
 30590 ;;                  1    wreg      void 
 30591 ;; Registers used:
 30592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30593 ;; Tracked objects:
 30594 ;;		On entry : 0/0
 30595 ;;		On exit  : 0/0
 30596 ;;		Unchanged: 0/0
 30597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30598 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30601 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30602 ;;Total ram usage:        6 bytes
 30603 ;; Hardware stack levels used:    1
 30604 ;; Hardware stack levels required when called:   12
 30605 ;; This function calls:
 30606 ;;		__parse_command_long
 30607 ;;		__parse_command_short
 30608 ;; This function is called by:
 30609 ;;		_APP_DeviceCustomHIDTasks
 30610 ;; This function uses a non-reentrant model
 30611 ;;
 30612                           
 30613                           	psect	text148
 30614  0049D0                     __ptext148:
 30615                           	opt stack 0
 30616  0049D0                     _api_parse:
 30617                           	opt stack 17
 30618                           
 30619                           ;api.c: 123: uint8_t idx;;api.c: 125: if(inBuffer[0]>0x7F)
 30620                           
 30621                           ;incstack = 0
 30622  0049D0  C0EF  FFD9         	movff	api_parse@inBuffer,fsr2l
 30623  0049D4  C0F0  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 30624  0049D8  0E7F               	movlw	127
 30625  0049DA  64DF               	cpfsgt	indf2,c
 30626  0049DC  D001               	goto	l2434
 30627  0049DE  0012               	return	
 30628  0049E0                     l2434:
 30629                           
 30630                           ;api.c: 130: };api.c: 132: idx = 1;
 30631  0049E0  0E01               	movlw	1
 30632  0049E2  6E59               	movwf	api_parse@idx,c
 30633                           
 30634                           ;api.c: 133: while(idx<receivedDataLength)
 30635  0049E4  D058               	goto	l2441
 30636  0049E6                     
 30637                           ;api.c: 134: {;api.c: 136: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 30638  0049E6  5059               	movf	api_parse@idx,w,c
 30639  0049E8  0D01               	mullw	1
 30640  0049EA  50F3               	movf	prodl,w,c
 30641  0049EC  0100               	movlb	0	; () banked
 30642  0049EE  25EF               	addwf	api_parse@inBuffer& (0+255),w,b
 30643  0049F0  6ED9               	movwf	fsr2l,c
 30644  0049F2  50F4               	movf	prodh,w,c
 30645  0049F4  21F0               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30646  0049F6  6EDA               	movwf	fsr2h,c
 30647  0049F8  0E99               	movlw	153
 30648  0049FA  18DE               	xorwf	postinc2,w,c
 30649  0049FC  B4D8               	btfsc	status,2,c
 30650  0049FE  0012               	return	
 30651  004A00  D02E               	goto	l2439
 30652  004A02                     
 30653                           ; BSR set to: 0
 30654                           ;api.c: 144: _parse_command_short(inBuffer[idx]);
 30655                           
 30656                           ; BSR set to: 0
 30657  004A02  5059               	movf	api_parse@idx,w,c
 30658  004A04  0D01               	mullw	1
 30659  004A06  50F3               	movf	prodl,w,c
 30660  004A08  25EF               	addwf	api_parse@inBuffer& (0+255),w,b
 30661  004A0A  6ED9               	movwf	fsr2l,c
 30662  004A0C  50F4               	movf	prodh,w,c
 30663  004A0E  21F0               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30664  004A10  6EDA               	movwf	fsr2h,c
 30665  004A12  50DF               	movf	indf2,w,c
 30666  004A14  EC4B  F030         	call	__parse_command_short
 30667  004A18  D00C               	goto	l13145
 30668  004A1A                     
 30669                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 30670  004A1A  5059               	movf	api_parse@idx,w,c
 30671  004A1C  0D01               	mullw	1
 30672  004A1E  50F3               	movf	prodl,w,c
 30673  004A20  0100               	movlb	0	; () banked
 30674  004A22  25EF               	addwf	api_parse@inBuffer& (0+255),w,b
 30675  004A24  6ED9               	movwf	fsr2l,c
 30676  004A26  50F4               	movf	prodh,w,c
 30677  004A28  21F0               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30678  004A2A  6EDA               	movwf	fsr2h,c
 30679  004A2C  50DF               	movf	indf2,w,c
 30680  004A2E  EC4B  F030         	call	__parse_command_short
 30681  004A32                     l13145:
 30682                           
 30683                           ;api.c: 150: ++idx;
 30684  004A32  2A59               	incf	api_parse@idx,f,c
 30685                           
 30686                           ;api.c: 151: break;
 30687  004A34  D030               	goto	l2441
 30688  004A36                     
 30689                           ;api.c: 154: idx += _parse_command_long(inBuffer[idx]);
 30690  004A36  5059               	movf	api_parse@idx,w,c
 30691  004A38  0D01               	mullw	1
 30692  004A3A  50F3               	movf	prodl,w,c
 30693  004A3C  0100               	movlb	0	; () banked
 30694  004A3E  25EF               	addwf	api_parse@inBuffer& (0+255),w,b
 30695  004A40  6ED9               	movwf	fsr2l,c
 30696  004A42  50F4               	movf	prodh,w,c
 30697  004A44  21F0               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30698  004A46  6EDA               	movwf	fsr2h,c
 30699  004A48  50DF               	movf	indf2,w,c
 30700  004A4A  6E57               	movwf	??_api_parse& (0+255),c
 30701  004A4C  6A58               	clrf	(??_api_parse+1)& (0+255),c
 30702  004A4E  C057  F054         	movff	??_api_parse,__parse_command_long@data
 30703  004A52  C058  F055         	movff	??_api_parse+1,__parse_command_long@data+1
 30704  004A56  EC30  F02E         	call	__parse_command_long	;wreg free
 30705  004A5A  2659               	addwf	api_parse@idx,f,c
 30706                           
 30707                           ;api.c: 155: break;
 30708  004A5C  D01C               	goto	l2441
 30709  004A5E                     l2439:
 30710  004A5E  5059               	movf	api_parse@idx,w,c
 30711  004A60  0D01               	mullw	1
 30712  004A62  50F3               	movf	prodl,w,c
 30713  004A64  0100               	movlb	0	; () banked
 30714  004A66  25EF               	addwf	api_parse@inBuffer& (0+255),w,b
 30715  004A68  6ED9               	movwf	fsr2l,c
 30716  004A6A  50F4               	movf	prodh,w,c
 30717  004A6C  21F0               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30718  004A6E  6EDA               	movwf	fsr2h,c
 30719  004A70  50DF               	movf	indf2,w,c
 30720  004A72  0BF0               	andlw	240
 30721  004A74  6E57               	movwf	??_api_parse& (0+255),c
 30722  004A76  6A58               	clrf	(??_api_parse+1)& (0+255),c
 30723                           
 30724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30725                           ; Switch size 1, requested type "space"
 30726                           ; Number of cases is 1, Range of values is 0 to 0
 30727                           ; switch strategies available:
 30728                           ; Name         Instructions Cycles
 30729                           ; simple_byte            4     3 (average)
 30730                           ;	Chosen strategy is simple_byte
 30731  004A78  5058               	movf	??_api_parse+1,w,c
 30732  004A7A  0A00               	xorlw	0	; case 0
 30733  004A7C  A4D8               	btfss	status,2,c
 30734  004A7E  0012               	return	
 30735                           
 30736                           ; BSR set to: 0
 30737                           ; Switch size 1, requested type "space"
 30738                           ; Number of cases is 3, Range of values is 32 to 80
 30739                           ; switch strategies available:
 30740                           ; Name         Instructions Cycles
 30741                           ; simple_byte           10     6 (average)
 30742                           ;	Chosen strategy is simple_byte
 30743  004A80  5057               	movf	??_api_parse,w,c
 30744  004A82  0A20               	xorlw	32	; case 32
 30745  004A84  B4D8               	btfsc	status,2,c
 30746  004A86  D7BD               	goto	l2440
 30747  004A88  0A10               	xorlw	16	; case 48
 30748  004A8A  B4D8               	btfsc	status,2,c
 30749  004A8C  D7C6               	goto	l2442
 30750  004A8E  0A60               	xorlw	96	; case 80
 30751  004A90  A4D8               	btfss	status,2,c
 30752  004A92  0012               	return	
 30753  004A94  D7D0               	goto	l2443
 30754  004A96                     l2441:
 30755                           
 30756                           ; BSR set to: 0
 30757                           
 30758                           ; BSR set to: 0
 30759  004A96  0100               	movlb	0	; () banked
 30760  004A98  51F1               	movf	api_parse@receivedDataLength& (0+255),w,b
 30761  004A9A  5C59               	subwf	api_parse@idx,w,c
 30762  004A9C  B0D8               	btfsc	status,0,c
 30763  004A9E  0012               	return	
 30764  004AA0  D7A2               	goto	l2437
 30765  004AA2                     __end_of_api_parse:
 30766                           	opt stack 0
 30767                           tosu	equ	0xFFF
 30768                           tosh	equ	0xFFE
 30769                           tosl	equ	0xFFD
 30770                           pclath	equ	0xFFA
 30771                           tblptru	equ	0xFF8
 30772                           tblptrh	equ	0xFF7
 30773                           tblptrl	equ	0xFF6
 30774                           tablat	equ	0xFF5
 30775                           prodh	equ	0xFF4
 30776                           prodl	equ	0xFF3
 30777                           intcon	equ	0xFF2
 30778                           intcon2	equ	0xFF1
 30779                           intcon3	equ	0xFF0
 30780                           indf0	equ	0xFEF
 30781                           postinc0	equ	0xFEE
 30782                           fsr0h	equ	0xFEA
 30783                           fsr0l	equ	0xFE9
 30784                           wreg	equ	0xFE8
 30785                           indf1	equ	0xFE7
 30786                           postdec1	equ	0xFE5
 30787                           plusw1	equ	0xFE3
 30788                           fsr1h	equ	0xFE2
 30789                           fsr1l	equ	0xFE1
 30790                           indf2	equ	0xFDF
 30791                           postinc2	equ	0xFDE
 30792                           postdec2	equ	0xFDD
 30793                           plusw2	equ	0xFDB
 30794                           fsr2h	equ	0xFDA
 30795                           fsr2l	equ	0xFD9
 30796                           status	equ	0xFD8
 30797                           
 30798 ;; *************** function __parse_command_short *****************
 30799 ;; Defined at:
 30800 ;;		line 415 in file "api.c"
 30801 ;; Parameters:    Size  Location     Type
 30802 ;;  cmd             1    wreg     unsigned char 
 30803 ;; Auto vars:     Size  Location     Type
 30804 ;;  cmd             1   19[COMRAM] unsigned char 
 30805 ;; Return value:  Size  Location     Type
 30806 ;;                  1    wreg      void 
 30807 ;; Registers used:
 30808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30809 ;; Tracked objects:
 30810 ;;		On entry : 0/0
 30811 ;;		On exit  : 0/0
 30812 ;;		Unchanged: 0/0
 30813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30818 ;;Total ram usage:        1 bytes
 30819 ;; Hardware stack levels used:    1
 30820 ;; Hardware stack levels required when called:    3
 30821 ;; This function calls:
 30822 ;;		_i2c_eeprom_writeByte
 30823 ;;		_system_delay_ms
 30824 ;; This function is called by:
 30825 ;;		_api_parse
 30826 ;; This function uses a non-reentrant model
 30827 ;;
 30828                           
 30829                           	psect	text149
 30830  006096                     __ptext149:
 30831                           	opt stack 0
 30832  006096                     __parse_command_short:
 30833                           	opt stack 25
 30834                           
 30835                           ;incstack = 0
 30836                           ;__parse_command_short@cmd stored from wreg
 30837  006096  6E14               	movwf	__parse_command_short@cmd,c
 30838                           
 30839                           ;api.c: 417: switch(cmd)
 30840  006098  D028               	goto	l2485
 30841  00609A                     l2486:
 30842  00609A  EF00 F000          	goto	0	; ;# 
 30843                           
 30844                           ;api.c: 423: break;
 30845  00609E  0012               	return	
 30846  0060A0                     
 30847                           ;api.c: 426: i2c_eeprom_writeByte(0x100, 0x94);
 30848  0060A0  0E01               	movlw	1
 30849  0060A2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 30850  0060A4  0E00               	movlw	0
 30851  0060A6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 30852  0060A8  0E94               	movlw	148
 30853  0060AA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 30854  0060AC  EC90  F039         	call	_i2c_eeprom_writeByte	;wreg free
 30855                           
 30856                           ;api.c: 427: system_delay_ms(10);
 30857  0060B0  0E0A               	movlw	10
 30858  0060B2  EC60  F03C         	call	_system_delay_ms
 30859  0060B6  EF00 F000          	goto	0	; ;# 
 30860                           
 30861                           ;api.c: 431: break;
 30862  0060BA  0012               	return	
 30863  0060BC                     
 30864                           ;api.c: 434: i2c_eeprom_writeByte(0x100, 0x78);
 30865  0060BC  0E01               	movlw	1
 30866  0060BE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 30867  0060C0  0E00               	movlw	0
 30868  0060C2  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 30869  0060C4  0E78               	movlw	120
 30870  0060C6  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 30871  0060C8  EC90  F039         	call	_i2c_eeprom_writeByte	;wreg free
 30872                           
 30873                           ;api.c: 435: system_delay_ms(10);
 30874  0060CC  0E0A               	movlw	10
 30875  0060CE  EC60  F03C         	call	_system_delay_ms
 30876  0060D2  EF00 F000          	goto	0	; ;# 
 30877                           
 30878                           ;api.c: 439: break;
 30879  0060D6  0012               	return	
 30880  0060D8                     
 30881                           ;api.c: 442: --os.encoderCount;
 30882  0060D8  0100               	movlb	0	; () banked
 30883  0060DA  0760               	decf	_os& (0+255),f,b	;volatile
 30884                           
 30885                           ;api.c: 443: break;
 30886  0060DC  0012               	return	
 30887  0060DE                     
 30888                           ;api.c: 446: ++os.encoderCount;
 30889                           
 30890                           ; BSR set to: 0
 30891  0060DE  0100               	movlb	0	; () banked
 30892  0060E0  2B60               	incf	_os& (0+255),f,b	;volatile
 30893                           
 30894                           ;api.c: 447: break;
 30895  0060E2  0012               	return	
 30896  0060E4                     
 30897                           ;api.c: 450: ++os.buttonCount;
 30898                           
 30899                           ; BSR set to: 0
 30900  0060E4  0100               	movlb	0	; () banked
 30901  0060E6  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;api.c: 452: }
 30905                           
 30906                           ;api.c: 451: break;
 30907  0060E8  0012               	return	
 30908  0060EA                     l2485:
 30909                           
 30910                           ; BSR set to: 0
 30911  0060EA  5014               	movf	__parse_command_short@cmd,w,c
 30912                           
 30913                           ; Switch size 1, requested type "space"
 30914                           ; Number of cases is 6, Range of values is 32 to 62
 30915                           ; switch strategies available:
 30916                           ; Name         Instructions Cycles
 30917                           ; simple_byte           19    10 (average)
 30918                           ;	Chosen strategy is simple_byte
 30919  0060EC  0A20               	xorlw	32	; case 32
 30920  0060EE  B4D8               	btfsc	status,2,c
 30921  0060F0  D7D4               	goto	l2486
 30922  0060F2  0A01               	xorlw	1	; case 33
 30923  0060F4  B4D8               	btfsc	status,2,c
 30924  0060F6  D7D4               	goto	l2488
 30925  0060F8  0A03               	xorlw	3	; case 34
 30926  0060FA  B4D8               	btfsc	status,2,c
 30927  0060FC  D7DF               	goto	l2489
 30928  0060FE  0A1E               	xorlw	30	; case 60
 30929  006100  B4D8               	btfsc	status,2,c
 30930  006102  D7EA               	goto	l2490
 30931  006104  0A01               	xorlw	1	; case 61
 30932  006106  B4D8               	btfsc	status,2,c
 30933  006108  D7EA               	goto	l2491
 30934  00610A  0A03               	xorlw	3	; case 62
 30935  00610C  A4D8               	btfss	status,2,c
 30936  00610E  0012               	return	
 30937  006110  D7E9               	goto	l2492
 30938  006112                     __end_of__parse_command_short:
 30939                           	opt stack 0
 30940                           tosu	equ	0xFFF
 30941                           tosh	equ	0xFFE
 30942                           tosl	equ	0xFFD
 30943                           pclath	equ	0xFFA
 30944                           tblptru	equ	0xFF8
 30945                           tblptrh	equ	0xFF7
 30946                           tblptrl	equ	0xFF6
 30947                           tablat	equ	0xFF5
 30948                           prodh	equ	0xFF4
 30949                           prodl	equ	0xFF3
 30950                           intcon	equ	0xFF2
 30951                           intcon2	equ	0xFF1
 30952                           intcon3	equ	0xFF0
 30953                           indf0	equ	0xFEF
 30954                           postinc0	equ	0xFEE
 30955                           fsr0h	equ	0xFEA
 30956                           fsr0l	equ	0xFE9
 30957                           wreg	equ	0xFE8
 30958                           indf1	equ	0xFE7
 30959                           postdec1	equ	0xFE5
 30960                           plusw1	equ	0xFE3
 30961                           fsr1h	equ	0xFE2
 30962                           fsr1l	equ	0xFE1
 30963                           indf2	equ	0xFDF
 30964                           postinc2	equ	0xFDE
 30965                           postdec2	equ	0xFDD
 30966                           plusw2	equ	0xFDB
 30967                           fsr2h	equ	0xFDA
 30968                           fsr2l	equ	0xFD9
 30969                           status	equ	0xFD8
 30970                           
 30971 ;; *************** function _system_delay_ms *****************
 30972 ;; Defined at:
 30973 ;;		line 61 in file "os.c"
 30974 ;; Parameters:    Size  Location     Type
 30975 ;;  ms              1    wreg     unsigned char 
 30976 ;; Auto vars:     Size  Location     Type
 30977 ;;  ms              1    1[COMRAM] unsigned char 
 30978 ;;  cntr            1    2[COMRAM] unsigned char 
 30979 ;; Return value:  Size  Location     Type
 30980 ;;                  1    wreg      void 
 30981 ;; Registers used:
 30982 ;;		wreg, status,2, status,0, cstack
 30983 ;; Tracked objects:
 30984 ;;		On entry : 0/0
 30985 ;;		On exit  : 0/0
 30986 ;;		Unchanged: 0/0
 30987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30992 ;;Total ram usage:        3 bytes
 30993 ;; Hardware stack levels used:    1
 30994 ;; This function calls:
 30995 ;;		Nothing
 30996 ;; This function is called by:
 30997 ;;		__parse_command_short
 30998 ;; This function uses a non-reentrant model
 30999 ;;
 31000                           
 31001                           	psect	text150
 31002  0078C0                     __ptext150:
 31003                           	opt stack 0
 31004  0078C0                     _system_delay_ms:
 31005                           	opt stack 27
 31006                           
 31007                           ;incstack = 0
 31008                           ;system_delay_ms@ms stored from wreg
 31009  0078C0  6E02               	movwf	system_delay_ms@ms,c
 31010                           
 31011                           ;os.c: 63: uint8_t cntr;;os.c: 64: for(cntr=0; cntr<ms; ++cntr)
 31012  0078C2  0E00               	movlw	0
 31013  0078C4  6E03               	movwf	system_delay_ms@cntr,c
 31014  0078C6  D009               	goto	l1046
 31015  0078C8                     
 31016                           ;os.c: 65: {;os.c: 66: _delay((unsigned long)((6)*(8000000/4000.0)));
 31017  0078C8  0E10               	movlw	16
 31018  0078CA  6E01               	movwf	??_system_delay_ms& (0+255),c
 31019  0078CC  0E94               	movlw	148
 31020  0078CE                     u11767:
 31021  0078CE  2EE8               	decfsz	wreg,f,c
 31022  0078D0  D7FE               	bra	u11767
 31023  0078D2  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 31024  0078D4  D7FC               	bra	u11767
 31025  0078D6  D000               	nop2	
 31026  0078D8  2A03               	incf	system_delay_ms@cntr,f,c
 31027  0078DA                     l1046:
 31028  0078DA  5002               	movf	system_delay_ms@ms,w,c
 31029  0078DC  5C03               	subwf	system_delay_ms@cntr,w,c
 31030  0078DE  B0D8               	btfsc	status,0,c
 31031  0078E0  0012               	return	
 31032  0078E2  D7F2               	goto	l1047
 31033  0078E4                     __end_of_system_delay_ms:
 31034                           	opt stack 0
 31035                           tosu	equ	0xFFF
 31036                           tosh	equ	0xFFE
 31037                           tosl	equ	0xFFD
 31038                           pclath	equ	0xFFA
 31039                           tblptru	equ	0xFF8
 31040                           tblptrh	equ	0xFF7
 31041                           tblptrl	equ	0xFF6
 31042                           tablat	equ	0xFF5
 31043                           prodh	equ	0xFF4
 31044                           prodl	equ	0xFF3
 31045                           intcon	equ	0xFF2
 31046                           intcon2	equ	0xFF1
 31047                           intcon3	equ	0xFF0
 31048                           indf0	equ	0xFEF
 31049                           postinc0	equ	0xFEE
 31050                           fsr0h	equ	0xFEA
 31051                           fsr0l	equ	0xFE9
 31052                           wreg	equ	0xFE8
 31053                           indf1	equ	0xFE7
 31054                           postdec1	equ	0xFE5
 31055                           plusw1	equ	0xFE3
 31056                           fsr1h	equ	0xFE2
 31057                           fsr1l	equ	0xFE1
 31058                           indf2	equ	0xFDF
 31059                           postinc2	equ	0xFDE
 31060                           postdec2	equ	0xFDD
 31061                           plusw2	equ	0xFDB
 31062                           fsr2h	equ	0xFDA
 31063                           fsr2l	equ	0xFD9
 31064                           status	equ	0xFD8
 31065                           
 31066 ;; *************** function _i2c_eeprom_writeByte *****************
 31067 ;; Defined at:
 31068 ;;		line 344 in file "i2c.c"
 31069 ;; Parameters:    Size  Location     Type
 31070 ;;  address         2   10[COMRAM] unsigned int 
 31071 ;;  data            1   12[COMRAM] unsigned char 
 31072 ;; Auto vars:     Size  Location     Type
 31073 ;;  dat             2   16[COMRAM] unsigned char [2]
 31074 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31075 ;; Return value:  Size  Location     Type
 31076 ;;                  1    wreg      void 
 31077 ;; Registers used:
 31078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31079 ;; Tracked objects:
 31080 ;;		On entry : 0/0
 31081 ;;		On exit  : 0/0
 31082 ;;		Unchanged: 0/0
 31083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31084 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31085 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31086 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31087 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31088 ;;Total ram usage:        9 bytes
 31089 ;; Hardware stack levels used:    1
 31090 ;; Hardware stack levels required when called:    2
 31091 ;; This function calls:
 31092 ;;		__i2c_write
 31093 ;;		_i2c_set_frequency
 31094 ;; This function is called by:
 31095 ;;		__normal_mode
 31096 ;;		__parse_command_short
 31097 ;; This function uses a non-reentrant model
 31098 ;;
 31099                           
 31100                           	psect	text151
 31101  007320                     __ptext151:
 31102                           	opt stack 0
 31103  007320                     _i2c_eeprom_writeByte:
 31104                           	opt stack 27
 31105                           
 31106                           ;i2c.c: 346: uint8_t slave_address;;i2c.c: 347: uint8_t dat[2];;i2c.c: 349: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31107                           
 31108                           ;incstack = 0
 31109  007320  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31110  007324  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31111  007328  0E07               	movlw	7
 31112  00732A  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31113  00732C                     u8645:
 31114  00732C  90D8               	bcf	status,0,c
 31115  00732E  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31116  007330  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31117  007332  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31118  007334  D7FB               	goto	u8645
 31119  007336  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31120  007338  0B0E               	andlw	14
 31121  00733A  09A0               	iorlw	160
 31122  00733C  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31123                           
 31124                           ;i2c.c: 350: dat[0] = address & 0xFF;
 31125  00733E  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31126                           
 31127                           ;i2c.c: 351: dat[1] = data;
 31128  007342  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31129                           
 31130                           ;i2c.c: 354: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31131  007346  0E02               	movlw	2
 31132  007348  ECD5  F03B         	call	_i2c_set_frequency
 31133                           
 31134                           ;i2c.c: 356: _i2c_write(slave_address, &dat[0], 2);
 31135  00734C  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31136  00734E  6E06               	movwf	__i2c_write@data,c
 31137  007350  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31138  007352  6E07               	movwf	__i2c_write@data+1,c
 31139  007354  0E02               	movlw	2
 31140  007356  6E08               	movwf	__i2c_write@length,c
 31141  007358  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31142  00735A  ECC3  F038         	call	__i2c_write
 31143  00735E  0012               	return		;funcret
 31144  007360                     __end_of_i2c_eeprom_writeByte:
 31145                           	opt stack 0
 31146                           tosu	equ	0xFFF
 31147                           tosh	equ	0xFFE
 31148                           tosl	equ	0xFFD
 31149                           pclath	equ	0xFFA
 31150                           tblptru	equ	0xFF8
 31151                           tblptrh	equ	0xFF7
 31152                           tblptrl	equ	0xFF6
 31153                           tablat	equ	0xFF5
 31154                           prodh	equ	0xFF4
 31155                           prodl	equ	0xFF3
 31156                           intcon	equ	0xFF2
 31157                           intcon2	equ	0xFF1
 31158                           intcon3	equ	0xFF0
 31159                           indf0	equ	0xFEF
 31160                           postinc0	equ	0xFEE
 31161                           fsr0h	equ	0xFEA
 31162                           fsr0l	equ	0xFE9
 31163                           wreg	equ	0xFE8
 31164                           indf1	equ	0xFE7
 31165                           postdec1	equ	0xFE5
 31166                           plusw1	equ	0xFE3
 31167                           fsr1h	equ	0xFE2
 31168                           fsr1l	equ	0xFE1
 31169                           indf2	equ	0xFDF
 31170                           postinc2	equ	0xFDE
 31171                           postdec2	equ	0xFDD
 31172                           plusw2	equ	0xFDB
 31173                           fsr2h	equ	0xFDA
 31174                           fsr2l	equ	0xFD9
 31175                           status	equ	0xFD8
 31176                           
 31177 ;; *************** function _i2c_set_frequency *****************
 31178 ;; Defined at:
 31179 ;;		line 115 in file "i2c.c"
 31180 ;; Parameters:    Size  Location     Type
 31181 ;;  frequency       1    wreg     enum E6622
 31182 ;; Auto vars:     Size  Location     Type
 31183 ;;  frequency       1    0[COMRAM] enum E6622
 31184 ;; Return value:  Size  Location     Type
 31185 ;;                  1    wreg      void 
 31186 ;; Registers used:
 31187 ;;		wreg, status,2, status,0
 31188 ;; Tracked objects:
 31189 ;;		On entry : 0/0
 31190 ;;		On exit  : 0/0
 31191 ;;		Unchanged: 0/0
 31192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31197 ;;Total ram usage:        1 bytes
 31198 ;; Hardware stack levels used:    1
 31199 ;; This function calls:
 31200 ;;		Nothing
 31201 ;; This function is called by:
 31202 ;;		_i2c_init
 31203 ;;		__ic2_display_set_address
 31204 ;;		_i2c_display_send_init_sequence
 31205 ;;		_i2c_display_cursor
 31206 ;;		_i2c_display_write_fixed
 31207 ;;		_i2c_digipot_reset_on
 31208 ;;		_i2c_digipot_reset_off
 31209 ;;		_i2c_digipot_backlight
 31210 ;;		_i2c_eeprom_writeByte
 31211 ;;		_i2c_eeprom_readByte
 31212 ;;		_i2c_display_write
 31213 ;;		_i2c_eeprom_write
 31214 ;;		_i2c_eeprom_read
 31215 ;; This function uses a non-reentrant model
 31216 ;;
 31217                           
 31218                           	psect	text152
 31219  0077AA                     __ptext152:
 31220                           	opt stack 0
 31221  0077AA                     _i2c_set_frequency:
 31222                           	opt stack 28
 31223                           
 31224                           ;incstack = 0
 31225                           ;i2c_set_frequency@frequency stored from wreg
 31226  0077AA  6E01               	movwf	i2c_set_frequency@frequency,c
 31227                           
 31228                           ;i2c.c: 117: switch(frequency)
 31229  0077AC  D007               	goto	l1130
 31230  0077AE                     
 31231                           ;i2c.c: 120: SSP1ADD = 119;
 31232  0077AE  0E77               	movlw	119
 31233  0077B0  D003               	goto	L35
 31234  0077B2                     
 31235                           ;i2c.c: 123: SSP1ADD = 59;
 31236  0077B2  0E3B               	movlw	59
 31237  0077B4  D001               	goto	L35
 31238  0077B6                     
 31239                           ;i2c.c: 126: SSP1ADD = 29;
 31240  0077B6  0E1D               	movlw	29
 31241  0077B8                     L35:
 31242  0077B8  6EC8               	movwf	4040,c	;volatile
 31243                           
 31244                           ;i2c.c: 128: }
 31245                           
 31246                           ;i2c.c: 127: break;
 31247  0077BA  D00A               	goto	l1132
 31248  0077BC                     l1130:
 31249  0077BC  5001               	movf	i2c_set_frequency@frequency,w,c
 31250                           
 31251                           ; Switch size 1, requested type "space"
 31252                           ; Number of cases is 3, Range of values is 0 to 2
 31253                           ; switch strategies available:
 31254                           ; Name         Instructions Cycles
 31255                           ; simple_byte           10     6 (average)
 31256                           ;	Chosen strategy is simple_byte
 31257  0077BE  0A00               	xorlw	0	; case 0
 31258  0077C0  B4D8               	btfsc	status,2,c
 31259  0077C2  D7F5               	goto	l1131
 31260  0077C4  0A01               	xorlw	1	; case 1
 31261  0077C6  B4D8               	btfsc	status,2,c
 31262  0077C8  D7F4               	goto	l1133
 31263  0077CA  0A03               	xorlw	3	; case 2
 31264  0077CC  B4D8               	btfsc	status,2,c
 31265  0077CE  D7F3               	goto	l1134
 31266  0077D0                     l1132:
 31267                           
 31268                           ;i2c.c: 130: i2c_frequency = frequency;
 31269  0077D0  C001  F09F         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31270  0077D4  0012               	return		;funcret
 31271  0077D6                     __end_of_i2c_set_frequency:
 31272                           	opt stack 0
 31273                           tosu	equ	0xFFF
 31274                           tosh	equ	0xFFE
 31275                           tosl	equ	0xFFD
 31276                           pclath	equ	0xFFA
 31277                           tblptru	equ	0xFF8
 31278                           tblptrh	equ	0xFF7
 31279                           tblptrl	equ	0xFF6
 31280                           tablat	equ	0xFF5
 31281                           prodh	equ	0xFF4
 31282                           prodl	equ	0xFF3
 31283                           intcon	equ	0xFF2
 31284                           intcon2	equ	0xFF1
 31285                           intcon3	equ	0xFF0
 31286                           indf0	equ	0xFEF
 31287                           postinc0	equ	0xFEE
 31288                           fsr0h	equ	0xFEA
 31289                           fsr0l	equ	0xFE9
 31290                           wreg	equ	0xFE8
 31291                           indf1	equ	0xFE7
 31292                           postdec1	equ	0xFE5
 31293                           plusw1	equ	0xFE3
 31294                           fsr1h	equ	0xFE2
 31295                           fsr1l	equ	0xFE1
 31296                           indf2	equ	0xFDF
 31297                           postinc2	equ	0xFDE
 31298                           postdec2	equ	0xFDD
 31299                           plusw2	equ	0xFDB
 31300                           fsr2h	equ	0xFDA
 31301                           fsr2l	equ	0xFD9
 31302                           status	equ	0xFD8
 31303                           
 31304 ;; *************** function __i2c_write *****************
 31305 ;; Defined at:
 31306 ;;		line 134 in file "i2c.c"
 31307 ;; Parameters:    Size  Location     Type
 31308 ;;  slave_addres    1    wreg     unsigned char 
 31309 ;;  data            2    5[COMRAM] PTR unsigned char 
 31310 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31311 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 31312 ;;		 -> _ic2_display_set_address@data_array(2), 
 31313 ;;  length          1    7[COMRAM] unsigned char 
 31314 ;; Auto vars:     Size  Location     Type
 31315 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31316 ;;  cntr            1    9[COMRAM] unsigned char 
 31317 ;; Return value:  Size  Location     Type
 31318 ;;                  1    wreg      void 
 31319 ;; Registers used:
 31320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31321 ;; Tracked objects:
 31322 ;;		On entry : 0/0
 31323 ;;		On exit  : 0/0
 31324 ;;		Unchanged: 0/0
 31325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31326 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31329 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31330 ;;Total ram usage:        5 bytes
 31331 ;; Hardware stack levels used:    1
 31332 ;; Hardware stack levels required when called:    1
 31333 ;; This function calls:
 31334 ;;		__i2c_send
 31335 ;;		__i2c_start
 31336 ;;		__i2c_stop
 31337 ;;		__i2c_wait_idle
 31338 ;; This function is called by:
 31339 ;;		__ic2_display_set_address
 31340 ;;		_i2c_display_send_init_sequence
 31341 ;;		_i2c_digipot_reset_on
 31342 ;;		_i2c_digipot_reset_off
 31343 ;;		_i2c_digipot_backlight
 31344 ;;		_i2c_eeprom_writeByte
 31345 ;;		_i2c_eeprom_readByte
 31346 ;;		_i2c_eeprom_write
 31347 ;;		_i2c_eeprom_read
 31348 ;; This function uses a non-reentrant model
 31349 ;;
 31350                           
 31351                           	psect	text153
 31352  007186                     __ptext153:
 31353                           	opt stack 0
 31354  007186                     __i2c_write:
 31355                           	opt stack 27
 31356                           
 31357                           ;incstack = 0
 31358                           ;__i2c_write@slave_address stored from wreg
 31359  007186  6E09               	movwf	__i2c_write@slave_address,c
 31360                           
 31361                           ;i2c.c: 136: uint8_t cntr;;i2c.c: 138: _i2c_wait_idle();
 31362  007188  EC25  F036         	call	__i2c_wait_idle	;wreg free
 31363                           
 31364                           ;i2c.c: 139: _i2c_start();
 31365  00718C  ECC8  F03D         	call	__i2c_start	;wreg free
 31366                           
 31367                           ;i2c.c: 140: _i2c_wait_idle();
 31368  007190  EC25  F036         	call	__i2c_wait_idle	;wreg free
 31369                           
 31370                           ;i2c.c: 141: _i2c_send(slave_address);
 31371  007194  5009               	movf	__i2c_write@slave_address,w,c
 31372  007196  ECCC  F03D         	call	__i2c_send
 31373                           
 31374                           ;i2c.c: 142: _i2c_wait_idle();
 31375  00719A  EC25  F036         	call	__i2c_wait_idle	;wreg free
 31376                           
 31377                           ;i2c.c: 144: for(cntr=0; cntr<length; ++cntr)
 31378  00719E  0E00               	movlw	0
 31379  0071A0  6E0A               	movwf	__i2c_write@cntr,c
 31380  0071A2  D00E               	goto	l1138
 31381  0071A4                     
 31382                           ;i2c.c: 145: {;i2c.c: 146: _i2c_send(data[cntr]);
 31383  0071A4  500A               	movf	__i2c_write@cntr,w,c
 31384  0071A6  0D01               	mullw	1
 31385  0071A8  50F3               	movf	prodl,w,c
 31386  0071AA  2406               	addwf	__i2c_write@data,w,c
 31387  0071AC  6ED9               	movwf	fsr2l,c
 31388  0071AE  50F4               	movf	prodh,w,c
 31389  0071B0  2007               	addwfc	__i2c_write@data+1,w,c
 31390  0071B2  6EDA               	movwf	fsr2h,c
 31391  0071B4  50DF               	movf	indf2,w,c
 31392  0071B6  ECCC  F03D         	call	__i2c_send
 31393                           
 31394                           ;i2c.c: 147: _i2c_wait_idle();
 31395  0071BA  EC25  F036         	call	__i2c_wait_idle	;wreg free
 31396  0071BE  2A0A               	incf	__i2c_write@cntr,f,c
 31397  0071C0                     l1138:
 31398  0071C0  5008               	movf	__i2c_write@length,w,c
 31399  0071C2  5C0A               	subwf	__i2c_write@cntr,w,c
 31400  0071C4  A0D8               	btfss	status,0,c
 31401  0071C6  D7EE               	goto	l1139
 31402                           
 31403                           ;i2c.c: 148: };i2c.c: 150: _i2c_stop();
 31404  0071C8  ECC4  F03D         	call	__i2c_stop	;wreg free
 31405  0071CC  0012               	return		;funcret
 31406  0071CE                     __end_of__i2c_write:
 31407                           	opt stack 0
 31408                           tosu	equ	0xFFF
 31409                           tosh	equ	0xFFE
 31410                           tosl	equ	0xFFD
 31411                           pclath	equ	0xFFA
 31412                           tblptru	equ	0xFF8
 31413                           tblptrh	equ	0xFF7
 31414                           tblptrl	equ	0xFF6
 31415                           tablat	equ	0xFF5
 31416                           prodh	equ	0xFF4
 31417                           prodl	equ	0xFF3
 31418                           intcon	equ	0xFF2
 31419                           intcon2	equ	0xFF1
 31420                           intcon3	equ	0xFF0
 31421                           indf0	equ	0xFEF
 31422                           postinc0	equ	0xFEE
 31423                           fsr0h	equ	0xFEA
 31424                           fsr0l	equ	0xFE9
 31425                           wreg	equ	0xFE8
 31426                           indf1	equ	0xFE7
 31427                           postdec1	equ	0xFE5
 31428                           plusw1	equ	0xFE3
 31429                           fsr1h	equ	0xFE2
 31430                           fsr1l	equ	0xFE1
 31431                           indf2	equ	0xFDF
 31432                           postinc2	equ	0xFDE
 31433                           postdec2	equ	0xFDD
 31434                           plusw2	equ	0xFDB
 31435                           fsr2h	equ	0xFDA
 31436                           fsr2l	equ	0xFD9
 31437                           status	equ	0xFD8
 31438                           
 31439 ;; *************** function __i2c_wait_idle *****************
 31440 ;; Defined at:
 31441 ;;		line 48 in file "i2c.c"
 31442 ;; Parameters:    Size  Location     Type
 31443 ;;		None
 31444 ;; Auto vars:     Size  Location     Type
 31445 ;;		None
 31446 ;; Return value:  Size  Location     Type
 31447 ;;                  1    wreg      void 
 31448 ;; Registers used:
 31449 ;;		wreg, status,2, status,0
 31450 ;; Tracked objects:
 31451 ;;		On entry : 0/0
 31452 ;;		On exit  : 0/0
 31453 ;;		Unchanged: 0/0
 31454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31457 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31459 ;;Total ram usage:        5 bytes
 31460 ;; Hardware stack levels used:    1
 31461 ;; This function calls:
 31462 ;;		Nothing
 31463 ;; This function is called by:
 31464 ;;		__i2c_write
 31465 ;;		__i2c_read
 31466 ;;		_i2c_display_write_fixed
 31467 ;;		_i2c_display_write
 31468 ;; This function uses a non-reentrant model
 31469 ;;
 31470                           
 31471                           	psect	text154
 31472  006C4A                     __ptext154:
 31473                           	opt stack 0
 31474  006C4A                     __i2c_wait_idle:
 31475                           	opt stack 27
 31476                           
 31477                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31478                           
 31479                           ;incstack = 0
 31480  006C4A  A4C7               	btfss	4039,2,c	;volatile
 31481  006C4C  D003               	goto	u7320
 31482  006C4E  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31483  006C50  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31484  006C52  D001               	goto	u7328
 31485  006C54                     u7320:
 31486  006C54  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31487  006C56                     u7328:
 31488  006C56  A0C5               	btfss	4037,0,c	;volatile
 31489  006C58  D003               	goto	u7330
 31490  006C5A  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31491  006C5C  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31492  006C5E  D001               	goto	u7338
 31493  006C60                     u7330:
 31494  006C60  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31495  006C62                     u7338:
 31496  006C62  A2C5               	btfss	4037,1,c	;volatile
 31497  006C64  D003               	goto	u7340
 31498  006C66  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31499  006C68  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31500  006C6A  D001               	goto	u7348
 31501  006C6C                     u7340:
 31502  006C6C  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31503  006C6E                     u7348:
 31504  006C6E  A4C5               	btfss	4037,2,c	;volatile
 31505  006C70  D003               	goto	u7350
 31506  006C72  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31507  006C74  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31508  006C76  D001               	goto	u7358
 31509  006C78                     u7350:
 31510  006C78  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31511  006C7A                     u7358:
 31512  006C7A  A6C5               	btfss	4037,3,c	;volatile
 31513  006C7C  D003               	goto	u7360
 31514  006C7E  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31515  006C80  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31516  006C82  D001               	goto	u7368
 31517  006C84                     u7360:
 31518  006C84  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31519  006C86                     u7368:
 31520  006C86  A8C5               	btfss	4037,4,c	;volatile
 31521  006C88  D002               	goto	u7370
 31522  006C8A  0E01               	movlw	1
 31523  006C8C  D001               	goto	u7376
 31524  006C8E                     u7370:
 31525  006C8E  0E00               	movlw	0
 31526  006C90                     u7376:
 31527  006C90  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31528  006C92  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31529  006C94  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31530  006C96  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31531  006C98  1001               	iorwf	??__i2c_wait_idle,w,c
 31532  006C9A  0900               	iorlw	0
 31533  006C9C  B4D8               	btfsc	status,2,c
 31534  006C9E  0012               	return	
 31535  006CA0  D7D4               	goto	__i2c_wait_idle
 31536  006CA2                     __end_of__i2c_wait_idle:
 31537                           	opt stack 0
 31538                           tosu	equ	0xFFF
 31539                           tosh	equ	0xFFE
 31540                           tosl	equ	0xFFD
 31541                           pclath	equ	0xFFA
 31542                           tblptru	equ	0xFF8
 31543                           tblptrh	equ	0xFF7
 31544                           tblptrl	equ	0xFF6
 31545                           tablat	equ	0xFF5
 31546                           prodh	equ	0xFF4
 31547                           prodl	equ	0xFF3
 31548                           intcon	equ	0xFF2
 31549                           intcon2	equ	0xFF1
 31550                           intcon3	equ	0xFF0
 31551                           indf0	equ	0xFEF
 31552                           postinc0	equ	0xFEE
 31553                           fsr0h	equ	0xFEA
 31554                           fsr0l	equ	0xFE9
 31555                           wreg	equ	0xFE8
 31556                           indf1	equ	0xFE7
 31557                           postdec1	equ	0xFE5
 31558                           plusw1	equ	0xFE3
 31559                           fsr1h	equ	0xFE2
 31560                           fsr1l	equ	0xFE1
 31561                           indf2	equ	0xFDF
 31562                           postinc2	equ	0xFDE
 31563                           postdec2	equ	0xFDD
 31564                           plusw2	equ	0xFDB
 31565                           fsr2h	equ	0xFDA
 31566                           fsr2l	equ	0xFD9
 31567                           status	equ	0xFD8
 31568                           
 31569 ;; *************** function __i2c_stop *****************
 31570 ;; Defined at:
 31571 ;;		line 75 in file "i2c.c"
 31572 ;; Parameters:    Size  Location     Type
 31573 ;;		None
 31574 ;; Auto vars:     Size  Location     Type
 31575 ;;		None
 31576 ;; Return value:  Size  Location     Type
 31577 ;;                  1    wreg      void 
 31578 ;; Registers used:
 31579 ;;		None
 31580 ;; Tracked objects:
 31581 ;;		On entry : 0/0
 31582 ;;		On exit  : 0/0
 31583 ;;		Unchanged: 0/0
 31584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31589 ;;Total ram usage:        0 bytes
 31590 ;; Hardware stack levels used:    1
 31591 ;; This function calls:
 31592 ;;		Nothing
 31593 ;; This function is called by:
 31594 ;;		__i2c_write
 31595 ;;		__i2c_read
 31596 ;;		_i2c_display_write_fixed
 31597 ;;		_i2c_display_write
 31598 ;; This function uses a non-reentrant model
 31599 ;;
 31600                           
 31601                           	psect	text155
 31602  007B88                     __ptext155:
 31603                           	opt stack 0
 31604  007B88                     __i2c_stop:
 31605                           	opt stack 27
 31606                           
 31607                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 31608                           
 31609                           ;incstack = 0
 31610  007B88  84C5               	bsf	4037,2,c	;volatile
 31611  007B8A  A4C5               	btfss	4037,2,c	;volatile
 31612  007B8C  0012               	return	
 31613  007B8E  D7FD               	goto	l1107
 31614  007B90                     __end_of__i2c_stop:
 31615                           	opt stack 0
 31616                           tosu	equ	0xFFF
 31617                           tosh	equ	0xFFE
 31618                           tosl	equ	0xFFD
 31619                           pclath	equ	0xFFA
 31620                           tblptru	equ	0xFF8
 31621                           tblptrh	equ	0xFF7
 31622                           tblptrl	equ	0xFF6
 31623                           tablat	equ	0xFF5
 31624                           prodh	equ	0xFF4
 31625                           prodl	equ	0xFF3
 31626                           intcon	equ	0xFF2
 31627                           intcon2	equ	0xFF1
 31628                           intcon3	equ	0xFF0
 31629                           indf0	equ	0xFEF
 31630                           postinc0	equ	0xFEE
 31631                           fsr0h	equ	0xFEA
 31632                           fsr0l	equ	0xFE9
 31633                           wreg	equ	0xFE8
 31634                           indf1	equ	0xFE7
 31635                           postdec1	equ	0xFE5
 31636                           plusw1	equ	0xFE3
 31637                           fsr1h	equ	0xFE2
 31638                           fsr1l	equ	0xFE1
 31639                           indf2	equ	0xFDF
 31640                           postinc2	equ	0xFDE
 31641                           postdec2	equ	0xFDD
 31642                           plusw2	equ	0xFDB
 31643                           fsr2h	equ	0xFDA
 31644                           fsr2l	equ	0xFD9
 31645                           status	equ	0xFD8
 31646                           
 31647 ;; *************** function __i2c_start *****************
 31648 ;; Defined at:
 31649 ;;		line 54 in file "i2c.c"
 31650 ;; Parameters:    Size  Location     Type
 31651 ;;		None
 31652 ;; Auto vars:     Size  Location     Type
 31653 ;;		None
 31654 ;; Return value:  Size  Location     Type
 31655 ;;                  1    wreg      void 
 31656 ;; Registers used:
 31657 ;;		None
 31658 ;; Tracked objects:
 31659 ;;		On entry : 0/0
 31660 ;;		On exit  : 0/0
 31661 ;;		Unchanged: 0/0
 31662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31667 ;;Total ram usage:        0 bytes
 31668 ;; Hardware stack levels used:    1
 31669 ;; This function calls:
 31670 ;;		Nothing
 31671 ;; This function is called by:
 31672 ;;		__i2c_write
 31673 ;;		__i2c_read
 31674 ;;		_i2c_display_write_fixed
 31675 ;;		_i2c_display_write
 31676 ;; This function uses a non-reentrant model
 31677 ;;
 31678                           
 31679                           	psect	text156
 31680  007B90                     __ptext156:
 31681                           	opt stack 0
 31682  007B90                     __i2c_start:
 31683                           	opt stack 27
 31684                           
 31685                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 31686                           
 31687                           ;incstack = 0
 31688  007B90  80C5               	bsf	4037,0,c	;volatile
 31689  007B92  A0C5               	btfss	4037,0,c	;volatile
 31690  007B94  0012               	return	
 31691  007B96  D7FD               	goto	l1092
 31692  007B98                     __end_of__i2c_start:
 31693                           	opt stack 0
 31694                           tosu	equ	0xFFF
 31695                           tosh	equ	0xFFE
 31696                           tosl	equ	0xFFD
 31697                           pclath	equ	0xFFA
 31698                           tblptru	equ	0xFF8
 31699                           tblptrh	equ	0xFF7
 31700                           tblptrl	equ	0xFF6
 31701                           tablat	equ	0xFF5
 31702                           prodh	equ	0xFF4
 31703                           prodl	equ	0xFF3
 31704                           intcon	equ	0xFF2
 31705                           intcon2	equ	0xFF1
 31706                           intcon3	equ	0xFF0
 31707                           indf0	equ	0xFEF
 31708                           postinc0	equ	0xFEE
 31709                           fsr0h	equ	0xFEA
 31710                           fsr0l	equ	0xFE9
 31711                           wreg	equ	0xFE8
 31712                           indf1	equ	0xFE7
 31713                           postdec1	equ	0xFE5
 31714                           plusw1	equ	0xFE3
 31715                           fsr1h	equ	0xFE2
 31716                           fsr1l	equ	0xFE1
 31717                           indf2	equ	0xFDF
 31718                           postinc2	equ	0xFDE
 31719                           postdec2	equ	0xFDD
 31720                           plusw2	equ	0xFDB
 31721                           fsr2h	equ	0xFDA
 31722                           fsr2l	equ	0xFD9
 31723                           status	equ	0xFD8
 31724                           
 31725 ;; *************** function __i2c_send *****************
 31726 ;; Defined at:
 31727 ;;		line 61 in file "i2c.c"
 31728 ;; Parameters:    Size  Location     Type
 31729 ;;  dat             1    wreg     unsigned char 
 31730 ;; Auto vars:     Size  Location     Type
 31731 ;;  dat             1    0[COMRAM] unsigned char 
 31732 ;; Return value:  Size  Location     Type
 31733 ;;                  1    wreg      void 
 31734 ;; Registers used:
 31735 ;;		wreg
 31736 ;; Tracked objects:
 31737 ;;		On entry : 0/0
 31738 ;;		On exit  : 0/0
 31739 ;;		Unchanged: 0/0
 31740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31745 ;;Total ram usage:        1 bytes
 31746 ;; Hardware stack levels used:    1
 31747 ;; This function calls:
 31748 ;;		Nothing
 31749 ;; This function is called by:
 31750 ;;		__i2c_write
 31751 ;;		__i2c_read
 31752 ;;		_i2c_display_write_fixed
 31753 ;;		_i2c_display_write
 31754 ;; This function uses a non-reentrant model
 31755 ;;
 31756                           
 31757                           	psect	text157
 31758  007B98                     __ptext157:
 31759                           	opt stack 0
 31760  007B98                     __i2c_send:
 31761                           	opt stack 27
 31762                           
 31763                           ;incstack = 0
 31764                           ;__i2c_send@dat stored from wreg
 31765  007B98  6E01               	movwf	__i2c_send@dat,c
 31766                           
 31767                           ;i2c.c: 63: SSP1BUF = dat;
 31768  007B9A  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 31769  007B9E  0012               	return		;funcret
 31770  007BA0                     __end_of__i2c_send:
 31771                           	opt stack 0
 31772                           tosu	equ	0xFFF
 31773                           tosh	equ	0xFFE
 31774                           tosl	equ	0xFFD
 31775                           pclath	equ	0xFFA
 31776                           tblptru	equ	0xFF8
 31777                           tblptrh	equ	0xFF7
 31778                           tblptrl	equ	0xFF6
 31779                           tablat	equ	0xFF5
 31780                           prodh	equ	0xFF4
 31781                           prodl	equ	0xFF3
 31782                           intcon	equ	0xFF2
 31783                           intcon2	equ	0xFF1
 31784                           intcon3	equ	0xFF0
 31785                           indf0	equ	0xFEF
 31786                           postinc0	equ	0xFEE
 31787                           fsr0h	equ	0xFEA
 31788                           fsr0l	equ	0xFE9
 31789                           wreg	equ	0xFE8
 31790                           indf1	equ	0xFE7
 31791                           postdec1	equ	0xFE5
 31792                           plusw1	equ	0xFE3
 31793                           fsr1h	equ	0xFE2
 31794                           fsr1l	equ	0xFE1
 31795                           indf2	equ	0xFDF
 31796                           postinc2	equ	0xFDE
 31797                           postdec2	equ	0xFDD
 31798                           plusw2	equ	0xFDB
 31799                           fsr2h	equ	0xFDA
 31800                           fsr2l	equ	0xFD9
 31801                           status	equ	0xFD8
 31802                           
 31803 ;; *************** function __parse_command_long *****************
 31804 ;; Defined at:
 31805 ;;		line 455 in file "api.c"
 31806 ;; Parameters:    Size  Location     Type
 31807 ;;  data            2   83[COMRAM] PTR unsigned char 
 31808 ;;		 -> RAM(3759), 
 31809 ;; Auto vars:     Size  Location     Type
 31810 ;;  length          1   85[COMRAM] unsigned char 
 31811 ;; Return value:  Size  Location     Type
 31812 ;;                  1    wreg      unsigned char 
 31813 ;; Registers used:
 31814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31815 ;; Tracked objects:
 31816 ;;		On entry : 0/0
 31817 ;;		On exit  : 0/0
 31818 ;;		Unchanged: 0/0
 31819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31824 ;;Total ram usage:        3 bytes
 31825 ;; Hardware stack levels used:    1
 31826 ;; Hardware stack levels required when called:   11
 31827 ;; This function calls:
 31828 ;;		__parse_file_append
 31829 ;;		__parse_file_create
 31830 ;;		__parse_file_delete
 31831 ;;		__parse_file_modify
 31832 ;;		__parse_file_rename
 31833 ;;		__parse_file_truncate
 31834 ;; This function is called by:
 31835 ;;		_api_parse
 31836 ;; This function uses a non-reentrant model
 31837 ;;
 31838                           
 31839                           	psect	text158
 31840  005C60                     __ptext158:
 31841                           	opt stack 0
 31842  005C60                     __parse_command_long:
 31843                           	opt stack 17
 31844                           
 31845                           ;api.c: 457: uint8_t length = 65;
 31846                           
 31847                           ;incstack = 0
 31848  005C60  0E41               	movlw	65
 31849  005C62  6E56               	movwf	__parse_command_long@length,c
 31850                           
 31851                           ;api.c: 459: switch(data[0])
 31852  005C64  D02B               	goto	l2496
 31853  005C66                     
 31854                           ;api.c: 462: length = _parse_file_truncate(data);
 31855  005C66  C054  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 31856  005C6A  C055  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 31857  005C6E  ECE3  F03D         	call	__parse_file_truncate	;wreg free
 31858  005C72  D022               	goto	L40
 31859  005C74                     
 31860                           ;api.c: 466: length = _parse_file_delete(data);
 31861  005C74  C054  F040         	movff	__parse_command_long@data,__parse_file_delete@data
 31862  005C78  C055  F041         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 31863  005C7C  ECFF  F037         	call	__parse_file_delete	;wreg free
 31864  005C80  D01B               	goto	L40
 31865  005C82                     
 31866                           ;api.c: 470: length = _parse_file_create(data);
 31867  005C82  C054  F051         	movff	__parse_command_long@data,__parse_file_create@data
 31868  005C86  C055  F052         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 31869  005C8A  EC07  F033         	call	__parse_file_create	;wreg free
 31870  005C8E  D014               	goto	L40
 31871  005C90                     
 31872                           ;api.c: 474: length = _parse_file_rename(data);
 31873  005C90  C054  F044         	movff	__parse_command_long@data,__parse_file_rename@data
 31874  005C94  C055  F045         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 31875  005C98  ECA7  F033         	call	__parse_file_rename	;wreg free
 31876  005C9C  D00D               	goto	L40
 31877  005C9E                     
 31878                           ;api.c: 478: length = _parse_file_append(data);
 31879  005C9E  C054  F04C         	movff	__parse_command_long@data,__parse_file_append@data
 31880  005CA2  C055  F04D         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 31881  005CA6  ECCB  F02F         	call	__parse_file_append	;wreg free
 31882  005CAA  D006               	goto	L40
 31883  005CAC                     
 31884                           ;api.c: 482: length = _parse_file_modify(data);
 31885  005CAC  C054  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 31886  005CB0  C055  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 31887  005CB4  ECE5  F03D         	call	__parse_file_modify	;wreg free
 31888  005CB8                     L40:
 31889  005CB8  6E56               	movwf	__parse_command_long@length,c
 31890                           
 31891                           ;api.c: 484: }
 31892                           
 31893                           ;api.c: 483: break;
 31894  005CBA  D017               	goto	l2498
 31895  005CBC                     l2496:
 31896  005CBC  C054  FFD9         	movff	__parse_command_long@data,fsr2l
 31897  005CC0  C055  FFDA         	movff	__parse_command_long@data+1,fsr2h
 31898  005CC4  50DF               	movf	indf2,w,c
 31899                           
 31900                           ; Switch size 1, requested type "space"
 31901                           ; Number of cases is 6, Range of values is 80 to 85
 31902                           ; switch strategies available:
 31903                           ; Name         Instructions Cycles
 31904                           ; simple_byte           19    10 (average)
 31905                           ;	Chosen strategy is simple_byte
 31906  005CC6  0A50               	xorlw	80	; case 80
 31907  005CC8  B4D8               	btfsc	status,2,c
 31908  005CCA  D7CD               	goto	l2497
 31909  005CCC  0A01               	xorlw	1	; case 81
 31910  005CCE  B4D8               	btfsc	status,2,c
 31911  005CD0  D7D1               	goto	l2499
 31912  005CD2  0A03               	xorlw	3	; case 82
 31913  005CD4  B4D8               	btfsc	status,2,c
 31914  005CD6  D7D5               	goto	l2500
 31915  005CD8  0A01               	xorlw	1	; case 83
 31916  005CDA  B4D8               	btfsc	status,2,c
 31917  005CDC  D7D9               	goto	l2501
 31918  005CDE  0A07               	xorlw	7	; case 84
 31919  005CE0  B4D8               	btfsc	status,2,c
 31920  005CE2  D7DD               	goto	l2502
 31921  005CE4  0A01               	xorlw	1	; case 85
 31922  005CE6  B4D8               	btfsc	status,2,c
 31923  005CE8  D7E1               	goto	l2503
 31924  005CEA                     l2498:
 31925                           
 31926                           ;api.c: 486: return length;
 31927  005CEA  5056               	movf	__parse_command_long@length,w,c
 31928  005CEC  0012               	return	
 31929  005CEE                     __end_of__parse_command_long:
 31930                           	opt stack 0
 31931                           tosu	equ	0xFFF
 31932                           tosh	equ	0xFFE
 31933                           tosl	equ	0xFFD
 31934                           pclath	equ	0xFFA
 31935                           tblptru	equ	0xFF8
 31936                           tblptrh	equ	0xFF7
 31937                           tblptrl	equ	0xFF6
 31938                           tablat	equ	0xFF5
 31939                           prodh	equ	0xFF4
 31940                           prodl	equ	0xFF3
 31941                           intcon	equ	0xFF2
 31942                           intcon2	equ	0xFF1
 31943                           intcon3	equ	0xFF0
 31944                           indf0	equ	0xFEF
 31945                           postinc0	equ	0xFEE
 31946                           fsr0h	equ	0xFEA
 31947                           fsr0l	equ	0xFE9
 31948                           wreg	equ	0xFE8
 31949                           indf1	equ	0xFE7
 31950                           postdec1	equ	0xFE5
 31951                           plusw1	equ	0xFE3
 31952                           fsr1h	equ	0xFE2
 31953                           fsr1l	equ	0xFE1
 31954                           indf2	equ	0xFDF
 31955                           postinc2	equ	0xFDE
 31956                           postdec2	equ	0xFDD
 31957                           plusw2	equ	0xFDB
 31958                           fsr2h	equ	0xFDA
 31959                           fsr2l	equ	0xFD9
 31960                           status	equ	0xFD8
 31961                           
 31962 ;; *************** function __parse_file_truncate *****************
 31963 ;; Defined at:
 31964 ;;		line 489 in file "api.c"
 31965 ;; Parameters:    Size  Location     Type
 31966 ;;  data            2    0[COMRAM] PTR unsigned char 
 31967 ;;		 -> RAM(3759), 
 31968 ;; Auto vars:     Size  Location     Type
 31969 ;;		None
 31970 ;; Return value:  Size  Location     Type
 31971 ;;                  1    wreg      unsigned char 
 31972 ;; Registers used:
 31973 ;;		wreg
 31974 ;; Tracked objects:
 31975 ;;		On entry : 0/0
 31976 ;;		On exit  : 0/0
 31977 ;;		Unchanged: 0/0
 31978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31983 ;;Total ram usage:        2 bytes
 31984 ;; Hardware stack levels used:    1
 31985 ;; This function calls:
 31986 ;;		Nothing
 31987 ;; This function is called by:
 31988 ;;		__parse_command_long
 31989 ;; This function uses a non-reentrant model
 31990 ;;
 31991                           
 31992                           	psect	text159
 31993  007BC6                     __ptext159:
 31994                           	opt stack 0
 31995  007BC6                     __parse_file_truncate:
 31996                           	opt stack 27
 31997                           
 31998                           ;api.c: 493: return 65;
 31999                           
 32000                           ;incstack = 0
 32001  007BC6  0E41               	movlw	65
 32002  007BC8  0012               	return	
 32003  007BCA                     __end_of__parse_file_truncate:
 32004                           	opt stack 0
 32005                           tosu	equ	0xFFF
 32006                           tosh	equ	0xFFE
 32007                           tosl	equ	0xFFD
 32008                           pclath	equ	0xFFA
 32009                           tblptru	equ	0xFF8
 32010                           tblptrh	equ	0xFF7
 32011                           tblptrl	equ	0xFF6
 32012                           tablat	equ	0xFF5
 32013                           prodh	equ	0xFF4
 32014                           prodl	equ	0xFF3
 32015                           intcon	equ	0xFF2
 32016                           intcon2	equ	0xFF1
 32017                           intcon3	equ	0xFF0
 32018                           indf0	equ	0xFEF
 32019                           postinc0	equ	0xFEE
 32020                           fsr0h	equ	0xFEA
 32021                           fsr0l	equ	0xFE9
 32022                           wreg	equ	0xFE8
 32023                           indf1	equ	0xFE7
 32024                           postdec1	equ	0xFE5
 32025                           plusw1	equ	0xFE3
 32026                           fsr1h	equ	0xFE2
 32027                           fsr1l	equ	0xFE1
 32028                           indf2	equ	0xFDF
 32029                           postinc2	equ	0xFDE
 32030                           postdec2	equ	0xFDD
 32031                           plusw2	equ	0xFDB
 32032                           fsr2h	equ	0xFDA
 32033                           fsr2l	equ	0xFD9
 32034                           status	equ	0xFD8
 32035                           
 32036 ;; *************** function __parse_file_rename *****************
 32037 ;; Defined at:
 32038 ;;		line 522 in file "api.c"
 32039 ;; Parameters:    Size  Location     Type
 32040 ;;  data            2   67[COMRAM] PTR unsigned char 
 32041 ;;		 -> RAM(3759), 
 32042 ;; Auto vars:     Size  Location     Type
 32043 ;;		None
 32044 ;; Return value:  Size  Location     Type
 32045 ;;                  1    wreg      unsigned char 
 32046 ;; Registers used:
 32047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32048 ;; Tracked objects:
 32049 ;;		On entry : 0/0
 32050 ;;		On exit  : 0/0
 32051 ;;		Unchanged: 0/0
 32052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32057 ;;Total ram usage:        3 bytes
 32058 ;; Hardware stack levels used:    1
 32059 ;; Hardware stack levels required when called:   10
 32060 ;; This function calls:
 32061 ;;		_fat_rename_file
 32062 ;; This function is called by:
 32063 ;;		__parse_command_long
 32064 ;; This function uses a non-reentrant model
 32065 ;;
 32066                           
 32067                           	psect	text160
 32068  00674E                     __ptext160:
 32069                           	opt stack 0
 32070  00674E                     __parse_file_rename:
 32071                           	opt stack 17
 32072                           
 32073                           ;api.c: 525: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 32074                           
 32075                           ;incstack = 0
 32076  00674E  C044  FFD9         	movff	__parse_file_rename@data,fsr2l
 32077  006752  C045  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 32078  006756  0E53               	movlw	83
 32079  006758  18DE               	xorwf	postinc2,w,c
 32080  00675A  A4D8               	btfss	status,2,c
 32081  00675C  D014               	goto	u8990
 32082  00675E  EE20 F00D          	lfsr	2,13
 32083  006762  5044               	movf	__parse_file_rename@data,w,c
 32084  006764  26D9               	addwf	fsr2l,f,c
 32085  006766  5045               	movf	__parse_file_rename@data+1,w,c
 32086  006768  22DA               	addwfc	fsr2h,f,c
 32087  00676A  0E7E               	movlw	126
 32088  00676C  18DE               	xorwf	postinc2,w,c
 32089  00676E  A4D8               	btfss	status,2,c
 32090  006770  D00A               	goto	u8990
 32091  006772  EE20 F00E          	lfsr	2,14
 32092  006776  5044               	movf	__parse_file_rename@data,w,c
 32093  006778  26D9               	addwf	fsr2l,f,c
 32094  00677A  5045               	movf	__parse_file_rename@data+1,w,c
 32095  00677C  22DA               	addwfc	fsr2h,f,c
 32096  00677E  0E18               	movlw	24
 32097  006780  18DE               	xorwf	postinc2,w,c
 32098  006782  B4D8               	btfsc	status,2,c
 32099  006784  D002               	goto	l2522
 32100  006786                     u8990:
 32101                           
 32102                           ;api.c: 526: {;api.c: 527: return 15;
 32103  006786  0E0F               	movlw	15
 32104  006788  0012               	return	
 32105  00678A                     l2522:
 32106                           
 32107                           ;api.c: 528: };api.c: 531: fat_rename_file(data[1], &data[2], &data[10]);
 32108  00678A  0E02               	movlw	2
 32109  00678C  2444               	addwf	__parse_file_rename@data,w,c
 32110  00678E  6E40               	movwf	fat_rename_file@name,c
 32111  006790  0E00               	movlw	0
 32112  006792  2045               	addwfc	__parse_file_rename@data+1,w,c
 32113  006794  6E41               	movwf	fat_rename_file@name+1,c
 32114  006796  0E0A               	movlw	10
 32115  006798  2444               	addwf	__parse_file_rename@data,w,c
 32116  00679A  6E42               	movwf	fat_rename_file@extension,c
 32117  00679C  0E00               	movlw	0
 32118  00679E  2045               	addwfc	__parse_file_rename@data+1,w,c
 32119  0067A0  6E43               	movwf	fat_rename_file@extension+1,c
 32120  0067A2  EE20 F001          	lfsr	2,1
 32121  0067A6  5044               	movf	__parse_file_rename@data,w,c
 32122  0067A8  26D9               	addwf	fsr2l,f,c
 32123  0067AA  5045               	movf	__parse_file_rename@data+1,w,c
 32124  0067AC  22DA               	addwfc	fsr2h,f,c
 32125  0067AE  50DF               	movf	indf2,w,c
 32126  0067B0  EC0A  F02D         	call	_fat_rename_file
 32127                           
 32128                           ;api.c: 532: return 15;
 32129  0067B4  0E0F               	movlw	15
 32130  0067B6  0012               	return	
 32131  0067B8                     __end_of__parse_file_rename:
 32132                           	opt stack 0
 32133                           tosu	equ	0xFFF
 32134                           tosh	equ	0xFFE
 32135                           tosl	equ	0xFFD
 32136                           pclath	equ	0xFFA
 32137                           tblptru	equ	0xFF8
 32138                           tblptrh	equ	0xFF7
 32139                           tblptrl	equ	0xFF6
 32140                           tablat	equ	0xFF5
 32141                           prodh	equ	0xFF4
 32142                           prodl	equ	0xFF3
 32143                           intcon	equ	0xFF2
 32144                           intcon2	equ	0xFF1
 32145                           intcon3	equ	0xFF0
 32146                           indf0	equ	0xFEF
 32147                           postinc0	equ	0xFEE
 32148                           fsr0h	equ	0xFEA
 32149                           fsr0l	equ	0xFE9
 32150                           wreg	equ	0xFE8
 32151                           indf1	equ	0xFE7
 32152                           postdec1	equ	0xFE5
 32153                           plusw1	equ	0xFE3
 32154                           fsr1h	equ	0xFE2
 32155                           fsr1l	equ	0xFE1
 32156                           indf2	equ	0xFDF
 32157                           postinc2	equ	0xFDE
 32158                           postdec2	equ	0xFDD
 32159                           plusw2	equ	0xFDB
 32160                           fsr2h	equ	0xFDA
 32161                           fsr2l	equ	0xFD9
 32162                           status	equ	0xFD8
 32163                           
 32164 ;; *************** function _fat_rename_file *****************
 32165 ;; Defined at:
 32166 ;;		line 536 in file "fat16.c"
 32167 ;; Parameters:    Size  Location     Type
 32168 ;;  file_number     1    wreg     unsigned char 
 32169 ;;  name            2   63[COMRAM] PTR unsigned char 
 32170 ;;		 -> RAM(3759), 
 32171 ;;  extension       2   65[COMRAM] PTR unsigned char 
 32172 ;;		 -> RAM(3759), 
 32173 ;; Auto vars:     Size  Location     Type
 32174 ;;  file_number     1    0[BANK0 ] unsigned char 
 32175 ;;  root           32    1[BANK0 ] struct .
 32176 ;;  cntr            1   33[BANK0 ] unsigned char 
 32177 ;; Return value:  Size  Location     Type
 32178 ;;                  1    wreg      void 
 32179 ;; Registers used:
 32180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32181 ;; Tracked objects:
 32182 ;;		On entry : 0/0
 32183 ;;		On exit  : 0/0
 32184 ;;		Unchanged: 0/0
 32185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32187 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32189 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32190 ;;Total ram usage:       38 bytes
 32191 ;; Hardware stack levels used:    1
 32192 ;; Hardware stack levels required when called:    9
 32193 ;; This function calls:
 32194 ;;		__write_root
 32195 ;;		_fat_get_file_information
 32196 ;; This function is called by:
 32197 ;;		__parse_file_rename
 32198 ;; This function uses a non-reentrant model
 32199 ;;
 32200                           
 32201                           	psect	text161
 32202  005A14                     __ptext161:
 32203                           	opt stack 0
 32204  005A14                     _fat_rename_file:
 32205                           	opt stack 17
 32206                           
 32207                           ;incstack = 0
 32208                           ;fat_rename_file@file_number stored from wreg
 32209  005A14  0100               	movlb	0	; () banked
 32210  005A16  6FBC               	movwf	fat_rename_file@file_number& (0+255),b
 32211                           
 32212                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 32213  005A18  0EBD               	movlw	low fat_rename_file@root
 32214  005A1A  6E38               	movwf	fat_get_file_information@data,c
 32215  005A1C  0E00               	movlw	high fat_rename_file@root
 32216  005A1E  6E39               	movwf	fat_get_file_information@data+1,c
 32217  005A20  0100               	movlb	0	; () banked
 32218  005A22  51BC               	movf	fat_rename_file@file_number& (0+255),w,b
 32219  005A24  ECB3  F031         	call	_fat_get_file_information
 32220                           
 32221                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 32222  005A28  0E00               	movlw	0
 32223  005A2A  0100               	movlb	0	; () banked
 32224  005A2C  6FDD               	movwf	fat_rename_file@cntr& (0+255),b
 32225  005A2E                     l10969:
 32226                           
 32227                           ; BSR set to: 0
 32228  005A2E  0E07               	movlw	7
 32229  005A30  65DD               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32230  005A32  D001               	goto	l1873
 32231  005A34  D014               	goto	u8450
 32232  005A36                     l1873:
 32233                           
 32234                           ; BSR set to: 0
 32235                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 32236                           
 32237                           ; BSR set to: 0
 32238  005A36  51DD               	movf	fat_rename_file@cntr& (0+255),w,b
 32239  005A38  0D01               	mullw	1
 32240  005A3A  50F3               	movf	prodl,w,c
 32241  005A3C  2440               	addwf	fat_rename_file@name,w,c
 32242  005A3E  6ED9               	movwf	fsr2l,c
 32243  005A40  50F4               	movf	prodh,w,c
 32244  005A42  2041               	addwfc	fat_rename_file@name+1,w,c
 32245  005A44  6EDA               	movwf	fsr2h,c
 32246  005A46  51DD               	movf	fat_rename_file@cntr& (0+255),w,b
 32247  005A48  0D01               	mullw	1
 32248  005A4A  0EBD               	movlw	low fat_rename_file@root
 32249  005A4C  24F3               	addwf	prodl,w,c
 32250  005A4E  6EE1               	movwf	fsr1l,c
 32251  005A50  0E00               	movlw	high fat_rename_file@root
 32252  005A52  20F4               	addwfc	prodh,w,c
 32253  005A54  6EE2               	movwf	fsr1h,c
 32254  005A56  CFDF FFE7          	movff	indf2,indf1
 32255                           
 32256                           ; BSR set to: 0
 32257  005A5A  2BDD               	incf	fat_rename_file@cntr& (0+255),f,b
 32258  005A5C  D7E8               	goto	l10969
 32259  005A5E                     u8450:
 32260                           
 32261                           ; BSR set to: 0
 32262                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 32263                           
 32264                           ; BSR set to: 0
 32265  005A5E  0E00               	movlw	0
 32266  005A60  6FDD               	movwf	fat_rename_file@cntr& (0+255),b
 32267  005A62                     l10981:
 32268                           
 32269                           ; BSR set to: 0
 32270  005A62  0E02               	movlw	2
 32271  005A64  65DD               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32272  005A66  D001               	goto	l1875
 32273  005A68  D018               	goto	u8470
 32274  005A6A                     l1875:
 32275                           
 32276                           ; BSR set to: 0
 32277                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 32278                           
 32279                           ; BSR set to: 0
 32280  005A6A  51DD               	movf	fat_rename_file@cntr& (0+255),w,b
 32281  005A6C  0D01               	mullw	1
 32282  005A6E  50F3               	movf	prodl,w,c
 32283  005A70  2442               	addwf	fat_rename_file@extension,w,c
 32284  005A72  6ED9               	movwf	fsr2l,c
 32285  005A74  50F4               	movf	prodh,w,c
 32286  005A76  2043               	addwfc	fat_rename_file@extension+1,w,c
 32287  005A78  6EDA               	movwf	fsr2h,c
 32288  005A7A  51DD               	movf	fat_rename_file@cntr& (0+255),w,b
 32289  005A7C  0D01               	mullw	1
 32290  005A7E  0E08               	movlw	8
 32291  005A80  26F3               	addwf	prodl,f,c
 32292  005A82  0E00               	movlw	0
 32293  005A84  22F4               	addwfc	prodh,f,c
 32294  005A86  0EBD               	movlw	low fat_rename_file@root
 32295  005A88  24F3               	addwf	prodl,w,c
 32296  005A8A  6EE1               	movwf	fsr1l,c
 32297  005A8C  0E00               	movlw	high fat_rename_file@root
 32298  005A8E  20F4               	addwfc	prodh,w,c
 32299  005A90  6EE2               	movwf	fsr1h,c
 32300  005A92  CFDF FFE7          	movff	indf2,indf1
 32301                           
 32302                           ; BSR set to: 0
 32303  005A96  2BDD               	incf	fat_rename_file@cntr& (0+255),f,b
 32304  005A98  D7E4               	goto	l10981
 32305  005A9A                     u8470:
 32306                           
 32307                           ; BSR set to: 0
 32308                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 32309                           
 32310                           ; BSR set to: 0
 32311  005A9A  0EBD               	movlw	low fat_rename_file@root
 32312  005A9C  6E29               	movwf	__write_root@data,c
 32313  005A9E  0E00               	movlw	high fat_rename_file@root
 32314  005AA0  6E2A               	movwf	__write_root@data+1,c
 32315  005AA2  51BC               	movf	fat_rename_file@file_number& (0+255),w,b
 32316  005AA4  EC51  F036         	call	__write_root
 32317  005AA8  0012               	return		;funcret
 32318  005AAA                     __end_of_fat_rename_file:
 32319                           	opt stack 0
 32320                           tosu	equ	0xFFF
 32321                           tosh	equ	0xFFE
 32322                           tosl	equ	0xFFD
 32323                           pclath	equ	0xFFA
 32324                           tblptru	equ	0xFF8
 32325                           tblptrh	equ	0xFF7
 32326                           tblptrl	equ	0xFF6
 32327                           tablat	equ	0xFF5
 32328                           prodh	equ	0xFF4
 32329                           prodl	equ	0xFF3
 32330                           intcon	equ	0xFF2
 32331                           intcon2	equ	0xFF1
 32332                           intcon3	equ	0xFF0
 32333                           indf0	equ	0xFEF
 32334                           postinc0	equ	0xFEE
 32335                           fsr0h	equ	0xFEA
 32336                           fsr0l	equ	0xFE9
 32337                           wreg	equ	0xFE8
 32338                           indf1	equ	0xFE7
 32339                           postdec1	equ	0xFE5
 32340                           plusw1	equ	0xFE3
 32341                           fsr1h	equ	0xFE2
 32342                           fsr1l	equ	0xFE1
 32343                           indf2	equ	0xFDF
 32344                           postinc2	equ	0xFDE
 32345                           postdec2	equ	0xFDD
 32346                           plusw2	equ	0xFDB
 32347                           fsr2h	equ	0xFDA
 32348                           fsr2l	equ	0xFD9
 32349                           status	equ	0xFD8
 32350                           
 32351 ;; *************** function __parse_file_modify *****************
 32352 ;; Defined at:
 32353 ;;		line 548 in file "api.c"
 32354 ;; Parameters:    Size  Location     Type
 32355 ;;  data            2    0[COMRAM] PTR unsigned char 
 32356 ;;		 -> RAM(3759), 
 32357 ;; Auto vars:     Size  Location     Type
 32358 ;;		None
 32359 ;; Return value:  Size  Location     Type
 32360 ;;                  1    wreg      unsigned char 
 32361 ;; Registers used:
 32362 ;;		wreg
 32363 ;; Tracked objects:
 32364 ;;		On entry : 0/0
 32365 ;;		On exit  : 0/0
 32366 ;;		Unchanged: 0/0
 32367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32372 ;;Total ram usage:        2 bytes
 32373 ;; Hardware stack levels used:    1
 32374 ;; This function calls:
 32375 ;;		Nothing
 32376 ;; This function is called by:
 32377 ;;		__parse_command_long
 32378 ;; This function uses a non-reentrant model
 32379 ;;
 32380                           
 32381                           	psect	text162
 32382  007BCA                     __ptext162:
 32383                           	opt stack 0
 32384  007BCA                     __parse_file_modify:
 32385                           	opt stack 27
 32386                           
 32387                           ;api.c: 552: return 65;
 32388                           
 32389                           ;incstack = 0
 32390  007BCA  0E41               	movlw	65
 32391  007BCC  0012               	return	
 32392  007BCE                     __end_of__parse_file_modify:
 32393                           	opt stack 0
 32394                           tosu	equ	0xFFF
 32395                           tosh	equ	0xFFE
 32396                           tosl	equ	0xFFD
 32397                           pclath	equ	0xFFA
 32398                           tblptru	equ	0xFF8
 32399                           tblptrh	equ	0xFF7
 32400                           tblptrl	equ	0xFF6
 32401                           tablat	equ	0xFF5
 32402                           prodh	equ	0xFF4
 32403                           prodl	equ	0xFF3
 32404                           intcon	equ	0xFF2
 32405                           intcon2	equ	0xFF1
 32406                           intcon3	equ	0xFF0
 32407                           indf0	equ	0xFEF
 32408                           postinc0	equ	0xFEE
 32409                           fsr0h	equ	0xFEA
 32410                           fsr0l	equ	0xFE9
 32411                           wreg	equ	0xFE8
 32412                           indf1	equ	0xFE7
 32413                           postdec1	equ	0xFE5
 32414                           plusw1	equ	0xFE3
 32415                           fsr1h	equ	0xFE2
 32416                           fsr1l	equ	0xFE1
 32417                           indf2	equ	0xFDF
 32418                           postinc2	equ	0xFDE
 32419                           postdec2	equ	0xFDD
 32420                           plusw2	equ	0xFDB
 32421                           fsr2h	equ	0xFDA
 32422                           fsr2l	equ	0xFD9
 32423                           status	equ	0xFD8
 32424                           
 32425 ;; *************** function __parse_file_delete *****************
 32426 ;; Defined at:
 32427 ;;		line 496 in file "api.c"
 32428 ;; Parameters:    Size  Location     Type
 32429 ;;  data            2   63[COMRAM] PTR unsigned char 
 32430 ;;		 -> RAM(3759), 
 32431 ;; Auto vars:     Size  Location     Type
 32432 ;;		None
 32433 ;; Return value:  Size  Location     Type
 32434 ;;                  1    wreg      unsigned char 
 32435 ;; Registers used:
 32436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32437 ;; Tracked objects:
 32438 ;;		On entry : 0/0
 32439 ;;		On exit  : 0/0
 32440 ;;		Unchanged: 0/0
 32441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32446 ;;Total ram usage:        3 bytes
 32447 ;; Hardware stack levels used:    1
 32448 ;; Hardware stack levels required when called:    9
 32449 ;; This function calls:
 32450 ;;		_fat_delete_file
 32451 ;; This function is called by:
 32452 ;;		__parse_command_long
 32453 ;; This function uses a non-reentrant model
 32454 ;;
 32455                           
 32456                           	psect	text163
 32457  006FFE                     __ptext163:
 32458                           	opt stack 0
 32459  006FFE                     __parse_file_delete:
 32460                           	opt stack 18
 32461                           
 32462                           ;api.c: 499: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 32463                           
 32464                           ;incstack = 0
 32465  006FFE  C040  FFD9         	movff	__parse_file_delete@data,fsr2l
 32466  007002  C041  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 32467  007006  0E51               	movlw	81
 32468  007008  18DE               	xorwf	postinc2,w,c
 32469  00700A  A4D8               	btfss	status,2,c
 32470  00700C  D014               	goto	u8930
 32471  00700E  EE20 F002          	lfsr	2,2
 32472  007012  5040               	movf	__parse_file_delete@data,w,c
 32473  007014  26D9               	addwf	fsr2l,f,c
 32474  007016  5041               	movf	__parse_file_delete@data+1,w,c
 32475  007018  22DA               	addwfc	fsr2h,f,c
 32476  00701A  0E66               	movlw	102
 32477  00701C  18DE               	xorwf	postinc2,w,c
 32478  00701E  A4D8               	btfss	status,2,c
 32479  007020  D00A               	goto	u8930
 32480  007022  EE20 F003          	lfsr	2,3
 32481  007026  5040               	movf	__parse_file_delete@data,w,c
 32482  007028  26D9               	addwf	fsr2l,f,c
 32483  00702A  5041               	movf	__parse_file_delete@data+1,w,c
 32484  00702C  22DA               	addwfc	fsr2h,f,c
 32485  00702E  0EA0               	movlw	160
 32486  007030  18DE               	xorwf	postinc2,w,c
 32487  007032  B4D8               	btfsc	status,2,c
 32488  007034  D002               	goto	l2510
 32489  007036                     u8930:
 32490                           
 32491                           ;api.c: 500: {;api.c: 501: return 4;
 32492  007036  0E04               	movlw	4
 32493  007038  0012               	return	
 32494  00703A                     l2510:
 32495                           
 32496                           ;api.c: 502: };api.c: 505: fat_delete_file(data[1]);
 32497  00703A  EE20 F001          	lfsr	2,1
 32498  00703E  5040               	movf	__parse_file_delete@data,w,c
 32499  007040  26D9               	addwf	fsr2l,f,c
 32500  007042  5041               	movf	__parse_file_delete@data+1,w,c
 32501  007044  22DA               	addwfc	fsr2h,f,c
 32502  007046  50DF               	movf	indf2,w,c
 32503  007048  ECDC  F033         	call	_fat_delete_file
 32504                           
 32505                           ;api.c: 506: return 4;
 32506  00704C  0E04               	movlw	4
 32507  00704E  0012               	return	
 32508  007050                     __end_of__parse_file_delete:
 32509                           	opt stack 0
 32510                           tosu	equ	0xFFF
 32511                           tosh	equ	0xFFE
 32512                           tosl	equ	0xFFD
 32513                           pclath	equ	0xFFA
 32514                           tblptru	equ	0xFF8
 32515                           tblptrh	equ	0xFF7
 32516                           tblptrl	equ	0xFF6
 32517                           tablat	equ	0xFF5
 32518                           prodh	equ	0xFF4
 32519                           prodl	equ	0xFF3
 32520                           intcon	equ	0xFF2
 32521                           intcon2	equ	0xFF1
 32522                           intcon3	equ	0xFF0
 32523                           indf0	equ	0xFEF
 32524                           postinc0	equ	0xFEE
 32525                           fsr0h	equ	0xFEA
 32526                           fsr0l	equ	0xFE9
 32527                           wreg	equ	0xFE8
 32528                           indf1	equ	0xFE7
 32529                           postdec1	equ	0xFE5
 32530                           plusw1	equ	0xFE3
 32531                           fsr1h	equ	0xFE2
 32532                           fsr1l	equ	0xFE1
 32533                           indf2	equ	0xFDF
 32534                           postinc2	equ	0xFDE
 32535                           postdec2	equ	0xFDD
 32536                           plusw2	equ	0xFDB
 32537                           fsr2h	equ	0xFDA
 32538                           fsr2l	equ	0xFD9
 32539                           status	equ	0xFD8
 32540                           
 32541 ;; *************** function _fat_delete_file *****************
 32542 ;; Defined at:
 32543 ;;		line 391 in file "fat16.c"
 32544 ;; Parameters:    Size  Location     Type
 32545 ;;  file_number     1    wreg     unsigned char 
 32546 ;; Auto vars:     Size  Location     Type
 32547 ;;  file_number     1   62[COMRAM] unsigned char 
 32548 ;;  first_cluste    2   60[COMRAM] unsigned int 
 32549 ;;  next_cluster    2   58[COMRAM] unsigned int 
 32550 ;; Return value:  Size  Location     Type
 32551 ;;                  1    wreg      void 
 32552 ;; Registers used:
 32553 ;;		wreg, status,2, status,0, cstack
 32554 ;; Tracked objects:
 32555 ;;		On entry : 0/0
 32556 ;;		On exit  : 0/0
 32557 ;;		Unchanged: 0/0
 32558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32560 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32562 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32563 ;;Total ram usage:        5 bytes
 32564 ;; Hardware stack levels used:    1
 32565 ;; Hardware stack levels required when called:    8
 32566 ;; This function calls:
 32567 ;;		__delete_root
 32568 ;;		__get_first_cluster
 32569 ;;		__read_fat
 32570 ;;		__root_is_available
 32571 ;;		__write_fat
 32572 ;; This function is called by:
 32573 ;;		__parse_file_delete
 32574 ;; This function uses a non-reentrant model
 32575 ;;
 32576                           
 32577                           	psect	text164
 32578  0067B8                     __ptext164:
 32579                           	opt stack 0
 32580  0067B8                     _fat_delete_file:
 32581                           	opt stack 18
 32582                           
 32583                           ;incstack = 0
 32584                           ;fat_delete_file@file_number stored from wreg
 32585  0067B8  6E3F               	movwf	fat_delete_file@file_number,c
 32586                           
 32587                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 32588  0067BA  0E3F               	movlw	63
 32589  0067BC  643F               	cpfsgt	fat_delete_file@file_number,c
 32590  0067BE  D001               	goto	l1847
 32591  0067C0  0012               	return	
 32592  0067C2                     l1847:
 32593                           
 32594                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 32595  0067C2  503F               	movf	fat_delete_file@file_number,w,c
 32596  0067C4  EC3E  F031         	call	__root_is_available
 32597  0067C8  0900               	iorlw	0
 32598  0067CA  A4D8               	btfss	status,2,c
 32599  0067CC  0012               	return	
 32600                           
 32601                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 32602                           
 32603                           ;fat16.c: 405: {;fat16.c: 407: return;
 32604  0067CE  503F               	movf	fat_delete_file@file_number,w,c
 32605  0067D0  EC11  F034         	call	__get_first_cluster
 32606  0067D4  C031  F03D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 32607  0067D8  C032  F03E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 32608  0067DC                     l1850:
 32609                           
 32610                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 32611  0067DC  C03D  F031         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 32612  0067E0  C03E  F032         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 32613  0067E4  ECE7  F038         	call	__read_fat	;wreg free
 32614  0067E8  C031  F03B         	movff	?__read_fat,fat_delete_file@next_cluster
 32615  0067EC  C032  F03C         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 32616                           
 32617                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 32618  0067F0  C03D  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 32619  0067F4  C03E  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 32620  0067F8  0E00               	movlw	0
 32621  0067FA  6E2C               	movwf	__write_fat@value+1,c
 32622  0067FC  0E00               	movlw	0
 32623  0067FE  6E2B               	movwf	__write_fat@value,c
 32624  006800  ECB0  F039         	call	__write_fat	;wreg free
 32625                           
 32626                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 32627  006804  0EF1               	movlw	241
 32628  006806  5C3B               	subwf	fat_delete_file@next_cluster,w,c
 32629  006808  0EFF               	movlw	255
 32630  00680A  583C               	subwfb	fat_delete_file@next_cluster+1,w,c
 32631  00680C  B0D8               	btfsc	status,0,c
 32632  00680E  D005               	goto	l1852
 32633                           
 32634                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 32635                           
 32636                           ;fat16.c: 430: }
 32637                           
 32638                           ;fat16.c: 428: {;fat16.c: 429: break;
 32639  006810  C03B  F03D         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 32640  006814  C03C  F03E         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 32641  006818  D7E1               	goto	l1850
 32642  00681A                     l1852:
 32643                           
 32644                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 32645  00681A  503F               	movf	fat_delete_file@file_number,w,c
 32646  00681C  EC9D  F035         	call	__delete_root
 32647  006820  0012               	return		;funcret
 32648  006822                     __end_of_fat_delete_file:
 32649                           	opt stack 0
 32650                           tosu	equ	0xFFF
 32651                           tosh	equ	0xFFE
 32652                           tosl	equ	0xFFD
 32653                           pclath	equ	0xFFA
 32654                           tblptru	equ	0xFF8
 32655                           tblptrh	equ	0xFF7
 32656                           tblptrl	equ	0xFF6
 32657                           tablat	equ	0xFF5
 32658                           prodh	equ	0xFF4
 32659                           prodl	equ	0xFF3
 32660                           intcon	equ	0xFF2
 32661                           intcon2	equ	0xFF1
 32662                           intcon3	equ	0xFF0
 32663                           indf0	equ	0xFEF
 32664                           postinc0	equ	0xFEE
 32665                           fsr0h	equ	0xFEA
 32666                           fsr0l	equ	0xFE9
 32667                           wreg	equ	0xFE8
 32668                           indf1	equ	0xFE7
 32669                           postdec1	equ	0xFE5
 32670                           plusw1	equ	0xFE3
 32671                           fsr1h	equ	0xFE2
 32672                           fsr1l	equ	0xFE1
 32673                           indf2	equ	0xFDF
 32674                           postinc2	equ	0xFDE
 32675                           postdec2	equ	0xFDD
 32676                           plusw2	equ	0xFDB
 32677                           fsr2h	equ	0xFDA
 32678                           fsr2l	equ	0xFD9
 32679                           status	equ	0xFD8
 32680                           
 32681 ;; *************** function __get_first_cluster *****************
 32682 ;; Defined at:
 32683 ;;		line 205 in file "fat16.c"
 32684 ;; Parameters:    Size  Location     Type
 32685 ;;  slot            1    wreg     unsigned char 
 32686 ;; Auto vars:     Size  Location     Type
 32687 ;;  slot            1   57[COMRAM] unsigned char 
 32688 ;;  first_cluste    2   55[COMRAM] unsigned int 
 32689 ;;  offset          2   53[COMRAM] unsigned int 
 32690 ;;  sector          2   51[COMRAM] unsigned int 
 32691 ;; Return value:  Size  Location     Type
 32692 ;;                  2   48[COMRAM] unsigned int 
 32693 ;; Registers used:
 32694 ;;		wreg, status,2, status,0, cstack
 32695 ;; Tracked objects:
 32696 ;;		On entry : 0/0
 32697 ;;		On exit  : 0/0
 32698 ;;		Unchanged: 0/0
 32699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32701 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32703 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32704 ;;Total ram usage:       10 bytes
 32705 ;; Hardware stack levels used:    1
 32706 ;; Hardware stack levels required when called:    7
 32707 ;; This function calls:
 32708 ;;		_flash_partial_read
 32709 ;; This function is called by:
 32710 ;;		_fat_delete_file
 32711 ;; This function uses a non-reentrant model
 32712 ;;
 32713                           
 32714                           	psect	text165
 32715  006822                     __ptext165:
 32716                           	opt stack 0
 32717  006822                     __get_first_cluster:
 32718                           	opt stack 18
 32719                           
 32720                           ;incstack = 0
 32721                           ;__get_first_cluster@slot stored from wreg
 32722  006822  6E3A               	movwf	__get_first_cluster@slot,c
 32723                           
 32724                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 32725  006824  C03A  F033         	movff	__get_first_cluster@slot,??__get_first_cluster
 32726  006828  3A33               	swapf	??__get_first_cluster,f,c
 32727  00682A  0E0F               	movlw	15
 32728  00682C  1633               	andwf	??__get_first_cluster,f,c
 32729  00682E  5033               	movf	??__get_first_cluster,w,c
 32730  006830  6E34               	movwf	__get_first_cluster@sector,c
 32731  006832  6A35               	clrf	__get_first_cluster@sector+1,c
 32732                           
 32733                           ;fat16.c: 211: sector += 18;
 32734  006834  0E12               	movlw	18
 32735  006836  2634               	addwf	__get_first_cluster@sector,f,c
 32736  006838  0E00               	movlw	0
 32737  00683A  2235               	addwfc	__get_first_cluster@sector+1,f,c
 32738                           
 32739                           ;fat16.c: 212: offset = slot & 0b1111;
 32740  00683C  C03A  F033         	movff	__get_first_cluster@slot,??__get_first_cluster
 32741  006840  0E0F               	movlw	15
 32742  006842  1633               	andwf	??__get_first_cluster,f,c
 32743  006844  5033               	movf	??__get_first_cluster,w,c
 32744  006846  6E36               	movwf	__get_first_cluster@offset,c
 32745  006848  6A37               	clrf	__get_first_cluster@offset+1,c
 32746                           
 32747                           ;fat16.c: 213: offset <<= 5;
 32748  00684A  0E05               	movlw	5
 32749  00684C                     u7535:
 32750  00684C  90D8               	bcf	status,0,c
 32751  00684E  3636               	rlcf	__get_first_cluster@offset,f,c
 32752  006850  3637               	rlcf	__get_first_cluster@offset+1,f,c
 32753  006852  2EE8               	decfsz	wreg,f,c
 32754  006854  D7FB               	goto	u7535
 32755                           
 32756                           ;fat16.c: 214: offset += 26;
 32757  006856  0E1A               	movlw	26
 32758  006858  2636               	addwf	__get_first_cluster@offset,f,c
 32759  00685A  0E00               	movlw	0
 32760  00685C  2237               	addwfc	__get_first_cluster@offset+1,f,c
 32761                           
 32762                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 32763  00685E  C034  F029         	movff	__get_first_cluster@sector,flash_partial_read@page
 32764  006862  C035  F02A         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 32765  006866  C036  F02B         	movff	__get_first_cluster@offset,flash_partial_read@start
 32766  00686A  C037  F02C         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 32767  00686E  0E00               	movlw	0
 32768  006870  6E2E               	movwf	flash_partial_read@length+1,c
 32769  006872  0E02               	movlw	2
 32770  006874  6E2D               	movwf	flash_partial_read@length,c
 32771  006876  0E38               	movlw	low __get_first_cluster@first_cluster
 32772  006878  6E2F               	movwf	flash_partial_read@data,c
 32773  00687A  0E00               	movlw	high __get_first_cluster@first_cluster
 32774  00687C  6E30               	movwf	flash_partial_read@data+1,c
 32775  00687E  EC32  F03B         	call	_flash_partial_read	;wreg free
 32776                           
 32777                           ;fat16.c: 216: return first_cluster;
 32778  006882  C038  F031         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 32779  006886  C039  F032         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 32780  00688A  0012               	return	
 32781  00688C                     __end_of__get_first_cluster:
 32782                           	opt stack 0
 32783                           tosu	equ	0xFFF
 32784                           tosh	equ	0xFFE
 32785                           tosl	equ	0xFFD
 32786                           pclath	equ	0xFFA
 32787                           tblptru	equ	0xFF8
 32788                           tblptrh	equ	0xFF7
 32789                           tblptrl	equ	0xFF6
 32790                           tablat	equ	0xFF5
 32791                           prodh	equ	0xFF4
 32792                           prodl	equ	0xFF3
 32793                           intcon	equ	0xFF2
 32794                           intcon2	equ	0xFF1
 32795                           intcon3	equ	0xFF0
 32796                           indf0	equ	0xFEF
 32797                           postinc0	equ	0xFEE
 32798                           fsr0h	equ	0xFEA
 32799                           fsr0l	equ	0xFE9
 32800                           wreg	equ	0xFE8
 32801                           indf1	equ	0xFE7
 32802                           postdec1	equ	0xFE5
 32803                           plusw1	equ	0xFE3
 32804                           fsr1h	equ	0xFE2
 32805                           fsr1l	equ	0xFE1
 32806                           indf2	equ	0xFDF
 32807                           postinc2	equ	0xFDE
 32808                           postdec2	equ	0xFDD
 32809                           plusw2	equ	0xFDB
 32810                           fsr2h	equ	0xFDA
 32811                           fsr2l	equ	0xFD9
 32812                           status	equ	0xFD8
 32813                           
 32814 ;; *************** function __delete_root *****************
 32815 ;; Defined at:
 32816 ;;		line 192 in file "fat16.c"
 32817 ;; Parameters:    Size  Location     Type
 32818 ;;  slot            1    wreg     unsigned char 
 32819 ;; Auto vars:     Size  Location     Type
 32820 ;;  slot            1   46[COMRAM] unsigned char 
 32821 ;;  offset          2   43[COMRAM] unsigned int 
 32822 ;;  root_sector     2   41[COMRAM] unsigned int 
 32823 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 32824 ;; Return value:  Size  Location     Type
 32825 ;;                  1    wreg      void 
 32826 ;; Registers used:
 32827 ;;		wreg, status,2, status,0, cstack
 32828 ;; Tracked objects:
 32829 ;;		On entry : 0/0
 32830 ;;		On exit  : 0/0
 32831 ;;		Unchanged: 0/0
 32832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32834 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32836 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32837 ;;Total ram usage:        7 bytes
 32838 ;; Hardware stack levels used:    1
 32839 ;; Hardware stack levels required when called:    6
 32840 ;; This function calls:
 32841 ;;		_flash_partial_write
 32842 ;; This function is called by:
 32843 ;;		_fat_delete_file
 32844 ;; This function uses a non-reentrant model
 32845 ;;
 32846                           
 32847                           	psect	text166
 32848  006B3A                     __ptext166:
 32849                           	opt stack 0
 32850  006B3A                     __delete_root:
 32851                           	opt stack 19
 32852                           
 32853                           ;incstack = 0
 32854                           ;__delete_root@slot stored from wreg
 32855  006B3A  6E2F               	movwf	__delete_root@slot,c
 32856                           
 32857                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 18;
 32858  006B3C  C02F  F029         	movff	__delete_root@slot,??__delete_root
 32859  006B40  3A29               	swapf	??__delete_root,f,c
 32860  006B42  0E0F               	movlw	15
 32861  006B44  1629               	andwf	??__delete_root,f,c
 32862  006B46  0E12               	movlw	18
 32863  006B48  2429               	addwf	??__delete_root,w,c
 32864  006B4A  6E2A               	movwf	__delete_root@root_sector,c
 32865  006B4C  6A2B               	clrf	__delete_root@root_sector+1,c
 32866  006B4E  0E00               	movlw	0
 32867  006B50  222B               	addwfc	__delete_root@root_sector+1,f,c
 32868                           
 32869                           ;fat16.c: 199: offset = (slot & 0b1111);
 32870  006B52  C02F  F029         	movff	__delete_root@slot,??__delete_root
 32871  006B56  0E0F               	movlw	15
 32872  006B58  1629               	andwf	??__delete_root,f,c
 32873  006B5A  5029               	movf	??__delete_root,w,c
 32874  006B5C  6E2C               	movwf	__delete_root@offset,c
 32875  006B5E  6A2D               	clrf	__delete_root@offset+1,c
 32876                           
 32877                           ;fat16.c: 200: offset <<= 5;
 32878  006B60  0E05               	movlw	5
 32879  006B62                     u7525:
 32880  006B62  90D8               	bcf	status,0,c
 32881  006B64  362C               	rlcf	__delete_root@offset,f,c
 32882  006B66  362D               	rlcf	__delete_root@offset+1,f,c
 32883  006B68  2EE8               	decfsz	wreg,f,c
 32884  006B6A  D7FB               	goto	u7525
 32885                           
 32886                           ;fat16.c: 201: deleted_value = 0xE5;
 32887  006B6C  0EE5               	movlw	229
 32888  006B6E  6E2E               	movwf	__delete_root@deleted_value,c
 32889                           
 32890                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 32891  006B70  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 32892  006B74  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 32893  006B78  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 32894  006B7C  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 32895  006B80  0E00               	movlw	0
 32896  006B82  6E25               	movwf	flash_partial_write@length+1,c
 32897  006B84  0E01               	movlw	1
 32898  006B86  6E24               	movwf	flash_partial_write@length,c
 32899  006B88  0E2E               	movlw	low __delete_root@deleted_value
 32900  006B8A  6E26               	movwf	flash_partial_write@data,c
 32901  006B8C  0E00               	movlw	high __delete_root@deleted_value
 32902  006B8E  6E27               	movwf	flash_partial_write@data+1,c
 32903  006B90  EC98  F032         	call	_flash_partial_write	;wreg free
 32904  006B94  0012               	return		;funcret
 32905  006B96                     __end_of__delete_root:
 32906                           	opt stack 0
 32907                           tosu	equ	0xFFF
 32908                           tosh	equ	0xFFE
 32909                           tosl	equ	0xFFD
 32910                           pclath	equ	0xFFA
 32911                           tblptru	equ	0xFF8
 32912                           tblptrh	equ	0xFF7
 32913                           tblptrl	equ	0xFF6
 32914                           tablat	equ	0xFF5
 32915                           prodh	equ	0xFF4
 32916                           prodl	equ	0xFF3
 32917                           intcon	equ	0xFF2
 32918                           intcon2	equ	0xFF1
 32919                           intcon3	equ	0xFF0
 32920                           indf0	equ	0xFEF
 32921                           postinc0	equ	0xFEE
 32922                           fsr0h	equ	0xFEA
 32923                           fsr0l	equ	0xFE9
 32924                           wreg	equ	0xFE8
 32925                           indf1	equ	0xFE7
 32926                           postdec1	equ	0xFE5
 32927                           plusw1	equ	0xFE3
 32928                           fsr1h	equ	0xFE2
 32929                           fsr1l	equ	0xFE1
 32930                           indf2	equ	0xFDF
 32931                           postinc2	equ	0xFDE
 32932                           postdec2	equ	0xFDD
 32933                           plusw2	equ	0xFDB
 32934                           fsr2h	equ	0xFDA
 32935                           fsr2l	equ	0xFD9
 32936                           status	equ	0xFD8
 32937                           
 32938 ;; *************** function __parse_file_create *****************
 32939 ;; Defined at:
 32940 ;;		line 509 in file "api.c"
 32941 ;; Parameters:    Size  Location     Type
 32942 ;;  data            2   80[COMRAM] PTR unsigned char 
 32943 ;;		 -> RAM(3759), 
 32944 ;; Auto vars:     Size  Location     Type
 32945 ;;		None
 32946 ;; Return value:  Size  Location     Type
 32947 ;;                  1    wreg      unsigned char 
 32948 ;; Registers used:
 32949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32950 ;; Tracked objects:
 32951 ;;		On entry : 0/0
 32952 ;;		On exit  : 0/0
 32953 ;;		Unchanged: 0/0
 32954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32958 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32959 ;;Total ram usage:        3 bytes
 32960 ;; Hardware stack levels used:    1
 32961 ;; Hardware stack levels required when called:   10
 32962 ;; This function calls:
 32963 ;;		_fat_create_file
 32964 ;; This function is called by:
 32965 ;;		__parse_command_long
 32966 ;; This function uses a non-reentrant model
 32967 ;;
 32968                           
 32969                           	psect	text167
 32970  00660E                     __ptext167:
 32971                           	opt stack 0
 32972  00660E                     __parse_file_create:
 32973                           	opt stack 17
 32974                           
 32975                           ;api.c: 512: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 32976                           
 32977                           ;incstack = 0
 32978  00660E  C051  FFD9         	movff	__parse_file_create@data,fsr2l
 32979  006612  C052  FFDA         	movff	__parse_file_create@data+1,fsr2h
 32980  006616  0E52               	movlw	82
 32981  006618  18DE               	xorwf	postinc2,w,c
 32982  00661A  A4D8               	btfss	status,2,c
 32983  00661C  D014               	goto	u8960
 32984  00661E  EE20 F00C          	lfsr	2,12
 32985  006622  5051               	movf	__parse_file_create@data,w,c
 32986  006624  26D9               	addwf	fsr2l,f,c
 32987  006626  5052               	movf	__parse_file_create@data+1,w,c
 32988  006628  22DA               	addwfc	fsr2h,f,c
 32989  00662A  0EBD               	movlw	189
 32990  00662C  18DE               	xorwf	postinc2,w,c
 32991  00662E  A4D8               	btfss	status,2,c
 32992  006630  D00A               	goto	u8960
 32993  006632  EE20 F00D          	lfsr	2,13
 32994  006636  5051               	movf	__parse_file_create@data,w,c
 32995  006638  26D9               	addwf	fsr2l,f,c
 32996  00663A  5052               	movf	__parse_file_create@data+1,w,c
 32997  00663C  22DA               	addwfc	fsr2h,f,c
 32998  00663E  0E4F               	movlw	79
 32999  006640  18DE               	xorwf	postinc2,w,c
 33000  006642  B4D8               	btfsc	status,2,c
 33001  006644  D002               	goto	l2516
 33002  006646                     u8960:
 33003                           
 33004                           ;api.c: 513: {;api.c: 514: return 14;
 33005  006646  0E0E               	movlw	14
 33006  006648  0012               	return	
 33007  00664A                     l2516:
 33008                           
 33009                           ;api.c: 515: };api.c: 518: fat_create_file(&data[1], &data[9], 0);
 33010  00664A  0E01               	movlw	1
 33011  00664C  2451               	addwf	__parse_file_create@data,w,c
 33012  00664E  6E45               	movwf	fat_create_file@name,c
 33013  006650  0E00               	movlw	0
 33014  006652  2052               	addwfc	__parse_file_create@data+1,w,c
 33015  006654  6E46               	movwf	fat_create_file@name+1,c
 33016  006656  0E09               	movlw	9
 33017  006658  2451               	addwf	__parse_file_create@data,w,c
 33018  00665A  6E47               	movwf	fat_create_file@extension,c
 33019  00665C  0E00               	movlw	0
 33020  00665E  2052               	addwfc	__parse_file_create@data+1,w,c
 33021  006660  6E48               	movwf	fat_create_file@extension+1,c
 33022  006662  0E00               	movlw	0
 33023  006664  6E49               	movwf	fat_create_file@size,c
 33024  006666  0E00               	movlw	0
 33025  006668  6E4A               	movwf	fat_create_file@size+1,c
 33026  00666A  0E00               	movlw	0
 33027  00666C  6E4B               	movwf	fat_create_file@size+2,c
 33028  00666E  0E00               	movlw	0
 33029  006670  6E4C               	movwf	fat_create_file@size+3,c
 33030  006672  EC62  F017         	call	_fat_create_file	;wreg free
 33031                           
 33032                           ;api.c: 519: return 14;
 33033  006676  0E0E               	movlw	14
 33034  006678  0012               	return	
 33035  00667A                     __end_of__parse_file_create:
 33036                           	opt stack 0
 33037                           tosu	equ	0xFFF
 33038                           tosh	equ	0xFFE
 33039                           tosl	equ	0xFFD
 33040                           pclath	equ	0xFFA
 33041                           tblptru	equ	0xFF8
 33042                           tblptrh	equ	0xFF7
 33043                           tblptrl	equ	0xFF6
 33044                           tablat	equ	0xFF5
 33045                           prodh	equ	0xFF4
 33046                           prodl	equ	0xFF3
 33047                           intcon	equ	0xFF2
 33048                           intcon2	equ	0xFF1
 33049                           intcon3	equ	0xFF0
 33050                           indf0	equ	0xFEF
 33051                           postinc0	equ	0xFEE
 33052                           fsr0h	equ	0xFEA
 33053                           fsr0l	equ	0xFE9
 33054                           wreg	equ	0xFE8
 33055                           indf1	equ	0xFE7
 33056                           postdec1	equ	0xFE5
 33057                           plusw1	equ	0xFE3
 33058                           fsr1h	equ	0xFE2
 33059                           fsr1l	equ	0xFE1
 33060                           indf2	equ	0xFDF
 33061                           postinc2	equ	0xFDE
 33062                           postdec2	equ	0xFDD
 33063                           plusw2	equ	0xFDB
 33064                           fsr2h	equ	0xFDA
 33065                           fsr2l	equ	0xFD9
 33066                           status	equ	0xFD8
 33067                           
 33068 ;; *************** function _fat_create_file *****************
 33069 ;; Defined at:
 33070 ;;		line 309 in file "fat16.c"
 33071 ;; Parameters:    Size  Location     Type
 33072 ;;  name            2   68[COMRAM] PTR unsigned char 
 33073 ;;		 -> RAM(3759), 
 33074 ;;  extension       2   70[COMRAM] PTR unsigned char 
 33075 ;;		 -> RAM(3759), 
 33076 ;;  size            4   72[COMRAM] unsigned long 
 33077 ;; Auto vars:     Size  Location     Type
 33078 ;;  root_entry     32    9[BANK0 ] struct .
 33079 ;;  cluster         2    7[BANK0 ] unsigned int 
 33080 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 33081 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 33082 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 33083 ;;  root_slot       1    4[BANK0 ] unsigned char 
 33084 ;; Return value:  Size  Location     Type
 33085 ;;                  1    wreg      unsigned char 
 33086 ;; Registers used:
 33087 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33088 ;; Tracked objects:
 33089 ;;		On entry : 0/0
 33090 ;;		On exit  : 0/0
 33091 ;;		Unchanged: 0/0
 33092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33093 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33094 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33096 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33097 ;;Total ram usage:       53 bytes
 33098 ;; Hardware stack levels used:    1
 33099 ;; Hardware stack levels required when called:    9
 33100 ;; This function calls:
 33101 ;;		__get_available_root_entry
 33102 ;;		__get_date
 33103 ;;		__get_empty_cluster
 33104 ;;		__get_time
 33105 ;;		__write_fat
 33106 ;;		__write_root
 33107 ;;		_fat_find_file
 33108 ;;		_fat_get_empty_clusters
 33109 ;;		_memcpy
 33110 ;; This function is called by:
 33111 ;;		__parse_file_create
 33112 ;; This function uses a non-reentrant model
 33113 ;;
 33114                           
 33115                           	psect	text168
 33116  002EC4                     __ptext168:
 33117                           	opt stack 0
 33118  002EC4                     _fat_create_file:
 33119                           	opt stack 17
 33120                           
 33121                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 33122                           
 33123                           ;incstack = 0
 33124  002EC4  C045  F031         	movff	fat_create_file@name,fat_find_file@name
 33125  002EC8  C046  F032         	movff	fat_create_file@name+1,fat_find_file@name+1
 33126  002ECC  C047  F033         	movff	fat_create_file@extension,fat_find_file@extension
 33127  002ED0  C048  F034         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 33128  002ED4  ECD6  F028         	call	_fat_find_file	;wreg free
 33129  002ED8  0AFF               	xorlw	255
 33130  002EDA  A4D8               	btfss	status,2,c
 33131  002EDC  0012               	return	
 33132                           
 33133                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 33134                           
 33135                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 33136  002EDE  EC72  F03C         	call	__get_available_root_entry	;wreg free
 33137  002EE2  0100               	movlb	0	; () banked
 33138  002EE4  6FC0               	movwf	fat_create_file@root_slot& (0+255),b
 33139                           
 33140                           ; BSR set to: 0
 33141                           ;fat16.c: 330: if(root_slot == 0xFF)
 33142  002EE6  29C0               	incf	fat_create_file@root_slot& (0+255),w,b
 33143  002EE8  B4D8               	btfsc	status,2,c
 33144  002EEA  0012               	return	
 33145                           
 33146                           ; BSR set to: 0
 33147                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 33148                           
 33149                           ; BSR set to: 0
 33150                           
 33151                           ; BSR set to: 0
 33152                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 33153  002EEC  C049  F04D         	movff	fat_create_file@size,??_fat_create_file
 33154  002EF0  C04A  F04E         	movff	fat_create_file@size+1,??_fat_create_file+1
 33155  002EF4  C04B  F04F         	movff	fat_create_file@size+2,??_fat_create_file+2
 33156  002EF8  C04C  F050         	movff	fat_create_file@size+3,??_fat_create_file+3
 33157  002EFC  0E0A               	movlw	10
 33158  002EFE  D005               	goto	u8310
 33159  002F00                     u8315:
 33160  002F00  90D8               	bcf	status,0,c
 33161  002F02  3250               	rrcf	??_fat_create_file+3,f,c
 33162  002F04  324F               	rrcf	??_fat_create_file+2,f,c
 33163  002F06  324E               	rrcf	??_fat_create_file+1,f,c
 33164  002F08  324D               	rrcf	??_fat_create_file,f,c
 33165  002F0A                     u8310:
 33166  002F0A  2EE8               	decfsz	wreg,f,c
 33167  002F0C  D7F9               	goto	u8315
 33168  002F0E  0E01               	movlw	1
 33169  002F10  244D               	addwf	??_fat_create_file,w,c
 33170  002F12  6FC1               	movwf	fat_create_file@number_of_clusters& (0+255),b
 33171  002F14  0E00               	movlw	0
 33172  002F16  204E               	addwfc	??_fat_create_file+1,w,c
 33173  002F18  6FC2               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 33174                           
 33175                           ; BSR set to: 0
 33176                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 33177  002F1A  C0C1  F031         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 33178  002F1E  C0C2  F032         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 33179  002F22  EC77  F02E         	call	_fat_get_empty_clusters	;wreg free
 33180  002F26  0100               	movlb	0	; () banked
 33181  002F28  51C1               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33182  002F2A  1831               	xorwf	?_fat_get_empty_clusters,w,c
 33183  002F2C  E105               	bnz	u8320
 33184  002F2E  51C2               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33185  002F30  1832               	xorwf	?_fat_get_empty_clusters+1,w,c
 33186  002F32  A4D8               	btfss	status,2,c
 33187  002F34  0012               	return	
 33188  002F36  D001               	goto	l1839
 33189  002F38                     u8320:
 33190                           
 33191                           ; BSR set to: 0
 33192                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 33193  002F38  0012               	return	
 33194  002F3A                     l1839:
 33195                           
 33196                           ; BSR set to: 0
 33197                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 33198                           
 33199                           ; BSR set to: 0
 33200  002F3A  0E00               	movlw	0
 33201  002F3C  6E32               	movwf	__get_empty_cluster@first_cluster+1,c
 33202  002F3E  0E02               	movlw	2
 33203  002F40  6E31               	movwf	__get_empty_cluster@first_cluster,c
 33204  002F42  ECED  F031         	call	__get_empty_cluster	;wreg free
 33205  002F46  C031  F0C3         	movff	?__get_empty_cluster,fat_create_file@cluster
 33206  002F4A  C032  F0C4         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 33207                           
 33208                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 33209  002F4E  0EC5               	movlw	low fat_create_file@root_entry
 33210  002F50  6E01               	movwf	memcpy@d1,c
 33211  002F52  0E00               	movlw	high fat_create_file@root_entry
 33212  002F54  6E02               	movwf	memcpy@d1+1,c
 33213  002F56  C045  F003         	movff	fat_create_file@name,memcpy@s1
 33214  002F5A  C046  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 33215  002F5E  5003               	movf	memcpy@s1,w,c
 33216  002F60  1004               	iorwf	memcpy@s1+1,w,c
 33217  002F62  A4D8               	btfss	status,2,c
 33218  002F64  0E20               	movlw	32
 33219  002F66  6E05               	movwf	memcpy@s1+2,c
 33220  002F68  0E00               	movlw	0
 33221  002F6A  6E07               	movwf	memcpy@n+1,c
 33222  002F6C  0E08               	movlw	8
 33223  002F6E  6E06               	movwf	memcpy@n,c
 33224  002F70  EC79  F034         	call	_memcpy	;wreg free
 33225                           
 33226                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 33227  002F74  0ECD               	movlw	low (fat_create_file@root_entry+8)
 33228  002F76  6E01               	movwf	memcpy@d1,c
 33229  002F78  0E00               	movlw	high (fat_create_file@root_entry+8)
 33230  002F7A  6E02               	movwf	memcpy@d1+1,c
 33231  002F7C  C047  F003         	movff	fat_create_file@extension,memcpy@s1
 33232  002F80  C048  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 33233  002F84  5003               	movf	memcpy@s1,w,c
 33234  002F86  1004               	iorwf	memcpy@s1+1,w,c
 33235  002F88  A4D8               	btfss	status,2,c
 33236  002F8A  0E20               	movlw	32
 33237  002F8C  6E05               	movwf	memcpy@s1+2,c
 33238  002F8E  0E00               	movlw	0
 33239  002F90  6E07               	movwf	memcpy@n+1,c
 33240  002F92  0E03               	movlw	3
 33241  002F94  6E06               	movwf	memcpy@n,c
 33242  002F96  EC79  F034         	call	_memcpy	;wreg free
 33243                           
 33244                           ;fat16.c: 352: root_entry.attributes = 0x00;
 33245  002F9A  0E00               	movlw	0
 33246  002F9C  0100               	movlb	0	; () banked
 33247  002F9E  6FD0               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 33248                           
 33249                           ; BSR set to: 0
 33250                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 33251  002FA0  0E00               	movlw	0
 33252  002FA2  6FD1               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 33253                           
 33254                           ; BSR set to: 0
 33255                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 33256  002FA4  0E00               	movlw	0
 33257  002FA6  6FD2               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 33258                           
 33259                           ; BSR set to: 0
 33260                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 33261  002FA8  ECBA  F03D         	call	__get_time	;wreg free
 33262  002FAC  C001  F0D3         	movff	?__get_time,fat_create_file@root_entry+14
 33263  002FB0  C002  F0D4         	movff	?__get_time+1,fat_create_file@root_entry+15
 33264                           
 33265                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 33266  002FB4  ECBF  F03D         	call	__get_date	;wreg free
 33267  002FB8  C001  F0D5         	movff	?__get_date,fat_create_file@root_entry+16
 33268  002FBC  C002  F0D6         	movff	?__get_date+1,fat_create_file@root_entry+17
 33269                           
 33270                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 33271  002FC0  C0D5  F0D7         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 33272  002FC4  C0D6  F0D8         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 33273                           
 33274                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 33275  002FC8  0E00               	movlw	0
 33276  002FCA  0100               	movlb	0	; () banked
 33277  002FCC  6FDA               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 33278  002FCE  0E00               	movlw	0
 33279  002FD0  6FD9               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 33280                           
 33281                           ; BSR set to: 0
 33282                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 33283  002FD2  C0D3  F0DB         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 33284  002FD6  C0D4  F0DC         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 33288  002FDA  C0D5  F0DD         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 33289  002FDE  C0D6  F0DE         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 33290                           
 33291                           ; BSR set to: 0
 33292                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 33293  002FE2  C0C3  F0DF         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 33294  002FE6  C0C4  F0E0         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 33295                           
 33296                           ; BSR set to: 0
 33297                           ;fat16.c: 362: root_entry.fileSize = size;
 33298  002FEA  C049  F0E1         	movff	fat_create_file@size,fat_create_file@root_entry+28
 33299  002FEE  C04A  F0E2         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 33300  002FF2  C04B  F0E3         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 33301  002FF6  C04C  F0E4         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 33302                           
 33303                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 33304  002FFA  0EC5               	movlw	low fat_create_file@root_entry
 33305  002FFC  6E29               	movwf	__write_root@data,c
 33306  002FFE  0E00               	movlw	high fat_create_file@root_entry
 33307  003000  6E2A               	movwf	__write_root@data+1,c
 33308  003002  51C0               	movf	fat_create_file@root_slot& (0+255),w,b
 33309  003004  EC51  F036         	call	__write_root
 33310                           
 33311                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 33312  003008  0E00               	movlw	0
 33313  00300A  0100               	movlb	0	; () banked
 33314  00300C  6FBF               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 33315  00300E  0E01               	movlw	1
 33316  003010  6FBE               	movwf	fat_create_file@cluster_count& (0+255),b
 33317  003012  D02F               	goto	l1840
 33318  003014                     
 33319                           ; BSR set to: 0
 33320                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 33321                           
 33322                           ; BSR set to: 0
 33323  003014  51C1               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33324  003016  19BE               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 33325  003018  E10E               	bnz	l10881
 33326  00301A  51C2               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33327  00301C  19BF               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 33328  00301E  A4D8               	btfss	status,2,c
 33329  003020  D00A               	goto	l1842
 33330                           
 33331                           ; BSR set to: 0
 33332                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 33333  003022  C0C3  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 33334  003026  C0C4  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 33335  00302A  0EFF               	movlw	255
 33336  00302C  6E2C               	movwf	__write_fat@value+1,c
 33337  00302E  682B               	setf	__write_fat@value,c
 33338  003030  ECB0  F039         	call	__write_fat	;wreg free
 33339                           
 33340                           ;fat16.c: 377: }
 33341  003034  D01B               	goto	l1843
 33342  003036                     l1842:
 33343  003036                     l10881:
 33344                           
 33345                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 33346  003036  0E01               	movlw	1
 33347  003038  0100               	movlb	0	; () banked
 33348  00303A  25C3               	addwf	fat_create_file@cluster& (0+255),w,b
 33349  00303C  6E31               	movwf	__get_empty_cluster@first_cluster,c
 33350  00303E  0E00               	movlw	0
 33351  003040  21C4               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 33352  003042  6E32               	movwf	__get_empty_cluster@first_cluster+1,c
 33353  003044  ECED  F031         	call	__get_empty_cluster	;wreg free
 33354  003048  C031  F0BC         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 33355  00304C  C032  F0BD         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 33356                           
 33357                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 33358  003050  C0C3  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 33359  003054  C0C4  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 33360  003058  C0BC  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 33361  00305C  C0BD  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 33362  003060  ECB0  F039         	call	__write_fat	;wreg free
 33363                           
 33364                           ;fat16.c: 385: cluster = next_cluster;
 33365  003064  C0BC  F0C3         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 33366  003068  C0BD  F0C4         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 33367  00306C                     l1843:
 33368  00306C  0100               	movlb	0	; () banked
 33369  00306E  4BBE               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 33370  003070  2BBF               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 33371  003072                     l1840:
 33372                           
 33373                           ; BSR set to: 0
 33374                           
 33375                           ; BSR set to: 0
 33376  003072  51BE               	movf	fat_create_file@cluster_count& (0+255),w,b
 33377  003074  5DC1               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 33378  003076  51BF               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 33379  003078  59C2               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33380  00307A  A0D8               	btfss	status,0,c
 33381  00307C  0012               	return	
 33382  00307E  D7CA               	goto	l1841
 33383  003080                     __end_of_fat_create_file:
 33384                           	opt stack 0
 33385                           tosu	equ	0xFFF
 33386                           tosh	equ	0xFFE
 33387                           tosl	equ	0xFFD
 33388                           pclath	equ	0xFFA
 33389                           tblptru	equ	0xFF8
 33390                           tblptrh	equ	0xFF7
 33391                           tblptrl	equ	0xFF6
 33392                           tablat	equ	0xFF5
 33393                           prodh	equ	0xFF4
 33394                           prodl	equ	0xFF3
 33395                           intcon	equ	0xFF2
 33396                           intcon2	equ	0xFF1
 33397                           intcon3	equ	0xFF0
 33398                           indf0	equ	0xFEF
 33399                           postinc0	equ	0xFEE
 33400                           fsr0h	equ	0xFEA
 33401                           fsr0l	equ	0xFE9
 33402                           wreg	equ	0xFE8
 33403                           indf1	equ	0xFE7
 33404                           postdec1	equ	0xFE5
 33405                           plusw1	equ	0xFE3
 33406                           fsr1h	equ	0xFE2
 33407                           fsr1l	equ	0xFE1
 33408                           indf2	equ	0xFDF
 33409                           postinc2	equ	0xFDE
 33410                           postdec2	equ	0xFDD
 33411                           plusw2	equ	0xFDB
 33412                           fsr2h	equ	0xFDA
 33413                           fsr2l	equ	0xFD9
 33414                           status	equ	0xFD8
 33415                           
 33416 ;; *************** function _memcpy *****************
 33417 ;; Defined at:
 33418 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 33419 ;; Parameters:    Size  Location     Type
 33420 ;;  d1              2    0[COMRAM] PTR void 
 33421 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 33422 ;;		 -> msd_buffer(512), SetupPkt(8), 
 33423 ;;  s1              3    2[COMRAM] PTR const void 
 33424 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), inq_resp(36), 
 33425 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 33426 ;;  n               2    5[COMRAM] unsigned int 
 33427 ;; Auto vars:     Size  Location     Type
 33428 ;;  s               3    7[COMRAM] PTR const unsigned char 
 33429 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), inq_resp(36), 
 33430 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 33431 ;;  d               2   10[COMRAM] PTR unsigned char 
 33432 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 33433 ;;		 -> msd_buffer(512), SetupPkt(8), 
 33434 ;;  tmp             1   12[COMRAM] unsigned char 
 33435 ;; Return value:  Size  Location     Type
 33436 ;;                  2    0[COMRAM] PTR void 
 33437 ;; Registers used:
 33438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33439 ;; Tracked objects:
 33440 ;;		On entry : 0/0
 33441 ;;		On exit  : 0/0
 33442 ;;		Unchanged: 0/0
 33443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33444 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33445 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33447 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33448 ;;Total ram usage:       13 bytes
 33449 ;; Hardware stack levels used:    1
 33450 ;; This function calls:
 33451 ;;		Nothing
 33452 ;; This function is called by:
 33453 ;;		_USBCtrlEPService
 33454 ;;		_MSDProcessCommandMediaPresent
 33455 ;;		__flash_set_page_size
 33456 ;;		_fat_create_file
 33457 ;;		_internalFlash_read
 33458 ;; This function uses a non-reentrant model
 33459 ;;
 33460                           
 33461                           	psect	text169
 33462  0068F2                     __ptext169:
 33463                           	opt stack 0
 33464  0068F2                     _memcpy:
 33465                           	opt stack 27
 33466                           
 33467                           ;incstack = 0
 33468  0068F2  C003  F008         	movff	memcpy@s1,memcpy@s
 33469  0068F6  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 33470  0068FA  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 33471  0068FE  C001  F00B         	movff	memcpy@d1,memcpy@d
 33472  006902  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 33473  006906  D01F               	goto	l3351
 33474  006908                     l9967:
 33475  006908  C008  FFF6         	movff	memcpy@s,tblptrl
 33476  00690C  C009  FFF7         	movff	memcpy@s+1,tblptrh
 33477  006910  C00A  FFF8         	movff	memcpy@s+2,tblptru
 33478  006914  BAF8               	btfsc	tblptru,5,c
 33479  006916  D003               	bra	u6997
 33480  006918  0008               	tblrd		*
 33481  00691A  50F5               	movf	tablat,w,c
 33482  00691C  D005               	bra	u6990
 33483  00691E                     u6997:
 33484  00691E  CFF6 FFE9          	movff	tblptrl,fsr0l
 33485  006922  CFF7 FFEA          	movff	tblptrh,fsr0h
 33486  006926  50EF               	movf	indf0,w,c
 33487  006928                     u6990:
 33488  006928  6E0D               	movwf	memcpy@tmp,c
 33489  00692A  0E01               	movlw	1
 33490  00692C  2608               	addwf	memcpy@s,f,c
 33491  00692E  0E00               	movlw	0
 33492  006930  2209               	addwfc	memcpy@s+1,f,c
 33493  006932  0E00               	movlw	0
 33494  006934  220A               	addwfc	memcpy@s+2,f,c
 33495  006936  C00B  FFD9         	movff	memcpy@d,fsr2l
 33496  00693A  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 33497  00693E  C00D  FFDF         	movff	memcpy@tmp,indf2
 33498  006942  4A0B               	infsnz	memcpy@d,f,c
 33499  006944  2A0C               	incf	memcpy@d+1,f,c
 33500  006946                     l3351:
 33501  006946  0606               	decf	memcpy@n,f,c
 33502  006948  A0D8               	btfss	status,0,c
 33503  00694A  0607               	decf	memcpy@n+1,f,c
 33504  00694C  2806               	incf	memcpy@n,w,c
 33505  00694E  E1DC               	bnz	l9967
 33506  006950  2807               	incf	memcpy@n+1,w,c
 33507  006952  B4D8               	btfsc	status,2,c
 33508  006954  0012               	return	
 33509  006956  D7D8               	goto	l3352
 33510  006958                     __end_of_memcpy:
 33511                           	opt stack 0
 33512                           tosu	equ	0xFFF
 33513                           tosh	equ	0xFFE
 33514                           tosl	equ	0xFFD
 33515                           pclath	equ	0xFFA
 33516                           tblptru	equ	0xFF8
 33517                           tblptrh	equ	0xFF7
 33518                           tblptrl	equ	0xFF6
 33519                           tablat	equ	0xFF5
 33520                           prodh	equ	0xFF4
 33521                           prodl	equ	0xFF3
 33522                           intcon	equ	0xFF2
 33523                           intcon2	equ	0xFF1
 33524                           intcon3	equ	0xFF0
 33525                           indf0	equ	0xFEF
 33526                           postinc0	equ	0xFEE
 33527                           fsr0h	equ	0xFEA
 33528                           fsr0l	equ	0xFE9
 33529                           wreg	equ	0xFE8
 33530                           indf1	equ	0xFE7
 33531                           postdec1	equ	0xFE5
 33532                           plusw1	equ	0xFE3
 33533                           fsr1h	equ	0xFE2
 33534                           fsr1l	equ	0xFE1
 33535                           indf2	equ	0xFDF
 33536                           postinc2	equ	0xFDE
 33537                           postdec2	equ	0xFDD
 33538                           plusw2	equ	0xFDB
 33539                           fsr2h	equ	0xFDA
 33540                           fsr2l	equ	0xFD9
 33541                           status	equ	0xFD8
 33542                           
 33543 ;; *************** function _fat_get_empty_clusters *****************
 33544 ;; Defined at:
 33545 ;;		line 130 in file "fat16.c"
 33546 ;; Parameters:    Size  Location     Type
 33547 ;;  maximum         2   48[COMRAM] unsigned int 
 33548 ;; Auto vars:     Size  Location     Type
 33549 ;;  cluster         2   58[COMRAM] unsigned int 
 33550 ;;  empty_cluste    2   56[COMRAM] unsigned int 
 33551 ;;  value           2   54[COMRAM] unsigned int 
 33552 ;;  offset          2   52[COMRAM] unsigned int 
 33553 ;;  fat_sector      2   50[COMRAM] unsigned int 
 33554 ;; Return value:  Size  Location     Type
 33555 ;;                  2   48[COMRAM] unsigned int 
 33556 ;; Registers used:
 33557 ;;		wreg, status,2, status,0, cstack
 33558 ;; Tracked objects:
 33559 ;;		On entry : 0/0
 33560 ;;		On exit  : 0/0
 33561 ;;		Unchanged: 0/0
 33562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33564 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33566 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33567 ;;Total ram usage:       12 bytes
 33568 ;; Hardware stack levels used:    1
 33569 ;; Hardware stack levels required when called:    7
 33570 ;; This function calls:
 33571 ;;		_flash_partial_read
 33572 ;; This function is called by:
 33573 ;;		_fat_create_file
 33574 ;; This function uses a non-reentrant model
 33575 ;;
 33576                           
 33577                           	psect	text170
 33578  005CEE                     __ptext170:
 33579                           	opt stack 0
 33580  005CEE                     _fat_get_empty_clusters:
 33581                           	opt stack 18
 33582                           
 33583                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 33584                           
 33585                           ;incstack = 0
 33586  005CEE  0E00               	movlw	0
 33587  005CF0  6E3A               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 33588  005CF2  0E00               	movlw	0
 33589  005CF4  6E39               	movwf	fat_get_empty_clusters@empty_clusters,c
 33590                           
 33591                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(4074+2); 
      +                          ++cluster)
 33592  005CF6  0E00               	movlw	0
 33593  005CF8  6E3C               	movwf	fat_get_empty_clusters@cluster+1,c
 33594  005CFA  0E02               	movlw	2
 33595  005CFC  6E3B               	movwf	fat_get_empty_clusters@cluster,c
 33596  005CFE  D033               	goto	l10249
 33597  005D00                     
 33598                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 33599  005D00  503C               	movf	fat_get_empty_clusters@cluster+1,w,c
 33600  005D02  6E33               	movwf	fat_get_empty_clusters@fat_sector,c
 33601  005D04  6A34               	clrf	fat_get_empty_clusters@fat_sector+1,c
 33602                           
 33603                           ;fat16.c: 142: fat_sector += 2;
 33604  005D06  0E02               	movlw	2
 33605  005D08  2633               	addwf	fat_get_empty_clusters@fat_sector,f,c
 33606  005D0A  0E00               	movlw	0
 33607  005D0C  2234               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 33608                           
 33609                           ;fat16.c: 143: offset = cluster & 0xFF;
 33610  005D0E  503B               	movf	fat_get_empty_clusters@cluster,w,c
 33611  005D10  6E35               	movwf	fat_get_empty_clusters@offset,c
 33612  005D12  6A36               	clrf	fat_get_empty_clusters@offset+1,c
 33613                           
 33614                           ;fat16.c: 144: offset <<= 1;
 33615  005D14  90D8               	bcf	status,0,c
 33616  005D16  3635               	rlcf	fat_get_empty_clusters@offset,f,c
 33617  005D18  3636               	rlcf	fat_get_empty_clusters@offset+1,f,c
 33618                           
 33619                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 33620  005D1A  C033  F029         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 33621  005D1E  C034  F02A         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 33622  005D22  C035  F02B         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 33623  005D26  C036  F02C         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 33624  005D2A  0E00               	movlw	0
 33625  005D2C  6E2E               	movwf	flash_partial_read@length+1,c
 33626  005D2E  0E02               	movlw	2
 33627  005D30  6E2D               	movwf	flash_partial_read@length,c
 33628  005D32  0E37               	movlw	low fat_get_empty_clusters@value
 33629  005D34  6E2F               	movwf	flash_partial_read@data,c
 33630  005D36  0E00               	movlw	high fat_get_empty_clusters@value
 33631  005D38  6E30               	movwf	flash_partial_read@data+1,c
 33632  005D3A  EC32  F03B         	call	_flash_partial_read	;wreg free
 33633                           
 33634                           ;fat16.c: 146: if(value==0x0000)
 33635  005D3E  5037               	movf	fat_get_empty_clusters@value,w,c
 33636  005D40  1038               	iorwf	fat_get_empty_clusters@value+1,w,c
 33637  005D42  A4D8               	btfss	status,2,c
 33638  005D44  D00E               	goto	l1795
 33639                           
 33640                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 33641  005D46  4A39               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 33642  005D48  2A3A               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 33643                           
 33644                           ;fat16.c: 149: if(empty_clusters==maximum)
 33645  005D4A  5031               	movf	fat_get_empty_clusters@maximum,w,c
 33646  005D4C  1839               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 33647  005D4E  E109               	bnz	l10247
 33648  005D50  5032               	movf	fat_get_empty_clusters@maximum+1,w,c
 33649  005D52  183A               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 33650  005D54  A4D8               	btfss	status,2,c
 33651  005D56  D005               	goto	l1795
 33652                           
 33653                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 33654  005D58  C039  F031         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 33655  005D5C  C03A  F032         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 33656  005D60  0012               	return	
 33657  005D62                     l1795:
 33658  005D62                     l10247:
 33659  005D62  4A3B               	infsnz	fat_get_empty_clusters@cluster,f,c
 33660  005D64  2A3C               	incf	fat_get_empty_clusters@cluster+1,f,c
 33661  005D66                     l10249:
 33662  005D66  0EEC               	movlw	236
 33663  005D68  5C3B               	subwf	fat_get_empty_clusters@cluster,w,c
 33664  005D6A  0E0F               	movlw	15
 33665  005D6C  583C               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 33666  005D6E  A0D8               	btfss	status,0,c
 33667  005D70  D7C7               	goto	l1792
 33668                           
 33669                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 33670  005D72  C039  F031         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 33671  005D76  C03A  F032         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 33672  005D7A  0012               	return		;funcret
 33673  005D7C                     __end_of_fat_get_empty_clusters:
 33674                           	opt stack 0
 33675                           tosu	equ	0xFFF
 33676                           tosh	equ	0xFFE
 33677                           tosl	equ	0xFFD
 33678                           pclath	equ	0xFFA
 33679                           tblptru	equ	0xFF8
 33680                           tblptrh	equ	0xFF7
 33681                           tblptrl	equ	0xFF6
 33682                           tablat	equ	0xFF5
 33683                           prodh	equ	0xFF4
 33684                           prodl	equ	0xFF3
 33685                           intcon	equ	0xFF2
 33686                           intcon2	equ	0xFF1
 33687                           intcon3	equ	0xFF0
 33688                           indf0	equ	0xFEF
 33689                           postinc0	equ	0xFEE
 33690                           fsr0h	equ	0xFEA
 33691                           fsr0l	equ	0xFE9
 33692                           wreg	equ	0xFE8
 33693                           indf1	equ	0xFE7
 33694                           postdec1	equ	0xFE5
 33695                           plusw1	equ	0xFE3
 33696                           fsr1h	equ	0xFE2
 33697                           fsr1l	equ	0xFE1
 33698                           indf2	equ	0xFDF
 33699                           postinc2	equ	0xFDE
 33700                           postdec2	equ	0xFDD
 33701                           plusw2	equ	0xFDB
 33702                           fsr2h	equ	0xFDA
 33703                           fsr2l	equ	0xFD9
 33704                           status	equ	0xFD8
 33705                           
 33706 ;; *************** function _fat_find_file *****************
 33707 ;; Defined at:
 33708 ;;		line 250 in file "fat16.c"
 33709 ;; Parameters:    Size  Location     Type
 33710 ;;  name            2   48[COMRAM] PTR unsigned char 
 33711 ;;		 -> bootloader_filename(9), RAM(3759), 
 33712 ;;  extension       2   50[COMRAM] PTR unsigned char 
 33713 ;;		 -> bootloader_extension(4), RAM(3759), 
 33714 ;; Auto vars:     Size  Location     Type
 33715 ;;  buffer         11   52[COMRAM] unsigned char [11]
 33716 ;;  offset          2   66[COMRAM] unsigned int 
 33717 ;;  sector          2   64[COMRAM] unsigned int 
 33718 ;;  slot            1   63[COMRAM] unsigned char 
 33719 ;; Return value:  Size  Location     Type
 33720 ;;                  1    wreg      unsigned char 
 33721 ;; Registers used:
 33722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33723 ;; Tracked objects:
 33724 ;;		On entry : 0/0
 33725 ;;		On exit  : 0/0
 33726 ;;		Unchanged: 0/0
 33727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33729 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33731 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33732 ;;Total ram usage:       20 bytes
 33733 ;; Hardware stack levels used:    1
 33734 ;; Hardware stack levels required when called:    7
 33735 ;; This function calls:
 33736 ;;		_flash_partial_read
 33737 ;;		_strncmp
 33738 ;; This function is called by:
 33739 ;;		_fat_create_file
 33740 ;;		__bootloader_find_file
 33741 ;;		__fill_buffer_find_file
 33742 ;; This function uses a non-reentrant model
 33743 ;;
 33744                           
 33745                           	psect	text171
 33746  0051AC                     __ptext171:
 33747                           	opt stack 0
 33748  0051AC                     _fat_find_file:
 33749                           	opt stack 21
 33750                           
 33751                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 33752                           
 33753                           ;incstack = 0
 33754  0051AC  0E00               	movlw	0
 33755  0051AE  6E40               	movwf	fat_find_file@slot,c
 33756                           
 33757                           ;fat16.c: 257: for(sector = 18; sector <= 21; ++sector)
 33758  0051B0  0E00               	movlw	0
 33759  0051B2  6E42               	movwf	fat_find_file@sector+1,c
 33760  0051B4  0E12               	movlw	18
 33761  0051B6  6E41               	movwf	fat_find_file@sector,c
 33762  0051B8                     l10295:
 33763  0051B8  5042               	movf	fat_find_file@sector+1,w,c
 33764  0051BA  E156               	bnz	l10337
 33765  0051BC  0E16               	movlw	22
 33766  0051BE  5C41               	subwf	fat_find_file@sector,w,c
 33767  0051C0  B0D8               	btfsc	status,0,c
 33768  0051C2  D052               	goto	u7610
 33769                           
 33770                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 33771  0051C4  0E00               	movlw	0
 33772  0051C6  6E44               	movwf	fat_find_file@offset+1,c
 33773  0051C8  0E00               	movlw	0
 33774  0051CA  6E43               	movwf	fat_find_file@offset,c
 33775  0051CC                     l10301:
 33776  0051CC  0E02               	movlw	2
 33777  0051CE  5C44               	subwf	fat_find_file@offset+1,w,c
 33778  0051D0  B0D8               	btfsc	status,0,c
 33779  0051D2  D047               	goto	u7600
 33780                           
 33781                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 33782  0051D4  C041  F029         	movff	fat_find_file@sector,flash_partial_read@page
 33783  0051D8  C042  F02A         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 33784  0051DC  C043  F02B         	movff	fat_find_file@offset,flash_partial_read@start
 33785  0051E0  C044  F02C         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 33786  0051E4  0E00               	movlw	0
 33787  0051E6  6E2E               	movwf	flash_partial_read@length+1,c
 33788  0051E8  0E0B               	movlw	11
 33789  0051EA  6E2D               	movwf	flash_partial_read@length,c
 33790  0051EC  0E35               	movlw	low fat_find_file@buffer
 33791  0051EE  6E2F               	movwf	flash_partial_read@data,c
 33792  0051F0  0E00               	movlw	high fat_find_file@buffer
 33793  0051F2  6E30               	movwf	flash_partial_read@data+1,c
 33794  0051F4  EC32  F03B         	call	_flash_partial_read	;wreg free
 33795                           
 33796                           ;fat16.c: 262: if(buffer[0]==0x00)
 33797  0051F8  5035               	movf	fat_find_file@buffer,w,c
 33798  0051FA  A4D8               	btfss	status,2,c
 33799  0051FC  D002               	goto	l1824
 33800                           
 33801                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 33802  0051FE  0EFF               	movlw	255
 33803  005200  0012               	return	
 33804  005202                     l1824:
 33805                           
 33806                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 33807  005202  0EE5               	movlw	229
 33808  005204  1835               	xorwf	fat_find_file@buffer,w,c
 33809  005206  B4D8               	btfsc	status,2,c
 33810  005208  D026               	goto	l1830
 33811                           
 33812                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 33813                           
 33814                           ;fat16.c: 269: {;fat16.c: 273: }
 33815  00520A  C031  F001         	movff	fat_find_file@name,strncmp@s1
 33816  00520E  C032  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 33817  005212  0E35               	movlw	low fat_find_file@buffer
 33818  005214  6E03               	movwf	strncmp@s2,c
 33819  005216  0E00               	movlw	high fat_find_file@buffer
 33820  005218  6E04               	movwf	strncmp@s2+1,c
 33821  00521A  0E00               	movlw	0
 33822  00521C  6E06               	movwf	strncmp@len+1,c
 33823  00521E  0E08               	movlw	8
 33824  005220  6E05               	movwf	strncmp@len,c
 33825  005222  EC75  F028         	call	_strncmp	;wreg free
 33826  005226  5001               	movf	?_strncmp,w,c
 33827  005228  1002               	iorwf	?_strncmp+1,w,c
 33828  00522A  A4D8               	btfss	status,2,c
 33829  00522C  D014               	goto	l1830
 33830                           
 33831                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 33832  00522E  C033  F001         	movff	fat_find_file@extension,strncmp@s1
 33833  005232  C034  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 33834  005236  0E3D               	movlw	low (fat_find_file@buffer+8)
 33835  005238  6E03               	movwf	strncmp@s2,c
 33836  00523A  0E00               	movlw	high (fat_find_file@buffer+8)
 33837  00523C  6E04               	movwf	strncmp@s2+1,c
 33838  00523E  0E00               	movlw	0
 33839  005240  6E06               	movwf	strncmp@len+1,c
 33840  005242  0E03               	movlw	3
 33841  005244  6E05               	movwf	strncmp@len,c
 33842  005246  EC75  F028         	call	_strncmp	;wreg free
 33843  00524A  5001               	movf	?_strncmp,w,c
 33844  00524C  1002               	iorwf	?_strncmp+1,w,c
 33845  00524E  A4D8               	btfss	status,2,c
 33846  005250  D002               	goto	l1830
 33847                           
 33848                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 33849  005252  5040               	movf	fat_find_file@slot,w,c
 33850  005254  0012               	return	
 33851  005256                     l1830:
 33852                           
 33853                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 33854  005256  2A40               	incf	fat_find_file@slot,f,c
 33855  005258  0E20               	movlw	32
 33856  00525A  2643               	addwf	fat_find_file@offset,f,c
 33857  00525C  0E00               	movlw	0
 33858  00525E  2244               	addwfc	fat_find_file@offset+1,f,c
 33859  005260  D7B5               	goto	l10301
 33860  005262                     u7600:
 33861  005262  4A41               	infsnz	fat_find_file@sector,f,c
 33862  005264  2A42               	incf	fat_find_file@sector+1,f,c
 33863  005266  D7A8               	goto	l10295
 33864  005268                     u7610:
 33865  005268                     l10337:
 33866                           
 33867                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 33868  005268  0EFF               	movlw	255
 33869  00526A  0012               	return	
 33870  00526C                     __end_of_fat_find_file:
 33871                           	opt stack 0
 33872                           tosu	equ	0xFFF
 33873                           tosh	equ	0xFFE
 33874                           tosl	equ	0xFFD
 33875                           pclath	equ	0xFFA
 33876                           tblptru	equ	0xFF8
 33877                           tblptrh	equ	0xFF7
 33878                           tblptrl	equ	0xFF6
 33879                           tablat	equ	0xFF5
 33880                           prodh	equ	0xFF4
 33881                           prodl	equ	0xFF3
 33882                           intcon	equ	0xFF2
 33883                           intcon2	equ	0xFF1
 33884                           intcon3	equ	0xFF0
 33885                           indf0	equ	0xFEF
 33886                           postinc0	equ	0xFEE
 33887                           fsr0h	equ	0xFEA
 33888                           fsr0l	equ	0xFE9
 33889                           wreg	equ	0xFE8
 33890                           indf1	equ	0xFE7
 33891                           postdec1	equ	0xFE5
 33892                           plusw1	equ	0xFE3
 33893                           fsr1h	equ	0xFE2
 33894                           fsr1l	equ	0xFE1
 33895                           indf2	equ	0xFDF
 33896                           postinc2	equ	0xFDE
 33897                           postdec2	equ	0xFDD
 33898                           plusw2	equ	0xFDB
 33899                           fsr2h	equ	0xFDA
 33900                           fsr2l	equ	0xFD9
 33901                           status	equ	0xFD8
 33902                           
 33903 ;; *************** function _strncmp *****************
 33904 ;; Defined at:
 33905 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 33908 ;;		 -> bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 33909 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 33910 ;;		 -> fat_find_file@buffer(11), 
 33911 ;;  len             2    4[COMRAM] unsigned int 
 33912 ;; Auto vars:     Size  Location     Type
 33913 ;;		None
 33914 ;; Return value:  Size  Location     Type
 33915 ;;                  2    0[COMRAM] int 
 33916 ;; Registers used:
 33917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33918 ;; Tracked objects:
 33919 ;;		On entry : 0/0
 33920 ;;		On exit  : 0/0
 33921 ;;		Unchanged: 0/0
 33922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33923 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33925 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33926 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33927 ;;Total ram usage:        9 bytes
 33928 ;; Hardware stack levels used:    1
 33929 ;; This function calls:
 33930 ;;		Nothing
 33931 ;; This function is called by:
 33932 ;;		_fat_find_file
 33933 ;; This function uses a non-reentrant model
 33934 ;;
 33935                           
 33936                           	psect	text172
 33937  0050EA                     __ptext172:
 33938                           	opt stack 0
 33939  0050EA                     _strncmp:
 33940                           	opt stack 27
 33941                           
 33942                           ;incstack = 0
 33943  0050EA  D053               	goto	l3369
 33944  0050EC                     l9831:
 33945  0050EC  C001  FFF6         	movff	strncmp@s1,tblptrl
 33946  0050F0  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33947  0050F4  6AF8               	clrf	tblptru,c
 33948  0050F6  0E0E               	movlw	(high __ramtop+-1)
 33949  0050F8  64F7               	cpfsgt	tblptrh,c
 33950  0050FA  D003               	bra	u6797
 33951  0050FC  0008               	tblrd		*
 33952  0050FE  50F5               	movf	tablat,w,c
 33953  005100  D005               	bra	u6790
 33954  005102                     u6797:
 33955  005102  CFF6 FFE9          	movff	tblptrl,fsr0l
 33956  005106  CFF7 FFEA          	movff	tblptrh,fsr0h
 33957  00510A  50EF               	movf	indf0,w,c
 33958  00510C                     u6790:
 33959  00510C  0900               	iorlw	0
 33960  00510E  B4D8               	btfsc	status,2,c
 33961  005110  D019               	goto	u6810
 33962  005112  C003  FFD9         	movff	strncmp@s2,fsr2l
 33963  005116  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 33964  00511A  50DF               	movf	indf2,w,c
 33965  00511C  6E07               	movwf	??_strncmp& (0+255),c
 33966  00511E  C001  FFF6         	movff	strncmp@s1,tblptrl
 33967  005122  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33968  005126  6AF8               	clrf	tblptru,c
 33969  005128  0E0E               	movlw	(high __ramtop+-1)
 33970  00512A  64F7               	cpfsgt	tblptrh,c
 33971  00512C  D003               	bra	u6817
 33972  00512E  0008               	tblrd		*
 33973  005130  50F5               	movf	tablat,w,c
 33974  005132  D005               	bra	u6815
 33975  005134                     u6817:
 33976  005134  CFF6 FFE9          	movff	tblptrl,fsr0l
 33977  005138  CFF7 FFEA          	movff	tblptrh,fsr0h
 33978  00513C  50EF               	movf	indf0,w,c
 33979  00513E                     u6815:
 33980  00513E  1807               	xorwf	??_strncmp,w,c
 33981  005140  B4D8               	btfsc	status,2,c
 33982  005142  D023               	goto	l3371
 33983  005144                     u6810:
 33984  005144  C003  FFD9         	movff	strncmp@s2,fsr2l
 33985  005148  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 33986  00514C  50DF               	movf	indf2,w,c
 33987  00514E  6E07               	movwf	??_strncmp& (0+255),c
 33988  005150  6A08               	clrf	(??_strncmp+1)& (0+255),c
 33989  005152  1E07               	comf	??_strncmp,f,c
 33990  005154  1E08               	comf	??_strncmp+1,f,c
 33991  005156  4A07               	infsnz	??_strncmp,f,c
 33992  005158  2A08               	incf	??_strncmp+1,f,c
 33993  00515A  C001  FFF6         	movff	strncmp@s1,tblptrl
 33994  00515E  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33995  005162  6AF8               	clrf	tblptru,c
 33996  005164  0E0E               	movlw	(high __ramtop+-1)
 33997  005166  64F7               	cpfsgt	tblptrh,c
 33998  005168  D003               	bra	u6827
 33999  00516A  0008               	tblrd		*
 34000  00516C  50F5               	movf	tablat,w,c
 34001  00516E  D005               	bra	u6820
 34002  005170                     u6827:
 34003  005170  CFF6 FFE9          	movff	tblptrl,fsr0l
 34004  005174  CFF7 FFEA          	movff	tblptrh,fsr0h
 34005  005178  50EF               	movf	indf0,w,c
 34006  00517A                     u6820:
 34007  00517A  6E09               	movwf	(??_strncmp+2)& (0+255),c
 34008  00517C  5009               	movf	??_strncmp+2,w,c
 34009  00517E  2407               	addwf	??_strncmp,w,c
 34010  005180  6E01               	movwf	?_strncmp,c
 34011  005182  0E00               	movlw	0
 34012  005184  2008               	addwfc	??_strncmp+1,w,c
 34013  005186  6E02               	movwf	?_strncmp+1,c
 34014  005188  0012               	return	
 34015  00518A                     l3371:
 34016  00518A  4A01               	infsnz	strncmp@s1,f,c
 34017  00518C  2A02               	incf	strncmp@s1+1,f,c
 34018  00518E  4A03               	infsnz	strncmp@s2,f,c
 34019  005190  2A04               	incf	strncmp@s2+1,f,c
 34020  005192                     l3369:
 34021  005192  0605               	decf	strncmp@len,f,c
 34022  005194  A0D8               	btfss	status,0,c
 34023  005196  0606               	decf	strncmp@len+1,f,c
 34024  005198  2805               	incf	strncmp@len,w,c
 34025  00519A  E1A8               	bnz	l9831
 34026  00519C  2806               	incf	strncmp@len+1,w,c
 34027  00519E  A4D8               	btfss	status,2,c
 34028  0051A0  D7A5               	goto	l3370
 34029  0051A2  0E00               	movlw	0
 34030  0051A4  6E02               	movwf	?_strncmp+1,c
 34031  0051A6  0E00               	movlw	0
 34032  0051A8  6E01               	movwf	?_strncmp,c
 34033  0051AA  0012               	return	
 34034  0051AC                     __end_of_strncmp:
 34035                           	opt stack 0
 34036                           tosu	equ	0xFFF
 34037                           tosh	equ	0xFFE
 34038                           tosl	equ	0xFFD
 34039                           pclath	equ	0xFFA
 34040                           tblptru	equ	0xFF8
 34041                           tblptrh	equ	0xFF7
 34042                           tblptrl	equ	0xFF6
 34043                           tablat	equ	0xFF5
 34044                           prodh	equ	0xFF4
 34045                           prodl	equ	0xFF3
 34046                           intcon	equ	0xFF2
 34047                           intcon2	equ	0xFF1
 34048                           intcon3	equ	0xFF0
 34049                           indf0	equ	0xFEF
 34050                           postinc0	equ	0xFEE
 34051                           fsr0h	equ	0xFEA
 34052                           fsr0l	equ	0xFE9
 34053                           wreg	equ	0xFE8
 34054                           indf1	equ	0xFE7
 34055                           postdec1	equ	0xFE5
 34056                           plusw1	equ	0xFE3
 34057                           fsr1h	equ	0xFE2
 34058                           fsr1l	equ	0xFE1
 34059                           indf2	equ	0xFDF
 34060                           postinc2	equ	0xFDE
 34061                           postdec2	equ	0xFDD
 34062                           plusw2	equ	0xFDB
 34063                           fsr2h	equ	0xFDA
 34064                           fsr2l	equ	0xFD9
 34065                           status	equ	0xFD8
 34066                           
 34067 ;; *************** function __get_available_root_entry *****************
 34068 ;; Defined at:
 34069 ;;		line 94 in file "fat16.c"
 34070 ;; Parameters:    Size  Location     Type
 34071 ;;		None
 34072 ;; Auto vars:     Size  Location     Type
 34073 ;;  file_number     1   55[COMRAM] unsigned char 
 34074 ;; Return value:  Size  Location     Type
 34075 ;;                  1    wreg      unsigned char 
 34076 ;; Registers used:
 34077 ;;		wreg, status,2, status,0, cstack
 34078 ;; Tracked objects:
 34079 ;;		On entry : 0/0
 34080 ;;		On exit  : 0/0
 34081 ;;		Unchanged: 0/0
 34082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34087 ;;Total ram usage:        1 bytes
 34088 ;; Hardware stack levels used:    1
 34089 ;; Hardware stack levels required when called:    8
 34090 ;; This function calls:
 34091 ;;		__root_is_available
 34092 ;; This function is called by:
 34093 ;;		_fat_create_file
 34094 ;; This function uses a non-reentrant model
 34095 ;;
 34096                           
 34097                           	psect	text173
 34098  0078E4                     __ptext173:
 34099                           	opt stack 0
 34100  0078E4                     __get_available_root_entry:
 34101                           	opt stack 17
 34102                           
 34103                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 34104                           
 34105                           ;incstack = 0
 34106  0078E4  0E00               	movlw	0
 34107  0078E6  6E38               	movwf	__get_available_root_entry@file_number,c
 34108  0078E8                     l10177:
 34109  0078E8  0E3F               	movlw	63
 34110  0078EA  6438               	cpfsgt	__get_available_root_entry@file_number,c
 34111  0078EC  D001               	goto	l1780
 34112  0078EE  D00A               	goto	u7430
 34113  0078F0                     l1780:
 34114                           
 34115                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 34116  0078F0  5038               	movf	__get_available_root_entry@file_number,w,c
 34117  0078F2  EC3E  F031         	call	__root_is_available
 34118  0078F6  0900               	iorlw	0
 34119  0078F8  B4D8               	btfsc	status,2,c
 34120  0078FA  D002               	goto	l1782
 34121                           
 34122                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 34123  0078FC  5038               	movf	__get_available_root_entry@file_number,w,c
 34124  0078FE  0012               	return	
 34125  007900                     l1782:
 34126  007900  2A38               	incf	__get_available_root_entry@file_number,f,c
 34127  007902  D7F2               	goto	l10177
 34128  007904                     u7430:
 34129                           
 34130                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 34131  007904  0EFF               	movlw	255
 34132  007906  0012               	return	
 34133  007908                     __end_of__get_available_root_entry:
 34134                           	opt stack 0
 34135                           tosu	equ	0xFFF
 34136                           tosh	equ	0xFFE
 34137                           tosl	equ	0xFFD
 34138                           pclath	equ	0xFFA
 34139                           tblptru	equ	0xFF8
 34140                           tblptrh	equ	0xFF7
 34141                           tblptrl	equ	0xFF6
 34142                           tablat	equ	0xFF5
 34143                           prodh	equ	0xFF4
 34144                           prodl	equ	0xFF3
 34145                           intcon	equ	0xFF2
 34146                           intcon2	equ	0xFF1
 34147                           intcon3	equ	0xFF0
 34148                           indf0	equ	0xFEF
 34149                           postinc0	equ	0xFEE
 34150                           fsr0h	equ	0xFEA
 34151                           fsr0l	equ	0xFE9
 34152                           wreg	equ	0xFE8
 34153                           indf1	equ	0xFE7
 34154                           postdec1	equ	0xFE5
 34155                           plusw1	equ	0xFE3
 34156                           fsr1h	equ	0xFE2
 34157                           fsr1l	equ	0xFE1
 34158                           indf2	equ	0xFDF
 34159                           postinc2	equ	0xFDE
 34160                           postdec2	equ	0xFDD
 34161                           plusw2	equ	0xFDB
 34162                           fsr2h	equ	0xFDA
 34163                           fsr2l	equ	0xFD9
 34164                           status	equ	0xFD8
 34165                           
 34166 ;; *************** function __parse_file_append *****************
 34167 ;; Defined at:
 34168 ;;		line 535 in file "api.c"
 34169 ;; Parameters:    Size  Location     Type
 34170 ;;  data            2   75[COMRAM] PTR unsigned char 
 34171 ;;		 -> RAM(3759), 
 34172 ;; Auto vars:     Size  Location     Type
 34173 ;;		None
 34174 ;; Return value:  Size  Location     Type
 34175 ;;                  1    wreg      unsigned char 
 34176 ;; Registers used:
 34177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34178 ;; Tracked objects:
 34179 ;;		On entry : 0/0
 34180 ;;		On exit  : 0/0
 34181 ;;		Unchanged: 0/0
 34182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34186 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34187 ;;Total ram usage:        3 bytes
 34188 ;; Hardware stack levels used:    1
 34189 ;; Hardware stack levels required when called:   10
 34190 ;; This function calls:
 34191 ;;		_fat_append_to_file
 34192 ;; This function is called by:
 34193 ;;		__parse_command_long
 34194 ;; This function uses a non-reentrant model
 34195 ;;
 34196                           
 34197                           	psect	text174
 34198  005F96                     __ptext174:
 34199                           	opt stack 0
 34200  005F96                     __parse_file_append:
 34201                           	opt stack 17
 34202                           
 34203                           ;api.c: 538: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 34204                           
 34205                           ;incstack = 0
 34206  005F96  C04C  FFD9         	movff	__parse_file_append@data,fsr2l
 34207  005F9A  C04D  FFDA         	movff	__parse_file_append@data+1,fsr2h
 34208  005F9E  0E54               	movlw	84
 34209  005FA0  18DE               	xorwf	postinc2,w,c
 34210  005FA2  A4D8               	btfss	status,2,c
 34211  005FA4  D014               	goto	u9020
 34212  005FA6  EE20 F003          	lfsr	2,3
 34213  005FAA  504C               	movf	__parse_file_append@data,w,c
 34214  005FAC  26D9               	addwf	fsr2l,f,c
 34215  005FAE  504D               	movf	__parse_file_append@data+1,w,c
 34216  005FB0  22DA               	addwfc	fsr2h,f,c
 34217  005FB2  0EFE               	movlw	254
 34218  005FB4  18DE               	xorwf	postinc2,w,c
 34219  005FB6  A4D8               	btfss	status,2,c
 34220  005FB8  D00A               	goto	u9020
 34221  005FBA  EE20 F004          	lfsr	2,4
 34222  005FBE  504C               	movf	__parse_file_append@data,w,c
 34223  005FC0  26D9               	addwf	fsr2l,f,c
 34224  005FC2  504D               	movf	__parse_file_append@data+1,w,c
 34225  005FC4  22DA               	addwfc	fsr2h,f,c
 34226  005FC6  0E4B               	movlw	75
 34227  005FC8  18DE               	xorwf	postinc2,w,c
 34228  005FCA  B4D8               	btfsc	status,2,c
 34229  005FCC  D002               	goto	l2528
 34230  005FCE                     u9020:
 34231                           
 34232                           ;api.c: 539: {;api.c: 540: return 15;
 34233  005FCE  0E0F               	movlw	15
 34234  005FD0  0012               	return	
 34235  005FD2                     l2528:
 34236                           
 34237                           ;api.c: 541: };api.c: 544: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 34238  005FD2  EE20 F002          	lfsr	2,2
 34239  005FD6  504C               	movf	__parse_file_append@data,w,c
 34240  005FD8  26D9               	addwf	fsr2l,f,c
 34241  005FDA  504D               	movf	__parse_file_append@data+1,w,c
 34242  005FDC  22DA               	addwfc	fsr2h,f,c
 34243  005FDE  50DF               	movf	indf2,w,c
 34244  005FE0  6E4E               	movwf	??__parse_file_append& (0+255),c
 34245  005FE2  504E               	movf	??__parse_file_append,w,c
 34246  005FE4  6E40               	movwf	fat_append_to_file@number_of_bytes,c
 34247  005FE6  6A41               	clrf	fat_append_to_file@number_of_bytes+1,c
 34248  005FE8  0E05               	movlw	5
 34249  005FEA  244C               	addwf	__parse_file_append@data,w,c
 34250  005FEC  6E42               	movwf	fat_append_to_file@data,c
 34251  005FEE  0E00               	movlw	0
 34252  005FF0  204D               	addwfc	__parse_file_append@data+1,w,c
 34253  005FF2  6E43               	movwf	fat_append_to_file@data+1,c
 34254  005FF4  EE20 F001          	lfsr	2,1
 34255  005FF8  504C               	movf	__parse_file_append@data,w,c
 34256  005FFA  26D9               	addwf	fsr2l,f,c
 34257  005FFC  504D               	movf	__parse_file_append@data+1,w,c
 34258  005FFE  22DA               	addwfc	fsr2h,f,c
 34259  006000  50DF               	movf	indf2,w,c
 34260  006002  EC8B  F010         	call	_fat_append_to_file
 34261                           
 34262                           ;api.c: 545: return data[2] + 5;
 34263  006006  EE20 F002          	lfsr	2,2
 34264  00600A  504C               	movf	__parse_file_append@data,w,c
 34265  00600C  26D9               	addwf	fsr2l,f,c
 34266  00600E  504D               	movf	__parse_file_append@data+1,w,c
 34267  006010  22DA               	addwfc	fsr2h,f,c
 34268  006012  50DF               	movf	indf2,w,c
 34269  006014  0F05               	addlw	5
 34270  006016  0012               	return	
 34271  006018                     __end_of__parse_file_append:
 34272                           	opt stack 0
 34273                           tosu	equ	0xFFF
 34274                           tosh	equ	0xFFE
 34275                           tosl	equ	0xFFD
 34276                           pclath	equ	0xFFA
 34277                           tblptru	equ	0xFF8
 34278                           tblptrh	equ	0xFF7
 34279                           tblptrl	equ	0xFF6
 34280                           tablat	equ	0xFF5
 34281                           prodh	equ	0xFF4
 34282                           prodl	equ	0xFF3
 34283                           intcon	equ	0xFF2
 34284                           intcon2	equ	0xFF1
 34285                           intcon3	equ	0xFF0
 34286                           indf0	equ	0xFEF
 34287                           postinc0	equ	0xFEE
 34288                           fsr0h	equ	0xFEA
 34289                           fsr0l	equ	0xFE9
 34290                           wreg	equ	0xFE8
 34291                           indf1	equ	0xFE7
 34292                           postdec1	equ	0xFE5
 34293                           plusw1	equ	0xFE3
 34294                           fsr1h	equ	0xFE2
 34295                           fsr1l	equ	0xFE1
 34296                           indf2	equ	0xFDF
 34297                           postinc2	equ	0xFDE
 34298                           postdec2	equ	0xFDD
 34299                           plusw2	equ	0xFDB
 34300                           fsr2h	equ	0xFDA
 34301                           fsr2l	equ	0xFD9
 34302                           status	equ	0xFD8
 34303                           
 34304 ;; *************** function _fat_append_to_file *****************
 34305 ;; Defined at:
 34306 ;;		line 448 in file "fat16.c"
 34307 ;; Parameters:    Size  Location     Type
 34308 ;;  file_number     1    wreg     unsigned char 
 34309 ;;  number_of_by    2   63[COMRAM] unsigned int 
 34310 ;;  data            2   65[COMRAM] PTR unsigned char 
 34311 ;;		 -> RAM(3759), 
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;  file_number     1   12[BANK0 ] unsigned char 
 34314 ;;  root           32   19[BANK0 ] struct .
 34315 ;;  position        4   15[BANK0 ] unsigned long 
 34316 ;;  file_size       4    2[BANK0 ] unsigned long 
 34317 ;;  length          2   13[BANK0 ] unsigned int 
 34318 ;;  offset          2   10[BANK0 ] unsigned int 
 34319 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 34320 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 34321 ;;  sector          2    0[BANK0 ] unsigned int 
 34322 ;; Return value:  Size  Location     Type
 34323 ;;                  1    wreg      unsigned char 
 34324 ;; Registers used:
 34325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34326 ;; Tracked objects:
 34327 ;;		On entry : 0/0
 34328 ;;		On exit  : 0/0
 34329 ;;		Unchanged: 0/0
 34330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34332 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34333 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34334 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34335 ;;Total ram usage:       63 bytes
 34336 ;; Hardware stack levels used:    1
 34337 ;; Hardware stack levels required when called:    9
 34338 ;; This function calls:
 34339 ;;		__get_empty_cluster
 34340 ;;		__read_fat
 34341 ;;		__root_is_available
 34342 ;;		__sector_from_cluster
 34343 ;;		__update_modified_time
 34344 ;;		__write_fat
 34345 ;;		__write_root
 34346 ;;		_fat_get_file_information
 34347 ;;		_flash_partial_write
 34348 ;; This function is called by:
 34349 ;;		__parse_file_append
 34350 ;; This function uses a non-reentrant model
 34351 ;;
 34352                           
 34353                           	psect	text175
 34354  002116                     __ptext175:
 34355                           	opt stack 0
 34356  002116                     _fat_append_to_file:
 34357                           	opt stack 17
 34358                           
 34359                           ;incstack = 0
 34360                           ;fat_append_to_file@file_number stored from wreg
 34361  002116  0100               	movlb	0	; () banked
 34362  002118  6FC8               	movwf	fat_append_to_file@file_number& (0+255),b
 34363                           
 34364                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 34365  00211A  0E3F               	movlw	63
 34366  00211C  0100               	movlb	0	; () banked
 34367  00211E  65C8               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 34368  002120  D001               	goto	l1860
 34369  002122  0012               	return	
 34370  002124                     l1860:
 34371                           
 34372                           ; BSR set to: 0
 34373                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 34374                           
 34375                           ; BSR set to: 0
 34376  002124  51C8               	movf	fat_append_to_file@file_number& (0+255),w,b
 34377  002126  EC3E  F031         	call	__root_is_available
 34378  00212A  0900               	iorlw	0
 34379  00212C  A4D8               	btfss	status,2,c
 34380  00212E  0012               	return	
 34381                           
 34382                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 34383                           
 34384                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 34385  002130  0ECF               	movlw	low fat_append_to_file@root
 34386  002132  6E38               	movwf	fat_get_file_information@data,c
 34387  002134  0E00               	movlw	high fat_append_to_file@root
 34388  002136  6E39               	movwf	fat_get_file_information@data+1,c
 34389  002138  0100               	movlb	0	; () banked
 34390  00213A  51C8               	movf	fat_append_to_file@file_number& (0+255),w,b
 34391  00213C  ECB3  F031         	call	_fat_get_file_information
 34392                           
 34393                           ;fat16.c: 475: file_size = root.fileSize;
 34394  002140  C0EB  F0BE         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 34395  002144  C0EC  F0BF         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 34396  002148  C0ED  F0C0         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 34397  00214C  C0EE  F0C1         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 34398                           
 34399                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 34400  002150  C0E9  F0C4         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 34401  002154  C0EA  F0C5         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 34402                           
 34403                           ;fat16.c: 479: position = 0;
 34404  002158  0E00               	movlw	0
 34405  00215A  0100               	movlb	0	; () banked
 34406  00215C  6FCB               	movwf	fat_append_to_file@position& (0+255),b
 34407  00215E  0E00               	movlw	0
 34408  002160  6FCC               	movwf	(fat_append_to_file@position+1)& (0+255),b
 34409  002162  0E00               	movlw	0
 34410  002164  6FCD               	movwf	(fat_append_to_file@position+2)& (0+255),b
 34411  002166  0E00               	movlw	0
 34412  002168  6FCE               	movwf	(fat_append_to_file@position+3)& (0+255),b
 34413                           
 34414                           ;fat16.c: 480: while((file_size-position)>512)
 34415  00216A  D013               	goto	l1863
 34416  00216C                     l10923:
 34417                           
 34418                           ; BSR set to: 0
 34419                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 34420  00216C  C0C4  F031         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 34421  002170  C0C5  F032         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 34422  002174  ECE7  F038         	call	__read_fat	;wreg free
 34423  002178  C031  F0C4         	movff	?__read_fat,fat_append_to_file@fat_cluster
 34424  00217C  C032  F0C5         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 34425                           
 34426                           ;fat16.c: 483: position += 512;
 34427  002180  0E00               	movlw	0
 34428  002182  0100               	movlb	0	; () banked
 34429  002184  27CB               	addwf	fat_append_to_file@position& (0+255),f,b
 34430  002186  0E02               	movlw	2
 34431  002188  23CC               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 34432  00218A  0E00               	movlw	0
 34433  00218C  23CD               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 34434  00218E  0E00               	movlw	0
 34435  002190  23CE               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 34436  002192                     l1863:
 34437                           
 34438                           ; BSR set to: 0
 34439                           
 34440                           ; BSR set to: 0
 34441  002192  C0CB  F044         	movff	fat_append_to_file@position,??_fat_append_to_file
 34442  002196  C0CC  F045         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 34443  00219A  C0CD  F046         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 34444  00219E  C0CE  F047         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 34445  0021A2  1E44               	comf	??_fat_append_to_file,f,c
 34446  0021A4  1E45               	comf	??_fat_append_to_file+1,f,c
 34447  0021A6  1E46               	comf	??_fat_append_to_file+2,f,c
 34448  0021A8  1E47               	comf	??_fat_append_to_file+3,f,c
 34449  0021AA  2A44               	incf	??_fat_append_to_file,f,c
 34450  0021AC  0E00               	movlw	0
 34451  0021AE  2245               	addwfc	??_fat_append_to_file+1,f,c
 34452  0021B0  2246               	addwfc	??_fat_append_to_file+2,f,c
 34453  0021B2  2247               	addwfc	??_fat_append_to_file+3,f,c
 34454  0021B4  51BE               	movf	fat_append_to_file@file_size& (0+255),w,b
 34455  0021B6  2444               	addwf	??_fat_append_to_file,w,c
 34456  0021B8  6E48               	movwf	(??_fat_append_to_file+4)& (0+255),c
 34457  0021BA  51BF               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 34458  0021BC  2045               	addwfc	??_fat_append_to_file+1,w,c
 34459  0021BE  6E49               	movwf	(??_fat_append_to_file+5)& (0+255),c
 34460  0021C0  51C0               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 34461  0021C2  2046               	addwfc	??_fat_append_to_file+2,w,c
 34462  0021C4  6E4A               	movwf	(??_fat_append_to_file+6)& (0+255),c
 34463  0021C6  51C1               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 34464  0021C8  2047               	addwfc	??_fat_append_to_file+3,w,c
 34465  0021CA  6E4B               	movwf	(??_fat_append_to_file+7)& (0+255),c
 34466  0021CC  504B               	movf	??_fat_append_to_file+7,w,c
 34467  0021CE  104A               	iorwf	??_fat_append_to_file+6,w,c
 34468  0021D0  E1CD               	bnz	l10923
 34469  0021D2  0448               	decf	??_fat_append_to_file+4,w,c
 34470  0021D4  0E02               	movlw	2
 34471  0021D6  5849               	subwfb	??_fat_append_to_file+5,w,c
 34472  0021D8  B0D8               	btfsc	status,0,c
 34473  0021DA  D7C8               	goto	l1864
 34474                           
 34475                           ; BSR set to: 0
 34476                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 34477                           
 34478                           ; BSR set to: 0
 34479  0021DC  C0CB  F044         	movff	fat_append_to_file@position,??_fat_append_to_file
 34480  0021E0  C0CC  F045         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 34481  0021E4  1E44               	comf	??_fat_append_to_file,f,c
 34482  0021E6  1E45               	comf	??_fat_append_to_file+1,f,c
 34483  0021E8  4A44               	infsnz	??_fat_append_to_file,f,c
 34484  0021EA  2A45               	incf	??_fat_append_to_file+1,f,c
 34485  0021EC  51BE               	movf	fat_append_to_file@file_size& (0+255),w,b
 34486  0021EE  2444               	addwf	??_fat_append_to_file,w,c
 34487  0021F0  6FC6               	movwf	fat_append_to_file@offset& (0+255),b
 34488  0021F2  51BF               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 34489  0021F4  2045               	addwfc	??_fat_append_to_file+1,w,c
 34490  0021F6  6FC7               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 34491                           
 34492                           ; BSR set to: 0
 34493                           ;fat16.c: 490: position = 0;
 34494  0021F8  0E00               	movlw	0
 34495  0021FA  6FCB               	movwf	fat_append_to_file@position& (0+255),b
 34496  0021FC  0E00               	movlw	0
 34497  0021FE  6FCC               	movwf	(fat_append_to_file@position+1)& (0+255),b
 34498  002200  0E00               	movlw	0
 34499  002202  6FCD               	movwf	(fat_append_to_file@position+2)& (0+255),b
 34500  002204  0E00               	movlw	0
 34501  002206  6FCE               	movwf	(fat_append_to_file@position+3)& (0+255),b
 34502                           
 34503                           ;fat16.c: 491: while(position < number_of_bytes)
 34504  002208  D06F               	goto	l1866
 34505  00220A                     
 34506                           ; BSR set to: 0
 34507                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 34508                           
 34509                           ; BSR set to: 0
 34510  00220A  0E02               	movlw	2
 34511  00220C  19C7               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 34512  00220E  11C6               	iorwf	fat_append_to_file@offset& (0+255),w,b
 34513  002210  A4D8               	btfss	status,2,c
 34514  002212  D026               	goto	l1868
 34515                           
 34516                           ; BSR set to: 0
 34517                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 34518  002214  0E00               	movlw	0
 34519  002216  6E32               	movwf	__get_empty_cluster@first_cluster+1,c
 34520  002218  0E00               	movlw	0
 34521  00221A  6E31               	movwf	__get_empty_cluster@first_cluster,c
 34522  00221C  ECED  F031         	call	__get_empty_cluster	;wreg free
 34523  002220  C031  F0C2         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 34524  002224  C032  F0C3         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 34525                           
 34526                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 34527  002228  C0C4  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 34528  00222C  C0C5  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 34529  002230  C0C2  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 34530  002234  C0C3  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 34531  002238  ECB0  F039         	call	__write_fat	;wreg free
 34532                           
 34533                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 34534  00223C  C0C2  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 34535  002240  C0C3  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 34536  002244  0EFF               	movlw	255
 34537  002246  6E2C               	movwf	__write_fat@value+1,c
 34538  002248  682B               	setf	__write_fat@value,c
 34539  00224A  ECB0  F039         	call	__write_fat	;wreg free
 34540                           
 34541                           ;fat16.c: 504: fat_cluster = new_cluster;
 34542  00224E  C0C2  F0C4         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 34543  002252  C0C3  F0C5         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 34544                           
 34545                           ;fat16.c: 505: offset = 0;
 34546  002256  0E00               	movlw	0
 34547  002258  0100               	movlb	0	; () banked
 34548  00225A  6FC7               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 34549  00225C  0E00               	movlw	0
 34550  00225E  6FC6               	movwf	fat_append_to_file@offset& (0+255),b
 34551  002260                     l1868:
 34552                           
 34553                           ; BSR set to: 0
 34554                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 34555                           
 34556                           ; BSR set to: 0
 34557  002260  C0C4  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 34558  002264  C0C5  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 34559  002268  EC7B  F03D         	call	__sector_from_cluster	;wreg free
 34560  00226C  C001  F0BC         	movff	?__sector_from_cluster,fat_append_to_file@sector
 34561  002270  C002  F0BD         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 34562                           
 34563                           ;fat16.c: 512: length = 512 - offset;
 34564  002274  C0C6  F044         	movff	fat_append_to_file@offset,??_fat_append_to_file
 34565  002278  C0C7  F045         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 34566  00227C  1E44               	comf	??_fat_append_to_file,f,c
 34567  00227E  1E45               	comf	??_fat_append_to_file+1,f,c
 34568  002280  4A44               	infsnz	??_fat_append_to_file,f,c
 34569  002282  2A45               	incf	??_fat_append_to_file+1,f,c
 34570  002284  0E00               	movlw	0
 34571  002286  2444               	addwf	??_fat_append_to_file,w,c
 34572  002288  0100               	movlb	0	; () banked
 34573  00228A  6FC9               	movwf	fat_append_to_file@length& (0+255),b
 34574  00228C  0E02               	movlw	2
 34575  00228E  2045               	addwfc	??_fat_append_to_file+1,w,c
 34576  002290  6FCA               	movwf	(fat_append_to_file@length+1)& (0+255),b
 34577                           
 34578                           ; BSR set to: 0
 34579                           ;fat16.c: 513: if(length>number_of_bytes)
 34580  002292  51C9               	movf	fat_append_to_file@length& (0+255),w,b
 34581  002294  5C40               	subwf	fat_append_to_file@number_of_bytes,w,c
 34582  002296  51CA               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34583  002298  5841               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 34584  00229A  B0D8               	btfsc	status,0,c
 34585  00229C  D004               	goto	l1869
 34586                           
 34587                           ; BSR set to: 0
 34588                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 34589  00229E  C040  F0C9         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 34590  0022A2  C041  F0CA         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 34591  0022A6                     l1869:
 34592                           
 34593                           ; BSR set to: 0
 34594                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 34595                           
 34596                           ; BSR set to: 0
 34597  0022A6  C0BC  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 34598  0022AA  C0BD  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 34599  0022AE  C0C6  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 34600  0022B2  C0C7  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 34601  0022B6  C0C9  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 34602  0022BA  C0CA  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 34603  0022BE  51CB               	movf	fat_append_to_file@position& (0+255),w,b
 34604  0022C0  2442               	addwf	fat_append_to_file@data,w,c
 34605  0022C2  6E26               	movwf	flash_partial_write@data,c
 34606  0022C4  51CC               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 34607  0022C6  2043               	addwfc	fat_append_to_file@data+1,w,c
 34608  0022C8  6E27               	movwf	flash_partial_write@data+1,c
 34609  0022CA  EC98  F032         	call	_flash_partial_write	;wreg free
 34610                           
 34611                           ;fat16.c: 522: position += length;
 34612  0022CE  0100               	movlb	0	; () banked
 34613  0022D0  51C9               	movf	fat_append_to_file@length& (0+255),w,b
 34614  0022D2  27CB               	addwf	fat_append_to_file@position& (0+255),f,b
 34615  0022D4  51CA               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34616  0022D6  23CC               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 34617  0022D8  0E00               	movlw	0
 34618  0022DA  23CD               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 34619  0022DC  0E00               	movlw	0
 34620  0022DE  23CE               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 34621                           
 34622                           ; BSR set to: 0
 34623                           ;fat16.c: 523: offset += length;
 34624  0022E0  51C9               	movf	fat_append_to_file@length& (0+255),w,b
 34625  0022E2  27C6               	addwf	fat_append_to_file@offset& (0+255),f,b
 34626  0022E4  51CA               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34627  0022E6  23C7               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 34628  0022E8                     l1866:
 34629                           
 34630                           ; BSR set to: 0
 34631                           
 34632                           ; BSR set to: 0
 34633  0022E8  5040               	movf	fat_append_to_file@number_of_bytes,w,c
 34634  0022EA  6E44               	movwf	??_fat_append_to_file& (0+255),c
 34635  0022EC  5041               	movf	fat_append_to_file@number_of_bytes+1,w,c
 34636  0022EE  6E45               	movwf	(??_fat_append_to_file+1)& (0+255),c
 34637  0022F0  6A46               	clrf	(??_fat_append_to_file+2)& (0+255),c
 34638  0022F2  6A47               	clrf	(??_fat_append_to_file+3)& (0+255),c
 34639  0022F4  5044               	movf	??_fat_append_to_file,w,c
 34640  0022F6  5DCB               	subwf	fat_append_to_file@position& (0+255),w,b
 34641  0022F8  5045               	movf	??_fat_append_to_file+1,w,c
 34642  0022FA  59CC               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 34643  0022FC  5046               	movf	??_fat_append_to_file+2,w,c
 34644  0022FE  59CD               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 34645  002300  5047               	movf	??_fat_append_to_file+3,w,c
 34646  002302  59CE               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 34647  002304  A0D8               	btfss	status,0,c
 34648  002306  D781               	goto	l1867
 34649                           
 34650                           ; BSR set to: 0
 34651                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 34652                           
 34653                           ; BSR set to: 0
 34654  002308  5040               	movf	fat_append_to_file@number_of_bytes,w,c
 34655  00230A  27EB               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 34656  00230C  5041               	movf	fat_append_to_file@number_of_bytes+1,w,c
 34657  00230E  23EC               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 34658  002310  0E00               	movlw	0
 34659  002312  23ED               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 34660  002314  0E00               	movlw	0
 34661  002316  23EE               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 34662                           
 34663                           ; BSR set to: 0
 34664                           ;fat16.c: 529: _update_modified_time(&root);
 34665  002318  0ECF               	movlw	low fat_append_to_file@root
 34666  00231A  6E05               	movwf	__update_modified_time@root,c
 34667  00231C  0E00               	movlw	high fat_append_to_file@root
 34668  00231E  6E06               	movwf	__update_modified_time@root+1,c
 34669  002320  EC19  F03B         	call	__update_modified_time	;wreg free
 34670                           
 34671                           ;fat16.c: 530: _write_root(file_number, &root);
 34672  002324  0ECF               	movlw	low fat_append_to_file@root
 34673  002326  6E29               	movwf	__write_root@data,c
 34674  002328  0E00               	movlw	high fat_append_to_file@root
 34675  00232A  6E2A               	movwf	__write_root@data+1,c
 34676  00232C  0100               	movlb	0	; () banked
 34677  00232E  51C8               	movf	fat_append_to_file@file_number& (0+255),w,b
 34678  002330  EC51  F036         	call	__write_root
 34679  002334  0012               	return	
 34680  002336                     __end_of_fat_append_to_file:
 34681                           	opt stack 0
 34682                           tosu	equ	0xFFF
 34683                           tosh	equ	0xFFE
 34684                           tosl	equ	0xFFD
 34685                           pclath	equ	0xFFA
 34686                           tblptru	equ	0xFF8
 34687                           tblptrh	equ	0xFF7
 34688                           tblptrl	equ	0xFF6
 34689                           tablat	equ	0xFF5
 34690                           prodh	equ	0xFF4
 34691                           prodl	equ	0xFF3
 34692                           intcon	equ	0xFF2
 34693                           intcon2	equ	0xFF1
 34694                           intcon3	equ	0xFF0
 34695                           indf0	equ	0xFEF
 34696                           postinc0	equ	0xFEE
 34697                           fsr0h	equ	0xFEA
 34698                           fsr0l	equ	0xFE9
 34699                           wreg	equ	0xFE8
 34700                           indf1	equ	0xFE7
 34701                           postdec1	equ	0xFE5
 34702                           plusw1	equ	0xFE3
 34703                           fsr1h	equ	0xFE2
 34704                           fsr1l	equ	0xFE1
 34705                           indf2	equ	0xFDF
 34706                           postinc2	equ	0xFDE
 34707                           postdec2	equ	0xFDD
 34708                           plusw2	equ	0xFDB
 34709                           fsr2h	equ	0xFDA
 34710                           fsr2l	equ	0xFD9
 34711                           status	equ	0xFD8
 34712                           
 34713 ;; *************** function _fat_get_file_information *****************
 34714 ;; Defined at:
 34715 ;;		line 1020 in file "fat16.c"
 34716 ;; Parameters:    Size  Location     Type
 34717 ;;  file_number     1    wreg     unsigned char 
 34718 ;;  data            2   55[COMRAM] PTR struct .
 34719 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), RAM(3759), 
 34720 ;; Auto vars:     Size  Location     Type
 34721 ;;  file_number     1   62[COMRAM] unsigned char 
 34722 ;;  offset          2   60[COMRAM] unsigned int 
 34723 ;;  root_sector     2   58[COMRAM] unsigned int 
 34724 ;; Return value:  Size  Location     Type
 34725 ;;                  1    wreg      unsigned char 
 34726 ;; Registers used:
 34727 ;;		wreg, status,2, status,0, cstack
 34728 ;; Tracked objects:
 34729 ;;		On entry : 0/0
 34730 ;;		On exit  : 0/0
 34731 ;;		Unchanged: 0/0
 34732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34734 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34736 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34737 ;;Total ram usage:        8 bytes
 34738 ;; Hardware stack levels used:    1
 34739 ;; Hardware stack levels required when called:    8
 34740 ;; This function calls:
 34741 ;;		__root_is_available
 34742 ;;		_flash_partial_read
 34743 ;; This function is called by:
 34744 ;;		_fat_append_to_file
 34745 ;;		_fat_rename_file
 34746 ;;		_fat_read_from_file
 34747 ;;		__fill_buffer_get_file_details
 34748 ;; This function uses a non-reentrant model
 34749 ;;
 34750                           
 34751                           	psect	text176
 34752  006366                     __ptext176:
 34753                           	opt stack 0
 34754  006366                     _fat_get_file_information:
 34755                           	opt stack 19
 34756                           
 34757                           ;incstack = 0
 34758                           ;fat_get_file_information@file_number stored from wreg
 34759  006366  6E3F               	movwf	fat_get_file_information@file_number,c
 34760                           
 34761                           ;fat16.c: 1022: uint16_t root_sector;;fat16.c: 1023: uint16_t offset;;fat16.c: 1025: if(
      +                          file_number>=64)
 34762  006368  0E3F               	movlw	63
 34763  00636A  643F               	cpfsgt	fat_get_file_information@file_number,c
 34764  00636C  D002               	goto	l2052
 34765                           
 34766                           ;fat16.c: 1026: {;fat16.c: 1028: return 0x01;
 34767  00636E  0E01               	movlw	1
 34768  006370  0012               	return	
 34769  006372                     l2052:
 34770                           
 34771                           ;fat16.c: 1029: };fat16.c: 1030: if(_root_is_available(file_number))
 34772  006372  503F               	movf	fat_get_file_information@file_number,w,c
 34773  006374  EC3E  F031         	call	__root_is_available
 34774  006378  0900               	iorlw	0
 34775  00637A  B4D8               	btfsc	status,2,c
 34776  00637C  D002               	goto	l2054
 34777                           
 34778                           ;fat16.c: 1031: {;fat16.c: 1033: return 0x02;
 34779  00637E  0E02               	movlw	2
 34780  006380  0012               	return	
 34781  006382                     l2054:
 34782                           
 34783                           ;fat16.c: 1034: };fat16.c: 1036: root_sector = (file_number >> 4) + 18;
 34784  006382  C03F  F03A         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 34785  006386  3A3A               	swapf	??_fat_get_file_information,f,c
 34786  006388  0E0F               	movlw	15
 34787  00638A  163A               	andwf	??_fat_get_file_information,f,c
 34788  00638C  0E12               	movlw	18
 34789  00638E  243A               	addwf	??_fat_get_file_information,w,c
 34790  006390  6E3B               	movwf	fat_get_file_information@root_sector,c
 34791  006392  6A3C               	clrf	fat_get_file_information@root_sector+1,c
 34792  006394  0E00               	movlw	0
 34793  006396  223C               	addwfc	fat_get_file_information@root_sector+1,f,c
 34794                           
 34795                           ;fat16.c: 1037: offset = (file_number & 0b1111);
 34796  006398  C03F  F03A         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 34797  00639C  0E0F               	movlw	15
 34798  00639E  163A               	andwf	??_fat_get_file_information,f,c
 34799  0063A0  503A               	movf	??_fat_get_file_information,w,c
 34800  0063A2  6E3D               	movwf	fat_get_file_information@offset,c
 34801  0063A4  6A3E               	clrf	fat_get_file_information@offset+1,c
 34802                           
 34803                           ;fat16.c: 1038: offset <<= 5;
 34804  0063A6  0E05               	movlw	5
 34805  0063A8                     u7645:
 34806  0063A8  90D8               	bcf	status,0,c
 34807  0063AA  363D               	rlcf	fat_get_file_information@offset,f,c
 34808  0063AC  363E               	rlcf	fat_get_file_information@offset+1,f,c
 34809  0063AE  2EE8               	decfsz	wreg,f,c
 34810  0063B0  D7FB               	goto	u7645
 34811                           
 34812                           ;fat16.c: 1039: flash_partial_read(root_sector, offset, 32, data);
 34813  0063B2  C03B  F029         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 34814  0063B6  C03C  F02A         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 34815  0063BA  C03D  F02B         	movff	fat_get_file_information@offset,flash_partial_read@start
 34816  0063BE  C03E  F02C         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 34817  0063C2  0E00               	movlw	0
 34818  0063C4  6E2E               	movwf	flash_partial_read@length+1,c
 34819  0063C6  0E20               	movlw	32
 34820  0063C8  6E2D               	movwf	flash_partial_read@length,c
 34821  0063CA  C038  F02F         	movff	fat_get_file_information@data,flash_partial_read@data
 34822  0063CE  C039  F030         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 34823  0063D2  EC32  F03B         	call	_flash_partial_read	;wreg free
 34824                           
 34825                           ;fat16.c: 1042: return 0x00;
 34826  0063D6  0E00               	movlw	0
 34827  0063D8  0012               	return	
 34828  0063DA                     __end_of_fat_get_file_information:
 34829                           	opt stack 0
 34830                           tosu	equ	0xFFF
 34831                           tosh	equ	0xFFE
 34832                           tosl	equ	0xFFD
 34833                           pclath	equ	0xFFA
 34834                           tblptru	equ	0xFF8
 34835                           tblptrh	equ	0xFF7
 34836                           tblptrl	equ	0xFF6
 34837                           tablat	equ	0xFF5
 34838                           prodh	equ	0xFF4
 34839                           prodl	equ	0xFF3
 34840                           intcon	equ	0xFF2
 34841                           intcon2	equ	0xFF1
 34842                           intcon3	equ	0xFF0
 34843                           indf0	equ	0xFEF
 34844                           postinc0	equ	0xFEE
 34845                           fsr0h	equ	0xFEA
 34846                           fsr0l	equ	0xFE9
 34847                           wreg	equ	0xFE8
 34848                           indf1	equ	0xFE7
 34849                           postdec1	equ	0xFE5
 34850                           plusw1	equ	0xFE3
 34851                           fsr1h	equ	0xFE2
 34852                           fsr1l	equ	0xFE1
 34853                           indf2	equ	0xFDF
 34854                           postinc2	equ	0xFDE
 34855                           postdec2	equ	0xFDD
 34856                           plusw2	equ	0xFDB
 34857                           fsr2h	equ	0xFDA
 34858                           fsr2l	equ	0xFD9
 34859                           status	equ	0xFD8
 34860                           
 34861 ;; *************** function __root_is_available *****************
 34862 ;; Defined at:
 34863 ;;		line 59 in file "fat16.c"
 34864 ;; Parameters:    Size  Location     Type
 34865 ;;  file_number     1    wreg     unsigned char 
 34866 ;; Auto vars:     Size  Location     Type
 34867 ;;  file_number     1   53[COMRAM] unsigned char 
 34868 ;;  offset          2   51[COMRAM] unsigned int 
 34869 ;;  root_sector     2   49[COMRAM] unsigned int 
 34870 ;;  first_byte      1   54[COMRAM] unsigned char 
 34871 ;; Return value:  Size  Location     Type
 34872 ;;                  1    wreg      unsigned char 
 34873 ;; Registers used:
 34874 ;;		wreg, status,2, status,0, cstack
 34875 ;; Tracked objects:
 34876 ;;		On entry : 0/0
 34877 ;;		On exit  : 0/0
 34878 ;;		Unchanged: 0/0
 34879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34881 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34884 ;;Total ram usage:        7 bytes
 34885 ;; Hardware stack levels used:    1
 34886 ;; Hardware stack levels required when called:    7
 34887 ;; This function calls:
 34888 ;;		_flash_partial_read
 34889 ;; This function is called by:
 34890 ;;		__get_available_root_entry
 34891 ;;		_fat_delete_file
 34892 ;;		_fat_append_to_file
 34893 ;;		_fat_get_file_information
 34894 ;; This function uses a non-reentrant model
 34895 ;;
 34896                           
 34897                           	psect	text177
 34898  00627C                     __ptext177:
 34899                           	opt stack 0
 34900  00627C                     __root_is_available:
 34901                           	opt stack 19
 34902                           
 34903                           ;incstack = 0
 34904                           ;__root_is_available@file_number stored from wreg
 34905  00627C  6E36               	movwf	__root_is_available@file_number,c
 34906                           
 34907                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 34908  00627E  0E3F               	movlw	63
 34909  006280  6436               	cpfsgt	__root_is_available@file_number,c
 34910  006282  D002               	goto	l1772
 34911                           
 34912                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 34913  006284  0E00               	movlw	0
 34914  006286  0012               	return	
 34915  006288                     l1772:
 34916                           
 34917                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 18;
 34918  006288  C036  F031         	movff	__root_is_available@file_number,??__root_is_available
 34919  00628C  3A31               	swapf	??__root_is_available,f,c
 34920  00628E  0E0F               	movlw	15
 34921  006290  1631               	andwf	??__root_is_available,f,c
 34922  006292  0E12               	movlw	18
 34923  006294  2431               	addwf	??__root_is_available,w,c
 34924  006296  6E32               	movwf	__root_is_available@root_sector,c
 34925  006298  6A33               	clrf	__root_is_available@root_sector+1,c
 34926  00629A  0E00               	movlw	0
 34927  00629C  2233               	addwfc	__root_is_available@root_sector+1,f,c
 34928                           
 34929                           ;fat16.c: 75: offset = (file_number & 0b1111);
 34930  00629E  C036  F031         	movff	__root_is_available@file_number,??__root_is_available
 34931  0062A2  0E0F               	movlw	15
 34932  0062A4  1631               	andwf	??__root_is_available,f,c
 34933  0062A6  5031               	movf	??__root_is_available,w,c
 34934  0062A8  6E34               	movwf	__root_is_available@offset,c
 34935  0062AA  6A35               	clrf	__root_is_available@offset+1,c
 34936                           
 34937                           ;fat16.c: 76: offset <<= 5;
 34938  0062AC  0E05               	movlw	5
 34939  0062AE                     u6765:
 34940  0062AE  90D8               	bcf	status,0,c
 34941  0062B0  3634               	rlcf	__root_is_available@offset,f,c
 34942  0062B2  3635               	rlcf	__root_is_available@offset+1,f,c
 34943  0062B4  2EE8               	decfsz	wreg,f,c
 34944  0062B6  D7FB               	goto	u6765
 34945                           
 34946                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 34947  0062B8  C032  F029         	movff	__root_is_available@root_sector,flash_partial_read@page
 34948  0062BC  C033  F02A         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 34949  0062C0  C034  F02B         	movff	__root_is_available@offset,flash_partial_read@start
 34950  0062C4  C035  F02C         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 34951  0062C8  0E00               	movlw	0
 34952  0062CA  6E2E               	movwf	flash_partial_read@length+1,c
 34953  0062CC  0E01               	movlw	1
 34954  0062CE  6E2D               	movwf	flash_partial_read@length,c
 34955  0062D0  0E37               	movlw	low __root_is_available@first_byte
 34956  0062D2  6E2F               	movwf	flash_partial_read@data,c
 34957  0062D4  0E00               	movlw	high __root_is_available@first_byte
 34958  0062D6  6E30               	movwf	flash_partial_read@data+1,c
 34959  0062D8  EC32  F03B         	call	_flash_partial_read	;wreg free
 34960                           
 34961                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 34962  0062DC  5037               	movf	__root_is_available@first_byte,w,c
 34963  0062DE  B4D8               	btfsc	status,2,c
 34964  0062E0  D004               	goto	u6780
 34965  0062E2  0EE5               	movlw	229
 34966  0062E4  1837               	xorwf	__root_is_available@first_byte,w,c
 34967  0062E6  A4D8               	btfss	status,2,c
 34968  0062E8  D002               	goto	l1774
 34969  0062EA                     u6780:
 34970                           
 34971                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 34972  0062EA  0E01               	movlw	1
 34973                           
 34974                           ;fat16.c: 86: }
 34975  0062EC  0012               	return	
 34976  0062EE                     l1774:
 34977                           
 34978                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 34979  0062EE  0E00               	movlw	0
 34980  0062F0  0012               	return	
 34981  0062F2                     __end_of__root_is_available:
 34982                           	opt stack 0
 34983                           tosu	equ	0xFFF
 34984                           tosh	equ	0xFFE
 34985                           tosl	equ	0xFFD
 34986                           pclath	equ	0xFFA
 34987                           tblptru	equ	0xFF8
 34988                           tblptrh	equ	0xFF7
 34989                           tblptrl	equ	0xFF6
 34990                           tablat	equ	0xFF5
 34991                           prodh	equ	0xFF4
 34992                           prodl	equ	0xFF3
 34993                           intcon	equ	0xFF2
 34994                           intcon2	equ	0xFF1
 34995                           intcon3	equ	0xFF0
 34996                           indf0	equ	0xFEF
 34997                           postinc0	equ	0xFEE
 34998                           fsr0h	equ	0xFEA
 34999                           fsr0l	equ	0xFE9
 35000                           wreg	equ	0xFE8
 35001                           indf1	equ	0xFE7
 35002                           postdec1	equ	0xFE5
 35003                           plusw1	equ	0xFE3
 35004                           fsr1h	equ	0xFE2
 35005                           fsr1l	equ	0xFE1
 35006                           indf2	equ	0xFDF
 35007                           postinc2	equ	0xFDE
 35008                           postdec2	equ	0xFDD
 35009                           plusw2	equ	0xFDB
 35010                           fsr2h	equ	0xFDA
 35011                           fsr2l	equ	0xFD9
 35012                           status	equ	0xFD8
 35013                           
 35014 ;; *************** function __write_root *****************
 35015 ;; Defined at:
 35016 ;;		line 182 in file "fat16.c"
 35017 ;; Parameters:    Size  Location     Type
 35018 ;;  slot            1    wreg     unsigned char 
 35019 ;;  data            2   40[COMRAM] PTR struct .
 35020 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35021 ;; Auto vars:     Size  Location     Type
 35022 ;;  slot            1   47[COMRAM] unsigned char 
 35023 ;;  offset          2   45[COMRAM] unsigned int 
 35024 ;;  root_sector     2   43[COMRAM] unsigned int 
 35025 ;; Return value:  Size  Location     Type
 35026 ;;                  1    wreg      void 
 35027 ;; Registers used:
 35028 ;;		wreg, status,2, status,0, cstack
 35029 ;; Tracked objects:
 35030 ;;		On entry : 0/0
 35031 ;;		On exit  : 0/0
 35032 ;;		Unchanged: 0/0
 35033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35035 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35037 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35038 ;;Total ram usage:        8 bytes
 35039 ;; Hardware stack levels used:    1
 35040 ;; Hardware stack levels required when called:    6
 35041 ;; This function calls:
 35042 ;;		_flash_partial_write
 35043 ;; This function is called by:
 35044 ;;		_fat_create_file
 35045 ;;		_fat_append_to_file
 35046 ;;		_fat_rename_file
 35047 ;; This function uses a non-reentrant model
 35048 ;;
 35049                           
 35050                           	psect	text178
 35051  006CA2                     __ptext178:
 35052                           	opt stack 0
 35053  006CA2                     __write_root:
 35054                           	opt stack 19
 35055                           
 35056                           ;incstack = 0
 35057                           ;__write_root@slot stored from wreg
 35058  006CA2  6E30               	movwf	__write_root@slot,c
 35059                           
 35060                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 18;
 35061  006CA4  C030  F02B         	movff	__write_root@slot,??__write_root
 35062  006CA8  3A2B               	swapf	??__write_root,f,c
 35063  006CAA  0E0F               	movlw	15
 35064  006CAC  162B               	andwf	??__write_root,f,c
 35065  006CAE  0E12               	movlw	18
 35066  006CB0  242B               	addwf	??__write_root,w,c
 35067  006CB2  6E2C               	movwf	__write_root@root_sector,c
 35068  006CB4  6A2D               	clrf	__write_root@root_sector+1,c
 35069  006CB6  0E00               	movlw	0
 35070  006CB8  222D               	addwfc	__write_root@root_sector+1,f,c
 35071                           
 35072                           ;fat16.c: 187: offset = (slot & 0b1111);
 35073  006CBA  C030  F02B         	movff	__write_root@slot,??__write_root
 35074  006CBE  0E0F               	movlw	15
 35075  006CC0  162B               	andwf	??__write_root,f,c
 35076  006CC2  502B               	movf	??__write_root,w,c
 35077  006CC4  6E2E               	movwf	__write_root@offset,c
 35078  006CC6  6A2F               	clrf	__write_root@offset+1,c
 35079                           
 35080                           ;fat16.c: 188: offset <<= 5;
 35081  006CC8  0E05               	movlw	5
 35082  006CCA                     u7515:
 35083  006CCA  90D8               	bcf	status,0,c
 35084  006CCC  362E               	rlcf	__write_root@offset,f,c
 35085  006CCE  362F               	rlcf	__write_root@offset+1,f,c
 35086  006CD0  2EE8               	decfsz	wreg,f,c
 35087  006CD2  D7FB               	goto	u7515
 35088                           
 35089                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 35090  006CD4  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 35091  006CD8  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 35092  006CDC  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 35093  006CE0  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 35094  006CE4  0E00               	movlw	0
 35095  006CE6  6E25               	movwf	flash_partial_write@length+1,c
 35096  006CE8  0E20               	movlw	32
 35097  006CEA  6E24               	movwf	flash_partial_write@length,c
 35098  006CEC  C029  F026         	movff	__write_root@data,flash_partial_write@data
 35099  006CF0  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 35100  006CF4  EC98  F032         	call	_flash_partial_write	;wreg free
 35101  006CF8  0012               	return		;funcret
 35102  006CFA                     __end_of__write_root:
 35103                           	opt stack 0
 35104                           tosu	equ	0xFFF
 35105                           tosh	equ	0xFFE
 35106                           tosl	equ	0xFFD
 35107                           pclath	equ	0xFFA
 35108                           tblptru	equ	0xFF8
 35109                           tblptrh	equ	0xFF7
 35110                           tblptrl	equ	0xFF6
 35111                           tablat	equ	0xFF5
 35112                           prodh	equ	0xFF4
 35113                           prodl	equ	0xFF3
 35114                           intcon	equ	0xFF2
 35115                           intcon2	equ	0xFF1
 35116                           intcon3	equ	0xFF0
 35117                           indf0	equ	0xFEF
 35118                           postinc0	equ	0xFEE
 35119                           fsr0h	equ	0xFEA
 35120                           fsr0l	equ	0xFE9
 35121                           wreg	equ	0xFE8
 35122                           indf1	equ	0xFE7
 35123                           postdec1	equ	0xFE5
 35124                           plusw1	equ	0xFE3
 35125                           fsr1h	equ	0xFE2
 35126                           fsr1l	equ	0xFE1
 35127                           indf2	equ	0xFDF
 35128                           postinc2	equ	0xFDE
 35129                           postdec2	equ	0xFDD
 35130                           plusw2	equ	0xFDB
 35131                           fsr2h	equ	0xFDA
 35132                           fsr2l	equ	0xFD9
 35133                           status	equ	0xFD8
 35134                           
 35135 ;; *************** function __write_fat *****************
 35136 ;; Defined at:
 35137 ;;		line 158 in file "fat16.c"
 35138 ;; Parameters:    Size  Location     Type
 35139 ;;  cluster         2   40[COMRAM] unsigned int 
 35140 ;;  value           2   42[COMRAM] unsigned int 
 35141 ;; Auto vars:     Size  Location     Type
 35142 ;;  offset          2   46[COMRAM] unsigned int 
 35143 ;;  fat_sector      2   44[COMRAM] unsigned int 
 35144 ;; Return value:  Size  Location     Type
 35145 ;;                  1    wreg      void 
 35146 ;; Registers used:
 35147 ;;		wreg, status,2, status,0, cstack
 35148 ;; Tracked objects:
 35149 ;;		On entry : 0/0
 35150 ;;		On exit  : 0/0
 35151 ;;		Unchanged: 0/0
 35152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35156 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35157 ;;Total ram usage:        8 bytes
 35158 ;; Hardware stack levels used:    1
 35159 ;; Hardware stack levels required when called:    6
 35160 ;; This function calls:
 35161 ;;		_flash_partial_write
 35162 ;; This function is called by:
 35163 ;;		_fat_create_file
 35164 ;;		_fat_delete_file
 35165 ;;		_fat_append_to_file
 35166 ;; This function uses a non-reentrant model
 35167 ;;
 35168                           
 35169                           	psect	text179
 35170  007360                     __ptext179:
 35171                           	opt stack 0
 35172  007360                     __write_fat:
 35173                           	opt stack 19
 35174                           
 35175                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 35176                           
 35177                           ;incstack = 0
 35178  007360  502A               	movf	__write_fat@cluster+1,w,c
 35179  007362  6E2D               	movwf	__write_fat@fat_sector,c
 35180  007364  6A2E               	clrf	__write_fat@fat_sector+1,c
 35181                           
 35182                           ;fat16.c: 163: fat_sector += 2;
 35183  007366  0E02               	movlw	2
 35184  007368  262D               	addwf	__write_fat@fat_sector,f,c
 35185  00736A  0E00               	movlw	0
 35186  00736C  222E               	addwfc	__write_fat@fat_sector+1,f,c
 35187                           
 35188                           ;fat16.c: 164: offset = cluster & 0xFF;
 35189  00736E  5029               	movf	__write_fat@cluster,w,c
 35190  007370  6E2F               	movwf	__write_fat@offset,c
 35191  007372  6A30               	clrf	__write_fat@offset+1,c
 35192                           
 35193                           ;fat16.c: 165: offset <<= 1;
 35194  007374  90D8               	bcf	status,0,c
 35195  007376  362F               	rlcf	__write_fat@offset,f,c
 35196  007378  3630               	rlcf	__write_fat@offset+1,f,c
 35197                           
 35198                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 35199  00737A  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 35200  00737E  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 35201  007382  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 35202  007386  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 35203  00738A  0E00               	movlw	0
 35204  00738C  6E25               	movwf	flash_partial_write@length+1,c
 35205  00738E  0E02               	movlw	2
 35206  007390  6E24               	movwf	flash_partial_write@length,c
 35207  007392  0E2B               	movlw	low __write_fat@value
 35208  007394  6E26               	movwf	flash_partial_write@data,c
 35209  007396  0E00               	movlw	high __write_fat@value
 35210  007398  6E27               	movwf	flash_partial_write@data+1,c
 35211  00739A  EC98  F032         	call	_flash_partial_write	;wreg free
 35212  00739E  0012               	return		;funcret
 35213  0073A0                     __end_of__write_fat:
 35214                           	opt stack 0
 35215                           tosu	equ	0xFFF
 35216                           tosh	equ	0xFFE
 35217                           tosl	equ	0xFFD
 35218                           pclath	equ	0xFFA
 35219                           tblptru	equ	0xFF8
 35220                           tblptrh	equ	0xFF7
 35221                           tblptrl	equ	0xFF6
 35222                           tablat	equ	0xFF5
 35223                           prodh	equ	0xFF4
 35224                           prodl	equ	0xFF3
 35225                           intcon	equ	0xFF2
 35226                           intcon2	equ	0xFF1
 35227                           intcon3	equ	0xFF0
 35228                           indf0	equ	0xFEF
 35229                           postinc0	equ	0xFEE
 35230                           fsr0h	equ	0xFEA
 35231                           fsr0l	equ	0xFE9
 35232                           wreg	equ	0xFE8
 35233                           indf1	equ	0xFE7
 35234                           postdec1	equ	0xFE5
 35235                           plusw1	equ	0xFE3
 35236                           fsr1h	equ	0xFE2
 35237                           fsr1l	equ	0xFE1
 35238                           indf2	equ	0xFDF
 35239                           postinc2	equ	0xFDE
 35240                           postdec2	equ	0xFDD
 35241                           plusw2	equ	0xFDB
 35242                           fsr2h	equ	0xFDA
 35243                           fsr2l	equ	0xFD9
 35244                           status	equ	0xFD8
 35245                           
 35246 ;; *************** function _flash_partial_write *****************
 35247 ;; Defined at:
 35248 ;;		line 468 in file "flash.c"
 35249 ;; Parameters:    Size  Location     Type
 35250 ;;  page            2   31[COMRAM] unsigned int 
 35251 ;;  start           2   33[COMRAM] unsigned int 
 35252 ;;  length          2   35[COMRAM] unsigned int 
 35253 ;;  data            2   37[COMRAM] PTR unsigned char 
 35254 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 35255 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 35256 ;; Auto vars:     Size  Location     Type
 35257 ;;  match           1   39[COMRAM] enum E6878
 35258 ;; Return value:  Size  Location     Type
 35259 ;;                  1    wreg      void 
 35260 ;; Registers used:
 35261 ;;		wreg, status,2, status,0, cstack
 35262 ;; Tracked objects:
 35263 ;;		On entry : 0/0
 35264 ;;		On exit  : 0/0
 35265 ;;		Unchanged: 0/0
 35266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35267 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35270 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35271 ;;Total ram usage:        9 bytes
 35272 ;; Hardware stack levels used:    1
 35273 ;; Hardware stack levels required when called:    5
 35274 ;; This function calls:
 35275 ;;		__flash_compare_page_to_buffer
 35276 ;;		__flash_copy_page_to_buffer
 35277 ;;		__flash_write_page_from_buffer
 35278 ;;		__flash_write_to_buffer
 35279 ;;		_flash_is_busy
 35280 ;;		_spi_set_configuration
 35281 ;; This function is called by:
 35282 ;;		__write_fat
 35283 ;;		__write_root
 35284 ;;		__delete_root
 35285 ;;		_fat_append_to_file
 35286 ;;		__write_file_size
 35287 ;; This function uses a non-reentrant model
 35288 ;;
 35289                           
 35290                           	psect	text180
 35291  006530                     __ptext180:
 35292                           	opt stack 0
 35293  006530                     _flash_partial_write:
 35294                           	opt stack 19
 35295                           
 35296                           ;flash.c: 470: flashMatchResult_t match;;flash.c: 473: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 35297                           
 35298                           ;incstack = 0
 35299  006530  0E00               	movlw	0
 35300  006532  EC6E  F035         	call	_spi_set_configuration
 35301  006536  EC34  F03D         	call	_flash_is_busy	;wreg free
 35302  00653A  0900               	iorlw	0
 35303  00653C  A4D8               	btfss	status,2,c
 35304  00653E  D7FB               	goto	l1704
 35305                           
 35306                           ;flash.c: 479: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 35307  006540  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 35308  006544  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 35309  006548  0E00               	movlw	0
 35310  00654A  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 35311  00654C  ECA9  F036         	call	__flash_copy_page_to_buffer	;wreg free
 35312                           
 35313                           ;flash.c: 482: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 35314  006550  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 35315  006554  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 35316  006558  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 35317  00655C  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 35318  006560  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 35319  006564  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 35320  006568  0E00               	movlw	0
 35321  00656A  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 35322  00656C  EC50  F038         	call	__flash_write_to_buffer	;wreg free
 35323                           
 35324                           ;flash.c: 485: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 35325  006570  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 35326  006574  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 35327  006578  0E00               	movlw	0
 35328  00657A  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 35329  00657C  ECC6  F030         	call	__flash_compare_page_to_buffer	;wreg free
 35330  006580  6E28               	movwf	flash_partial_write@match,c
 35331                           
 35332                           ;flash.c: 488: if(match==DATA_DOES_NOT_MATCH)
 35333  006582  0428               	decf	flash_partial_write@match,w,c
 35334  006584  A4D8               	btfss	status,2,c
 35335  006586  D008               	goto	l1706
 35336                           
 35337                           ;flash.c: 489: {;flash.c: 490: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 35338  006588  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 35339  00658C  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 35340  006590  0E00               	movlw	0
 35341  006592  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 35342  006594  EC7D  F036         	call	__flash_write_page_from_buffer	;wreg free
 35343  006598                     l1706:
 35344                           
 35345                           ;flash.c: 491: };flash.c: 494: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 35346  006598  0E01               	movlw	1
 35347  00659A  EC6E  F035         	call	_spi_set_configuration
 35348  00659E  0012               	return		;funcret
 35349  0065A0                     __end_of_flash_partial_write:
 35350                           	opt stack 0
 35351                           tosu	equ	0xFFF
 35352                           tosh	equ	0xFFE
 35353                           tosl	equ	0xFFD
 35354                           pclath	equ	0xFFA
 35355                           tblptru	equ	0xFF8
 35356                           tblptrh	equ	0xFF7
 35357                           tblptrl	equ	0xFF6
 35358                           tablat	equ	0xFF5
 35359                           prodh	equ	0xFF4
 35360                           prodl	equ	0xFF3
 35361                           intcon	equ	0xFF2
 35362                           intcon2	equ	0xFF1
 35363                           intcon3	equ	0xFF0
 35364                           indf0	equ	0xFEF
 35365                           postinc0	equ	0xFEE
 35366                           fsr0h	equ	0xFEA
 35367                           fsr0l	equ	0xFE9
 35368                           wreg	equ	0xFE8
 35369                           indf1	equ	0xFE7
 35370                           postdec1	equ	0xFE5
 35371                           plusw1	equ	0xFE3
 35372                           fsr1h	equ	0xFE2
 35373                           fsr1l	equ	0xFE1
 35374                           indf2	equ	0xFDF
 35375                           postinc2	equ	0xFDE
 35376                           postdec2	equ	0xFDD
 35377                           plusw2	equ	0xFDB
 35378                           fsr2h	equ	0xFDA
 35379                           fsr2l	equ	0xFD9
 35380                           status	equ	0xFD8
 35381                           
 35382 ;; *************** function __flash_write_to_buffer *****************
 35383 ;; Defined at:
 35384 ;;		line 232 in file "flash.c"
 35385 ;; Parameters:    Size  Location     Type
 35386 ;;  start           2   19[COMRAM] unsigned int 
 35387 ;;  data            2   21[COMRAM] PTR unsigned char 
 35388 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35389 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 35390 ;;		 -> RAM(3759), 
 35391 ;;  data_length     2   23[COMRAM] unsigned int 
 35392 ;;  buffer          1   25[COMRAM] enum E6874
 35393 ;; Auto vars:     Size  Location     Type
 35394 ;;  command         4   26[COMRAM] unsigned char [4]
 35395 ;; Return value:  Size  Location     Type
 35396 ;;                  1    wreg      void 
 35397 ;; Registers used:
 35398 ;;		wreg, status,2, status,0, cstack
 35399 ;; Tracked objects:
 35400 ;;		On entry : 0/0
 35401 ;;		On exit  : 0/0
 35402 ;;		Unchanged: 0/0
 35403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35404 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35405 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35407 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35408 ;;Total ram usage:       11 bytes
 35409 ;; Hardware stack levels used:    1
 35410 ;; Hardware stack levels required when called:    4
 35411 ;; This function calls:
 35412 ;;		__flash_is_busy
 35413 ;;		_spi_tx_tx
 35414 ;; This function is called by:
 35415 ;;		_flash_page_write
 35416 ;;		_flash_partial_write
 35417 ;; This function uses a non-reentrant model
 35418 ;;
 35419                           
 35420                           	psect	text181
 35421  0070A0                     __ptext181:
 35422                           	opt stack 0
 35423  0070A0                     __flash_write_to_buffer:
 35424                           	opt stack 22
 35425                           
 35426                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 35427                           
 35428                           ;incstack = 0
 35429  0070A0  ECB7  F03C         	call	__flash_is_busy	;wreg free
 35430  0070A4  0900               	iorlw	0
 35431  0070A6  A4D8               	btfss	status,2,c
 35432  0070A8  D7FB               	goto	__flash_write_to_buffer
 35433                           
 35434                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 35435  0070AA  501A               	movf	__flash_write_to_buffer@buffer,w,c
 35436  0070AC  A4D8               	btfss	status,2,c
 35437  0070AE  D002               	goto	l1645
 35438                           
 35439                           ;flash.c: 241: command[0] = 0x84;
 35440  0070B0  0E84               	movlw	132
 35441  0070B2  6E1B               	movwf	__flash_write_to_buffer@command,c
 35442  0070B4                     l1645:
 35443                           
 35444                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 35445  0070B4  041A               	decf	__flash_write_to_buffer@buffer,w,c
 35446  0070B6  A4D8               	btfss	status,2,c
 35447  0070B8  D002               	goto	l1646
 35448                           
 35449                           ;flash.c: 243: command[0] = 0x87;
 35450  0070BA  0E87               	movlw	135
 35451  0070BC  6E1B               	movwf	__flash_write_to_buffer@command,c
 35452  0070BE                     l1646:
 35453                           
 35454                           ;flash.c: 245: command[1] = 0x00;
 35455  0070BE  0E00               	movlw	0
 35456  0070C0  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 35457                           
 35458                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 35459  0070C2  5015               	movf	__flash_write_to_buffer@start+1,w,c
 35460  0070C4  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 35461                           
 35462                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 35463  0070C6  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 35464                           
 35465                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 35466  0070CA  0E1B               	movlw	low __flash_write_to_buffer@command
 35467  0070CC  6E01               	movwf	spi_tx_tx@command,c
 35468  0070CE  0E00               	movlw	high __flash_write_to_buffer@command
 35469  0070D0  6E02               	movwf	spi_tx_tx@command+1,c
 35470  0070D2  0E00               	movlw	0
 35471  0070D4  6E04               	movwf	spi_tx_tx@command_length+1,c
 35472  0070D6  0E04               	movlw	4
 35473  0070D8  6E03               	movwf	spi_tx_tx@command_length,c
 35474  0070DA  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 35475  0070DE  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 35476  0070E2  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 35477  0070E6  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 35478  0070EA  ECE8  F02D         	call	_spi_tx_tx	;wreg free
 35479  0070EE  0012               	return		;funcret
 35480  0070F0                     __end_of__flash_write_to_buffer:
 35481                           	opt stack 0
 35482                           tosu	equ	0xFFF
 35483                           tosh	equ	0xFFE
 35484                           tosl	equ	0xFFD
 35485                           pclath	equ	0xFFA
 35486                           tblptru	equ	0xFF8
 35487                           tblptrh	equ	0xFF7
 35488                           tblptrl	equ	0xFF6
 35489                           tablat	equ	0xFF5
 35490                           prodh	equ	0xFF4
 35491                           prodl	equ	0xFF3
 35492                           intcon	equ	0xFF2
 35493                           intcon2	equ	0xFF1
 35494                           intcon3	equ	0xFF0
 35495                           indf0	equ	0xFEF
 35496                           postinc0	equ	0xFEE
 35497                           fsr0h	equ	0xFEA
 35498                           fsr0l	equ	0xFE9
 35499                           wreg	equ	0xFE8
 35500                           indf1	equ	0xFE7
 35501                           postdec1	equ	0xFE5
 35502                           plusw1	equ	0xFE3
 35503                           fsr1h	equ	0xFE2
 35504                           fsr1l	equ	0xFE1
 35505                           indf2	equ	0xFDF
 35506                           postinc2	equ	0xFDE
 35507                           postdec2	equ	0xFDD
 35508                           plusw2	equ	0xFDB
 35509                           fsr2h	equ	0xFDA
 35510                           fsr2l	equ	0xFD9
 35511                           status	equ	0xFD8
 35512                           
 35513 ;; *************** function _spi_tx_tx *****************
 35514 ;; Defined at:
 35515 ;;		line 244 in file "spi.c"
 35516 ;; Parameters:    Size  Location     Type
 35517 ;;  command         2    0[COMRAM] PTR unsigned char 
 35518 ;;		 -> _flash_write_to_buffer@command(4), 
 35519 ;;  command_leng    2    2[COMRAM] unsigned int 
 35520 ;;  data            2    4[COMRAM] PTR unsigned char 
 35521 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35522 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 35523 ;;		 -> RAM(3759), 
 35524 ;;  data_length     2    6[COMRAM] unsigned int 
 35525 ;; Auto vars:     Size  Location     Type
 35526 ;;		None
 35527 ;; Return value:  Size  Location     Type
 35528 ;;                  1    wreg      void 
 35529 ;; Registers used:
 35530 ;;		wreg, status,2, status,0, cstack
 35531 ;; Tracked objects:
 35532 ;;		On entry : 0/0
 35533 ;;		On exit  : 0/0
 35534 ;;		Unchanged: 0/0
 35535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35536 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35538 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35539 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35540 ;;Total ram usage:       12 bytes
 35541 ;; Hardware stack levels used:    1
 35542 ;; Hardware stack levels required when called:    1
 35543 ;; This function calls:
 35544 ;;		__switch_mastermode
 35545 ;; This function is called by:
 35546 ;;		__flash_write_to_buffer
 35547 ;; This function uses a non-reentrant model
 35548 ;;
 35549                           
 35550                           	psect	text182
 35551  005BD0                     __ptext182:
 35552                           	opt stack 0
 35553  005BD0                     _spi_tx_tx:
 35554                           	opt stack 24
 35555                           
 35556                           ;spi.c: 247: _switch_mastermode();
 35557                           
 35558                           ;incstack = 0
 35559  005BD0  ECE7  F03D         	call	__switch_mastermode	;wreg free
 35560                           
 35561                           ;spi.c: 250: DMACON1bits.SSCON1 = 0;
 35562  005BD4  9E88               	bcf	3976,7,c	;volatile
 35563                           
 35564                           ;spi.c: 251: DMACON1bits.SSCON0 = 0;
 35565  005BD6  9C88               	bcf	3976,6,c	;volatile
 35566                           
 35567                           ;spi.c: 253: DMACON1bits.TXINC = 1;
 35568  005BD8  8A88               	bsf	3976,5,c	;volatile
 35569                           
 35570                           ;spi.c: 255: DMACON1bits.RXINC = 0;
 35571  005BDA  9888               	bcf	3976,4,c	;volatile
 35572                           
 35573                           ;spi.c: 257: DMACON1bits.DUPLEX1 = 0;
 35574  005BDC  9688               	bcf	3976,3,c	;volatile
 35575                           
 35576                           ;spi.c: 258: DMACON1bits.DUPLEX0 = 1;
 35577  005BDE  8488               	bsf	3976,2,c	;volatile
 35578                           
 35579                           ;spi.c: 260: DMACON1bits.DLYINTEN = 0;
 35580  005BE0  9288               	bcf	3976,1,c	;volatile
 35581                           
 35582                           ;spi.c: 262: DMACON2bits.DLYCYC = 0b0000;
 35583  005BE2  9886               	bcf	3974,4,c	;volatile
 35584  005BE4  9A86               	bcf	3974,5,c	;volatile
 35585  005BE6  9C86               	bcf	3974,6,c	;volatile
 35586  005BE8  9E86               	bcf	3974,7,c	;volatile
 35587                           
 35588                           ;spi.c: 264: DMACON2bits.INTLVL = 0b0000;
 35589  005BEA  9086               	bcf	3974,0,c	;volatile
 35590  005BEC  9286               	bcf	3974,1,c	;volatile
 35591  005BEE  9486               	bcf	3974,2,c	;volatile
 35592  005BF0  9686               	bcf	3974,3,c	;volatile
 35593                           
 35594                           ;spi.c: 267: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35595  005BF2  5002               	movf	spi_tx_tx@command+1,w,c
 35596  005BF4  6E6A               	movwf	3946,c	;volatile
 35597                           
 35598                           ;spi.c: 268: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35599  005BF6  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 35600                           
 35601                           ;spi.c: 271: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35602  005BFA  0EFF               	movlw	255
 35603  005BFC  6E09               	movwf	??_spi_tx_tx& (0+255),c
 35604  005BFE  0EFF               	movlw	255
 35605  005C00  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 35606  005C02  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 35607  005C06  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 35608  005C0A  5009               	movf	??_spi_tx_tx,w,c
 35609  005C0C  260B               	addwf	??_spi_tx_tx+2,f,c
 35610  005C0E  500A               	movf	??_spi_tx_tx+1,w,c
 35611  005C10  220C               	addwfc	??_spi_tx_tx+3,f,c
 35612  005C12  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 35613  005C16  6A0C               	clrf	??_spi_tx_tx+3,c
 35614  005C18  500B               	movf	??_spi_tx_tx+2,w,c
 35615  005C1A  6E66               	movwf	3942,c	;volatile
 35616                           
 35617                           ;spi.c: 272: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35618  005C1C  0403               	decf	spi_tx_tx@command_length,w,c
 35619  005C1E  6E67               	movwf	3943,c	;volatile
 35620                           
 35621                           ;spi.c: 275: LATDbits.LD7 = 0;
 35622  005C20  9E8C               	bcf	3980,7,c	;volatile
 35623                           
 35624                           ;spi.c: 278: DMACON1bits.DMAEN = 1;
 35625  005C22  8088               	bsf	3976,0,c	;volatile
 35626  005C24  B088               	btfsc	3976,0,c	;volatile
 35627  005C26  D7FE               	goto	l2658
 35628                           
 35629                           ;spi.c: 282: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35630  005C28  5006               	movf	spi_tx_tx@data+1,w,c
 35631  005C2A  6E6A               	movwf	3946,c	;volatile
 35632                           
 35633                           ;spi.c: 283: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35634  005C2C  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 35635                           
 35636                           ;spi.c: 286: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35637  005C30  0EFF               	movlw	255
 35638  005C32  6E09               	movwf	??_spi_tx_tx& (0+255),c
 35639  005C34  0EFF               	movlw	255
 35640  005C36  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 35641  005C38  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 35642  005C3C  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 35643  005C40  5009               	movf	??_spi_tx_tx,w,c
 35644  005C42  260B               	addwf	??_spi_tx_tx+2,f,c
 35645  005C44  500A               	movf	??_spi_tx_tx+1,w,c
 35646  005C46  220C               	addwfc	??_spi_tx_tx+3,f,c
 35647  005C48  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 35648  005C4C  6A0C               	clrf	??_spi_tx_tx+3,c
 35649  005C4E  500B               	movf	??_spi_tx_tx+2,w,c
 35650  005C50  6E66               	movwf	3942,c	;volatile
 35651                           
 35652                           ;spi.c: 287: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35653  005C52  0407               	decf	spi_tx_tx@data_length,w,c
 35654  005C54  6E67               	movwf	3943,c	;volatile
 35655                           
 35656                           ;spi.c: 290: DMACON1bits.DMAEN = 1;
 35657  005C56  8088               	bsf	3976,0,c	;volatile
 35658  005C58  B088               	btfsc	3976,0,c	;volatile
 35659  005C5A  D7FE               	goto	l2661
 35660                           
 35661                           ;spi.c: 294: LATDbits.LD7 = 1;
 35662  005C5C  8E8C               	bsf	3980,7,c	;volatile
 35663  005C5E  0012               	return		;funcret
 35664  005C60                     __end_of_spi_tx_tx:
 35665                           	opt stack 0
 35666                           tosu	equ	0xFFF
 35667                           tosh	equ	0xFFE
 35668                           tosl	equ	0xFFD
 35669                           pclath	equ	0xFFA
 35670                           tblptru	equ	0xFF8
 35671                           tblptrh	equ	0xFF7
 35672                           tblptrl	equ	0xFF6
 35673                           tablat	equ	0xFF5
 35674                           prodh	equ	0xFF4
 35675                           prodl	equ	0xFF3
 35676                           intcon	equ	0xFF2
 35677                           intcon2	equ	0xFF1
 35678                           intcon3	equ	0xFF0
 35679                           indf0	equ	0xFEF
 35680                           postinc0	equ	0xFEE
 35681                           fsr0h	equ	0xFEA
 35682                           fsr0l	equ	0xFE9
 35683                           wreg	equ	0xFE8
 35684                           indf1	equ	0xFE7
 35685                           postdec1	equ	0xFE5
 35686                           plusw1	equ	0xFE3
 35687                           fsr1h	equ	0xFE2
 35688                           fsr1l	equ	0xFE1
 35689                           indf2	equ	0xFDF
 35690                           postinc2	equ	0xFDE
 35691                           postdec2	equ	0xFDD
 35692                           plusw2	equ	0xFDB
 35693                           fsr2h	equ	0xFDA
 35694                           fsr2l	equ	0xFD9
 35695                           status	equ	0xFD8
 35696                           
 35697 ;; *************** function __flash_write_page_from_buffer *****************
 35698 ;; Defined at:
 35699 ;;		line 254 in file "flash.c"
 35700 ;; Parameters:    Size  Location     Type
 35701 ;;  page            2   19[COMRAM] unsigned int 
 35702 ;;  buffer          1   21[COMRAM] enum E6874
 35703 ;; Auto vars:     Size  Location     Type
 35704 ;;  command         4   25[COMRAM] unsigned char [4]
 35705 ;; Return value:  Size  Location     Type
 35706 ;;                  1    wreg      void 
 35707 ;; Registers used:
 35708 ;;		wreg, status,2, status,0, cstack
 35709 ;; Tracked objects:
 35710 ;;		On entry : 0/0
 35711 ;;		On exit  : 0/0
 35712 ;;		Unchanged: 0/0
 35713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35715 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35717 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35718 ;;Total ram usage:       10 bytes
 35719 ;; Hardware stack levels used:    1
 35720 ;; Hardware stack levels required when called:    4
 35721 ;; This function calls:
 35722 ;;		__flash_is_busy
 35723 ;;		_spi_tx
 35724 ;; This function is called by:
 35725 ;;		_flash_page_write
 35726 ;;		_flash_partial_write
 35727 ;; This function uses a non-reentrant model
 35728 ;;
 35729                           
 35730                           	psect	text183
 35731  006CFA                     __ptext183:
 35732                           	opt stack 0
 35733  006CFA                     __flash_write_page_from_buffer:
 35734                           	opt stack 22
 35735                           
 35736                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 35737                           
 35738                           ;incstack = 0
 35739  006CFA  ECB7  F03C         	call	__flash_is_busy	;wreg free
 35740  006CFE  0900               	iorlw	0
 35741  006D00  A4D8               	btfss	status,2,c
 35742  006D02  D7FB               	goto	__flash_write_page_from_buffer
 35743                           
 35744                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 35745  006D04  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 35746  006D06  A4D8               	btfss	status,2,c
 35747  006D08  D002               	goto	l1653
 35748                           
 35749                           ;flash.c: 263: command[0] = 0x83;
 35750  006D0A  0E83               	movlw	131
 35751  006D0C  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 35752  006D0E                     l1653:
 35753                           
 35754                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 35755  006D0E  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 35756  006D10  A4D8               	btfss	status,2,c
 35757  006D12  D002               	goto	l1654
 35758                           
 35759                           ;flash.c: 265: command[0] = 0x86;
 35760  006D14  0E86               	movlw	134
 35761  006D16  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 35762  006D18                     l1654:
 35763                           
 35764                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35765  006D18  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 35766  006D1C  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 35767  006D20  0E07               	movlw	7
 35768  006D22  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 35769  006D24                     u6145:
 35770  006D24  90D8               	bcf	status,0,c
 35771  006D26  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 35772  006D28  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 35773  006D2A  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 35774  006D2C  D7FB               	goto	u6145
 35775  006D2E  5017               	movf	??__flash_write_page_from_buffer,w,c
 35776  006D30  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 35777                           
 35778                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 35779  006D32  5014               	movf	__flash_write_page_from_buffer@page,w,c
 35780  006D34  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 35781  006D36  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 35782                           
 35783                           ;flash.c: 269: command[3] = 0x00;
 35784  006D38  0E00               	movlw	0
 35785  006D3A  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 35786                           
 35787                           ;flash.c: 272: spi_tx(command, 4);
 35788  006D3C  0E1A               	movlw	low __flash_write_page_from_buffer@command
 35789  006D3E  6E01               	movwf	spi_tx@data,c
 35790  006D40  0E00               	movlw	high __flash_write_page_from_buffer@command
 35791  006D42  6E02               	movwf	spi_tx@data+1,c
 35792  006D44  0E00               	movlw	0
 35793  006D46  6E04               	movwf	spi_tx@length+1,c
 35794  006D48  0E04               	movlw	4
 35795  006D4A  6E03               	movwf	spi_tx@length,c
 35796  006D4C  ECCB  F035         	call	_spi_tx	;wreg free
 35797  006D50  0012               	return		;funcret
 35798  006D52                     __end_of__flash_write_page_from_buffer:
 35799                           	opt stack 0
 35800                           tosu	equ	0xFFF
 35801                           tosh	equ	0xFFE
 35802                           tosl	equ	0xFFD
 35803                           pclath	equ	0xFFA
 35804                           tblptru	equ	0xFF8
 35805                           tblptrh	equ	0xFF7
 35806                           tblptrl	equ	0xFF6
 35807                           tablat	equ	0xFF5
 35808                           prodh	equ	0xFF4
 35809                           prodl	equ	0xFF3
 35810                           intcon	equ	0xFF2
 35811                           intcon2	equ	0xFF1
 35812                           intcon3	equ	0xFF0
 35813                           indf0	equ	0xFEF
 35814                           postinc0	equ	0xFEE
 35815                           fsr0h	equ	0xFEA
 35816                           fsr0l	equ	0xFE9
 35817                           wreg	equ	0xFE8
 35818                           indf1	equ	0xFE7
 35819                           postdec1	equ	0xFE5
 35820                           plusw1	equ	0xFE3
 35821                           fsr1h	equ	0xFE2
 35822                           fsr1l	equ	0xFE1
 35823                           indf2	equ	0xFDF
 35824                           postinc2	equ	0xFDE
 35825                           postdec2	equ	0xFDD
 35826                           plusw2	equ	0xFDB
 35827                           fsr2h	equ	0xFDA
 35828                           fsr2l	equ	0xFD9
 35829                           status	equ	0xFD8
 35830                           
 35831 ;; *************** function __flash_copy_page_to_buffer *****************
 35832 ;; Defined at:
 35833 ;;		line 150 in file "flash.c"
 35834 ;; Parameters:    Size  Location     Type
 35835 ;;  page            2   19[COMRAM] unsigned int 
 35836 ;;  buffer          1   21[COMRAM] enum E6874
 35837 ;; Auto vars:     Size  Location     Type
 35838 ;;  command         4   25[COMRAM] unsigned char [4]
 35839 ;; Return value:  Size  Location     Type
 35840 ;;                  1    wreg      void 
 35841 ;; Registers used:
 35842 ;;		wreg, status,2, status,0, cstack
 35843 ;; Tracked objects:
 35844 ;;		On entry : 0/0
 35845 ;;		On exit  : 0/0
 35846 ;;		Unchanged: 0/0
 35847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35848 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35851 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35852 ;;Total ram usage:       10 bytes
 35853 ;; Hardware stack levels used:    1
 35854 ;; Hardware stack levels required when called:    4
 35855 ;; This function calls:
 35856 ;;		__flash_is_busy
 35857 ;;		_spi_tx
 35858 ;; This function is called by:
 35859 ;;		_flash_partial_write
 35860 ;; This function uses a non-reentrant model
 35861 ;;
 35862                           
 35863                           	psect	text184
 35864  006D52                     __ptext184:
 35865                           	opt stack 0
 35866  006D52                     __flash_copy_page_to_buffer:
 35867                           	opt stack 19
 35868                           
 35869                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 35870                           
 35871                           ;incstack = 0
 35872  006D52  ECB7  F03C         	call	__flash_is_busy	;wreg free
 35873  006D56  0900               	iorlw	0
 35874  006D58  A4D8               	btfss	status,2,c
 35875  006D5A  D7FB               	goto	__flash_copy_page_to_buffer
 35876                           
 35877                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 35878  006D5C  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 35879  006D5E  A4D8               	btfss	status,2,c
 35880  006D60  D002               	goto	l1618
 35881                           
 35882                           ;flash.c: 159: command[0] = 0x53;
 35883  006D62  0E53               	movlw	83
 35884  006D64  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 35885  006D66                     l1618:
 35886                           
 35887                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 35888  006D66  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 35889  006D68  A4D8               	btfss	status,2,c
 35890  006D6A  D002               	goto	l1619
 35891                           
 35892                           ;flash.c: 161: command[0] = 0x55;
 35893  006D6C  0E55               	movlw	85
 35894  006D6E  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 35895  006D70                     l1619:
 35896                           
 35897                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35898  006D70  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 35899  006D74  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 35900  006D78  0E07               	movlw	7
 35901  006D7A  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 35902  006D7C                     u6345:
 35903  006D7C  90D8               	bcf	status,0,c
 35904  006D7E  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 35905  006D80  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 35906  006D82  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 35907  006D84  D7FB               	goto	u6345
 35908  006D86  5017               	movf	??__flash_copy_page_to_buffer,w,c
 35909  006D88  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 35910                           
 35911                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 35912  006D8A  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 35913  006D8C  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 35914  006D8E  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 35915                           
 35916                           ;flash.c: 165: command[3] = 0x00;
 35917  006D90  0E00               	movlw	0
 35918  006D92  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 35919                           
 35920                           ;flash.c: 168: spi_tx(command, 4);
 35921  006D94  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 35922  006D96  6E01               	movwf	spi_tx@data,c
 35923  006D98  0E00               	movlw	high __flash_copy_page_to_buffer@command
 35924  006D9A  6E02               	movwf	spi_tx@data+1,c
 35925  006D9C  0E00               	movlw	0
 35926  006D9E  6E04               	movwf	spi_tx@length+1,c
 35927  006DA0  0E04               	movlw	4
 35928  006DA2  6E03               	movwf	spi_tx@length,c
 35929  006DA4  ECCB  F035         	call	_spi_tx	;wreg free
 35930  006DA8  0012               	return		;funcret
 35931  006DAA                     __end_of__flash_copy_page_to_buffer:
 35932                           	opt stack 0
 35933                           tosu	equ	0xFFF
 35934                           tosh	equ	0xFFE
 35935                           tosl	equ	0xFFD
 35936                           pclath	equ	0xFFA
 35937                           tblptru	equ	0xFF8
 35938                           tblptrh	equ	0xFF7
 35939                           tblptrl	equ	0xFF6
 35940                           tablat	equ	0xFF5
 35941                           prodh	equ	0xFF4
 35942                           prodl	equ	0xFF3
 35943                           intcon	equ	0xFF2
 35944                           intcon2	equ	0xFF1
 35945                           intcon3	equ	0xFF0
 35946                           indf0	equ	0xFEF
 35947                           postinc0	equ	0xFEE
 35948                           fsr0h	equ	0xFEA
 35949                           fsr0l	equ	0xFE9
 35950                           wreg	equ	0xFE8
 35951                           indf1	equ	0xFE7
 35952                           postdec1	equ	0xFE5
 35953                           plusw1	equ	0xFE3
 35954                           fsr1h	equ	0xFE2
 35955                           fsr1l	equ	0xFE1
 35956                           indf2	equ	0xFDF
 35957                           postinc2	equ	0xFDE
 35958                           postdec2	equ	0xFDD
 35959                           plusw2	equ	0xFDB
 35960                           fsr2h	equ	0xFDA
 35961                           fsr2l	equ	0xFD9
 35962                           status	equ	0xFD8
 35963                           
 35964 ;; *************** function __flash_compare_page_to_buffer *****************
 35965 ;; Defined at:
 35966 ;;		line 172 in file "flash.c"
 35967 ;; Parameters:    Size  Location     Type
 35968 ;;  page            2   19[COMRAM] unsigned int 
 35969 ;;  buffer          1   21[COMRAM] enum E6874
 35970 ;; Auto vars:     Size  Location     Type
 35971 ;;  command         4   27[COMRAM] unsigned char [4]
 35972 ;;  status          2   25[COMRAM] unsigned int 
 35973 ;; Return value:  Size  Location     Type
 35974 ;;                  1    wreg      enum E6878
 35975 ;; Registers used:
 35976 ;;		wreg, status,2, status,0, cstack
 35977 ;; Tracked objects:
 35978 ;;		On entry : 0/0
 35979 ;;		On exit  : 0/0
 35980 ;;		Unchanged: 0/0
 35981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35982 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35983 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35984 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35985 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35986 ;;Total ram usage:       12 bytes
 35987 ;; Hardware stack levels used:    1
 35988 ;; Hardware stack levels required when called:    4
 35989 ;; This function calls:
 35990 ;;		__flash_get_status
 35991 ;;		__flash_is_busy
 35992 ;;		_spi_tx
 35993 ;; This function is called by:
 35994 ;;		_flash_page_write
 35995 ;;		_flash_partial_write
 35996 ;; This function uses a non-reentrant model
 35997 ;;
 35998                           
 35999                           	psect	text185
 36000  00618C                     __ptext185:
 36001                           	opt stack 0
 36002  00618C                     __flash_compare_page_to_buffer:
 36003                           	opt stack 22
 36004                           
 36005                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 36006                           
 36007                           ;incstack = 0
 36008  00618C  ECB7  F03C         	call	__flash_is_busy	;wreg free
 36009  006190  0900               	iorlw	0
 36010  006192  A4D8               	btfss	status,2,c
 36011  006194  D7FB               	goto	__flash_compare_page_to_buffer
 36012                           
 36013                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 36014  006196  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 36015  006198  A4D8               	btfss	status,2,c
 36016  00619A  D002               	goto	l1626
 36017                           
 36018                           ;flash.c: 182: command[0] = 0x60;
 36019  00619C  0E60               	movlw	96
 36020  00619E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36021  0061A0                     l1626:
 36022                           
 36023                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 36024  0061A0  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 36025  0061A2  A4D8               	btfss	status,2,c
 36026  0061A4  D002               	goto	l1627
 36027                           
 36028                           ;flash.c: 184: command[0] = 0x60;
 36029  0061A6  0E60               	movlw	96
 36030  0061A8  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36031  0061AA                     l1627:
 36032                           
 36033                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36034  0061AA  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 36035  0061AE  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 36036  0061B2  0E07               	movlw	7
 36037  0061B4  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 36038  0061B6                     u6055:
 36039  0061B6  90D8               	bcf	status,0,c
 36040  0061B8  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 36041  0061BA  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 36042  0061BC  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 36043  0061BE  D7FB               	goto	u6055
 36044  0061C0  5017               	movf	??__flash_compare_page_to_buffer,w,c
 36045  0061C2  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 36046                           
 36047                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 36048  0061C4  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 36049  0061C6  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 36050  0061C8  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 36051                           
 36052                           ;flash.c: 188: command[3] = 0x00;
 36053  0061CA  0E00               	movlw	0
 36054  0061CC  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 36055                           
 36056                           ;flash.c: 191: spi_tx(command, 4);
 36057  0061CE  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 36058  0061D0  6E01               	movwf	spi_tx@data,c
 36059  0061D2  0E00               	movlw	high __flash_compare_page_to_buffer@command
 36060  0061D4  6E02               	movwf	spi_tx@data+1,c
 36061  0061D6  0E00               	movlw	0
 36062  0061D8  6E04               	movwf	spi_tx@length+1,c
 36063  0061DA  0E04               	movlw	4
 36064  0061DC  6E03               	movwf	spi_tx@length,c
 36065  0061DE  ECCB  F035         	call	_spi_tx	;wreg free
 36066  0061E2  ECB7  F03C         	call	__flash_is_busy	;wreg free
 36067  0061E6  0900               	iorlw	0
 36068  0061E8  A4D8               	btfss	status,2,c
 36069  0061EA  D7FB               	goto	l1629
 36070                           
 36071                           ;flash.c: 197: status = _flash_get_status();
 36072  0061EC  EC4B  F03B         	call	__flash_get_status	;wreg free
 36073  0061F0  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 36074  0061F4  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 36075                           
 36076                           ;flash.c: 200: if(status & 0b0000000001000000)
 36077  0061F8  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 36078  0061FA  D002               	goto	l1631
 36079                           
 36080                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 36081  0061FC  0E01               	movlw	1
 36082                           
 36083                           ;flash.c: 204: }
 36084  0061FE  0012               	return	
 36085  006200                     l1631:
 36086                           
 36087                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 36088  006200  0E00               	movlw	0
 36089  006202  0012               	return	
 36090  006204                     __end_of__flash_compare_page_to_buffer:
 36091                           	opt stack 0
 36092                           tosu	equ	0xFFF
 36093                           tosh	equ	0xFFE
 36094                           tosl	equ	0xFFD
 36095                           pclath	equ	0xFFA
 36096                           tblptru	equ	0xFF8
 36097                           tblptrh	equ	0xFF7
 36098                           tblptrl	equ	0xFF6
 36099                           tablat	equ	0xFF5
 36100                           prodh	equ	0xFF4
 36101                           prodl	equ	0xFF3
 36102                           intcon	equ	0xFF2
 36103                           intcon2	equ	0xFF1
 36104                           intcon3	equ	0xFF0
 36105                           indf0	equ	0xFEF
 36106                           postinc0	equ	0xFEE
 36107                           fsr0h	equ	0xFEA
 36108                           fsr0l	equ	0xFE9
 36109                           wreg	equ	0xFE8
 36110                           indf1	equ	0xFE7
 36111                           postdec1	equ	0xFE5
 36112                           plusw1	equ	0xFE3
 36113                           fsr1h	equ	0xFE2
 36114                           fsr1l	equ	0xFE1
 36115                           indf2	equ	0xFDF
 36116                           postinc2	equ	0xFDE
 36117                           postdec2	equ	0xFDD
 36118                           plusw2	equ	0xFDB
 36119                           fsr2h	equ	0xFDA
 36120                           fsr2l	equ	0xFD9
 36121                           status	equ	0xFD8
 36122                           
 36123 ;; *************** function __update_modified_time *****************
 36124 ;; Defined at:
 36125 ;;		line 53 in file "fat16.c"
 36126 ;; Parameters:    Size  Location     Type
 36127 ;;  root            2    4[COMRAM] PTR struct .
 36128 ;;		 -> fat_append_to_file@root(32), 
 36129 ;; Auto vars:     Size  Location     Type
 36130 ;;		None
 36131 ;; Return value:  Size  Location     Type
 36132 ;;                  1    wreg      void 
 36133 ;; Registers used:
 36134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36135 ;; Tracked objects:
 36136 ;;		On entry : 0/0
 36137 ;;		On exit  : 0/0
 36138 ;;		Unchanged: 0/0
 36139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36144 ;;Total ram usage:        2 bytes
 36145 ;; Hardware stack levels used:    1
 36146 ;; Hardware stack levels required when called:    1
 36147 ;; This function calls:
 36148 ;;		__get_date
 36149 ;;		__get_time
 36150 ;; This function is called by:
 36151 ;;		_fat_append_to_file
 36152 ;; This function uses a non-reentrant model
 36153 ;;
 36154                           
 36155                           	psect	text186
 36156  007632                     __ptext186:
 36157                           	opt stack 0
 36158  007632                     __update_modified_time:
 36159                           	opt stack 24
 36160                           
 36161                           ;fat16.c: 55: root->modifiedDate = _get_date();
 36162                           
 36163                           ;incstack = 0
 36164  007632  ECBF  F03D         	call	__get_date	;wreg free
 36165  007636  EE20 F018          	lfsr	2,24
 36166  00763A  5005               	movf	__update_modified_time@root,w,c
 36167  00763C  26D9               	addwf	fsr2l,f,c
 36168  00763E  5006               	movf	__update_modified_time@root+1,w,c
 36169  007640  22DA               	addwfc	fsr2h,f,c
 36170  007642  C001  FFDE         	movff	?__get_date,postinc2
 36171  007646  C002  FFDD         	movff	?__get_date+1,postdec2
 36172                           
 36173                           ;fat16.c: 56: root->modifiedTime = _get_time();
 36174  00764A  ECBA  F03D         	call	__get_time	;wreg free
 36175  00764E  EE20 F016          	lfsr	2,22
 36176  007652  5005               	movf	__update_modified_time@root,w,c
 36177  007654  26D9               	addwf	fsr2l,f,c
 36178  007656  5006               	movf	__update_modified_time@root+1,w,c
 36179  007658  22DA               	addwfc	fsr2h,f,c
 36180  00765A  C001  FFDE         	movff	?__get_time,postinc2
 36181  00765E  C002  FFDD         	movff	?__get_time+1,postdec2
 36182  007662  0012               	return		;funcret
 36183  007664                     __end_of__update_modified_time:
 36184                           	opt stack 0
 36185                           tosu	equ	0xFFF
 36186                           tosh	equ	0xFFE
 36187                           tosl	equ	0xFFD
 36188                           pclath	equ	0xFFA
 36189                           tblptru	equ	0xFF8
 36190                           tblptrh	equ	0xFF7
 36191                           tblptrl	equ	0xFF6
 36192                           tablat	equ	0xFF5
 36193                           prodh	equ	0xFF4
 36194                           prodl	equ	0xFF3
 36195                           intcon	equ	0xFF2
 36196                           intcon2	equ	0xFF1
 36197                           intcon3	equ	0xFF0
 36198                           indf0	equ	0xFEF
 36199                           postinc0	equ	0xFEE
 36200                           fsr0h	equ	0xFEA
 36201                           fsr0l	equ	0xFE9
 36202                           wreg	equ	0xFE8
 36203                           indf1	equ	0xFE7
 36204                           postdec1	equ	0xFE5
 36205                           plusw1	equ	0xFE3
 36206                           fsr1h	equ	0xFE2
 36207                           fsr1l	equ	0xFE1
 36208                           indf2	equ	0xFDF
 36209                           postinc2	equ	0xFDE
 36210                           postdec2	equ	0xFDD
 36211                           plusw2	equ	0xFDB
 36212                           fsr2h	equ	0xFDA
 36213                           fsr2l	equ	0xFD9
 36214                           status	equ	0xFD8
 36215                           
 36216 ;; *************** function __get_time *****************
 36217 ;; Defined at:
 36218 ;;		line 29 in file "fat16.c"
 36219 ;; Parameters:    Size  Location     Type
 36220 ;;		None
 36221 ;; Auto vars:     Size  Location     Type
 36222 ;;  time            2    2[COMRAM] unsigned int 
 36223 ;; Return value:  Size  Location     Type
 36224 ;;                  2    0[COMRAM] unsigned int 
 36225 ;; Registers used:
 36226 ;;		None
 36227 ;; Tracked objects:
 36228 ;;		On entry : 0/0
 36229 ;;		On exit  : 0/0
 36230 ;;		Unchanged: 0/0
 36231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36235 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36236 ;;Total ram usage:        4 bytes
 36237 ;; Hardware stack levels used:    1
 36238 ;; This function calls:
 36239 ;;		Nothing
 36240 ;; This function is called by:
 36241 ;;		__update_modified_time
 36242 ;;		_fat_create_file
 36243 ;; This function uses a non-reentrant model
 36244 ;;
 36245                           
 36246                           	psect	text187
 36247  007B74                     __ptext187:
 36248                           	opt stack 0
 36249  007B74                     __get_time:
 36250                           	opt stack 25
 36251                           
 36252                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 36253                           
 36254                           ;incstack = 0
 36255  007B74  C003  F001         	movff	__get_time@time,?__get_time
 36256  007B78  C004  F002         	movff	__get_time@time+1,?__get_time+1
 36257  007B7C  0012               	return		;funcret
 36258  007B7E                     __end_of__get_time:
 36259                           	opt stack 0
 36260                           tosu	equ	0xFFF
 36261                           tosh	equ	0xFFE
 36262                           tosl	equ	0xFFD
 36263                           pclath	equ	0xFFA
 36264                           tblptru	equ	0xFF8
 36265                           tblptrh	equ	0xFF7
 36266                           tblptrl	equ	0xFF6
 36267                           tablat	equ	0xFF5
 36268                           prodh	equ	0xFF4
 36269                           prodl	equ	0xFF3
 36270                           intcon	equ	0xFF2
 36271                           intcon2	equ	0xFF1
 36272                           intcon3	equ	0xFF0
 36273                           indf0	equ	0xFEF
 36274                           postinc0	equ	0xFEE
 36275                           fsr0h	equ	0xFEA
 36276                           fsr0l	equ	0xFE9
 36277                           wreg	equ	0xFE8
 36278                           indf1	equ	0xFE7
 36279                           postdec1	equ	0xFE5
 36280                           plusw1	equ	0xFE3
 36281                           fsr1h	equ	0xFE2
 36282                           fsr1l	equ	0xFE1
 36283                           indf2	equ	0xFDF
 36284                           postinc2	equ	0xFDE
 36285                           postdec2	equ	0xFDD
 36286                           plusw2	equ	0xFDB
 36287                           fsr2h	equ	0xFDA
 36288                           fsr2l	equ	0xFD9
 36289                           status	equ	0xFD8
 36290                           
 36291 ;; *************** function __get_date *****************
 36292 ;; Defined at:
 36293 ;;		line 41 in file "fat16.c"
 36294 ;; Parameters:    Size  Location     Type
 36295 ;;		None
 36296 ;; Auto vars:     Size  Location     Type
 36297 ;;  date            2    2[COMRAM] unsigned int 
 36298 ;; Return value:  Size  Location     Type
 36299 ;;                  2    0[COMRAM] unsigned int 
 36300 ;; Registers used:
 36301 ;;		None
 36302 ;; Tracked objects:
 36303 ;;		On entry : 0/0
 36304 ;;		On exit  : 0/0
 36305 ;;		Unchanged: 0/0
 36306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36311 ;;Total ram usage:        4 bytes
 36312 ;; Hardware stack levels used:    1
 36313 ;; This function calls:
 36314 ;;		Nothing
 36315 ;; This function is called by:
 36316 ;;		__update_modified_time
 36317 ;;		_fat_create_file
 36318 ;; This function uses a non-reentrant model
 36319 ;;
 36320                           
 36321                           	psect	text188
 36322  007B7E                     __ptext188:
 36323                           	opt stack 0
 36324  007B7E                     __get_date:
 36325                           	opt stack 25
 36326                           
 36327                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 36328                           
 36329                           ;incstack = 0
 36330  007B7E  C003  F001         	movff	__get_date@date,?__get_date
 36331  007B82  C004  F002         	movff	__get_date@date+1,?__get_date+1
 36332  007B86  0012               	return		;funcret
 36333  007B88                     __end_of__get_date:
 36334                           	opt stack 0
 36335                           tosu	equ	0xFFF
 36336                           tosh	equ	0xFFE
 36337                           tosl	equ	0xFFD
 36338                           pclath	equ	0xFFA
 36339                           tblptru	equ	0xFF8
 36340                           tblptrh	equ	0xFF7
 36341                           tblptrl	equ	0xFF6
 36342                           tablat	equ	0xFF5
 36343                           prodh	equ	0xFF4
 36344                           prodl	equ	0xFF3
 36345                           intcon	equ	0xFF2
 36346                           intcon2	equ	0xFF1
 36347                           intcon3	equ	0xFF0
 36348                           indf0	equ	0xFEF
 36349                           postinc0	equ	0xFEE
 36350                           fsr0h	equ	0xFEA
 36351                           fsr0l	equ	0xFE9
 36352                           wreg	equ	0xFE8
 36353                           indf1	equ	0xFE7
 36354                           postdec1	equ	0xFE5
 36355                           plusw1	equ	0xFE3
 36356                           fsr1h	equ	0xFE2
 36357                           fsr1l	equ	0xFE1
 36358                           indf2	equ	0xFDF
 36359                           postinc2	equ	0xFDE
 36360                           postdec2	equ	0xFDD
 36361                           plusw2	equ	0xFDB
 36362                           fsr2h	equ	0xFDA
 36363                           fsr2l	equ	0xFD9
 36364                           status	equ	0xFD8
 36365                           
 36366 ;; *************** function __sector_from_cluster *****************
 36367 ;; Defined at:
 36368 ;;		line 443 in file "fat16.c"
 36369 ;; Parameters:    Size  Location     Type
 36370 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 36371 ;; Auto vars:     Size  Location     Type
 36372 ;;		None
 36373 ;; Return value:  Size  Location     Type
 36374 ;;                  2    0[COMRAM] unsigned int 
 36375 ;; Registers used:
 36376 ;;		wreg, status,2, status,0
 36377 ;; Tracked objects:
 36378 ;;		On entry : 0/0
 36379 ;;		On exit  : 0/0
 36380 ;;		Unchanged: 0/0
 36381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36386 ;;Total ram usage:        2 bytes
 36387 ;; Hardware stack levels used:    1
 36388 ;; This function calls:
 36389 ;;		Nothing
 36390 ;; This function is called by:
 36391 ;;		_fat_append_to_file
 36392 ;;		_fat_read_from_file
 36393 ;; This function uses a non-reentrant model
 36394 ;;
 36395                           
 36396                           	psect	text189
 36397  007AF6                     __ptext189:
 36398                           	opt stack 0
 36399  007AF6                     __sector_from_cluster:
 36400                           	opt stack 27
 36401                           
 36402                           ;fat16.c: 445: return fat_cluster + 22 - 2;
 36403                           
 36404                           ;incstack = 0
 36405  007AF6  0E14               	movlw	20
 36406  007AF8  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 36407  007AFA  6E01               	movwf	?__sector_from_cluster,c
 36408  007AFC  0E00               	movlw	0
 36409  007AFE  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 36410  007B00  6E02               	movwf	?__sector_from_cluster+1,c
 36411  007B02  0012               	return	
 36412  007B04                     __end_of__sector_from_cluster:
 36413                           	opt stack 0
 36414                           tosu	equ	0xFFF
 36415                           tosh	equ	0xFFE
 36416                           tosl	equ	0xFFD
 36417                           pclath	equ	0xFFA
 36418                           tblptru	equ	0xFF8
 36419                           tblptrh	equ	0xFF7
 36420                           tblptrl	equ	0xFF6
 36421                           tablat	equ	0xFF5
 36422                           prodh	equ	0xFF4
 36423                           prodl	equ	0xFF3
 36424                           intcon	equ	0xFF2
 36425                           intcon2	equ	0xFF1
 36426                           intcon3	equ	0xFF0
 36427                           indf0	equ	0xFEF
 36428                           postinc0	equ	0xFEE
 36429                           fsr0h	equ	0xFEA
 36430                           fsr0l	equ	0xFE9
 36431                           wreg	equ	0xFE8
 36432                           indf1	equ	0xFE7
 36433                           postdec1	equ	0xFE5
 36434                           plusw1	equ	0xFE3
 36435                           fsr1h	equ	0xFE2
 36436                           fsr1l	equ	0xFE1
 36437                           indf2	equ	0xFDF
 36438                           postinc2	equ	0xFDE
 36439                           postdec2	equ	0xFDD
 36440                           plusw2	equ	0xFDB
 36441                           fsr2h	equ	0xFDA
 36442                           fsr2l	equ	0xFD9
 36443                           status	equ	0xFD8
 36444                           
 36445 ;; *************** function __read_fat *****************
 36446 ;; Defined at:
 36447 ;;		line 169 in file "fat16.c"
 36448 ;; Parameters:    Size  Location     Type
 36449 ;;  cluster         2   48[COMRAM] unsigned int 
 36450 ;; Auto vars:     Size  Location     Type
 36451 ;;  value           2   54[COMRAM] unsigned int 
 36452 ;;  offset          2   52[COMRAM] unsigned int 
 36453 ;;  fat_sector      2   50[COMRAM] unsigned int 
 36454 ;; Return value:  Size  Location     Type
 36455 ;;                  2   48[COMRAM] unsigned int 
 36456 ;; Registers used:
 36457 ;;		wreg, status,2, status,0, cstack
 36458 ;; Tracked objects:
 36459 ;;		On entry : 0/0
 36460 ;;		On exit  : 0/0
 36461 ;;		Unchanged: 0/0
 36462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36464 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36466 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36467 ;;Total ram usage:        8 bytes
 36468 ;; Hardware stack levels used:    1
 36469 ;; Hardware stack levels required when called:    7
 36470 ;; This function calls:
 36471 ;;		_flash_partial_read
 36472 ;; This function is called by:
 36473 ;;		_fat_delete_file
 36474 ;;		_fat_append_to_file
 36475 ;;		_fat_read_from_file
 36476 ;; This function uses a non-reentrant model
 36477 ;;
 36478                           
 36479                           	psect	text190
 36480  0071CE                     __ptext190:
 36481                           	opt stack 0
 36482  0071CE                     __read_fat:
 36483                           	opt stack 20
 36484                           
 36485                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 36486                           
 36487                           ;incstack = 0
 36488  0071CE  5032               	movf	__read_fat@cluster+1,w,c
 36489  0071D0  6E33               	movwf	__read_fat@fat_sector,c
 36490  0071D2  6A34               	clrf	__read_fat@fat_sector+1,c
 36491                           
 36492                           ;fat16.c: 175: fat_sector += 2;
 36493  0071D4  0E02               	movlw	2
 36494  0071D6  2633               	addwf	__read_fat@fat_sector,f,c
 36495  0071D8  0E00               	movlw	0
 36496  0071DA  2234               	addwfc	__read_fat@fat_sector+1,f,c
 36497                           
 36498                           ;fat16.c: 176: offset = cluster & 0xFF;
 36499  0071DC  5031               	movf	__read_fat@cluster,w,c
 36500  0071DE  6E35               	movwf	__read_fat@offset,c
 36501  0071E0  6A36               	clrf	__read_fat@offset+1,c
 36502                           
 36503                           ;fat16.c: 177: offset <<= 1;
 36504  0071E2  90D8               	bcf	status,0,c
 36505  0071E4  3635               	rlcf	__read_fat@offset,f,c
 36506  0071E6  3636               	rlcf	__read_fat@offset+1,f,c
 36507                           
 36508                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 36509  0071E8  C033  F029         	movff	__read_fat@fat_sector,flash_partial_read@page
 36510  0071EC  C034  F02A         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 36511  0071F0  C035  F02B         	movff	__read_fat@offset,flash_partial_read@start
 36512  0071F4  C036  F02C         	movff	__read_fat@offset+1,flash_partial_read@start+1
 36513  0071F8  0E00               	movlw	0
 36514  0071FA  6E2E               	movwf	flash_partial_read@length+1,c
 36515  0071FC  0E02               	movlw	2
 36516  0071FE  6E2D               	movwf	flash_partial_read@length,c
 36517  007200  0E37               	movlw	low __read_fat@value
 36518  007202  6E2F               	movwf	flash_partial_read@data,c
 36519  007204  0E00               	movlw	high __read_fat@value
 36520  007206  6E30               	movwf	flash_partial_read@data+1,c
 36521  007208  EC32  F03B         	call	_flash_partial_read	;wreg free
 36522                           
 36523                           ;fat16.c: 179: return value;
 36524  00720C  C037  F031         	movff	__read_fat@value,?__read_fat
 36525  007210  C038  F032         	movff	__read_fat@value+1,?__read_fat+1
 36526  007214  0012               	return	
 36527  007216                     __end_of__read_fat:
 36528                           	opt stack 0
 36529                           tosu	equ	0xFFF
 36530                           tosh	equ	0xFFE
 36531                           tosl	equ	0xFFD
 36532                           pclath	equ	0xFFA
 36533                           tblptru	equ	0xFF8
 36534                           tblptrh	equ	0xFF7
 36535                           tblptrl	equ	0xFF6
 36536                           tablat	equ	0xFF5
 36537                           prodh	equ	0xFF4
 36538                           prodl	equ	0xFF3
 36539                           intcon	equ	0xFF2
 36540                           intcon2	equ	0xFF1
 36541                           intcon3	equ	0xFF0
 36542                           indf0	equ	0xFEF
 36543                           postinc0	equ	0xFEE
 36544                           fsr0h	equ	0xFEA
 36545                           fsr0l	equ	0xFE9
 36546                           wreg	equ	0xFE8
 36547                           indf1	equ	0xFE7
 36548                           postdec1	equ	0xFE5
 36549                           plusw1	equ	0xFE3
 36550                           fsr1h	equ	0xFE2
 36551                           fsr1l	equ	0xFE1
 36552                           indf2	equ	0xFDF
 36553                           postinc2	equ	0xFDE
 36554                           postdec2	equ	0xFDD
 36555                           plusw2	equ	0xFDB
 36556                           fsr2h	equ	0xFDA
 36557                           fsr2l	equ	0xFD9
 36558                           status	equ	0xFD8
 36559                           
 36560 ;; *************** function __get_empty_cluster *****************
 36561 ;; Defined at:
 36562 ;;		line 107 in file "fat16.c"
 36563 ;; Parameters:    Size  Location     Type
 36564 ;;  first_cluste    2   48[COMRAM] unsigned int 
 36565 ;; Auto vars:     Size  Location     Type
 36566 ;;  cluster         2   56[COMRAM] unsigned int 
 36567 ;;  value           2   54[COMRAM] unsigned int 
 36568 ;;  offset          2   52[COMRAM] unsigned int 
 36569 ;;  fat_sector      2   50[COMRAM] unsigned int 
 36570 ;; Return value:  Size  Location     Type
 36571 ;;                  2   48[COMRAM] unsigned int 
 36572 ;; Registers used:
 36573 ;;		wreg, status,2, status,0, cstack
 36574 ;; Tracked objects:
 36575 ;;		On entry : 0/0
 36576 ;;		On exit  : 0/0
 36577 ;;		Unchanged: 0/0
 36578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36580 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36582 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36583 ;;Total ram usage:       10 bytes
 36584 ;; Hardware stack levels used:    1
 36585 ;; Hardware stack levels required when called:    7
 36586 ;; This function calls:
 36587 ;;		_flash_partial_read
 36588 ;; This function is called by:
 36589 ;;		_fat_create_file
 36590 ;;		_fat_append_to_file
 36591 ;; This function uses a non-reentrant model
 36592 ;;
 36593                           
 36594                           	psect	text191
 36595  0063DA                     __ptext191:
 36596                           	opt stack 0
 36597  0063DA                     __get_empty_cluster:
 36598                           	opt stack 18
 36599                           
 36600                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(4074+2); ++cluster)
 36601                           
 36602                           ;incstack = 0
 36603  0063DA  C031  F039         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 36604  0063DE  C032  F03A         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 36605  0063E2                     l10197:
 36606  0063E2  0EEC               	movlw	236
 36607  0063E4  5C39               	subwf	__get_empty_cluster@cluster,w,c
 36608  0063E6  0E0F               	movlw	15
 36609  0063E8  583A               	subwfb	__get_empty_cluster@cluster+1,w,c
 36610  0063EA  B0D8               	btfsc	status,0,c
 36611  0063EC  D02B               	goto	u7460
 36612                           
 36613                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 36614  0063EE  503A               	movf	__get_empty_cluster@cluster+1,w,c
 36615  0063F0  6E33               	movwf	__get_empty_cluster@fat_sector,c
 36616  0063F2  6A34               	clrf	__get_empty_cluster@fat_sector+1,c
 36617                           
 36618                           ;fat16.c: 118: fat_sector += 2;
 36619  0063F4  0E02               	movlw	2
 36620  0063F6  2633               	addwf	__get_empty_cluster@fat_sector,f,c
 36621  0063F8  0E00               	movlw	0
 36622  0063FA  2234               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 36623                           
 36624                           ;fat16.c: 119: offset = cluster & 0xFF;
 36625  0063FC  5039               	movf	__get_empty_cluster@cluster,w,c
 36626  0063FE  6E35               	movwf	__get_empty_cluster@offset,c
 36627  006400  6A36               	clrf	__get_empty_cluster@offset+1,c
 36628                           
 36629                           ;fat16.c: 120: offset <<= 1;
 36630  006402  90D8               	bcf	status,0,c
 36631  006404  3635               	rlcf	__get_empty_cluster@offset,f,c
 36632  006406  3636               	rlcf	__get_empty_cluster@offset+1,f,c
 36633                           
 36634                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 36635  006408  C033  F029         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 36636  00640C  C034  F02A         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 36637  006410  C035  F02B         	movff	__get_empty_cluster@offset,flash_partial_read@start
 36638  006414  C036  F02C         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 36639  006418  0E00               	movlw	0
 36640  00641A  6E2E               	movwf	flash_partial_read@length+1,c
 36641  00641C  0E02               	movlw	2
 36642  00641E  6E2D               	movwf	flash_partial_read@length,c
 36643  006420  0E37               	movlw	low __get_empty_cluster@value
 36644  006422  6E2F               	movwf	flash_partial_read@data,c
 36645  006424  0E00               	movlw	high __get_empty_cluster@value
 36646  006426  6E30               	movwf	flash_partial_read@data+1,c
 36647  006428  EC32  F03B         	call	_flash_partial_read	;wreg free
 36648                           
 36649                           ;fat16.c: 122: if(value==0x0000)
 36650  00642C  5037               	movf	__get_empty_cluster@value,w,c
 36651  00642E  1038               	iorwf	__get_empty_cluster@value+1,w,c
 36652  006430  A4D8               	btfss	status,2,c
 36653  006432  D005               	goto	l1788
 36654                           
 36655                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 36656  006434  C039  F031         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 36657  006438  C03A  F032         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 36658  00643C  0012               	return	
 36659  00643E                     l1788:
 36660  00643E  4A39               	infsnz	__get_empty_cluster@cluster,f,c
 36661  006440  2A3A               	incf	__get_empty_cluster@cluster+1,f,c
 36662  006442  D7CF               	goto	l10197
 36663  006444                     u7460:
 36664                           
 36665                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 36666  006444  0E00               	movlw	0
 36667  006446  6E32               	movwf	?__get_empty_cluster+1,c
 36668  006448  0E00               	movlw	0
 36669  00644A  6E31               	movwf	?__get_empty_cluster,c
 36670  00644C  0012               	return	
 36671  00644E                     __end_of__get_empty_cluster:
 36672                           	opt stack 0
 36673                           tosu	equ	0xFFF
 36674                           tosh	equ	0xFFE
 36675                           tosl	equ	0xFFD
 36676                           pclath	equ	0xFFA
 36677                           tblptru	equ	0xFF8
 36678                           tblptrh	equ	0xFF7
 36679                           tblptrl	equ	0xFF6
 36680                           tablat	equ	0xFF5
 36681                           prodh	equ	0xFF4
 36682                           prodl	equ	0xFF3
 36683                           intcon	equ	0xFF2
 36684                           intcon2	equ	0xFF1
 36685                           intcon3	equ	0xFF0
 36686                           indf0	equ	0xFEF
 36687                           postinc0	equ	0xFEE
 36688                           fsr0h	equ	0xFEA
 36689                           fsr0l	equ	0xFE9
 36690                           wreg	equ	0xFE8
 36691                           indf1	equ	0xFE7
 36692                           postdec1	equ	0xFE5
 36693                           plusw1	equ	0xFE3
 36694                           fsr1h	equ	0xFE2
 36695                           fsr1l	equ	0xFE1
 36696                           indf2	equ	0xFDF
 36697                           postinc2	equ	0xFDE
 36698                           postdec2	equ	0xFDD
 36699                           plusw2	equ	0xFDB
 36700                           fsr2h	equ	0xFDA
 36701                           fsr2l	equ	0xFD9
 36702                           status	equ	0xFD8
 36703                           
 36704 ;; *************** function _flash_partial_read *****************
 36705 ;; Defined at:
 36706 ;;		line 454 in file "flash.c"
 36707 ;; Parameters:    Size  Location     Type
 36708 ;;  page            2   40[COMRAM] unsigned int 
 36709 ;;  start           2   42[COMRAM] unsigned int 
 36710 ;;  length          2   44[COMRAM] unsigned int 
 36711 ;;  data            2   46[COMRAM] PTR unsigned char 
 36712 ;;		 -> file_buffer(50), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 36713 ;;		 -> fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_
      +cluster(2), 
 36714 ;;		 -> _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(
      +1), 
 36715 ;;		 -> RAM(3759), 
 36716 ;; Auto vars:     Size  Location     Type
 36717 ;;		None
 36718 ;; Return value:  Size  Location     Type
 36719 ;;                  1    wreg      void 
 36720 ;; Registers used:
 36721 ;;		wreg, status,2, status,0, cstack
 36722 ;; Tracked objects:
 36723 ;;		On entry : 0/0
 36724 ;;		On exit  : 0/0
 36725 ;;		Unchanged: 0/0
 36726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36727 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36730 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36731 ;;Total ram usage:        8 bytes
 36732 ;; Hardware stack levels used:    1
 36733 ;; Hardware stack levels required when called:    6
 36734 ;; This function calls:
 36735 ;;		__flash_partial_read
 36736 ;;		_spi_set_configuration
 36737 ;; This function is called by:
 36738 ;;		__root_is_available
 36739 ;;		__get_empty_cluster
 36740 ;;		_fat_get_empty_clusters
 36741 ;;		__read_fat
 36742 ;;		__get_first_cluster
 36743 ;;		_fat_find_file
 36744 ;;		_fat_get_file_size
 36745 ;;		_fat_read_from_file
 36746 ;;		_fat_get_file_information
 36747 ;;		__get_file_size
 36748 ;; This function uses a non-reentrant model
 36749 ;;
 36750                           
 36751                           	psect	text192
 36752  007664                     __ptext192:
 36753                           	opt stack 0
 36754  007664                     _flash_partial_read:
 36755                           	opt stack 21
 36756                           
 36757                           ;flash.c: 457: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 36758                           
 36759                           ;incstack = 0
 36760  007664  0E00               	movlw	0
 36761  007666  EC6E  F035         	call	_spi_set_configuration
 36762                           
 36763                           ;flash.c: 460: _flash_partial_read(page, start, length, data);
 36764  00766A  C029  F015         	movff	flash_partial_read@page,__flash_partial_read@page
 36765  00766E  C02A  F016         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 36766  007672  C02B  F017         	movff	flash_partial_read@start,__flash_partial_read@start
 36767  007676  C02C  F018         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 36768  00767A  C02D  F019         	movff	flash_partial_read@length,__flash_partial_read@length
 36769  00767E  C02E  F01A         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 36770  007682  C02F  F01B         	movff	flash_partial_read@data,__flash_partial_read@data
 36771  007686  C030  F01C         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 36772  00768A  EC02  F031         	call	__flash_partial_read	;wreg free
 36773                           
 36774                           ;flash.c: 463: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36775  00768E  0E01               	movlw	1
 36776  007690  EC6E  F035         	call	_spi_set_configuration
 36777  007694  0012               	return		;funcret
 36778  007696                     __end_of_flash_partial_read:
 36779                           	opt stack 0
 36780                           tosu	equ	0xFFF
 36781                           tosh	equ	0xFFE
 36782                           tosl	equ	0xFFD
 36783                           pclath	equ	0xFFA
 36784                           tblptru	equ	0xFF8
 36785                           tblptrh	equ	0xFF7
 36786                           tblptrl	equ	0xFF6
 36787                           tablat	equ	0xFF5
 36788                           prodh	equ	0xFF4
 36789                           prodl	equ	0xFF3
 36790                           intcon	equ	0xFF2
 36791                           intcon2	equ	0xFF1
 36792                           intcon3	equ	0xFF0
 36793                           indf0	equ	0xFEF
 36794                           postinc0	equ	0xFEE
 36795                           fsr0h	equ	0xFEA
 36796                           fsr0l	equ	0xFE9
 36797                           wreg	equ	0xFE8
 36798                           indf1	equ	0xFE7
 36799                           postdec1	equ	0xFE5
 36800                           plusw1	equ	0xFE3
 36801                           fsr1h	equ	0xFE2
 36802                           fsr1l	equ	0xFE1
 36803                           indf2	equ	0xFDF
 36804                           postinc2	equ	0xFDE
 36805                           postdec2	equ	0xFDD
 36806                           plusw2	equ	0xFDB
 36807                           fsr2h	equ	0xFDA
 36808                           fsr2l	equ	0xFD9
 36809                           status	equ	0xFD8
 36810                           
 36811 ;; *************** function __flash_partial_read *****************
 36812 ;; Defined at:
 36813 ;;		line 302 in file "flash.c"
 36814 ;; Parameters:    Size  Location     Type
 36815 ;;  page            2   20[COMRAM] unsigned int 
 36816 ;;  start           2   22[COMRAM] unsigned int 
 36817 ;;  length          2   24[COMRAM] unsigned int 
 36818 ;;  data            2   26[COMRAM] PTR unsigned char 
 36819 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 36820 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 36821 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 36822 ;;		 -> _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 36823 ;; Auto vars:     Size  Location     Type
 36824 ;;  command         4   32[COMRAM] unsigned char [4]
 36825 ;;  address         4   36[COMRAM] unsigned long 
 36826 ;; Return value:  Size  Location     Type
 36827 ;;                  1    wreg      void 
 36828 ;; Registers used:
 36829 ;;		wreg, status,2, status,0, cstack
 36830 ;; Tracked objects:
 36831 ;;		On entry : 0/0
 36832 ;;		On exit  : 0/0
 36833 ;;		Unchanged: 0/0
 36834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36835 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36836 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36838 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36839 ;;Total ram usage:       20 bytes
 36840 ;; Hardware stack levels used:    1
 36841 ;; Hardware stack levels required when called:    5
 36842 ;; This function calls:
 36843 ;;		_flash_is_busy
 36844 ;;		_spi_tx_rx
 36845 ;; This function is called by:
 36846 ;;		_flash_page_read
 36847 ;;		_flash_partial_read
 36848 ;; This function uses a non-reentrant model
 36849 ;;
 36850                           
 36851                           	psect	text193
 36852  006204                     __ptext193:
 36853                           	opt stack 0
 36854  006204                     __flash_partial_read:
 36855                           	opt stack 21
 36856                           
 36857                           ;flash.c: 304: uint32_t address;;flash.c: 305: uint8_t command[4];;flash.c: 308: while(f
      +                          lash_is_busy());
 36858                           
 36859                           ;incstack = 0
 36860  006204  EC34  F03D         	call	_flash_is_busy	;wreg free
 36861  006208  0900               	iorlw	0
 36862  00620A  A4D8               	btfss	status,2,c
 36863  00620C  D7FB               	goto	__flash_partial_read
 36864                           
 36865                           ;flash.c: 311: address = page;
 36866  00620E  C015  F025         	movff	__flash_partial_read@page,__flash_partial_read@address
 36867  006212  C016  F026         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36868  006216  6A27               	clrf	__flash_partial_read@address+2,c
 36869  006218  6A28               	clrf	__flash_partial_read@address+3,c
 36870                           
 36871                           ;flash.c: 312: address <<= 9;
 36872  00621A  0E09               	movlw	9
 36873  00621C                     u6165:
 36874  00621C  90D8               	bcf	status,0,c
 36875  00621E  3625               	rlcf	__flash_partial_read@address,f,c
 36876  006220  3626               	rlcf	__flash_partial_read@address+1,f,c
 36877  006222  3627               	rlcf	__flash_partial_read@address+2,f,c
 36878  006224  3628               	rlcf	__flash_partial_read@address+3,f,c
 36879  006226  2EE8               	decfsz	wreg,f,c
 36880  006228  D7F9               	goto	u6165
 36881                           
 36882                           ;flash.c: 313: address |= start;
 36883  00622A  5017               	movf	__flash_partial_read@start,w,c
 36884  00622C  6E1D               	movwf	??__flash_partial_read& (0+255),c
 36885  00622E  5018               	movf	__flash_partial_read@start+1,w,c
 36886  006230  6E1E               	movwf	(??__flash_partial_read+1)& (0+255),c
 36887  006232  6A1F               	clrf	(??__flash_partial_read+2)& (0+255),c
 36888  006234  6A20               	clrf	(??__flash_partial_read+3)& (0+255),c
 36889  006236  501D               	movf	??__flash_partial_read,w,c
 36890  006238  1225               	iorwf	__flash_partial_read@address,f,c
 36891  00623A  501E               	movf	??__flash_partial_read+1,w,c
 36892  00623C  1226               	iorwf	__flash_partial_read@address+1,f,c
 36893  00623E  501F               	movf	??__flash_partial_read+2,w,c
 36894  006240  1227               	iorwf	__flash_partial_read@address+2,f,c
 36895  006242  5020               	movf	??__flash_partial_read+3,w,c
 36896  006244  1228               	iorwf	__flash_partial_read@address+3,f,c
 36897                           
 36898                           ;flash.c: 316: command[0] = 0x03;
 36899  006246  0E03               	movlw	3
 36900  006248  6E21               	movwf	__flash_partial_read@command,c
 36901                           
 36902                           ;flash.c: 317: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36903  00624A  C027  F022         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36904                           
 36905                           ;flash.c: 318: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36906  00624E  5026               	movf	__flash_partial_read@address+1,w,c
 36907  006250  6E23               	movwf	__flash_partial_read@command+2,c
 36908                           
 36909                           ;flash.c: 319: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36910  006252  C025  F024         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36911                           
 36912                           ;flash.c: 322: spi_tx_rx(command, 4, data, length);
 36913  006256  0E21               	movlw	low __flash_partial_read@command
 36914  006258  6E01               	movwf	spi_tx_rx@command,c
 36915  00625A  0E00               	movlw	high __flash_partial_read@command
 36916  00625C  6E02               	movwf	spi_tx_rx@command+1,c
 36917  00625E  0E00               	movlw	0
 36918  006260  6E04               	movwf	spi_tx_rx@command_length+1,c
 36919  006262  0E04               	movlw	4
 36920  006264  6E03               	movwf	spi_tx_rx@command_length,c
 36921  006266  C01B  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 36922  00626A  C01C  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36923  00626E  C019  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36924  006272  C01A  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36925  006276  ECBE  F02C         	call	_spi_tx_rx	;wreg free
 36926  00627A  0012               	return		;funcret
 36927  00627C                     __end_of__flash_partial_read:
 36928                           	opt stack 0
 36929                           tosu	equ	0xFFF
 36930                           tosh	equ	0xFFE
 36931                           tosl	equ	0xFFD
 36932                           pclath	equ	0xFFA
 36933                           tblptru	equ	0xFF8
 36934                           tblptrh	equ	0xFF7
 36935                           tblptrl	equ	0xFF6
 36936                           tablat	equ	0xFF5
 36937                           prodh	equ	0xFF4
 36938                           prodl	equ	0xFF3
 36939                           intcon	equ	0xFF2
 36940                           intcon2	equ	0xFF1
 36941                           intcon3	equ	0xFF0
 36942                           indf0	equ	0xFEF
 36943                           postinc0	equ	0xFEE
 36944                           fsr0h	equ	0xFEA
 36945                           fsr0l	equ	0xFE9
 36946                           wreg	equ	0xFE8
 36947                           indf1	equ	0xFE7
 36948                           postdec1	equ	0xFE5
 36949                           plusw1	equ	0xFE3
 36950                           fsr1h	equ	0xFE2
 36951                           fsr1l	equ	0xFE1
 36952                           indf2	equ	0xFDF
 36953                           postinc2	equ	0xFDE
 36954                           postdec2	equ	0xFDD
 36955                           plusw2	equ	0xFDB
 36956                           fsr2h	equ	0xFDA
 36957                           fsr2l	equ	0xFD9
 36958                           status	equ	0xFD8
 36959                           
 36960 ;; *************** function _flash_is_busy *****************
 36961 ;; Defined at:
 36962 ;;		line 351 in file "flash.c"
 36963 ;; Parameters:    Size  Location     Type
 36964 ;;		None
 36965 ;; Auto vars:     Size  Location     Type
 36966 ;;  result          1   19[COMRAM] unsigned char 
 36967 ;; Return value:  Size  Location     Type
 36968 ;;                  1    wreg      unsigned char 
 36969 ;; Registers used:
 36970 ;;		wreg, status,2, status,0, cstack
 36971 ;; Tracked objects:
 36972 ;;		On entry : 0/0
 36973 ;;		On exit  : 0/0
 36974 ;;		Unchanged: 0/0
 36975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36980 ;;Total ram usage:        1 bytes
 36981 ;; Hardware stack levels used:    1
 36982 ;; Hardware stack levels required when called:    4
 36983 ;; This function calls:
 36984 ;;		__flash_is_busy
 36985 ;;		_spi_set_configuration
 36986 ;; This function is called by:
 36987 ;;		__flash_partial_read
 36988 ;;		_flash_partial_write
 36989 ;;		_api_prepare
 36990 ;;		__fill_buffer_get_status
 36991 ;; This function uses a non-reentrant model
 36992 ;;
 36993                           
 36994                           	psect	text194
 36995  007A68                     __ptext194:
 36996                           	opt stack 0
 36997  007A68                     _flash_is_busy:
 36998                           	opt stack 21
 36999                           
 37000                           ;flash.c: 353: uint8_t result;;flash.c: 356: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 37001                           
 37002                           ;incstack = 0
 37003  007A68  0E00               	movlw	0
 37004  007A6A  EC6E  F035         	call	_spi_set_configuration
 37005                           
 37006                           ;flash.c: 359: result = _flash_is_busy();
 37007  007A6E  ECB7  F03C         	call	__flash_is_busy	;wreg free
 37008  007A72  6E14               	movwf	flash_is_busy@result,c
 37009                           
 37010                           ;flash.c: 362: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37011  007A74  0E01               	movlw	1
 37012  007A76  EC6E  F035         	call	_spi_set_configuration
 37013                           
 37014                           ;flash.c: 365: return result;
 37015  007A7A  5014               	movf	flash_is_busy@result,w,c
 37016  007A7C  0012               	return	
 37017  007A7E                     __end_of_flash_is_busy:
 37018                           	opt stack 0
 37019                           tosu	equ	0xFFF
 37020                           tosh	equ	0xFFE
 37021                           tosl	equ	0xFFD
 37022                           pclath	equ	0xFFA
 37023                           tblptru	equ	0xFF8
 37024                           tblptrh	equ	0xFF7
 37025                           tblptrl	equ	0xFF6
 37026                           tablat	equ	0xFF5
 37027                           prodh	equ	0xFF4
 37028                           prodl	equ	0xFF3
 37029                           intcon	equ	0xFF2
 37030                           intcon2	equ	0xFF1
 37031                           intcon3	equ	0xFF0
 37032                           indf0	equ	0xFEF
 37033                           postinc0	equ	0xFEE
 37034                           fsr0h	equ	0xFEA
 37035                           fsr0l	equ	0xFE9
 37036                           wreg	equ	0xFE8
 37037                           indf1	equ	0xFE7
 37038                           postdec1	equ	0xFE5
 37039                           plusw1	equ	0xFE3
 37040                           fsr1h	equ	0xFE2
 37041                           fsr1l	equ	0xFE1
 37042                           indf2	equ	0xFDF
 37043                           postinc2	equ	0xFDE
 37044                           postdec2	equ	0xFDD
 37045                           plusw2	equ	0xFDB
 37046                           fsr2h	equ	0xFDA
 37047                           fsr2l	equ	0xFD9
 37048                           status	equ	0xFD8
 37049                           
 37050 ;; *************** function _spi_set_configuration *****************
 37051 ;; Defined at:
 37052 ;;		line 124 in file "spi.c"
 37053 ;; Parameters:    Size  Location     Type
 37054 ;;  configuratio    1    wreg     enum E6747
 37055 ;; Auto vars:     Size  Location     Type
 37056 ;;  configuratio    1    0[COMRAM] enum E6747
 37057 ;; Return value:  Size  Location     Type
 37058 ;;                  1    wreg      void 
 37059 ;; Registers used:
 37060 ;;		wreg, status,2, status,0
 37061 ;; Tracked objects:
 37062 ;;		On entry : 0/0
 37063 ;;		On exit  : 0/0
 37064 ;;		Unchanged: 0/0
 37065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37070 ;;Total ram usage:        1 bytes
 37071 ;; Hardware stack levels used:    1
 37072 ;; This function calls:
 37073 ;;		Nothing
 37074 ;; This function is called by:
 37075 ;;		_flash_init
 37076 ;;		_flash_is_busy
 37077 ;;		_flash_page_read
 37078 ;;		_flash_page_write
 37079 ;;		_flash_partial_read
 37080 ;;		_flash_partial_write
 37081 ;;		_flash_set_power_state
 37082 ;; This function uses a non-reentrant model
 37083 ;;
 37084                           
 37085                           	psect	text195
 37086  006ADC                     __ptext195:
 37087                           	opt stack 0
 37088  006ADC                     _spi_set_configuration:
 37089                           	opt stack 28
 37090                           
 37091                           ;incstack = 0
 37092                           ;spi_set_configuration@configuration stored from wreg
 37093  006ADC  6E01               	movwf	spi_set_configuration@configuration,c
 37094                           
 37095                           ;spi.c: 126: if(active_configuration != configuration)
 37096  006ADE  5001               	movf	spi_set_configuration@configuration,w,c
 37097  006AE0  0100               	movlb	0	; () banked
 37098  006AE2  199A               	xorwf	_active_configuration& (0+255),w,b
 37099  006AE4  B4D8               	btfsc	status,2,c
 37100  006AE6  0012               	return	
 37101  006AE8  D022               	goto	l2641
 37102  006AEA                     l2642:
 37103                           
 37104                           ;spi.c: 134: SSP2CON1bits.SSPEN = 0;
 37105  006AEA  9A72               	bcf	3954,5,c	;volatile
 37106                           
 37107                           ;spi.c: 137: TRISDbits.TRISD6 = 1;
 37108  006AEC  8C95               	bsf	3989,6,c	;volatile
 37109                           
 37110                           ;spi.c: 138: TRISDbits.TRISD4 = 0;
 37111  006AEE  9895               	bcf	3989,4,c	;volatile
 37112                           
 37113                           ;spi.c: 139: TRISDbits.TRISD5 = 0;
 37114  006AF0  9A95               	bcf	3989,5,c	;volatile
 37115                           
 37116                           ;spi.c: 140: TRISDbits.TRISD7 = 0;
 37117  006AF2  9E95               	bcf	3989,7,c	;volatile
 37118                           
 37119                           ;spi.c: 141: LATDbits.LD7 = 1;
 37120  006AF4  8E8C               	bsf	3980,7,c	;volatile
 37121                           
 37122                           ;spi.c: 144: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 37123  006AF6  0E55               	movlw	85
 37124  006AF8  6EA7               	movwf	4007,c	;volsfr
 37125  006AFA  0EAA               	movlw	170
 37126  006AFC  6EA7               	movwf	4007,c	;volsfr
 37127  006AFE  010E               	movlb	14	; () banked
 37128  006B00  91BF               	bcf	191,0,b	;volatile
 37129                           
 37130                           ;spi.c: 145: RPINR21 = 23;
 37131  006B02  0E17               	movlw	23
 37132  006B04  6FFC               	movwf	252,b	;volatile
 37133                           
 37134                           ;spi.c: 146: RPOR21 = 10;
 37135  006B06  0E0A               	movlw	10
 37136  006B08  6FD5               	movwf	213,b	;volatile
 37137                           
 37138                           ;spi.c: 148: RPOR22 = 11;
 37139  006B0A  0E0B               	movlw	11
 37140  006B0C  6FD6               	movwf	214,b	;volatile
 37141                           
 37142                           ;spi.c: 149: RPINR22 = 22;
 37143  006B0E  0E16               	movlw	22
 37144  006B10  6FFD               	movwf	253,b	;volatile
 37145                           
 37146                           ;spi.c: 150: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 37147  006B12  0E55               	movlw	85
 37148  006B14  6EA7               	movwf	4007,c	;volsfr
 37149  006B16  0EAA               	movlw	170
 37150  006B18  6EA7               	movwf	4007,c	;volsfr
 37151                           
 37152                           ; BSR set to: 14
 37153  006B1A  81BF               	bsf	191,0,b	;volatile
 37154                           
 37155                           ; BSR set to: 14
 37156                           ;spi.c: 153: SSP2STATbits.SMP = 1;
 37157  006B1C  8E73               	bsf	3955,7,c	;volatile
 37158                           
 37159                           ; BSR set to: 14
 37160                           ;spi.c: 154: SSP2STATbits.CKE = 1;
 37161  006B1E  8C73               	bsf	3955,6,c	;volatile
 37162                           
 37163                           ; BSR set to: 14
 37164                           ;spi.c: 155: SSP2CON1bits.CKP = 0;
 37165  006B20  9872               	bcf	3954,4,c	;volatile
 37166                           
 37167                           ; BSR set to: 14
 37168                           ;spi.c: 156: SSP2CON1bits.SSPM =0b0000;
 37169  006B22  9072               	bcf	3954,0,c	;volatile
 37170  006B24  9272               	bcf	3954,1,c	;volatile
 37171  006B26  9472               	bcf	3954,2,c	;volatile
 37172  006B28  9672               	bcf	3954,3,c	;volatile
 37173                           
 37174                           ; BSR set to: 14
 37175                           ;spi.c: 158: SSP2CON1bits.SSPEN = 1;
 37176  006B2A  8A72               	bsf	3954,5,c	;volatile
 37177                           
 37178                           ; BSR set to: 14
 37179                           ;spi.c: 191: }
 37180                           
 37181                           ; BSR set to: 14
 37182                           ;spi.c: 190: break;
 37183                           
 37184                           ;spi.c: 162: case SPI_CONFIGURATION_EXTERNAL:
 37185                           
 37186                           ;spi.c: 160: break;
 37187  006B2C  0012               	return	
 37188  006B2E                     l2641:
 37189                           
 37190                           ; BSR set to: 14
 37191  006B2E  5001               	movf	spi_set_configuration@configuration,w,c
 37192                           
 37193                           ; Switch size 1, requested type "space"
 37194                           ; Number of cases is 2, Range of values is 0 to 1
 37195                           ; switch strategies available:
 37196                           ; Name         Instructions Cycles
 37197                           ; simple_byte            7     4 (average)
 37198                           ;	Chosen strategy is simple_byte
 37199  006B30  0A00               	xorlw	0	; case 0
 37200  006B32  B4D8               	btfsc	status,2,c
 37201  006B34  D7DA               	goto	l2642
 37202  006B36  0A01               	xorlw	1	; case 1
 37203  006B38  0012               	return	
 37204  006B3A                     __end_of_spi_set_configuration:
 37205                           	opt stack 0
 37206                           tosu	equ	0xFFF
 37207                           tosh	equ	0xFFE
 37208                           tosl	equ	0xFFD
 37209                           pclath	equ	0xFFA
 37210                           tblptru	equ	0xFF8
 37211                           tblptrh	equ	0xFF7
 37212                           tblptrl	equ	0xFF6
 37213                           tablat	equ	0xFF5
 37214                           prodh	equ	0xFF4
 37215                           prodl	equ	0xFF3
 37216                           intcon	equ	0xFF2
 37217                           intcon2	equ	0xFF1
 37218                           intcon3	equ	0xFF0
 37219                           indf0	equ	0xFEF
 37220                           postinc0	equ	0xFEE
 37221                           fsr0h	equ	0xFEA
 37222                           fsr0l	equ	0xFE9
 37223                           wreg	equ	0xFE8
 37224                           indf1	equ	0xFE7
 37225                           postdec1	equ	0xFE5
 37226                           plusw1	equ	0xFE3
 37227                           fsr1h	equ	0xFE2
 37228                           fsr1l	equ	0xFE1
 37229                           indf2	equ	0xFDF
 37230                           postinc2	equ	0xFDE
 37231                           postdec2	equ	0xFDD
 37232                           plusw2	equ	0xFDB
 37233                           fsr2h	equ	0xFDA
 37234                           fsr2l	equ	0xFD9
 37235                           status	equ	0xFD8
 37236                           
 37237 ;; *************** function __flash_is_busy *****************
 37238 ;; Defined at:
 37239 ;;		line 277 in file "flash.c"
 37240 ;; Parameters:    Size  Location     Type
 37241 ;;		None
 37242 ;; Auto vars:     Size  Location     Type
 37243 ;;  status          2   17[COMRAM] unsigned int 
 37244 ;; Return value:  Size  Location     Type
 37245 ;;                  1    wreg      unsigned char 
 37246 ;; Registers used:
 37247 ;;		wreg, status,2, status,0, cstack
 37248 ;; Tracked objects:
 37249 ;;		On entry : 0/0
 37250 ;;		On exit  : 0/0
 37251 ;;		Unchanged: 0/0
 37252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37257 ;;Total ram usage:        2 bytes
 37258 ;; Hardware stack levels used:    1
 37259 ;; Hardware stack levels required when called:    3
 37260 ;; This function calls:
 37261 ;;		__flash_get_status
 37262 ;;		__flash_wakeup
 37263 ;; This function is called by:
 37264 ;;		__flash_set_page_size
 37265 ;;		__flash_copy_page_to_buffer
 37266 ;;		__flash_compare_page_to_buffer
 37267 ;;		__flash_write_to_buffer
 37268 ;;		__flash_write_page_from_buffer
 37269 ;;		_flash_is_busy
 37270 ;;		__flash_erase_page
 37271 ;;		_flash_set_power_state
 37272 ;; This function uses a non-reentrant model
 37273 ;;
 37274                           
 37275                           	psect	text196
 37276  00796E                     __ptext196:
 37277                           	opt stack 0
 37278  00796E                     __flash_is_busy:
 37279                           	opt stack 24
 37280                           
 37281                           ;flash.c: 280: if(power_state!=FLASH_POWER_STATE_NORMAL)
 37282                           
 37283                           ;incstack = 0
 37284  00796E  0100               	movlb	0	; () banked
 37285  007970  519D               	movf	_power_state& (0+255),w,b
 37286  007972  A4D8               	btfss	status,2,c
 37287                           
 37288                           ; BSR set to: 0
 37289                           ;flash.c: 281: {;flash.c: 282: _flash_wakeup();
 37290  007974  EC81  F037         	call	__flash_wakeup	;wreg free
 37291                           
 37292                           ;flash.c: 283: };flash.c: 286: uint16_t status = _flash_get_status();
 37293  007978  EC4B  F03B         	call	__flash_get_status	;wreg free
 37294  00797C  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 37295  007980  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 37296                           
 37297                           ;flash.c: 288: if(status & 0b0000000010000000)
 37298  007984  AE12               	btfss	__flash_is_busy@status,7,c
 37299  007986  D002               	goto	l1659
 37300                           
 37301                           ;flash.c: 289: {;flash.c: 291: return 0;
 37302  007988  0E00               	movlw	0
 37303                           
 37304                           ;flash.c: 292: }
 37305  00798A  0012               	return	
 37306  00798C                     l1659:
 37307                           
 37308                           ;flash.c: 293: else;flash.c: 294: {;flash.c: 296: return 1;
 37309  00798C  0E01               	movlw	1
 37310  00798E  0012               	return	
 37311  007990                     __end_of__flash_is_busy:
 37312                           	opt stack 0
 37313                           tosu	equ	0xFFF
 37314                           tosh	equ	0xFFE
 37315                           tosl	equ	0xFFD
 37316                           pclath	equ	0xFFA
 37317                           tblptru	equ	0xFF8
 37318                           tblptrh	equ	0xFF7
 37319                           tblptrl	equ	0xFF6
 37320                           tablat	equ	0xFF5
 37321                           prodh	equ	0xFF4
 37322                           prodl	equ	0xFF3
 37323                           intcon	equ	0xFF2
 37324                           intcon2	equ	0xFF1
 37325                           intcon3	equ	0xFF0
 37326                           indf0	equ	0xFEF
 37327                           postinc0	equ	0xFEE
 37328                           fsr0h	equ	0xFEA
 37329                           fsr0l	equ	0xFE9
 37330                           wreg	equ	0xFE8
 37331                           indf1	equ	0xFE7
 37332                           postdec1	equ	0xFE5
 37333                           plusw1	equ	0xFE3
 37334                           fsr1h	equ	0xFE2
 37335                           fsr1l	equ	0xFE1
 37336                           indf2	equ	0xFDF
 37337                           postinc2	equ	0xFDE
 37338                           postdec2	equ	0xFDD
 37339                           plusw2	equ	0xFDB
 37340                           fsr2h	equ	0xFDA
 37341                           fsr2l	equ	0xFD9
 37342                           status	equ	0xFD8
 37343                           
 37344 ;; *************** function __flash_wakeup *****************
 37345 ;; Defined at:
 37346 ;;		line 124 in file "flash.c"
 37347 ;; Parameters:    Size  Location     Type
 37348 ;;		None
 37349 ;; Auto vars:     Size  Location     Type
 37350 ;;  command         1    8[COMRAM] unsigned char 
 37351 ;; Return value:  Size  Location     Type
 37352 ;;                  1    wreg      void 
 37353 ;; Registers used:
 37354 ;;		wreg, status,2, status,0, cstack
 37355 ;; Tracked objects:
 37356 ;;		On entry : 0/0
 37357 ;;		On exit  : 0/0
 37358 ;;		Unchanged: 0/0
 37359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37364 ;;Total ram usage:        1 bytes
 37365 ;; Hardware stack levels used:    1
 37366 ;; Hardware stack levels required when called:    2
 37367 ;; This function calls:
 37368 ;;		_spi_tx
 37369 ;; This function is called by:
 37370 ;;		__flash_is_busy
 37371 ;;		_flash_set_power_state
 37372 ;; This function uses a non-reentrant model
 37373 ;;
 37374                           
 37375                           	psect	text197
 37376  006F02                     __ptext197:
 37377                           	opt stack 0
 37378  006F02                     __flash_wakeup:
 37379                           	opt stack 24
 37380                           
 37381                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 37382                           
 37383                           ;incstack = 0
 37384  006F02  D021               	goto	l1608
 37385  006F04                     
 37386                           ;flash.c: 131: command = 0xAB;
 37387  006F04  0EAB               	movlw	171
 37388  006F06  6E09               	movwf	__flash_wakeup@command,c
 37389                           
 37390                           ;flash.c: 132: spi_tx(&command, 1);
 37391  006F08  0E09               	movlw	low __flash_wakeup@command
 37392  006F0A  6E01               	movwf	spi_tx@data,c
 37393  006F0C  0E00               	movlw	high __flash_wakeup@command
 37394  006F0E  6E02               	movwf	spi_tx@data+1,c
 37395  006F10  0E00               	movlw	0
 37396  006F12  6E04               	movwf	spi_tx@length+1,c
 37397  006F14  0E01               	movlw	1
 37398  006F16  6E03               	movwf	spi_tx@length,c
 37399  006F18  ECCB  F035         	call	_spi_tx	;wreg free
 37400                           
 37401                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37402  006F1C  0E17               	movlw	23
 37403  006F1E                     u11777:
 37404  006F1E  2EE8               	decfsz	wreg,f,c
 37405  006F20  D7FE               	bra	u11777
 37406  006F22  F000               	nop	
 37407                           
 37408                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 37409  006F24  0E00               	movlw	0
 37410  006F26  0100               	movlb	0	; () banked
 37411  006F28  6F9D               	movwf	_power_state& (0+255),b
 37412                           
 37413                           ;flash.c: 135: break;
 37414  006F2A  0012               	return	
 37415  006F2C                     l1611:
 37416                           
 37417                           ; BSR set to: 0
 37418                           ;flash.c: 140: LATDbits.LD7 = 0;
 37419  006F2C  9E8C               	bcf	3980,7,c	;volatile
 37420                           
 37421                           ; BSR set to: 0
 37422                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37423  006F2E  0E0D               	movlw	13
 37424  006F30                     u11787:
 37425  006F30  2EE8               	decfsz	wreg,f,c
 37426  006F32  D7FE               	bra	u11787
 37427  006F34  F000               	nop	
 37428                           
 37429                           ;flash.c: 142: LATDbits.LD7 = 1;
 37430  006F36  8E8C               	bsf	3980,7,c	;volatile
 37431                           
 37432                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37433  006F38  0E50               	movlw	80
 37434  006F3A                     u11797:
 37435  006F3A  2EE8               	decfsz	wreg,f,c
 37436  006F3C  D7FE               	bra	u11797
 37437                           
 37438                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 37439  006F3E  0E00               	movlw	0
 37440  006F40  0100               	movlb	0	; () banked
 37441  006F42  6F9D               	movwf	_power_state& (0+255),b
 37442                           
 37443                           ; BSR set to: 0
 37444                           ;flash.c: 146: }
 37445                           
 37446                           ;flash.c: 145: break;
 37447  006F44  0012               	return	
 37448  006F46                     l1608:
 37449                           
 37450                           ; BSR set to: 0
 37451  006F46  0100               	movlb	0	; () banked
 37452  006F48  519D               	movf	_power_state& (0+255),w,b
 37453                           
 37454                           ; Switch size 1, requested type "space"
 37455                           ; Number of cases is 2, Range of values is 1 to 2
 37456                           ; switch strategies available:
 37457                           ; Name         Instructions Cycles
 37458                           ; simple_byte            7     4 (average)
 37459                           ;	Chosen strategy is simple_byte
 37460  006F4A  0A01               	xorlw	1	; case 1
 37461  006F4C  B4D8               	btfsc	status,2,c
 37462  006F4E  D7DA               	goto	l1609
 37463  006F50  0A03               	xorlw	3	; case 2
 37464  006F52  A4D8               	btfss	status,2,c
 37465  006F54  0012               	return	
 37466  006F56  D7EA               	goto	l1611
 37467  006F58                     __end_of__flash_wakeup:
 37468                           	opt stack 0
 37469                           tosu	equ	0xFFF
 37470                           tosh	equ	0xFFE
 37471                           tosl	equ	0xFFD
 37472                           pclath	equ	0xFFA
 37473                           tblptru	equ	0xFF8
 37474                           tblptrh	equ	0xFF7
 37475                           tblptrl	equ	0xFF6
 37476                           tablat	equ	0xFF5
 37477                           prodh	equ	0xFF4
 37478                           prodl	equ	0xFF3
 37479                           intcon	equ	0xFF2
 37480                           intcon2	equ	0xFF1
 37481                           intcon3	equ	0xFF0
 37482                           indf0	equ	0xFEF
 37483                           postinc0	equ	0xFEE
 37484                           fsr0h	equ	0xFEA
 37485                           fsr0l	equ	0xFE9
 37486                           wreg	equ	0xFE8
 37487                           indf1	equ	0xFE7
 37488                           postdec1	equ	0xFE5
 37489                           plusw1	equ	0xFE3
 37490                           fsr1h	equ	0xFE2
 37491                           fsr1l	equ	0xFE1
 37492                           indf2	equ	0xFDF
 37493                           postinc2	equ	0xFDE
 37494                           postdec2	equ	0xFDD
 37495                           plusw2	equ	0xFDB
 37496                           fsr2h	equ	0xFDA
 37497                           fsr2l	equ	0xFD9
 37498                           status	equ	0xFD8
 37499                           
 37500 ;; *************** function _spi_tx *****************
 37501 ;; Defined at:
 37502 ;;		line 203 in file "spi.c"
 37503 ;; Parameters:    Size  Location     Type
 37504 ;;  data            2    0[COMRAM] PTR unsigned char 
 37505 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37506 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37507 ;;  length          2    2[COMRAM] unsigned int 
 37508 ;; Auto vars:     Size  Location     Type
 37509 ;;		None
 37510 ;; Return value:  Size  Location     Type
 37511 ;;                  1    wreg      void 
 37512 ;; Registers used:
 37513 ;;		wreg, status,2, status,0, cstack
 37514 ;; Tracked objects:
 37515 ;;		On entry : 0/0
 37516 ;;		On exit  : 0/0
 37517 ;;		Unchanged: 0/0
 37518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37522 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37523 ;;Total ram usage:        8 bytes
 37524 ;; Hardware stack levels used:    1
 37525 ;; Hardware stack levels required when called:    1
 37526 ;; This function calls:
 37527 ;;		__switch_mastermode
 37528 ;; This function is called by:
 37529 ;;		__flash_set_page_size
 37530 ;;		__flash_wakeup
 37531 ;;		__flash_copy_page_to_buffer
 37532 ;;		__flash_compare_page_to_buffer
 37533 ;;		__flash_write_page_from_buffer
 37534 ;;		__flash_erase_page
 37535 ;;		_flash_set_power_state
 37536 ;; This function uses a non-reentrant model
 37537 ;;
 37538                           
 37539                           	psect	text198
 37540  006B96                     __ptext198:
 37541                           	opt stack 0
 37542  006B96                     _spi_tx:
 37543                           	opt stack 26
 37544                           
 37545                           ;spi.c: 206: _switch_mastermode();
 37546                           
 37547                           ; BSR set to: 0
 37548                           ;incstack = 0
 37549  006B96  ECE7  F03D         	call	__switch_mastermode	;wreg free
 37550                           
 37551                           ;spi.c: 209: DMACON1bits.SSCON1 = 0;
 37552  006B9A  9E88               	bcf	3976,7,c	;volatile
 37553                           
 37554                           ;spi.c: 210: DMACON1bits.SSCON0 = 0;
 37555  006B9C  9C88               	bcf	3976,6,c	;volatile
 37556                           
 37557                           ;spi.c: 212: DMACON1bits.TXINC = 1;
 37558  006B9E  8A88               	bsf	3976,5,c	;volatile
 37559                           
 37560                           ;spi.c: 214: DMACON1bits.RXINC = 0;
 37561  006BA0  9888               	bcf	3976,4,c	;volatile
 37562                           
 37563                           ;spi.c: 216: DMACON1bits.DUPLEX1 = 0;
 37564  006BA2  9688               	bcf	3976,3,c	;volatile
 37565                           
 37566                           ;spi.c: 217: DMACON1bits.DUPLEX0 = 1;
 37567  006BA4  8488               	bsf	3976,2,c	;volatile
 37568                           
 37569                           ;spi.c: 219: DMACON1bits.DLYINTEN = 0;
 37570  006BA6  9288               	bcf	3976,1,c	;volatile
 37571                           
 37572                           ;spi.c: 221: DMACON2bits.DLYCYC = 0b0000;
 37573  006BA8  9886               	bcf	3974,4,c	;volatile
 37574  006BAA  9A86               	bcf	3974,5,c	;volatile
 37575  006BAC  9C86               	bcf	3974,6,c	;volatile
 37576  006BAE  9E86               	bcf	3974,7,c	;volatile
 37577                           
 37578                           ;spi.c: 223: DMACON2bits.INTLVL = 0b0000;
 37579  006BB0  9086               	bcf	3974,0,c	;volatile
 37580  006BB2  9286               	bcf	3974,1,c	;volatile
 37581  006BB4  9486               	bcf	3974,2,c	;volatile
 37582  006BB6  9686               	bcf	3974,3,c	;volatile
 37583                           
 37584                           ;spi.c: 226: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37585  006BB8  5002               	movf	spi_tx@data+1,w,c
 37586  006BBA  6E6A               	movwf	3946,c	;volatile
 37587                           
 37588                           ;spi.c: 227: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37589  006BBC  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 37590                           
 37591                           ;spi.c: 230: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37592  006BC0  0EFF               	movlw	255
 37593  006BC2  6E05               	movwf	??_spi_tx& (0+255),c
 37594  006BC4  0EFF               	movlw	255
 37595  006BC6  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 37596  006BC8  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 37597  006BCC  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 37598  006BD0  5005               	movf	??_spi_tx,w,c
 37599  006BD2  2607               	addwf	??_spi_tx+2,f,c
 37600  006BD4  5006               	movf	??_spi_tx+1,w,c
 37601  006BD6  2208               	addwfc	??_spi_tx+3,f,c
 37602  006BD8  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 37603  006BDC  6A08               	clrf	??_spi_tx+3,c
 37604  006BDE  5007               	movf	??_spi_tx+2,w,c
 37605  006BE0  6E66               	movwf	3942,c	;volatile
 37606                           
 37607                           ;spi.c: 231: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37608  006BE2  0403               	decf	spi_tx@length,w,c
 37609  006BE4  6E67               	movwf	3943,c	;volatile
 37610                           
 37611                           ;spi.c: 234: LATDbits.LD7 = 0;
 37612  006BE6  9E8C               	bcf	3980,7,c	;volatile
 37613                           
 37614                           ;spi.c: 235: DMACON1bits.DMAEN = 1;
 37615  006BE8  8088               	bsf	3976,0,c	;volatile
 37616  006BEA  B088               	btfsc	3976,0,c	;volatile
 37617  006BEC  D7FE               	goto	l2652
 37618                           
 37619                           ;spi.c: 237: LATDbits.LD7 = 1;
 37620  006BEE  8E8C               	bsf	3980,7,c	;volatile
 37621  006BF0  0012               	return		;funcret
 37622  006BF2                     __end_of_spi_tx:
 37623                           	opt stack 0
 37624                           tosu	equ	0xFFF
 37625                           tosh	equ	0xFFE
 37626                           tosl	equ	0xFFD
 37627                           pclath	equ	0xFFA
 37628                           tblptru	equ	0xFF8
 37629                           tblptrh	equ	0xFF7
 37630                           tblptrl	equ	0xFF6
 37631                           tablat	equ	0xFF5
 37632                           prodh	equ	0xFF4
 37633                           prodl	equ	0xFF3
 37634                           intcon	equ	0xFF2
 37635                           intcon2	equ	0xFF1
 37636                           intcon3	equ	0xFF0
 37637                           indf0	equ	0xFEF
 37638                           postinc0	equ	0xFEE
 37639                           fsr0h	equ	0xFEA
 37640                           fsr0l	equ	0xFE9
 37641                           wreg	equ	0xFE8
 37642                           indf1	equ	0xFE7
 37643                           postdec1	equ	0xFE5
 37644                           plusw1	equ	0xFE3
 37645                           fsr1h	equ	0xFE2
 37646                           fsr1l	equ	0xFE1
 37647                           indf2	equ	0xFDF
 37648                           postinc2	equ	0xFDE
 37649                           postdec2	equ	0xFDD
 37650                           plusw2	equ	0xFDB
 37651                           fsr2h	equ	0xFDA
 37652                           fsr2l	equ	0xFD9
 37653                           status	equ	0xFD8
 37654                           
 37655 ;; *************** function __flash_get_status *****************
 37656 ;; Defined at:
 37657 ;;		line 113 in file "flash.c"
 37658 ;; Parameters:    Size  Location     Type
 37659 ;;		None
 37660 ;; Auto vars:     Size  Location     Type
 37661 ;;  status          2   15[COMRAM] unsigned int 
 37662 ;;  command         1   14[COMRAM] unsigned char 
 37663 ;; Return value:  Size  Location     Type
 37664 ;;                  2   12[COMRAM] unsigned int 
 37665 ;; Registers used:
 37666 ;;		wreg, status,2, status,0, cstack
 37667 ;; Tracked objects:
 37668 ;;		On entry : 0/0
 37669 ;;		On exit  : 0/0
 37670 ;;		Unchanged: 0/0
 37671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37673 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37675 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37676 ;;Total ram usage:        5 bytes
 37677 ;; Hardware stack levels used:    1
 37678 ;; Hardware stack levels required when called:    2
 37679 ;; This function calls:
 37680 ;;		_spi_tx_rx
 37681 ;; This function is called by:
 37682 ;;		__flash_compare_page_to_buffer
 37683 ;;		__flash_is_busy
 37684 ;; This function uses a non-reentrant model
 37685 ;;
 37686                           
 37687                           	psect	text199
 37688  007696                     __ptext199:
 37689                           	opt stack 0
 37690  007696                     __flash_get_status:
 37691                           	opt stack 24
 37692                           
 37693                           ;flash.c: 117: uint8_t command = 0xD7;
 37694                           
 37695                           ;incstack = 0
 37696  007696  0ED7               	movlw	215
 37697  007698  6E0F               	movwf	__flash_get_status@command,c
 37698                           
 37699                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37700  00769A  0E0F               	movlw	low __flash_get_status@command
 37701  00769C  6E01               	movwf	spi_tx_rx@command,c
 37702  00769E  0E00               	movlw	high __flash_get_status@command
 37703  0076A0  6E02               	movwf	spi_tx_rx@command+1,c
 37704  0076A2  0E00               	movlw	0
 37705  0076A4  6E04               	movwf	spi_tx_rx@command_length+1,c
 37706  0076A6  0E01               	movlw	1
 37707  0076A8  6E03               	movwf	spi_tx_rx@command_length,c
 37708  0076AA  0E10               	movlw	low __flash_get_status@status
 37709  0076AC  6E05               	movwf	spi_tx_rx@data,c
 37710  0076AE  0E00               	movlw	high __flash_get_status@status
 37711  0076B0  6E06               	movwf	spi_tx_rx@data+1,c
 37712  0076B2  0E00               	movlw	0
 37713  0076B4  6E08               	movwf	spi_tx_rx@data_length+1,c
 37714  0076B6  0E02               	movlw	2
 37715  0076B8  6E07               	movwf	spi_tx_rx@data_length,c
 37716  0076BA  ECBE  F02C         	call	_spi_tx_rx	;wreg free
 37717                           
 37718                           ;flash.c: 120: return status;
 37719  0076BE  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 37720  0076C2  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37721  0076C6  0012               	return	
 37722  0076C8                     __end_of__flash_get_status:
 37723                           	opt stack 0
 37724                           tosu	equ	0xFFF
 37725                           tosh	equ	0xFFE
 37726                           tosl	equ	0xFFD
 37727                           pclath	equ	0xFFA
 37728                           tblptru	equ	0xFF8
 37729                           tblptrh	equ	0xFF7
 37730                           tblptrl	equ	0xFF6
 37731                           tablat	equ	0xFF5
 37732                           prodh	equ	0xFF4
 37733                           prodl	equ	0xFF3
 37734                           intcon	equ	0xFF2
 37735                           intcon2	equ	0xFF1
 37736                           intcon3	equ	0xFF0
 37737                           indf0	equ	0xFEF
 37738                           postinc0	equ	0xFEE
 37739                           fsr0h	equ	0xFEA
 37740                           fsr0l	equ	0xFE9
 37741                           wreg	equ	0xFE8
 37742                           indf1	equ	0xFE7
 37743                           postdec1	equ	0xFE5
 37744                           plusw1	equ	0xFE3
 37745                           fsr1h	equ	0xFE2
 37746                           fsr1l	equ	0xFE1
 37747                           indf2	equ	0xFDF
 37748                           postinc2	equ	0xFDE
 37749                           postdec2	equ	0xFDD
 37750                           plusw2	equ	0xFDB
 37751                           fsr2h	equ	0xFDA
 37752                           fsr2l	equ	0xFD9
 37753                           status	equ	0xFD8
 37754                           
 37755 ;; *************** function _spi_tx_rx *****************
 37756 ;; Defined at:
 37757 ;;		line 300 in file "spi.c"
 37758 ;; Parameters:    Size  Location     Type
 37759 ;;  command         2    0[COMRAM] PTR unsigned char 
 37760 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 37761 ;;  command_leng    2    2[COMRAM] unsigned int 
 37762 ;;  data            2    4[COMRAM] PTR unsigned char 
 37763 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 37764 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 37765 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 37766 ;;		 -> _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 37767 ;;  data_length     2    6[COMRAM] unsigned int 
 37768 ;; Auto vars:     Size  Location     Type
 37769 ;;		None
 37770 ;; Return value:  Size  Location     Type
 37771 ;;                  1    wreg      void 
 37772 ;; Registers used:
 37773 ;;		wreg, status,2, status,0, cstack
 37774 ;; Tracked objects:
 37775 ;;		On entry : 0/0
 37776 ;;		On exit  : 0/0
 37777 ;;		Unchanged: 0/0
 37778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37779 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37782 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37783 ;;Total ram usage:       12 bytes
 37784 ;; Hardware stack levels used:    1
 37785 ;; Hardware stack levels required when called:    1
 37786 ;; This function calls:
 37787 ;;		__switch_mastermode
 37788 ;; This function is called by:
 37789 ;;		__flash_get_status
 37790 ;;		__flash_partial_read
 37791 ;; This function uses a non-reentrant model
 37792 ;;
 37793                           
 37794                           	psect	text200
 37795  00597C                     __ptext200:
 37796                           	opt stack 0
 37797  00597C                     _spi_tx_rx:
 37798                           	opt stack 24
 37799                           
 37800                           ;spi.c: 303: _switch_mastermode();
 37801                           
 37802                           ;incstack = 0
 37803  00597C  ECE7  F03D         	call	__switch_mastermode	;wreg free
 37804                           
 37805                           ;spi.c: 306: DMACON1bits.SSCON1 = 0;
 37806  005980  9E88               	bcf	3976,7,c	;volatile
 37807                           
 37808                           ;spi.c: 307: DMACON1bits.SSCON0 = 0;
 37809  005982  9C88               	bcf	3976,6,c	;volatile
 37810                           
 37811                           ;spi.c: 309: DMACON1bits.TXINC = 1;
 37812  005984  8A88               	bsf	3976,5,c	;volatile
 37813                           
 37814                           ;spi.c: 311: DMACON1bits.RXINC = 0;
 37815  005986  9888               	bcf	3976,4,c	;volatile
 37816                           
 37817                           ;spi.c: 313: DMACON1bits.DUPLEX1 = 0;
 37818  005988  9688               	bcf	3976,3,c	;volatile
 37819                           
 37820                           ;spi.c: 314: DMACON1bits.DUPLEX0 = 1;
 37821  00598A  8488               	bsf	3976,2,c	;volatile
 37822                           
 37823                           ;spi.c: 316: DMACON1bits.DLYINTEN = 0;
 37824  00598C  9288               	bcf	3976,1,c	;volatile
 37825                           
 37826                           ;spi.c: 318: DMACON2bits.DLYCYC = 0b0000;
 37827  00598E  9886               	bcf	3974,4,c	;volatile
 37828  005990  9A86               	bcf	3974,5,c	;volatile
 37829  005992  9C86               	bcf	3974,6,c	;volatile
 37830  005994  9E86               	bcf	3974,7,c	;volatile
 37831                           
 37832                           ;spi.c: 320: DMACON2bits.INTLVL = 0b0000;
 37833  005996  9086               	bcf	3974,0,c	;volatile
 37834  005998  9286               	bcf	3974,1,c	;volatile
 37835  00599A  9486               	bcf	3974,2,c	;volatile
 37836  00599C  9686               	bcf	3974,3,c	;volatile
 37837                           
 37838                           ;spi.c: 323: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37839  00599E  5002               	movf	spi_tx_rx@command+1,w,c
 37840  0059A0  6E6A               	movwf	3946,c	;volatile
 37841                           
 37842                           ;spi.c: 324: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37843  0059A2  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37844                           
 37845                           ;spi.c: 327: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37846  0059A6  0EFF               	movlw	255
 37847  0059A8  6E09               	movwf	??_spi_tx_rx& (0+255),c
 37848  0059AA  0EFF               	movlw	255
 37849  0059AC  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 37850  0059AE  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37851  0059B2  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37852  0059B6  5009               	movf	??_spi_tx_rx,w,c
 37853  0059B8  260B               	addwf	??_spi_tx_rx+2,f,c
 37854  0059BA  500A               	movf	??_spi_tx_rx+1,w,c
 37855  0059BC  220C               	addwfc	??_spi_tx_rx+3,f,c
 37856  0059BE  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37857  0059C2  6A0C               	clrf	??_spi_tx_rx+3,c
 37858  0059C4  500B               	movf	??_spi_tx_rx+2,w,c
 37859  0059C6  6E66               	movwf	3942,c	;volatile
 37860                           
 37861                           ;spi.c: 328: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37862  0059C8  0403               	decf	spi_tx_rx@command_length,w,c
 37863  0059CA  6E67               	movwf	3943,c	;volatile
 37864                           
 37865                           ;spi.c: 331: LATDbits.LD7 = 0;
 37866  0059CC  9E8C               	bcf	3980,7,c	;volatile
 37867                           
 37868                           ;spi.c: 334: DMACON1bits.DMAEN = 1;
 37869  0059CE  8088               	bsf	3976,0,c	;volatile
 37870  0059D0  B088               	btfsc	3976,0,c	;volatile
 37871  0059D2  D7FE               	goto	l2667
 37872                           
 37873                           ;spi.c: 338: DMACON1bits.TXINC = 0;
 37874  0059D4  9A88               	bcf	3976,5,c	;volatile
 37875                           
 37876                           ;spi.c: 340: DMACON1bits.RXINC = 1;
 37877  0059D6  8888               	bsf	3976,4,c	;volatile
 37878                           
 37879                           ;spi.c: 342: DMACON1bits.DUPLEX1 = 0;
 37880  0059D8  9688               	bcf	3976,3,c	;volatile
 37881                           
 37882                           ;spi.c: 343: DMACON1bits.DUPLEX0 = 0;
 37883  0059DA  9488               	bcf	3976,2,c	;volatile
 37884                           
 37885                           ;spi.c: 346: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37886  0059DC  5006               	movf	spi_tx_rx@data+1,w,c
 37887  0059DE  6E68               	movwf	3944,c	;volatile
 37888                           
 37889                           ;spi.c: 347: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37890  0059E0  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37891                           
 37892                           ;spi.c: 350: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37893  0059E4  0EFF               	movlw	255
 37894  0059E6  6E09               	movwf	??_spi_tx_rx& (0+255),c
 37895  0059E8  0EFF               	movlw	255
 37896  0059EA  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 37897  0059EC  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37898  0059F0  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37899  0059F4  5009               	movf	??_spi_tx_rx,w,c
 37900  0059F6  260B               	addwf	??_spi_tx_rx+2,f,c
 37901  0059F8  500A               	movf	??_spi_tx_rx+1,w,c
 37902  0059FA  220C               	addwfc	??_spi_tx_rx+3,f,c
 37903  0059FC  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37904  005A00  6A0C               	clrf	??_spi_tx_rx+3,c
 37905  005A02  500B               	movf	??_spi_tx_rx+2,w,c
 37906  005A04  6E66               	movwf	3942,c	;volatile
 37907                           
 37908                           ;spi.c: 351: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37909  005A06  0407               	decf	spi_tx_rx@data_length,w,c
 37910  005A08  6E67               	movwf	3943,c	;volatile
 37911                           
 37912                           ;spi.c: 354: DMACON1bits.DMAEN = 1;
 37913  005A0A  8088               	bsf	3976,0,c	;volatile
 37914  005A0C  B088               	btfsc	3976,0,c	;volatile
 37915  005A0E  D7FE               	goto	l2670
 37916                           
 37917                           ;spi.c: 358: LATDbits.LD7 = 1;
 37918  005A10  8E8C               	bsf	3980,7,c	;volatile
 37919  005A12  0012               	return		;funcret
 37920  005A14                     __end_of_spi_tx_rx:
 37921                           	opt stack 0
 37922                           tosu	equ	0xFFF
 37923                           tosh	equ	0xFFE
 37924                           tosl	equ	0xFFD
 37925                           pclath	equ	0xFFA
 37926                           tblptru	equ	0xFF8
 37927                           tblptrh	equ	0xFF7
 37928                           tblptrl	equ	0xFF6
 37929                           tablat	equ	0xFF5
 37930                           prodh	equ	0xFF4
 37931                           prodl	equ	0xFF3
 37932                           intcon	equ	0xFF2
 37933                           intcon2	equ	0xFF1
 37934                           intcon3	equ	0xFF0
 37935                           indf0	equ	0xFEF
 37936                           postinc0	equ	0xFEE
 37937                           fsr0h	equ	0xFEA
 37938                           fsr0l	equ	0xFE9
 37939                           wreg	equ	0xFE8
 37940                           indf1	equ	0xFE7
 37941                           postdec1	equ	0xFE5
 37942                           plusw1	equ	0xFE3
 37943                           fsr1h	equ	0xFE2
 37944                           fsr1l	equ	0xFE1
 37945                           indf2	equ	0xFDF
 37946                           postinc2	equ	0xFDE
 37947                           postdec2	equ	0xFDD
 37948                           plusw2	equ	0xFDB
 37949                           fsr2h	equ	0xFDA
 37950                           fsr2l	equ	0xFD9
 37951                           status	equ	0xFD8
 37952                           
 37953 ;; *************** function __switch_mastermode *****************
 37954 ;; Defined at:
 37955 ;;		line 55 in file "spi.c"
 37956 ;; Parameters:    Size  Location     Type
 37957 ;;		None
 37958 ;; Auto vars:     Size  Location     Type
 37959 ;;		None
 37960 ;; Return value:  Size  Location     Type
 37961 ;;                  1    wreg      void 
 37962 ;; Registers used:
 37963 ;;		None
 37964 ;; Tracked objects:
 37965 ;;		On entry : 0/0
 37966 ;;		On exit  : 0/0
 37967 ;;		Unchanged: 0/0
 37968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37973 ;;Total ram usage:        0 bytes
 37974 ;; Hardware stack levels used:    1
 37975 ;; This function calls:
 37976 ;;		Nothing
 37977 ;; This function is called by:
 37978 ;;		_spi_tx
 37979 ;;		_spi_tx_tx
 37980 ;;		_spi_tx_rx
 37981 ;; This function uses a non-reentrant model
 37982 ;;
 37983                           
 37984                           	psect	text201
 37985  007BCE                     __ptext201:
 37986                           	opt stack 0
 37987  007BCE                     __switch_mastermode:
 37988                           	opt stack 26
 37989                           
 37990                           ;incstack = 0
 37991  007BCE  0012               	return		;funcret
 37992  007BD0                     __end_of__switch_mastermode:
 37993                           	opt stack 0
 37994                           tosu	equ	0xFFF
 37995                           tosh	equ	0xFFE
 37996                           tosl	equ	0xFFD
 37997                           pclath	equ	0xFFA
 37998                           tblptru	equ	0xFF8
 37999                           tblptrh	equ	0xFF7
 38000                           tblptrl	equ	0xFF6
 38001                           tablat	equ	0xFF5
 38002                           prodh	equ	0xFF4
 38003                           prodl	equ	0xFF3
 38004                           intcon	equ	0xFF2
 38005                           intcon2	equ	0xFF1
 38006                           intcon3	equ	0xFF0
 38007                           indf0	equ	0xFEF
 38008                           postinc0	equ	0xFEE
 38009                           fsr0h	equ	0xFEA
 38010                           fsr0l	equ	0xFE9
 38011                           wreg	equ	0xFE8
 38012                           indf1	equ	0xFE7
 38013                           postdec1	equ	0xFE5
 38014                           plusw1	equ	0xFE3
 38015                           fsr1h	equ	0xFE2
 38016                           fsr1l	equ	0xFE1
 38017                           indf2	equ	0xFDF
 38018                           postinc2	equ	0xFDE
 38019                           postdec2	equ	0xFDD
 38020                           plusw2	equ	0xFDB
 38021                           fsr2h	equ	0xFDA
 38022                           fsr2l	equ	0xFD9
 38023                           status	equ	0xFD8
 38024                           
 38025 ;; *************** function _USBTransferOnePacket *****************
 38026 ;; Defined at:
 38027 ;;		line 995 in file "usb_device.c"
 38028 ;; Parameters:    Size  Location     Type
 38029 ;;  ep              1    wreg     unsigned char 
 38030 ;;  dir             1    0[COMRAM] unsigned char 
 38031 ;;  data            2    1[COMRAM] PTR unsigned char 
 38032 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 38033 ;;		 -> msd_cbw(31), NULL(0), 
 38034 ;;  len             1    3[COMRAM] unsigned char 
 38035 ;; Auto vars:     Size  Location     Type
 38036 ;;  ep              1    8[COMRAM] unsigned char 
 38037 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 38038 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 38039 ;; Return value:  Size  Location     Type
 38040 ;;                  2    0[COMRAM] PTR void 
 38041 ;; Registers used:
 38042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38043 ;; Tracked objects:
 38044 ;;		On entry : 0/0
 38045 ;;		On exit  : 0/0
 38046 ;;		Unchanged: 0/0
 38047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38049 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38051 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38052 ;;Total ram usage:       11 bytes
 38053 ;; Hardware stack levels used:    1
 38054 ;; This function calls:
 38055 ;;		Nothing
 38056 ;; This function is called by:
 38057 ;;		_USBMSDInit
 38058 ;;		_USBCheckMSDRequest
 38059 ;;		_MSDTasks
 38060 ;;		_MSDProcessCommandMediaPresent
 38061 ;;		_MSDReadHandler
 38062 ;;		_MSDWriteHandler
 38063 ;;		_MSDTransferTerminated
 38064 ;;		_APP_DeviceCustomHIDInitialize
 38065 ;;		_APP_DeviceCustomHIDTasks
 38066 ;; This function uses a non-reentrant model
 38067 ;;
 38068                           
 38069                           	psect	text202
 38070  0040C2                     __ptext202:
 38071                           	opt stack 0
 38072  0040C2                     _USBTransferOnePacket:
 38073                           	opt stack 27
 38074                           
 38075                           ;incstack = 0
 38076                           ;USBTransferOnePacket@ep stored from wreg
 38077  0040C2  6E09               	movwf	USBTransferOnePacket@ep,c
 38078                           
 38079                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 38080  0040C4  5001               	movf	USBTransferOnePacket@dir,w,c
 38081  0040C6  B4D8               	btfsc	status,2,c
 38082  0040C8  D007               	goto	l183
 38083                           
 38084                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 38085  0040CA  5009               	movf	USBTransferOnePacket@ep,w,c
 38086  0040CC  0D02               	mullw	2
 38087  0040CE  0E6C               	movlw	low _pBDTEntryIn
 38088  0040D0  24F3               	addwf	prodl,w,c
 38089  0040D2  6ED9               	movwf	fsr2l,c
 38090  0040D4  0E00               	movlw	high _pBDTEntryIn
 38091  0040D6  D006               	goto	L41
 38092  0040D8                     l183:
 38093                           
 38094                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 38095  0040D8  5009               	movf	USBTransferOnePacket@ep,w,c
 38096  0040DA  0D02               	mullw	2
 38097  0040DC  0E72               	movlw	low _pBDTEntryOut
 38098  0040DE  24F3               	addwf	prodl,w,c
 38099  0040E0  6ED9               	movwf	fsr2l,c
 38100  0040E2  0E00               	movlw	high _pBDTEntryOut
 38101  0040E4                     L41:
 38102  0040E4  20F4               	addwfc	prodh,w,c
 38103  0040E6  6EDA               	movwf	fsr2h,c
 38104  0040E8  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 38105  0040EC  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 38106                           
 38107                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 38108  0040F0  500A               	movf	USBTransferOnePacket@handle,w,c
 38109  0040F2  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 38110  0040F4  A4D8               	btfss	status,2,c
 38111  0040F6  D005               	goto	l185
 38112                           
 38113                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 38114  0040F8  0E00               	movlw	0
 38115  0040FA  6E01               	movwf	?_USBTransferOnePacket,c
 38116  0040FC  0E00               	movlw	0
 38117  0040FE  6E02               	movwf	?_USBTransferOnePacket+1,c
 38118  004100  0012               	return	
 38119  004102                     l185:
 38120                           
 38121                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 38122  004102  EE20 F002          	lfsr	2,2
 38123  004106  500A               	movf	USBTransferOnePacket@handle,w,c
 38124  004108  26D9               	addwf	fsr2l,f,c
 38125  00410A  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38126  00410C  22DA               	addwfc	fsr2h,f,c
 38127  00410E  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 38128  004112  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 38129                           
 38130                           ;usb_device.c: 1030: handle->CNT = len;
 38131  004116  EE20 F001          	lfsr	2,1
 38132  00411A  500A               	movf	USBTransferOnePacket@handle,w,c
 38133  00411C  26D9               	addwf	fsr2l,f,c
 38134  00411E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38135  004120  22DA               	addwfc	fsr2h,f,c
 38136  004122  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 38137                           
 38138                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 38139  004126  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38140  00412A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38141  00412E  0E40               	movlw	64
 38142  004130  16DF               	andwf	indf2,f,c
 38143                           
 38144                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 38145  004132  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38146  004136  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38147  00413A  0E00               	movlw	0
 38148  00413C  86DB               	bsf	plusw2,3,c
 38149                           
 38150                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 38151  00413E  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38152  004142  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38153  004146  0E00               	movlw	0
 38154  004148  8EDB               	bsf	plusw2,7,c
 38155                           
 38156                           ;usb_device.c: 1036: if(dir != 0)
 38157  00414A  5001               	movf	USBTransferOnePacket@dir,w,c
 38158  00414C  B4D8               	btfsc	status,2,c
 38159  00414E  D018               	goto	l187
 38160                           
 38161                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 38162  004150  5009               	movf	USBTransferOnePacket@ep,w,c
 38163  004152  0D02               	mullw	2
 38164  004154  0E6C               	movlw	low _pBDTEntryIn
 38165  004156  24F3               	addwf	prodl,w,c
 38166  004158  6ED9               	movwf	fsr2l,c
 38167  00415A  0E00               	movlw	high _pBDTEntryIn
 38168  00415C  20F4               	addwfc	prodh,w,c
 38169  00415E  6EDA               	movwf	fsr2h,c
 38170  004160  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 38171  004164  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 38172  004168  0E04               	movlw	4
 38173  00416A  1805               	xorwf	??_USBTransferOnePacket,w,c
 38174  00416C  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 38175  00416E  5006               	movf	??_USBTransferOnePacket+1,w,c
 38176  004170  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 38177  004172  5009               	movf	USBTransferOnePacket@ep,w,c
 38178  004174  0D02               	mullw	2
 38179  004176  0E6C               	movlw	low _pBDTEntryIn
 38180  004178  24F3               	addwf	prodl,w,c
 38181  00417A  6ED9               	movwf	fsr2l,c
 38182  00417C  0E00               	movlw	high _pBDTEntryIn
 38183  00417E  D017               	goto	L42
 38184  004180                     l187:
 38185                           
 38186                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 38187  004180  5009               	movf	USBTransferOnePacket@ep,w,c
 38188  004182  0D02               	mullw	2
 38189  004184  0E72               	movlw	low _pBDTEntryOut
 38190  004186  24F3               	addwf	prodl,w,c
 38191  004188  6ED9               	movwf	fsr2l,c
 38192  00418A  0E00               	movlw	high _pBDTEntryOut
 38193  00418C  20F4               	addwfc	prodh,w,c
 38194  00418E  6EDA               	movwf	fsr2h,c
 38195  004190  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 38196  004194  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 38197  004198  0E04               	movlw	4
 38198  00419A  1805               	xorwf	??_USBTransferOnePacket,w,c
 38199  00419C  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 38200  00419E  5006               	movf	??_USBTransferOnePacket+1,w,c
 38201  0041A0  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 38202  0041A2  5009               	movf	USBTransferOnePacket@ep,w,c
 38203  0041A4  0D02               	mullw	2
 38204  0041A6  0E72               	movlw	low _pBDTEntryOut
 38205  0041A8  24F3               	addwf	prodl,w,c
 38206  0041AA  6ED9               	movwf	fsr2l,c
 38207  0041AC  0E00               	movlw	high _pBDTEntryOut
 38208  0041AE                     L42:
 38209  0041AE  20F4               	addwfc	prodh,w,c
 38210  0041B0  6EDA               	movwf	fsr2h,c
 38211  0041B2  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 38212  0041B6  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 38213                           
 38214                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 38215  0041BA  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 38216  0041BE  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 38217  0041C2  0012               	return	
 38218  0041C4                     __end_of_USBTransferOnePacket:
 38219                           	opt stack 0
 38220                           tosu	equ	0xFFF
 38221                           tosh	equ	0xFFE
 38222                           tosl	equ	0xFFD
 38223                           pclath	equ	0xFFA
 38224                           tblptru	equ	0xFF8
 38225                           tblptrh	equ	0xFF7
 38226                           tblptrl	equ	0xFF6
 38227                           tablat	equ	0xFF5
 38228                           prodh	equ	0xFF4
 38229                           prodl	equ	0xFF3
 38230                           intcon	equ	0xFF2
 38231                           intcon2	equ	0xFF1
 38232                           intcon3	equ	0xFF0
 38233                           indf0	equ	0xFEF
 38234                           postinc0	equ	0xFEE
 38235                           fsr0h	equ	0xFEA
 38236                           fsr0l	equ	0xFE9
 38237                           wreg	equ	0xFE8
 38238                           indf1	equ	0xFE7
 38239                           postdec1	equ	0xFE5
 38240                           plusw1	equ	0xFE3
 38241                           fsr1h	equ	0xFE2
 38242                           fsr1l	equ	0xFE1
 38243                           indf2	equ	0xFDF
 38244                           postinc2	equ	0xFDE
 38245                           postdec2	equ	0xFDD
 38246                           plusw2	equ	0xFDB
 38247                           fsr2h	equ	0xFDA
 38248                           fsr2l	equ	0xFD9
 38249                           status	equ	0xFD8
 38250                           tosu	equ	0xFFF
 38251                           tosh	equ	0xFFE
 38252                           tosl	equ	0xFFD
 38253                           pclath	equ	0xFFA
 38254                           tblptru	equ	0xFF8
 38255                           tblptrh	equ	0xFF7
 38256                           tblptrl	equ	0xFF6
 38257                           tablat	equ	0xFF5
 38258                           prodh	equ	0xFF4
 38259                           prodl	equ	0xFF3
 38260                           intcon	equ	0xFF2
 38261                           intcon2	equ	0xFF1
 38262                           intcon3	equ	0xFF0
 38263                           indf0	equ	0xFEF
 38264                           postinc0	equ	0xFEE
 38265                           fsr0h	equ	0xFEA
 38266                           fsr0l	equ	0xFE9
 38267                           wreg	equ	0xFE8
 38268                           indf1	equ	0xFE7
 38269                           postdec1	equ	0xFE5
 38270                           plusw1	equ	0xFE3
 38271                           fsr1h	equ	0xFE2
 38272                           fsr1l	equ	0xFE1
 38273                           indf2	equ	0xFDF
 38274                           postinc2	equ	0xFDE
 38275                           postdec2	equ	0xFDD
 38276                           plusw2	equ	0xFDB
 38277                           fsr2h	equ	0xFDA
 38278                           fsr2l	equ	0xFD9
 38279                           status	equ	0xFD8
 38280                           
 38281                           	psect	text203
 38282  000000                     __ptext203:
 38283                           	opt stack 0
 38284                           tosu	equ	0xFFF
 38285                           tosh	equ	0xFFE
 38286                           tosl	equ	0xFFD
 38287                           pclath	equ	0xFFA
 38288                           tblptru	equ	0xFF8
 38289                           tblptrh	equ	0xFF7
 38290                           tblptrl	equ	0xFF6
 38291                           tablat	equ	0xFF5
 38292                           prodh	equ	0xFF4
 38293                           prodl	equ	0xFF3
 38294                           intcon	equ	0xFF2
 38295                           intcon2	equ	0xFF1
 38296                           intcon3	equ	0xFF0
 38297                           indf0	equ	0xFEF
 38298                           postinc0	equ	0xFEE
 38299                           fsr0h	equ	0xFEA
 38300                           fsr0l	equ	0xFE9
 38301                           wreg	equ	0xFE8
 38302                           indf1	equ	0xFE7
 38303                           postdec1	equ	0xFE5
 38304                           plusw1	equ	0xFE3
 38305                           fsr1h	equ	0xFE2
 38306                           fsr1l	equ	0xFE1
 38307                           indf2	equ	0xFDF
 38308                           postinc2	equ	0xFDE
 38309                           postdec2	equ	0xFDD
 38310                           plusw2	equ	0xFDB
 38311                           fsr2h	equ	0xFDA
 38312                           fsr2l	equ	0xFD9
 38313                           status	equ	0xFD8
 38314                           
 38315                           	psect	rparam
 38316  0000                     tosu	equ	0xFFF
 38317                           tosh	equ	0xFFE
 38318                           tosl	equ	0xFFD
 38319                           pclath	equ	0xFFA
 38320                           tblptru	equ	0xFF8
 38321                           tblptrh	equ	0xFF7
 38322                           tblptrl	equ	0xFF6
 38323                           tablat	equ	0xFF5
 38324                           prodh	equ	0xFF4
 38325                           prodl	equ	0xFF3
 38326                           intcon	equ	0xFF2
 38327                           intcon2	equ	0xFF1
 38328                           intcon3	equ	0xFF0
 38329                           indf0	equ	0xFEF
 38330                           postinc0	equ	0xFEE
 38331                           fsr0h	equ	0xFEA
 38332                           fsr0l	equ	0xFE9
 38333                           wreg	equ	0xFE8
 38334                           indf1	equ	0xFE7
 38335                           postdec1	equ	0xFE5
 38336                           plusw1	equ	0xFE3
 38337                           fsr1h	equ	0xFE2
 38338                           fsr1l	equ	0xFE1
 38339                           indf2	equ	0xFDF
 38340                           postinc2	equ	0xFDE
 38341                           postdec2	equ	0xFDD
 38342                           plusw2	equ	0xFDB
 38343                           fsr2h	equ	0xFDA
 38344                           fsr2l	equ	0xFD9
 38345                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    770
    Data        30
    BSS         2025
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     67     160
    BANK1           256      0     247
    BANK2           256      0     178
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), inq_resp(CODE[36]), 
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), inq_resp(CODE[36]), 
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), 
		 -> _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_program
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  846061
                                             65 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0    7310
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   27995
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                           _i2c_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6059
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    5793
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21892
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5456
                                             44 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16436
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   63681
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   14817
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21428
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14409
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  108833
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   47314
                                             85 COMRAM     8     8      0
                                             45 BANK0      9     9      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   43949
                                             85 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    2992
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2634
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17548
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5282
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143080
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82712
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   98928
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   98928
                                             77 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   93764
                                             72 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47633
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   45875
                                             58 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22693
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15105
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14760
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12553
                                             54 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5157
                                             44 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4876
                                             40 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  386330
                                             61 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   78893
                                             93 COMRAM     1     1      0
                                             57 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_read_file                              20    16      4   44044
                                             85 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   35156
                                             63 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    8084
                                             48 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    2888
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_file_details                        5     1      4   16961
                                             63 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_configuration                      10     8      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_find_file                               9     5      4    9908
                                             68 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (2) _api_parse                                            6     3      3  304124
                                             86 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0    2697
                                             19 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (4) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_writeByte                                 9     6      3    2629
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  3     1      2  300959
                                             83 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (4) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_rename                                   3     1      2   39338
                                             67 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (5) _fat_rename_file                                     38    34      4   39117
                                             63 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (4) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_delete                                   3     1      2   69350
                                             63 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (5) _fat_delete_file                                      5     5      0   69173
                                             58 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (6) __get_first_cluster                                  10     8      2    8083
                                             48 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __delete_root                                         7     7      0   21729
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) __parse_file_create                                   3     1      2   82415
                                             80 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (5) _fat_create_file                                     53    45      8   82216
                                             68 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2012
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (6) _fat_get_empty_clusters                              12    10      2    8307
                                             48 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9464
                                             48 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) __get_available_root_entry                            1     1      0    8215
                                             55 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (4) __parse_file_append                                   3     1      2  109406
                                             75 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (5) _fat_append_to_file                                  63    59      4  109163
                                             63 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   16584
                                             55 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    8125
                                             48 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __write_root                                          8     6      2   21995
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) __write_fat                                           8     4      4   22619
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (7) _flash_partial_write                                  9     1      8   21615
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (8) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (6) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (6) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8438
                                             48 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __get_empty_cluster                                  10     8      2    8439
                                             48 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7946
                                             40 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4254
                                             20 COMRAM    20    12      8
                      _flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _flash_is_busy                                        1     1      0    2402
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __switch_mastermode                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_tx
                   __switch_mastermode
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
               __switch_mastermode
           __flash_wakeup
             _spi_tx
               __switch_mastermode
         _spi_set_configuration
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx
                       __switch_mastermode
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx
                       __switch_mastermode
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx_tx
                       __switch_mastermode
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx
               __switch_mastermode
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx
               __switch_mastermode
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_tx
               __switch_mastermode
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
               __switch_mastermode
           __flash_wakeup
             _spi_tx
               __switch_mastermode
         _memcpy
         _spi_tx
           __switch_mastermode
       _spi_init
         __spi_init
       _spi_set_configuration
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      B2       9       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F7       7       96.5%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A8      31        0.0%
DATA                 0      0     8A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Aug 17 01:00:47 2018

                          __end_of_fat_read_from_file 2116  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0047  
              __end_of_i2c_display_send_init_sequence 7752  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7726  
                                 __system_timer0_init 7990  
                                                  _os 0060  
                                       _USBDeviceInit 37D0  
                                  _USBCheckHIDRequest 4498  
                __bootloader_verify_file@return_value 00EA  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0032  
                                 __end_of_system_init 66E4  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4FAC  
                                                 l210 580E  
                                                 l220 41EC  
                                                 l141 383E  
                                                 l214 5B0C  
                                                 l310 53B4  
                                                 l150 3530  
                                                 l143 387A  
                                                 l303 74B6  
                                                 l151 3528  
                                                 l320 6A8C  
                                                 l208 57F4  
                                                 l224 426E  
                                                 l304 74B4  
                                                 l152 3526  
                                                 l241 4DD0  
                                                 l233 4D2C  
                                                 l161 35A8  
                                                 l242 4D9A  
                                                 l330 4E92  
                                                 l322 6AD6  
                                                 l235 4D36  
                                                 l331 4E58  
                                                 l251 3C4C  
                                                 l411 44E6  
                                                 l219 4244  
                                                 l139 3816  
                                                 l171 3636  
                                                 l163 35BE  
                                                 l155 354A  
                                                 l252 3C32  
                                                 l412 44B4  
                                                 l260 4788  
                                                 l164 35CA  
                                                 l156 355A  
                                                 l237 4D92  
                                                 l333 4E78  
                                                 l309 53BA  
                                                 l173 365A  
                                                 l165 35F2  
                                                 l157 3562  
                                                 l238 4D5C  
                                                 l422 4508  
                                                 l414 44F8  
                         __end_of_USBStdGetDscHandler 3A58  
                                                 l262 47FC  
                                                 l350 43F6  
                                                 l166 35FC  
                                                 l158 3576  
                                                 l183 40D8  
                                                 l191 3E0E  
                                                 l423 4520  
                                                 l415 44D2  
                                                 l271 3944  
                                                 l343 4454  
                                                 l175 3676  
                                                 l159 3582  
                                                 l328 4E10  
                                                 l248 3BD6  
                                                 l424 452C  
                                                 l360 17D0  
                                                 l272 39D2  
                                                 l352 43FC  
                                                 l344 43C6  
                                                 l168 360E  
                                                 l185 4102  
                                                 l329 4E14  
                                                 l249 3BB4  
                                                 l521 3FAC  
                                                 l425 4544  
                                                 l361 17D6  
                                                 l281 544A  
                                                 l353 441A  
                                                 l610 698E  
                                                 l178 73EC  
                                                 l418 4550  
                                                 l530 503C  
                                                 l274 39DA  
                                                 l282 53D8  
                                                 l354 4436  
                                                 l346 43D0  
                                                 l187 4180  
                                                 l603 6996  
                                                 l179 73FA  
                                                 l371 18F6  
                                                 l363 1842  
                                                 l275 3A30  
                                                 l347 43D6  
                                                 l620 04BE  
                                                 l604 695A  
                                                 l372 1912  
                                                 l268 3A40  
                                                 l348 43DC  
                                                 l621 04C8  
                                                 l381 1A0A  
                                                 l365 188A  
                                                 l277 3A38  
                                                 l269 3930  
                                                 l285 5460  
                                                 l349 43F0  
                                                 l710 458A  
                                                 l702 173A  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6976  
                                                 l518 3FB4  
                                                 l534 50A2  
                                                 l374 1978  
                                                 l286 53EA  
                                                 l703 1752  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3F28  
                                                 l375 1984  
                                                 l367 18AC  
                                                 l287 53F0  
                                                 l295 7256  
                                                 l712 45A0  
                                                 l704 176A  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6982  
                                                 l800 5EC2  
                                                 l376 19FE  
                                                 l288 540E  
                                                 l296 7254  
                                                 l721 462C  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6988  
                                                 l561 1DE6  
                                                 l529 50D8  
                                                 l369 192C  
                                                 l722 4616  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1ED2  
                                                 l562 1DD0  
                                                 l546 50AA  
                                                 l810 5EB4  
                                                 l715 45D0  
                                                 l651 07CC  
                                                 l571 1E02  
                                                 l563 1DA4  
                                                 l555 1CA2  
                                                 l379 19B8  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1DAC  
                                                 l804 5E90  
                                                 l661 5934  
                                                 l741 3FE8  
                                                 l733 463E  
                                                 l645 0784  
                                                 l573 1E14  
                                                 l805 5E98  
                                                 l750 401C  
                                                 l718 45DC  
                                                 l670 2B78  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1DC4  
                                                 l806 5EA0  
                                                 l751 4028  
                                                 l719 45F6  
                                                 l671 2B82  
                                                 l575 1E36  
                                                 l559 1CC4  
                                                 l752 403A  
                                                 l680 2CAE  
                                                 l672 2B96  
                                                 l648 07CE  
                                                 l592 3D0C  
                                                 l576 1E3E  
                                                 l808 5EAA  
                                                 l753 4046  
                                                 l737 464E  
                                                 l665 2CC4  
                                                 l649 07A8  
                                                 l577 1E62  
                                                 l930 547E  
                                                 l754 4058  
                                                 l674 2BE0  
                                                 l666 2B18  
                                                 l690 15A0  
                                                 l586 1EB4  
                                                 l659 591E  
                                                 l747 409A  
                                                 l755 408E  
                                                 l675 2C08  
                                                 l691 15AC  
                                                 l748 4014  
                                                 l668 2CE8  
                                                 l676 2C36  
                                                 l684 1782  
                                                 l692 15CA  
                                                 l596 3DA4  
                                                 l764 6E74  
                                                 l860 4984  
                                                 _BDT 000D00  
                                                 l677 2C48  
                                                 l669 2B6C  
                                                 l693 1614  
                                                 l685 14FA  
                                                 l597 3D9E  
                                                 l589 1EBC  
                                                 l861 4930  
                                                 l678 2C4E  
                                                 l694 15EE  
                                                 l862 49C8  
                                                 l870 4974  
                                                 l679 2C62  
                                                 l687 17A6  
                                                 l695 1656  
                                                 l599 3DA8  
                                                 l767 6EAA  
                                                 l863 4938  
                                                 l936 54EA  
                                                 l696 1652  
                                                 l688 159A  
                                                 l880 6C3E  
                                                 l864 4940  
                                                 l865 4948  
                       __size_of__sector_from_cluster 000E  
                                                 l698 166A  
                                                 l890 6F96  
                                                 l882 6C46  
                                                 l866 4950  
                                                 l858 4912  
                                                 l699 16D2  
                                                 l891 6F5C  
                                                 l867 4958  
                                                 l972 7A98  
                                                 l868 4960  
                                                 l893 6F66  
                                                 l877 6C18  
                                                 l897 6F78  
                                                 l899 6F84  
                                                 _LBA 0080  
                                                 _LUN 01DA  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 003A  
                                _i2c_digipot_reset_on 7908  
                            __size_of__display_failed 02F6  
                                         _start_line1 8D88  
                                         _start_line2 8D77  
                                         _start_line3 8CF6  
                                         _start_line4 8E62  
                                  api_prepare@command 005E  
                                          _USBSuspend 76C8  
                                  _internalFlash_read 74C2  
                              __end_of_display_update 674E  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 3508  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 005F  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 6ADC  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0033  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00F5  
                            fat_create_file@root_slot 00C0  
                         __flash_write_to_buffer@data 0016  
                                                l1101 7B26  
                                                l2000 315A  
                                                l1040 758C  
                                                l1113 7B32  
                                                l2001 315E  
                                                l1130 77BC  
                                                l2010 3182  
                                                l2002 3162  
                                                l1107 7B8A  
                                                l1131 77AE  
                                                l2011 3212  
                                                l2003 3166  
                                                l1132 77D0  
                                                l2004 316A  
                                                l2020 5566  
                                                l1133 77B2  
                                                l2005 316E  
                                                l1134 77B6  
                                                l1046 78DA  
                                                l2014 7824  
                                                l2006 3172  
                                                l1222 62F4  
                                                l1047 78C8  
                                                l1119 7B1E  
                                                l2007 3176  
                                                l1039 7582  
                                                l1144 5DB8  
                                                l2200 0BE2  
                                                l2008 317A  
                                                l2024 55B6  
                                                l1240 4B48  
                                                l1145 5D9C  
                                                l2201 0C5E  
                                                l2009 317E  
                                                l1241 4AA4  
                                                l1138 71C0  
                                                l2210 0D5E  
                                                l2202 0CB8  
                                                l1226 630E  
                                                l1250 4B3A  
                                                l1139 71A4  
                                                l2203 0D10  
                                                l1219 6336  
                                                l2052 6372  
                                                l1092 7B92  
                                                l2300 6060  
                                                l2212 0E0C  
                                                l1500 0F64  
                                                l1244 4AB8  
                                                l2061 777A  
                                                l2213 0ECE  
                                                l1501 0F36  
                                                l1421 4C72  
                                                l1229 6326  
                                                l1245 4AC8  
                                                l2054 6382  
                                                l2206 0F18  
                                                l2214 0E16  
                                                l1430 4CC4  
                                                l1422 4C48  
                                                l1246 4ADC  
                                                l2215 0E8E  
                                                l2207 0D22  
                                                l1511 11AC  
                                                l1503 0FB8  
                                                l1431 4CB0  
                                                l1167 6E48  
                                                l2072 003E  
                                                l2216 0EC8  
                                                l1504 0F8A  
                                                l1440 36B2  
                                                l1432 4CB6  
                                                l1424 4C4E  
                                                l1168 6E2C  
                                                l1600 614A  
                                                l1248 4B00  
                                                l2305 7836  
                                                l2057 7762  
                                                l2081 039C  
                                                l2161 7106  
                                                l1521 10FC  
                                                l1513 105C  
                                                l1441 3684  
                                                l1433 4CBC  
                                                l1425 4C54  
                                                l1601 6176  
                                                l1249 4B1E  
                                                l2314 74F6  
                                                l2082 03C0  
                                                l2074 00B4  
                                                l2218 0EE4  
                                                l2154 7112  
                                                l1506 118A  
                                                l1522 10CE  
                                                l1514 102E  
                                                l1450 3780  
                                                l1434 4CEE  
                                                l1426 4C5A  
                                                l1611 6F2C  
                                                l2171 48D4  
                                                l2059 776C  
                                                l2075 0202  
                                                l2155 70F4  
                                                l1371 7156  
                                                l1443 3706  
                                                l1435 4CF8  
                                                l1427 4C60  
                                                l2500 5C82  
                                                l2420 42EE  
                                                l2172 48D6  
                                                l2084 0426  
                                                l2076 0188  
                                                l1508 100C  
                                                l1540 2DCA  
                                                l1444 36D8  
                                                l1428 4C66  
                                                l2501 5C90  
                                                l2173 48E0  
                                                l2157 70FA  
                                                l1381 4F2C  
                                                l1525 114C  
                                                l1517 10AC  
                                                l1509 0FDE  
                                                l1461 2A14  
                                                l1541 2D9C  
                                                l1429 4C6C  
                                                l2510 703A  
                                                l2502 5C9E  
                                                l2430 4378  
                                                l2422 4304  
                                                l2086 0458  
                                                l2078 033E  
                                                l2190 140A  
                                                l2158 7100  
                                                l1550 3398  
                                                l1526 111E  
                                                l1518 107E  
                                                l1462 29E6  
                                                l1534 2D22  
                                                l1446 375A  
                                                l1631 6200  
                                                l2503 5CAC  
                                                l2431 4386  
                                                l2423 431A  
                                                l2167 48EC  
                                                l2079 0310  
                                                l2191 143C  
                                                l1383 4F50  
                                                l1391 09D8  
                                                l1455 296C  
                                                l1543 2E7E  
                                                l1535 2CF4  
                                                l1447 372C  
                                                l1608 6F46  
                                                l1704 6536  
                                                l2440 4A02  
                                                l2168 4828  
                                                l2088 048A  
                                                l2192 146A  
                                                l3160 6FF4  
                                                l1376 4EE2  
                                                l1552 341A  
                                                l1528 11E0  
                                                l1464 2AA0  
                                                l1456 293E  
                                                l1544 2E50  
                                                l1480 3B06  
                                                l1609 6F04  
                                                l2441 4A96  
                                                l2425 4394  
                                                l2169 487E  
                                                l2193 14C2  
                                                l1369 714A  
                                                l1553 33EC  
                                                l1393 0A84  
                                                l1529 11B2  
                                                l1465 2A68  
                                                l1537 2D76  
                                                l1449 37AE  
                                                l1473 3A8C  
                                                l1626 61A0  
                                                l1618 6D66  
                                                l1706 6598  
                                                l2522 678A  
                                                l2442 4A1A  
                                                l2434 49E0  
                                                l2426 4346  
                                                l2186 12D4  
                                                l3170 72D4  
                                                l1458 29C0  
                                                l1538 2D48  
                                                l1474 3A5E  
                                                l1627 61AA  
                                                l1619 6D70  
                                                l2443 4A36  
                                                l2451 527E  
                                                l2419 4330  
                                                l2179 578A  
                                                l2195 14E4  
                                                l2187 132E  
                                                l3155 6FCA  
                                                l1379 4F08  
                                                l1491 331C  
                                                l1555 346E  
                                                l1395 0B30  
                                                l1387 0882  
                                                l1467 2AF4  
                                                l1459 2992  
                                                l2516 664A  
                                                l2428 4354  
                                                l2188 13AA  
                                                l3156 6FC2  
                                                l1492 32E4  
                                                l1556 3440  
                                                l3084 68AA  
                                                l1468 2AC6  
                                                l1476 3AE0  
                                                l1900 4B8C  
                          USBConfigureEndpoint@handle 0007  
                                                l1629 61E2  
                                                l1653 6D0E  
                                                l1645 70B4  
                                                l2437 49E6  
                                                l2453 52B8  
                                                l2429 4366  
                                                l3165 72B2  
                                                l1485 324A  
                                                l1549 33C6  
                                                l3085 689E  
                                                l1389 092C  
                                                l1477 3AB2  
                                                l1901 4B90  
                                                l1654 6D18  
                                                l1646 70BE  
                                                l1830 5256  
                                                l3166 72AA  
                                                l1494 3370  
                                                l1486 321C  
                                                l1558 34E6  
                                                l1910 4BB4  
                                                l1902 4B94  
                                                l3351 6946  
                                                l2439 4A5E  
                                                l2463 2900  
                                                l2455 52F6  
                                                l1735 754C  
                                                l3159 6FEA  
                                                l3343 55C8  
                                                l1495 3342  
                                                l1559 34B8  
                                                l2703 5F42  
                                                l1479 3B34  
                                                l1911 4BB8  
                                                l1903 4B98  
                                                l2528 5FD2  
                                                l1824 5202  
                                                l3352 6908  
                                                l1840 3072  
                                                l2464 292E  
                                                l2456 52C2  
                                                l1488 329E  
                                                l2704 5F36  
                                                l3088 68D2  
                                                l1920 1A3A  
                                                l1912 4BBC  
                                                l1904 4B9C  
                                                l2641 6B2E  
                                                l1841 3014  
                                                l2465 2906  
                                                l2457 52CE  
                                                l2481 24EE  
                                                l3169 72CA  
                                                l3345 5602  
                                                l1489 3270  
                                                l3089 68E0  
                                                l1921 1A3E  
                                                l1905 4BA0  
                                                l2633 73C8  
                                                l2642 6AEA  
                                                l3370 50EC  
                                                l1842 3036  
                                                l1850 67DC  
                                                l2490 60D8  
                                                l2298 6054  
                                                l3346 5640  
                                                l1930 1AC4  
                                                l1922 1A50  
                                                l1906 4BA4  
                                                l2634 73A4  
                                                l1659 798C  
                                                l3371 518A  
                                                l1843 306C  
                                                l2491 60DE  
                                                l1739 7516  
                                                l3339 727E  
                                                l2707 5F76  
                                                l1931 1AC8  
                                                l1923 1A60  
                                                l1907 4BA8  
                                                l2635 73D6  
                                                l2652 6BEA  
                                                l1772 6288  
                                                l1860 2124  
                                                l1780 78F0  
                                                l1852 681A  
                                                l2492 60E4  
                                                l2476 56CA  
                                                l2708 5F84  
                                                l1916 1B58  
                                                l1940 1AEC  
                                                l1932 1ACC  
                                                l1924 1A70  
                                                l1908 4BAC  
                                                l2636 73B6  
                                                l2661 5C58  
                                                l2485 60EA  
                                                l3357 7798  
                                                l1941 1AF0  
                                                l1933 1AD0  
                                                l1925 1A80  
                                                l1917 1A32  
                                                l1909 4BB0  
                                                l2670 5A0C  
                                                l1774 62EE  
                                                l1782 7900  
                                                l2486 609A  
                                                l3358 7788  
                                                l1950 1B14  
                                                l1942 1AF4  
                                                l1934 1AD4  
                                                l1926 1A90  
                                                l1863 2192  
                                                l1839 2F3A  
                                                l1847 67C2  
                                                l1951 1B18  
                                                l1943 1AF8  
                                                l1935 1AD8  
                                                l1927 1AA0  
                                                l1919 1A36  
                                                l1864 216C  
                                                l1792 5D00  
                                                l2496 5CBC  
                                                l2488 60A0  
                                                l1880 1F3E  
                                                l1696 6EFA  
                                                l1960 1B3C  
                                                l1952 1B1C  
                                                l1944 1AFC  
                                                l1936 1ADC  
                                                l1928 1AB0  
                                                l3369 5192  
                                                l1873 5A36  
                                                l2497 5C66  
                                                l2489 60BC  
                                                l1961 1B40  
                                                l1953 1B20  
                                                l1945 1B00  
                                                l1937 1AE0  
                                                l1929 1AC0  
                                                l2658 5C24  
                                                l1866 22E8  
                                                l2498 5CEA  
                                                l1882 1F76  
                                                l1970 6DC8  
                                                l1962 1B44  
                                                l1954 1B24  
                                                l1946 1B04  
                                                l1938 1AE4  
                                                l2667 59D0  
                                                l1867 220A  
                                                l1795 5D62  
                                                l1875 5A6A  
                                                l2499 5C74  
                                                l1883 1F50  
                                                l1971 6DAC  
                                                l1963 1B48  
                                                l1955 1B28  
                                                l1947 1B08  
                                                l1939 1AE8  
                                                l1788 643E  
                                                l1868 2260  
                                                l1964 1B4C  
                                                l1956 1B2C  
                                                l1948 1B0C  
                                                l1892 4BC0  
                                                l1869 22A6  
                                                l1885 20FE  
                                                l1973 6DB0  
                                                l1965 1B50  
                                                l1957 1B30  
                                                l1949 1B10  
                                                l1893 4B74  
                                                l1886 1FEC  
                                                l1974 6DB4  
                                                l1966 1B54  
                                                l1958 1B34  
                                                l1990 3132  
                                                l1887 2014  
                                                l1975 6DB8  
                                                l1959 1B38  
                                                l1895 4B78  
                                                l1991 3136  
                                                l1983 30B0  
                                                l1888 20BC  
                                                l1976 6DBC  
                                                l1896 4B7C  
                                                l1992 313A  
                                                l1977 6DC0  
                                                l1897 4B80  
                                                l1993 313E  
                                                l1985 30BE  
                                                l1978 6DC4  
                                                l1898 4B84  
                                                l1994 3142  
                                                l1899 4B88  
                                                l1995 3146  
                                                l1987 30F6  
                                                l1996 314A  
                                                l1989 3186  
                                                l1997 314E  
                                                l1998 3152  
                                                l1999 3156  
                                                l9553 44CC  
                                                l9831 50EC  
                                                l9671 45DC  
                                                l9743 6F84  
                                                l9739 6F66  
                                                l9935 4D36  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CE2  
                                                l9967 6908  
                                                l9887 7788  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D77  
                                      _bootloader_run 70F0  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 009F  
                                                u6055 61B6  
                                                u7015 2B3E  
                                                u6145 6D24  
                                                u6234 3F9E  
                                                u6218 3F6C  
                                                u6235 3F98  
                                                u6219 3F80  
                                                u6260 3FD4  
                                                u6165 621C  
                                                u7125 1520  
                                                u7320 6C54  
                                                u7208 1620  
                                                u8040 199E  
                                                u6345 6D7C  
                                                u7209 1634  
                                                u7330 6C60  
                                                u7250 170C  
                                                u8210 074C  
                                                u9020 5FCE  
                                                u7340 6C6C  
                                                u6620 4628  
                                                u7068 2BBA  
                                                u7260 170E  
                                                u7148 1554  
                                                u8220 075E  
                                                u8140 062C  
                                                u8108 052C  
                                                u6460 5084  
                                                u7069 2BCE  
                                                u7149 1568  
                                                u8109 0540  
                                                u7430 7904  
                                                u8310 2F0A  
                                                u7350 6C78  
                                                u8118 055C  
                                                u6198 3F48  
                                                u8119 0570  
                                                u6199 3F5A  
                               ??_USBCtrlTrfTxService 0001  
                                                u7600 5262  
                                                u8320 2F38  
                                                u7360 6C84  
                                                u7328 6C56  
                                                u6640 463A  
                                                u9040 5F46  
                                                u6810 5144  
                                                u7610 5268  
                                                u7370 6C8E  
                                                u7338 6C62  
                                                u6730 7548  
                                                u8250 07D6  
                                                u7515 6CCA  
                                                u8315 2F00  
                                                u7460 6444  
                                                u6820 517A  
                                                u7348 6C6E  
                                                u6660 464A  
                                                u6740 7512  
                                                u9204 3CF0  
                                                u9300 09EC  
                                                u7525 6B62  
                                                u9205 3CEA  
                                                u7358 6C7A  
                                                u6590 4612  
                                                u7278 1714  
                                                u8158 064C  
                                                u9214 3D22  
                                                u9070 68AE  
                                                u9310 0A98  
                                                u6815 513E  
                                                u7535 684C  
                                                u7279 1728  
                                                u8159 0660  
                                                u9215 3D1C  
                                                _UCFG 000F39  
                                                u7376 6C90  
                                                u7368 6C86  
                                                u7800 39CC  
                                                u9400 55BC  
                                                u6817 5134  
                                                u8450 5A5E  
                                                u6850 6FCE  
                                                u6827 5170  
                                                u6780 62EA  
                                                u7820 3A24  
                                                u8700 4EF4  
                                                u9500 266C  
                                                u9420 257C  
                                                _UEP0 000F26  
                                                u6765 62AE  
                                                u7645 63A8  
                                                _UEP1 000F27  
                                                u6790 510C  
                                                u8470 5A9A  
                                                u9254 3D74  
                                                u9238 3D44  
                                                u9190 3CDA  
                                                u6950 4D84  
                                                u7750 47B4  
                                                u8710 4F18  
                                    ?_fat_create_file 0045  
                                                u9255 3D6E  
                                                u9239 3D56  
                                                u7807 39C2  
                                                u9600 00A2  
                                                u6880 72B6  
                                                u8720 4F3C  
                                                u9520 269C  
                                                u9440 25C0  
                                                u9178 3CA8  
                                                u6970 4DC2  
                                                u9290 0940  
                                                u9370 556C  
                                                u9179 3CBC  
                                                u7827 3A1A  
                                                _UEIE 000F37  
                                                u9700 48AA  
                                                u9540 26D6  
                                                u9460 2604  
                                                u6797 5102  
                                                u8645 732C  
                                                u6957 4D7A  
                                                u8821 30C8  
                                                u6990 6928  
                                                u7790 399C  
                                                u8735 6470  
                                                u9800 607A  
                                                u9560 2704  
                                                u9480 263E  
                                                u6977 4DB8  
                                                u8930 7036  
                                                u8690 4ECE  
                                                u9580 2734  
                                                u6997 691E  
                                                u7797 3992  
                                                u8960 6646  
                                                u9840 24DE  
                                                u9680 484E  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8865 64CE  
                                                u9930 3832  
                                                u9755 79EE  
                                                u8885 7706  
                                                u9765 75A6  
                                                u8990 6786  
                                                u9775 6026  
                                                u9880 52F4  
                                                u9960 38D6  
                               _i2c_digipot_reset_off 792A  
                             ??_fat_get_format_status 002D  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 69BA  
              __end_of__fill_buffer_get_configuration 58E0  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5842  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0094  
                                                _main 48F8  
                                                _itoa 725A  
                          __end_of_fat_append_to_file 2336  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4D0C  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 55C0  
                          ??_ExternalFlash_SectorRead 0035  
                         __fill_buffer_find_file@cntr 004D  
                             __bootloader_verify_file 1226  
                           _ExternalFlash_MediaDetect 7BC2  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7AF6  
                               _display_get_character 77D6  
                                ??_USBCheckHIDRequest 0001  
                          __end_of__switch_mastermode 7BD0  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D54  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0049  
                          __end_of_USBCheckStdRequest 4498  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 0BC8  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0047  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 008A  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3392  
                                      _hex_file_entry 01BE  
                              _bootloader_get_entries 7B6A  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7696  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0086  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 688C  
                                               l10301 51CC  
                                               l10045 2CBE  
                                               l10247 5D62  
                                               l10177 78E8  
                                               l10337 5268  
                                               l10249 5D66  
                                               l12201 6114  
                                               l10197 63E2  
                                               l10295 51B8  
                                               l12145 0882  
                                               l12321 2646  
                                               l10459 4780  
                                               l12331 266C  
                              ?_i2c_digipot_backlight 0001  
                                               l11293 1F50  
                                               l12333 2674  
                                               l12309 2620  
                                               l12229 5538  
                                               l12247 5588  
                                               l13145 4A32  
                                               l12281 2598  
                                               l10923 216C  
                                               l10691 05FC  
                                               l12371 270C  
                                               l12347 26B8  
                                               l12267 2554  
                             ?__fill_buffer_find_file 0045  
                                               l12471 487E  
                                               l11671 30B0  
                                               l12359 26DE  
                                               l12295 25DC  
                                               l10881 3036  
                                               l12617 56C2  
                                               l12545 6058  
                                               l12369 2704  
                                               l12539 604C  
                                               l10981 5A62  
                                               l13613 1254  
                                               l11685 30F6  
                                               l11677 30BE  
                                               l13295 714E  
                                               l10969 5A2E  
                                               l13289 7142  
                                               l11793 7824  
                                               l11777 3186  
                                               l12691 52C6  
                                               l12849 380E  
                                               l13737 0E8E  
                                               l12877 3872  
                                               l13863 3606  
                                               l14577 1B70  
                                        spi_tx@length 0003  
                                               l12987 1CBC  
                                               l14587 5EDA  
                                               l14579 1C88  
                                               l14589 5F0E  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 5AAA  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5F96  
                                               u10100 1CEC  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10080 1CB8  
                                               u11300 54AC  
                                               u10420 7182  
                                               u10270 1E96  
                                               u10351 7730  
                                               u11410 4B34  
                                               u10285 705C  
                                               u11190 367A  
                                               u11280 5498  
                                     __end_of___llmod 68F2  
                              __end_of_USBDeviceTasks 367E  
                                               u11380 4AEC  
                                               u10780 12A4  
                                               u10870 0C2E  
                                               u11767 78CE  
                                               u11777 6F1E  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11787 6F30  
                                               u11797 6F3A  
                                     __end_of___lwdiv 6FFE  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 72DE  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00F8  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6B3A  
                                     ??_flash_is_busy 0014  
                                    __end_of_MSDTasks 1EF0  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0037  
                                  _USBCheckMSDRequest 5028  
                     __end_of_internalFlash_getBuffer 7B1A  
                     __end_of_USBCtrlEPAllowDataStage 5842  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 713E  
                       __end_of_MSDTransferTerminated 6EAC  
                 i2c_display_send_init_sequence@F6791 01EE  
                                        _gblCBWLength 00A3  
                          __end_of__parse_file_delete 7050  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 6018  
                          __end_of__parse_file_create 667A  
                              __end_of_ResetSenseData 6A1C  
                            __get_empty_cluster@value 0037  
                          __end_of__parse_file_modify 7BCE  
                          __end_of__parse_file_rename 67B8  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0054  
                           fat_get_format_status@cntr 002F  
                             ?__fill_buffer_read_file 0056  
                                               pclath 000FFA  
                                     __end_of_ui_init 7A90  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A7  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 75CC  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 51AC  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0056  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7876  
             __fill_buffer_get_file_details@outBuffer 0042  
                                      _MSDReadHandler 2B16  
                                   __delete_root@slot 002F  
                             __CFG_DSWDTOSC$INTOSCREF 000000  
                        __size_of_USBStdSetCfgHandler 00E0  
                   fat_create_file@number_of_clusters 00C1  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 5E08  
                       fat_read_from_file@file_number 00BE  
                           __end_of__flash_get_status 76C8  
                        fat_get_file_information@data 0038  
                  spi_set_configuration@configuration 0001  
               __end_of_ExternalFlash_MediaInitialize 7A3A  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7A20  
                                         _system_init 667A  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0164  
                                        __end_of_main 49D0  
                                        __end_of_itoa 729C  
                       __end_of_system_encoder_enable 7AD6  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 6E56  
                                        __end_of_utoa 5664  
                                __end_of__normal_mode 6C4A  
                                    _timer_pseudo_isr 7564  
                            __parse_command_short@cmd 0014  
                                    __end_of_i2c_init 7B10  
                            __end_of__i2c_acknowledge 7B38  
                      __end_of__fill_buffer_find_file 5706  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 644E  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 7A52  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                api_prepare@outBuffer 00F7  
                                              ??_main 00FD  
                                    __end_of__i2c_get 7B2E  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0074  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00E9  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 6366  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7BC2  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7BBE  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00F2  
                               ??__bootloader_program 0056  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 7320  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 78C0  
                              __flash_write_to_buffer 70A0  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 254C  
                                _start_from_byte_next 009B  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0038  
                                          __i2c_start 7B90  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7186  
                           fat_read_from_file@cluster 00DF  
                                      __CFG_WDTEN$OFF 000000  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0056  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                    __end_of__get_fat 6E00  
                                    __end_of__get_fbr 1C98  
                                    __end_of__get_mbr 4C40  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0025  
                                              _TBLPTR 000FF6  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2CEE  
                                 _flash_pages_written 0166  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00BE  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0021  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5706  
                                    __read_fat@offset 0035  
                                    __end_of_fat_init 7AE6  
                   __bootloader_program@page_to_write 00FA  
                                   _shortPacketStatus 00B5  
                   fat_append_to_file@number_of_bytes 0040  
                          __get_empty_cluster@cluster 0039  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6096  
                        __end_of__flash_set_page_size 618C  
                                     _hexCharsToUint8 79CE  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002D  
                                              _gblCBW 0100  
                                   _fat_get_file_size 644E  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2849 0003  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00A2  
                                           ??___lwmod 0005  
                                              _buffer 02B2  
                                   _USBEnableEndpoint 73DC  
                       __bootloader_program@address32 00F3  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 68F2  
                                  ?_fat_get_file_size 0031  
                                              _memset 777E  
                                              clear_0 5E42  
                                              clear_1 5E56  
                                              clear_2 5E68  
                                              clear_3 5E74  
                                              clear_4 5E80  
                           _ExternalFlash_SectorWrite 74F8  
                                   api_parse@inBuffer 00EF  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4AA2  
                                              _spi_tx 6B96  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 7664  
                                    ?_fat_rename_file 0040  
                          __parse_command_long@length 0056  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 77AA  
                               __end_of_fat_find_file 526C  
                         fat_get_empty_clusters@value 0037  
                                 ??_fat_get_file_size 0035  
                              _fat_get_empty_clusters 5CEE  
                       __size_of__parse_command_short 007C  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8CCC  
                                 __end_of__i2c_open_1 7A52  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6A7C  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6A1C  
                                              tblptru 000FF8  
                                    __end_of_spi_init 73DC  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0029  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 62F2  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                               __end_of_ui_get_status 7BA6  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00B4  
                          ??_APP_DeviceCustomHIDTasks 00F9  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 6F58  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00E3  
                                          __accesstop 0060  
                             __end_of__initialization 5E88  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7B24  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00E9  
                         __end_of__parse_command_long 5CEE  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 64C0  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0031  
                                    _flash_page_write 6EAC  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 7418  
                            _bootloader_get_file_size 7AB4  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7BD0  
                                        __pidataBANK1 79B0  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7B6A  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7B60  
                           __get_available_root_entry 78E4  
                                 fat_rename_file@cntr 00DD  
                                 fat_rename_file@name 0040  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 00BD  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00B8  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 14F8  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4EA0  
                                 _userInterfaceStatus 009E  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3FBC  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 77D6  
                       __size_of__display_programming 01D6  
                             __end_of_system_delay_ms 78E4  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0084  
                      __end_of_failed_line3_startCode 8D1D  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0033  
                                  _fat_read_from_file 1EF0  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003F  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D42  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002F  
                              flash_partial_read@page 0029  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A9  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 6FAC  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 5E08  
                                   __end_of__i2c_send 7BA0  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 53CC  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 7B90  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0040  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                       fat_append_to_file@fat_cluster 00C4  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 3DAE  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0058  
                        __end_of__sector_from_cluster 7B04  
                                    _mediaInformation 01D5  
                             __end_of_hexCharsToUint8 79EA  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003D  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 55C0  
                     ??__fill_buffer_get_file_details 0044  
                                       __flash_wakeup 6F02  
                            __fill_buffer_get_display 526C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 42C4  
               __end_of_APP_DeviceCustomHIDInitialize 7600  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 75CC  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 481E  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004E  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 254C  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 004A  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0053  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 2116  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 003F  
                                    ??_display_update 0011  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 7A3A  
                                    _USBCtrlEPService 5320  
                                             ?_ui_run 0001  
                                          _ep_data_in 0161  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00C8  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3392  
                    __sector_from_cluster@fat_cluster 0001  
                                  __switch_mastermode 7BCE  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3C9C  
                                  _USBCheckStdRequest 43B6  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0040  
                              fat_append_to_file@data 0042  
                                          _flash_init 7A06  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4DD8  
                                   __end_of__get_data 7828  
                                   __end_of__get_date 7B88  
                                 _USBStdSetCfgHandler 473E  
                              fat_append_to_file@root 00CF  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 7B7E  
                                   __end_of__get_root 3216  
                                  __size_of_spi_tx_rx 0098  
                                  __size_of_spi_tx_tx 0090  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                          _done_line3 8DA9  
                                          _done_line4 8D99  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7A68  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                                 ?__switch_mastermode 0001  
                              _total_hex_file_entries 0168  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 6112  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 7598  
                                  __get_first_cluster 6822  
                                        __normal_mode 6BF2  
                          __end_of_APP_DeviceMSDTasks 7AA2  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 7216  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00E9  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 6204  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 618C  
                                          __write_fat 7360  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                   __read_fat@cluster 0031  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002D  
                      __end_of_bootloader_get_entries 7B74  
                              fat_find_file@extension 0033  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 4AA2  
                                 ?__get_first_cluster 0031  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3C9C  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0044  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 6FFE  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 748A  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 5F96  
                                             __Lparam 0000  
                                  __parse_file_create 660E  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 40C2  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                        ?_system_init 0001  
                                  __parse_file_modify 7BCA  
                                ??__switch_mastermode 0001  
                                  __parse_file_rename 674E  
                          ??_fat_get_file_information 003A  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 64C0  
                                          _last_error 009C  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 5F14  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 688C  
                                             ___lwdiv 6FAC  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 729C  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0040  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004C  
                                 ?__parse_file_create 0051  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 7452  
                                             __pcinit 5E08  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0049  
                                             __ramtop 0F00  
                        ExternalFlash_SectorRead@page 0035  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 48F8  
                                             __ptext1 4AA2  
                                     __display_failed 0F30  
                                             __ptext2 7AC6  
                                             __ptext3 7726  
                                             __ptext4 7908  
                                             __ptext5 792A  
                                             __ptext6 7850  
                                             __ptext7 62F2  
                                             __ptext8 7564  
                                 ?__parse_file_modify 0001  
                                             __ptext9 667A  
                                             _inPipes 0066  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0044  
                                     __size_of_ui_run 00D0  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0036  
                                     __size_of_spi_tx 005C  
                         _USBDeferOUTDataStagePackets 00AA  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002D  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 79B0  
                                ??__get_first_cluster 0033  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 3FBC  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7AE6  
                                             _msd_cbw 000D40  
                                     __display_verify 3A58  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7B1A  
                                             _ui_init 7A7E  
                                          ??_fat_init 0031  
                  __size_of_ExternalFlash_SectorWrite 0036  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7A7E  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 63DA  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003E  
                                             _strncmp 50EA  
                                 _flash_partial_write 6530  
                                end_of_initialization 5E88  
                                ??__parse_file_delete 0042  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 6E56  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2938  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 274A  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004E  
                                ??__parse_file_create 0053  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0096  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 3DAE  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0046  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003D  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0031  
                            __flash_partial_read@data 001B  
                        fat_get_empty_clusters@offset 0035  
                              _internalFlash_readPage 72DE  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0015  
                            fat_append_to_file@length 00C9  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00C6  
           __fill_buffer_get_file_details@file_number 0044  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00BC  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 76F8  
                        __end_of__parse_file_truncate 7BCA  
                             _USBCtrlEPAllowDataStage 57A4  
                                   __end_of_spi_tx_rx 5A14  
                                   __end_of_spi_tx_tx 5C60  
               __end_of__fill_buffer_get_file_details 660E  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 65A0  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7B42  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 7B38  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 0040  
                            _USBCtrlEPServiceComplete 41C4  
                                             utoa@val 000A  
                                           _MSD_State 00A8  
                         __end_of__bootloader_program 0F30  
                               _system_encoder_enable 7AC6  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005E  
                          _USBStatusStageEnabledFlag1 00AD  
                          _USBStatusStageEnabledFlag2 00AC  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0031  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0033  
                      __end_of__flash_write_to_buffer 70F0  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 7AF6  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00C2  
                                   ??_fat_delete_file 003B  
                              fat_create_file@cluster 00C3  
                                 flash_page_read@data 002B  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0029  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003B  
                     __fill_buffer_find_file@inBuffer 0045  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00B0  
                       fat_get_empty_clusters@maximum 0031  
                            __end_of_flash_page_write 6F02  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02B2  
                                    ??_MSDReadHandler 0037  
                           __flash_partial_read@start 0017  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 6E00  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00BA  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003F  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CCD  
                                       _checked_line3 8E73  
                                       _checked_line4 8D66  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                        __end_of_USBTransferOnePacket 41C4  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 6112  
               __end_of_internalFlash_pageFromAddress 7A06  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 79EA  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 627C  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1226  
                       __get_empty_cluster@fat_sector 0033  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 5B3E  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00EB  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00CC  
                               __end_of_USBDeviceInit 391E  
               __end_of_USBIncrement1msInternalTimers 796E  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 794C  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 5D7C  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3B84  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 3EB6  
                                 _i2c_eeprom_readByte 7050  
                                   ??_fat_create_file 004D  
                 __bootloader_program@start_from_byte 00F7  
                  __fill_buffer_read_file@data_length 00ED  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CE2  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6958  
                                     _MSDRetryAttempt 00A4  
                                      __end_of_memset 77AA  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00B2  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 4B72  
                                      __end_of_spi_tx 6BF2  
               __get_available_root_entry@file_number 0038  
                                 __end_of__ui_encoder 6366  
                           __flash_set_page_size@size 0018  
                                 start_initialization 5E08  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 43B6  
                   __end_of__get_available_root_entry 7908  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 0090  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5B3E  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A30  
                                 __flash_partial_read 6204  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0045  
                                       _MSDHostNoData 00A1  
                                      _hexCharToUint8 7752  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0031  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 5028  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 7664  
                        __end_of__display_programming 2EC4  
                fat_get_empty_clusters@empty_clusters 0039  
                            __end_of_USBCtrlEPService 53CC  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 7418  
                                           __i2c_read 5D7C  
                                           __i2c_send 7B98  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7B88  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0049  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7BBE  
                          __flash_partial_read@length 0019  
                       __end_of_failed_line3_checksum 8E38  
                       __root_is_available@first_byte 0037  
                              _pBDTEntryEP0OutCurrent 0098  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 63DA  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D30  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2372 004F  
                                       _MSDTasks$2373 0051  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002B  
                                 _USBStdGetDscHandler 391E  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0015  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A6  
                          fat_get_file_size@file_size 0038  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01DA  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 006A  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7876  
                                        ?__i2c_open_1 0001  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 7B98  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0040  
                                  __end_of__i2c_write 71CE  
                           __root_is_available@offset 0034  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00BB  
                            ??__fill_buffer_read_file 005A  
                      __end_of_USBStdGetStatusHandler 5476  
                         api_parse@receivedDataLength 00F1  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 48F8  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7726  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 76F8  
                          fat_append_to_file@position 00CB  
                         fat_create_file@next_cluster 00BC  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0268  
                                     _flash_page_read 7600  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00BC  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 465C  
             __bootloader_program@address_within_page 00ED  
                              __end_of_hexCharToUint8 777E  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 796E  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 6530  
                                __parse_file_truncate 7BC6  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7800  
                                           __get_date 7B7E  
                    __bootloader_program@return_value 00EF  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003B  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 7B74  
                                           __get_root 3080  
                                 __end_of__write_root 6CFA  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 74C2  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 78C0  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 7216  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 00BC  
                                           __read_fat 71CE  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D42  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 7564  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7B4C  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7B42  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 551C  
                                   fat_find_file@name 0031  
                      MSDProcessCommandMediaPresent@i 0048  
                                 fat_find_file@buffer 0035  
                                   fat_find_file@slot 0040  
                                           _api_parse 49D0  
                           fat_create_file@root_entry 00C5  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 465C  
                                  _APP_DeviceMSDTasks 7A90  
                                       __pmediumconst 8CCC  
                                 fat_find_file@offset 0043  
                               ??__flash_partial_read 001D  
                                           __ptext100 4F64  
                                           __ptext101 4DD8  
                                           __ptext110 74F8  
                                           __ptext102 4D0C  
                                           __ptext111 6EAC  
                                           __ptext103 7A90  
                                           __ptext200 597C  
                                           __ptext120 7B38  
                                           __ptext112 2B16  
                                           __ptext104 1C98  
                                           __ptext201 7BCE  
                                           __ptext121 7AA2  
                                           __ptext113 457A  
                                           __ptext105 3C9C  
                                           __ptext202 40C2  
                                           __ptext130 7BA0  
                                           __ptext122 7A20  
                                           __ptext114 3FBC  
                                           __ptext106 6958  
                                           __ptext203 0000  
                                           __ptext131 65A0  
                                           __ptext123 7BC2  
                                           __ptext115 3DAE  
                                           __ptext107 049C  
                                           __ptext140 7BAC  
                                           __ptext132 526C  
                                           __ptext124 5476  
                                           __ptext116 69BA  
                                           __ptext108 14F8  
                                           __ptext141 7BB2  
                                           __ptext133 77D6  
                                           __ptext125 42C4  
                                           __ptext117 752E  
                                           __ptext109 7BBE  
                                           __ptext150 78C0  
                                           __ptext142 7B56  
                                           __ptext134 5842  
                                           __ptext126 2336  
                                           __ptext118 7600  
                                           __ptext151 7320  
                                           __ptext143 7B60  
                                           __ptext135 274A  
                                           __ptext127 1EF0  
                                           __ptext119 58E0  
                                           __ptext160 674E  
                                           __ptext152 77AA  
                                           __ptext144 7AB4  
                                           __ptext136 7B42  
                                           __ptext128 644E  
                                           __ptext161 5A14  
                                           __ptext153 7186  
                                           __ptext145 7BB8  
                                           __ptext137 7BA6  
                                           __ptext129 465C  
                                           __ptext170 5CEE  
                                           __ptext162 7BCA  
                                           __ptext154 6C4A  
                                           __ptext146 7B6A  
                                           __ptext138 7B4C  
                                           __ptext171 51AC  
                                           __ptext163 6FFE  
                                           __ptext155 7B88  
                                           __ptext147 5664  
                                           __ptext139 7A52  
                                           __ptext180 6530  
                                           __ptext172 50EA  
                                           __ptext164 67B8  
                                           __ptext156 7B90  
                                           __ptext148 49D0  
                                           __ptext181 70A0  
                                           __ptext173 78E4  
                                           __ptext165 6822  
                                           __ptext157 7B98  
                                           __ptext149 6096  
                                           __ptext190 71CE  
                                           __ptext182 5BD0  
                                           __ptext174 5F96  
                                           __ptext166 6B3A  
                                           __ptext158 5C60  
                                           __ptext191 63DA  
                                           __ptext183 6CFA  
                                           __ptext175 2116  
                                           __ptext167 660E  
                                           __ptext159 7BC6  
                                           __ptext192 7664  
                                           __ptext184 6D52  
                                           __ptext176 6366  
                                           __ptext168 2EC4  
                                           __ptext193 6204  
                                           __ptext185 618C  
                                           __ptext177 627C  
                                           __ptext169 68F2  
                                           __ptext194 7A68  
                                           __ptext186 7632  
                                           __ptext178 6CA2  
                                           __ptext195 6ADC  
                                           __ptext187 7B74  
                                           __ptext179 7360  
                                           __ptext196 796E  
                                           __ptext188 7B7E  
                                           __ptext197 6F02  
                                           __ptext189 7AF6  
                                           __ptext198 6B96  
                                           __ptext199 7696  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0041  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 7452  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 62F2  
                           __get_first_cluster@offset 0036  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00B9  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0034  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 42C4  
                             __parse_file_delete@data 0040  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0045  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0049  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 40C2  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 005E  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 6B3A  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6096  
                              fat_read_from_file@data 0048  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 7990  
                                       _fat_find_file 51AC  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00BF  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 085A  
                                   __display_itoa_u16 4EA0  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6ADC  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D30  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D66  
                                         _ep_data_out 015E  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 7B56  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 794C  
                       _bootloader_get_rec_dataLength 7B4C  
                                       _MSDWriteState 00A5  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 713E  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2938  
                    __end_of_bootloader_get_file_size 7AC6  
                                         _file_buffer 0280  
                                     _config_internal 015B  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 7BA0  
                                     _config_external 0158  
                                      __display_start 367E  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0054  
                       __end_of_display_get_character 7800  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 457A  
                      __root_is_available@file_number 0036  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0031  
                                   ??_fat_rename_file 0044  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
              __fill_buffer_get_file_details@inBuffer 0040  
                   __bootloader_verify_file@address32 00EE  
                          __end_of_internalFlash_read 74F8  
                                          ?_api_parse 00EF  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004C  
                                            _MSDTasks 1C98  
                          _USBDeferINDataStagePackets 00AB  
                                        ??_fat_format 0025  
                                     _fat_delete_file 67B8  
                         __size_of__switch_mastermode 0002  
                                _active_configuration 009A  
                           ?__ic2_display_set_address 0001  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0051  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003B  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                                _USBConfigureEndpoint 5AAA  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7632  
                                           _spi_tx_rx 597C  
                                           _spi_tx_tx 5BD0  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 008E  
                                __display_programming 2CEE  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 4F64  
                           __end_of__display_itoa_u32 0BC8  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0031  
                            fat_rename_file@extension 0042  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00B3  
                   __end_of_ExternalFlash_MediaDetect 7BC6  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 5320  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 6CA2  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7186  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 7BB8  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0038  
                              __end_of__display_found 2B16  
                             __end_of_USBStallHandler 725A  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7320  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 37D0  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 5E1C  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00BE  
                         __end_of_USBStdSetCfgHandler 481E  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 274A  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 7B04  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A6  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7B24  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 2EC4  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0044  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00E1  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 00BC  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7A20  
                                      _TransferLength 008C  
                                _bootloader_extension 8FC7  
                           __get_empty_cluster@offset 0035  
                          __end_of_USBCheckMSDRequest 50EA  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 752E  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8DB9  
                                  __end_of_done_line4 8DA9  
                                      __i2c_wait_idle 6C4A  
                                     _MSDWriteHandler 14F8  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00A0  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D1D  
                                         _found_line3 8E98  
                                         _found_line4 8D54  
                                            __get_fat 6DAA  
                                            __get_fbr 1A30  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 4B72  
                                  __end_of__write_fat 73A0  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 7AB4  
                          _ExternalFlash_CapacityRead 7AA2  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5664  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 0368  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 7AD6  
                    __get_first_cluster@first_cluster 0038  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 3216  
               __end_of_bootloader_get_rec_recordType 7BAC  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7BA6  
                                            __ptext10 7A7E  
                                            __ptext11 7B04  
                                            __ptext20 3080  
                                            __ptext12 7A3A  
                                            __ptext21 4B72  
                                            __ptext13 7A06  
                                            __ptext30 7876  
                                            __ptext22 1A30  
                                            __ptext14 73A0  
                                            __ptext31 4C40  
                                            __ptext23 6DAA  
                                            __ptext15 7452  
                                            __ptext40 3392  
                                            __ptext32 3A58  
                                            __ptext24 7800  
                                            __ptext16 6112  
                                            __ptext41 713E  
                                            __ptext33 367E  
                                            __ptext25 7990  
                                            __ptext17 7AD6  
                                            __ptext50 0BC8  
                                            __ptext42 3216  
                                            __ptext34 2CEE  
                                            __ptext26 7418  
                                            __ptext18 551C  
                                            __ptext51 0020  
                                            __ptext43 4EA0  
                                            __ptext35 2938  
                                            __ptext27 66E4  
                                            __ptext19 254C  
                                            __ptext60 7598  
                                            __ptext52 79CE  
                                            __ptext44 725A  
                                            __ptext36 0F30  
                                            __ptext28 6E00  
                                            __ptext61 7828  
                                            __ptext53 64C0  
                                            __ptext45 55C0  
                                            __ptext37 085A  
                                            __ptext29 789C  
                                            __ptext70 7B24  
                                            __ptext62 6A1C  
                                            __ptext54 7752  
                                            __ptext46 729C  
                                            __ptext38 688C  
                                            __ptext71 7B2E  
                                            __ptext63 76F8  
                                            __ptext55 6018  
                                            __ptext47 6FAC  
                                            __ptext39 5F14  
                                            __ptext80 41C4  
                                            __ptext72 3508  
                                            __ptext64 481E  
                                            __ptext56 72DE  
                                            __ptext48 70F0  
                                            __ptext81 57A4  
                                            __ptext73 748A  
                                            __ptext65 5706  
                                            __ptext57 74C2  
                                            __ptext49 1226  
                                            __ptext90 4498  
                                            __ptext82 43B6  
                                            __ptext74 76C8  
                                            __ptext66 6BF2  
                                            __ptext58 79EA  
                                            __ptext91 6F58  
                                            __ptext83 473E  
                                            __ptext75 7216  
                                            __ptext67 7050  
                                            __ptext59 7B10  
                                            __ptext92 6E56  
                                            __ptext84 777E  
                                            __ptext76 794C  
                                            __ptext68 5D7C  
                                            __ptext93 7AE6  
                                            __ptext85 53CC  
                                            __ptext77 37D0  
                                            __ptext69 7B1A  
                                            __ptext94 3EB6  
                                            __ptext86 391E  
                                            __ptext78 5320  
                                            __ptext95 75CC  
                                            __ptext87 17AC  
                                            __ptext79 5B3E  
                                            __ptext96 73DC  
                                            __ptext88 5E8E  
                                            __ptext97 5AAA  
                                            __ptext89 5028  
                                            __ptext98 6A7C  
                                            __ptext99 3B84  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 69BA  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6958  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 004E  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 5C60  
                   __end_of_failed_line3_addressRange 8CF6  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002D  
                      ExternalFlash_SectorRead@buffer 0033  
                                        api_parse@idx 0059  
                      __size_of__bootloader_find_file 009E  
                  __end_of__flash_copy_page_to_buffer 6DAA  
                          __flash_copy_page_to_buffer 6D52  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 551C  
                       __end_of__bootloader_find_file 57A4  
                        __end_of_i2c_digipot_reset_on 792A  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 6F58  
                      __end_of_USBCtrlTrfSetupHandler 5BD0  
                                       __size_of_main 00D8  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6822  
                                         ??__read_fat 0033  
                              __fill_buffer_read_file 2336  
                         __end_of_flash_partial_write 65A0  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 0036  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6B96  
                    __size_of__bootloader_verify_file 02D2  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 7BB2  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7BAC  
                                 _USBCtrlTrfInHandler 4DD8  
                  _MSDProcessCommandMediaPresent$2390 003D  
                    __get_empty_cluster@first_cluster 0031  
                                         ??_api_parse 0057  
                              __end_of__i2c_wait_idle 6CA2  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                            _spi_init 73A0  
                                _USBCtrlTrfOutHandler 6A7C  
                           _USBCtrlEPAllowStatusStage 4F64  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 7B10  
                                ?__parse_command_long 0054  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0029  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3508  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0035  
                              ??__parse_command_short 0014  
               MSDProcessCommandMediaPresent@capacity 0044  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00AE  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 473E  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7850  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7828  
                             _internalFlash_erasePage 7598  
                                   __write_fat@offset 002F  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 597C  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 58E0  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8D99  
                                 __end_of_start_line2 8D88  
                                 __end_of_start_line3 8D0A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7A68  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7B2E  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 3080  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0044  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5F14  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5E8E  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 752E  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 6D52  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6CFA  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 7632  
                        fat_read_from_file@start_byte 0040  
                                     _display_content 016E  
                          __end_of_flash_partial_read 7696  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 17AC  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7BB8  
                         _bootloader_get_rec_checksum 7BB2  
                             __size_of_MSDReadHandler 01D8  
                                       ??_system_init 0031  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 4C40  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 3B84  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 748A  
                               ??__parse_command_long 0056  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 789C  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 17AC  
                        __fill_buffer_read_file@start 00F1  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4D0C  
                         fat_delete_file@next_cluster 003B  
                                        ?_api_prepare 00F5  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 016A  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7850  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002F  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7B60  
                          _bootloader_get_rec_address 7B56  
                               _USBAlternateInterface 00B6  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 70A0  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0092  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5A14  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00B1  
                                      _display_update 66E4  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D0A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 457A  
                          fat_read_from_file@position 00E5  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 789C  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 016C  
                             _internalFlash_writePage 6018  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 3EB6  
                        _USBStatusStageTimeoutCounter 00AF  
                     ??_ExternalFlash_MediaInitialize 0003  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                         __end_of__flash_partial_read 627C  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 7360  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0033  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 009D  
                                         _USBInHandle 0088  
                            _APP_DeviceCustomHIDTasks 5476  
