

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Sep 13 23:27:26 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=2
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=2
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=2
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=2
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   244                           	psect	text222,global,reloc=2,class=CODE,delta=1
   245                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   246                           	dabs	1,0x600,512,_msd_buffer
   247                           	dabs	1,0xD00,48,_BDT
   248                           	dabs	1,0xD40,31,_msd_cbw
   249                           	dabs	1,0xD80,13,_msd_csw
   250                           	dabs	1,0xD38,8,_CtrlTrfData
   251                           	dabs	1,0xD30,8,_SetupPkt
   252  0000                     
   253                           ; Version 2.00
   254                           ; Generated 27/05/2018 GMT
   255                           ; 
   256                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   257                           ; All rights reserved.
   258                           ; 
   259                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   260                           ; 
   261                           ; Redistribution and use in source and binary forms, with or without modification, are
   262                           ; permitted provided that the following conditions are met:
   263                           ; 
   264                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   265                           ;        conditions and the following disclaimer.
   266                           ; 
   267                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   268                           ;        of conditions and the following disclaimer in the documentation and/or other
   269                           ;        materials provided with the distribution.
   270                           ; 
   271                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   272                           ;        software without specific prior written permission.
   273                           ; 
   274                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   275                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   276                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   277                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   278                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   279                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   280                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   281                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   282                           ; 
   283                           ; 
   284                           ; Code-generator required, PIC18F47J53 Definitions
   285                           ; 
   286                           ; SFR Addresses
   287  0000                     
   288                           	psect	intcode
   289  000008  EF04 F048          	goto	36872	;# 
   290                           
   291                           	psect	intcodelo
   292  000018  EF0C F048          	goto	36888	; ;# 
   293  0000                     
   294                           	psect	idataBANK0
   295  008AA0                     __pidataBANK0:
   296                           	opt stack 0
   297                           
   298                           ;initializer for _file_number
   299  008AA0  FF                 	db	255
   300                           
   301                           	psect	idataBANK1
   302  0086D4                     __pidataBANK1:
   303                           	opt stack 0
   304                           
   305                           ;initializer for _LUN
   306  0086D4  5E                 	db	low _ExternalFlash_MediaInitialize
   307  0086D5  88                 	db	high _ExternalFlash_MediaInitialize
   308  0086D6  44                 	db	low _ExternalFlash_CapacityRead
   309  0086D7  89                 	db	high _ExternalFlash_CapacityRead
   310  0086D8  0C                 	db	low _ExternalFlash_SectorSizeRead
   311  0086D9  8A                 	db	high _ExternalFlash_SectorSizeRead
   312  0086DA  9C                 	db	low _ExternalFlash_MediaDetect
   313  0086DB  8A                 	db	high _ExternalFlash_MediaDetect
   314  0086DC  C0                 	db	low _ExternalFlash_SectorRead
   315  0086DD  83                 	db	high _ExternalFlash_SectorRead
   316  0086DE  98                 	db	low _ExternalFlash_WriteProtectStateGet
   317  0086DF  8A                 	db	high _ExternalFlash_WriteProtectStateGet
   318  0086E0  8E                 	db	low _ExternalFlash_SectorWrite
   319  0086E1  83                 	db	high _ExternalFlash_SectorWrite
   320  0086E2  00                 	db	0
   321  0086E3  00                 	db	0
   322  0086E4  00                 	db	0
   323  0086E5  00                 	db	0
   324  0086E6  00                 	db	0
   325  0086E7  00                 	db	0
   326                           
   327                           ;initializer for i2c_display_send_init_sequence@F6808
   328  0086E8  3A                 	db	58
   329  0086E9  1E                 	db	30
   330  0086EA  39                 	db	57
   331  0086EB  0C                 	db	12
   332  0086EC  74                 	db	116
   333  0086ED  5C                 	db	92
   334  0086EE  6D                 	db	109
   335  0086EF  0C                 	db	12
   336  0086F0  01                 	db	1
   337                           
   338                           ;initializer for _tx_buf
   339  0086F1  01                 	db	1
   340  0086F2  02                 	db	2
   341  0086F3  03                 	db	3
   342  0086F4  04                 	db	4
   343  0086F5  05                 	db	5
   344  0086F6  06                 	db	6
   345  0086F7  07                 	db	7
   346  0086F8  08                 	db	8
   347                           
   348                           	psect	mediumconst
   349  008C98                     __pmediumconst:
   350                           	opt stack 0
   351  008C98  00                 	db	0
   352  008C99                     _checked_line2:
   353                           	opt stack 0
   354  008C99  46                 	db	70
   355  008C9A  69                 	db	105
   356  008C9B  6C                 	db	108
   357  008C9C  65                 	db	101
   358  008C9D  20                 	db	32
   359  008C9E  63                 	db	99
   360  008C9F  68                 	db	104
   361  008CA0  65                 	db	101
   362  008CA1  63                 	db	99
   363  008CA2  6B                 	db	107
   364  008CA3  20                 	db	32
   365  008CA4  63                 	db	99
   366  008CA5  6F                 	db	111
   367  008CA6  6D                 	db	109
   368  008CA7  70                 	db	112
   369  008CA8  6C                 	db	108
   370  008CA9  65                 	db	101
   371  008CAA  74                 	db	116
   372  008CAB  65                 	db	101
   373  008CAC  64                 	db	100
   374  008CAD  00                 	db	0
   375  008CAE                     __end_of_checked_line2:
   376                           	opt stack 0
   377  008CAE                     _failed_line3_addressRange:
   378                           	opt stack 0
   379  008CAE  41                 	db	65
   380  008CAF  64                 	db	100
   381  008CB0  64                 	db	100
   382  008CB1  72                 	db	114
   383  008CB2  2E                 	db	46
   384  008CB3  20                 	db	32
   385  008CB4  6F                 	db	111
   386  008CB5  75                 	db	117
   387  008CB6  74                 	db	116
   388  008CB7  73                 	db	115
   389  008CB8  69                 	db	105
   390  008CB9  64                 	db	100
   391  008CBA  65                 	db	101
   392  008CBB  20                 	db	32
   393  008CBC  72                 	db	114
   394  008CBD  61                 	db	97
   395  008CBE  6E                 	db	110
   396  008CBF  67                 	db	103
   397  008CC0  65                 	db	101
   398  008CC1  00                 	db	0
   399  008CC2                     __end_of_failed_line3_addressRange:
   400                           	opt stack 0
   401  008CC2                     _search_line3:
   402                           	opt stack 0
   403  008CC2  46                 	db	70
   404  008CC3  49                 	db	73
   405  008CC4  52                 	db	82
   406  008CC5  4D                 	db	77
   407  008CC6  57                 	db	87
   408  008CC7  41                 	db	65
   409  008CC8  52                 	db	82
   410  008CC9  45                 	db	69
   411  008CCA  2E                 	db	46
   412  008CCB  48                 	db	72
   413  008CCC  45                 	db	69
   414  008CCD  58                 	db	88
   415  008CCE  20                 	db	32
   416  008CCF  6F                 	db	111
   417  008CD0  6E                 	db	110
   418  008CD1  20                 	db	32
   419  008CD2  55                 	db	85
   420  008CD3  53                 	db	83
   421  008CD4  42                 	db	66
   422  008CD5  00                 	db	0
   423  008CD6                     __end_of_search_line3:
   424                           	opt stack 0
   425  008CD6                     _failed_line3_startCode:
   426                           	opt stack 0
   427  008CD6  4D                 	db	77
   428  008CD7  69                 	db	105
   429  008CD8  73                 	db	115
   430  008CD9  73                 	db	115
   431  008CDA  69                 	db	105
   432  008CDB  6E                 	db	110
   433  008CDC  67                 	db	103
   434  008CDD  20                 	db	32
   435  008CDE  73                 	db	115
   436  008CDF  74                 	db	116
   437  008CE0  61                 	db	97
   438  008CE1  72                 	db	114
   439  008CE2  74                 	db	116
   440  008CE3  20                 	db	32
   441  008CE4  63                 	db	99
   442  008CE5  6F                 	db	111
   443  008CE6  64                 	db	100
   444  008CE7  65                 	db	101
   445  008CE8  00                 	db	0
   446  008CE9                     __end_of_failed_line3_startCode:
   447                           	opt stack 0
   448  008CE9                     _found_line2:
   449                           	opt stack 0
   450  008CE9  46                 	db	70
   451  008CEA  49                 	db	73
   452  008CEB  52                 	db	82
   453  008CEC  4D                 	db	77
   454  008CED  57                 	db	87
   455  008CEE  41                 	db	65
   456  008CEF  52                 	db	82
   457  008CF0  45                 	db	69
   458  008CF1  2E                 	db	46
   459  008CF2  48                 	db	72
   460  008CF3  45                 	db	69
   461  008CF4  58                 	db	88
   462  008CF5  20                 	db	32
   463  008CF6  66                 	db	102
   464  008CF7  6F                 	db	111
   465  008CF8  75                 	db	117
   466  008CF9  6E                 	db	110
   467  008CFA  64                 	db	100
   468  008CFB  00                 	db	0
   469  008CFC                     __end_of_found_line2:
   470                           	opt stack 0
   471  008CFC                     _programming_line2:
   472                           	opt stack 0
   473  008CFC  50                 	db	80
   474  008CFD  72                 	db	114
   475  008CFE  6F                 	db	111
   476  008CFF  67                 	db	103
   477  008D00  72                 	db	114
   478  008D01  61                 	db	97
   479  008D02  6D                 	db	109
   480  008D03  6D                 	db	109
   481  008D04  69                 	db	105
   482  008D05  6E                 	db	110
   483  008D06  67                 	db	103
   484  008D07  20                 	db	32
   485  008D08  66                 	db	102
   486  008D09  6C                 	db	108
   487  008D0A  61                 	db	97
   488  008D0B  73                 	db	115
   489  008D0C  68                 	db	104
   490  008D0D  00                 	db	0
   491  008D0E                     __end_of_programming_line2:
   492                           	opt stack 0
   493  008D0E                     _failed_line2:
   494                           	opt stack 0
   495  008D0E  46                 	db	70
   496  008D0F  69                 	db	105
   497  008D10  6C                 	db	108
   498  008D11  65                 	db	101
   499  008D12  20                 	db	32
   500  008D13  63                 	db	99
   501  008D14  68                 	db	104
   502  008D15  65                 	db	101
   503  008D16  63                 	db	99
   504  008D17  6B                 	db	107
   505  008D18  20                 	db	32
   506  008D19  66                 	db	102
   507  008D1A  61                 	db	97
   508  008D1B  69                 	db	105
   509  008D1C  6C                 	db	108
   510  008D1D  65                 	db	101
   511  008D1E  64                 	db	100
   512  008D1F  00                 	db	0
   513  008D20                     __end_of_failed_line2:
   514                           	opt stack 0
   515  008D20                     _found_line4:
   516                           	opt stack 0
   517  008D20  50                 	db	80
   518  008D21  72                 	db	114
   519  008D22  65                 	db	101
   520  008D23  73                 	db	115
   521  008D24  73                 	db	115
   522  008D25  20                 	db	32
   523  008D26  74                 	db	116
   524  008D27  6F                 	db	111
   525  008D28  20                 	db	32
   526  008D29  75                 	db	117
   527  008D2A  73                 	db	115
   528  008D2B  65                 	db	101
   529  008D2C  20                 	db	32
   530  008D2D  66                 	db	102
   531  008D2E  69                 	db	105
   532  008D2F  6C                 	db	108
   533  008D30  65                 	db	101
   534  008D31  00                 	db	0
   535  008D32                     __end_of_found_line4:
   536                           	opt stack 0
   537  008D32                     _checked_line4:
   538                           	opt stack 0
   539  008D32  50                 	db	80
   540  008D33  72                 	db	114
   541  008D34  65                 	db	101
   542  008D35  73                 	db	115
   543  008D36  73                 	db	115
   544  008D37  20                 	db	32
   545  008D38  74                 	db	116
   546  008D39  6F                 	db	111
   547  008D3A  20                 	db	32
   548  008D3B  70                 	db	112
   549  008D3C  72                 	db	114
   550  008D3D  6F                 	db	111
   551  008D3E  67                 	db	103
   552  008D3F  72                 	db	114
   553  008D40  61                 	db	97
   554  008D41  6D                 	db	109
   555  008D42  00                 	db	0
   556  008D43                     __end_of_checked_line4:
   557                           	opt stack 0
   558  008D43                     _search_line2:
   559                           	opt stack 0
   560  008D43  4C                 	db	76
   561  008D44  6F                 	db	111
   562  008D45  6F                 	db	111
   563  008D46  6B                 	db	107
   564  008D47  69                 	db	105
   565  008D48  6E                 	db	110
   566  008D49  67                 	db	103
   567  008D4A  20                 	db	32
   568  008D4B  66                 	db	102
   569  008D4C  6F                 	db	111
   570  008D4D  72                 	db	114
   571  008D4E  20                 	db	32
   572  008D4F  66                 	db	102
   573  008D50  69                 	db	105
   574  008D51  6C                 	db	108
   575  008D52  65                 	db	101
   576  008D53  00                 	db	0
   577  008D54                     __end_of_search_line2:
   578                           	opt stack 0
   579  008D54                     _done_line4:
   580                           	opt stack 0
   581  008D54  50                 	db	80
   582  008D55  72                 	db	114
   583  008D56  65                 	db	101
   584  008D57  73                 	db	115
   585  008D58  73                 	db	115
   586  008D59  20                 	db	32
   587  008D5A  74                 	db	116
   588  008D5B  6F                 	db	111
   589  008D5C  20                 	db	32
   590  008D5D  72                 	db	114
   591  008D5E  65                 	db	101
   592  008D5F  62                 	db	98
   593  008D60  6F                 	db	111
   594  008D61  6F                 	db	111
   595  008D62  74                 	db	116
   596  008D63  00                 	db	0
   597  008D64                     __end_of_done_line4:
   598                           	opt stack 0
   599  008D64                     _done_line3:
   600                           	opt stack 0
   601  008D64  50                 	db	80
   602  008D65  61                 	db	97
   603  008D66  67                 	db	103
   604  008D67  65                 	db	101
   605  008D68  73                 	db	115
   606  008D69  20                 	db	32
   607  008D6A  77                 	db	119
   608  008D6B  72                 	db	114
   609  008D6C  69                 	db	105
   610  008D6D  74                 	db	116
   611  008D6E  74                 	db	116
   612  008D6F  65                 	db	101
   613  008D70  6E                 	db	110
   614  008D71  3A                 	db	58
   615  008D72  20                 	db	32
   616  008D73  00                 	db	0
   617  008D74                     __end_of_done_line3:
   618                           	opt stack 0
   619  008D74                     _done_line1:
   620                           	opt stack 0
   621  008D74  42                 	db	66
   622  008D75  6F                 	db	111
   623  008D76  6F                 	db	111
   624  008D77  74                 	db	116
   625  008D78  6C                 	db	108
   626  008D79  6F                 	db	111
   627  008D7A  61                 	db	97
   628  008D7B  64                 	db	100
   629  008D7C  65                 	db	101
   630  008D7D  72                 	db	114
   631  008D7E  20                 	db	32
   632  008D7F  4D                 	db	77
   633  008D80  6F                 	db	111
   634  008D81  64                 	db	100
   635  008D82  65                 	db	101
   636  008D83  00                 	db	0
   637  008D84                     __end_of_done_line1:
   638                           	opt stack 0
   639  008D84                     _programming_line4:
   640                           	opt stack 0
   641  008D84  50                 	db	80
   642  008D85  61                 	db	97
   643  008D86  67                 	db	103
   644  008D87  65                 	db	101
   645  008D88  73                 	db	115
   646  008D89  20                 	db	32
   647  008D8A  77                 	db	119
   648  008D8B  72                 	db	114
   649  008D8C  69                 	db	105
   650  008D8D  74                 	db	116
   651  008D8E  74                 	db	116
   652  008D8F  65                 	db	101
   653  008D90  6E                 	db	110
   654  008D91  3A                 	db	58
   655  008D92  20                 	db	32
   656  008D93  00                 	db	0
   657  008D94                     __end_of_programming_line4:
   658                           	opt stack 0
   659  008D94                     _programming_line1:
   660                           	opt stack 0
   661  008D94  42                 	db	66
   662  008D95  6F                 	db	111
   663  008D96  6F                 	db	111
   664  008D97  74                 	db	116
   665  008D98  6C                 	db	108
   666  008D99  6F                 	db	111
   667  008D9A  61                 	db	97
   668  008D9B  64                 	db	100
   669  008D9C  65                 	db	101
   670  008D9D  72                 	db	114
   671  008D9E  20                 	db	32
   672  008D9F  4D                 	db	77
   673  008DA0  6F                 	db	111
   674  008DA1  64                 	db	100
   675  008DA2  65                 	db	101
   676  008DA3  00                 	db	0
   677  008DA4                     __end_of_programming_line1:
   678                           	opt stack 0
   679  008DA4                     _failed_line1:
   680                           	opt stack 0
   681  008DA4  42                 	db	66
   682  008DA5  6F                 	db	111
   683  008DA6  6F                 	db	111
   684  008DA7  74                 	db	116
   685  008DA8  6C                 	db	108
   686  008DA9  6F                 	db	111
   687  008DAA  61                 	db	97
   688  008DAB  64                 	db	100
   689  008DAC  65                 	db	101
   690  008DAD  72                 	db	114
   691  008DAE  20                 	db	32
   692  008DAF  4D                 	db	77
   693  008DB0  6F                 	db	111
   694  008DB1  64                 	db	100
   695  008DB2  65                 	db	101
   696  008DB3  00                 	db	0
   697  008DB4                     __end_of_failed_line1:
   698                           	opt stack 0
   699  008DB4                     _checked_line1:
   700                           	opt stack 0
   701  008DB4  42                 	db	66
   702  008DB5  6F                 	db	111
   703  008DB6  6F                 	db	111
   704  008DB7  74                 	db	116
   705  008DB8  6C                 	db	108
   706  008DB9  6F                 	db	111
   707  008DBA  61                 	db	97
   708  008DBB  64                 	db	100
   709  008DBC  65                 	db	101
   710  008DBD  72                 	db	114
   711  008DBE  20                 	db	32
   712  008DBF  4D                 	db	77
   713  008DC0  6F                 	db	111
   714  008DC1  64                 	db	100
   715  008DC2  65                 	db	101
   716  008DC3  00                 	db	0
   717  008DC4                     __end_of_checked_line1:
   718                           	opt stack 0
   719  008DC4                     _verify_line1:
   720                           	opt stack 0
   721  008DC4  42                 	db	66
   722  008DC5  6F                 	db	111
   723  008DC6  6F                 	db	111
   724  008DC7  74                 	db	116
   725  008DC8  6C                 	db	108
   726  008DC9  6F                 	db	111
   727  008DCA  61                 	db	97
   728  008DCB  64                 	db	100
   729  008DCC  65                 	db	101
   730  008DCD  72                 	db	114
   731  008DCE  20                 	db	32
   732  008DCF  4D                 	db	77
   733  008DD0  6F                 	db	111
   734  008DD1  64                 	db	100
   735  008DD2  65                 	db	101
   736  008DD3  00                 	db	0
   737  008DD4                     __end_of_verify_line1:
   738                           	opt stack 0
   739  008DD4                     _found_line1:
   740                           	opt stack 0
   741  008DD4  42                 	db	66
   742  008DD5  6F                 	db	111
   743  008DD6  6F                 	db	111
   744  008DD7  74                 	db	116
   745  008DD8  6C                 	db	108
   746  008DD9  6F                 	db	111
   747  008DDA  61                 	db	97
   748  008DDB  64                 	db	100
   749  008DDC  65                 	db	101
   750  008DDD  72                 	db	114
   751  008DDE  20                 	db	32
   752  008DDF  4D                 	db	77
   753  008DE0  6F                 	db	111
   754  008DE1  64                 	db	100
   755  008DE2  65                 	db	101
   756  008DE3  00                 	db	0
   757  008DE4                     __end_of_found_line1:
   758                           	opt stack 0
   759  008DE4                     _search_line1:
   760                           	opt stack 0
   761  008DE4  42                 	db	66
   762  008DE5  6F                 	db	111
   763  008DE6  6F                 	db	111
   764  008DE7  74                 	db	116
   765  008DE8  6C                 	db	108
   766  008DE9  6F                 	db	111
   767  008DEA  61                 	db	97
   768  008DEB  64                 	db	100
   769  008DEC  65                 	db	101
   770  008DED  72                 	db	114
   771  008DEE  20                 	db	32
   772  008DEF  4D                 	db	77
   773  008DF0  6F                 	db	111
   774  008DF1  64                 	db	100
   775  008DF2  65                 	db	101
   776  008DF3  00                 	db	0
   777  008DF4                     __end_of_search_line1:
   778                           	opt stack 0
   779  008DF4                     _start_line1:
   780                           	opt stack 0
   781  008DF4  42                 	db	66
   782  008DF5  6F                 	db	111
   783  008DF6  6F                 	db	111
   784  008DF7  74                 	db	116
   785  008DF8  6C                 	db	108
   786  008DF9  6F                 	db	111
   787  008DFA  61                 	db	97
   788  008DFB  64                 	db	100
   789  008DFC  65                 	db	101
   790  008DFD  72                 	db	114
   791  008DFE  20                 	db	32
   792  008DFF  4D                 	db	77
   793  008E00  6F                 	db	111
   794  008E01  64                 	db	100
   795  008E02  65                 	db	101
   796  008E03  00                 	db	0
   797  008E04                     __end_of_start_line1:
   798                           	opt stack 0
   799  008E04                     _failed_line3_checksum:
   800                           	opt stack 0
   801  008E04  43                 	db	67
   802  008E05  68                 	db	104
   803  008E06  65                 	db	101
   804  008E07  63                 	db	99
   805  008E08  6B                 	db	107
   806  008E09  73                 	db	115
   807  008E0A  75                 	db	117
   808  008E0B  6D                 	db	109
   809  008E0C  20                 	db	32
   810  008E0D  65                 	db	101
   811  008E0E  72                 	db	114
   812  008E0F  72                 	db	114
   813  008E10  6F                 	db	111
   814  008E11  72                 	db	114
   815  008E12  00                 	db	0
   816  008E13                     __end_of_failed_line3_checksum:
   817                           	opt stack 0
   818  008E13                     _failed_line3_noNextRecord:
   819                           	opt stack 0
   820  008E13  4E                 	db	78
   821  008E14  6F                 	db	111
   822  008E15  20                 	db	32
   823  008E16  6E                 	db	110
   824  008E17  65                 	db	101
   825  008E18  78                 	db	120
   826  008E19  74                 	db	116
   827  008E1A  20                 	db	32
   828  008E1B  72                 	db	114
   829  008E1C  65                 	db	101
   830  008E1D  63                 	db	99
   831  008E1E  6F                 	db	111
   832  008E1F  72                 	db	114
   833  008E20  64                 	db	100
   834  008E21  00                 	db	0
   835  008E22                     __end_of_failed_line3_noNextRecord:
   836                           	opt stack 0
   837  008E22                     _start_line4:
   838                           	opt stack 0
   839  008E22  73                 	db	115
   840  008E23  6F                 	db	111
   841  008E24  6C                 	db	108
   842  008E25  64                 	db	100
   843  008E26  65                 	db	101
   844  008E27  72                 	db	114
   845  008E28  6E                 	db	110
   846  008E29  65                 	db	101
   847  008E2A  72                 	db	114
   848  008E2B  64                 	db	100
   849  008E2C  2E                 	db	46
   850  008E2D  63                 	db	99
   851  008E2E  6F                 	db	111
   852  008E2F  6D                 	db	109
   853  008E30  00                 	db	0
   854  008E31                     __end_of_start_line4:
   855                           	opt stack 0
   856  008E31                     _failed_line3_dataTooLong:
   857                           	opt stack 0
   858  008E31  44                 	db	68
   859  008E32  61                 	db	97
   860  008E33  74                 	db	116
   861  008E34  61                 	db	97
   862  008E35  20                 	db	32
   863  008E36  74                 	db	116
   864  008E37  6F                 	db	111
   865  008E38  6F                 	db	111
   866  008E39  20                 	db	32
   867  008E3A  6C                 	db	108
   868  008E3B  6F                 	db	111
   869  008E3C  6E                 	db	110
   870  008E3D  67                 	db	103
   871  008E3E  00                 	db	0
   872  008E3F                     __end_of_failed_line3_dataTooLong:
   873                           	opt stack 0
   874  008E3F                     _reboot_line1:
   875                           	opt stack 0
   876  008E3F  52                 	db	82
   877  008E40  65                 	db	101
   878  008E41  62                 	db	98
   879  008E42  6F                 	db	111
   880  008E43  6F                 	db	111
   881  008E44  74                 	db	116
   882  008E45  69                 	db	105
   883  008E46  6E                 	db	110
   884  008E47  67                 	db	103
   885  008E48  2E                 	db	46
   886  008E49  2E                 	db	46
   887  008E4A  2E                 	db	46
   888  008E4B  00                 	db	0
   889  008E4C                     __end_of_reboot_line1:
   890                           	opt stack 0
   891  008E4C                     _verify_line2:
   892                           	opt stack 0
   893  008E4C  56                 	db	86
   894  008E4D  65                 	db	101
   895  008E4E  72                 	db	114
   896  008E4F  69                 	db	105
   897  008E50  66                 	db	102
   898  008E51  79                 	db	121
   899  008E52  69                 	db	105
   900  008E53  6E                 	db	110
   901  008E54  67                 	db	103
   902  008E55  2E                 	db	46
   903  008E56  2E                 	db	46
   904  008E57  2E                 	db	46
   905  008E58  00                 	db	0
   906  008E59                     __end_of_verify_line2:
   907                           	opt stack 0
   908  008E59                     _search_line4:
   909                           	opt stack 0
   910  008E59  64                 	db	100
   911  008E5A  72                 	db	114
   912  008E5B  69                 	db	105
   913  008E5C  76                 	db	118
   914  008E5D  65                 	db	101
   915  008E5E  2E                 	db	46
   916  008E5F  2E                 	db	46
   917  008E60  2E                 	db	46
   918  008E61  00                 	db	0
   919  008E62                     __end_of_search_line4:
   920                           	opt stack 0
   921  008E62                     _start_line2:
   922                           	opt stack 0
   923  008E62  56                 	db	86
   924  008E63  65                 	db	101
   925  008E64  72                 	db	114
   926  008E65  73                 	db	115
   927  008E66  69                 	db	105
   928  008E67  6F                 	db	111
   929  008E68  6E                 	db	110
   930  008E69  20                 	db	32
   931  008E6A  00                 	db	0
   932  008E6B                     __end_of_start_line2:
   933                           	opt stack 0
   934  008E6B                     _failed_line4:
   935                           	opt stack 0
   936  008E6B  52                 	db	82
   937  008E6C  65                 	db	101
   938  008E6D  63                 	db	99
   939  008E6E  6F                 	db	111
   940  008E6F  72                 	db	114
   941  008E70  64                 	db	100
   942  008E71  20                 	db	32
   943  008E72  00                 	db	0
   944  008E73                     __end_of_failed_line4:
   945                           	opt stack 0
   946  008E73                     _checked_line3:
   947                           	opt stack 0
   948  008E73  72                 	db	114
   949  008E74  65                 	db	101
   950  008E75  63                 	db	99
   951  008E76  6F                 	db	111
   952  008E77  72                 	db	114
   953  008E78  64                 	db	100
   954  008E79  73                 	db	115
   955  008E7A  00                 	db	0
   956  008E7B                     __end_of_checked_line3:
   957                           	opt stack 0
   958  008E7B                     _USB_SD_Ptr:
   959                           	opt stack 0
   960  008E7B  CC                 	db	low _sd000
   961  008E7C  8F                 	db	high _sd000
   962  008E7D  E8                 	db	low _sd001
   963  008E7E  8E                 	db	high _sd001
   964  008E7F  1C                 	db	low _sd002
   965  008E80  8F                 	db	high _sd002
   966  008E81  8B                 	db	low _sd003
   967  008E82  8F                 	db	high _sd003
   968  008E83                     __end_of_USB_SD_Ptr:
   969                           	opt stack 0
   970  008E83                     _programming_line3:
   971                           	opt stack 0
   972  008E83  45                 	db	69
   973  008E84  6E                 	db	110
   974  008E85  74                 	db	116
   975  008E86  72                 	db	114
   976  008E87  79                 	db	121
   977  008E88  20                 	db	32
   978  008E89  00                 	db	0
   979  008E8A                     __end_of_programming_line3:
   980                           	opt stack 0
   981  008E8A                     _verify_line3:
   982                           	opt stack 0
   983  008E8A  52                 	db	82
   984  008E8B  65                 	db	101
   985  008E8C  63                 	db	99
   986  008E8D  6F                 	db	111
   987  008E8E  72                 	db	114
   988  008E8F  64                 	db	100
   989  008E90  00                 	db	0
   990  008E91                     __end_of_verify_line3:
   991                           	opt stack 0
   992  008E91                     _found_line3b:
   993                           	opt stack 0
   994  008E91  20                 	db	32
   995  008E92  62                 	db	98
   996  008E93  79                 	db	121
   997  008E94  74                 	db	116
   998  008E95  65                 	db	101
   999  008E96  73                 	db	115
  1000  008E97  00                 	db	0
  1001  008E98                     __end_of_found_line3b:
  1002                           	opt stack 0
  1003  008E98                     _found_line3:
  1004                           	opt stack 0
  1005  008E98  53                 	db	83
  1006  008E99  69                 	db	105
  1007  008E9A  7A                 	db	122
  1008  008E9B  65                 	db	101
  1009  008E9C  3A                 	db	58
  1010  008E9D  20                 	db	32
  1011  008E9E  00                 	db	0
  1012  008E9F                     __end_of_found_line3:
  1013                           	opt stack 0
  1014  008E9F                     _done_line2:
  1015                           	opt stack 0
  1016  008E9F  44                 	db	68
  1017  008EA0  6F                 	db	111
  1018  008EA1  6E                 	db	110
  1019  008EA2  65                 	db	101
  1020  008EA3  21                 	db	33
  1021  008EA4  00                 	db	0
  1022  008EA5                     __end_of_done_line2:
  1023                           	opt stack 0
  1024  008EA5                     _USB_CD_Ptr:
  1025                           	opt stack 0
  1026  008EA5  A8                 	db	low _configDescriptor1
  1027  008EA6  8E                 	db	high _configDescriptor1
  1028  008EA7                     __end_of_USB_CD_Ptr:
  1029                           	opt stack 0
  1030  008EA7                     _start_line3:
  1031                           	opt stack 0
  1032  008EA7  00                 	db	0
  1033  008EA8                     __end_of_start_line3:
  1034                           	opt stack 0
  1035  008EA8                     _configDescriptor1:
  1036                           	opt stack 0
  1037  008EA8  09                 	db	9
  1038  008EA9  02                 	db	2
  1039  008EAA  40                 	db	64
  1040  008EAB  00                 	db	0
  1041  008EAC  02                 	db	2
  1042  008EAD  01                 	db	1
  1043  008EAE  00                 	db	0
  1044  008EAF  C0                 	db	192
  1045  008EB0  32                 	db	50
  1046  008EB1  09                 	db	9
  1047  008EB2  04                 	db	4
  1048  008EB3  00                 	db	0
  1049  008EB4  00                 	db	0
  1050  008EB5  02                 	db	2
  1051  008EB6  03                 	db	3
  1052  008EB7  00                 	db	0
  1053  008EB8  00                 	db	0
  1054  008EB9  00                 	db	0
  1055  008EBA  09                 	db	9
  1056  008EBB  21                 	db	33
  1057  008EBC  11                 	db	17
  1058  008EBD  01                 	db	1
  1059  008EBE  00                 	db	0
  1060  008EBF  01                 	db	1
  1061  008EC0  22                 	db	34
  1062  008EC1  1D                 	db	29
  1063  008EC2  00                 	db	0
  1064  008EC3  07                 	db	7
  1065  008EC4  05                 	db	5
  1066  008EC5  81                 	db	129
  1067  008EC6  03                 	db	3
  1068  008EC7  40                 	db	64
  1069  008EC8  00                 	db	0
  1070  008EC9  01                 	db	1
  1071  008ECA  07                 	db	7
  1072  008ECB  05                 	db	5
  1073  008ECC  01                 	db	1
  1074  008ECD  03                 	db	3
  1075  008ECE  40                 	db	64
  1076  008ECF  00                 	db	0
  1077  008ED0  01                 	db	1
  1078  008ED1  09                 	db	9
  1079  008ED2  04                 	db	4
  1080  008ED3  01                 	db	1
  1081  008ED4  00                 	db	0
  1082  008ED5  02                 	db	2
  1083  008ED6  08                 	db	8
  1084  008ED7  06                 	db	6
  1085  008ED8  50                 	db	80
  1086  008ED9  00                 	db	0
  1087  008EDA  07                 	db	7
  1088  008EDB  05                 	db	5
  1089  008EDC  82                 	db	130
  1090  008EDD  02                 	db	2
  1091  008EDE  40                 	db	64
  1092  008EDF  00                 	db	0
  1093  008EE0  01                 	db	1
  1094  008EE1  07                 	db	7
  1095  008EE2  05                 	db	5
  1096  008EE3  02                 	db	2
  1097  008EE4  02                 	db	2
  1098  008EE5  40                 	db	64
  1099  008EE6  00                 	db	0
  1100  008EE7  01                 	db	1
  1101  008EE8                     __end_of_configDescriptor1:
  1102                           	opt stack 0
  1103  008EE8                     _sd001:
  1104                           	opt stack 0
  1105  008EE8  34                 	db	52
  1106  008EE9  03                 	db	3
  1107  008EEA  0053               	dw	83
  1108  008EEC  006F               	dw	111
  1109  008EEE  006C               	dw	108
  1110  008EF0  0064               	dw	100
  1111  008EF2  0065               	dw	101
  1112  008EF4  0072               	dw	114
  1113  008EF6  006E               	dw	110
  1114  008EF8  0065               	dw	101
  1115  008EFA  0072               	dw	114
  1116  008EFC  0064               	dw	100
  1117  008EFE  002E               	dw	46
  1118  008F00  0063               	dw	99
  1119  008F02  006F               	dw	111
  1120  008F04  006D               	dw	109
  1121  008F06  0020               	dw	32
  1122  008F08  0020               	dw	32
  1123  008F0A  0020               	dw	32
  1124  008F0C  0020               	dw	32
  1125  008F0E  0020               	dw	32
  1126  008F10  0020               	dw	32
  1127  008F12  0020               	dw	32
  1128  008F14  0020               	dw	32
  1129  008F16  0020               	dw	32
  1130  008F18  0020               	dw	32
  1131  008F1A  0020               	dw	32
  1132  008F1C                     __end_of_sd001:
  1133                           	opt stack 0
  1134  008F1C                     _sd002:
  1135                           	opt stack 0
  1136  008F1C  2E                 	db	46
  1137  008F1D  03                 	db	3
  1138  008F1E  004D               	dw	77
  1139  008F20  0050               	dw	80
  1140  008F22  0050               	dw	80
  1141  008F24  0054               	dw	84
  1142  008F26  0053               	dw	83
  1143  008F28  006F               	dw	111
  1144  008F2A  006C               	dw	108
  1145  008F2C  0061               	dw	97
  1146  008F2E  0072               	dw	114
  1147  008F30  0020               	dw	32
  1148  008F32  0043               	dw	67
  1149  008F34  0068               	dw	104
  1150  008F36  0061               	dw	97
  1151  008F38  0072               	dw	114
  1152  008F3A  0067               	dw	103
  1153  008F3C  0065               	dw	101
  1154  008F3E  0072               	dw	114
  1155  008F40  0020               	dw	32
  1156  008F42  0052               	dw	82
  1157  008F44  0065               	dw	101
  1158  008F46  0076               	dw	118
  1159  008F48  0043               	dw	67
  1160  008F4A                     __end_of_sd002:
  1161                           	opt stack 0
  1162  008F4A                     _inq_resp:
  1163                           	opt stack 0
  1164  008F4A  00                 	db	0
  1165  008F4B  80                 	db	128
  1166  008F4C  04                 	db	4
  1167  008F4D  02                 	db	2
  1168  008F4E  20                 	db	32
  1169  008F4F  00                 	db	0
  1170  008F50  00                 	db	0
  1171  008F51  00                 	db	0
  1172  008F52  4D                 	db	77
  1173  008F53  69                 	db	105
  1174  008F54  63                 	db	99
  1175  008F55  72                 	db	114
  1176  008F56  6F                 	db	111
  1177  008F57  63                 	db	99
  1178  008F58  68                 	db	104
  1179  008F59  70                 	db	112
  1180  008F5A  4D                 	db	77
  1181  008F5B  61                 	db	97
  1182  008F5C  73                 	db	115
  1183  008F5D  73                 	db	115
  1184  008F5E  20                 	db	32
  1185  008F5F  53                 	db	83
  1186  008F60  74                 	db	116
  1187  008F61  6F                 	db	111
  1188  008F62  72                 	db	114
  1189  008F63  61                 	db	97
  1190  008F64  67                 	db	103
  1191  008F65  65                 	db	101
  1192  008F66  20                 	db	32
  1193  008F67  20                 	db	32
  1194  008F68  20                 	db	32
  1195  008F69  20                 	db	32
  1196  008F6A  30                 	db	48
  1197  008F6B  30                 	db	48
  1198  008F6C  30                 	db	48
  1199  008F6D  31                 	db	49
  1200  008F6E                     __end_of_inq_resp:
  1201                           	opt stack 0
  1202  008F6E                     _hid_rpt01:
  1203                           	opt stack 0
  1204  008F6E  06                 	db	6
  1205  008F6F  00                 	db	0
  1206  008F70  FF                 	db	255
  1207  008F71  09                 	db	9
  1208  008F72  01                 	db	1
  1209  008F73  A1                 	db	161
  1210  008F74  01                 	db	1
  1211  008F75  19                 	db	25
  1212  008F76  01                 	db	1
  1213  008F77  29                 	db	41
  1214  008F78  40                 	db	64
  1215  008F79  15                 	db	21
  1216  008F7A  00                 	db	0
  1217  008F7B  26                 	db	38
  1218  008F7C  FF                 	db	255
  1219  008F7D  00                 	db	0
  1220  008F7E  75                 	db	117
  1221  008F7F  08                 	db	8
  1222  008F80  95                 	db	149
  1223  008F81  40                 	db	64
  1224  008F82  81                 	db	129
  1225  008F83  00                 	db	0
  1226  008F84  19                 	db	25
  1227  008F85  01                 	db	1
  1228  008F86  29                 	db	41
  1229  008F87  40                 	db	64
  1230  008F88  91                 	db	145
  1231  008F89  00                 	db	0
  1232  008F8A  C0                 	db	192
  1233  008F8B                     __end_of_hid_rpt01:
  1234                           	opt stack 0
  1235  008F8B                     _sd003:
  1236                           	opt stack 0
  1237  008F8B  1A                 	db	26
  1238  008F8C  03                 	db	3
  1239  008F8D  0031               	dw	49
  1240  008F8F  0032               	dw	50
  1241  008F91  0033               	dw	51
  1242  008F93  0034               	dw	52
  1243  008F95  0035               	dw	53
  1244  008F97  0036               	dw	54
  1245  008F99  0037               	dw	55
  1246  008F9B  0038               	dw	56
  1247  008F9D  0039               	dw	57
  1248  008F9F  0030               	dw	48
  1249  008FA1  0039               	dw	57
  1250  008FA3  0039               	dw	57
  1251  008FA5                     __end_of_sd003:
  1252                           	opt stack 0
  1253  008FA5                     _device_dsc:
  1254                           	opt stack 0
  1255  008FA5  12                 	db	18
  1256  008FA6  01                 	db	1
  1257  008FA7  0200               	dw	512
  1258  008FA9  00                 	db	0
  1259  008FAA  00                 	db	0
  1260  008FAB  00                 	db	0
  1261  008FAC  08                 	db	8
  1262  008FAD  04D8               	dw	1240
  1263  008FAF  F08E               	dw	61582
  1264  008FB1  0100               	dw	256
  1265  008FB3  01                 	db	1
  1266  008FB4  02                 	db	2
  1267  008FB5  00                 	db	0
  1268  008FB6  01                 	db	1
  1269  008FB7                     __end_of_device_dsc:
  1270                           	opt stack 0
  1271  008FB7                     _bootloader_filename:
  1272                           	opt stack 0
  1273  008FB7  46                 	db	70
  1274  008FB8  49                 	db	73
  1275  008FB9  52                 	db	82
  1276  008FBA  4D                 	db	77
  1277  008FBB  57                 	db	87
  1278  008FBC  41                 	db	65
  1279  008FBD  52                 	db	82
  1280  008FBE  45                 	db	69
  1281  008FBF  00                 	db	0
  1282  008FC0                     __end_of_bootloader_filename:
  1283                           	opt stack 0
  1284  008FC0                     _flash_command_pagesize_528:
  1285                           	opt stack 0
  1286  008FC0  3D                 	db	61
  1287  008FC1  2A                 	db	42
  1288  008FC2  80                 	db	128
  1289  008FC3  A7                 	db	167
  1290  008FC4                     __end_of_flash_command_pagesize_528:
  1291                           	opt stack 0
  1292  008FC4                     _flash_command_pagesize_512:
  1293                           	opt stack 0
  1294  008FC4  3D                 	db	61
  1295  008FC5  2A                 	db	42
  1296  008FC6  80                 	db	128
  1297  008FC7  A6                 	db	166
  1298  008FC8                     __end_of_flash_command_pagesize_512:
  1299                           	opt stack 0
  1300  008FC8                     _bootloader_extension:
  1301                           	opt stack 0
  1302  008FC8  48                 	db	72
  1303  008FC9  45                 	db	69
  1304  008FCA  58                 	db	88
  1305  008FCB  00                 	db	0
  1306  008FCC                     __end_of_bootloader_extension:
  1307                           	opt stack 0
  1308  008FCC                     _sd000:
  1309                           	opt stack 0
  1310  008FCC  04                 	db	4
  1311  008FCD  03                 	db	3
  1312  008FCE  0409               	dw	1033
  1313  008FD0                     __end_of_sd000:
  1314                           	opt stack 0
  1315  0000                     _RPINR23	set	3838
  1316  0000                     _RPOR23	set	3799
  1317  0000                     _RPINR22	set	3837
  1318  0000                     _RPOR22	set	3798
  1319  0000                     _RPOR21	set	3797
  1320  0000                     _RPINR21	set	3836
  1321  0000                     _RPINR2	set	3810
  1322  0000                     _RPINR3	set	3811
  1323  0000                     _RPINR1	set	3809
  1324  0000                     _PPSCONbits	set	3775
  1325  0000                     _ODCON3bits	set	3904
  1326  0000                     _ANCON0bits	set	3912
  1327  0000                     _UEP0bits	set	3878
  1328  0000                     _UIEbits	set	3894
  1329  0000                     _UADDR	set	3896
  1330  0000                     _UIE	set	3894
  1331  0000                     _UEIE	set	3895
  1332  0000                     _UCFG	set	3897
  1333  0000                     _UEP1	set	3879
  1334  0000                     _UEP0	set	3878
  1335  0000                     _TBLPTR	set	4086
  1336  0000                     _DMACON2bits	set	3974
  1337  0000                     _SSP2CON1bits	set	3954
  1338  0000                     _SSP2STATbits	set	3955
  1339  0000                     _INTCON	set	4082
  1340  0000                     _EECON1	set	4006
  1341  0000                     _TABLAT	set	4085
  1342  0000                     _EECON1bits	set	4006
  1343  0000                     _SSP1CON1	set	4038
  1344  0000                     _SSP1BUF	set	4041
  1345  0000                     _SSP1CON2bits	set	4037
  1346  0000                     _SSP1CON1bits	set	4038
  1347  0000                     _SSP1ADD	set	4040
  1348  0000                     _SSP1STATbits	set	4039
  1349  0000                     _LATEbits	set	3981
  1350  0000                     _TRISEbits	set	3990
  1351  0000                     _LATBbits	set	3978
  1352  0000                     _TRISBbits	set	3987
  1353  0000                     _LATDbits	set	3980
  1354  0000                     _TRISDbits	set	3989
  1355  0000                     _LATCbits	set	3979
  1356  0000                     _TRISCbits	set	3988
  1357  0000                     _T0CONbits	set	4053
  1358  0000                     _INTCON2bits	set	4081
  1359  0000                     _EECON2	set	4007
  1360  0000                     _PORTBbits	set	3969
  1361  0000                     _INTCON3bits	set	4080
  1362  0000                     _TMR0L	set	4054
  1363  0000                     _TMR0H	set	4055
  1364  0000                     _INTCONbits	set	4082
  1365  0000                     _OSCCON	set	4051
  1366  0000                     _OSCTUNEbits	set	3995
  1367  0000                     _PORTAbits	set	3968
  1368  0000                     _TRISAbits	set	3986
  1369  0000                     _LATAbits	set	3977
  1370  0000                     _PIR3bits	set	4004
  1371  0000                     _DMABCL	set	3943
  1372  0000                     _DMABCH	set	3942
  1373  0000                     _RXADDRL	set	3945
  1374  0000                     _RXADDRH	set	3944
  1375  0000                     _DMACON1bits	set	3976
  1376  0000                     _TXADDRL	set	3947
  1377  0000                     _TXADDRH	set	3946
  1378  0000                     _PORTDbits	set	3971
  1379  0000                     _USTAT	set	3940
  1380  0000                     _PIR2bits	set	4001
  1381  0000                     _UCON	set	3941
  1382  0000                     _UIRbits	set	3938
  1383  0000                     _UCONbits	set	3941
  1384  0000                     _UIR	set	3938
  1385  0000                     _UEIR	set	3939
  1386  0000                     _PIE2bits	set	4000
  1387  008FD0                     STR_12:
  1388  008FD0  68                 	db	104	;'h'
  1389  008FD1  65                 	db	101	;'e'
  1390  008FD2  6C                 	db	108	;'l'
  1391  008FD3  6C                 	db	108	;'l'
  1392  008FD4  6F                 	db	111	;'o'
  1393  008FD5  20                 	db	32
  1394  008FD6  77                 	db	119	;'w'
  1395  008FD7  6F                 	db	111	;'o'
  1396  008FD8  72                 	db	114	;'r'
  1397  008FD9  6C                 	db	108	;'l'
  1398  008FDA  64                 	db	100	;'d'
  1399  008FDB  21                 	db	33
  1400  008FDC  00                 	db	0
  1401  008FDD                     STR_9:
  1402  008FDD  53                 	db	83	;'S'
  1403  008FDE  6F                 	db	111	;'o'
  1404  008FDF  6C                 	db	108	;'l'
  1405  008FE0  61                 	db	97	;'a'
  1406  008FE1  72                 	db	114	;'r'
  1407  008FE2  43                 	db	67	;'C'
  1408  008FE3  68                 	db	104	;'h'
  1409  008FE4  61                 	db	97	;'a'
  1410  008FE5  72                 	db	114	;'r'
  1411  008FE6  67                 	db	103	;'g'
  1412  008FE7  72                 	db	114	;'r'
  1413  008FE8  00                 	db	0
  1414  008FE9                     STR_10:
  1415  008FE9  46                 	db	70	;'F'
  1416  008FEA  49                 	db	73	;'I'
  1417  008FEB  4C                 	db	76	;'L'
  1418  008FEC  45                 	db	69	;'E'
  1419  008FED  20                 	db	32
  1420  008FEE  20                 	db	32
  1421  008FEF  20                 	db	32
  1422  008FF0  20                 	db	32
  1423  008FF1  00                 	db	0
  1424  008FF2                     STR_1:
  1425  008FF2  4D                 	db	77	;'M'
  1426  008FF3  53                 	db	83	;'S'
  1427  008FF4  44                 	db	68	;'D'
  1428  008FF5  4F                 	db	79	;'O'
  1429  008FF6  53                 	db	83	;'S'
  1430  008FF7  35                 	db	53	;'5'
  1431  008FF8  2E                 	db	46
  1432  008FF9  30                 	db	48	;'0'
  1433  008FFA  00                 	db	0
  1434  008FFB                     STR_11:
  1435  008FFB  54                 	db	84	;'T'
  1436  008FFC  58                 	db	88	;'X'
  1437  008FFD  54                 	db	84	;'T'
  1438  008FFE  00                 	db	0
  1439  0000                     
  1440                           ; #config settings
  1441  008FFF  00                 	db	0	; dummy byte at the end
  1442  0000                     
  1443                           	psect	cinit
  1444  006C48                     __pcinit:
  1445                           	opt stack 0
  1446  006C48                     start_initialization:
  1447                           	opt stack 0
  1448  006C48                     __initialization:
  1449                           	opt stack 0
  1450                           
  1451                           ; Initialize objects allocated to BANK1 (37 bytes)
  1452                           ; load TBLPTR registers with __pidataBANK1
  1453  006C48  0ED4               	movlw	low __pidataBANK1
  1454  006C4A  6EF6               	movwf	tblptrl,c
  1455  006C4C  0E86               	movlw	high __pidataBANK1
  1456  006C4E  6EF7               	movwf	tblptrh,c
  1457  006C50  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1458  006C52  6EF8               	movwf	tblptru,c
  1459  006C54  EE01  F0B3         	lfsr	0,__pdataBANK1
  1460  006C58  EE10 F025          	lfsr	1,37
  1461  006C5C                     copy_data0:
  1462  006C5C  0009               	tblrd		*+
  1463  006C5E  CFF5 FFEE          	movff	tablat,postinc0
  1464  006C62  50E5               	movf	postdec1,w,c
  1465  006C64  50E1               	movf	fsr1l,w,c
  1466  006C66  E1FA               	bnz	copy_data0
  1467                           
  1468                           ; Initialize objects allocated to BANK0 (1 bytes)
  1469                           ; load TBLPTR registers with __pidataBANK0
  1470  006C68  0EA0               	movlw	low __pidataBANK0
  1471  006C6A  6EF6               	movwf	tblptrl,c
  1472  006C6C  0E8A               	movlw	high __pidataBANK0
  1473  006C6E  6EF7               	movwf	tblptrh,c
  1474  006C70  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1475  006C72  6EF8               	movwf	tblptru,c
  1476  006C74  0009               	tblrd		*+	;fetch initializer
  1477  006C76  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1478                           
  1479                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1480  006C7A  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1481  006C7E  EE12 F000          	lfsr	1,512
  1482  006C82                     clear_0:
  1483  006C82  6AEE               	clrf	postinc0,c
  1484  006C84  50E5               	movf	postdec1,w,c
  1485  006C86  50E1               	movf	fsr1l,w,c
  1486  006C88  E1FC               	bnz	clear_0
  1487  006C8A  50E2               	movf	fsr1h,w,c
  1488  006C8C  E1FA               	bnz	clear_0
  1489                           
  1490                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1491  006C8E  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1492  006C92  EE14 F000          	lfsr	1,1024
  1493  006C96                     clear_1:
  1494  006C96  6AEE               	clrf	postinc0,c
  1495  006C98  50E5               	movf	postdec1,w,c
  1496  006C9A  50E1               	movf	fsr1l,w,c
  1497  006C9C  E1FC               	bnz	clear_1
  1498  006C9E  50E2               	movf	fsr1h,w,c
  1499  006CA0  E1FA               	bnz	clear_1
  1500                           
  1501                           ; Clear objects allocated to BANK3 (192 bytes)
  1502  006CA2  EE03  F000         	lfsr	0,__pbssBANK3
  1503  006CA6  0EC0               	movlw	192
  1504  006CA8                     clear_2:
  1505  006CA8  6AEE               	clrf	postinc0,c
  1506  006CAA  06E8               	decf	wreg,f,c
  1507  006CAC  E1FD               	bnz	clear_2
  1508                           
  1509                           ; Clear objects allocated to BANK2 (194 bytes)
  1510  006CAE  EE02  F000         	lfsr	0,__pbssBANK2
  1511  006CB2  0EC2               	movlw	194
  1512  006CB4                     clear_3:
  1513  006CB4  6AEE               	clrf	postinc0,c
  1514  006CB6  06E8               	decf	wreg,f,c
  1515  006CB8  E1FD               	bnz	clear_3
  1516                           
  1517                           ; Clear objects allocated to BANK1 (179 bytes)
  1518  006CBA  EE01  F000         	lfsr	0,__pbssBANK1
  1519  006CBE  0EB3               	movlw	179
  1520  006CC0                     clear_4:
  1521  006CC0  6AEE               	clrf	postinc0,c
  1522  006CC2  06E8               	decf	wreg,f,c
  1523  006CC4  E1FD               	bnz	clear_4
  1524                           
  1525                           ; Clear objects allocated to BANK0 (58 bytes)
  1526  006CC6  EE00  F0C5         	lfsr	0,__pbssBANK0
  1527  006CCA  0E3A               	movlw	58
  1528  006CCC                     clear_5:
  1529  006CCC  6AEE               	clrf	postinc0,c
  1530  006CCE  06E8               	decf	wreg,f,c
  1531  006CD0  E1FD               	bnz	clear_5
  1532  006CD2                     end_of_initialization:
  1533                           	opt stack 0
  1534  006CD2                     __end_of__initialization:
  1535                           	opt stack 0
  1536  006CD2  0100               	movlb	0
  1537  006CD4  EF25  F01D         	goto	_main	;jump to C main() function
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1h	equ	0xFE2
  1546                           fsr1l	equ	0xFE1
  1547                           
  1548                           	psect	bssBANK0
  1549  0000C5                     __pbssBANK0:
  1550                           	opt stack 0
  1551  0000C5                     _os:
  1552                           	opt stack 0
  1553  0000C5                     	ds	6
  1554  0000CB                     _inPipes:
  1555                           	opt stack 0
  1556  0000CB                     	ds	6
  1557  0000D1                     _pBDTEntryIn:
  1558                           	opt stack 0
  1559  0000D1                     	ds	6
  1560  0000D7                     _hex_file_offset:
  1561                           	opt stack 0
  1562  0000D7                     	ds	4
  1563  0000DB                     _TransferLength:
  1564                           	opt stack 0
  1565  0000DB                     	ds	2
  1566  0000DD                     _USBMSDInHandle:
  1567                           	opt stack 0
  1568  0000DD                     	ds	2
  1569  0000DF                     _USBMSDOutHandle:
  1570                           	opt stack 0
  1571  0000DF                     	ds	2
  1572  0000E1                     _pBDTEntryEP0OutNext:
  1573                           	opt stack 0
  1574  0000E1                     	ds	2
  1575  0000E3                     _pBDTEntryEP0OutCurrent:
  1576                           	opt stack 0
  1577  0000E3                     	ds	2
  1578  0000E5                     _power_state:
  1579                           	opt stack 0
  1580  0000E5                     	ds	1
  1581  0000E6                     _userInterfaceStatus:
  1582                           	opt stack 0
  1583  0000E6                     	ds	1
  1584  0000E7                     _MSDHostNoData:
  1585                           	opt stack 0
  1586  0000E7                     	ds	1
  1587  0000E8                     _SoftDetach:
  1588                           	opt stack 0
  1589  0000E8                     	ds	1
  1590  0000E9                     _MSDRetryAttempt:
  1591                           	opt stack 0
  1592  0000E9                     	ds	1
  1593  0000EA                     _MSDWriteState:
  1594                           	opt stack 0
  1595  0000EA                     	ds	1
  1596  0000EB                     _MSDReadState:
  1597                           	opt stack 0
  1598  0000EB                     	ds	1
  1599  0000EC                     _MSDCommandState:
  1600                           	opt stack 0
  1601  0000EC                     	ds	1
  1602  0000ED                     _MSD_State:
  1603                           	opt stack 0
  1604  0000ED                     	ds	1
  1605  0000EE                     _USBDeferOUTDataStagePackets:
  1606                           	opt stack 0
  1607  0000EE                     	ds	1
  1608  0000EF                     _USBDeferINDataStagePackets:
  1609                           	opt stack 0
  1610  0000EF                     	ds	1
  1611  0000F0                     _USBStatusStageEnabledFlag2:
  1612                           	opt stack 0
  1613  0000F0                     	ds	1
  1614  0000F1                     _USBStatusStageEnabledFlag1:
  1615                           	opt stack 0
  1616  0000F1                     	ds	1
  1617  0000F2                     _USBDeferStatusStagePacket:
  1618                           	opt stack 0
  1619  0000F2                     	ds	1
  1620  0000F3                     _USBStatusStageTimeoutCounter:
  1621                           	opt stack 0
  1622  0000F3                     	ds	1
  1623  0000F4                     _endpoint_number:
  1624                           	opt stack 0
  1625  0000F4                     	ds	1
  1626  0000F5                     _RemoteWakeup:
  1627                           	opt stack 0
  1628  0000F5                     	ds	1
  1629  0000F6                     _controlTransferState:
  1630                           	opt stack 0
  1631  0000F6                     	ds	1
  1632  0000F7                     _shortPacketStatus:
  1633                           	opt stack 0
  1634  0000F7                     	ds	1
  1635  0000F8                     _USBDeviceState:
  1636                           	opt stack 0
  1637  0000F8                     	ds	1
  1638  0000F9                     _fast_read_cluster_number:
  1639                           	opt stack 0
  1640  0000F9                     	ds	2
  1641  0000FB                     _fast_read_cluster:
  1642                           	opt stack 0
  1643  0000FB                     	ds	2
  1644  0000FD                     _USTATcopy:
  1645                           	opt stack 0
  1646  0000FD                     	ds	1
  1647  0000FE                     _USBActiveConfiguration:
  1648                           	opt stack 0
  1649  0000FE                     	ds	1
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1h	equ	0xFE2
  1658                           fsr1l	equ	0xFE1
  1659                           
  1660                           	psect	dataBANK0
  1661  0000FF                     __pdataBANK0:
  1662                           	opt stack 0
  1663  0000FF                     _file_number:
  1664                           	opt stack 0
  1665  0000FF                     	ds	1
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1h	equ	0xFE2
  1674                           fsr1l	equ	0xFE1
  1675                           
  1676                           	psect	bssBANK1
  1677  000100                     __pbssBANK1:
  1678                           	opt stack 0
  1679  000100                     _gblCBW:
  1680                           	opt stack 0
  1681  000100                     	ds	31
  1682  00011F                     _gblSenseData:
  1683                           	opt stack 0
  1684  00011F                     	ds	18
  1685  000131                     _outPipes:
  1686                           	opt stack 0
  1687  000131                     	ds	8
  1688  000139                     _communicationSettings:
  1689                           	opt stack 0
  1690  000139                     	ds	7
  1691  000140                     _pBDTEntryOut:
  1692                           	opt stack 0
  1693  000140                     	ds	6
  1694  000146                     _extended_linear_address:
  1695                           	opt stack 0
  1696  000146                     	ds	4
  1697  00014A                     _hex_file_size:
  1698                           	opt stack 0
  1699  00014A                     	ds	4
  1700  00014E                     _file_maximum_address:
  1701                           	opt stack 0
  1702  00014E                     	ds	4
  1703  000152                     _file_minimum_address:
  1704                           	opt stack 0
  1705  000152                     	ds	4
  1706  000156                     _gblBLKLen:
  1707                           	opt stack 0
  1708  000156                     	ds	4
  1709  00015A                     _gblNumBLKS:
  1710                           	opt stack 0
  1711  00015A                     	ds	4
  1712  00015E                     _LBA:
  1713                           	opt stack 0
  1714  00015E                     	ds	4
  1715  000162                     _USB1msTickCount:
  1716                           	opt stack 0
  1717  000162                     	ds	4
  1718  000166                     _config_external:
  1719                           	opt stack 0
  1720  000166                     	ds	3
  1721  000169                     _config_internal:
  1722                           	opt stack 0
  1723  000169                     	ds	3
  1724  00016C                     _ep_data_out:
  1725                           	opt stack 0
  1726  00016C                     	ds	3
  1727  00016F                     _ep_data_in:
  1728                           	opt stack 0
  1729  00016F                     	ds	3
  1730  000172                     _FileAddress:
  1731                           	opt stack 0
  1732  000172                     	ds	2
  1733  000174                     _flash_pages_written:
  1734                           	opt stack 0
  1735  000174                     	ds	2
  1736  000176                     _total_hex_file_entries:
  1737                           	opt stack 0
  1738  000176                     	ds	2
  1739  000178                     _hex_file_entries:
  1740                           	opt stack 0
  1741  000178                     	ds	2
  1742  00017A                     _startup_timer:
  1743                           	opt stack 0
  1744  00017A                     	ds	2
  1745  00017C                     _system_ui_inactive_count:
  1746                           	opt stack 0
  1747  00017C                     	ds	2
  1748  00017E                     _USBInHandle:
  1749                           	opt stack 0
  1750  00017E                     	ds	2
  1751  000180                     _USBOutHandle:
  1752                           	opt stack 0
  1753  000180                     	ds	2
  1754  000182                     _gblMediaPresent:
  1755                           	opt stack 0
  1756  000182                     	ds	2
  1757  000184                     _MSBBufferIndex:
  1758                           	opt stack 0
  1759  000184                     	ds	2
  1760  000186                     _ptrNextData:
  1761                           	opt stack 0
  1762  000186                     	ds	2
  1763  000188                     _pDst:
  1764                           	opt stack 0
  1765  000188                     	ds	2
  1766  00018A                     _active_configuration:
  1767                           	opt stack 0
  1768  00018A                     	ds	1
  1769  00018B                     _start_from_byte_next:
  1770                           	opt stack 0
  1771  00018B                     	ds	1
  1772  00018C                     _last_error:
  1773                           	opt stack 0
  1774  00018C                     	ds	1
  1775  00018D                     _i2c_frequency:
  1776                           	opt stack 0
  1777  00018D                     	ds	1
  1778  00018E                     _MSDCBWValid:
  1779                           	opt stack 0
  1780  00018E                     	ds	1
  1781  00018F                     _gblCBWLength:
  1782                           	opt stack 0
  1783  00018F                     	ds	1
  1784  000190                     _USBTicksSinceSuspendEnd:
  1785                           	opt stack 0
  1786  000190                     	ds	1
  1787  000191                     _BothEP0OutUOWNsSet:
  1788                           	opt stack 0
  1789  000191                     	ds	1
  1790  000192                     _USBBusIsSuspended:
  1791                           	opt stack 0
  1792  000192                     	ds	1
  1793  000193                     _hex_file_entry:
  1794                           	opt stack 0
  1795  000193                     	ds	23
  1796  0001AA                     _mediaInformation:
  1797                           	opt stack 0
  1798  0001AA                     	ds	5
  1799  0001AF                     _USBAlternateInterface:
  1800                           	opt stack 0
  1801  0001AF                     	ds	2
  1802  0001B1                     _active_protocol:
  1803                           	opt stack 0
  1804  0001B1                     	ds	1
  1805  0001B2                     _idle_rate:
  1806                           	opt stack 0
  1807  0001B2                     	ds	1
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           postinc0	equ	0xFEE
  1813                           wreg	equ	0xFE8
  1814                           postdec1	equ	0xFE5
  1815                           fsr1h	equ	0xFE2
  1816                           fsr1l	equ	0xFE1
  1817                           
  1818                           	psect	dataBANK1
  1819  0001B3                     __pdataBANK1:
  1820                           	opt stack 0
  1821  0001B3                     _LUN:
  1822                           	opt stack 0
  1823  0001B3                     	ds	20
  1824  0001C7                     i2c_display_send_init_sequence@F6808:
  1825                           	opt stack 0
  1826  0001C7                     	ds	9
  1827  0001D0                     	ds	8
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1h	equ	0xFE2
  1836                           fsr1l	equ	0xFE1
  1837                           
  1838                           	psect	bssBANK2
  1839  000200                     __pbssBANK2:
  1840                           	opt stack 0
  1841  000200                     _display_content:
  1842                           	opt stack 0
  1843  000200                     	ds	80
  1844  000250                     _ReceivedDataBuffer:
  1845                           	opt stack 0
  1846  000250                     	ds	64
  1847  000290                     _file_buffer:
  1848                           	opt stack 0
  1849  000290                     	ds	50
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1h	equ	0xFE2
  1858                           fsr1l	equ	0xFE1
  1859                           
  1860                           	psect	bssBANK3
  1861  000300                     __pbssBANK3:
  1862                           	opt stack 0
  1863  000300                     __spi_external_rx_buffer:
  1864                           	opt stack 0
  1865  000300                     	ds	64
  1866  000340                     __spi_external_tx_buffer:
  1867                           	opt stack 0
  1868  000340                     	ds	64
  1869  000380                     _ToSendDataBuffer:
  1870                           	opt stack 0
  1871  000380                     	ds	64
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           
  1882                           	psect	bssBIGRAMlh
  1883  000800                     __pbssBIGRAMlh:
  1884                           	opt stack 0
  1885  000800                     _pageBuffer:
  1886                           	opt stack 0
  1887  000800                     	ds	1024
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1h	equ	0xFE2
  1896                           fsr1l	equ	0xFE1
  1897                           
  1898                           	psect	bssBIGRAMll
  1899  0003C0                     __pbssBIGRAMll:
  1900                           	opt stack 0
  1901  0003C0                     _buffer:
  1902                           	opt stack 0
  1903  0003C0                     	ds	512
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           postdec1	equ	0xFE5
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           
  1914                           	psect	cstackBANK0
  1915  000060                     __pcstackBANK0:
  1916                           	opt stack 0
  1917  000060                     fat_create_file@number_of_clusters:
  1918                           	opt stack 0
  1919  000060                     fat_read_from_file_fast@sector:
  1920                           	opt stack 0
  1921  000060                     fat_resize_file@old_number_of_clusters:
  1922                           	opt stack 0
  1923  000060                     fat_modify_file@sector:
  1924                           	opt stack 0
  1925  000060                     __parse_file_rename@data:
  1926                           	opt stack 0
  1927                           
  1928                           ; 2 bytes @ 0x0
  1929  000060                     	ds	2
  1930  000062                     fat_modify_file@file_number:
  1931                           	opt stack 0
  1932  000062                     fat_create_file@first_cluster:
  1933                           	opt stack 0
  1934  000062                     fat_read_from_file_fast@working_cluster:
  1935                           	opt stack 0
  1936  000062                     fat_resize_file@new_number_of_clusters:
  1937                           	opt stack 0
  1938                           
  1939                           ; 2 bytes @ 0x2
  1940  000062                     	ds	1
  1941  000063                     fat_modify_file@return_code:
  1942                           	opt stack 0
  1943                           
  1944                           ; 1 bytes @ 0x3
  1945  000063                     	ds	1
  1946  000064                     fat_create_file@file_number:
  1947                           	opt stack 0
  1948  000064                     fat_read_from_file_fast@offset:
  1949                           	opt stack 0
  1950  000064                     fat_resize_file@first_cluster:
  1951                           	opt stack 0
  1952  000064                     fat_modify_file@cluster:
  1953                           	opt stack 0
  1954                           
  1955                           ; 2 bytes @ 0x4
  1956  000064                     	ds	1
  1957  000065                     fat_create_file@root_entry:
  1958                           	opt stack 0
  1959                           
  1960                           ; 32 bytes @ 0x5
  1961  000065                     	ds	1
  1962  000066                     fat_resize_file@file_number:
  1963                           	opt stack 0
  1964  000066                     fat_read_from_file_fast@needed_cluster:
  1965                           	opt stack 0
  1966  000066                     fat_modify_file@offset:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x6
  1970  000066                     	ds	1
  1971  000067                     fat_resize_file@root:
  1972                           	opt stack 0
  1973                           
  1974                           ; 32 bytes @ 0x7
  1975  000067                     	ds	1
  1976  000068                     fat_read_from_file_fast@read_length:
  1977                           	opt stack 0
  1978  000068                     fat_modify_file@number_of_bytes:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x8
  1982  000068                     	ds	2
  1983  00006A                     fat_read_from_file_fast@position:
  1984                           	opt stack 0
  1985  00006A                     fat_modify_file@position:
  1986                           	opt stack 0
  1987                           
  1988                           ; 4 bytes @ 0xA
  1989  00006A                     	ds	4
  1990  00006E                     ??__bootloader_verify_file:
  1991  00006E                     ??__bootloader_program:
  1992  00006E                     fat_read_from_file@start_byte:
  1993                           	opt stack 0
  1994  00006E                     fat_modify_file@root:
  1995                           	opt stack 0
  1996                           
  1997                           ; 32 bytes @ 0xE
  1998  00006E                     	ds	4
  1999  000072                     fat_read_from_file@length:
  2000                           	opt stack 0
  2001                           
  2002                           ; 4 bytes @ 0x12
  2003  000072                     	ds	4
  2004  000076                     fat_read_from_file@data:
  2005                           	opt stack 0
  2006  000076                     __bootloader_program@buffer:
  2007                           	opt stack 0
  2008  000076                     __bootloader_verify_file@root:
  2009                           	opt stack 0
  2010                           
  2011                           ; 32 bytes @ 0x16
  2012  000076                     	ds	2
  2013  000078                     fat_read_from_file@file_number:
  2014                           	opt stack 0
  2015  000078                     __bootloader_program@entry_page:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x18
  2019  000078                     	ds	1
  2020  000079                     fat_read_from_file@cluster:
  2021                           	opt stack 0
  2022                           
  2023                           ; 2 bytes @ 0x19
  2024  000079                     	ds	1
  2025  00007A                     __bootloader_program@address_within_page:
  2026                           	opt stack 0
  2027                           
  2028                           ; 2 bytes @ 0x1A
  2029  00007A                     	ds	1
  2030  00007B                     fat_read_from_file@cluster_number:
  2031                           	opt stack 0
  2032                           
  2033                           ; 2 bytes @ 0x1B
  2034  00007B                     	ds	1
  2035  00007C                     __bootloader_program@root:
  2036                           	opt stack 0
  2037                           
  2038                           ; 32 bytes @ 0x1C
  2039  00007C                     	ds	1
  2040  00007D                     fat_read_from_file@return_code:
  2041                           	opt stack 0
  2042                           
  2043                           ; 1 bytes @ 0x1D
  2044  00007D                     	ds	1
  2045  00007E                     fat_read_from_file@root:
  2046                           	opt stack 0
  2047                           
  2048                           ; 32 bytes @ 0x1E
  2049  00007E                     	ds	16
  2050  00008E                     fat_append_to_file@new_file_size:
  2051                           	opt stack 0
  2052                           
  2053                           ; 4 bytes @ 0x2E
  2054  00008E                     	ds	4
  2055  000092                     fat_append_to_file@return_code:
  2056                           	opt stack 0
  2057                           
  2058                           ; 1 bytes @ 0x32
  2059  000092                     	ds	1
  2060  000093                     fat_append_to_file@old_file_size:
  2061                           	opt stack 0
  2062                           
  2063                           ; 4 bytes @ 0x33
  2064  000093                     	ds	3
  2065  000096                     __bootloader_verify_file@rec_counter:
  2066                           	opt stack 0
  2067                           
  2068                           ; 1 bytes @ 0x36
  2069  000096                     	ds	1
  2070  000097                     fat_append_to_file@file_number:
  2071                           	opt stack 0
  2072  000097                     __bootloader_verify_file@return_value:
  2073                           	opt stack 0
  2074                           
  2075                           ; 4 bytes @ 0x37
  2076  000097                     	ds	1
  2077  000098                     __parse_command_long@data:
  2078                           	opt stack 0
  2079                           
  2080                           ; 2 bytes @ 0x38
  2081  000098                     	ds	2
  2082  00009A                     __parse_command_long@length:
  2083                           	opt stack 0
  2084                           
  2085                           ; 1 bytes @ 0x3A
  2086  00009A                     	ds	1
  2087  00009B                     api_parse@inBuffer:
  2088                           	opt stack 0
  2089  00009B                     __bootloader_verify_file@address32:
  2090                           	opt stack 0
  2091                           
  2092                           ; 4 bytes @ 0x3B
  2093  00009B                     	ds	1
  2094  00009C                     __bootloader_program@return_value:
  2095                           	opt stack 0
  2096                           
  2097                           ; 4 bytes @ 0x3C
  2098  00009C                     	ds	1
  2099  00009D                     api_parse@receivedDataLength:
  2100                           	opt stack 0
  2101                           
  2102                           ; 1 bytes @ 0x3D
  2103  00009D                     	ds	1
  2104  00009E                     ??_api_parse:
  2105  00009E                     __fill_buffer_read_file@inBuffer:
  2106                           	opt stack 0
  2107                           
  2108                           ; 2 bytes @ 0x3E
  2109  00009E                     	ds	2
  2110  0000A0                     api_parse@idx:
  2111                           	opt stack 0
  2112  0000A0                     __fill_buffer_read_file@outBuffer:
  2113                           	opt stack 0
  2114  0000A0                     __bootloader_program@address32:
  2115                           	opt stack 0
  2116                           
  2117                           ; 4 bytes @ 0x40
  2118  0000A0                     	ds	2
  2119  0000A2                     ??__fill_buffer_read_file:
  2120                           
  2121                           ; 1 bytes @ 0x42
  2122  0000A2                     	ds	2
  2123  0000A4                     __bootloader_program@start_from_byte:
  2124                           	opt stack 0
  2125                           
  2126                           ; 1 bytes @ 0x44
  2127  0000A4                     	ds	1
  2128  0000A5                     __bootloader_program@cntr:
  2129                           	opt stack 0
  2130                           
  2131                           ; 2 bytes @ 0x45
  2132  0000A5                     	ds	1
  2133  0000A6                     __fill_buffer_read_file@file_size:
  2134                           	opt stack 0
  2135                           
  2136                           ; 4 bytes @ 0x46
  2137  0000A6                     	ds	1
  2138  0000A7                     __bootloader_program@page_to_write:
  2139                           	opt stack 0
  2140                           
  2141                           ; 2 bytes @ 0x47
  2142  0000A7                     	ds	3
  2143  0000AA                     __fill_buffer_read_file@data_length:
  2144                           	opt stack 0
  2145                           
  2146                           ; 4 bytes @ 0x4A
  2147  0000AA                     	ds	4
  2148  0000AE                     __fill_buffer_read_file@start:
  2149                           	opt stack 0
  2150                           
  2151                           ; 4 bytes @ 0x4E
  2152  0000AE                     	ds	4
  2153  0000B2                     api_prepare@inBuffer:
  2154                           	opt stack 0
  2155                           
  2156                           ; 2 bytes @ 0x52
  2157  0000B2                     	ds	2
  2158  0000B4                     api_prepare@outBuffer:
  2159                           	opt stack 0
  2160                           
  2161                           ; 2 bytes @ 0x54
  2162  0000B4                     	ds	2
  2163  0000B6                     api_prepare@command:
  2164                           	opt stack 0
  2165                           
  2166                           ; 1 bytes @ 0x56
  2167  0000B6                     	ds	1
  2168  0000B7                     ??_APP_DeviceCustomHIDTasks:
  2169                           
  2170                           ; 1 bytes @ 0x57
  2171  0000B7                     	ds	4
  2172  0000BB                     ??_main:
  2173                           
  2174                           ; 1 bytes @ 0x5B
  2175  0000BB                     	ds	2
  2176  0000BD                     main@tx_start_addr:
  2177                           	opt stack 0
  2178                           
  2179                           ; 2 bytes @ 0x5D
  2180  0000BD                     	ds	2
  2181  0000BF                     main@bytes_transmitted:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x5F
  2185  0000BF                     	ds	2
  2186  0000C1                     main@rx_buffer:
  2187                           	opt stack 0
  2188                           
  2189                           ; 2 bytes @ 0x61
  2190  0000C1                     	ds	2
  2191  0000C3                     main@tx_buffer:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x63
  2195  0000C3                     	ds	2
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           postinc0	equ	0xFEE
  2201                           wreg	equ	0xFE8
  2202                           postdec1	equ	0xFE5
  2203                           fsr1h	equ	0xFE2
  2204                           fsr1l	equ	0xFE1
  2205                           
  2206                           	psect	cstackCOMRAM
  2207  000001                     __pcstackCOMRAM:
  2208                           	opt stack 0
  2209  000001                     ??_USBStdGetDscHandler:
  2210  000001                     ??_USBStdGetStatusHandler:
  2211  000001                     ??_system_delay_ms:
  2212  000001                     ??__i2c_wait_idle:
  2213  000001                     ??__display_clear:
  2214  000001                     ?_USBTransferOnePacket:
  2215                           	opt stack 0
  2216  000001                     ?_spi_get_external_rx_buffer:
  2217                           	opt stack 0
  2218  000001                     ?_spi_get_external_tx_buffer:
  2219                           	opt stack 0
  2220  000001                     ?_ExternalFlash_MediaInitialize:
  2221                           	opt stack 0
  2222  000001                     ?_ExternalFlash_SectorSizeRead:
  2223                           	opt stack 0
  2224  000001                     ?_bootloader_get_entries:
  2225                           	opt stack 0
  2226  000001                     ?_bootloader_get_total_entries:
  2227                           	opt stack 0
  2228  000001                     ?_bootloader_get_rec_address:
  2229                           	opt stack 0
  2230  000001                     ?_bootloader_get_flashPagesWritten:
  2231                           	opt stack 0
  2232  000001                     ?_strncmp:
  2233                           	opt stack 0
  2234  000001                     ?_internalFlash_pageFromAddress:
  2235                           	opt stack 0
  2236  000001                     ?_internalFlash_getBuffer:
  2237                           	opt stack 0
  2238  000001                     ?__sector_from_file_number:
  2239                           	opt stack 0
  2240  000001                     ?__offset_from_file_number:
  2241                           	opt stack 0
  2242  000001                     ?__data_sector_from_cluster:
  2243                           	opt stack 0
  2244  000001                     ?__fat_sector_from_cluster:
  2245                           	opt stack 0
  2246  000001                     ?__fat_offset_from_cluster:
  2247                           	opt stack 0
  2248  000001                     ?__cluster_from_sector_and_offset:
  2249                           	opt stack 0
  2250  000001                     ?__get_available_offset_from_buffer:
  2251                           	opt stack 0
  2252  000001                     ?__read_value_from_offset:
  2253                           	opt stack 0
  2254  000001                     ?__get_time:
  2255                           	opt stack 0
  2256  000001                     ?__get_date:
  2257                           	opt stack 0
  2258  000001                     ?_bootloader_get_rec_dataLength:
  2259                           	opt stack 0
  2260  000001                     ?___lwdiv:
  2261                           	opt stack 0
  2262  000001                     ?___lwmod:
  2263                           	opt stack 0
  2264  000001                     ?_ExternalFlash_CapacityRead:
  2265                           	opt stack 0
  2266  000001                     ?_bootloader_get_file_size:
  2267                           	opt stack 0
  2268  000001                     ?_internalFlash_addressFromPage:
  2269                           	opt stack 0
  2270  000001                     ?___lldiv:
  2271                           	opt stack 0
  2272  000001                     ?___llmod:
  2273                           	opt stack 0
  2274  000001                     USBTransferOnePacket@dir:
  2275                           	opt stack 0
  2276  000001                     USBStallEndpoint@dir:
  2277                           	opt stack 0
  2278  000001                     USBConfigureEndpoint@direction:
  2279                           	opt stack 0
  2280  000001                     USBCtrlTrfTxService@byteToSend:
  2281                           	opt stack 0
  2282  000001                     USBCtrlTrfRxService@i:
  2283                           	opt stack 0
  2284  000001                     __i2c_send@dat:
  2285                           	opt stack 0
  2286  000001                     i2c_set_frequency@frequency:
  2287                           	opt stack 0
  2288  000001                     display_get_character@position:
  2289                           	opt stack 0
  2290  000001                     __display_search@cntr:
  2291                           	opt stack 0
  2292  000001                     __display_rebooting@cntr:
  2293                           	opt stack 0
  2294  000001                     hexCharToUint8@c:
  2295                           	opt stack 0
  2296  000001                     bootloader_get_rec_data@index:
  2297                           	opt stack 0
  2298  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2299                           	opt stack 0
  2300  000001                     spi_set_configuration@configuration:
  2301                           	opt stack 0
  2302  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2303                           	opt stack 0
  2304  000001                     SYSTEM_Initialize@pll_startup_counter:
  2305                           	opt stack 0
  2306  000001                     ExternalFlash_MediaInitialize@config:
  2307                           	opt stack 0
  2308  000001                     ExternalFlash_SectorSizeRead@config:
  2309                           	opt stack 0
  2310  000001                     ExternalFlash_CapacityRead@config:
  2311                           	opt stack 0
  2312  000001                     ExternalFlash_MediaDetect@config:
  2313                           	opt stack 0
  2314  000001                     ExternalFlash_WriteProtectStateGet@config:
  2315                           	opt stack 0
  2316  000001                     __data_sector_from_cluster@fat_cluster:
  2317                           	opt stack 0
  2318  000001                     __fat_sector_from_cluster@cluster:
  2319                           	opt stack 0
  2320  000001                     __fat_offset_from_cluster@cluster:
  2321                           	opt stack 0
  2322  000001                     __cluster_from_sector_and_offset@sector:
  2323                           	opt stack 0
  2324  000001                     __get_available_offset_from_buffer@minimum_offset:
  2325                           	opt stack 0
  2326  000001                     __read_value_from_offset@offset:
  2327                           	opt stack 0
  2328  000001                     __write_value_to_offset@offset:
  2329                           	opt stack 0
  2330  000001                     __get_mbr@idx:
  2331                           	opt stack 0
  2332  000001                     __get_fbr@idx:
  2333                           	opt stack 0
  2334  000001                     __get_fat@idx:
  2335                           	opt stack 0
  2336  000001                     __get_root@idx:
  2337                           	opt stack 0
  2338  000001                     __get_data@idx:
  2339                           	opt stack 0
  2340  000001                     internalFlash_addressFromPage@page:
  2341                           	opt stack 0
  2342  000001                     __fill_buffer_get_configuration@outBuffer:
  2343                           	opt stack 0
  2344  000001                     spi_tx@data:
  2345                           	opt stack 0
  2346  000001                     spi_tx_tx@command:
  2347                           	opt stack 0
  2348  000001                     spi_tx_rx@command:
  2349                           	opt stack 0
  2350  000001                     ___lwdiv@dividend:
  2351                           	opt stack 0
  2352  000001                     ___lwmod@dividend:
  2353                           	opt stack 0
  2354  000001                     memcpy@d1:
  2355                           	opt stack 0
  2356  000001                     memset@p1:
  2357                           	opt stack 0
  2358  000001                     strncmp@s1:
  2359                           	opt stack 0
  2360  000001                     __spi_init@details:
  2361                           	opt stack 0
  2362  000001                     __bootloader_check_address@address:
  2363                           	opt stack 0
  2364  000001                     internalFlash_pageFromAddress@address:
  2365                           	opt stack 0
  2366  000001                     ___lldiv@dividend:
  2367                           	opt stack 0
  2368  000001                     ___llmod@dividend:
  2369                           	opt stack 0
  2370                           
  2371                           ; 4 bytes @ 0x0
  2372  000001                     	ds	1
  2373  000002                     ??_USBConfigureEndpoint:
  2374  000002                     ??_USBStallEndpoint:
  2375  000002                     ??_display_get_character:
  2376  000002                     USBCtrlTrfRxService@byteToRead:
  2377                           	opt stack 0
  2378  000002                     USBCtrlTrfInHandler@lastDTS:
  2379                           	opt stack 0
  2380  000002                     system_delay_ms@ms:
  2381                           	opt stack 0
  2382  000002                     hexCharToUint8@ascii:
  2383                           	opt stack 0
  2384  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2385                           	opt stack 0
  2386  000002                     USBTransferOnePacket@data:
  2387                           	opt stack 0
  2388  000002                     USBStdGetStatusHandler@p:
  2389                           	opt stack 0
  2390                           
  2391                           ; 2 bytes @ 0x1
  2392  000002                     	ds	1
  2393  000003                     ??_MSDComputeDeviceInAndResidue:
  2394  000003                     ??__get_mbr:
  2395  000003                     ??__get_fbr:
  2396  000003                     ??__get_fat:
  2397  000003                     ??__get_root:
  2398  000003                     ?_hexCharsToUint16:
  2399                           	opt stack 0
  2400  000003                     system_delay_ms@cntr:
  2401                           	opt stack 0
  2402  000003                     __display_clear@row:
  2403                           	opt stack 0
  2404  000003                     __sector_from_file_number@file_number:
  2405                           	opt stack 0
  2406  000003                     __offset_from_file_number@file_number:
  2407                           	opt stack 0
  2408  000003                     hexCharsToUint8@c2:
  2409                           	opt stack 0
  2410  000003                     hexCharsToUint16@c2:
  2411                           	opt stack 0
  2412  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2413                           	opt stack 0
  2414  000003                     __cluster_from_sector_and_offset@offset:
  2415                           	opt stack 0
  2416  000003                     __get_available_offset_from_buffer@buffer:
  2417                           	opt stack 0
  2418  000003                     __read_value_from_offset@buffer:
  2419                           	opt stack 0
  2420  000003                     __write_value_to_offset@buffer:
  2421                           	opt stack 0
  2422  000003                     internalFlash_erasePage@page:
  2423                           	opt stack 0
  2424  000003                     internalFlash_writePage@page:
  2425                           	opt stack 0
  2426  000003                     spi_tx@length:
  2427                           	opt stack 0
  2428  000003                     spi_tx_tx@command_length:
  2429                           	opt stack 0
  2430  000003                     spi_tx_rx@command_length:
  2431                           	opt stack 0
  2432  000003                     ___lwdiv@divisor:
  2433                           	opt stack 0
  2434  000003                     ___lwmod@divisor:
  2435                           	opt stack 0
  2436  000003                     memset@c:
  2437                           	opt stack 0
  2438  000003                     strncmp@s2:
  2439                           	opt stack 0
  2440  000003                     memcpy@s1:
  2441                           	opt stack 0
  2442                           
  2443                           ; 3 bytes @ 0x2
  2444  000003                     	ds	1
  2445  000004                     ??_hexCharsToUint8:
  2446  000004                     USBTransferOnePacket@len:
  2447                           	opt stack 0
  2448  000004                     display_get_character@line:
  2449                           	opt stack 0
  2450  000004                     __display_clear@col:
  2451                           	opt stack 0
  2452  000004                     hexCharsToUint16@c3:
  2453                           	opt stack 0
  2454  000004                     spi_init@configuration:
  2455                           	opt stack 0
  2456  000004                     __sector_from_file_number@sector:
  2457                           	opt stack 0
  2458  000004                     __offset_from_file_number@offset:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x3
  2462  000004                     	ds	1
  2463  000005                     ??_USBTransferOnePacket:
  2464  000005                     ??_spi_tx:
  2465  000005                     ??_internalFlash_pageFromAddress:
  2466  000005                     ??__get_available_offset_from_buffer:
  2467  000005                     ??__read_value_from_offset:
  2468  000005                     SYSTEM_Initialize@state:
  2469                           	opt stack 0
  2470  000005                     hexCharsToUint8@c1:
  2471                           	opt stack 0
  2472  000005                     hexCharsToUint16@c4:
  2473                           	opt stack 0
  2474  000005                     __bootloader_check_address@dataLength:
  2475                           	opt stack 0
  2476  000005                     ___lwmod@counter:
  2477                           	opt stack 0
  2478  000005                     __write_value_to_offset@value:
  2479                           	opt stack 0
  2480  000005                     __fill_buffer_get_display@outBuffer:
  2481                           	opt stack 0
  2482  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2483                           	opt stack 0
  2484  000005                     spi_tx_tx@data:
  2485                           	opt stack 0
  2486  000005                     spi_tx_rx@data:
  2487                           	opt stack 0
  2488  000005                     ___lwdiv@quotient:
  2489                           	opt stack 0
  2490  000005                     memset@n:
  2491                           	opt stack 0
  2492  000005                     strncmp@len:
  2493                           	opt stack 0
  2494  000005                     internalFlash_erasePage@address:
  2495                           	opt stack 0
  2496  000005                     internalFlash_writePage@address:
  2497                           	opt stack 0
  2498  000005                     internalFlash_addressFromPage@address:
  2499                           	opt stack 0
  2500  000005                     ___lldiv@divisor:
  2501                           	opt stack 0
  2502  000005                     ___llmod@divisor:
  2503                           	opt stack 0
  2504                           
  2505                           ; 4 bytes @ 0x4
  2506  000005                     	ds	1
  2507  000006                     ??_hexCharsToUint16:
  2508  000006                     ??__bootloader_check_address:
  2509  000006                     USBStallEndpoint@ep:
  2510                           	opt stack 0
  2511  000006                     USBConfigureEndpoint@EPNum:
  2512                           	opt stack 0
  2513  000006                     hexCharsToUint8@retVal:
  2514                           	opt stack 0
  2515  000006                     __i2c_write@data:
  2516                           	opt stack 0
  2517  000006                     __i2c_read@data:
  2518                           	opt stack 0
  2519  000006                     i2c_display_write_fixed@data:
  2520                           	opt stack 0
  2521  000006                     memcpy@n:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x5
  2525  000006                     	ds	1
  2526  000007                     ??_strncmp:
  2527  000007                     ??__fill_buffer_get_bootloader_details:
  2528  000007                     ??__write_value_to_offset:
  2529  000007                     __fill_buffer_get_display@secondHalf:
  2530                           	opt stack 0
  2531  000007                     ___lwdiv@counter:
  2532                           	opt stack 0
  2533  000007                     USBStallEndpoint@p:
  2534                           	opt stack 0
  2535  000007                     USBConfigureEndpoint@handle:
  2536                           	opt stack 0
  2537  000007                     __get_available_offset_from_buffer@offset:
  2538                           	opt stack 0
  2539  000007                     spi_tx_tx@data_length:
  2540                           	opt stack 0
  2541  000007                     spi_tx_rx@data_length:
  2542                           	opt stack 0
  2543  000007                     memset@p:
  2544                           	opt stack 0
  2545                           
  2546                           ; 2 bytes @ 0x6
  2547  000007                     	ds	1
  2548  000008                     ??__fill_buffer_get_display:
  2549  000008                     __i2c_write@length:
  2550                           	opt stack 0
  2551  000008                     __i2c_read@length:
  2552                           	opt stack 0
  2553  000008                     i2c_display_write_fixed@length:
  2554                           	opt stack 0
  2555  000008                     __read_value_from_offset@value:
  2556                           	opt stack 0
  2557  000008                     utoa@buf:
  2558                           	opt stack 0
  2559  000008                     memcpy@s:
  2560                           	opt stack 0
  2561                           
  2562                           ; 3 bytes @ 0x7
  2563  000008                     	ds	1
  2564  000009                     ??_spi_tx_rx:
  2565  000009                     ??_spi_tx_tx:
  2566  000009                     ??__i2c_read:
  2567  000009                     ?_internalFlash_addressWithinPage:
  2568                           	opt stack 0
  2569  000009                     USBDeviceInit@i:
  2570                           	opt stack 0
  2571  000009                     USBEnableEndpoint@options:
  2572                           	opt stack 0
  2573  000009                     USBTransferOnePacket@ep:
  2574                           	opt stack 0
  2575  000009                     MSDErrorHandler@ErrorCase:
  2576                           	opt stack 0
  2577  000009                     __i2c_write@slave_address:
  2578                           	opt stack 0
  2579  000009                     i2c_display_write_fixed@pos:
  2580                           	opt stack 0
  2581  000009                     __flash_wakeup@command:
  2582                           	opt stack 0
  2583  000009                     hexCharsToUint16@c1:
  2584                           	opt stack 0
  2585  000009                     ___llmod@counter:
  2586                           	opt stack 0
  2587  000009                     internalFlash_writePage@cntr:
  2588                           	opt stack 0
  2589  000009                     internalFlash_addressWithinPage@address:
  2590                           	opt stack 0
  2591  000009                     ___lldiv@quotient:
  2592                           	opt stack 0
  2593                           
  2594                           ; 4 bytes @ 0x8
  2595  000009                     	ds	1
  2596  00000A                     MSDErrorHandler@OldMSD_State:
  2597                           	opt stack 0
  2598  00000A                     __i2c_write@cntr:
  2599                           	opt stack 0
  2600  00000A                     __bootloader_check_address@worst_case:
  2601                           	opt stack 0
  2602  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2603                           	opt stack 0
  2604  00000A                     USBEnableEndpoint@p:
  2605                           	opt stack 0
  2606  00000A                     USBTransferOnePacket@handle:
  2607                           	opt stack 0
  2608  00000A                     hexCharsToUint16@retVal:
  2609                           	opt stack 0
  2610  00000A                     utoa@val:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0x9
  2614  00000A                     	ds	1
  2615  00000B                     __ic2_display_set_address@address:
  2616                           	opt stack 0
  2617  00000B                     i2c_digipot_backlight@level:
  2618                           	opt stack 0
  2619  00000B                     __bootloader_check_address@byte_status:
  2620                           	opt stack 0
  2621  00000B                     internalFlash_writePage@block_cntr:
  2622                           	opt stack 0
  2623  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2624                           	opt stack 0
  2625  00000B                     i2c_digipot_reset_on@data_array:
  2626                           	opt stack 0
  2627  00000B                     i2c_digipot_reset_off@data_array:
  2628                           	opt stack 0
  2629  00000B                     i2c_eeprom_writeByte@address:
  2630                           	opt stack 0
  2631  00000B                     memcpy@d:
  2632                           	opt stack 0
  2633  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2634                           	opt stack 0
  2635  00000B                     i2c_display_send_init_sequence@init_sequence:
  2636                           	opt stack 0
  2637                           
  2638                           ; 9 bytes @ 0xA
  2639  00000B                     	ds	1
  2640  00000C                     ??_USBMSDInit:
  2641  00000C                     ?_parseHexFileEntry:
  2642                           	opt stack 0
  2643  00000C                     USBEnableEndpoint@ep:
  2644                           	opt stack 0
  2645  00000C                     __bootloader_check_address@cntr:
  2646                           	opt stack 0
  2647  00000C                     internalFlash_writePage@byte_cntr:
  2648                           	opt stack 0
  2649  00000C                     _USBCheckMSDRequest$2319:
  2650                           	opt stack 0
  2651  00000C                     MSDTransferTerminated@handle:
  2652                           	opt stack 0
  2653  00000C                     __ic2_display_set_address@data_array:
  2654                           	opt stack 0
  2655  00000C                     i2c_digipot_backlight@data_array:
  2656                           	opt stack 0
  2657  00000C                     parseHexFileEntry@data:
  2658                           	opt stack 0
  2659  00000C                     utoa@base:
  2660                           	opt stack 0
  2661  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2662                           	opt stack 0
  2663                           
  2664                           ; 4 bytes @ 0xB
  2665  00000C                     	ds	1
  2666  00000D                     ?__flash_get_status:
  2667                           	opt stack 0
  2668  00000D                     i2c_eeprom_writeByte@data:
  2669                           	opt stack 0
  2670  00000D                     __fill_buffer_get_display@cntr:
  2671                           	opt stack 0
  2672  00000D                     ___lldiv@counter:
  2673                           	opt stack 0
  2674  00000D                     memcpy@tmp:
  2675                           	opt stack 0
  2676  00000D                     internalFlash_addressWithinPage@page:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0xC
  2680  00000D                     	ds	1
  2681  00000E                     ??_i2c_eeprom_writeByte:
  2682  00000E                     i2c_display_cursor@position:
  2683                           	opt stack 0
  2684  00000E                     __fill_buffer_get_display@line:
  2685                           	opt stack 0
  2686  00000E                     _USBCheckMSDRequest$2320:
  2687                           	opt stack 0
  2688  00000E                     _MSDTransferTerminated$2407:
  2689                           	opt stack 0
  2690  00000E                     utoa@v:
  2691                           	opt stack 0
  2692  00000E                     parseHexFileEntry@offset:
  2693                           	opt stack 0
  2694  00000E                     internalFlash_read@address:
  2695                           	opt stack 0
  2696                           
  2697                           ; 4 bytes @ 0xD
  2698  00000E                     	ds	1
  2699  00000F                     ??_internalFlash_addressWithinPage:
  2700  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2701                           	opt stack 0
  2702  00000F                     i2c_display_cursor@line:
  2703                           	opt stack 0
  2704  00000F                     __flash_get_status@command:
  2705                           	opt stack 0
  2706  00000F                     __fill_buffer_get_display@start_line:
  2707                           	opt stack 0
  2708                           
  2709                           ; 1 bytes @ 0xE
  2710  00000F                     	ds	1
  2711  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2712                           	opt stack 0
  2713  000010                     __i2c_read@slave_address:
  2714                           	opt stack 0
  2715  000010                     i2c_display_cursor@address:
  2716                           	opt stack 0
  2717  000010                     __fill_buffer_get_display@position:
  2718                           	opt stack 0
  2719  000010                     utoa@c:
  2720                           	opt stack 0
  2721  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2722                           	opt stack 0
  2723  000010                     __flash_get_status@status:
  2724                           	opt stack 0
  2725  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0xF
  2729  000010                     	ds	1
  2730  000011                     MSDCheckForErrorCases@DeviceNoData:
  2731                           	opt stack 0
  2732  000011                     __i2c_read@cntr:
  2733                           	opt stack 0
  2734  000011                     i2c_eeprom_writeByte@dat:
  2735                           	opt stack 0
  2736  000011                     itoa@buf:
  2737                           	opt stack 0
  2738                           
  2739                           ; 2 bytes @ 0x10
  2740  000011                     	ds	1
  2741  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2742                           	opt stack 0
  2743  000012                     i2c_eeprom_readByte@address:
  2744                           	opt stack 0
  2745  000012                     __flash_is_busy@status:
  2746                           	opt stack 0
  2747  000012                     parseHexFileEntry@hexEntry:
  2748                           	opt stack 0
  2749  000012                     internalFlash_read@data_length:
  2750                           	opt stack 0
  2751                           
  2752                           ; 2 bytes @ 0x11
  2753  000012                     	ds	1
  2754  000013                     i2c_eeprom_writeByte@slave_address:
  2755                           	opt stack 0
  2756  000013                     itoa@val:
  2757                           	opt stack 0
  2758  000013                     internalFlash_addressWithinPage@page_start_address:
  2759                           	opt stack 0
  2760                           
  2761                           ; 4 bytes @ 0x12
  2762  000013                     	ds	1
  2763  000014                     ??_i2c_eeprom_readByte:
  2764  000014                     ??_parseHexFileEntry:
  2765  000014                     flash_is_busy@result:
  2766                           	opt stack 0
  2767  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2768                           	opt stack 0
  2769  000014                     __flash_copy_page_to_buffer@page:
  2770                           	opt stack 0
  2771  000014                     __flash_compare_page_to_buffer@page:
  2772                           	opt stack 0
  2773  000014                     __flash_write_to_buffer@start:
  2774                           	opt stack 0
  2775  000014                     __flash_write_page_from_buffer@page:
  2776                           	opt stack 0
  2777  000014                     __flash_partial_read@page:
  2778                           	opt stack 0
  2779  000014                     internalFlash_read@buffer:
  2780                           	opt stack 0
  2781  000014                     __flash_set_page_size@command:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x13
  2785  000014                     	ds	1
  2786  000015                     __fill_buffer_get_status@outBuffer:
  2787                           	opt stack 0
  2788  000015                     itoa@base:
  2789                           	opt stack 0
  2790                           
  2791                           ; 2 bytes @ 0x14
  2792  000015                     	ds	1
  2793  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2794  000016                     __flash_copy_page_to_buffer@buffer:
  2795                           	opt stack 0
  2796  000016                     __flash_compare_page_to_buffer@buffer:
  2797                           	opt stack 0
  2798  000016                     __flash_write_page_from_buffer@buffer:
  2799                           	opt stack 0
  2800  000016                     __flash_write_to_buffer@data:
  2801                           	opt stack 0
  2802  000016                     __flash_partial_read@start:
  2803                           	opt stack 0
  2804  000016                     internalFlash_readPage@page:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x15
  2808  000016                     	ds	1
  2809  000017                     ??__flash_copy_page_to_buffer:
  2810  000017                     ??__flash_compare_page_to_buffer:
  2811  000017                     ??__flash_write_page_from_buffer:
  2812  000017                     i2c_eeprom_readByte@slave_address:
  2813                           	opt stack 0
  2814  000017                     itoa@cp:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x16
  2818  000017                     	ds	1
  2819  000018                     ??_USBStdFeatureReqHandler:
  2820  000018                     USBStdSetCfgHandler@i:
  2821                           	opt stack 0
  2822  000018                     i2c_eeprom_readByte@addr:
  2823                           	opt stack 0
  2824  000018                     __flash_set_page_size@size:
  2825                           	opt stack 0
  2826  000018                     __flash_write_to_buffer@data_length:
  2827                           	opt stack 0
  2828  000018                     __flash_partial_read@length:
  2829                           	opt stack 0
  2830  000018                     internalFlash_readPage@address:
  2831                           	opt stack 0
  2832                           
  2833                           ; 4 bytes @ 0x17
  2834  000018                     	ds	1
  2835  000019                     USBStdFeatureReqHandler@pUEP:
  2836                           	opt stack 0
  2837  000019                     __display_itoa_u16@value:
  2838                           	opt stack 0
  2839                           
  2840                           ; 4 bytes @ 0x18
  2841  000019                     	ds	1
  2842  00001A                     __flash_write_to_buffer@buffer:
  2843                           	opt stack 0
  2844  00001A                     __flash_compare_page_to_buffer@status:
  2845                           	opt stack 0
  2846  00001A                     __flash_partial_read@data:
  2847                           	opt stack 0
  2848  00001A                     __flash_copy_page_to_buffer@command:
  2849                           	opt stack 0
  2850  00001A                     __flash_write_page_from_buffer@command:
  2851                           	opt stack 0
  2852                           
  2853                           ; 4 bytes @ 0x19
  2854  00001A                     	ds	1
  2855  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2856                           	opt stack 0
  2857  00001B                     __flash_write_to_buffer@command:
  2858                           	opt stack 0
  2859                           
  2860                           ; 4 bytes @ 0x1A
  2861  00001B                     	ds	1
  2862  00001C                     ??__flash_partial_read:
  2863  00001C                     parseHexFileEntry@i:
  2864                           	opt stack 0
  2865  00001C                     USBStdFeatureReqHandler@p:
  2866                           	opt stack 0
  2867  00001C                     __flash_compare_page_to_buffer@command:
  2868                           	opt stack 0
  2869                           
  2870                           ; 4 bytes @ 0x1B
  2871  00001C                     	ds	1
  2872  00001D                     __display_itoa_u16@text:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x1C
  2876  00001D                     	ds	1
  2877  00001E                     ??_USBCtrlEPService:
  2878  00001E                     
  2879                           ; 1 bytes @ 0x1D
  2880  00001E                     	ds	1
  2881  00001F                     ??__display_verify:
  2882  00001F                     ??__display_checked:
  2883  00001F                     __display_programming@cntr:
  2884                           	opt stack 0
  2885  00001F                     __display_done@cntr:
  2886                           	opt stack 0
  2887  00001F                     __display_itoa_u32@value:
  2888                           	opt stack 0
  2889                           
  2890                           ; 4 bytes @ 0x1E
  2891  00001F                     	ds	1
  2892  000020                     USBDeviceTasks@i:
  2893                           	opt stack 0
  2894  000020                     flash_sector_write@page:
  2895                           	opt stack 0
  2896  000020                     flash_partial_write@page:
  2897                           	opt stack 0
  2898  000020                     __flash_partial_read@command:
  2899                           	opt stack 0
  2900                           
  2901                           ; 4 bytes @ 0x1F
  2902  000020                     	ds	1
  2903  000021                     __display_verify@cntr:
  2904                           	opt stack 0
  2905  000021                     __display_checked@start:
  2906                           	opt stack 0
  2907                           
  2908                           ; 1 bytes @ 0x20
  2909  000021                     	ds	1
  2910  000022                     __display_checked@cntr:
  2911                           	opt stack 0
  2912  000022                     flash_sector_write@data:
  2913                           	opt stack 0
  2914  000022                     flash_partial_write@start:
  2915                           	opt stack 0
  2916                           
  2917                           ; 2 bytes @ 0x21
  2918  000022                     	ds	1
  2919  000023                     __display_itoa_u32@text:
  2920                           	opt stack 0
  2921                           
  2922                           ; 2 bytes @ 0x22
  2923  000023                     	ds	1
  2924  000024                     flash_sector_write@match:
  2925                           	opt stack 0
  2926  000024                     flash_partial_write@length:
  2927                           	opt stack 0
  2928  000024                     __flash_partial_read@address:
  2929                           	opt stack 0
  2930                           
  2931                           ; 4 bytes @ 0x23
  2932  000024                     	ds	1
  2933  000025                     ??__display_found:
  2934  000025                     __display_start@cntr:
  2935                           	opt stack 0
  2936  000025                     __display_failed@cntr:
  2937                           	opt stack 0
  2938  000025                     ExternalFlash_SectorWrite@config:
  2939                           	opt stack 0
  2940  000025                     fat_format@cntr:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x24
  2944  000025                     	ds	1
  2945  000026                     flash_partial_write@data:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x25
  2949  000026                     	ds	1
  2950  000027                     __display_found@start:
  2951                           	opt stack 0
  2952  000027                     __parse_format_drive@data:
  2953                           	opt stack 0
  2954  000027                     ExternalFlash_SectorWrite@sector_addr:
  2955                           	opt stack 0
  2956                           
  2957                           ; 4 bytes @ 0x26
  2958  000027                     	ds	1
  2959  000028                     __display_found@cntr:
  2960                           	opt stack 0
  2961  000028                     flash_partial_write@match:
  2962                           	opt stack 0
  2963  000028                     flash_sector_read@page:
  2964                           	opt stack 0
  2965  000028                     flash_partial_read@page:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x27
  2969  000028                     	ds	1
  2970  000029                     ??_display_prepare:
  2971  000029                     __write_root@data:
  2972                           	opt stack 0
  2973  000029                     __delete_root@sector:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x28
  2977  000029                     	ds	1
  2978  00002A                     flash_sector_read@data:
  2979                           	opt stack 0
  2980  00002A                     flash_partial_read@start:
  2981                           	opt stack 0
  2982                           
  2983                           ; 2 bytes @ 0x29
  2984  00002A                     	ds	1
  2985  00002B                     display_prepare@mode:
  2986                           	opt stack 0
  2987  00002B                     ExternalFlash_SectorWrite@buffer:
  2988                           	opt stack 0
  2989  00002B                     __write_root@sector:
  2990                           	opt stack 0
  2991  00002B                     __delete_root@offset:
  2992                           	opt stack 0
  2993                           
  2994                           ; 2 bytes @ 0x2A
  2995  00002B                     	ds	1
  2996  00002C                     ??_fat_get_format_status:
  2997  00002C                     ?__get_available_cluster:
  2998                           	opt stack 0
  2999  00002C                     __parse_command_short@cmd:
  3000                           	opt stack 0
  3001  00002C                     flash_partial_read@length:
  3002                           	opt stack 0
  3003  00002C                     ExternalFlash_SectorRead@config:
  3004                           	opt stack 0
  3005  00002C                     __get_available_cluster@first_sector:
  3006                           	opt stack 0
  3007  00002C                     fat_find_file@name:
  3008                           	opt stack 0
  3009                           
  3010                           ; 2 bytes @ 0x2B
  3011  00002C                     	ds	1
  3012  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3013                           	opt stack 0
  3014  00002D                     __delete_root@deleted_value:
  3015                           	opt stack 0
  3016  00002D                     __write_root@offset:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0x2C
  3020  00002D                     	ds	1
  3021  00002E                     __delete_root@file_number:
  3022                           	opt stack 0
  3023  00002E                     flash_partial_read@data:
  3024                           	opt stack 0
  3025  00002E                     ExternalFlash_SectorWrite@page:
  3026                           	opt stack 0
  3027  00002E                     __get_available_cluster@skip_sector:
  3028                           	opt stack 0
  3029  00002E                     fat_find_file@extension:
  3030                           	opt stack 0
  3031  00002E                     fat_get_format_status@cntr:
  3032                           	opt stack 0
  3033  00002E                     ExternalFlash_SectorRead@sector_addr:
  3034                           	opt stack 0
  3035                           
  3036                           ; 4 bytes @ 0x2D
  3037  00002E                     	ds	1
  3038  00002F                     __write_root@file_number:
  3039                           	opt stack 0
  3040                           
  3041                           ; 1 bytes @ 0x2E
  3042  00002F                     	ds	1
  3043  000030                     ??_MSDWriteHandler:
  3044  000030                     ??_fat_find_file:
  3045  000030                     ?__read_fat:
  3046                           	opt stack 0
  3047  000030                     ?__get_first_cluster:
  3048                           	opt stack 0
  3049  000030                     __get_available_cluster@cluster:
  3050                           	opt stack 0
  3051  000030                     __root_is_available@root_sector:
  3052                           	opt stack 0
  3053  000030                     __read_fat@cluster:
  3054                           	opt stack 0
  3055  000030                     fat_get_file_information@data:
  3056                           	opt stack 0
  3057                           
  3058                           ; 2 bytes @ 0x2F
  3059  000030                     	ds	2
  3060  000032                     fat_find_file@file_number:
  3061                           	opt stack 0
  3062  000032                     ExternalFlash_SectorRead@buffer:
  3063                           	opt stack 0
  3064  000032                     __get_available_cluster@offset:
  3065                           	opt stack 0
  3066  000032                     __root_is_available@offset:
  3067                           	opt stack 0
  3068  000032                     __read_fat@sector:
  3069                           	opt stack 0
  3070  000032                     __get_first_cluster@sector:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x31
  3074  000032                     	ds	1
  3075  000033                     fat_find_file@sector:
  3076                           	opt stack 0
  3077  000033                     fat_get_file_information@root_sector:
  3078                           	opt stack 0
  3079                           
  3080                           ; 2 bytes @ 0x32
  3081  000033                     	ds	1
  3082  000034                     __root_is_available@file_number:
  3083                           	opt stack 0
  3084  000034                     ExternalFlash_SectorRead@page:
  3085                           	opt stack 0
  3086  000034                     __get_available_cluster@sector:
  3087                           	opt stack 0
  3088  000034                     __read_fat@offset:
  3089                           	opt stack 0
  3090  000034                     __get_first_cluster@offset:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x33
  3094  000034                     	ds	1
  3095  000035                     __root_is_available@first_byte:
  3096                           	opt stack 0
  3097  000035                     fat_find_file@offset:
  3098                           	opt stack 0
  3099  000035                     fat_get_file_information@offset:
  3100                           	opt stack 0
  3101                           
  3102                           ; 2 bytes @ 0x34
  3103  000035                     	ds	1
  3104  000036                     ??_MSDReadHandler:
  3105  000036                     ?__make_cluster_chain:
  3106                           	opt stack 0
  3107  000036                     ?_fat_get_file_size:
  3108                           	opt stack 0
  3109  000036                     __get_available_root_entry@file_number:
  3110                           	opt stack 0
  3111  000036                     __make_cluster_chain@first_cluster:
  3112                           	opt stack 0
  3113  000036                     __read_fat@value:
  3114                           	opt stack 0
  3115  000036                     __get_first_cluster@first_cluster:
  3116                           	opt stack 0
  3117                           
  3118                           ; 2 bytes @ 0x35
  3119  000036                     	ds	1
  3120  000037                     fat_get_file_information@file_number:
  3121                           	opt stack 0
  3122  000037                     __fill_buffer_find_file@inBuffer:
  3123                           	opt stack 0
  3124                           
  3125                           ; 2 bytes @ 0x36
  3126  000037                     	ds	1
  3127  000038                     ?__find_nth_cluster:
  3128                           	opt stack 0
  3129  000038                     __get_first_cluster@file_number:
  3130                           	opt stack 0
  3131  000038                     __find_nth_cluster@cluster:
  3132                           	opt stack 0
  3133  000038                     __make_cluster_chain@number_of_clusters:
  3134                           	opt stack 0
  3135  000038                     fat_rename_file@name:
  3136                           	opt stack 0
  3137  000038                     __fill_buffer_get_file_details@inBuffer:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x37
  3141  000038                     	ds	1
  3142  000039                     __fill_buffer_find_file@outBuffer:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x38
  3146  000039                     	ds	1
  3147  00003A                     ??_MSDProcessCommandMediaPresent:
  3148  00003A                     __find_nth_cluster@n:
  3149                           	opt stack 0
  3150  00003A                     __make_cluster_chain@minimum_sector:
  3151                           	opt stack 0
  3152  00003A                     fat_get_file_size@sector:
  3153                           	opt stack 0
  3154  00003A                     fat_rename_file@extension:
  3155                           	opt stack 0
  3156  00003A                     __fill_buffer_get_file_details@outBuffer:
  3157                           	opt stack 0
  3158                           
  3159                           ; 2 bytes @ 0x39
  3160  00003A                     	ds	1
  3161  00003B                     ??__fill_buffer_find_file:
  3162                           
  3163                           ; 1 bytes @ 0x3A
  3164  00003B                     	ds	1
  3165  00003C                     ??__fill_buffer_get_file_details:
  3166  00003C                     fat_rename_file@return_code:
  3167                           	opt stack 0
  3168  00003C                     _MSDProcessCommandMediaPresent$2390:
  3169                           	opt stack 0
  3170  00003C                     __find_nth_cluster@offset:
  3171                           	opt stack 0
  3172  00003C                     __make_cluster_chain@sector_in_buffer:
  3173                           	opt stack 0
  3174  00003C                     fat_get_file_size@offset:
  3175                           	opt stack 0
  3176                           
  3177                           ; 2 bytes @ 0x3B
  3178  00003C                     	ds	1
  3179  00003D                     fat_rename_file@file_number:
  3180                           	opt stack 0
  3181  00003D                     __fill_buffer_get_file_details@file_number:
  3182                           	opt stack 0
  3183                           
  3184                           ; 1 bytes @ 0x3C
  3185  00003D                     	ds	1
  3186  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3187                           	opt stack 0
  3188  00003E                     __find_nth_cluster@sector_in_buffer:
  3189                           	opt stack 0
  3190  00003E                     __make_cluster_chain@different_sector_cluster:
  3191                           	opt stack 0
  3192  00003E                     fat_get_file_size@file_size:
  3193                           	opt stack 0
  3194  00003E                     fat_rename_file@root:
  3195                           	opt stack 0
  3196                           
  3197                           ; 32 bytes @ 0x3D
  3198  00003E                     	ds	1
  3199  00003F                     __fill_buffer_find_file@cntr:
  3200                           	opt stack 0
  3201  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3202                           	opt stack 0
  3203                           
  3204                           ; 4 bytes @ 0x3E
  3205  00003F                     	ds	1
  3206  000040                     __make_cluster_chain@data_changed:
  3207                           	opt stack 0
  3208  000040                     __find_nth_cluster@sector:
  3209                           	opt stack 0
  3210                           
  3211                           ; 2 bytes @ 0x3F
  3212  000040                     	ds	1
  3213  000041                     __make_cluster_chain@remaining_clusters:
  3214                           	opt stack 0
  3215                           
  3216                           ; 2 bytes @ 0x40
  3217  000041                     	ds	1
  3218  000042                     fat_get_file_size@file_number:
  3219                           	opt stack 0
  3220  000042                     fat_read_from_file_fast@start_byte:
  3221                           	opt stack 0
  3222  000042                     fat_modify_file@start_byte:
  3223                           	opt stack 0
  3224                           
  3225                           ; 4 bytes @ 0x41
  3226  000042                     	ds	1
  3227  000043                     __make_cluster_chain@sector:
  3228                           	opt stack 0
  3229  000043                     MSDProcessCommandMediaPresent@capacity:
  3230                           	opt stack 0
  3231                           
  3232                           ; 4 bytes @ 0x42
  3233  000043                     	ds	2
  3234  000045                     __make_cluster_chain@offset:
  3235                           	opt stack 0
  3236                           
  3237                           ; 2 bytes @ 0x44
  3238  000045                     	ds	1
  3239  000046                     fat_modify_file@length:
  3240                           	opt stack 0
  3241  000046                     fat_read_from_file_fast@length:
  3242                           	opt stack 0
  3243                           
  3244                           ; 4 bytes @ 0x45
  3245  000046                     	ds	1
  3246  000047                     MSDProcessCommandMediaPresent@i:
  3247                           	opt stack 0
  3248  000047                     __make_cluster_chain@next_cluster:
  3249                           	opt stack 0
  3250                           
  3251                           ; 2 bytes @ 0x46
  3252  000047                     	ds	1
  3253  000048                     ??_MSDProcessCommand:
  3254  000048                     fat_modify_file@data:
  3255                           	opt stack 0
  3256                           
  3257                           ; 2 bytes @ 0x47
  3258  000048                     	ds	1
  3259  000049                     fat_create_file@name:
  3260                           	opt stack 0
  3261  000049                     fat_delete_file@first_cluster:
  3262                           	opt stack 0
  3263  000049                     fat_resize_file@new_file_size:
  3264                           	opt stack 0
  3265                           
  3266                           ; 4 bytes @ 0x48
  3267  000049                     	ds	1
  3268  00004A                     ??_fat_modify_file:
  3269  00004A                     fat_read_from_file_fast@data:
  3270                           	opt stack 0
  3271                           
  3272                           ; 2 bytes @ 0x49
  3273  00004A                     	ds	1
  3274  00004B                     fat_delete_file@file_number:
  3275                           	opt stack 0
  3276  00004B                     fat_create_file@extension:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x4A
  3280  00004B                     	ds	1
  3281  00004C                     fat_read_from_file_fast@cluster:
  3282                           	opt stack 0
  3283  00004C                     __parse_file_delete@data:
  3284                           	opt stack 0
  3285                           
  3286                           ; 2 bytes @ 0x4B
  3287  00004C                     	ds	1
  3288  00004D                     ??_fat_resize_file:
  3289  00004D                     ??_MSDTasks:
  3290  00004D                     fat_create_file@size:
  3291                           	opt stack 0
  3292                           
  3293                           ; 4 bytes @ 0x4C
  3294  00004D                     	ds	1
  3295  00004E                     _MSDTasks$2372:
  3296                           	opt stack 0
  3297  00004E                     fat_read_from_file_fast@cluster_number:
  3298                           	opt stack 0
  3299                           
  3300                           ; 2 bytes @ 0x4D
  3301  00004E                     	ds	2
  3302  000050                     ??_fat_read_from_file_fast:
  3303  000050                     _MSDTasks$2373:
  3304                           	opt stack 0
  3305                           
  3306                           ; 2 bytes @ 0x4F
  3307  000050                     	ds	1
  3308  000051                     ??_fat_create_file:
  3309  000051                     __parse_file_resize@data:
  3310                           	opt stack 0
  3311                           
  3312                           ; 2 bytes @ 0x50
  3313  000051                     	ds	1
  3314  000052                     MSDTasks@i:
  3315                           	opt stack 0
  3316                           
  3317                           ; 1 bytes @ 0x51
  3318  000052                     	ds	1
  3319  000053                     ??__parse_file_resize:
  3320                           
  3321                           ; 1 bytes @ 0x52
  3322  000053                     	ds	1
  3323  000054                     __parse_file_resize@file_size:
  3324                           	opt stack 0
  3325                           
  3326                           ; 4 bytes @ 0x53
  3327  000054                     	ds	1
  3328  000055                     __parse_file_create@data:
  3329                           	opt stack 0
  3330                           
  3331                           ; 2 bytes @ 0x54
  3332  000055                     	ds	1
  3333  000056                     fat_append_to_file@number_of_bytes:
  3334                           	opt stack 0
  3335  000056                     __parse_file_modify@data:
  3336                           	opt stack 0
  3337                           
  3338                           ; 2 bytes @ 0x55
  3339  000056                     	ds	1
  3340  000057                     ??__parse_file_create:
  3341                           
  3342                           ; 1 bytes @ 0x56
  3343  000057                     	ds	1
  3344  000058                     ??__parse_file_modify:
  3345  000058                     fat_append_to_file@data:
  3346                           	opt stack 0
  3347  000058                     __parse_file_create@file_size:
  3348                           	opt stack 0
  3349                           
  3350                           ; 4 bytes @ 0x57
  3351  000058                     	ds	1
  3352  000059                     __parse_file_modify@number_of_bytes:
  3353                           	opt stack 0
  3354                           
  3355                           ; 2 bytes @ 0x58
  3356  000059                     	ds	1
  3357  00005A                     __parse_file_append@data:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x59
  3361  00005A                     	ds	1
  3362  00005B                     __parse_file_modify@start_byte:
  3363                           	opt stack 0
  3364                           
  3365                           ; 4 bytes @ 0x5A
  3366  00005B                     	ds	1
  3367  00005C                     ??__parse_file_append:
  3368  00005C                     ??_fat_read_from_file:
  3369  00005C                     bootloader_run@timeslot:
  3370                           	opt stack 0
  3371                           
  3372                           ; 1 bytes @ 0x5B
  3373  00005C                     	ds	2
  3374  00005E                     fat_rename_file@cntr:
  3375                           	opt stack 0
  3376                           
  3377                           ; 1 bytes @ 0x5D
  3378  00005E                     	ds	1
  3379  00005F                     
  3380                           ; 1 bytes @ 0x5E
  3381  00005F                     	ds	1
  3382  000060                     tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           
  3392                           ; 1 bytes @ 0x5F
  3393 ;;
  3394 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3395 ;;
  3396 ;; *************** function _main *****************
  3397 ;; Defined at:
  3398 ;;		line 54 in file "main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  tx_buffer       2   99[BANK0 ] PTR unsigned char 
  3403 ;;		 -> _spi_external_tx_buffer(64), 
  3404 ;;  rx_buffer       2   97[BANK0 ] PTR unsigned char 
  3405 ;;		 -> _spi_external_rx_buffer(64), 
  3406 ;;  bytes_transm    2   95[BANK0 ] unsigned int 
  3407 ;;  tx_start_add    2   93[BANK0 ] unsigned int 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;Total ram usage:       10 bytes
  3422 ;; Hardware stack levels required when called:   13
  3423 ;; This function calls:
  3424 ;;		_APP_DeviceCustomHIDTasks
  3425 ;;		_APP_DeviceMSDTasks
  3426 ;;		_SYSTEM_Initialize
  3427 ;;		_USBDeviceInit
  3428 ;;		_USBDeviceTasks
  3429 ;;		__normal_mode
  3430 ;;		_api_parse
  3431 ;;		_api_prepare
  3432 ;;		_bootloader_run
  3433 ;;		_display_prepare
  3434 ;;		_display_update
  3435 ;;		_jump_to_main_program
  3436 ;;		_spi_get_external_rx_buffer
  3437 ;;		_spi_get_external_tx_buffer
  3438 ;;		_system_full_init
  3439 ;;		_system_minimal_init
  3440 ;;		_system_minimal_init_undo
  3441 ;;		_timer_pseudo_isr
  3442 ;;		_ui_get_status
  3443 ;;		_ui_run
  3444 ;; This function is called by:
  3445 ;;		Startup code after reset
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text0
  3450  003A4A                     __ptext0:
  3451                           	opt stack 0
  3452  003A4A                     _main:
  3453                           	opt stack 18
  3454                           
  3455                           ;incstack = 0
  3456  003A4A  0004               	clrwdt		;# 
  3457                           
  3458                           ;main.c: 65: rx_buffer = spi_get_external_rx_buffer();
  3459  003A4C  ECED  F044         	call	_spi_get_external_rx_buffer	;wreg free
  3460  003A50  C001  F0C1         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3461  003A54  C002  F0C2         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3462                           
  3463                           ;main.c: 66: tx_buffer = spi_get_external_tx_buffer();
  3464  003A58  ECE8  F044         	call	_spi_get_external_tx_buffer	;wreg free
  3465  003A5C  C001  F0C3         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3466  003A60  C002  F0C4         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3467                           
  3468                           ;main.c: 67: tx_start_addr = (uint16_t) tx_buffer;
  3469  003A64  C0C3  F0BD         	movff	main@tx_buffer,main@tx_start_addr
  3470  003A68  C0C4  F0BE         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3471                           
  3472                           ;main.c: 71: system_minimal_init();
  3473  003A6C  EC6D  F044         	call	_system_minimal_init	;wreg free
  3474                           
  3475                           ;main.c: 74: if(_normal_mode())
  3476  003A70  ECC3  F03B         	call	__normal_mode	;wreg free
  3477  003A74  0900               	iorlw	0
  3478  003A76  B4D8               	btfsc	status,2,c
  3479  003A78  D004               	goto	l893
  3480                           
  3481                           ;main.c: 75: {;main.c: 77: system_minimal_init_undo();
  3482  003A7A  ECBC  F044         	call	_system_minimal_init_undo	;wreg free
  3483                           
  3484                           ;main.c: 78: jump_to_main_program();
  3485  003A7E  EC3A  F045         	call	_jump_to_main_program	;wreg free
  3486  003A82                     l893:
  3487                           
  3488                           ;main.c: 79: };main.c: 83: system_full_init();
  3489  003A82  ECF2  F03B         	call	_system_full_init	;wreg free
  3490                           
  3491                           ;main.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3492  003A86  0E00               	movlw	0
  3493  003A88  EC29  F03E         	call	_SYSTEM_Initialize
  3494                           
  3495                           ;main.c: 88: USBDeviceInit();
  3496  003A8C  EC87  F01E         	call	_USBDeviceInit	;wreg free
  3497  003A90                     l894:
  3498  003A90  0004               	clrwdt		;# 
  3499                           
  3500                           ;main.c: 101: USBDeviceTasks();
  3501  003A92  ECEC  F01A         	call	_USBDeviceTasks	;wreg free
  3502                           
  3503                           ;main.c: 102: APP_DeviceMSDTasks();
  3504  003A96  EC98  F044         	call	_APP_DeviceMSDTasks	;wreg free
  3505                           
  3506                           ;main.c: 103: APP_DeviceCustomHIDTasks();
  3507  003A9A  EC85  F031         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3508                           
  3509                           ;main.c: 107: timer_pseudo_isr();
  3510  003A9E  EC5F  F041         	call	_timer_pseudo_isr	;wreg free
  3511                           
  3512                           ;main.c: 110: if(PORTDbits.RD2)
  3513  003AA2  A483               	btfss	3971,2,c	;volatile
  3514  003AA4  D039               	goto	l896
  3515                           
  3516                           ;main.c: 111: {;main.c: 114: bytes_transmitted = TXADDRH;
  3517  003AA6  CF6A F0BF          	movff	3946,main@bytes_transmitted	;volatile
  3518  003AAA  0100               	movlb	0	; () banked
  3519  003AAC  6BC0               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;main.c: 115: bytes_transmitted <<= 8;
  3523  003AAE  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3524  003AB0  6FC0               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3525  003AB2  6BBF               	clrf	main@bytes_transmitted& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 116: bytes_transmitted |= TXADDRL;
  3529  003AB4  506B               	movf	3947,w,c	;volatile
  3530  003AB6  13BF               	iorwf	main@bytes_transmitted& (0+255),f,b
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;main.c: 117: --bytes_transmitted;
  3534  003AB8  07BF               	decf	main@bytes_transmitted& (0+255),f,b
  3535  003ABA  A0D8               	btfss	status,0,c
  3536  003ABC  07C0               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;main.c: 118: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3540  003ABE  ECE8  F044         	call	_spi_get_external_tx_buffer	;wreg free
  3541  003AC2  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3542  003AC4  0100               	movlb	0	; () banked
  3543  003AC6  5FBF               	subwf	main@bytes_transmitted& (0+255),f,b
  3544  003AC8  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3545  003ACA  5BC0               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;main.c: 121: if(bytes_transmitted>0)
  3549  003ACC  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3550  003ACE  11C0               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3551  003AD0  B4D8               	btfsc	status,2,c
  3552  003AD2  D022               	goto	l896
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;main.c: 122: {;main.c: 124: DMACON1bits.DMAEN = 0;
  3556  003AD4  9088               	bcf	3976,0,c	;volatile
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;main.c: 127: api_prepare(rx_buffer, tx_buffer);
  3560  003AD6  C0C1  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3561  003ADA  C0C2  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3562  003ADE  C0C3  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3563  003AE2  C0C4  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3564  003AE6  EC2F  F01F         	call	_api_prepare	;wreg free
  3565                           
  3566                           ;main.c: 128: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3567  003AEA  C0C1  F09B         	movff	main@rx_buffer,api_parse@inBuffer
  3568  003AEE  C0C2  F09C         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3569  003AF2  C0BF  F09D         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3570  003AF6  EC06  F02D         	call	_api_parse	;wreg free
  3571                           
  3572                           ;main.c: 131: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3573  003AFA  0100               	movlb	0	; () banked
  3574  003AFC  51C4               	movf	(main@tx_buffer+1)& (0+255),w,b
  3575  003AFE  6E6A               	movwf	3946,c	;volatile
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;main.c: 132: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3579  003B00  C0C3  FF6B         	movff	main@tx_buffer,3947	;volatile
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;main.c: 135: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3583  003B04  51C2               	movf	(main@rx_buffer+1)& (0+255),w,b
  3584  003B06  6E68               	movwf	3944,c	;volatile
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;main.c: 136: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3588  003B08  C0C1  FF69         	movff	main@rx_buffer,3945	;volatile
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;main.c: 139: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3592  003B0C  0E00               	movlw	0
  3593  003B0E  6E66               	movwf	3942,c	;volatile
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;main.c: 140: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3597  003B10  0E3F               	movlw	63
  3598  003B12  6E67               	movwf	3943,c	;volatile
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;main.c: 143: PIR3bits.SSP2IF = 0;
  3602  003B14  9EA4               	bcf	4004,7,c	;volatile
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 145: DMACON1bits.DMAEN = 1;
  3606  003B16  8088               	bsf	3976,0,c	;volatile
  3607  003B18                     l896:
  3608                           
  3609                           ;main.c: 146: };main.c: 147: };main.c: 151: if(!os.done)
  3610                           
  3611                           ; BSR set to: 0
  3612                           
  3613                           ; BSR set to: 0
  3614  003B18  0100               	movlb	0	; () banked
  3615  003B1A  51C8               	movf	(_os+3)& (0+255),w,b	;volatile
  3616  003B1C  A4D8               	btfss	status,2,c
  3617  003B1E  D7B8               	goto	l894
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;main.c: 152: {;main.c: 154: ui_run();
  3621  003B20  EC4C  F024         	call	_ui_run	;wreg free
  3622                           
  3623                           ;main.c: 159: switch(os.timeSlot&0b00000111)
  3624  003B24  D025               	goto	l898
  3625  003B26                     
  3626                           ;main.c: 162: bootloader_run(0);
  3627  003B26  0E00               	movlw	0
  3628  003B28  ECCF  F03A         	call	_bootloader_run
  3629                           
  3630                           ;main.c: 163: break;
  3631  003B2C  D043               	goto	l900
  3632  003B2E                     
  3633                           ;main.c: 166: bootloader_run(1);
  3634  003B2E  0E01               	movlw	1
  3635  003B30  ECCF  F03A         	call	_bootloader_run
  3636                           
  3637                           ;main.c: 167: break;
  3638  003B34  D03F               	goto	l900
  3639  003B36                     
  3640                           ;main.c: 170: bootloader_run(2);
  3641  003B36  0E02               	movlw	2
  3642  003B38  ECCF  F03A         	call	_bootloader_run
  3643                           
  3644                           ;main.c: 171: break;
  3645  003B3C  D03B               	goto	l900
  3646  003B3E                     
  3647                           ;main.c: 174: bootloader_run(3);
  3648  003B3E  0E03               	movlw	3
  3649  003B40  ECCF  F03A         	call	_bootloader_run
  3650                           
  3651                           ;main.c: 175: break;
  3652  003B44  D037               	goto	l900
  3653  003B46                     
  3654                           ;main.c: 178: bootloader_run(4);
  3655  003B46  0E04               	movlw	4
  3656  003B48  ECCF  F03A         	call	_bootloader_run
  3657                           
  3658                           ;main.c: 179: break;
  3659  003B4C  D033               	goto	l900
  3660  003B4E                     
  3661                           ;main.c: 182: bootloader_run(5);
  3662  003B4E  0E05               	movlw	5
  3663  003B50  ECCF  F03A         	call	_bootloader_run
  3664                           
  3665                           ;main.c: 183: break;
  3666  003B54  D02F               	goto	l900
  3667  003B56                     
  3668                           ;main.c: 186: display_prepare(os.display_mode);
  3669  003B56  0100               	movlb	0	; () banked
  3670  003B58  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  3671  003B5A  EC9D  F02C         	call	_display_prepare
  3672                           
  3673                           ;main.c: 187: break;
  3674  003B5E  D02A               	goto	l900
  3675  003B60                     
  3676                           ;main.c: 190: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3677  003B60  EC46  F045         	call	_ui_get_status	;wreg free
  3678  003B64  0A05               	xorlw	5
  3679  003B66  A4D8               	btfss	status,2,c
  3680  003B68  D025               	goto	l900
  3681                           
  3682                           ;main.c: 191: {;main.c: 192: display_update();
  3683  003B6A  EC01  F03A         	call	_display_update	;wreg free
  3684                           
  3685                           ;main.c: 195: }
  3686                           
  3687                           ;main.c: 193: };main.c: 194: break;
  3688  003B6E  D022               	goto	l900
  3689  003B70                     l898:
  3690  003B70  0100               	movlb	0	; () banked
  3691  003B72  51C7               	movf	(_os+2)& (0+255),w,b	;volatile
  3692  003B74  0B07               	andlw	7
  3693  003B76  6FBB               	movwf	??_main& (0+255),b
  3694  003B78  6BBC               	clrf	(??_main+1)& (0+255),b
  3695                           
  3696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3697                           ; Switch size 1, requested type "space"
  3698                           ; Number of cases is 1, Range of values is 0 to 0
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; simple_byte            4     3 (average)
  3702                           ;	Chosen strategy is simple_byte
  3703  003B7A  51BC               	movf	(??_main+1)& (0+255),w,b
  3704  003B7C  0A00               	xorlw	0	; case 0
  3705  003B7E  A4D8               	btfss	status,2,c
  3706  003B80  D019               	goto	l900
  3707                           
  3708                           ; BSR set to: 0
  3709                           ; Switch size 1, requested type "space"
  3710                           ; Number of cases is 8, Range of values is 0 to 7
  3711                           ; switch strategies available:
  3712                           ; Name         Instructions Cycles
  3713                           ; simple_byte           25    13 (average)
  3714                           ;	Chosen strategy is simple_byte
  3715  003B82  51BB               	movf	??_main& (0+255),w,b
  3716  003B84  0A00               	xorlw	0	; case 0
  3717  003B86  B4D8               	btfsc	status,2,c
  3718  003B88  D7CE               	goto	l899
  3719  003B8A  0A01               	xorlw	1	; case 1
  3720  003B8C  B4D8               	btfsc	status,2,c
  3721  003B8E  D7CF               	goto	l901
  3722  003B90  0A03               	xorlw	3	; case 2
  3723  003B92  B4D8               	btfsc	status,2,c
  3724  003B94  D7D0               	goto	l902
  3725  003B96  0A01               	xorlw	1	; case 3
  3726  003B98  B4D8               	btfsc	status,2,c
  3727  003B9A  D7D1               	goto	l903
  3728  003B9C  0A07               	xorlw	7	; case 4
  3729  003B9E  B4D8               	btfsc	status,2,c
  3730  003BA0  D7D2               	goto	l904
  3731  003BA2  0A01               	xorlw	1	; case 5
  3732  003BA4  B4D8               	btfsc	status,2,c
  3733  003BA6  D7D3               	goto	l905
  3734  003BA8  0A03               	xorlw	3	; case 6
  3735  003BAA  B4D8               	btfsc	status,2,c
  3736  003BAC  D7D4               	goto	l906
  3737  003BAE  0A01               	xorlw	1	; case 7
  3738  003BB0  B4D8               	btfsc	status,2,c
  3739  003BB2  D7D6               	goto	l907
  3740  003BB4                     l900:
  3741                           
  3742                           ;main.c: 196: os.done = 1;
  3743                           
  3744                           ; BSR set to: 0
  3745  003BB4  0E01               	movlw	1
  3746  003BB6  0100               	movlb	0	; () banked
  3747  003BB8  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  3748                           
  3749                           ; BSR set to: 0
  3750                           
  3751                           ; BSR set to: 0
  3752  003BBA  D76A               	goto	l894
  3753  003BBC                     __end_of_main:
  3754                           	opt stack 0
  3755                           tblptru	equ	0xFF8
  3756                           tblptrh	equ	0xFF7
  3757                           tblptrl	equ	0xFF6
  3758                           tablat	equ	0xFF5
  3759                           postinc0	equ	0xFEE
  3760                           wreg	equ	0xFE8
  3761                           postdec1	equ	0xFE5
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function _ui_run *****************
  3767 ;; Defined at:
  3768 ;;		line 110 in file "ui.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    9
  3789 ;; This function calls:
  3790 ;;		__ui_encoder
  3791 ;;		_i2c_digipot_backlight
  3792 ;;		_i2c_digipot_reset_off
  3793 ;;		_i2c_digipot_reset_on
  3794 ;;		_i2c_display_send_init_sequence
  3795 ;;		_system_encoder_enable
  3796 ;;		_ui_init
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text1
  3803  004898                     __ptext1:
  3804                           	opt stack 0
  3805  004898                     _ui_run:
  3806                           	opt stack 21
  3807                           
  3808                           ;ui.c: 112: switch(userInterfaceStatus)
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;incstack = 0
  3812  004898  D06D               	goto	l1319
  3813  00489A                     
  3814                           ;ui.c: 116: if (os.buttonCount!=0)
  3815  00489A  0100               	movlb	0	; () banked
  3816  00489C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  3817  00489E  B4D8               	btfsc	status,2,c
  3818  0048A0  0012               	return	
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3822  0048A2  EC8E  F044         	call	_ui_init	;wreg free
  3823                           
  3824                           ;ui.c: 119: os.buttonCount = 0;
  3825  0048A6  0E00               	movlw	0
  3826  0048A8  0100               	movlb	0	; () banked
  3827  0048AA  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;ui.c: 120: };ui.c: 121: break;
  3831  0048AC  0012               	return	
  3832  0048AE                     l1323:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;ui.c: 125: LATDbits.LD0 = 0;
  3836  0048AE  908C               	bcf	3980,0,c	;volatile
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;ui.c: 127: system_ui_inactive_count = 0;
  3840  0048B0  0E00               	movlw	0
  3841  0048B2  0101               	movlb	1	; () banked
  3842  0048B4  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3843  0048B6  0E00               	movlw	0
  3844  0048B8  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3845                           
  3846                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3847  0048BA  0E02               	movlw	2
  3848  0048BC  0100               	movlb	0	; () banked
  3849  0048BE  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3850                           
  3851                           ;ui.c: 129: break;
  3852  0048C0  0012               	return	
  3853  0048C2                     
  3854                           ; BSR set to: 0
  3855                           ;ui.c: 133: i2c_digipot_reset_on();
  3856                           
  3857                           ; BSR set to: 0
  3858  0048C2  ECB3  F043         	call	_i2c_digipot_reset_on	;wreg free
  3859                           
  3860                           ;ui.c: 135: system_ui_inactive_count = 0;
  3861  0048C6  0E00               	movlw	0
  3862  0048C8  0101               	movlb	1	; () banked
  3863  0048CA  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3864  0048CC  0E00               	movlw	0
  3865  0048CE  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3866                           
  3867                           ; BSR set to: 1
  3868                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3869  0048D0  0E03               	movlw	3
  3870  0048D2  0100               	movlb	0	; () banked
  3871  0048D4  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3872                           
  3873                           ;ui.c: 137: break;
  3874  0048D6  0012               	return	
  3875  0048D8                     
  3876                           ; BSR set to: 0
  3877                           ;ui.c: 140: ++system_ui_inactive_count;
  3878                           
  3879                           ; BSR set to: 0
  3880  0048D8  0101               	movlb	1	; () banked
  3881  0048DA  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3882  0048DC  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3883                           
  3884                           ; BSR set to: 1
  3885                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3886  0048DE  517D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3887  0048E0  E104               	bnz	u12530
  3888  0048E2  0E04               	movlw	4
  3889  0048E4  5D7C               	subwf	_system_ui_inactive_count& (0+255),w,b
  3890  0048E6  A0D8               	btfss	status,0,c
  3891  0048E8  0012               	return	
  3892  0048EA                     u12530:
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3896  0048EA  ECC4  F043         	call	_i2c_digipot_reset_off	;wreg free
  3897                           
  3898                           ;ui.c: 145: system_ui_inactive_count = 0;
  3899  0048EE  0E00               	movlw	0
  3900  0048F0  0101               	movlb	1	; () banked
  3901  0048F2  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3902  0048F4  0E00               	movlw	0
  3903  0048F6  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3907  0048F8  0E04               	movlw	4
  3908  0048FA  0100               	movlb	0	; () banked
  3909  0048FC  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;ui.c: 147: };ui.c: 148: break;
  3913  0048FE  0012               	return	
  3914  004900                     
  3915                           ; BSR set to: 0
  3916                           ;ui.c: 152: i2c_display_send_init_sequence();
  3917                           
  3918                           ; BSR set to: 0
  3919  004900  EC73  F042         	call	_i2c_display_send_init_sequence	;wreg free
  3920                           
  3921                           ;ui.c: 154: i2c_digipot_backlight(150);
  3922  004904  0E96               	movlw	150
  3923  004906  EC1E  F043         	call	_i2c_digipot_backlight
  3924                           
  3925                           ;ui.c: 156: system_encoder_enable();
  3926  00490A  ECB4  F044         	call	_system_encoder_enable	;wreg free
  3927                           
  3928                           ;ui.c: 158: system_ui_inactive_count = 0;
  3929  00490E  0E00               	movlw	0
  3930  004910  0101               	movlb	1	; () banked
  3931  004912  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3932  004914  0E00               	movlw	0
  3933  004916  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;ui.c: 159: startup_timer = 0;
  3937  004918  0E00               	movlw	0
  3938  00491A  6F7B               	movwf	(_startup_timer+1)& (0+255),b
  3939  00491C  0E00               	movlw	0
  3940  00491E  6F7A               	movwf	_startup_timer& (0+255),b
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3944  004920  0E05               	movlw	5
  3945  004922  0100               	movlb	0	; () banked
  3946  004924  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3947                           
  3948                           ;ui.c: 161: break;
  3949  004926  0012               	return	
  3950  004928                     
  3951                           ; BSR set to: 0
  3952                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3953                           
  3954                           ; BSR set to: 0
  3955  004928  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  3956  00492A  A4D8               	btfss	status,2,c
  3957  00492C  D00B               	goto	l1330
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  3961  00492E  0101               	movlb	1	; () banked
  3962  004930  4B7A               	infsnz	_startup_timer& (0+255),f,b
  3963  004932  2B7B               	incf	(_startup_timer+1)& (0+255),f,b
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;ui.c: 167: if(startup_timer==250)
  3967  004934  0EFA               	movlw	250
  3968  004936  197A               	xorwf	_startup_timer& (0+255),w,b
  3969  004938  117B               	iorwf	(_startup_timer+1)& (0+255),w,b
  3970  00493A  A4D8               	btfss	status,2,c
  3971  00493C  D003               	goto	l1330
  3972                           
  3973                           ; BSR set to: 1
  3974                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3975  00493E  0E10               	movlw	16
  3976  004940  0100               	movlb	0	; () banked
  3977  004942  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  3978  004944                     l1330:
  3979                           
  3980                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  3981                           
  3982                           ; BSR set to: 0
  3983  004944  0100               	movlb	0	; () banked
  3984  004946  51C5               	movf	_os& (0+255),w,b	;volatile
  3985  004948  A4D8               	btfss	status,2,c
  3986  00494A  D00C               	goto	l1331
  3987                           
  3988                           ; BSR set to: 0
  3989  00494C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  3990  00494E  A4D8               	btfss	status,2,c
  3991  004950  D009               	goto	l1331
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  3995  004952  0101               	movlb	1	; () banked
  3996  004954  297C               	incf	_system_ui_inactive_count& (0+255),w,b
  3997  004956  E103               	bnz	u12580
  3998  004958  297D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3999  00495A  B4D8               	btfsc	status,2,c
  4000  00495C  0012               	return	
  4001  00495E                     u12580:
  4002                           
  4003                           ; BSR set to: 1
  4004                           ;ui.c: 175: ++system_ui_inactive_count;
  4005  00495E  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4006  004960  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;ui.c: 176: }
  4010  004962  0012               	return	
  4011  004964                     l1331:
  4012                           
  4013                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  4014                           
  4015                           ; BSR set to: 1
  4016  004964  0E00               	movlw	0
  4017  004966  0101               	movlb	1	; () banked
  4018  004968  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4019  00496A  0E00               	movlw	0
  4020  00496C  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;ui.c: 180: _ui_encoder();
  4024  00496E  ECE6  F02A         	call	__ui_encoder	;wreg free
  4025                           
  4026                           ;ui.c: 183: }
  4027                           
  4028                           ;ui.c: 181: };ui.c: 182: break;
  4029  004972  0012               	return	
  4030  004974                     l1319:
  4031  004974  0100               	movlb	0	; () banked
  4032  004976  51E6               	movf	_userInterfaceStatus& (0+255),w,b
  4033                           
  4034                           ; Switch size 1, requested type "space"
  4035                           ; Number of cases is 6, Range of values is 0 to 5
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           19    10 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040  004978  0A00               	xorlw	0	; case 0
  4041  00497A  B4D8               	btfsc	status,2,c
  4042  00497C  D78E               	goto	l1320
  4043  00497E  0A01               	xorlw	1	; case 1
  4044  004980  B4D8               	btfsc	status,2,c
  4045  004982  D795               	goto	l1323
  4046  004984  0A03               	xorlw	3	; case 2
  4047  004986  B4D8               	btfsc	status,2,c
  4048  004988  D79C               	goto	l1324
  4049  00498A  0A01               	xorlw	1	; case 3
  4050  00498C  B4D8               	btfsc	status,2,c
  4051  00498E  D7A4               	goto	l1325
  4052  004990  0A07               	xorlw	7	; case 4
  4053  004992  B4D8               	btfsc	status,2,c
  4054  004994  D7B5               	goto	l1327
  4055  004996  0A01               	xorlw	1	; case 5
  4056  004998  A4D8               	btfss	status,2,c
  4057  00499A  0012               	return	
  4058  00499C  D7C5               	goto	l1328
  4059  00499E                     __end_of_ui_run:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           postdec1	equ	0xFE5
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _system_encoder_enable *****************
  4073 ;; Defined at:
  4074 ;;		line 96 in file "os.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_ui_run
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text2
  4102  008968                     __ptext2:
  4103                           	opt stack 0
  4104  008968                     _system_encoder_enable:
  4105                           	opt stack 29
  4106                           
  4107                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4108                           
  4109                           ;incstack = 0
  4110  008968  92F0               	bcf	intcon3,1,c	;volatile
  4111                           
  4112                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4113  00896A  94F0               	bcf	intcon3,2,c	;volatile
  4114                           
  4115                           ;os.c: 103: os.encoderCount = 0;
  4116  00896C  0E00               	movlw	0
  4117  00896E  0100               	movlb	0	; () banked
  4118  008970  6FC5               	movwf	_os& (0+255),b	;volatile
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4122  008972  88F0               	bsf	intcon3,4,c	;volatile
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4126  008974  8AF0               	bsf	intcon3,5,c	;volatile
  4127                           
  4128                           ; BSR set to: 0
  4129  008976  0012               	return		;funcret
  4130  008978                     __end_of_system_encoder_enable:
  4131                           	opt stack 0
  4132                           tblptru	equ	0xFF8
  4133                           tblptrh	equ	0xFF7
  4134                           tblptrl	equ	0xFF6
  4135                           tablat	equ	0xFF5
  4136                           intcon3	equ	0xFF0
  4137                           postinc0	equ	0xFEE
  4138                           wreg	equ	0xFE8
  4139                           postdec1	equ	0xFE5
  4140                           fsr1h	equ	0xFE2
  4141                           fsr1l	equ	0xFE1
  4142                           status	equ	0xFD8
  4143                           
  4144 ;; *************** function _i2c_display_send_init_sequence *****************
  4145 ;; Defined at:
  4146 ;;		line 207 in file "i2c.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4164 ;;Total ram usage:        9 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    2
  4167 ;; This function calls:
  4168 ;;		__i2c_write
  4169 ;;		_i2c_set_frequency
  4170 ;; This function is called by:
  4171 ;;		_ui_run
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text3
  4176  0084E6                     __ptext3:
  4177                           	opt stack 0
  4178  0084E6                     _i2c_display_send_init_sequence:
  4179                           	opt stack 27
  4180                           
  4181                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;incstack = 0
  4185  0084E6  EE21  F0C7         	lfsr	2,i2c_display_send_init_sequence@F6808
  4186  0084EA  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4187  0084EE  0E08               	movlw	8
  4188  0084F0                     u11801:
  4189  0084F0  CFDB FFE3          	movff	plusw2,plusw1
  4190  0084F4  06E8               	decf	wreg,f,c
  4191  0084F6  E2FC               	bc	u11801
  4192                           
  4193                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4194  0084F8  0E00               	movlw	0
  4195  0084FA  ECB5  F042         	call	_i2c_set_frequency
  4196                           
  4197                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4198  0084FE  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4199  008500  6E06               	movwf	__i2c_write@data,c
  4200  008502  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4201  008504  6E07               	movwf	__i2c_write@data+1,c
  4202  008506  0E09               	movlw	9
  4203  008508  6E08               	movwf	__i2c_write@length,c
  4204  00850A  0E78               	movlw	120
  4205  00850C  EC3F  F03F         	call	__i2c_write
  4206  008510  0012               	return		;funcret
  4207  008512                     __end_of_i2c_display_send_init_sequence:
  4208                           	opt stack 0
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           intcon3	equ	0xFF0
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           plusw1	equ	0xFE3
  4218                           fsr1h	equ	0xFE2
  4219                           fsr1l	equ	0xFE1
  4220                           plusw2	equ	0xFDB
  4221                           status	equ	0xFD8
  4222                           
  4223 ;; *************** function _i2c_digipot_reset_on *****************
  4224 ;; Defined at:
  4225 ;;		line 310 in file "i2c.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;Total ram usage:        2 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    2
  4246 ;; This function calls:
  4247 ;;		__i2c_write
  4248 ;;		_i2c_set_frequency
  4249 ;; This function is called by:
  4250 ;;		_ui_run
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text4
  4255  008766                     __ptext4:
  4256                           	opt stack 0
  4257  008766                     _i2c_digipot_reset_on:
  4258                           	opt stack 27
  4259                           
  4260                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4261                           
  4262                           ;incstack = 0
  4263  008766  0E10               	movlw	16
  4264  008768  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4265                           
  4266                           ;i2c.c: 315: data_array[1] = 0x00;
  4267  00876A  0E00               	movlw	0
  4268  00876C  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4269                           
  4270                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4271  00876E  0E02               	movlw	2
  4272  008770  ECB5  F042         	call	_i2c_set_frequency
  4273                           
  4274                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4275  008774  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4276  008776  6E06               	movwf	__i2c_write@data,c
  4277  008778  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4278  00877A  6E07               	movwf	__i2c_write@data+1,c
  4279  00877C  0E02               	movlw	2
  4280  00877E  6E08               	movwf	__i2c_write@length,c
  4281  008780  0E5C               	movlw	92
  4282  008782  EC3F  F03F         	call	__i2c_write
  4283  008786  0012               	return		;funcret
  4284  008788                     __end_of_i2c_digipot_reset_on:
  4285                           	opt stack 0
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           intcon3	equ	0xFF0
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           plusw1	equ	0xFE3
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           plusw2	equ	0xFDB
  4298                           status	equ	0xFD8
  4299                           
  4300 ;; *************** function _i2c_digipot_reset_off *****************
  4301 ;; Defined at:
  4302 ;;		line 323 in file "i2c.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;Total ram usage:        2 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    2
  4323 ;; This function calls:
  4324 ;;		__i2c_write
  4325 ;;		_i2c_set_frequency
  4326 ;; This function is called by:
  4327 ;;		_ui_run
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text5
  4332  008788                     __ptext5:
  4333                           	opt stack 0
  4334  008788                     _i2c_digipot_reset_off:
  4335                           	opt stack 27
  4336                           
  4337                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4338                           
  4339                           ;incstack = 0
  4340  008788  0E10               	movlw	16
  4341  00878A  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4342                           
  4343                           ;i2c.c: 327: data_array[1] = 0x80;
  4344  00878C  0E80               	movlw	128
  4345  00878E  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4346                           
  4347                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4348  008790  0E02               	movlw	2
  4349  008792  ECB5  F042         	call	_i2c_set_frequency
  4350                           
  4351                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4352  008796  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4353  008798  6E06               	movwf	__i2c_write@data,c
  4354  00879A  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4355  00879C  6E07               	movwf	__i2c_write@data+1,c
  4356  00879E  0E02               	movlw	2
  4357  0087A0  6E08               	movwf	__i2c_write@length,c
  4358  0087A2  0E5C               	movlw	92
  4359  0087A4  EC3F  F03F         	call	__i2c_write
  4360  0087A8  0012               	return		;funcret
  4361  0087AA                     __end_of_i2c_digipot_reset_off:
  4362                           	opt stack 0
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           intcon3	equ	0xFF0
  4368                           postinc0	equ	0xFEE
  4369                           wreg	equ	0xFE8
  4370                           postdec1	equ	0xFE5
  4371                           plusw1	equ	0xFE3
  4372                           fsr1h	equ	0xFE2
  4373                           fsr1l	equ	0xFE1
  4374                           plusw2	equ	0xFDB
  4375                           status	equ	0xFD8
  4376                           
  4377 ;; *************** function _i2c_digipot_backlight *****************
  4378 ;; Defined at:
  4379 ;;		line 335 in file "i2c.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  level           1    wreg     unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  level           1   10[COMRAM] unsigned char 
  4384 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;Total ram usage:        3 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    2
  4401 ;; This function calls:
  4402 ;;		__i2c_write
  4403 ;;		_i2c_set_frequency
  4404 ;; This function is called by:
  4405 ;;		_ui_run
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text6
  4410  00863C                     __ptext6:
  4411                           	opt stack 0
  4412  00863C                     _i2c_digipot_backlight:
  4413                           	opt stack 27
  4414                           
  4415                           ;incstack = 0
  4416                           ;i2c_digipot_backlight@level stored from wreg
  4417  00863C  6E0B               	movwf	i2c_digipot_backlight@level,c
  4418                           
  4419                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4420  00863E  0E00               	movlw	0
  4421  008640  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4422                           
  4423                           ;i2c.c: 339: data_array[1] = level>>1;
  4424  008642  90D8               	bcf	status,0,c
  4425  008644  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4426  008646  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4427                           
  4428                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4429  008648  0E02               	movlw	2
  4430  00864A  ECB5  F042         	call	_i2c_set_frequency
  4431                           
  4432                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4433  00864E  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4434  008650  6E06               	movwf	__i2c_write@data,c
  4435  008652  0E00               	movlw	high i2c_digipot_backlight@data_array
  4436  008654  6E07               	movwf	__i2c_write@data+1,c
  4437  008656  0E02               	movlw	2
  4438  008658  6E08               	movwf	__i2c_write@length,c
  4439  00865A  0E5C               	movlw	92
  4440  00865C  EC3F  F03F         	call	__i2c_write
  4441  008660  0012               	return		;funcret
  4442  008662                     __end_of_i2c_digipot_backlight:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           intcon3	equ	0xFF0
  4449                           postinc0	equ	0xFEE
  4450                           wreg	equ	0xFE8
  4451                           postdec1	equ	0xFE5
  4452                           plusw1	equ	0xFE3
  4453                           fsr1h	equ	0xFE2
  4454                           fsr1l	equ	0xFE1
  4455                           plusw2	equ	0xFDB
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function __ui_encoder *****************
  4459 ;; Defined at:
  4460 ;;		line 22 in file "ui.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    8
  4481 ;; This function calls:
  4482 ;;		_i2c_eeprom_writeByte
  4483 ;;		_reboot
  4484 ;;		_system_delay_ms
  4485 ;; This function is called by:
  4486 ;;		_ui_run
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text7
  4491  0055CC                     __ptext7:
  4492                           	opt stack 0
  4493  0055CC                     __ui_encoder:
  4494                           	opt stack 21
  4495                           
  4496                           ;ui.c: 24: switch(os.display_mode)
  4497                           
  4498                           ;incstack = 0
  4499  0055CC  D054               	goto	l1292
  4500  0055CE                     
  4501                           ;ui.c: 27: if(os.buttonCount>0)
  4502  0055CE  0100               	movlb	0	; () banked
  4503  0055D0  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4504  0055D2  0A80               	xorlw	128
  4505  0055D4  0F7F               	addlw	-129
  4506  0055D6  A0D8               	btfss	status,0,c
  4507  0055D8  0012               	return	
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4511  0055DA  0E00               	movlw	0
  4512  0055DC  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;ui.c: 30: };ui.c: 31: break;
  4516  0055DE  0012               	return	
  4517  0055E0                     
  4518                           ; BSR set to: 0
  4519                           ;ui.c: 34: if(os.buttonCount>0)
  4520                           
  4521                           ; BSR set to: 0
  4522  0055E0  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4523  0055E2  0A80               	xorlw	128
  4524  0055E4  0F7F               	addlw	-129
  4525  0055E6  A0D8               	btfss	status,0,c
  4526  0055E8  0012               	return	
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4530  0055EA  0E00               	movlw	0
  4531  0055EC  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;ui.c: 37: };ui.c: 38: break;
  4535  0055EE  0012               	return	
  4536  0055F0                     
  4537                           ; BSR set to: 0
  4538                           ;ui.c: 41: if(os.buttonCount>0)
  4539                           
  4540                           ; BSR set to: 0
  4541  0055F0  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4542  0055F2  0A80               	xorlw	128
  4543  0055F4  0F7F               	addlw	-129
  4544  0055F6  A0D8               	btfss	status,0,c
  4545  0055F8  0012               	return	
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4549  0055FA  0E30               	movlw	48
  4550  0055FC  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4551                           
  4552                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4553  0055FE  0E30               	movlw	48
  4554  005600  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4555                           
  4556                           ;ui.c: 45: os.buttonCount = 0;
  4557  005602  0E00               	movlw	0
  4558  005604  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;ui.c: 46: };ui.c: 47: break;
  4562  005606  0012               	return	
  4563  005608                     
  4564                           ; BSR set to: 0
  4565                           ;ui.c: 50: if(os.buttonCount>0)
  4566                           
  4567                           ; BSR set to: 0
  4568  005608  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4569  00560A  0A80               	xorlw	128
  4570  00560C  0F7F               	addlw	-129
  4571  00560E  A0D8               	btfss	status,0,c
  4572  005610  0012               	return	
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4576  005612  0E00               	movlw	0
  4577  005614  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;ui.c: 53: };ui.c: 54: break;
  4581  005616  0012               	return	
  4582  005618                     
  4583                           ; BSR set to: 0
  4584                           ;ui.c: 57: if(os.buttonCount>0)
  4585                           
  4586                           ; BSR set to: 0
  4587  005618  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4588  00561A  0A80               	xorlw	128
  4589  00561C  0F7F               	addlw	-129
  4590  00561E  A0D8               	btfss	status,0,c
  4591  005620  0012               	return	
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4595  005622  0E00               	movlw	0
  4596  005624  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;ui.c: 60: };ui.c: 61: break;
  4600  005626  0012               	return	
  4601  005628                     
  4602                           ; BSR set to: 0
  4603                           ;ui.c: 64: if(os.buttonCount>0)
  4604                           
  4605                           ; BSR set to: 0
  4606  005628  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4607  00562A  0A80               	xorlw	128
  4608  00562C  0F7F               	addlw	-129
  4609  00562E  A0D8               	btfss	status,0,c
  4610  005630  0012               	return	
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4614  005632  0E60               	movlw	96
  4615  005634  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4616                           
  4617                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4618  005636  0E60               	movlw	96
  4619  005638  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4620                           
  4621                           ;ui.c: 68: os.buttonCount = 0;
  4622  00563A  0E00               	movlw	0
  4623  00563C  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;ui.c: 69: };ui.c: 70: break;
  4627  00563E  0012               	return	
  4628  005640                     
  4629                           ; BSR set to: 0
  4630                           ;ui.c: 73: if(os.buttonCount>0)
  4631                           
  4632                           ; BSR set to: 0
  4633  005640  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4634  005642  0A80               	xorlw	128
  4635  005644  0F7F               	addlw	-129
  4636  005646  A0D8               	btfss	status,0,c
  4637  005648  0012               	return	
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4641  00564A  0E00               	movlw	0
  4642  00564C  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;ui.c: 76: };ui.c: 77: break;
  4646  00564E  0012               	return	
  4647  005650                     
  4648                           ; BSR set to: 0
  4649                           ;ui.c: 80: if(os.buttonCount>0)
  4650                           
  4651                           ; BSR set to: 0
  4652  005650  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4653  005652  0A80               	xorlw	128
  4654  005654  0F7F               	addlw	-129
  4655  005656  A0D8               	btfss	status,0,c
  4656  005658  0012               	return	
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4660  00565A  0E01               	movlw	1
  4661  00565C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4662  00565E  0E00               	movlw	0
  4663  005660  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4664  005662  0E78               	movlw	120
  4665  005664  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4666  005666  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
  4667                           
  4668                           ;ui.c: 83: system_delay_ms(10);
  4669  00566A  0E0A               	movlw	10
  4670  00566C  EC7D  F043         	call	_system_delay_ms
  4671                           
  4672                           ;ui.c: 84: reboot();
  4673  005670  EC3C  F044         	call	_reboot	;wreg free
  4674                           
  4675                           ;ui.c: 87: }
  4676                           
  4677                           ;ui.c: 85: };ui.c: 86: break;
  4678  005674  0012               	return	
  4679  005676                     l1292:
  4680  005676  0100               	movlb	0	; () banked
  4681  005678  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4682                           
  4683                           ; Switch size 1, requested type "space"
  4684                           ; Number of cases is 8, Range of values is 0 to 112
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte           25    13 (average)
  4688                           ;	Chosen strategy is simple_byte
  4689  00567A  0A00               	xorlw	0	; case 0
  4690  00567C  B4D8               	btfsc	status,2,c
  4691  00567E  D7A7               	goto	l1293
  4692  005680  0A10               	xorlw	16	; case 16
  4693  005682  B4D8               	btfsc	status,2,c
  4694  005684  D7AD               	goto	l1296
  4695  005686  0A30               	xorlw	48	; case 32
  4696  005688  B4D8               	btfsc	status,2,c
  4697  00568A  D7B2               	goto	l1298
  4698  00568C  0A10               	xorlw	16	; case 48
  4699  00568E  B4D8               	btfsc	status,2,c
  4700  005690  D7BB               	goto	l1300
  4701  005692  0A70               	xorlw	112	; case 64
  4702  005694  B4D8               	btfsc	status,2,c
  4703  005696  D7C8               	goto	l1304
  4704  005698  0A10               	xorlw	16	; case 80
  4705  00569A  B4D8               	btfsc	status,2,c
  4706  00569C  D7BD               	goto	l1302
  4707  00569E  0A30               	xorlw	48	; case 96
  4708  0056A0  B4D8               	btfsc	status,2,c
  4709  0056A2  D7CE               	goto	l1306
  4710  0056A4  0A10               	xorlw	16	; case 112
  4711  0056A6  A4D8               	btfss	status,2,c
  4712  0056A8  0012               	return	
  4713  0056AA  D7D2               	goto	l1308
  4714  0056AC                     __end_of__ui_encoder:
  4715                           	opt stack 0
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           intcon3	equ	0xFF0
  4721                           postinc0	equ	0xFEE
  4722                           wreg	equ	0xFE8
  4723                           postdec1	equ	0xFE5
  4724                           plusw1	equ	0xFE3
  4725                           fsr1h	equ	0xFE2
  4726                           fsr1l	equ	0xFE1
  4727                           plusw2	equ	0xFDB
  4728                           status	equ	0xFD8
  4729                           
  4730 ;; *************** function _timer_pseudo_isr *****************
  4731 ;; Defined at:
  4732 ;;		line 19 in file "os.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;Total ram usage:        0 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text8
  4760  0082BE                     __ptext8:
  4761                           	opt stack 0
  4762  0082BE                     _timer_pseudo_isr:
  4763                           	opt stack 30
  4764                           
  4765                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4766                           
  4767                           ;incstack = 0
  4768  0082BE  A4F2               	btfss	intcon,2,c	;volatile
  4769  0082C0  0012               	return	
  4770                           
  4771                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4772                           
  4773                           ;os.c: 23: {;os.c: 24: return;
  4774  0082C2  0ED1               	movlw	209
  4775  0082C4  6ED7               	movwf	4055,c	;volatile
  4776                           
  4777                           ;os.c: 30: TMR0L = 0x20;
  4778  0082C6  0E20               	movlw	32
  4779  0082C8  6ED6               	movwf	4054,c	;volatile
  4780                           
  4781                           ;os.c: 31: ++os.timeSlot;
  4782  0082CA  0100               	movlb	0	; () banked
  4783  0082CC  2BC7               	incf	(_os+2)& (0+255),f,b	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;os.c: 33: os.done = 0;
  4787  0082CE  0E00               	movlw	0
  4788  0082D0  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;os.c: 34: INTCONbits.T0IF = 0;
  4792  0082D2  94F2               	bcf	intcon,2,c	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4796  0082D4  A0F0               	btfss	intcon3,0,c	;volatile
  4797  0082D6  D002               	goto	l1083
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4801  0082D8  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4805  0082DA  90F0               	bcf	intcon3,0,c	;volatile
  4806  0082DC                     l1083:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4810                           
  4811                           ; BSR set to: 0
  4812  0082DC  A2F0               	btfss	intcon3,1,c	;volatile
  4813  0082DE  D003               	goto	l1084
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4817  0082E0  AC81               	btfss	3969,6,c	;volatile
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4821  0082E2  07C5               	decf	_os& (0+255),f,b	;volatile
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4825                           
  4826                           ; BSR set to: 0
  4827  0082E4  92F0               	bcf	intcon3,1,c	;volatile
  4828  0082E6                     l1084:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4832                           
  4833                           ; BSR set to: 0
  4834  0082E6  A4F0               	btfss	intcon3,2,c	;volatile
  4835  0082E8  0012               	return	
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4839  0082EA  AE81               	btfss	3969,7,c	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4843  0082EC  2BC5               	incf	_os& (0+255),f,b	;volatile
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4847                           
  4848                           ; BSR set to: 0
  4849  0082EE  94F0               	bcf	intcon3,2,c	;volatile
  4850  0082F0  0012               	return	
  4851  0082F2                     __end_of_timer_pseudo_isr:
  4852                           	opt stack 0
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           intcon	equ	0xFF2
  4858                           intcon3	equ	0xFF0
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           postdec1	equ	0xFE5
  4862                           plusw1	equ	0xFE3
  4863                           fsr1h	equ	0xFE2
  4864                           fsr1l	equ	0xFE1
  4865                           plusw2	equ	0xFDB
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function _system_minimal_init_undo *****************
  4869 ;; Defined at:
  4870 ;;		line 157 in file "os.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    1
  4891 ;; This function calls:
  4892 ;;		_i2c_reset
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text9
  4899  008978                     __ptext9:
  4900                           	opt stack 0
  4901  008978                     _system_minimal_init_undo:
  4902                           	opt stack 29
  4903                           
  4904                           ;os.c: 160: i2c_reset();
  4905                           
  4906                           ;incstack = 0
  4907  008978  ECD4  F044         	call	_i2c_reset	;wreg free
  4908                           
  4909                           ;os.c: 163: TRISAbits.TRISA0 = 1;
  4910  00897C  8092               	bsf	3986,0,c	;volatile
  4911                           
  4912                           ;os.c: 164: ANCON0bits.PCFG0 = 0;
  4913  00897E  010F               	movlb	15	; () banked
  4914  008980  9148               	bcf	72,0,b	;volatile
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;os.c: 167: LATCbits.LC2 = 0;
  4918  008982  948B               	bcf	3979,2,c	;volatile
  4919                           
  4920                           ; BSR set to: 15
  4921                           ;os.c: 168: TRISCbits.TRISC2 = 1;
  4922  008984  8494               	bsf	3988,2,c	;volatile
  4923                           
  4924                           ; BSR set to: 15
  4925  008986  0012               	return		;funcret
  4926  008988                     __end_of_system_minimal_init_undo:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           intcon	equ	0xFF2
  4933                           intcon3	equ	0xFF0
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           plusw1	equ	0xFE3
  4938                           fsr1h	equ	0xFE2
  4939                           fsr1l	equ	0xFE1
  4940                           plusw2	equ	0xFDB
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _i2c_reset *****************
  4944 ;; Defined at:
  4945 ;;		line 110 in file "i2c.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_system_minimal_init_undo
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text10
  4973  0089A8                     __ptext10:
  4974                           	opt stack 0
  4975  0089A8                     _i2c_reset:
  4976                           	opt stack 29
  4977                           
  4978                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  4979                           
  4980                           ; BSR set to: 15
  4981                           ;incstack = 0
  4982  0089A8  9EC7               	bcf	4039,7,c	;volatile
  4983                           
  4984                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  4985  0089AA  9CC7               	bcf	4039,6,c	;volatile
  4986                           
  4987                           ;i2c.c: 114: SSP1CON1 = 0x00;
  4988  0089AC  0E00               	movlw	0
  4989  0089AE  6EC6               	movwf	4038,c	;volatile
  4990                           
  4991                           ;i2c.c: 115: SSP1ADD = 0x00;
  4992  0089B0  0E00               	movlw	0
  4993  0089B2  6EC8               	movwf	4040,c	;volatile
  4994  0089B4  0012               	return		;funcret
  4995  0089B6                     __end_of_i2c_reset:
  4996                           	opt stack 0
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           intcon	equ	0xFF2
  5002                           intcon3	equ	0xFF0
  5003                           postinc0	equ	0xFEE
  5004                           wreg	equ	0xFE8
  5005                           postdec1	equ	0xFE5
  5006                           plusw1	equ	0xFE3
  5007                           fsr1h	equ	0xFE2
  5008                           fsr1l	equ	0xFE1
  5009                           plusw2	equ	0xFDB
  5010                           status	equ	0xFD8
  5011                           
  5012 ;; *************** function _system_minimal_init *****************
  5013 ;; Defined at:
  5014 ;;		line 139 in file "os.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;		None
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;Total ram usage:        0 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    2
  5035 ;; This function calls:
  5036 ;;		_i2c_init
  5037 ;;		_system_delay_ms
  5038 ;; This function is called by:
  5039 ;;		_main
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text11
  5044  0088DA                     __ptext11:
  5045                           	opt stack 0
  5046  0088DA                     _system_minimal_init:
  5047                           	opt stack 28
  5048                           
  5049                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  5050                           
  5051                           ;incstack = 0
  5052  0088DA  9494               	bcf	3988,2,c	;volatile
  5053                           
  5054                           ;os.c: 143: LATCbits.LC2 = 1;
  5055  0088DC  848B               	bsf	3979,2,c	;volatile
  5056                           
  5057                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  5058  0088DE  8092               	bsf	3986,0,c	;volatile
  5059                           
  5060                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  5061  0088E0  010F               	movlb	15	; () banked
  5062  0088E2  8148               	bsf	72,0,b	;volatile
  5063                           
  5064                           ; BSR set to: 15
  5065                           ;os.c: 150: i2c_init();
  5066  0088E4  ECE2  F044         	call	_i2c_init	;wreg free
  5067                           
  5068                           ;os.c: 153: system_delay_ms(50);
  5069  0088E8  0E32               	movlw	50
  5070  0088EA  EC7D  F043         	call	_system_delay_ms
  5071  0088EE  0012               	return		;funcret
  5072  0088F0                     __end_of_system_minimal_init:
  5073                           	opt stack 0
  5074                           tblptru	equ	0xFF8
  5075                           tblptrh	equ	0xFF7
  5076                           tblptrl	equ	0xFF6
  5077                           tablat	equ	0xFF5
  5078                           intcon	equ	0xFF2
  5079                           intcon3	equ	0xFF0
  5080                           postinc0	equ	0xFEE
  5081                           wreg	equ	0xFE8
  5082                           postdec1	equ	0xFE5
  5083                           plusw1	equ	0xFE3
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           plusw2	equ	0xFDB
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _i2c_init *****************
  5090 ;; Defined at:
  5091 ;;		line 102 in file "i2c.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      void 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5109 ;;Total ram usage:        0 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    1
  5112 ;; This function calls:
  5113 ;;		__i2c_open_1
  5114 ;;		_i2c_set_frequency
  5115 ;; This function is called by:
  5116 ;;		_system_minimal_init
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text12
  5121  0089C4                     __ptext12:
  5122                           	opt stack 0
  5123  0089C4                     _i2c_init:
  5124                           	opt stack 28
  5125                           
  5126                           ;i2c.c: 105: _i2c_open_1();
  5127                           
  5128                           ;incstack = 0
  5129  0089C4  EC49  F044         	call	__i2c_open_1	;wreg free
  5130                           
  5131                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5132  0089C8  0E00               	movlw	0
  5133  0089CA  ECB5  F042         	call	_i2c_set_frequency
  5134  0089CE  0012               	return		;funcret
  5135  0089D0                     __end_of_i2c_init:
  5136                           	opt stack 0
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           intcon	equ	0xFF2
  5142                           intcon3	equ	0xFF0
  5143                           postinc0	equ	0xFEE
  5144                           wreg	equ	0xFE8
  5145                           postdec1	equ	0xFE5
  5146                           plusw1	equ	0xFE3
  5147                           fsr1h	equ	0xFE2
  5148                           fsr1l	equ	0xFE1
  5149                           plusw2	equ	0xFDB
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function __i2c_open_1 *****************
  5153 ;; Defined at:
  5154 ;;		line 36 in file "i2c.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_i2c_init
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text13
  5182  008892                     __ptext13:
  5183                           	opt stack 0
  5184  008892                     __i2c_open_1:
  5185                           	opt stack 28
  5186                           
  5187                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5188                           
  5189                           ;incstack = 0
  5190  008892  9EC7               	bcf	4039,7,c	;volatile
  5191                           
  5192                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5193  008894  9CC7               	bcf	4039,6,c	;volatile
  5194                           
  5195                           ;i2c.c: 40: SSP1ADD = 29;
  5196  008896  0E1D               	movlw	29
  5197  008898  6EC8               	movwf	4040,c	;volatile
  5198                           
  5199                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5200  00889A  9EC6               	bcf	4038,7,c	;volatile
  5201                           
  5202                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5203  00889C  9CC6               	bcf	4038,6,c	;volatile
  5204                           
  5205                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5206  00889E  50C6               	movf	4038,w,c	;volatile
  5207  0088A0  0BF0               	andlw	-16
  5208  0088A2  0908               	iorlw	8
  5209  0088A4  6EC6               	movwf	4038,c	;volatile
  5210                           
  5211                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5212  0088A6  8AC6               	bsf	4038,5,c	;volatile
  5213  0088A8  0012               	return		;funcret
  5214  0088AA                     __end_of__i2c_open_1:
  5215                           	opt stack 0
  5216                           tblptru	equ	0xFF8
  5217                           tblptrh	equ	0xFF7
  5218                           tblptrl	equ	0xFF6
  5219                           tablat	equ	0xFF5
  5220                           intcon	equ	0xFF2
  5221                           intcon3	equ	0xFF0
  5222                           postinc0	equ	0xFEE
  5223                           wreg	equ	0xFE8
  5224                           postdec1	equ	0xFE5
  5225                           plusw1	equ	0xFE3
  5226                           fsr1h	equ	0xFE2
  5227                           fsr1l	equ	0xFE1
  5228                           plusw2	equ	0xFDB
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function _system_full_init *****************
  5232 ;; Defined at:
  5233 ;;		line 172 in file "os.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    7
  5254 ;; This function calls:
  5255 ;;		__system_encoder_init
  5256 ;;		__system_timer0_init
  5257 ;;		_fat_init
  5258 ;;		_flash_init
  5259 ;;		_ui_init
  5260 ;; This function is called by:
  5261 ;;		_main
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text14
  5266  0077E4                     __ptext14:
  5267                           	opt stack 0
  5268  0077E4                     _system_full_init:
  5269                           	opt stack 23
  5270                           
  5271                           ;os.c: 179: TRISDbits.TRISD0 = 0;
  5272                           
  5273                           ;incstack = 0
  5274  0077E4  9095               	bcf	3989,0,c	;volatile
  5275                           
  5276                           ;os.c: 180: LATDbits.LD0 = 0;
  5277  0077E6  908C               	bcf	3980,0,c	;volatile
  5278                           
  5279                           ;os.c: 183: TRISDbits.TRISD3 = 0;
  5280  0077E8  9695               	bcf	3989,3,c	;volatile
  5281                           
  5282                           ;os.c: 184: LATDbits.LD3 = 0;
  5283  0077EA  968C               	bcf	3980,3,c	;volatile
  5284                           
  5285                           ;os.c: 187: TRISDbits.TRISD1 = 0;
  5286  0077EC  9295               	bcf	3989,1,c	;volatile
  5287                           
  5288                           ;os.c: 188: LATDbits.LD1 = 0;
  5289  0077EE  928C               	bcf	3980,1,c	;volatile
  5290                           
  5291                           ;os.c: 191: TRISBbits.TRISB1 = 0;
  5292  0077F0  9293               	bcf	3987,1,c	;volatile
  5293                           
  5294                           ;os.c: 192: LATBbits.LB1 = 0;
  5295  0077F2  928A               	bcf	3978,1,c	;volatile
  5296                           
  5297                           ;os.c: 195: TRISBbits.TRISB2 = 0;
  5298  0077F4  9493               	bcf	3987,2,c	;volatile
  5299                           
  5300                           ;os.c: 196: LATBbits.LB2 = 0;
  5301  0077F6  948A               	bcf	3978,2,c	;volatile
  5302                           
  5303                           ;os.c: 197: TRISBbits.TRISB3 = 0;
  5304  0077F8  9693               	bcf	3987,3,c	;volatile
  5305                           
  5306                           ;os.c: 198: LATBbits.LB3 = 0;
  5307  0077FA  968A               	bcf	3978,3,c	;volatile
  5308                           
  5309                           ;os.c: 201: TRISDbits.TRISD6 = 1;
  5310  0077FC  8C95               	bsf	3989,6,c	;volatile
  5311                           
  5312                           ;os.c: 202: TRISDbits.TRISD4 = 0;
  5313  0077FE  9895               	bcf	3989,4,c	;volatile
  5314                           
  5315                           ;os.c: 203: TRISDbits.TRISD5 = 0;
  5316  007800  9A95               	bcf	3989,5,c	;volatile
  5317                           
  5318                           ;os.c: 204: TRISDbits.TRISD7 = 0;
  5319  007802  9E95               	bcf	3989,7,c	;volatile
  5320                           
  5321                           ;os.c: 205: LATDbits.LD7 = 1;
  5322  007804  8E8C               	bsf	3980,7,c	;volatile
  5323                           
  5324                           ;os.c: 206: TRISDbits.TRISD2 = 1;
  5325  007806  8495               	bsf	3989,2,c	;volatile
  5326                           
  5327                           ;os.c: 209: TRISCbits.TRISC7 = 0;
  5328  007808  9E94               	bcf	3988,7,c	;volatile
  5329                           
  5330                           ;os.c: 210: LATCbits.LC7 = 0;
  5331  00780A  9E8B               	bcf	3979,7,c	;volatile
  5332                           
  5333                           ;os.c: 213: TRISEbits.TRISE2 = 0;
  5334  00780C  9496               	bcf	3990,2,c	;volatile
  5335                           
  5336                           ;os.c: 214: LATEbits.LE2 = 1;
  5337  00780E  848D               	bsf	3981,2,c	;volatile
  5338                           
  5339                           ;os.c: 215: TRISEbits.TRISE1 = 0;
  5340  007810  9296               	bcf	3990,1,c	;volatile
  5341                           
  5342                           ;os.c: 216: LATEbits.LE1 = 1;
  5343  007812  828D               	bsf	3981,1,c	;volatile
  5344                           
  5345                           ;os.c: 217: TRISEbits.TRISE0 = 0;
  5346  007814  9096               	bcf	3990,0,c	;volatile
  5347                           
  5348                           ;os.c: 218: LATEbits.LE0 = 1;
  5349  007816  808D               	bsf	3981,0,c	;volatile
  5350                           
  5351                           ;os.c: 219: TRISAbits.TRISA5 = 0;
  5352  007818  9A92               	bcf	3986,5,c	;volatile
  5353                           
  5354                           ;os.c: 220: LATAbits.LA5 = 1;
  5355  00781A  8A89               	bsf	3977,5,c	;volatile
  5356                           
  5357                           ;os.c: 223: TRISBbits.TRISB7 = 1;
  5358  00781C  8E93               	bsf	3987,7,c	;volatile
  5359                           
  5360                           ;os.c: 224: TRISBbits.TRISB6 = 1;
  5361  00781E  8C93               	bsf	3987,6,c	;volatile
  5362                           
  5363                           ;os.c: 227: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5364  007820  0E10               	movlw	16
  5365  007822  0100               	movlb	0	; () banked
  5366  007824  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  5367                           
  5368                           ;os.c: 228: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5369  007826  0E00               	movlw	0
  5370  007828  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;os.c: 231: flash_init();
  5374  00782A  EC22  F044         	call	_flash_init	;wreg free
  5375                           
  5376                           ;os.c: 234: fat_init();
  5377  00782E  ECC4  F044         	call	_fat_init	;wreg free
  5378                           
  5379                           ;os.c: 237: _system_encoder_init();
  5380  007832  ECEF  F040         	call	__system_encoder_init	;wreg free
  5381                           
  5382                           ;os.c: 240: ui_init();
  5383  007836  EC8E  F044         	call	_ui_init	;wreg free
  5384                           
  5385                           ;os.c: 243: _system_timer0_init();
  5386  00783A  ECE6  F043         	call	__system_timer0_init	;wreg free
  5387  00783E  0012               	return		;funcret
  5388  007840                     __end_of_system_full_init:
  5389                           	opt stack 0
  5390                           tblptru	equ	0xFF8
  5391                           tblptrh	equ	0xFF7
  5392                           tblptrl	equ	0xFF6
  5393                           tablat	equ	0xFF5
  5394                           intcon	equ	0xFF2
  5395                           intcon3	equ	0xFF0
  5396                           postinc0	equ	0xFEE
  5397                           wreg	equ	0xFE8
  5398                           postdec1	equ	0xFE5
  5399                           plusw1	equ	0xFE3
  5400                           fsr1h	equ	0xFE2
  5401                           fsr1l	equ	0xFE1
  5402                           plusw2	equ	0xFDB
  5403                           status	equ	0xFD8
  5404                           
  5405 ;; *************** function _ui_init *****************
  5406 ;; Defined at:
  5407 ;;		line 101 in file "ui.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;Total ram usage:        0 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_system_full_init
  5431 ;;		_ui_run
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text15
  5436  00891C                     __ptext15:
  5437                           	opt stack 0
  5438  00891C                     _ui_init:
  5439                           	opt stack 29
  5440                           
  5441                           ;ui.c: 103: system_ui_inactive_count = 0;
  5442                           
  5443                           ;incstack = 0
  5444  00891C  0E00               	movlw	0
  5445  00891E  0101               	movlb	1	; () banked
  5446  008920  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5447  008922  0E00               	movlw	0
  5448  008924  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  5449                           
  5450                           ; BSR set to: 1
  5451                           ;ui.c: 105: LATCbits.LC2 = 1;
  5452  008926  848B               	bsf	3979,2,c	;volatile
  5453                           
  5454                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5455  008928  0E01               	movlw	1
  5456  00892A  0100               	movlb	0	; () banked
  5457  00892C  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  5458                           
  5459                           ; BSR set to: 0
  5460  00892E  0012               	return		;funcret
  5461  008930                     __end_of_ui_init:
  5462                           	opt stack 0
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           intcon	equ	0xFF2
  5468                           intcon3	equ	0xFF0
  5469                           postinc0	equ	0xFEE
  5470                           wreg	equ	0xFE8
  5471                           postdec1	equ	0xFE5
  5472                           plusw1	equ	0xFE3
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           plusw2	equ	0xFDB
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _flash_init *****************
  5479 ;; Defined at:
  5480 ;;		line 337 in file "flash.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    4
  5501 ;; This function calls:
  5502 ;;		__flash_set_page_size
  5503 ;;		_spi_init
  5504 ;;		_spi_set_configuration
  5505 ;; This function is called by:
  5506 ;;		_system_full_init
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text16
  5511  008844                     __ptext16:
  5512                           	opt stack 0
  5513  008844                     _flash_init:
  5514                           	opt stack 25
  5515                           
  5516                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;incstack = 0
  5520  008844  0E00               	movlw	0
  5521  008846  ECB3  F040         	call	_spi_init
  5522                           
  5523                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5524  00884A  0E00               	movlw	0
  5525  00884C  EC43  F023         	call	_spi_set_configuration
  5526                           
  5527                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5528  008850  0E00               	movlw	0
  5529  008852  ECFC  F037         	call	__flash_set_page_size
  5530                           
  5531                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5532  008856  0E01               	movlw	1
  5533  008858  EC43  F023         	call	_spi_set_configuration
  5534  00885C  0012               	return		;funcret
  5535  00885E                     __end_of_flash_init:
  5536                           	opt stack 0
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           intcon	equ	0xFF2
  5542                           intcon3	equ	0xFF0
  5543                           postinc0	equ	0xFEE
  5544                           wreg	equ	0xFE8
  5545                           postdec1	equ	0xFE5
  5546                           plusw1	equ	0xFE3
  5547                           fsr1h	equ	0xFE2
  5548                           fsr1l	equ	0xFE1
  5549                           plusw2	equ	0xFDB
  5550                           status	equ	0xFD8
  5551                           
  5552 ;; *************** function _spi_init *****************
  5553 ;; Defined at:
  5554 ;;		line 122 in file "spi.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  configuratio    1    wreg     enum E6749
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  configuratio    1    3[COMRAM] enum E6749
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;Total ram usage:        1 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    1
  5575 ;; This function calls:
  5576 ;;		__spi_init
  5577 ;; This function is called by:
  5578 ;;		_flash_init
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text17
  5583  008166                     __ptext17:
  5584                           	opt stack 0
  5585  008166                     _spi_init:
  5586                           	opt stack 27
  5587                           
  5588                           ;incstack = 0
  5589                           ;spi_init@configuration stored from wreg
  5590  008166  6E04               	movwf	spi_init@configuration,c
  5591                           
  5592                           ;spi.c: 124: switch(configuration)
  5593  008168  D012               	goto	l2887
  5594  00816A                     
  5595                           ;spi.c: 127: _spi_init(config_internal);
  5596  00816A  C169  F001         	movff	_config_internal,__spi_init@details
  5597  00816E  C16A  F002         	movff	_config_internal+1,__spi_init@details+1
  5598  008172  C16B  F003         	movff	_config_internal+2,__spi_init@details+2
  5599  008176  EC0C  F041         	call	__spi_init	;wreg free
  5600                           
  5601                           ;spi.c: 128: break;
  5602  00817A  D010               	goto	l2889
  5603  00817C                     
  5604                           ;spi.c: 131: _spi_init(config_external);
  5605  00817C  C166  F001         	movff	_config_external,__spi_init@details
  5606  008180  C167  F002         	movff	_config_external+1,__spi_init@details+1
  5607  008184  C168  F003         	movff	_config_external+2,__spi_init@details+2
  5608  008188  EC0C  F041         	call	__spi_init	;wreg free
  5609                           
  5610                           ;spi.c: 133: }
  5611                           
  5612                           ;spi.c: 132: break;
  5613  00818C  D007               	goto	l2889
  5614  00818E                     l2887:
  5615  00818E  5004               	movf	spi_init@configuration,w,c
  5616                           
  5617                           ; Switch size 1, requested type "space"
  5618                           ; Number of cases is 2, Range of values is 0 to 1
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte            7     4 (average)
  5622                           ;	Chosen strategy is simple_byte
  5623  008190  0A00               	xorlw	0	; case 0
  5624  008192  B4D8               	btfsc	status,2,c
  5625  008194  D7EA               	goto	l2888
  5626  008196  0A01               	xorlw	1	; case 1
  5627  008198  B4D8               	btfsc	status,2,c
  5628  00819A  D7F0               	goto	l2890
  5629  00819C                     l2889:
  5630                           
  5631                           ;spi.c: 135: active_configuration = configuration;
  5632  00819C  C004  F18A         	movff	spi_init@configuration,_active_configuration
  5633  0081A0  0012               	return		;funcret
  5634  0081A2                     __end_of_spi_init:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           intcon	equ	0xFF2
  5641                           intcon3	equ	0xFF0
  5642                           postinc0	equ	0xFEE
  5643                           wreg	equ	0xFE8
  5644                           postdec1	equ	0xFE5
  5645                           plusw1	equ	0xFE3
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           plusw2	equ	0xFDB
  5649                           status	equ	0xFD8
  5650                           
  5651 ;; *************** function __spi_init *****************
  5652 ;; Defined at:
  5653 ;;		line 25 in file "spi.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  details         3    0[COMRAM] struct .
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5667 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;Total ram usage:        3 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_spi_init
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text18
  5681  008218                     __ptext18:
  5682                           	opt stack 0
  5683  008218                     __spi_init:
  5684                           	opt stack 27
  5685                           
  5686                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5687                           
  5688                           ;incstack = 0
  5689  008218  0E55               	movlw	85
  5690  00821A  6EA7               	movwf	4007,c	;volsfr
  5691  00821C  0EAA               	movlw	170
  5692  00821E  6EA7               	movwf	4007,c	;volsfr
  5693  008220  010E               	movlb	14	; () banked
  5694  008222  91BF               	bcf	191,0,b	;volatile
  5695                           
  5696                           ;spi.c: 32: RPINR21 = 23;
  5697  008224  0E17               	movlw	23
  5698  008226  6FFC               	movwf	252,b	;volatile
  5699                           
  5700                           ;spi.c: 33: RPOR21 = 10;
  5701  008228  0E0A               	movlw	10
  5702  00822A  6FD5               	movwf	213,b	;volatile
  5703                           
  5704                           ;spi.c: 35: RPOR22 = 11;
  5705  00822C  0E0B               	movlw	11
  5706  00822E  6FD6               	movwf	214,b	;volatile
  5707                           
  5708                           ;spi.c: 36: RPINR22 = 22;
  5709  008230  0E16               	movlw	22
  5710  008232  6FFD               	movwf	253,b	;volatile
  5711                           
  5712                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5713  008234  0E55               	movlw	85
  5714  008236  6EA7               	movwf	4007,c	;volsfr
  5715  008238  0EAA               	movlw	170
  5716  00823A  6EA7               	movwf	4007,c	;volsfr
  5717                           
  5718                           ; BSR set to: 14
  5719  00823C  81BF               	bsf	191,0,b	;volatile
  5720                           
  5721                           ; BSR set to: 14
  5722                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5723  00823E  8E73               	bsf	3955,7,c	;volatile
  5724                           
  5725                           ; BSR set to: 14
  5726                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5727  008240  8C73               	bsf	3955,6,c	;volatile
  5728                           
  5729                           ; BSR set to: 14
  5730                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5731  008242  9872               	bcf	3954,4,c	;volatile
  5732                           
  5733                           ; BSR set to: 14
  5734                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5735  008244  9072               	bcf	3954,0,c	;volatile
  5736  008246  9272               	bcf	3954,1,c	;volatile
  5737  008248  9472               	bcf	3954,2,c	;volatile
  5738  00824A  9672               	bcf	3954,3,c	;volatile
  5739                           
  5740                           ; BSR set to: 14
  5741                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5742  00824C  8A72               	bsf	3954,5,c	;volatile
  5743                           
  5744                           ; BSR set to: 14
  5745  00824E  0012               	return		;funcret
  5746  008250                     __end_of__spi_init:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           intcon	equ	0xFF2
  5753                           intcon3	equ	0xFF0
  5754                           postinc0	equ	0xFEE
  5755                           wreg	equ	0xFE8
  5756                           postdec1	equ	0xFE5
  5757                           plusw1	equ	0xFE3
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           plusw2	equ	0xFDB
  5761                           status	equ	0xFD8
  5762                           
  5763 ;; *************** function __flash_set_page_size *****************
  5764 ;; Defined at:
  5765 ;;		line 95 in file "flash.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  size            1    wreg     enum E6886
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  size            1   23[COMRAM] enum E6886
  5770 ;;  command         4   19[COMRAM] unsigned char [4]
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5781 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;Total ram usage:        5 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    3
  5787 ;; This function calls:
  5788 ;;		__flash_is_busy
  5789 ;;		_memcpy
  5790 ;;		_spi_tx
  5791 ;; This function is called by:
  5792 ;;		_flash_init
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text19
  5797  006FF8                     __ptext19:
  5798                           	opt stack 0
  5799  006FF8                     __flash_set_page_size:
  5800                           	opt stack 25
  5801                           
  5802                           ; BSR set to: 14
  5803                           ;incstack = 0
  5804                           ;__flash_set_page_size@size stored from wreg
  5805  006FF8  6E18               	movwf	__flash_set_page_size@size,c
  5806  006FFA                     
  5807                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5808  006FFA  ECD5  F043         	call	__flash_is_busy	;wreg free
  5809  006FFE  0900               	iorlw	0
  5810  007000  A4D8               	btfss	status,2,c
  5811  007002  D7FB               	goto	l13849
  5812                           
  5813                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5814  007004  5018               	movf	__flash_set_page_size@size,w,c
  5815  007006  A4D8               	btfss	status,2,c
  5816  007008  D013               	goto	l1741
  5817                           
  5818                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5819  00700A  0E14               	movlw	low __flash_set_page_size@command
  5820  00700C  6E01               	movwf	memcpy@d1,c
  5821  00700E  0E00               	movlw	high __flash_set_page_size@command
  5822  007010  6E02               	movwf	memcpy@d1+1,c
  5823  007012  0EC4               	movlw	low _flash_command_pagesize_512
  5824  007014  6E03               	movwf	memcpy@s1,c
  5825  007016  0E8F               	movlw	high _flash_command_pagesize_512
  5826  007018  6E04               	movwf	memcpy@s1+1,c
  5827  00701A  5003               	movf	memcpy@s1,w,c
  5828  00701C  1004               	iorwf	memcpy@s1+1,w,c
  5829  00701E  A4D8               	btfss	status,2,c
  5830  007020  0E00               	movlw	low (__mediumconst shr (0+16))
  5831  007022  6E05               	movwf	memcpy@s1+2,c
  5832  007024  0E00               	movlw	0
  5833  007026  6E07               	movwf	memcpy@n+1,c
  5834  007028  0E04               	movlw	4
  5835  00702A  6E06               	movwf	memcpy@n,c
  5836  00702C  EC9C  F03A         	call	_memcpy	;wreg free
  5837  007030                     l1741:
  5838                           
  5839                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5840  007030  0418               	decf	__flash_set_page_size@size,w,c
  5841  007032  A4D8               	btfss	status,2,c
  5842  007034  D013               	goto	l1742
  5843                           
  5844                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5845  007036  0E14               	movlw	low __flash_set_page_size@command
  5846  007038  6E01               	movwf	memcpy@d1,c
  5847  00703A  0E00               	movlw	high __flash_set_page_size@command
  5848  00703C  6E02               	movwf	memcpy@d1+1,c
  5849  00703E  0EC0               	movlw	low _flash_command_pagesize_528
  5850  007040  6E03               	movwf	memcpy@s1,c
  5851  007042  0E8F               	movlw	high _flash_command_pagesize_528
  5852  007044  6E04               	movwf	memcpy@s1+1,c
  5853  007046  5003               	movf	memcpy@s1,w,c
  5854  007048  1004               	iorwf	memcpy@s1+1,w,c
  5855  00704A  A4D8               	btfss	status,2,c
  5856  00704C  0E00               	movlw	low (__mediumconst shr (0+16))
  5857  00704E  6E05               	movwf	memcpy@s1+2,c
  5858  007050  0E00               	movlw	0
  5859  007052  6E07               	movwf	memcpy@n+1,c
  5860  007054  0E04               	movlw	4
  5861  007056  6E06               	movwf	memcpy@n,c
  5862  007058  EC9C  F03A         	call	_memcpy	;wreg free
  5863  00705C                     l1742:
  5864                           
  5865                           ;flash.c: 109: spi_tx(command, 4);
  5866  00705C  0E14               	movlw	low __flash_set_page_size@command
  5867  00705E  6E01               	movwf	spi_tx@data,c
  5868  007060  0E00               	movlw	high __flash_set_page_size@command
  5869  007062  6E02               	movwf	spi_tx@data+1,c
  5870  007064  0E00               	movlw	0
  5871  007066  6E04               	movwf	spi_tx@length+1,c
  5872  007068  0E04               	movlw	4
  5873  00706A  6E03               	movwf	spi_tx@length,c
  5874  00706C  ECD0  F03C         	call	_spi_tx	;wreg free
  5875  007070  0012               	return		;funcret
  5876  007072                     __end_of__flash_set_page_size:
  5877                           	opt stack 0
  5878                           tblptru	equ	0xFF8
  5879                           tblptrh	equ	0xFF7
  5880                           tblptrl	equ	0xFF6
  5881                           tablat	equ	0xFF5
  5882                           intcon	equ	0xFF2
  5883                           intcon3	equ	0xFF0
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           postdec1	equ	0xFE5
  5887                           plusw1	equ	0xFE3
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           plusw2	equ	0xFDB
  5891                           status	equ	0xFD8
  5892                           
  5893 ;; *************** function _fat_init *****************
  5894 ;; Defined at:
  5895 ;;		line 1305 in file "fat16.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;Total ram usage:        0 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    6
  5916 ;; This function calls:
  5917 ;;		_fat_format
  5918 ;;		_fat_get_format_status
  5919 ;; This function is called by:
  5920 ;;		_system_full_init
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text20
  5925  008988                     __ptext20:
  5926                           	opt stack 0
  5927  008988                     _fat_init:
  5928                           	opt stack 23
  5929                           
  5930                           ;fat16.c: 1308: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5931                           
  5932                           ;incstack = 0
  5933  008988  EC2D  F032         	call	_fat_get_format_status	;wreg free
  5934  00898C  0900               	iorlw	0
  5935  00898E  A4D8               	btfss	status,2,c
  5936  008990  0012               	return	
  5937                           
  5938                           ;fat16.c: 1309: {;fat16.c: 1310: fat_format();
  5939  008992  EC6C  F014         	call	_fat_format	;wreg free
  5940  008996  0012               	return	
  5941  008998                     __end_of_fat_init:
  5942                           	opt stack 0
  5943                           tblptru	equ	0xFF8
  5944                           tblptrh	equ	0xFF7
  5945                           tblptrl	equ	0xFF6
  5946                           tablat	equ	0xFF5
  5947                           intcon	equ	0xFF2
  5948                           intcon3	equ	0xFF0
  5949                           postinc0	equ	0xFEE
  5950                           wreg	equ	0xFE8
  5951                           postdec1	equ	0xFE5
  5952                           plusw1	equ	0xFE3
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           plusw2	equ	0xFDB
  5956                           status	equ	0xFD8
  5957                           
  5958 ;; *************** function _fat_get_format_status *****************
  5959 ;; Defined at:
  5960 ;;		line 1217 in file "fat16.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  cntr            2   45[COMRAM] unsigned int 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      enum E6872
  5967 ;; Registers used:
  5968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5977 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5978 ;;Total ram usage:        4 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    5
  5981 ;; This function calls:
  5982 ;;		__get_fbr
  5983 ;;		__get_mbr
  5984 ;;		_flash_sector_read
  5985 ;; This function is called by:
  5986 ;;		_fat_init
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text21
  5991  00645A                     __ptext21:
  5992                           	opt stack 0
  5993  00645A                     _fat_get_format_status:
  5994                           	opt stack 23
  5995                           
  5996                           ;fat16.c: 1219: uint16_t cntr;;fat16.c: 1222: flash_sector_read(0, buffer);
  5997                           
  5998                           ;incstack = 0
  5999  00645A  0E00               	movlw	0
  6000  00645C  6E29               	movwf	flash_sector_read@page+1,c
  6001  00645E  0E00               	movlw	0
  6002  006460  6E28               	movwf	flash_sector_read@page,c
  6003  006462  0EC0               	movlw	low _buffer
  6004  006464  6E2A               	movwf	flash_sector_read@data,c
  6005  006466  0E03               	movlw	high _buffer
  6006  006468  6E2B               	movwf	flash_sector_read@data+1,c
  6007  00646A  ECF9  F041         	call	_flash_sector_read	;wreg free
  6008                           
  6009                           ;fat16.c: 1223: for(cntr=0; cntr<512; ++cntr)
  6010  00646E  0E00               	movlw	0
  6011  006470  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6012  006472  0E00               	movlw	0
  6013  006474  6E2E               	movwf	fat_get_format_status@cntr,c
  6014  006476                     l13877:
  6015  006476  0E02               	movlw	2
  6016  006478  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6017  00647A  B0D8               	btfsc	status,0,c
  6018  00647C  D016               	goto	u11000
  6019                           
  6020                           ;fat16.c: 1224: {;fat16.c: 1225: if(buffer[cntr] != _get_mbr(cntr))
  6021  00647E  0EC0               	movlw	low _buffer
  6022  006480  242E               	addwf	fat_get_format_status@cntr,w,c
  6023  006482  6ED9               	movwf	fsr2l,c
  6024  006484  0E03               	movlw	high _buffer
  6025  006486  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6026  006488  6EDA               	movwf	fsr2h,c
  6027  00648A  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6028  00648E  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6029  006492  EC6E  F02D         	call	__get_mbr	;wreg free
  6030  006496  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6031  006498  50DE               	movf	postinc2,w,c
  6032  00649A  182D               	xorwf	??_fat_get_format_status+1,w,c
  6033  00649C  B4D8               	btfsc	status,2,c
  6034  00649E  D002               	goto	l2222
  6035                           
  6036                           ;fat16.c: 1226: {;fat16.c: 1227: return DRIVE_NOT_FORMATED;
  6037  0064A0  0E00               	movlw	0
  6038  0064A2  0012               	return	
  6039  0064A4                     l2222:
  6040  0064A4  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6041  0064A6  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6042  0064A8  D7E6               	goto	l13877
  6043  0064AA                     u11000:
  6044                           
  6045                           ;fat16.c: 1228: };fat16.c: 1229: };fat16.c: 1232: flash_sector_read(1, buffer);
  6046  0064AA  0E00               	movlw	0
  6047  0064AC  6E29               	movwf	flash_sector_read@page+1,c
  6048  0064AE  0E01               	movlw	1
  6049  0064B0  6E28               	movwf	flash_sector_read@page,c
  6050  0064B2  0EC0               	movlw	low _buffer
  6051  0064B4  6E2A               	movwf	flash_sector_read@data,c
  6052  0064B6  0E03               	movlw	high _buffer
  6053  0064B8  6E2B               	movwf	flash_sector_read@data+1,c
  6054  0064BA  ECF9  F041         	call	_flash_sector_read	;wreg free
  6055                           
  6056                           ;fat16.c: 1233: for(cntr=0; cntr<512; ++cntr)
  6057  0064BE  0E00               	movlw	0
  6058  0064C0  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6059  0064C2  0E00               	movlw	0
  6060  0064C4  6E2E               	movwf	fat_get_format_status@cntr,c
  6061  0064C6                     l13895:
  6062  0064C6  0E02               	movlw	2
  6063  0064C8  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6064  0064CA  B0D8               	btfsc	status,0,c
  6065  0064CC  D016               	goto	u11030
  6066                           
  6067                           ;fat16.c: 1234: {;fat16.c: 1235: if(buffer[cntr] != _get_fbr(cntr))
  6068  0064CE  0EC0               	movlw	low _buffer
  6069  0064D0  242E               	addwf	fat_get_format_status@cntr,w,c
  6070  0064D2  6ED9               	movwf	fsr2l,c
  6071  0064D4  0E03               	movlw	high _buffer
  6072  0064D6  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6073  0064D8  6EDA               	movwf	fsr2h,c
  6074  0064DA  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6075  0064DE  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6076  0064E2  ECD1  F00E         	call	__get_fbr	;wreg free
  6077  0064E6  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6078  0064E8  50DE               	movf	postinc2,w,c
  6079  0064EA  182D               	xorwf	??_fat_get_format_status+1,w,c
  6080  0064EC  B4D8               	btfsc	status,2,c
  6081  0064EE  D002               	goto	l2226
  6082                           
  6083                           ;fat16.c: 1236: {;fat16.c: 1237: return DRIVE_NOT_FORMATED;
  6084  0064F0  0E00               	movlw	0
  6085  0064F2  0012               	return	
  6086  0064F4                     l2226:
  6087  0064F4  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6088  0064F6  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6089  0064F8  D7E6               	goto	l13895
  6090  0064FA                     u11030:
  6091                           
  6092                           ;fat16.c: 1238: };fat16.c: 1239: };fat16.c: 1242: return DRIVE_FORMATED;
  6093  0064FA  0E01               	movlw	1
  6094  0064FC  0012               	return	
  6095  0064FE                     __end_of_fat_get_format_status:
  6096                           	opt stack 0
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           intcon	equ	0xFF2
  6102                           intcon3	equ	0xFF0
  6103                           postinc0	equ	0xFEE
  6104                           wreg	equ	0xFE8
  6105                           postdec1	equ	0xFE5
  6106                           plusw1	equ	0xFE3
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           postinc2	equ	0xFDE
  6110                           plusw2	equ	0xFDB
  6111                           fsr2h	equ	0xFDA
  6112                           fsr2l	equ	0xFD9
  6113                           status	equ	0xFD8
  6114                           
  6115 ;; *************** function __system_timer0_init *****************
  6116 ;; Defined at:
  6117 ;;		line 112 in file "os.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_system_full_init
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text22
  6145  0087CC                     __ptext22:
  6146                           	opt stack 0
  6147  0087CC                     __system_timer0_init:
  6148                           	opt stack 29
  6149                           
  6150                           ;os.c: 115: T0CONbits.T0CS = 0;
  6151                           
  6152                           ;incstack = 0
  6153  0087CC  9AD5               	bcf	4053,5,c	;volatile
  6154                           
  6155                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6156  0087CE  9CD5               	bcf	4053,6,c	;volatile
  6157                           
  6158                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6159  0087D0  94D5               	bcf	4053,2,c	;volatile
  6160                           
  6161                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6162  0087D2  82D5               	bsf	4053,1,c	;volatile
  6163                           
  6164                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6165  0087D4  90D5               	bcf	4053,0,c	;volatile
  6166                           
  6167                           ;os.c: 123: T0CONbits.PSA = 0;
  6168  0087D6  96D5               	bcf	4053,3,c	;volatile
  6169                           
  6170                           ;os.c: 125: TMR0H = 0xD1;
  6171  0087D8  0ED1               	movlw	209
  6172  0087DA  6ED7               	movwf	4055,c	;volatile
  6173                           
  6174                           ;os.c: 126: TMR0L = 0x20;
  6175  0087DC  0E20               	movlw	32
  6176  0087DE  6ED6               	movwf	4054,c	;volatile
  6177                           
  6178                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6179  0087E0  8ED5               	bsf	4053,7,c	;volatile
  6180                           
  6181                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6182  0087E2  94F2               	bcf	intcon,2,c	;volatile
  6183                           
  6184                           ;os.c: 135: os.timeSlot = 0;
  6185  0087E4  0E00               	movlw	0
  6186  0087E6  0100               	movlb	0	; () banked
  6187  0087E8  6FC7               	movwf	(_os+2)& (0+255),b	;volatile
  6188                           
  6189                           ; BSR set to: 0
  6190  0087EA  0012               	return		;funcret
  6191  0087EC                     __end_of__system_timer0_init:
  6192                           	opt stack 0
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           intcon	equ	0xFF2
  6198                           intcon3	equ	0xFF0
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           postdec1	equ	0xFE5
  6202                           plusw1	equ	0xFE3
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           postinc2	equ	0xFDE
  6206                           plusw2	equ	0xFDB
  6207                           fsr2h	equ	0xFDA
  6208                           fsr2l	equ	0xFD9
  6209                           status	equ	0xFD8
  6210                           
  6211 ;; *************** function __system_encoder_init *****************
  6212 ;; Defined at:
  6213 ;;		line 73 in file "os.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;Total ram usage:        0 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_system_full_init
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text23
  6241  0081DE                     __ptext23:
  6242                           	opt stack 0
  6243  0081DE                     __system_encoder_init:
  6244                           	opt stack 29
  6245                           
  6246                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;incstack = 0
  6250  0081DE  0E55               	movlw	85
  6251  0081E0  6EA7               	movwf	4007,c	;volsfr
  6252  0081E2  0EAA               	movlw	170
  6253  0081E4  6EA7               	movwf	4007,c	;volsfr
  6254  0081E6  010E               	movlb	14	; () banked
  6255  0081E8  91BF               	bcf	191,0,b	;volatile
  6256                           
  6257                           ;os.c: 76: RPINR1 = 0;
  6258  0081EA  0E00               	movlw	0
  6259  0081EC  6FE1               	movwf	225,b	;volatile
  6260                           
  6261                           ;os.c: 77: RPINR3 = 9;
  6262  0081EE  0E09               	movlw	9
  6263  0081F0  6FE3               	movwf	227,b	;volatile
  6264                           
  6265                           ;os.c: 78: RPINR2 = 10;
  6266  0081F2  0E0A               	movlw	10
  6267  0081F4  6FE2               	movwf	226,b	;volatile
  6268                           
  6269                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6270  0081F6  0E55               	movlw	85
  6271  0081F8  6EA7               	movwf	4007,c	;volsfr
  6272  0081FA  0EAA               	movlw	170
  6273  0081FC  6EA7               	movwf	4007,c	;volsfr
  6274                           
  6275                           ; BSR set to: 14
  6276  0081FE  91BF               	bcf	191,0,b	;volatile
  6277                           
  6278                           ; BSR set to: 14
  6279                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6280  008200  9AF1               	bcf	intcon2,5,c	;volatile
  6281                           
  6282                           ; BSR set to: 14
  6283                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6284  008202  90F0               	bcf	intcon3,0,c	;volatile
  6285                           
  6286                           ; BSR set to: 14
  6287                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6288  008204  88F1               	bsf	intcon2,4,c	;volatile
  6289                           
  6290                           ; BSR set to: 14
  6291                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6292  008206  92F0               	bcf	intcon3,1,c	;volatile
  6293                           
  6294                           ; BSR set to: 14
  6295                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6296  008208  86F1               	bsf	intcon2,3,c	;volatile
  6297                           
  6298                           ; BSR set to: 14
  6299                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6300  00820A  94F0               	bcf	intcon3,2,c	;volatile
  6301                           
  6302                           ;os.c: 91: os.encoderCount = 0;
  6303  00820C  0E00               	movlw	0
  6304  00820E  0100               	movlb	0	; () banked
  6305  008210  6FC5               	movwf	_os& (0+255),b	;volatile
  6306                           
  6307                           ;os.c: 92: os.buttonCount = 0;
  6308  008212  0E00               	movlw	0
  6309  008214  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  6310                           
  6311                           ; BSR set to: 0
  6312  008216  0012               	return		;funcret
  6313  008218                     __end_of__system_encoder_init:
  6314                           	opt stack 0
  6315                           tblptru	equ	0xFF8
  6316                           tblptrh	equ	0xFF7
  6317                           tblptrl	equ	0xFF6
  6318                           tablat	equ	0xFF5
  6319                           intcon	equ	0xFF2
  6320                           intcon2	equ	0xFF1
  6321                           intcon3	equ	0xFF0
  6322                           postinc0	equ	0xFEE
  6323                           wreg	equ	0xFE8
  6324                           postdec1	equ	0xFE5
  6325                           plusw1	equ	0xFE3
  6326                           fsr1h	equ	0xFE2
  6327                           fsr1l	equ	0xFE1
  6328                           postinc2	equ	0xFDE
  6329                           plusw2	equ	0xFDB
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _spi_get_external_tx_buffer *****************
  6335 ;; Defined at:
  6336 ;;		line 75 in file "spi.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  2    0[COMRAM] PTR unsigned char 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;Total ram usage:        2 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_main
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text24
  6364  0089D0                     __ptext24:
  6365                           	opt stack 0
  6366  0089D0                     _spi_get_external_tx_buffer:
  6367                           	opt stack 30
  6368                           
  6369                           ;spi.c: 77: return _spi_external_tx_buffer;
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;incstack = 0
  6373  0089D0  0E40               	movlw	low __spi_external_tx_buffer
  6374  0089D2  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6375  0089D4  0E03               	movlw	high __spi_external_tx_buffer
  6376  0089D6  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6377  0089D8  0012               	return	
  6378  0089DA                     __end_of_spi_get_external_tx_buffer:
  6379                           	opt stack 0
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           intcon	equ	0xFF2
  6385                           intcon2	equ	0xFF1
  6386                           intcon3	equ	0xFF0
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           postdec1	equ	0xFE5
  6390                           plusw1	equ	0xFE3
  6391                           fsr1h	equ	0xFE2
  6392                           fsr1l	equ	0xFE1
  6393                           postinc2	equ	0xFDE
  6394                           plusw2	equ	0xFDB
  6395                           fsr2h	equ	0xFDA
  6396                           fsr2l	equ	0xFD9
  6397                           status	equ	0xFD8
  6398                           
  6399 ;; *************** function _spi_get_external_rx_buffer *****************
  6400 ;; Defined at:
  6401 ;;		line 80 in file "spi.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;		None
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  2    0[COMRAM] PTR unsigned char 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;Total ram usage:        2 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; This function calls:
  6422 ;;		Nothing
  6423 ;; This function is called by:
  6424 ;;		_main
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text25
  6429  0089DA                     __ptext25:
  6430                           	opt stack 0
  6431  0089DA                     _spi_get_external_rx_buffer:
  6432                           	opt stack 30
  6433                           
  6434                           ;spi.c: 82: return _spi_external_rx_buffer;
  6435                           
  6436                           ;incstack = 0
  6437  0089DA  0E00               	movlw	low __spi_external_rx_buffer
  6438  0089DC  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6439  0089DE  0E03               	movlw	high __spi_external_rx_buffer
  6440  0089E0  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6441  0089E2  0012               	return	
  6442  0089E4                     __end_of_spi_get_external_rx_buffer:
  6443                           	opt stack 0
  6444                           tblptru	equ	0xFF8
  6445                           tblptrh	equ	0xFF7
  6446                           tblptrl	equ	0xFF6
  6447                           tablat	equ	0xFF5
  6448                           intcon	equ	0xFF2
  6449                           intcon2	equ	0xFF1
  6450                           intcon3	equ	0xFF0
  6451                           postinc0	equ	0xFEE
  6452                           wreg	equ	0xFE8
  6453                           postdec1	equ	0xFE5
  6454                           plusw1	equ	0xFE3
  6455                           fsr1h	equ	0xFE2
  6456                           fsr1l	equ	0xFE1
  6457                           postinc2	equ	0xFDE
  6458                           plusw2	equ	0xFDB
  6459                           fsr2h	equ	0xFDA
  6460                           fsr2l	equ	0xFD9
  6461                           status	equ	0xFD8
  6462                           
  6463 ;; *************** function _jump_to_main_program *****************
  6464 ;; Defined at:
  6465 ;;		line 251 in file "os.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		None
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text26
  6493  008A74                     __ptext26:
  6494                           	opt stack 0
  6495  008A74                     _jump_to_main_program:
  6496                           	opt stack 30
  6497                           
  6498                           ;incstack = 0
  6499  008A74  EF00 F048          	goto	36864	; ;# 
  6500  008A78  0012               	return		;funcret
  6501  008A7A                     __end_of_jump_to_main_program:
  6502                           	opt stack 0
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           intcon	equ	0xFF2
  6508                           intcon2	equ	0xFF1
  6509                           intcon3	equ	0xFF0
  6510                           postinc0	equ	0xFEE
  6511                           wreg	equ	0xFE8
  6512                           postdec1	equ	0xFE5
  6513                           plusw1	equ	0xFE3
  6514                           fsr1h	equ	0xFE2
  6515                           fsr1l	equ	0xFE1
  6516                           postinc2	equ	0xFDE
  6517                           plusw2	equ	0xFDB
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           
  6522 ;; *************** function _bootloader_run *****************
  6523 ;; Defined at:
  6524 ;;		line 63 in file "bootloader.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  timeslot        1    wreg     unsigned char 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  timeslot        1   91[COMRAM] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  1    wreg      void 
  6531 ;; Registers used:
  6532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;Total ram usage:        1 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    9
  6545 ;; This function calls:
  6546 ;;		__bootloader_find_file
  6547 ;;		__bootloader_program
  6548 ;;		__bootloader_verify_file
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text27
  6555  00759E                     __ptext27:
  6556                           	opt stack 0
  6557  00759E                     _bootloader_run:
  6558                           	opt stack 21
  6559                           
  6560                           ;incstack = 0
  6561                           ;bootloader_run@timeslot stored from wreg
  6562  00759E  6E5C               	movwf	bootloader_run@timeslot,c
  6563                           
  6564                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6565  0075A0  0100               	movlb	0	; () banked
  6566  0075A2  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  6567  0075A4  B4D8               	btfsc	status,2,c
  6568  0075A6  0012               	return	
  6569  0075A8  D015               	goto	l2366
  6570  0075AA                     
  6571                           ; BSR set to: 0
  6572                           ;bootloader.c: 74: if(timeslot==0)
  6573                           
  6574                           ; BSR set to: 0
  6575  0075AA  505C               	movf	bootloader_run@timeslot,w,c
  6576  0075AC  A4D8               	btfss	status,2,c
  6577  0075AE  0012               	return	
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6581  0075B0  EC7F  F032         	call	__bootloader_find_file	;wreg free
  6582                           
  6583                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6584  0075B4  0012               	return	
  6585  0075B6                     
  6586                           ;bootloader.c: 81: if(timeslot==0)
  6587  0075B6  505C               	movf	bootloader_run@timeslot,w,c
  6588  0075B8  A4D8               	btfss	status,2,c
  6589  0075BA  0012               	return	
  6590                           
  6591                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6592  0075BC  EC7F  F032         	call	__bootloader_find_file	;wreg free
  6593                           
  6594                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6595  0075C0  0012               	return	
  6596  0075C2                     
  6597                           ;bootloader.c: 88: _bootloader_verify_file();
  6598  0075C2  ECCC  F007         	call	__bootloader_verify_file	;wreg free
  6599                           
  6600                           ;bootloader.c: 95: break;
  6601                           
  6602                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6603                           
  6604                           ;bootloader.c: 92: break;
  6605                           
  6606                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6607                           
  6608                           ;bootloader.c: 89: break;
  6609  0075C6  0012               	return	
  6610  0075C8                     
  6611                           ;bootloader.c: 98: if(timeslot==0)
  6612  0075C8  505C               	movf	bootloader_run@timeslot,w,c
  6613  0075CA  A4D8               	btfss	status,2,c
  6614  0075CC  0012               	return	
  6615                           
  6616                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6617  0075CE  EC4E  F002         	call	__bootloader_program	;wreg free
  6618                           
  6619                           ;bootloader.c: 106: }
  6620                           
  6621                           ;bootloader.c: 105: break;
  6622                           
  6623                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6624                           
  6625                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6626  0075D2  0012               	return	
  6627  0075D4                     l2366:
  6628  0075D4  0100               	movlb	0	; () banked
  6629  0075D6  51C9               	movf	(_os+4)& (0+255),w,b	;volatile
  6630                           
  6631                           ; Switch size 1, requested type "space"
  6632                           ; Number of cases is 7, Range of values is 16 to 112
  6633                           ; switch strategies available:
  6634                           ; Name         Instructions Cycles
  6635                           ; simple_byte           22    12 (average)
  6636                           ;	Chosen strategy is simple_byte
  6637  0075D8  0A10               	xorlw	16	; case 16
  6638  0075DA  B4D8               	btfsc	status,2,c
  6639  0075DC  D7E6               	goto	l2367
  6640  0075DE  0A30               	xorlw	48	; case 32
  6641  0075E0  B4D8               	btfsc	status,2,c
  6642  0075E2  D7E9               	goto	l2370
  6643  0075E4  0A10               	xorlw	16	; case 48
  6644  0075E6  B4D8               	btfsc	status,2,c
  6645  0075E8  D7EC               	goto	l2372
  6646  0075EA  0A70               	xorlw	112	; case 64
  6647  0075EC  B4D8               	btfsc	status,2,c
  6648  0075EE  0012               	return	
  6649  0075F0  0A10               	xorlw	16	; case 80
  6650  0075F2  B4D8               	btfsc	status,2,c
  6651  0075F4  0012               	return	
  6652  0075F6  0A30               	xorlw	48	; case 96
  6653  0075F8  B4D8               	btfsc	status,2,c
  6654  0075FA  D7E6               	goto	l2375
  6655  0075FC  0A10               	xorlw	16	; case 112
  6656  0075FE  0012               	return	
  6657  007600                     __end_of_bootloader_run:
  6658                           	opt stack 0
  6659                           tblptru	equ	0xFF8
  6660                           tblptrh	equ	0xFF7
  6661                           tblptrl	equ	0xFF6
  6662                           tablat	equ	0xFF5
  6663                           intcon	equ	0xFF2
  6664                           intcon2	equ	0xFF1
  6665                           intcon3	equ	0xFF0
  6666                           postinc0	equ	0xFEE
  6667                           wreg	equ	0xFE8
  6668                           postdec1	equ	0xFE5
  6669                           plusw1	equ	0xFE3
  6670                           fsr1h	equ	0xFE2
  6671                           fsr1l	equ	0xFE1
  6672                           postinc2	equ	0xFDE
  6673                           plusw2	equ	0xFDB
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function __bootloader_verify_file *****************
  6679 ;; Defined at:
  6680 ;;		line 182 in file "bootloader.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;		None
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  root           32   22[BANK0 ] struct .
  6685 ;;  address32       4   59[BANK0 ] unsigned long 
  6686 ;;  return_value    4   55[BANK0 ] unsigned long 
  6687 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;Total ram usage:       49 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    8
  6704 ;; This function calls:
  6705 ;;		__bootloader_check_address
  6706 ;;		_fat_get_file_information
  6707 ;;		_fat_get_file_size
  6708 ;;		_fat_read_from_file_fast
  6709 ;;		_parseHexFileEntry
  6710 ;; This function is called by:
  6711 ;;		_bootloader_run
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text28
  6716  000F98                     __ptext28:
  6717                           	opt stack 0
  6718  000F98                     __bootloader_verify_file:
  6719                           	opt stack 21
  6720                           
  6721                           ;bootloader.c: 184: uint8_t rec_counter;;bootloader.c: 185: uint32_t return_value = 0;
  6722                           
  6723                           ;incstack = 0
  6724  000F98  0E00               	movlw	0
  6725  000F9A  0100               	movlb	0	; () banked
  6726  000F9C  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6727  000F9E  0E00               	movlw	0
  6728  000FA0  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6729  000FA2  0E00               	movlw	0
  6730  000FA4  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6731  000FA6  0E00               	movlw	0
  6732  000FA8  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;bootloader.c: 186: uint32_t address32;;bootloader.c: 187: rootEntry_t root;;bootloader.
      +                          c: 189: if(hex_file_offset==0)
  6736  000FAA  51D7               	movf	_hex_file_offset& (0+255),w,b
  6737  000FAC  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6738  000FAE  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6739  000FB0  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6740  000FB2  A4D8               	btfss	status,2,c
  6741  000FB4  D010               	goto	l2397
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;bootloader.c: 190: {;bootloader.c: 192: fat_get_file_information(file_number, &root);
  6745  000FB6  0E76               	movlw	low __bootloader_verify_file@root
  6746  000FB8  6E30               	movwf	fat_get_file_information@data,c
  6747  000FBA  0E00               	movlw	high __bootloader_verify_file@root
  6748  000FBC  6E31               	movwf	fat_get_file_information@data+1,c
  6749  000FBE  51FF               	movf	_file_number& (0+255),w,b
  6750  000FC0  ECEA  F038         	call	_fat_get_file_information
  6751                           
  6752                           ;bootloader.c: 193: fast_read_cluster = root.firstCluster;
  6753  000FC4  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6754  000FC8  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6755                           
  6756                           ;bootloader.c: 194: fast_read_cluster_number = 0;
  6757  000FCC  0E00               	movlw	0
  6758  000FCE  0100               	movlb	0	; () banked
  6759  000FD0  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6760  000FD2  0E00               	movlw	0
  6761  000FD4  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  6762  000FD6                     l2397:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;bootloader.c: 195: };bootloader.c: 198: hex_file_size = fat_get_file_size(file_number);
  6766                           
  6767                           ; BSR set to: 0
  6768  000FD6  51FF               	movf	_file_number& (0+255),w,b
  6769  000FD8  ECCA  F039         	call	_fat_get_file_size
  6770  000FDC  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
  6771  000FE0  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6772  000FE4  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6773  000FE8  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6774                           
  6775                           ;bootloader.c: 201: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6776  000FEC  0E00               	movlw	0
  6777  000FEE  0100               	movlb	0	; () banked
  6778  000FF0  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6779  000FF2                     l14873:
  6780                           
  6781                           ; BSR set to: 0
  6782  000FF2  0E0F               	movlw	15
  6783  000FF4  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6784  000FF6  D001               	goto	l2398
  6785  000FF8  0012               	return	
  6786  000FFA                     l2398:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;bootloader.c: 202: {;bootloader.c: 204: if((hex_file_size-hex_file_offset)>=50)
  6790                           
  6791                           ; BSR set to: 0
  6792  000FFA  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6793  000FFE  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6794  001002  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6795  001006  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6796  00100A  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6797  00100C  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6798  00100E  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6799  001010  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6800  001012  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6801  001014  0E00               	movlw	0
  6802  001016  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6803  001018  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6804  00101A  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6805  00101C  0101               	movlb	1	; () banked
  6806  00101E  514A               	movf	_hex_file_size& (0+255),w,b
  6807  001020  0100               	movlb	0	; () banked
  6808  001022  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6809  001024  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6810  001026  0101               	movlb	1	; () banked
  6811  001028  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6812  00102A  0100               	movlb	0	; () banked
  6813  00102C  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6814  00102E  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6815  001030  0101               	movlb	1	; () banked
  6816  001032  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6817  001034  0100               	movlb	0	; () banked
  6818  001036  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6819  001038  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6820  00103A  0101               	movlb	1	; () banked
  6821  00103C  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6822  00103E  0100               	movlb	0	; () banked
  6823  001040  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6824  001042  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6825  001044  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6826  001046  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6827  001048  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6828  00104A  E104               	bnz	u11920
  6829  00104C  0E32               	movlw	50
  6830  00104E  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6831  001050  A0D8               	btfss	status,0,c
  6832  001052  D01F               	goto	l2400
  6833  001054                     u11920:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;bootloader.c: 205: {;bootloader.c: 207: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6837  001054  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6838  001058  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6839  00105C  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6840  001060  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6841  001064  0E32               	movlw	50
  6842  001066  6E46               	movwf	fat_read_from_file_fast@length,c
  6843  001068  0E00               	movlw	0
  6844  00106A  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6845  00106C  0E00               	movlw	0
  6846  00106E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6847  001070  0E00               	movlw	0
  6848  001072  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6849  001074  0E90               	movlw	low _file_buffer
  6850  001076  6E4A               	movwf	fat_read_from_file_fast@data,c
  6851  001078  0E02               	movlw	high _file_buffer
  6852  00107A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6853  00107C  0EFB               	movlw	low _fast_read_cluster
  6854  00107E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6855  001080  0E00               	movlw	high _fast_read_cluster
  6856  001082  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6857  001084  0EF9               	movlw	low _fast_read_cluster_number
  6858  001086  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6859  001088  0E00               	movlw	high _fast_read_cluster_number
  6860  00108A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6861  00108C  EC4B  F012         	call	_fat_read_from_file_fast	;wreg free
  6862                           
  6863                           ;bootloader.c: 208: }
  6864  001090  D03C               	goto	l2401
  6865  001092                     l2400:
  6866                           
  6867                           ;bootloader.c: 209: else;bootloader.c: 210: {;bootloader.c: 212: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6868  001092  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6869  001096  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6870  00109A  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6871  00109E  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6872  0010A2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6873  0010A6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6874  0010AA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6875  0010AE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6876  0010B2  0100               	movlb	0	; () banked
  6877  0010B4  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6878  0010B6  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6879  0010B8  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6880  0010BA  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6881  0010BC  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6882  0010BE  0E00               	movlw	0
  6883  0010C0  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6884  0010C2  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6885  0010C4  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6886  0010C6  0101               	movlb	1	; () banked
  6887  0010C8  514A               	movf	_hex_file_size& (0+255),w,b
  6888  0010CA  0100               	movlb	0	; () banked
  6889  0010CC  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6890  0010CE  6E46               	movwf	fat_read_from_file_fast@length,c
  6891  0010D0  0101               	movlb	1	; () banked
  6892  0010D2  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6893  0010D4  0100               	movlb	0	; () banked
  6894  0010D6  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6895  0010D8  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6896  0010DA  0101               	movlb	1	; () banked
  6897  0010DC  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6898  0010DE  0100               	movlb	0	; () banked
  6899  0010E0  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6900  0010E2  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6901  0010E4  0101               	movlb	1	; () banked
  6902  0010E6  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6903  0010E8  0100               	movlb	0	; () banked
  6904  0010EA  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6905  0010EC  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6906  0010EE  0E90               	movlw	low _file_buffer
  6907  0010F0  6E4A               	movwf	fat_read_from_file_fast@data,c
  6908  0010F2  0E02               	movlw	high _file_buffer
  6909  0010F4  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6910  0010F6  0EFB               	movlw	low _fast_read_cluster
  6911  0010F8  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6912  0010FA  0E00               	movlw	high _fast_read_cluster
  6913  0010FC  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6914  0010FE  0EF9               	movlw	low _fast_read_cluster_number
  6915  001100  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6916  001102  0E00               	movlw	high _fast_read_cluster_number
  6917  001104  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6918  001106  EC4B  F012         	call	_fat_read_from_file_fast	;wreg free
  6919  00110A                     l2401:
  6920                           
  6921                           ;bootloader.c: 213: };bootloader.c: 216: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6922  00110A  0E90               	movlw	low _file_buffer
  6923  00110C  6E0C               	movwf	parseHexFileEntry@data,c
  6924  00110E  0E02               	movlw	high _file_buffer
  6925  001110  6E0D               	movwf	parseHexFileEntry@data+1,c
  6926  001112  0E00               	movlw	0
  6927  001114  6E0E               	movwf	parseHexFileEntry@offset,c
  6928  001116  0E00               	movlw	0
  6929  001118  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6930  00111A  0E00               	movlw	0
  6931  00111C  6E10               	movwf	parseHexFileEntry@offset+2,c
  6932  00111E  0E00               	movlw	0
  6933  001120  6E11               	movwf	parseHexFileEntry@offset+3,c
  6934  001122  0E93               	movlw	low _hex_file_entry
  6935  001124  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6936  001126  0E01               	movlw	high _hex_file_entry
  6937  001128  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6938  00112A  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6939  00112E  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  6940  001132  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  6941  001136  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  6942  00113A  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  6943                           
  6944                           ;bootloader.c: 219: ++hex_file_entries;
  6945  00113E  0101               	movlb	1	; () banked
  6946  001140  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  6947  001142  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 1
  6950                           ;bootloader.c: 222: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  6951  001144  0E04               	movlw	4
  6952  001146  1997               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  6953  001148  A4D8               	btfss	status,2,c
  6954  00114A  D01C               	goto	l2402
  6955                           
  6956                           ; BSR set to: 1
  6957                           ;bootloader.c: 223: {;bootloader.c: 224: extended_linear_address = hex_file_entry.data[0
      +                          ];
  6958  00114C  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  6959  00114E  6F46               	movwf	_extended_linear_address& (0+255),b
  6960  001150  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  6961  001152  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  6962  001154  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  6963                           
  6964                           ; BSR set to: 1
  6965                           ;bootloader.c: 225: extended_linear_address <<= 8;
  6966  001156  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6967  00115A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6968  00115E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6969  001162  6B46               	clrf	_extended_linear_address& (0+255),b
  6970                           
  6971                           ; BSR set to: 1
  6972                           ;bootloader.c: 226: extended_linear_address |= hex_file_entry.data[1];
  6973  001164  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  6974  001166  1346               	iorwf	_extended_linear_address& (0+255),f,b
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;bootloader.c: 227: extended_linear_address <<= 8;
  6978  001168  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6979  00116C  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6980  001170  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6981  001174  6B46               	clrf	_extended_linear_address& (0+255),b
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;bootloader.c: 228: extended_linear_address <<= 8;
  6985  001176  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6986  00117A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6987  00117E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6988  001182  6B46               	clrf	_extended_linear_address& (0+255),b
  6989  001184                     l2402:
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;bootloader.c: 229: };bootloader.c: 232: if(hex_file_entry.recordType==RecordTypeData)
  6993                           
  6994                           ; BSR set to: 1
  6995  001184  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  6996  001186  A4D8               	btfss	status,2,c
  6997  001188  D05E               	goto	l2406
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;bootloader.c: 233: {;bootloader.c: 235: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7001  00118A  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7002  00118C  2546               	addwf	_extended_linear_address& (0+255),w,b
  7003  00118E  0100               	movlb	0	; () banked
  7004  001190  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7005  001192  0101               	movlb	1	; () banked
  7006  001194  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7007  001196  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7008  001198  0100               	movlb	0	; () banked
  7009  00119A  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7010  00119C  0E00               	movlw	0
  7011  00119E  0101               	movlb	1	; () banked
  7012  0011A0  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7013  0011A2  0100               	movlb	0	; () banked
  7014  0011A4  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7015  0011A6  0E00               	movlw	0
  7016  0011A8  0101               	movlb	1	; () banked
  7017  0011AA  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7018  0011AC  0100               	movlb	0	; () banked
  7019  0011AE  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7020                           
  7021                           ;bootloader.c: 238: if(address32<file_minimum_address)
  7022  0011B0  0101               	movlb	1	; () banked
  7023  0011B2  5152               	movf	_file_minimum_address& (0+255),w,b
  7024  0011B4  0100               	movlb	0	; () banked
  7025  0011B6  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7026  0011B8  0101               	movlb	1	; () banked
  7027  0011BA  5153               	movf	(_file_minimum_address+1)& (0+255),w,b
  7028  0011BC  0100               	movlb	0	; () banked
  7029  0011BE  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7030  0011C0  0101               	movlb	1	; () banked
  7031  0011C2  5154               	movf	(_file_minimum_address+2)& (0+255),w,b
  7032  0011C4  0100               	movlb	0	; () banked
  7033  0011C6  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7034  0011C8  0101               	movlb	1	; () banked
  7035  0011CA  5155               	movf	(_file_minimum_address+3)& (0+255),w,b
  7036  0011CC  0100               	movlb	0	; () banked
  7037  0011CE  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7038  0011D0  B0D8               	btfsc	status,0,c
  7039  0011D2  D008               	goto	l2404
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;bootloader.c: 239: {;bootloader.c: 240: file_minimum_address = address32;
  7043  0011D4  C09B  F152         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7044  0011D8  C09C  F153         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7045  0011DC  C09D  F154         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7046  0011E0  C09E  F155         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7047  0011E4                     l2404:
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;bootloader.c: 241: };bootloader.c: 242: if(address32>file_maximum_address)
  7051                           
  7052                           ; BSR set to: 0
  7053  0011E4  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7054  0011E6  0101               	movlb	1	; () banked
  7055  0011E8  5D4E               	subwf	_file_maximum_address& (0+255),w,b
  7056  0011EA  0100               	movlb	0	; () banked
  7057  0011EC  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7058  0011EE  0101               	movlb	1	; () banked
  7059  0011F0  594F               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7060  0011F2  0100               	movlb	0	; () banked
  7061  0011F4  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7062  0011F6  0101               	movlb	1	; () banked
  7063  0011F8  5950               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7064  0011FA  0100               	movlb	0	; () banked
  7065  0011FC  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7066  0011FE  0101               	movlb	1	; () banked
  7067  001200  5951               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7068  001202  B0D8               	btfsc	status,0,c
  7069  001204  D008               	goto	l2405
  7070                           
  7071                           ; BSR set to: 1
  7072                           ;bootloader.c: 243: {;bootloader.c: 244: file_maximum_address = address32;
  7073  001206  C09B  F14E         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7074  00120A  C09C  F14F         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7075  00120E  C09D  F150         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7076  001212  C09E  F151         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7077  001216                     l2405:
  7078                           
  7079                           ; BSR set to: 1
  7080                           ;bootloader.c: 245: };bootloader.c: 248: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7081                           
  7082                           ; BSR set to: 1
  7083  001216  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7084  00121A  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7085  00121E  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7086  001222  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7087  001226  C193  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7088  00122A  ECC6  F02B         	call	__bootloader_check_address	;wreg free
  7089  00122E  0AFF               	xorlw	255
  7090  001230  A4D8               	btfss	status,2,c
  7091  001232  D009               	goto	l2406
  7092                           
  7093                           ;bootloader.c: 249: {;bootloader.c: 251: last_error = ShortRecordErrorAddressRange;
  7094  001234  0E0B               	movlw	11
  7095  001236  0101               	movlb	1	; () banked
  7096  001238  6F8C               	movwf	_last_error& (0+255),b
  7097                           
  7098                           ;bootloader.c: 253: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7099  00123A  0E50               	movlw	80
  7100  00123C  0100               	movlb	0	; () banked
  7101  00123E  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7102                           
  7103                           ;bootloader.c: 254: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7104  001240  0E50               	movlw	80
  7105  001242  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7106                           
  7107                           ;bootloader.c: 255: break;
  7108  001244  0012               	return	
  7109  001246                     l2406:
  7110                           
  7111                           ;bootloader.c: 256: };bootloader.c: 257: };bootloader.c: 259: if(return_value==0)
  7112                           
  7113                           ; BSR set to: 0
  7114                           
  7115                           ; BSR set to: 0
  7116  001246  0100               	movlb	0	; () banked
  7117  001248  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7118  00124A  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7119  00124C  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7120  00124E  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7121  001250  A4D8               	btfss	status,2,c
  7122  001252  D027               	goto	l2407
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;bootloader.c: 260: {;bootloader.c: 263: total_hex_file_entries = hex_file_entries;
  7126  001254  C178  F176         	movff	_hex_file_entries,_total_hex_file_entries
  7127  001258  C179  F177         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;bootloader.c: 264: hex_file_entries = 0;
  7131  00125C  0E00               	movlw	0
  7132  00125E  0101               	movlb	1	; () banked
  7133  001260  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
  7134  001262  0E00               	movlw	0
  7135  001264  6F78               	movwf	_hex_file_entries& (0+255),b
  7136                           
  7137                           ;bootloader.c: 265: hex_file_offset = 0;
  7138  001266  0E00               	movlw	0
  7139  001268  0100               	movlb	0	; () banked
  7140  00126A  6FD7               	movwf	_hex_file_offset& (0+255),b
  7141  00126C  0E00               	movlw	0
  7142  00126E  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
  7143  001270  0E00               	movlw	0
  7144  001272  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
  7145  001274  0E00               	movlw	0
  7146  001276  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
  7147                           
  7148                           ;bootloader.c: 266: extended_linear_address = 0;
  7149  001278  0E00               	movlw	0
  7150  00127A  0101               	movlb	1	; () banked
  7151  00127C  6F46               	movwf	_extended_linear_address& (0+255),b
  7152  00127E  0E00               	movlw	0
  7153  001280  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7154  001282  0E00               	movlw	0
  7155  001284  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7156  001286  0E00               	movlw	0
  7157  001288  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7158                           
  7159                           ;bootloader.c: 267: flash_pages_written = 0;
  7160  00128A  0E00               	movlw	0
  7161  00128C  6F75               	movwf	(_flash_pages_written+1)& (0+255),b
  7162  00128E  0E00               	movlw	0
  7163  001290  6F74               	movwf	_flash_pages_written& (0+255),b
  7164                           
  7165                           ;bootloader.c: 268: start_from_byte_next = 0;
  7166  001292  0E00               	movlw	0
  7167  001294  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7168                           
  7169                           ;bootloader.c: 270: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7170  001296  0E40               	movlw	64
  7171  001298  0100               	movlb	0	; () banked
  7172  00129A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7173                           
  7174                           ;bootloader.c: 271: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7175  00129C  0E40               	movlw	64
  7176  00129E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7177                           
  7178                           ;bootloader.c: 272: break;
  7179  0012A0  0012               	return	
  7180  0012A2                     l2407:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;bootloader.c: 274: else if(return_value>0xFFFFFFF0)
  7184                           
  7185                           ; BSR set to: 0
  7186  0012A2  0EF1               	movlw	241
  7187  0012A4  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7188  0012A6  0EFF               	movlw	255
  7189  0012A8  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7190  0012AA  0EFF               	movlw	255
  7191  0012AC  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7192  0012AE  0EFF               	movlw	255
  7193  0012B0  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7194  0012B2  A0D8               	btfss	status,0,c
  7195  0012B4  D009               	goto	l2409
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;bootloader.c: 275: {;bootloader.c: 277: last_error = return_value & 0xF;
  7199  0012B6  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7200  0012B8  0B0F               	andlw	15
  7201  0012BA  0101               	movlb	1	; () banked
  7202  0012BC  6F8C               	movwf	_last_error& (0+255),b
  7203                           
  7204                           ; BSR set to: 1
  7205                           ;bootloader.c: 279: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7206  0012BE  0E50               	movlw	80
  7207  0012C0  0100               	movlb	0	; () banked
  7208  0012C2  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;bootloader.c: 280: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7212  0012C4  0E50               	movlw	80
  7213  0012C6  D7EB               	goto	L1
  7214  0012C8                     l2409:
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;bootloader.c: 283: else;bootloader.c: 284: {;bootloader.c: 286: hex_file_offset += retu
      +                          rn_value;
  7218                           
  7219                           ; BSR set to: 0
  7220  0012C8  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7221  0012CA  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7222  0012CC  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7223  0012CE  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7224  0012D0  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7225  0012D2  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7226  0012D4  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7227  0012D6  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7228                           
  7229                           ; BSR set to: 0
  7230                           
  7231                           ; BSR set to: 0
  7232                           
  7233                           ; BSR set to: 0
  7234  0012D8  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7235  0012DA  D68B               	goto	l14873
  7236  0012DC                     __end_of__bootloader_verify_file:
  7237                           	opt stack 0
  7238                           tblptru	equ	0xFF8
  7239                           tblptrh	equ	0xFF7
  7240                           tblptrl	equ	0xFF6
  7241                           tablat	equ	0xFF5
  7242                           intcon	equ	0xFF2
  7243                           intcon2	equ	0xFF1
  7244                           intcon3	equ	0xFF0
  7245                           postinc0	equ	0xFEE
  7246                           wreg	equ	0xFE8
  7247                           postdec1	equ	0xFE5
  7248                           plusw1	equ	0xFE3
  7249                           fsr1h	equ	0xFE2
  7250                           fsr1l	equ	0xFE1
  7251                           postinc2	equ	0xFDE
  7252                           plusw2	equ	0xFDB
  7253                           fsr2h	equ	0xFDA
  7254                           fsr2l	equ	0xFD9
  7255                           status	equ	0xFD8
  7256                           
  7257 ;; *************** function __bootloader_program *****************
  7258 ;; Defined at:
  7259 ;;		line 291 in file "bootloader.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  root           32   28[BANK0 ] struct .
  7264 ;;  address32       4   64[BANK0 ] unsigned long 
  7265 ;;  return_value    4   60[BANK0 ] unsigned long 
  7266 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7267 ;;  cntr            2   69[BANK0 ] unsigned int 
  7268 ;;  address_with    2   26[BANK0 ] unsigned int 
  7269 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7270 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7271 ;;		 -> pageBuffer(1024), 
  7272 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      void 
  7275 ;; Registers used:
  7276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;Total ram usage:       59 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    8
  7289 ;; This function calls:
  7290 ;;		__bootloader_check_address
  7291 ;;		_fat_get_file_information
  7292 ;;		_fat_read_from_file_fast
  7293 ;;		_internalFlash_addressWithinPage
  7294 ;;		_internalFlash_erasePage
  7295 ;;		_internalFlash_getBuffer
  7296 ;;		_internalFlash_pageFromAddress
  7297 ;;		_internalFlash_readPage
  7298 ;;		_internalFlash_writePage
  7299 ;;		_parseHexFileEntry
  7300 ;; This function is called by:
  7301 ;;		_bootloader_run
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text29
  7306  00049C                     __ptext29:
  7307                           	opt stack 0
  7308  00049C                     __bootloader_program:
  7309                           	opt stack 21
  7310                           
  7311                           ;bootloader.c: 293: uint16_t cntr;;bootloader.c: 294: uint8_t* buffer;;bootloader.c: 295
      +                          : uint16_t entry_page;;bootloader.c: 296: uint16_t page_to_write = 0;
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;incstack = 0
  7315  00049C  0E00               	movlw	0
  7316  00049E  0100               	movlb	0	; () banked
  7317  0004A0  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7318  0004A2  0E00               	movlw	0
  7319  0004A4  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7320                           
  7321                           ;bootloader.c: 297: uint8_t start_from_byte;;bootloader.c: 298: uint32_t address32;;boot
      +                          loader.c: 299: uint32_t return_value = 0;
  7322  0004A6  0E00               	movlw	0
  7323  0004A8  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7324  0004AA  0E00               	movlw	0
  7325  0004AC  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7326  0004AE  0E00               	movlw	0
  7327  0004B0  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7328  0004B2  0E00               	movlw	0
  7329  0004B4  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;bootloader.c: 300: uint16_t address_within_page;;bootloader.c: 301: rootEntry_t root;;b
      +                          ootloader.c: 303: if(hex_file_offset==0)
  7333  0004B6  51D7               	movf	_hex_file_offset& (0+255),w,b
  7334  0004B8  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7335  0004BA  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7336  0004BC  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7337  0004BE  A4D8               	btfss	status,2,c
  7338  0004C0  D010               	goto	l2414
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;bootloader.c: 304: {;bootloader.c: 306: fat_get_file_information(file_number, &root);
  7342  0004C2  0E7C               	movlw	low __bootloader_program@root
  7343  0004C4  6E30               	movwf	fat_get_file_information@data,c
  7344  0004C6  0E00               	movlw	high __bootloader_program@root
  7345  0004C8  6E31               	movwf	fat_get_file_information@data+1,c
  7346  0004CA  51FF               	movf	_file_number& (0+255),w,b
  7347  0004CC  ECEA  F038         	call	_fat_get_file_information
  7348                           
  7349                           ;bootloader.c: 307: fast_read_cluster = root.firstCluster;
  7350  0004D0  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7351  0004D4  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7352                           
  7353                           ;bootloader.c: 308: fast_read_cluster_number = 0;
  7354  0004D8  0E00               	movlw	0
  7355  0004DA  0100               	movlb	0	; () banked
  7356  0004DC  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7357  0004DE  0E00               	movlw	0
  7358  0004E0  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7359  0004E2                     l2414:
  7360                           
  7361                           ;bootloader.c: 313: {;bootloader.c: 318: if((hex_file_size-hex_file_offset)>=50)
  7362                           
  7363                           ; BSR set to: 0
  7364                           
  7365                           ;bootloader.c: 309: };bootloader.c: 312: while(1)
  7366                           
  7367                           ; BSR set to: 0
  7368  0004E2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7369  0004E6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7370  0004EA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7371  0004EE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7372  0004F2  0100               	movlb	0	; () banked
  7373  0004F4  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7374  0004F6  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7375  0004F8  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7376  0004FA  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7377  0004FC  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7378  0004FE  0E00               	movlw	0
  7379  000500  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7380  000502  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7381  000504  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7382  000506  0101               	movlb	1	; () banked
  7383  000508  514A               	movf	_hex_file_size& (0+255),w,b
  7384  00050A  0100               	movlb	0	; () banked
  7385  00050C  256E               	addwf	??__bootloader_program& (0+255),w,b
  7386  00050E  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7387  000510  0101               	movlb	1	; () banked
  7388  000512  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7389  000514  0100               	movlb	0	; () banked
  7390  000516  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7391  000518  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7392  00051A  0101               	movlb	1	; () banked
  7393  00051C  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7394  00051E  0100               	movlb	0	; () banked
  7395  000520  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7396  000522  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7397  000524  0101               	movlb	1	; () banked
  7398  000526  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7399  000528  0100               	movlb	0	; () banked
  7400  00052A  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7401  00052C  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7402  00052E  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7403  000530  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7404  000532  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7405  000534  E104               	bnz	u12020
  7406  000536  0E32               	movlw	50
  7407  000538  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7408  00053A  A0D8               	btfss	status,0,c
  7409  00053C  D01F               	goto	l2416
  7410  00053E                     u12020:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;bootloader.c: 319: {;bootloader.c: 321: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7414  00053E  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7415  000542  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7416  000546  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7417  00054A  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7418  00054E  0E32               	movlw	50
  7419  000550  6E46               	movwf	fat_read_from_file_fast@length,c
  7420  000552  0E00               	movlw	0
  7421  000554  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7422  000556  0E00               	movlw	0
  7423  000558  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7424  00055A  0E00               	movlw	0
  7425  00055C  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7426  00055E  0E90               	movlw	low _file_buffer
  7427  000560  6E4A               	movwf	fat_read_from_file_fast@data,c
  7428  000562  0E02               	movlw	high _file_buffer
  7429  000564  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7430  000566  0EFB               	movlw	low _fast_read_cluster
  7431  000568  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7432  00056A  0E00               	movlw	high _fast_read_cluster
  7433  00056C  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7434  00056E  0EF9               	movlw	low _fast_read_cluster_number
  7435  000570  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7436  000572  0E00               	movlw	high _fast_read_cluster_number
  7437  000574  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7438  000576  EC4B  F012         	call	_fat_read_from_file_fast	;wreg free
  7439                           
  7440                           ;bootloader.c: 322: }
  7441  00057A  D03C               	goto	l2417
  7442  00057C                     l2416:
  7443                           
  7444                           ;bootloader.c: 323: else;bootloader.c: 324: {;bootloader.c: 326: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7445  00057C  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7446  000580  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7447  000584  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7448  000588  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7449  00058C  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7450  000590  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7451  000594  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7452  000598  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7453  00059C  0100               	movlb	0	; () banked
  7454  00059E  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7455  0005A0  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7456  0005A2  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7457  0005A4  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7458  0005A6  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7459  0005A8  0E00               	movlw	0
  7460  0005AA  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7461  0005AC  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7462  0005AE  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7463  0005B0  0101               	movlb	1	; () banked
  7464  0005B2  514A               	movf	_hex_file_size& (0+255),w,b
  7465  0005B4  0100               	movlb	0	; () banked
  7466  0005B6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7467  0005B8  6E46               	movwf	fat_read_from_file_fast@length,c
  7468  0005BA  0101               	movlb	1	; () banked
  7469  0005BC  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7470  0005BE  0100               	movlb	0	; () banked
  7471  0005C0  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7472  0005C2  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7473  0005C4  0101               	movlb	1	; () banked
  7474  0005C6  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7475  0005C8  0100               	movlb	0	; () banked
  7476  0005CA  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7477  0005CC  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7478  0005CE  0101               	movlb	1	; () banked
  7479  0005D0  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7480  0005D2  0100               	movlb	0	; () banked
  7481  0005D4  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7482  0005D6  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7483  0005D8  0E90               	movlw	low _file_buffer
  7484  0005DA  6E4A               	movwf	fat_read_from_file_fast@data,c
  7485  0005DC  0E02               	movlw	high _file_buffer
  7486  0005DE  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7487  0005E0  0EFB               	movlw	low _fast_read_cluster
  7488  0005E2  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7489  0005E4  0E00               	movlw	high _fast_read_cluster
  7490  0005E6  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7491  0005E8  0EF9               	movlw	low _fast_read_cluster_number
  7492  0005EA  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7493  0005EC  0E00               	movlw	high _fast_read_cluster_number
  7494  0005EE  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7495  0005F0  EC4B  F012         	call	_fat_read_from_file_fast	;wreg free
  7496  0005F4                     l2417:
  7497                           
  7498                           ;bootloader.c: 327: };bootloader.c: 330: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7499  0005F4  0E90               	movlw	low _file_buffer
  7500  0005F6  6E0C               	movwf	parseHexFileEntry@data,c
  7501  0005F8  0E02               	movlw	high _file_buffer
  7502  0005FA  6E0D               	movwf	parseHexFileEntry@data+1,c
  7503  0005FC  0E00               	movlw	0
  7504  0005FE  6E0E               	movwf	parseHexFileEntry@offset,c
  7505  000600  0E00               	movlw	0
  7506  000602  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7507  000604  0E00               	movlw	0
  7508  000606  6E10               	movwf	parseHexFileEntry@offset+2,c
  7509  000608  0E00               	movlw	0
  7510  00060A  6E11               	movwf	parseHexFileEntry@offset+3,c
  7511  00060C  0E93               	movlw	low _hex_file_entry
  7512  00060E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7513  000610  0E01               	movlw	high _hex_file_entry
  7514  000612  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7515  000614  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7516  000618  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7517  00061C  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7518  000620  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7519  000624  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7520                           
  7521                           ;bootloader.c: 333: ++hex_file_entries;
  7522  000628  0101               	movlb	1	; () banked
  7523  00062A  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7524  00062C  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7525                           
  7526                           ; BSR set to: 1
  7527                           ;bootloader.c: 336: if(return_value>RecordErrorNoError)
  7528  00062E  0EF1               	movlw	241
  7529  000630  0100               	movlb	0	; () banked
  7530  000632  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7531  000634  0EFF               	movlw	255
  7532  000636  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7533  000638  0EFF               	movlw	255
  7534  00063A  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7535  00063C  0EFF               	movlw	255
  7536  00063E  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7537  000640  A0D8               	btfss	status,0,c
  7538  000642  D005               	goto	l2418
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;bootloader.c: 337: {;bootloader.c: 339: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7542  000644  0E50               	movlw	80
  7543  000646  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7544                           
  7545                           ;bootloader.c: 340: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7546  000648  0E50               	movlw	80
  7547  00064A  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;bootloader.c: 341: return;
  7551  00064C  0012               	return	
  7552  00064E                     l2418:
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;bootloader.c: 343: else;bootloader.c: 344: {;bootloader.c: 346: hex_file_offset += retu
      +                          rn_value;
  7556                           
  7557                           ; BSR set to: 0
  7558  00064E  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7559  000650  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7560  000652  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7561  000654  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7562  000656  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7563  000658  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7564  00065A  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7565  00065C  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;bootloader.c: 347: };bootloader.c: 349: switch(hex_file_entry.recordType)
  7569  00065E  D0FA               	goto	l2421
  7570  000660                     
  7571                           ;bootloader.c: 355: extended_linear_address = hex_file_entry.data[0];
  7572                           
  7573                           ; BSR set to: 0
  7574  000660  0101               	movlb	1	; () banked
  7575  000662  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7576  000664  6F46               	movwf	_extended_linear_address& (0+255),b
  7577  000666  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7578  000668  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7579  00066A  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7580                           
  7581                           ; BSR set to: 1
  7582                           ;bootloader.c: 356: extended_linear_address <<= 8;
  7583  00066C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7584  000670  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7585  000674  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7586  000678  6B46               	clrf	_extended_linear_address& (0+255),b
  7587                           
  7588                           ; BSR set to: 1
  7589                           ;bootloader.c: 357: extended_linear_address |= hex_file_entry.data[1];
  7590  00067A  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7591  00067C  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;bootloader.c: 358: extended_linear_address <<= 8;
  7595  00067E  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7596  000682  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7597  000686  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7598  00068A  6B46               	clrf	_extended_linear_address& (0+255),b
  7599                           
  7600                           ; BSR set to: 1
  7601                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7602  00068C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7603  000690  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7604  000694  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7605  000698  6B46               	clrf	_extended_linear_address& (0+255),b
  7606                           
  7607                           ; BSR set to: 1
  7608                           ;bootloader.c: 361: break;
  7609                           
  7610                           ;bootloader.c: 360: continue;
  7611  00069A  D723               	goto	l2414
  7612  00069C                     l2425:
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;bootloader.c: 366: start_from_byte = start_from_byte_next;
  7616  00069C  C18B  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7617                           
  7618                           ; BSR set to: 1
  7619                           ;bootloader.c: 368: start_from_byte_next = 0;
  7620  0006A0  0E00               	movlw	0
  7621  0006A2  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7622                           
  7623                           ; BSR set to: 1
  7624                           ;bootloader.c: 371: address32 = extended_linear_address + hex_file_entry.address;
  7625  0006A4  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7626  0006A6  2546               	addwf	_extended_linear_address& (0+255),w,b
  7627  0006A8  0100               	movlb	0	; () banked
  7628  0006AA  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  7629  0006AC  0101               	movlb	1	; () banked
  7630  0006AE  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7631  0006B0  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7632  0006B2  0100               	movlb	0	; () banked
  7633  0006B4  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7634  0006B6  0E00               	movlw	0
  7635  0006B8  0101               	movlb	1	; () banked
  7636  0006BA  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7637  0006BC  0100               	movlb	0	; () banked
  7638  0006BE  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7639  0006C0  0E00               	movlw	0
  7640  0006C2  0101               	movlb	1	; () banked
  7641  0006C4  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7642  0006C6  0100               	movlb	0	; () banked
  7643  0006C8  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;bootloader.c: 372: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7647  0006CA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7648  0006CC  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7649  0006CE  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7650  0006D0  0E00               	movlw	0
  7651  0006D2  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7652  0006D4  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7653  0006D6  0E00               	movlw	0
  7654  0006D8  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7655  0006DA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7656  0006DC  0E00               	movlw	0
  7657  0006DE  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7658  0006E0  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7659  0006E2  EC14  F044         	call	_internalFlash_pageFromAddress	;wreg free
  7660  0006E6  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7661  0006EA  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7662                           
  7663                           ;bootloader.c: 375: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7664  0006EE  0100               	movlb	0	; () banked
  7665  0006F0  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7666  0006F2  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7667  0006F4  6E01               	movwf	__bootloader_check_address@address,c
  7668  0006F6  0E00               	movlw	0
  7669  0006F8  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7670  0006FA  6E02               	movwf	__bootloader_check_address@address+1,c
  7671  0006FC  0E00               	movlw	0
  7672  0006FE  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7673  000700  6E03               	movwf	__bootloader_check_address@address+2,c
  7674  000702  0E00               	movlw	0
  7675  000704  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7676  000706  6E04               	movwf	__bootloader_check_address@address+3,c
  7677  000708  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7678  00070A  0800               	sublw	0
  7679  00070C  0101               	movlb	1	; () banked
  7680  00070E  2593               	addwf	_hex_file_entry& (0+255),w,b
  7681  000710  6E05               	movwf	__bootloader_check_address@dataLength,c
  7682  000712  ECC6  F02B         	call	__bootloader_check_address	;wreg free
  7683  000716  0900               	iorlw	0
  7684  000718  A4D8               	btfss	status,2,c
  7685  00071A  D6E3               	goto	l2414
  7686                           
  7687                           ;bootloader.c: 378: };bootloader.c: 380: if(page_to_write==0)
  7688                           
  7689                           ;bootloader.c: 376: {;bootloader.c: 377: break;
  7690  00071C  0100               	movlb	0	; () banked
  7691  00071E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7692  000720  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7693  000722  A4D8               	btfss	status,2,c
  7694  000724  D010               	goto	l2427
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;bootloader.c: 381: {;bootloader.c: 385: page_to_write = entry_page;
  7698  000726  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7699  00072A  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;bootloader.c: 386: internalFlash_readPage(page_to_write);
  7703  00072E  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7704  000732  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7705  000736  EC10  F040         	call	_internalFlash_readPage	;wreg free
  7706                           
  7707                           ;bootloader.c: 387: buffer = internalFlash_getBuffer();
  7708  00073A  ECF2  F044         	call	_internalFlash_getBuffer	;wreg free
  7709  00073E  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7710  000742  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7711  000746                     l2427:
  7712                           
  7713                           ;bootloader.c: 388: };bootloader.c: 390: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7714  000746  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7715  00074A  0100               	movlb	0	; () banked
  7716  00074C  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7717  00074E  D05D               	goto	l2428
  7718  000750                     
  7719                           ; BSR set to: 0
  7720                           ;bootloader.c: 391: {;bootloader.c: 394: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7721                           
  7722                           ; BSR set to: 0
  7723  000750  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7724  000752  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7725  000754  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7726  000756  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7727  000758  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7728  00075A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7729  00075C  0E00               	movlw	0
  7730  00075E  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7731  000760  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7732  000762  0E00               	movlw	0
  7733  000764  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7734  000766  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7735  000768  EC14  F044         	call	_internalFlash_pageFromAddress	;wreg free
  7736  00076C  0100               	movlb	0	; () banked
  7737  00076E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7738  000770  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7739  000772  E12A               	bnz	l15005
  7740  000774  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7741  000776  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7742  000778  A4D8               	btfss	status,2,c
  7743  00077A  D026               	goto	l2430
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;bootloader.c: 395: {;bootloader.c: 396: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7747  00077C  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7748  00077E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7749  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7750  000782  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7751  000784  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7752  000786  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7753  000788  0E00               	movlw	0
  7754  00078A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7755  00078C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7756  00078E  0E00               	movlw	0
  7757  000790  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7758  000792  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7759  000794  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7760  000798  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7761  00079C  EC93  F03B         	call	_internalFlash_addressWithinPage	;wreg free
  7762  0007A0  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7763  0007A4  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7764                           
  7765                           ;bootloader.c: 397: buffer[address_within_page] = hex_file_entry.data[cntr];
  7766  0007A8  0E98               	movlw	low (_hex_file_entry+5)
  7767  0007AA  0100               	movlb	0	; () banked
  7768  0007AC  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  7769  0007AE  6ED9               	movwf	fsr2l,c
  7770  0007B0  0E01               	movlw	high (_hex_file_entry+5)
  7771  0007B2  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7772  0007B4  6EDA               	movwf	fsr2h,c
  7773  0007B6  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7774  0007B8  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  7775  0007BA  6EE1               	movwf	fsr1l,c
  7776  0007BC  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7777  0007BE  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7778  0007C0  6EE2               	movwf	fsr1h,c
  7779  0007C2  CFDF FFE7          	movff	indf2,indf1
  7780                           
  7781                           ;bootloader.c: 398: }
  7782  0007C6  D01E               	goto	l2431
  7783  0007C8                     l2430:
  7784  0007C8                     l15005:
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;bootloader.c: 399: else;bootloader.c: 400: {;bootloader.c: 402: hex_file_offset -= retu
      +                          rn_value;
  7788  0007C8  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7789  0007CA  5FD7               	subwf	_hex_file_offset& (0+255),f,b
  7790  0007CC  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7791  0007CE  5BD8               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7792  0007D0  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7793  0007D2  5BD9               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7794  0007D4  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7795  0007D6  5BDA               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;bootloader.c: 403: --hex_file_entries;
  7799  0007D8  0101               	movlb	1	; () banked
  7800  0007DA  0778               	decf	_hex_file_entries& (0+255),f,b
  7801  0007DC  A0D8               	btfss	status,0,c
  7802  0007DE  0779               	decf	(_hex_file_entries+1)& (0+255),f,b
  7803                           
  7804                           ; BSR set to: 1
  7805                           ;bootloader.c: 405: start_from_byte_next = cntr;
  7806  0007E0  C0A5  F18B         	movff	__bootloader_program@cntr,_start_from_byte_next
  7807                           
  7808                           ; BSR set to: 1
  7809                           ;bootloader.c: 407: internalFlash_erasePage(page_to_write);
  7810  0007E4  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7811  0007E8  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7812  0007EC  EC79  F041         	call	_internalFlash_erasePage	;wreg free
  7813                           
  7814                           ;bootloader.c: 408: internalFlash_writePage(page_to_write);
  7815  0007F0  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7816  0007F4  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7817  0007F8  ECBD  F037         	call	_internalFlash_writePage	;wreg free
  7818                           
  7819                           ;bootloader.c: 409: ++flash_pages_written;
  7820  0007FC  0101               	movlb	1	; () banked
  7821  0007FE  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7822  000800  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7823                           
  7824                           ; BSR set to: 1
  7825                           ;bootloader.c: 411: return;
  7826  000802  0012               	return	
  7827  000804                     l2431:
  7828                           
  7829                           ; BSR set to: 1
  7830  000804  0100               	movlb	0	; () banked
  7831  000806  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7832  000808  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7833  00080A                     l2428:
  7834                           
  7835                           ; BSR set to: 0
  7836                           
  7837                           ; BSR set to: 0
  7838  00080A  0101               	movlb	1	; () banked
  7839  00080C  5193               	movf	_hex_file_entry& (0+255),w,b
  7840  00080E  0100               	movlb	0	; () banked
  7841  000810  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  7842  000812  0101               	movlb	1	; () banked
  7843  000814  5194               	movf	(_hex_file_entry+1)& (0+255),w,b
  7844  000816  0100               	movlb	0	; () banked
  7845  000818  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7846  00081A  B0D8               	btfsc	status,0,c
  7847  00081C  D662               	goto	l2414
  7848  00081E  D798               	goto	l2429
  7849  000820                     
  7850                           ;bootloader.c: 419: if(page_to_write!=0)
  7851                           
  7852                           ; BSR set to: 0
  7853  000820  0100               	movlb	0	; () banked
  7854  000822  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7855  000824  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7856  000826  B4D8               	btfsc	status,2,c
  7857  000828  0012               	return	
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;bootloader.c: 420: {;bootloader.c: 422: internalFlash_erasePage(page_to_write);
  7861  00082A  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7862  00082E  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7863  000832  EC79  F041         	call	_internalFlash_erasePage	;wreg free
  7864                           
  7865                           ;bootloader.c: 423: internalFlash_writePage(page_to_write);
  7866  000836  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7867  00083A  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7868  00083E  ECBD  F037         	call	_internalFlash_writePage	;wreg free
  7869                           
  7870                           ;bootloader.c: 424: ++flash_pages_written;
  7871  000842  0101               	movlb	1	; () banked
  7872  000844  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7873  000846  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7874                           
  7875                           ; BSR set to: 1
  7876                           ;bootloader.c: 426: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7877  000848  0E70               	movlw	112
  7878  00084A  0100               	movlb	0	; () banked
  7879  00084C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;bootloader.c: 427: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7883  00084E  0E70               	movlw	112
  7884  000850  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;bootloader.c: 428: };bootloader.c: 430: return;
  7888                           
  7889                           ; BSR set to: 0
  7890  000852  0012               	return	
  7891  000854                     l2421:
  7892                           
  7893                           ; BSR set to: 0
  7894                           
  7895                           ; BSR set to: 0
  7896  000854  0101               	movlb	1	; () banked
  7897  000856  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7898                           
  7899                           ; Switch size 1, requested type "space"
  7900                           ; Number of cases is 3, Range of values is 0 to 4
  7901                           ; switch strategies available:
  7902                           ; Name         Instructions Cycles
  7903                           ; simple_byte           10     6 (average)
  7904                           ;	Chosen strategy is simple_byte
  7905  000858  0A00               	xorlw	0	; case 0
  7906  00085A  B4D8               	btfsc	status,2,c
  7907  00085C  D71F               	goto	l2425
  7908  00085E  0A01               	xorlw	1	; case 1
  7909  000860  B4D8               	btfsc	status,2,c
  7910  000862  D7DE               	goto	l2433
  7911  000864  0A05               	xorlw	5	; case 4
  7912  000866  B4D8               	btfsc	status,2,c
  7913  000868  D6FB               	goto	l2422
  7914                           
  7915                           ; BSR set to: 1
  7916                           
  7917                           ; BSR set to: 1
  7918  00086A  D63B               	goto	l2414
  7919  00086C                     __end_of__bootloader_program:
  7920                           	opt stack 0
  7921                           tblptru	equ	0xFF8
  7922                           tblptrh	equ	0xFF7
  7923                           tblptrl	equ	0xFF6
  7924                           tablat	equ	0xFF5
  7925                           intcon	equ	0xFF2
  7926                           intcon2	equ	0xFF1
  7927                           intcon3	equ	0xFF0
  7928                           postinc0	equ	0xFEE
  7929                           wreg	equ	0xFE8
  7930                           indf1	equ	0xFE7
  7931                           postdec1	equ	0xFE5
  7932                           plusw1	equ	0xFE3
  7933                           fsr1h	equ	0xFE2
  7934                           fsr1l	equ	0xFE1
  7935                           indf2	equ	0xFDF
  7936                           postinc2	equ	0xFDE
  7937                           plusw2	equ	0xFDB
  7938                           fsr2h	equ	0xFDA
  7939                           fsr2l	equ	0xFD9
  7940                           status	equ	0xFD8
  7941                           
  7942 ;; *************** function _parseHexFileEntry *****************
  7943 ;; Defined at:
  7944 ;;		line 59 in file "hex.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  data            2   11[COMRAM] PTR unsigned char 
  7947 ;;		 -> file_buffer(50), 
  7948 ;;  offset          4   13[COMRAM] unsigned long 
  7949 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  7950 ;;		 -> hex_file_entry(23), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  i               1   27[COMRAM] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  4   11[COMRAM] unsigned long 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7962 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;Total ram usage:       17 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    2
  7969 ;; This function calls:
  7970 ;;		_hexCharsToUint16
  7971 ;;		_hexCharsToUint8
  7972 ;; This function is called by:
  7973 ;;		__bootloader_verify_file
  7974 ;;		__bootloader_program
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text30
  7979  000020                     __ptext30:
  7980                           	opt stack 0
  7981  000020                     _parseHexFileEntry:
  7982                           	opt stack 26
  7983                           
  7984                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7985                           
  7986                           ;incstack = 0
  7987  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7988  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7989  000024  6ED9               	movwf	fsr2l,c
  7990  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7991  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7992  00002A  6EDA               	movwf	fsr2h,c
  7993  00002C  0E3A               	movlw	58
  7994  00002E  18DE               	xorwf	postinc2,w,c
  7995  000030  B4D8               	btfsc	status,2,c
  7996  000032  D005               	goto	l2276
  7997                           
  7998                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7999  000034  680C               	setf	?_parseHexFileEntry,c
  8000  000036  680D               	setf	?_parseHexFileEntry+1,c
  8001  000038  680E               	setf	?_parseHexFileEntry+2,c
  8002  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8003  00003C  0012               	return	
  8004  00003E                     l2276:
  8005                           
  8006                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8007  00003E  0E02               	movlw	2
  8008  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8009  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8010  000044  0E00               	movlw	0
  8011  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8012  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8013  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8014  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8015  00004E  6ED9               	movwf	fsr2l,c
  8016  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8017  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8018  000054  6EDA               	movwf	fsr2h,c
  8019  000056  50DF               	movf	indf2,w,c
  8020  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8021  00005A  0E01               	movlw	1
  8022  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8023  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8024  000060  0E00               	movlw	0
  8025  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8026  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8027  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8028  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8029  00006A  6ED9               	movwf	fsr2l,c
  8030  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8031  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8032  000070  6EDA               	movwf	fsr2h,c
  8033  000072  50DF               	movf	indf2,w,c
  8034  000074  EC06  F044         	call	_hexCharsToUint8
  8035  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8036  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8037  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8038  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8039  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8040  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8041                           
  8042                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8043  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8044  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8045  000094  0E01               	movlw	1
  8046  000096  50DB               	movf	plusw2,w,c
  8047  000098  E104               	bnz	u11050
  8048  00009A  0E11               	movlw	17
  8049  00009C  5CDE               	subwf	postinc2,w,c
  8050  00009E  A0D8               	btfss	status,0,c
  8051  0000A0  D009               	goto	l2278
  8052  0000A2                     u11050:
  8053                           
  8054                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8055  0000A2  0EFC               	movlw	252
  8056  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8057  0000A6  0EFF               	movlw	255
  8058  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8059  0000AA  0EFF               	movlw	255
  8060  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8061  0000AE  0EFF               	movlw	255
  8062  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8063  0000B2  0012               	return	
  8064  0000B4                     l2278:
  8065                           
  8066                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8067  0000B4  0E04               	movlw	4
  8068  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8069  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8070  0000BA  0E00               	movlw	0
  8071  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8072  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8073  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8074  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8075  0000C4  6ED9               	movwf	fsr2l,c
  8076  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8077  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8078  0000CA  6EDA               	movwf	fsr2h,c
  8079  0000CC  50DF               	movf	indf2,w,c
  8080  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8081  0000D0  0E05               	movlw	5
  8082  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8083  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8084  0000D6  0E00               	movlw	0
  8085  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8086  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8087  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8088  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8089  0000E0  6ED9               	movwf	fsr2l,c
  8090  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8091  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8092  0000E6  6EDA               	movwf	fsr2h,c
  8093  0000E8  50DF               	movf	indf2,w,c
  8094  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8095  0000EC  0E06               	movlw	6
  8096  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8097  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8098  0000F2  0E00               	movlw	0
  8099  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8100  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8101  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8102  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8103  0000FC  6ED9               	movwf	fsr2l,c
  8104  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8105  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8106  000102  6EDA               	movwf	fsr2h,c
  8107  000104  50DF               	movf	indf2,w,c
  8108  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8109  000108  0E03               	movlw	3
  8110  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8111  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8112  00010E  0E00               	movlw	0
  8113  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8114  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8115  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8116  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8117  000118  6ED9               	movwf	fsr2l,c
  8118  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8119  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8120  00011E  6EDA               	movwf	fsr2h,c
  8121  000120  50DF               	movf	indf2,w,c
  8122  000122  EC23  F039         	call	_hexCharsToUint16
  8123  000126  EE20 F002          	lfsr	2,2
  8124  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8125  00012C  26D9               	addwf	fsr2l,f,c
  8126  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8127  000130  22DA               	addwfc	fsr2h,f,c
  8128  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8129  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8130                           
  8131                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8132  00013A  EE20 F004          	lfsr	2,4
  8133  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8134  000140  26D9               	addwf	fsr2l,f,c
  8135  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8136  000144  22DA               	addwfc	fsr2h,f,c
  8137  000146  0E08               	movlw	8
  8138  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8139  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8140  00014C  0E00               	movlw	0
  8141  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8142  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8143  000152  5014               	movf	??_parseHexFileEntry,w,c
  8144  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8145  000156  6EE1               	movwf	fsr1l,c
  8146  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8147  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8148  00015C  6EE2               	movwf	fsr1h,c
  8149  00015E  50E7               	movf	indf1,w,c
  8150  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8151  000162  0E07               	movlw	7
  8152  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8153  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8154  000168  0E00               	movlw	0
  8155  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8156  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8157  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8158  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8159  000172  6EE1               	movwf	fsr1l,c
  8160  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8161  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8162  000178  6EE2               	movwf	fsr1h,c
  8163  00017A  50E7               	movf	indf1,w,c
  8164  00017C  EC06  F044         	call	_hexCharsToUint8
  8165  000180  6EDF               	movwf	indf2,c
  8166                           
  8167                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8168  000182  0E00               	movlw	0
  8169  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8170  000186  D03D               	goto	l2279
  8171  000188                     
  8172                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8173  000188  501C               	movf	parseHexFileEntry@i,w,c
  8174  00018A  0D01               	mullw	1
  8175  00018C  0E05               	movlw	5
  8176  00018E  26F3               	addwf	prodl,f,c
  8177  000190  0E00               	movlw	0
  8178  000192  22F4               	addwfc	prodh,f,c
  8179  000194  50F3               	movf	prodl,w,c
  8180  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8181  000198  6ED9               	movwf	fsr2l,c
  8182  00019A  50F4               	movf	prodh,w,c
  8183  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8184  00019E  6EDA               	movwf	fsr2h,c
  8185  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8186  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8187  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8188  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8189  0001AA  0E00               	movlw	0
  8190  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8191  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8192  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8193  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8194  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8195  0001B6  0E0A               	movlw	10
  8196  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8197  0001BA  0E00               	movlw	0
  8198  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8199  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8200  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8201  0001C2  6EE1               	movwf	fsr1l,c
  8202  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8203  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8204  0001C8  6EE2               	movwf	fsr1h,c
  8205  0001CA  50E7               	movf	indf1,w,c
  8206  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8207  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8208  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8209  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8210  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8211  0001D8  0E00               	movlw	0
  8212  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8213  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8214  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8215  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8216  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8217  0001E4  0E09               	movlw	9
  8218  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8219  0001E8  0E00               	movlw	0
  8220  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8221  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8222  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8223  0001F0  6EE1               	movwf	fsr1l,c
  8224  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8225  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8226  0001F6  6EE2               	movwf	fsr1h,c
  8227  0001F8  50E7               	movf	indf1,w,c
  8228  0001FA  EC06  F044         	call	_hexCharsToUint8
  8229  0001FE  6EDF               	movwf	indf2,c
  8230  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8231  000202                     l2279:
  8232  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8233  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8234  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8235  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8236  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8237  000210  50DE               	movf	postinc2,w,c
  8238  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8239  000214  50DE               	movf	postinc2,w,c
  8240  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8241  000218  A0D8               	btfss	status,0,c
  8242  00021A  D7B6               	goto	l2280
  8243                           
  8244                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8245  00021C  EE20 F015          	lfsr	2,21
  8246  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8247  000222  26D9               	addwf	fsr2l,f,c
  8248  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8249  000226  22DA               	addwfc	fsr2h,f,c
  8250  000228  501C               	movf	parseHexFileEntry@i,w,c
  8251  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8252  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8253  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8254  000232  0E00               	movlw	0
  8255  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8256  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8257  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8258  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8259  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8260  00023E  0E0A               	movlw	10
  8261  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8262  000242  0E00               	movlw	0
  8263  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8264  000246  5014               	movf	??_parseHexFileEntry,w,c
  8265  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8266  00024A  6EE1               	movwf	fsr1l,c
  8267  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8268  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8269  000250  6EE2               	movwf	fsr1h,c
  8270  000252  50E7               	movf	indf1,w,c
  8271  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8272  000256  501C               	movf	parseHexFileEntry@i,w,c
  8273  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8274  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8275  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8276  000260  0E00               	movlw	0
  8277  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8278  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8279  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8280  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8281  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8282  00026C  0E09               	movlw	9
  8283  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8284  000270  0E00               	movlw	0
  8285  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8286  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8287  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8288  000278  6EE1               	movwf	fsr1l,c
  8289  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8290  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8291  00027E  6EE2               	movwf	fsr1h,c
  8292  000280  50E7               	movf	indf1,w,c
  8293  000282  EC06  F044         	call	_hexCharsToUint8
  8294  000286  6EDF               	movwf	indf2,c
  8295                           
  8296                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8297  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8298  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8299  000290  EE10 F016          	lfsr	1,22
  8300  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8301  000296  26E1               	addwf	fsr1l,f,c
  8302  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8303  00029A  22E2               	addwfc	fsr1h,f,c
  8304  00029C  CFDF FFE7          	movff	indf2,indf1
  8305                           
  8306                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8307  0002A0  EE20 F002          	lfsr	2,2
  8308  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8309  0002A6  26D9               	addwf	fsr2l,f,c
  8310  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8311  0002AA  22DA               	addwfc	fsr2h,f,c
  8312  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8313  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8314  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8315  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8316  0002BA  EE20 F016          	lfsr	2,22
  8317  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8318  0002C0  26D9               	addwf	fsr2l,f,c
  8319  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8320  0002C4  22DA               	addwfc	fsr2h,f,c
  8321  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8322  0002C8  26DF               	addwf	indf2,f,c
  8323                           
  8324                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8325  0002CA  EE20 F002          	lfsr	2,2
  8326  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8327  0002D0  26D9               	addwf	fsr2l,f,c
  8328  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8329  0002D4  22DA               	addwfc	fsr2h,f,c
  8330  0002D6  50DF               	movf	indf2,w,c
  8331  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8332  0002DA  EE20 F016          	lfsr	2,22
  8333  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8334  0002E0  26D9               	addwf	fsr2l,f,c
  8335  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8336  0002E4  22DA               	addwfc	fsr2h,f,c
  8337  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8338  0002E8  26DF               	addwf	indf2,f,c
  8339                           
  8340                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8341  0002EA  EE20 F004          	lfsr	2,4
  8342  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8343  0002F0  26D9               	addwf	fsr2l,f,c
  8344  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8345  0002F4  22DA               	addwfc	fsr2h,f,c
  8346  0002F6  50DF               	movf	indf2,w,c
  8347  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8348  0002FA  EE20 F016          	lfsr	2,22
  8349  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8350  000300  26D9               	addwf	fsr2l,f,c
  8351  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8352  000304  22DA               	addwfc	fsr2h,f,c
  8353  000306  5014               	movf	??_parseHexFileEntry,w,c
  8354  000308  26DF               	addwf	indf2,f,c
  8355                           
  8356                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8357  00030A  0E00               	movlw	0
  8358  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8359  00030E  D017               	goto	l2282
  8360  000310                     
  8361                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8362  000310  501C               	movf	parseHexFileEntry@i,w,c
  8363  000312  0D01               	mullw	1
  8364  000314  0E05               	movlw	5
  8365  000316  26F3               	addwf	prodl,f,c
  8366  000318  0E00               	movlw	0
  8367  00031A  22F4               	addwfc	prodh,f,c
  8368  00031C  50F3               	movf	prodl,w,c
  8369  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8370  000320  6ED9               	movwf	fsr2l,c
  8371  000322  50F4               	movf	prodh,w,c
  8372  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8373  000326  6EDA               	movwf	fsr2h,c
  8374  000328  50DF               	movf	indf2,w,c
  8375  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8376  00032C  EE20 F016          	lfsr	2,22
  8377  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8378  000332  26D9               	addwf	fsr2l,f,c
  8379  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8380  000336  22DA               	addwfc	fsr2h,f,c
  8381  000338  5014               	movf	??_parseHexFileEntry,w,c
  8382  00033A  26DF               	addwf	indf2,f,c
  8383  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8384  00033E                     l2282:
  8385  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8386  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8387  000346  501C               	movf	parseHexFileEntry@i,w,c
  8388  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8389  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8390  00034C  50DE               	movf	postinc2,w,c
  8391  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8392  000350  50DE               	movf	postinc2,w,c
  8393  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8394  000354  A0D8               	btfss	status,0,c
  8395  000356  D7DC               	goto	l2283
  8396                           
  8397                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8398  000358  EE20 F015          	lfsr	2,21
  8399  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8400  00035E  26D9               	addwf	fsr2l,f,c
  8401  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8402  000362  22DA               	addwfc	fsr2h,f,c
  8403  000364  50DF               	movf	indf2,w,c
  8404  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8405  000368  EE20 F016          	lfsr	2,22
  8406  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8407  00036E  26D9               	addwf	fsr2l,f,c
  8408  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8409  000372  22DA               	addwfc	fsr2h,f,c
  8410  000374  5014               	movf	??_parseHexFileEntry,w,c
  8411  000376  26DF               	addwf	indf2,f,c
  8412                           
  8413                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8414  000378  EE20 F016          	lfsr	2,22
  8415  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8416  00037E  26D9               	addwf	fsr2l,f,c
  8417  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8418  000382  22DA               	addwfc	fsr2h,f,c
  8419  000384  50DF               	movf	indf2,w,c
  8420  000386  B4D8               	btfsc	status,2,c
  8421  000388  D009               	goto	l2285
  8422                           
  8423                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8424  00038A  0EFE               	movlw	254
  8425  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8426  00038E  0EFF               	movlw	255
  8427  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8428  000392  0EFF               	movlw	255
  8429  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8430  000396  0EFF               	movlw	255
  8431  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8432  00039A  0012               	return	
  8433  00039C                     l2285:
  8434                           
  8435                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8436  00039C  EE20 F004          	lfsr	2,4
  8437  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8438  0003A2  26D9               	addwf	fsr2l,f,c
  8439  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8440  0003A6  22DA               	addwfc	fsr2h,f,c
  8441  0003A8  04DE               	decf	postinc2,w,c
  8442  0003AA  A4D8               	btfss	status,2,c
  8443  0003AC  D009               	goto	l2286
  8444                           
  8445                           ;hex.c: 110: {;hex.c: 112: return 0;
  8446  0003AE  0E00               	movlw	0
  8447  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8448  0003B2  0E00               	movlw	0
  8449  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8450  0003B6  0E00               	movlw	0
  8451  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8452  0003BA  0E00               	movlw	0
  8453  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8454                           
  8455                           ;hex.c: 113: }
  8456  0003BE  0012               	return	
  8457  0003C0                     l2286:
  8458                           
  8459                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8460  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8461  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8462  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8463  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8464  0003CA  0E00               	movlw	0
  8465  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8466  0003CE  0E0B               	movlw	11
  8467  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8468  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8469  0003D4  0E00               	movlw	0
  8470  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8471  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8472  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8473  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8474  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8475  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8476  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8477  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8478  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8479  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8480  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8481  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8482  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8483  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8484  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8485                           
  8486                           ;hex.c: 117: if (data[++offset] == ':')
  8487  0003F4  0E01               	movlw	1
  8488  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8489  0003F8  0E00               	movlw	0
  8490  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8491  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8492  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8493  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8494  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8495  000404  6ED9               	movwf	fsr2l,c
  8496  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8497  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8498  00040A  6EDA               	movwf	fsr2h,c
  8499  00040C  0E3A               	movlw	58
  8500  00040E  18DE               	xorwf	postinc2,w,c
  8501  000410  A4D8               	btfss	status,2,c
  8502  000412  D009               	goto	l2288
  8503                           
  8504                           ;hex.c: 118: {;hex.c: 119: return offset;
  8505  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8506  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8507  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8508  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8509                           
  8510                           ;hex.c: 120: }
  8511  000424  0012               	return	
  8512  000426                     l2288:
  8513                           
  8514                           ;hex.c: 121: else if (data[++offset] == ':')
  8515  000426  0E01               	movlw	1
  8516  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8517  00042A  0E00               	movlw	0
  8518  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8519  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8520  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8521  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8522  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8523  000436  6ED9               	movwf	fsr2l,c
  8524  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8525  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8526  00043C  6EDA               	movwf	fsr2h,c
  8527  00043E  0E3A               	movlw	58
  8528  000440  18DE               	xorwf	postinc2,w,c
  8529  000442  A4D8               	btfss	status,2,c
  8530  000444  D009               	goto	l2290
  8531                           
  8532                           ;hex.c: 122: {;hex.c: 123: return offset;
  8533  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8534  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8535  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8536  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8537                           
  8538                           ;hex.c: 124: }
  8539  000456  0012               	return	
  8540  000458                     l2290:
  8541                           
  8542                           ;hex.c: 125: else if (data[++offset] == ':')
  8543  000458  0E01               	movlw	1
  8544  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8545  00045C  0E00               	movlw	0
  8546  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8547  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8548  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8549  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8550  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8551  000468  6ED9               	movwf	fsr2l,c
  8552  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8553  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8554  00046E  6EDA               	movwf	fsr2h,c
  8555  000470  0E3A               	movlw	58
  8556  000472  18DE               	xorwf	postinc2,w,c
  8557  000474  A4D8               	btfss	status,2,c
  8558  000476  D009               	goto	l2292
  8559                           
  8560                           ;hex.c: 126: {;hex.c: 127: return offset;
  8561  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8562  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8563  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8564  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8565                           
  8566                           ;hex.c: 128: }
  8567  000488  0012               	return	
  8568  00048A                     l2292:
  8569                           
  8570                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8571  00048A  0EFD               	movlw	253
  8572  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8573  00048E  0EFF               	movlw	255
  8574  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8575  000492  0EFF               	movlw	255
  8576  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8577  000496  0EFF               	movlw	255
  8578  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8579  00049A  0012               	return	
  8580  00049C                     __end_of_parseHexFileEntry:
  8581                           	opt stack 0
  8582                           tblptru	equ	0xFF8
  8583                           tblptrh	equ	0xFF7
  8584                           tblptrl	equ	0xFF6
  8585                           tablat	equ	0xFF5
  8586                           prodh	equ	0xFF4
  8587                           prodl	equ	0xFF3
  8588                           intcon	equ	0xFF2
  8589                           intcon2	equ	0xFF1
  8590                           intcon3	equ	0xFF0
  8591                           postinc0	equ	0xFEE
  8592                           wreg	equ	0xFE8
  8593                           indf1	equ	0xFE7
  8594                           postdec1	equ	0xFE5
  8595                           plusw1	equ	0xFE3
  8596                           fsr1h	equ	0xFE2
  8597                           fsr1l	equ	0xFE1
  8598                           indf2	equ	0xFDF
  8599                           postinc2	equ	0xFDE
  8600                           postdec2	equ	0xFDD
  8601                           plusw2	equ	0xFDB
  8602                           fsr2h	equ	0xFDA
  8603                           fsr2l	equ	0xFD9
  8604                           status	equ	0xFD8
  8605                           
  8606 ;; *************** function _hexCharsToUint8 *****************
  8607 ;; Defined at:
  8608 ;;		line 42 in file "hex.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  c1              1    wreg     unsigned char 
  8611 ;;  c2              1    2[COMRAM] unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  c1              1    4[COMRAM] unsigned char 
  8614 ;;  retVal          1    5[COMRAM] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      unsigned char 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;Total ram usage:        4 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    1
  8631 ;; This function calls:
  8632 ;;		_hexCharToUint8
  8633 ;; This function is called by:
  8634 ;;		_parseHexFileEntry
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text31
  8639  00880C                     __ptext31:
  8640                           	opt stack 0
  8641  00880C                     _hexCharsToUint8:
  8642                           	opt stack 26
  8643                           
  8644                           ;incstack = 0
  8645                           ;hexCharsToUint8@c1 stored from wreg
  8646  00880C  6E05               	movwf	hexCharsToUint8@c1,c
  8647                           
  8648                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8649  00880E  5005               	movf	hexCharsToUint8@c1,w,c
  8650  008810  EC89  F042         	call	_hexCharToUint8
  8651  008814  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8652  008816  3804               	swapf	??_hexCharsToUint8,w,c
  8653  008818  0BF0               	andlw	240
  8654  00881A  6E06               	movwf	hexCharsToUint8@retVal,c
  8655                           
  8656                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8657  00881C  5003               	movf	hexCharsToUint8@c2,w,c
  8658  00881E  EC89  F042         	call	_hexCharToUint8
  8659  008822  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8660                           
  8661                           ;hex.c: 46: return retVal;
  8662  008824  5006               	movf	hexCharsToUint8@retVal,w,c
  8663  008826  0012               	return	
  8664  008828                     __end_of_hexCharsToUint8:
  8665                           	opt stack 0
  8666                           tblptru	equ	0xFF8
  8667                           tblptrh	equ	0xFF7
  8668                           tblptrl	equ	0xFF6
  8669                           tablat	equ	0xFF5
  8670                           prodh	equ	0xFF4
  8671                           prodl	equ	0xFF3
  8672                           intcon	equ	0xFF2
  8673                           intcon2	equ	0xFF1
  8674                           intcon3	equ	0xFF0
  8675                           postinc0	equ	0xFEE
  8676                           wreg	equ	0xFE8
  8677                           indf1	equ	0xFE7
  8678                           postdec1	equ	0xFE5
  8679                           plusw1	equ	0xFE3
  8680                           fsr1h	equ	0xFE2
  8681                           fsr1l	equ	0xFE1
  8682                           indf2	equ	0xFDF
  8683                           postinc2	equ	0xFDE
  8684                           postdec2	equ	0xFDD
  8685                           plusw2	equ	0xFDB
  8686                           fsr2h	equ	0xFDA
  8687                           fsr2l	equ	0xFD9
  8688                           status	equ	0xFD8
  8689                           
  8690 ;; *************** function _hexCharsToUint16 *****************
  8691 ;; Defined at:
  8692 ;;		line 49 in file "hex.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  c1              1    wreg     unsigned char 
  8695 ;;  c2              1    2[COMRAM] unsigned char 
  8696 ;;  c3              1    3[COMRAM] unsigned char 
  8697 ;;  c4              1    4[COMRAM] unsigned char 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  c1              1    8[COMRAM] unsigned char 
  8700 ;;  retVal          2    9[COMRAM] unsigned int 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  2    2[COMRAM] unsigned int 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8710 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8712 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8713 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8714 ;;Total ram usage:        9 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    1
  8717 ;; This function calls:
  8718 ;;		_hexCharToUint8
  8719 ;; This function is called by:
  8720 ;;		_parseHexFileEntry
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723                           
  8724                           	psect	text32
  8725  007246                     __ptext32:
  8726                           	opt stack 0
  8727  007246                     _hexCharsToUint16:
  8728                           	opt stack 26
  8729                           
  8730                           ;incstack = 0
  8731                           ;hexCharsToUint16@c1 stored from wreg
  8732  007246  6E09               	movwf	hexCharsToUint16@c1,c
  8733                           
  8734                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8735  007248  5009               	movf	hexCharsToUint16@c1,w,c
  8736  00724A  EC89  F042         	call	_hexCharToUint8
  8737  00724E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8738  007250  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8739  007252  0E0C               	movlw	12
  8740  007254                     u10515:
  8741  007254  90D8               	bcf	status,0,c
  8742  007256  3606               	rlcf	??_hexCharsToUint16,f,c
  8743  007258  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8744  00725A  2EE8               	decfsz	wreg,f,c
  8745  00725C  D7FB               	goto	u10515
  8746  00725E  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8747  007262  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8748                           
  8749                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8750  007266  5003               	movf	hexCharsToUint16@c2,w,c
  8751  007268  EC89  F042         	call	_hexCharToUint8
  8752  00726C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8753  00726E  5006               	movf	??_hexCharsToUint16,w,c
  8754  007270  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8755  007272  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8756  007274  5007               	movf	??_hexCharsToUint16+1,w,c
  8757  007276  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8758  007278  5008               	movf	??_hexCharsToUint16+2,w,c
  8759  00727A  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8760                           
  8761                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8762  00727C  5004               	movf	hexCharsToUint16@c3,w,c
  8763  00727E  EC89  F042         	call	_hexCharToUint8
  8764  007282  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8765  007284  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8766  007286  3A06               	swapf	??_hexCharsToUint16,f,c
  8767  007288  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8768  00728A  0EF0               	movlw	240
  8769  00728C  1607               	andwf	??_hexCharsToUint16+1,f,c
  8770  00728E  5006               	movf	??_hexCharsToUint16,w,c
  8771  007290  0B0F               	andlw	15
  8772  007292  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8773  007294  0EF0               	movlw	240
  8774  007296  1606               	andwf	??_hexCharsToUint16,f,c
  8775  007298  5006               	movf	??_hexCharsToUint16,w,c
  8776  00729A  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8777  00729C  5007               	movf	??_hexCharsToUint16+1,w,c
  8778  00729E  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8779                           
  8780                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8781  0072A0  5005               	movf	hexCharsToUint16@c4,w,c
  8782  0072A2  EC89  F042         	call	_hexCharToUint8
  8783  0072A6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8784  0072A8  5006               	movf	??_hexCharsToUint16,w,c
  8785  0072AA  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8786                           
  8787                           ;hex.c: 55: return retVal;
  8788  0072AC  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8789  0072B0  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8790  0072B4  0012               	return	
  8791  0072B6                     __end_of_hexCharsToUint16:
  8792                           	opt stack 0
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           intcon2	equ	0xFF1
  8801                           intcon3	equ	0xFF0
  8802                           postinc0	equ	0xFEE
  8803                           wreg	equ	0xFE8
  8804                           indf1	equ	0xFE7
  8805                           postdec1	equ	0xFE5
  8806                           plusw1	equ	0xFE3
  8807                           fsr1h	equ	0xFE2
  8808                           fsr1l	equ	0xFE1
  8809                           indf2	equ	0xFDF
  8810                           postinc2	equ	0xFDE
  8811                           postdec2	equ	0xFDD
  8812                           plusw2	equ	0xFDB
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function _hexCharToUint8 *****************
  8818 ;; Defined at:
  8819 ;;		line 11 in file "hex.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  c               1    wreg     unsigned char 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  c               1    0[COMRAM] unsigned char 
  8824 ;;  ascii           1    1[COMRAM] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      unsigned char 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8838 ;;Total ram usage:        2 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_hexCharsToUint8
  8844 ;;		_hexCharsToUint16
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text33
  8849  008512                     __ptext33:
  8850                           	opt stack 0
  8851  008512                     _hexCharToUint8:
  8852                           	opt stack 26
  8853                           
  8854                           ;incstack = 0
  8855                           ;hexCharToUint8@c stored from wreg
  8856  008512  6E01               	movwf	hexCharToUint8@c,c
  8857                           
  8858                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8859  008514  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8860                           
  8861                           ;hex.c: 16: if (ascii >= 97)
  8862  008518  0E60               	movlw	96
  8863  00851A  6402               	cpfsgt	hexCharToUint8@ascii,c
  8864  00851C  D002               	goto	l2261
  8865                           
  8866                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8867  00851E  0E57               	movlw	87
  8868  008520  D006               	goto	L3
  8869  008522                     l2261:
  8870                           
  8871                           ;hex.c: 21: else if (ascii >= 65)
  8872  008522  0E40               	movlw	64
  8873  008524  6402               	cpfsgt	hexCharToUint8@ascii,c
  8874  008526  D002               	goto	l2263
  8875                           
  8876                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8877  008528  0E37               	movlw	55
  8878  00852A  D001               	goto	L3
  8879  00852C                     l2263:
  8880                           
  8881                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8882  00852C  0E30               	movlw	48
  8883  00852E                     L3:
  8884  00852E  5E02               	subwf	hexCharToUint8@ascii,f,c
  8885                           
  8886                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8887  008530  0E0F               	movlw	15
  8888  008532  6402               	cpfsgt	hexCharToUint8@ascii,c
  8889  008534  D002               	goto	l2265
  8890                           
  8891                           ;hex.c: 32: {;hex.c: 33: return 0;
  8892  008536  0E00               	movlw	0
  8893                           
  8894                           ;hex.c: 34: }
  8895  008538  0012               	return	
  8896  00853A                     l2265:
  8897                           
  8898                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8899  00853A  5002               	movf	hexCharToUint8@ascii,w,c
  8900  00853C  0012               	return	
  8901  00853E                     __end_of_hexCharToUint8:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           intcon2	equ	0xFF1
  8911                           intcon3	equ	0xFF0
  8912                           postinc0	equ	0xFEE
  8913                           wreg	equ	0xFE8
  8914                           indf1	equ	0xFE7
  8915                           postdec1	equ	0xFE5
  8916                           plusw1	equ	0xFE3
  8917                           fsr1h	equ	0xFE2
  8918                           fsr1l	equ	0xFE1
  8919                           indf2	equ	0xFDF
  8920                           postinc2	equ	0xFDE
  8921                           postdec2	equ	0xFDD
  8922                           plusw2	equ	0xFDB
  8923                           fsr2h	equ	0xFDA
  8924                           fsr2l	equ	0xFD9
  8925                           status	equ	0xFD8
  8926                           
  8927 ;; *************** function _internalFlash_writePage *****************
  8928 ;; Defined at:
  8929 ;;		line 63 in file "internal_flash.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;  page            2    2[COMRAM] unsigned int 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;  address         4    4[COMRAM] unsigned long 
  8934 ;;  cntr            2    8[COMRAM] unsigned int 
  8935 ;;  byte_cntr       1   11[COMRAM] unsigned char 
  8936 ;;  block_cntr      1   10[COMRAM] unsigned char 
  8937 ;;  i               1    0        unsigned char 
  8938 ;;  gie             1    0        unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;Total ram usage:       10 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    1
  8955 ;; This function calls:
  8956 ;;		__internalFlash_unlockAndActivate
  8957 ;; This function is called by:
  8958 ;;		__bootloader_program
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text34
  8963  006F7A                     __ptext34:
  8964                           	opt stack 0
  8965  006F7A                     _internalFlash_writePage:
  8966                           	opt stack 27
  8967                           
  8968                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
  8969                           
  8970                           ;incstack = 0
  8971  006F7A  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
  8972  006F7E  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
  8973  006F82  6A07               	clrf	internalFlash_writePage@address+2,c
  8974  006F84  6A08               	clrf	internalFlash_writePage@address+3,c
  8975                           
  8976                           ;internal_flash.c: 74: address <<= 10;
  8977  006F86  0E0A               	movlw	10
  8978  006F88                     u11225:
  8979  006F88  90D8               	bcf	status,0,c
  8980  006F8A  3605               	rlcf	internalFlash_writePage@address,f,c
  8981  006F8C  3606               	rlcf	internalFlash_writePage@address+1,f,c
  8982  006F8E  3607               	rlcf	internalFlash_writePage@address+2,f,c
  8983  006F90  3608               	rlcf	internalFlash_writePage@address+3,f,c
  8984  006F92  2EE8               	decfsz	wreg,f,c
  8985  006F94  D7F9               	goto	u11225
  8986                           
  8987                           ;internal_flash.c: 76: TBLPTR = address;
  8988  006F96  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8989  006F9A  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8990  006F9E  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8991                           
  8992                           ;internal_flash.c: 79: cntr = 0;
  8993  006FA2  0E00               	movlw	0
  8994  006FA4  6E0A               	movwf	internalFlash_writePage@cntr+1,c
  8995  006FA6  0E00               	movlw	0
  8996  006FA8  6E09               	movwf	internalFlash_writePage@cntr,c
  8997                           
  8998                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8999  006FAA  0E00               	movlw	0
  9000  006FAC  6E0B               	movwf	internalFlash_writePage@block_cntr,c
  9001  006FAE                     l14069:
  9002  006FAE  0E0F               	movlw	15
  9003  006FB0  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
  9004  006FB2  D001               	goto	l2513
  9005  006FB4  0012               	return	
  9006  006FB6                     l2513:
  9007                           
  9008                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9009  006FB6  0E00               	movlw	0
  9010  006FB8  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
  9011  006FBA                     l14075:
  9012  006FBA  0E3F               	movlw	63
  9013  006FBC  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9014  006FBE  D001               	goto	l2515
  9015  006FC0  D00D               	goto	u11250
  9016  006FC2                     l2515:
  9017                           
  9018                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
  9019  006FC2  0E00               	movlw	low _pageBuffer
  9020  006FC4  2409               	addwf	internalFlash_writePage@cntr,w,c
  9021  006FC6  6ED9               	movwf	fsr2l,c
  9022  006FC8  0E08               	movlw	high _pageBuffer
  9023  006FCA  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
  9024  006FCC  6EDA               	movwf	fsr2h,c
  9025  006FCE  50DF               	movf	indf2,w,c
  9026  006FD0  6EF5               	movwf	tablat,c	;volatile
  9027  006FD2  000D               	tblwt		*+	;# 
  9028                           
  9029                           ;internal_flash.c: 91: ++cntr;
  9030  006FD4  4A09               	infsnz	internalFlash_writePage@cntr,f,c
  9031  006FD6  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
  9032  006FD8  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
  9033  006FDA  D7EF               	goto	l14075
  9034  006FDC                     u11250:
  9035  006FDC  000A               	tblrd		*-	;# 
  9036                           
  9037                           ;internal_flash.c: 98: EECON1 = 0x84;
  9038  006FDE  0E84               	movlw	132
  9039  006FE0  6EA6               	movwf	4006,c	;volsfr
  9040                           
  9041                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9042  006FE2  0EB5               	movlw	181
  9043  006FE4  ECF6  F042         	call	__internalFlash_unlockAndActivate
  9044                           
  9045                           ;internal_flash.c: 100: TBLPTR++;
  9046  006FE8  0E01               	movlw	1
  9047  006FEA  26F6               	addwf	tblptrl,f,c	;volatile
  9048  006FEC  0E00               	movlw	0
  9049  006FEE  22F7               	addwfc	tblptrh,f,c	;volatile
  9050  006FF0  0E00               	movlw	0
  9051  006FF2  22F8               	addwfc	tblptru,f,c	;volatile
  9052  006FF4  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
  9053  006FF6  D7DB               	goto	l14069
  9054  006FF8                     __end_of_internalFlash_writePage:
  9055                           	opt stack 0
  9056                           tblptru	equ	0xFF8
  9057                           tblptrh	equ	0xFF7
  9058                           tblptrl	equ	0xFF6
  9059                           tablat	equ	0xFF5
  9060                           prodh	equ	0xFF4
  9061                           prodl	equ	0xFF3
  9062                           intcon	equ	0xFF2
  9063                           intcon2	equ	0xFF1
  9064                           intcon3	equ	0xFF0
  9065                           postinc0	equ	0xFEE
  9066                           wreg	equ	0xFE8
  9067                           indf1	equ	0xFE7
  9068                           postdec1	equ	0xFE5
  9069                           plusw1	equ	0xFE3
  9070                           fsr1h	equ	0xFE2
  9071                           fsr1l	equ	0xFE1
  9072                           indf2	equ	0xFDF
  9073                           postinc2	equ	0xFDE
  9074                           postdec2	equ	0xFDD
  9075                           plusw2	equ	0xFDB
  9076                           fsr2h	equ	0xFDA
  9077                           fsr2l	equ	0xFD9
  9078                           status	equ	0xFD8
  9079                           
  9080 ;; *************** function _internalFlash_readPage *****************
  9081 ;; Defined at:
  9082 ;;		line 37 in file "internal_flash.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  page            2   21[COMRAM] unsigned int 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  address         4   23[COMRAM] unsigned long 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9097 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9099 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9100 ;;Total ram usage:        6 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:    2
  9103 ;; This function calls:
  9104 ;;		_internalFlash_addressFromPage
  9105 ;;		_internalFlash_read
  9106 ;; This function is called by:
  9107 ;;		__bootloader_program
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text35
  9112  008020                     __ptext35:
  9113                           	opt stack 0
  9114  008020                     _internalFlash_readPage:
  9115                           	opt stack 26
  9116                           
  9117                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9118                           
  9119                           ;incstack = 0
  9120  008020  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9121  008024  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9122  008028  EC5C  F042         	call	_internalFlash_addressFromPage	;wreg free
  9123  00802C  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9124  008030  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9125  008034  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9126  008038  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9127                           
  9128                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9129  00803C  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9130  008040  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9131  008044  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9132  008048  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9133  00804C  0E04               	movlw	4
  9134  00804E  6E13               	movwf	internalFlash_read@data_length+1,c
  9135  008050  0E00               	movlw	0
  9136  008052  6E12               	movwf	internalFlash_read@data_length,c
  9137  008054  0E00               	movlw	low _pageBuffer
  9138  008056  6E14               	movwf	internalFlash_read@buffer,c
  9139  008058  0E08               	movlw	high _pageBuffer
  9140  00805A  6E15               	movwf	internalFlash_read@buffer+1,c
  9141  00805C  EC44  F041         	call	_internalFlash_read	;wreg free
  9142  008060  0012               	return		;funcret
  9143  008062                     __end_of_internalFlash_readPage:
  9144                           	opt stack 0
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           intcon	equ	0xFF2
  9152                           intcon2	equ	0xFF1
  9153                           intcon3	equ	0xFF0
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           indf1	equ	0xFE7
  9157                           postdec1	equ	0xFE5
  9158                           plusw1	equ	0xFE3
  9159                           fsr1h	equ	0xFE2
  9160                           fsr1l	equ	0xFE1
  9161                           indf2	equ	0xFDF
  9162                           postinc2	equ	0xFDE
  9163                           postdec2	equ	0xFDD
  9164                           plusw2	equ	0xFDB
  9165                           fsr2h	equ	0xFDA
  9166                           fsr2l	equ	0xFD9
  9167                           status	equ	0xFD8
  9168                           
  9169 ;; *************** function _internalFlash_read *****************
  9170 ;; Defined at:
  9171 ;;		line 144 in file "internal_flash.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  address         4   13[COMRAM] unsigned long 
  9174 ;;  data_length     2   17[COMRAM] unsigned int 
  9175 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9176 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      unsigned char 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9188 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;Total ram usage:        8 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    1
  9195 ;; This function calls:
  9196 ;;		_memcpy
  9197 ;; This function is called by:
  9198 ;;		_internalFlash_readPage
  9199 ;;		__bootloader_verify_program_memory
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text36
  9204  008288                     __ptext36:
  9205                           	opt stack 0
  9206  008288                     _internalFlash_read:
  9207                           	opt stack 26
  9208                           
  9209                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
  9210                           
  9211                           ;incstack = 0
  9212  008288  5011               	movf	internalFlash_read@address+3,w,c
  9213  00828A  E118               	bnz	l2529
  9214  00828C  280E               	incf	internalFlash_read@address,w,c
  9215  00828E  0EFF               	movlw	255
  9216  008290  580F               	subwfb	internalFlash_read@address+1,w,c
  9217  008292  0E01               	movlw	1
  9218  008294  5810               	subwfb	internalFlash_read@address+2,w,c
  9219  008296  B0D8               	btfsc	status,0,c
  9220  008298  0012               	return	
  9221                           
  9222                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
  9223                           
  9224                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9225  00829A  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9226  00829E  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9227  0082A2  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9228  0082A6  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9229  0082AA  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9230  0082AE  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9231  0082B2  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9232  0082B6  EC9C  F03A         	call	_memcpy	;wreg free
  9233  0082BA  0012               	return	
  9234  0082BC                     l2529:
  9235  0082BC  0012               	return		;funcret
  9236  0082BE                     __end_of_internalFlash_read:
  9237                           	opt stack 0
  9238                           tblptru	equ	0xFF8
  9239                           tblptrh	equ	0xFF7
  9240                           tblptrl	equ	0xFF6
  9241                           tablat	equ	0xFF5
  9242                           prodh	equ	0xFF4
  9243                           prodl	equ	0xFF3
  9244                           intcon	equ	0xFF2
  9245                           intcon2	equ	0xFF1
  9246                           intcon3	equ	0xFF0
  9247                           postinc0	equ	0xFEE
  9248                           wreg	equ	0xFE8
  9249                           indf1	equ	0xFE7
  9250                           postdec1	equ	0xFE5
  9251                           plusw1	equ	0xFE3
  9252                           fsr1h	equ	0xFE2
  9253                           fsr1l	equ	0xFE1
  9254                           indf2	equ	0xFDF
  9255                           postinc2	equ	0xFDE
  9256                           postdec2	equ	0xFDD
  9257                           plusw2	equ	0xFDB
  9258                           fsr2h	equ	0xFDA
  9259                           fsr2l	equ	0xFD9
  9260                           status	equ	0xFD8
  9261                           
  9262 ;; *************** function _internalFlash_pageFromAddress *****************
  9263 ;; Defined at:
  9264 ;;		line 308 in file "internal_flash.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  address         4    0[COMRAM] unsigned long 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  2    0[COMRAM] unsigned int 
  9271 ;; Registers used:
  9272 ;;		wreg, status,2, status,0
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9281 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9282 ;;Total ram usage:        5 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		__bootloader_program
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text37
  9292  008828                     __ptext37:
  9293                           	opt stack 0
  9294  008828                     _internalFlash_pageFromAddress:
  9295                           	opt stack 28
  9296                           
  9297                           ;internal_flash.c: 310: address >>= 10;
  9298                           
  9299                           ;incstack = 0
  9300  008828  0E0A               	movlw	10
  9301  00882A  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9302  00882C                     u11205:
  9303  00882C  90D8               	bcf	status,0,c
  9304  00882E  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9305  008830  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9306  008832  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9307  008834  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9308  008836  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9309  008838  D7F9               	goto	u11205
  9310                           
  9311                           ;internal_flash.c: 311: return (uint16_t) address;
  9312  00883A  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9313  00883E  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9314  008842  0012               	return	
  9315  008844                     __end_of_internalFlash_pageFromAddress:
  9316                           	opt stack 0
  9317                           tblptru	equ	0xFF8
  9318                           tblptrh	equ	0xFF7
  9319                           tblptrl	equ	0xFF6
  9320                           tablat	equ	0xFF5
  9321                           prodh	equ	0xFF4
  9322                           prodl	equ	0xFF3
  9323                           intcon	equ	0xFF2
  9324                           intcon2	equ	0xFF1
  9325                           intcon3	equ	0xFF0
  9326                           postinc0	equ	0xFEE
  9327                           wreg	equ	0xFE8
  9328                           indf1	equ	0xFE7
  9329                           postdec1	equ	0xFE5
  9330                           plusw1	equ	0xFE3
  9331                           fsr1h	equ	0xFE2
  9332                           fsr1l	equ	0xFE1
  9333                           indf2	equ	0xFDF
  9334                           postinc2	equ	0xFDE
  9335                           postdec2	equ	0xFDD
  9336                           plusw2	equ	0xFDB
  9337                           fsr2h	equ	0xFDA
  9338                           fsr2l	equ	0xFD9
  9339                           status	equ	0xFD8
  9340                           
  9341 ;; *************** function _internalFlash_getBuffer *****************
  9342 ;; Defined at:
  9343 ;;		line 32 in file "internal_flash.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;		None
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  2    0[COMRAM] PTR unsigned char 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;Total ram usage:        2 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		__bootloader_program
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text38
  9371  0089E4                     __ptext38:
  9372                           	opt stack 0
  9373  0089E4                     _internalFlash_getBuffer:
  9374                           	opt stack 28
  9375                           
  9376                           ;internal_flash.c: 34: return pageBuffer;
  9377                           
  9378                           ;incstack = 0
  9379  0089E4  0E00               	movlw	low _pageBuffer
  9380  0089E6  6E01               	movwf	?_internalFlash_getBuffer,c
  9381  0089E8  0E08               	movlw	high _pageBuffer
  9382  0089EA  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9383  0089EC  0012               	return	
  9384  0089EE                     __end_of_internalFlash_getBuffer:
  9385                           	opt stack 0
  9386                           tblptru	equ	0xFF8
  9387                           tblptrh	equ	0xFF7
  9388                           tblptrl	equ	0xFF6
  9389                           tablat	equ	0xFF5
  9390                           prodh	equ	0xFF4
  9391                           prodl	equ	0xFF3
  9392                           intcon	equ	0xFF2
  9393                           intcon2	equ	0xFF1
  9394                           intcon3	equ	0xFF0
  9395                           postinc0	equ	0xFEE
  9396                           wreg	equ	0xFE8
  9397                           indf1	equ	0xFE7
  9398                           postdec1	equ	0xFE5
  9399                           plusw1	equ	0xFE3
  9400                           fsr1h	equ	0xFE2
  9401                           fsr1l	equ	0xFE1
  9402                           indf2	equ	0xFDF
  9403                           postinc2	equ	0xFDE
  9404                           postdec2	equ	0xFDD
  9405                           plusw2	equ	0xFDB
  9406                           fsr2h	equ	0xFDA
  9407                           fsr2l	equ	0xFD9
  9408                           status	equ	0xFD8
  9409                           
  9410 ;; *************** function _internalFlash_erasePage *****************
  9411 ;; Defined at:
  9412 ;;		line 44 in file "internal_flash.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;  page            2    2[COMRAM] unsigned int 
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;  address         4    4[COMRAM] unsigned long 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;                  1    wreg      void 
  9419 ;; Registers used:
  9420 ;;		wreg, status,2, status,0, cstack
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9429 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9430 ;;Total ram usage:        6 bytes
  9431 ;; Hardware stack levels used:    1
  9432 ;; Hardware stack levels required when called:    1
  9433 ;; This function calls:
  9434 ;;		__internalFlash_unlockAndActivate
  9435 ;; This function is called by:
  9436 ;;		__bootloader_program
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text39
  9441  0082F2                     __ptext39:
  9442                           	opt stack 0
  9443  0082F2                     _internalFlash_erasePage:
  9444                           	opt stack 27
  9445                           
  9446                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
  9447                           
  9448                           ;incstack = 0
  9449  0082F2  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
  9450  0082F6  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
  9451  0082FA  6A07               	clrf	internalFlash_erasePage@address+2,c
  9452  0082FC  6A08               	clrf	internalFlash_erasePage@address+3,c
  9453                           
  9454                           ;internal_flash.c: 50: address <<= 10;
  9455  0082FE  0E0A               	movlw	10
  9456  008300                     u11215:
  9457  008300  90D8               	bcf	status,0,c
  9458  008302  3605               	rlcf	internalFlash_erasePage@address,f,c
  9459  008304  3606               	rlcf	internalFlash_erasePage@address+1,f,c
  9460  008306  3607               	rlcf	internalFlash_erasePage@address+2,f,c
  9461  008308  3608               	rlcf	internalFlash_erasePage@address+3,f,c
  9462  00830A  2EE8               	decfsz	wreg,f,c
  9463  00830C  D7F9               	goto	u11215
  9464                           
  9465                           ;internal_flash.c: 51: TBLPTR = address;
  9466  00830E  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9467  008312  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9468  008316  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9469                           
  9470                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
  9471  00831A  84A6               	bsf	4006,2,c	;volsfr
  9472                           
  9473                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
  9474  00831C  88A6               	bsf	4006,4,c	;volsfr
  9475                           
  9476                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9477  00831E  0EB5               	movlw	181
  9478  008320  ECF6  F042         	call	__internalFlash_unlockAndActivate
  9479  008324  0012               	return		;funcret
  9480  008326                     __end_of_internalFlash_erasePage:
  9481                           	opt stack 0
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           intcon	equ	0xFF2
  9489                           intcon2	equ	0xFF1
  9490                           intcon3	equ	0xFF0
  9491                           postinc0	equ	0xFEE
  9492                           wreg	equ	0xFE8
  9493                           indf1	equ	0xFE7
  9494                           postdec1	equ	0xFE5
  9495                           plusw1	equ	0xFE3
  9496                           fsr1h	equ	0xFE2
  9497                           fsr1l	equ	0xFE1
  9498                           indf2	equ	0xFDF
  9499                           postinc2	equ	0xFDE
  9500                           postdec2	equ	0xFDD
  9501                           plusw2	equ	0xFDB
  9502                           fsr2h	equ	0xFDA
  9503                           fsr2l	equ	0xFD9
  9504                           status	equ	0xFD8
  9505                           
  9506 ;; *************** function __internalFlash_unlockAndActivate *****************
  9507 ;; Defined at:
  9508 ;;		line 106 in file "internal_flash.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  UnlockKey       1    wreg     unsigned char 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9513 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9527 ;;Total ram usage:        2 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_internalFlash_erasePage
  9533 ;;		_internalFlash_writePage
  9534 ;;		_EraseBlock
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text40
  9539  0085EC                     __ptext40:
  9540                           	opt stack 0
  9541  0085EC                     __internalFlash_unlockAndActivate:
  9542                           	opt stack 27
  9543                           
  9544                           ;incstack = 0
  9545                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9546  0085EC  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9547                           
  9548                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9549  0085EE  0EB5               	movlw	181
  9550  0085F0  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9551  0085F2  B4D8               	btfsc	status,2,c
  9552  0085F4  D002               	goto	l2520
  9553                           
  9554                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
  9555  0085F6  94A6               	bcf	4006,2,c	;volsfr
  9556                           
  9557                           ;internal_flash.c: 118: return;
  9558  0085F8  0012               	return	
  9559  0085FA                     l2520:
  9560                           
  9561                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
  9562  0085FA  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9563                           
  9564                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
  9565  0085FE  9EF2               	bcf	intcon,7,c	;volatile
  9566                           
  9567                           ;internal_flash.c: 123: EECON2 = 0x55;
  9568  008600  0E55               	movlw	85
  9569  008602  6EA7               	movwf	4007,c	;volsfr
  9570                           
  9571                           ;internal_flash.c: 124: EECON2 = 0xAA;
  9572  008604  0EAA               	movlw	170
  9573  008606  6EA7               	movwf	4007,c	;volsfr
  9574                           
  9575                           ;internal_flash.c: 125: EECON1bits.WR = 1;
  9576  008608  82A6               	bsf	4006,1,c	;volsfr
  9577                           
  9578                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
  9579  00860A  94A6               	bcf	4006,2,c	;volsfr
  9580                           
  9581                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
  9582  00860C  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9583  00860E  0012               	return	
  9584                           
  9585                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
  9586  008610  8EF2               	bsf	intcon,7,c	;volatile
  9587  008612  0012               	return	
  9588  008614                     __end_of__internalFlash_unlockAndActivate:
  9589                           	opt stack 0
  9590                           tblptru	equ	0xFF8
  9591                           tblptrh	equ	0xFF7
  9592                           tblptrl	equ	0xFF6
  9593                           tablat	equ	0xFF5
  9594                           prodh	equ	0xFF4
  9595                           prodl	equ	0xFF3
  9596                           intcon	equ	0xFF2
  9597                           intcon2	equ	0xFF1
  9598                           intcon3	equ	0xFF0
  9599                           postinc0	equ	0xFEE
  9600                           wreg	equ	0xFE8
  9601                           indf1	equ	0xFE7
  9602                           postdec1	equ	0xFE5
  9603                           plusw1	equ	0xFE3
  9604                           fsr1h	equ	0xFE2
  9605                           fsr1l	equ	0xFE1
  9606                           indf2	equ	0xFDF
  9607                           postinc2	equ	0xFDE
  9608                           postdec2	equ	0xFDD
  9609                           plusw2	equ	0xFDB
  9610                           fsr2h	equ	0xFDA
  9611                           fsr2l	equ	0xFD9
  9612                           status	equ	0xFD8
  9613                           
  9614 ;; *************** function _internalFlash_addressWithinPage *****************
  9615 ;; Defined at:
  9616 ;;		line 322 in file "internal_flash.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  address         4    8[COMRAM] unsigned long 
  9619 ;;  page            2   12[COMRAM] unsigned int 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  2    8[COMRAM] unsigned int 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0, cstack
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9631 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;Total ram usage:       14 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    1
  9638 ;; This function calls:
  9639 ;;		_internalFlash_addressFromPage
  9640 ;; This function is called by:
  9641 ;;		__bootloader_program
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text41
  9646  007726                     __ptext41:
  9647                           	opt stack 0
  9648  007726                     _internalFlash_addressWithinPage:
  9649                           	opt stack 27
  9650                           
  9651                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9652                           
  9653                           ;incstack = 0
  9654  007726  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9655  00772A  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9656  00772E  EC5C  F042         	call	_internalFlash_addressFromPage	;wreg free
  9657  007732  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9658  007736  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9659  00773A  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9660  00773E  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9661                           
  9662                           ;internal_flash.c: 326: address = address - page_start_address;
  9663  007742  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9664  007746  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9665  00774A  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9666  00774E  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9667  007752  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9668  007754  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9669  007756  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9670  007758  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9671  00775A  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9672  00775C  0E00               	movlw	0
  9673  00775E  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9674  007760  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9675  007762  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9676  007764  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9677  007766  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9678  007768  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9679  00776A  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9680  00776C  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9681  00776E  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9682  007770  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9683  007772  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9684  007774  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9685  007776  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9686  007778  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9687  00777A  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9688                           
  9689                           ;internal_flash.c: 327: return (uint16_t) address;
  9690  00777C  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9691  007780  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9692  007784  0012               	return	
  9693  007786                     __end_of_internalFlash_addressWithinPage:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           intcon2	equ	0xFF1
  9703                           intcon3	equ	0xFF0
  9704                           postinc0	equ	0xFEE
  9705                           wreg	equ	0xFE8
  9706                           indf1	equ	0xFE7
  9707                           postdec1	equ	0xFE5
  9708                           plusw1	equ	0xFE3
  9709                           fsr1h	equ	0xFE2
  9710                           fsr1l	equ	0xFE1
  9711                           indf2	equ	0xFDF
  9712                           postinc2	equ	0xFDE
  9713                           postdec2	equ	0xFDD
  9714                           plusw2	equ	0xFDB
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _internalFlash_addressFromPage *****************
  9720 ;; Defined at:
  9721 ;;		line 314 in file "internal_flash.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  page            2    0[COMRAM] unsigned int 
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  address         4    4[COMRAM] unsigned long 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  4    0[COMRAM] unsigned long 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9736 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9739 ;;Total ram usage:        8 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_internalFlash_readPage
  9745 ;;		_internalFlash_addressWithinPage
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text42
  9750  0084B8                     __ptext42:
  9751                           	opt stack 0
  9752  0084B8                     _internalFlash_addressFromPage:
  9753                           	opt stack 27
  9754                           
  9755                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
  9756                           
  9757                           ;incstack = 0
  9758  0084B8  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9759  0084BC  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9760  0084C0  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9761  0084C2  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9762                           
  9763                           ;internal_flash.c: 318: address <<= 10;
  9764  0084C4  0E0A               	movlw	10
  9765  0084C6                     u10535:
  9766  0084C6  90D8               	bcf	status,0,c
  9767  0084C8  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9768  0084CA  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9769  0084CC  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9770  0084CE  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9771  0084D0  2EE8               	decfsz	wreg,f,c
  9772  0084D2  D7F9               	goto	u10535
  9773                           
  9774                           ;internal_flash.c: 319: return address;
  9775  0084D4  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9776  0084D8  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9777  0084DC  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9778  0084E0  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9779  0084E4  0012               	return	
  9780  0084E6                     __end_of_internalFlash_addressFromPage:
  9781                           	opt stack 0
  9782                           tblptru	equ	0xFF8
  9783                           tblptrh	equ	0xFF7
  9784                           tblptrl	equ	0xFF6
  9785                           tablat	equ	0xFF5
  9786                           prodh	equ	0xFF4
  9787                           prodl	equ	0xFF3
  9788                           intcon	equ	0xFF2
  9789                           intcon2	equ	0xFF1
  9790                           intcon3	equ	0xFF0
  9791                           postinc0	equ	0xFEE
  9792                           wreg	equ	0xFE8
  9793                           indf1	equ	0xFE7
  9794                           postdec1	equ	0xFE5
  9795                           plusw1	equ	0xFE3
  9796                           fsr1h	equ	0xFE2
  9797                           fsr1l	equ	0xFE1
  9798                           indf2	equ	0xFDF
  9799                           postinc2	equ	0xFDE
  9800                           postdec2	equ	0xFDD
  9801                           plusw2	equ	0xFDB
  9802                           fsr2h	equ	0xFDA
  9803                           fsr2l	equ	0xFD9
  9804                           status	equ	0xFD8
  9805                           
  9806 ;; *************** function __bootloader_check_address *****************
  9807 ;; Defined at:
  9808 ;;		line 109 in file "bootloader.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  address         4    0[COMRAM] unsigned long 
  9811 ;;  dataLength      1    4[COMRAM] unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  cntr            1   11[COMRAM] unsigned char 
  9814 ;;  byte_status     1   10[COMRAM] enum E6949
  9815 ;;  worst_case      1    9[COMRAM] enum E6949
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1    wreg      enum E6949
  9818 ;; Registers used:
  9819 ;;		wreg, status,2, status,0
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9825 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9826 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;Total ram usage:       12 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		__bootloader_verify_file
  9835 ;;		__bootloader_program
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           	psect	text43
  9840  00578C                     __ptext43:
  9841                           	opt stack 0
  9842  00578C                     __bootloader_check_address:
  9843                           	opt stack 28
  9844                           
  9845                           ;bootloader.c: 111: addressCheckResult_t byte_status;;bootloader.c: 112: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 113: uint8_t cntr;;bootloader.c: 115: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
  9846                           
  9847                           ;incstack = 0
  9848  00578C  0E00               	movlw	0
  9849  00578E  6E0A               	movwf	__bootloader_check_address@worst_case,c
  9850                           
  9851                           ;bootloader.c: 118: for(cntr=0; cntr<dataLength; ++cntr)
  9852  005790  0E00               	movlw	0
  9853  005792  6E0C               	movwf	__bootloader_check_address@cntr,c
  9854  005794  D062               	goto	l2380
  9855  005796                     
  9856                           ;bootloader.c: 119: {;bootloader.c: 121: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
  9857  005796  500C               	movf	__bootloader_check_address@cntr,w,c
  9858  005798  2401               	addwf	__bootloader_check_address@address,w,c
  9859  00579A  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9860  00579C  0E00               	movlw	0
  9861  00579E  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9862  0057A0  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9863  0057A2  0E00               	movlw	0
  9864  0057A4  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9865  0057A6  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9866  0057A8  0E00               	movlw	0
  9867  0057AA  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9868  0057AC  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9869  0057AE  5009               	movf	??__bootloader_check_address+3,w,c
  9870  0057B0  1008               	iorwf	??__bootloader_check_address+2,w,c
  9871  0057B2  E104               	bnz	u11130
  9872  0057B4  0E90               	movlw	144
  9873  0057B6  5C07               	subwf	??__bootloader_check_address+1,w,c
  9874  0057B8  A0D8               	btfss	status,0,c
  9875  0057BA  D018               	goto	l2382
  9876  0057BC                     u11130:
  9877  0057BC  500C               	movf	__bootloader_check_address@cntr,w,c
  9878  0057BE  2401               	addwf	__bootloader_check_address@address,w,c
  9879  0057C0  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9880  0057C2  0E00               	movlw	0
  9881  0057C4  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9882  0057C6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9883  0057C8  0E00               	movlw	0
  9884  0057CA  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9885  0057CC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9886  0057CE  0E00               	movlw	0
  9887  0057D0  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9888  0057D2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9889  0057D4  5009               	movf	??__bootloader_check_address+3,w,c
  9890  0057D6  E10A               	bnz	l14001
  9891  0057D8  0EF8               	movlw	248
  9892  0057DA  5C06               	subwf	??__bootloader_check_address,w,c
  9893  0057DC  0EFF               	movlw	255
  9894  0057DE  5807               	subwfb	??__bootloader_check_address+1,w,c
  9895  0057E0  0E01               	movlw	1
  9896  0057E2  5808               	subwfb	??__bootloader_check_address+2,w,c
  9897  0057E4  B0D8               	btfsc	status,0,c
  9898  0057E6  D002               	goto	l2382
  9899                           
  9900                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_OK;
  9901  0057E8  0E00               	movlw	0
  9902  0057EA  D029               	goto	L4
  9903  0057EC                     l2382:
  9904  0057EC                     l14001:
  9905                           
  9906                           ;bootloader.c: 127: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
  9907  0057EC  500C               	movf	__bootloader_check_address@cntr,w,c
  9908  0057EE  2401               	addwf	__bootloader_check_address@address,w,c
  9909  0057F0  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9910  0057F2  0E00               	movlw	0
  9911  0057F4  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9912  0057F6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9913  0057F8  0E00               	movlw	0
  9914  0057FA  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9915  0057FC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9916  0057FE  0E00               	movlw	0
  9917  005800  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9918  005802  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9919  005804  5009               	movf	??__bootloader_check_address+3,w,c
  9920  005806  E108               	bnz	u11150
  9921  005808  0EF8               	movlw	248
  9922  00580A  5C06               	subwf	??__bootloader_check_address,w,c
  9923  00580C  0EFF               	movlw	255
  9924  00580E  5807               	subwfb	??__bootloader_check_address+1,w,c
  9925  005810  0E01               	movlw	1
  9926  005812  5808               	subwfb	??__bootloader_check_address+2,w,c
  9927  005814  A0D8               	btfss	status,0,c
  9928  005816  D015               	goto	l2384
  9929  005818                     u11150:
  9930  005818  500C               	movf	__bootloader_check_address@cntr,w,c
  9931  00581A  2401               	addwf	__bootloader_check_address@address,w,c
  9932  00581C  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9933  00581E  0E00               	movlw	0
  9934  005820  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9935  005822  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9936  005824  0E00               	movlw	0
  9937  005826  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9938  005828  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9939  00582A  0E00               	movlw	0
  9940  00582C  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9941  00582E  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9942  005830  5009               	movf	??__bootloader_check_address+3,w,c
  9943  005832  E107               	bnz	l2384
  9944  005834  0E02               	movlw	2
  9945  005836  5C08               	subwf	??__bootloader_check_address+2,w,c
  9946  005838  B0D8               	btfsc	status,0,c
  9947  00583A  D003               	goto	l2384
  9948                           
  9949                           ;bootloader.c: 128: {;bootloader.c: 129: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
  9950  00583C  0E01               	movlw	1
  9951  00583E                     L4:
  9952  00583E  6E0B               	movwf	__bootloader_check_address@byte_status,c
  9953                           
  9954                           ;bootloader.c: 130: }
  9955  005840  D001               	goto	l2385
  9956  005842                     l2384:
  9957                           
  9958                           ;bootloader.c: 131: else;bootloader.c: 132: {;bootloader.c: 133: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
  9959  005842  680B               	setf	__bootloader_check_address@byte_status,c
  9960  005844                     l2385:
  9961                           
  9962                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
  9963  005844  280B               	incf	__bootloader_check_address@byte_status,w,c
  9964  005846  A4D8               	btfss	status,2,c
  9965  005848  D002               	goto	l2386
  9966                           
  9967                           ;bootloader.c: 138: {;bootloader.c: 139: return ADDRESS_CHECK_RESULT_ERROR;
  9968  00584A  0EFF               	movlw	255
  9969  00584C  0012               	return	
  9970  00584E                     l2386:
  9971                           
  9972                           ;bootloader.c: 140: };bootloader.c: 143: if(byte_status > worst_case)
  9973  00584E  500B               	movf	__bootloader_check_address@byte_status,w,c
  9974  005850  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
  9975  005852  A0D8               	btfss	status,0,c
  9976                           
  9977                           ;bootloader.c: 144: {;bootloader.c: 145: worst_case = byte_status;
  9978  005854  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
  9979  005858  2A0C               	incf	__bootloader_check_address@cntr,f,c
  9980  00585A                     l2380:
  9981  00585A  5005               	movf	__bootloader_check_address@dataLength,w,c
  9982  00585C  5C0C               	subwf	__bootloader_check_address@cntr,w,c
  9983  00585E  A0D8               	btfss	status,0,c
  9984  005860  D79A               	goto	l2381
  9985                           
  9986                           ;bootloader.c: 146: };bootloader.c: 147: };bootloader.c: 149: return worst_case;
  9987  005862  500A               	movf	__bootloader_check_address@worst_case,w,c
  9988  005864  0012               	return	
  9989  005866                     __end_of__bootloader_check_address:
  9990                           	opt stack 0
  9991                           tblptru	equ	0xFF8
  9992                           tblptrh	equ	0xFF7
  9993                           tblptrl	equ	0xFF6
  9994                           tablat	equ	0xFF5
  9995                           prodh	equ	0xFF4
  9996                           prodl	equ	0xFF3
  9997                           intcon	equ	0xFF2
  9998                           intcon2	equ	0xFF1
  9999                           intcon3	equ	0xFF0
 10000                           postinc0	equ	0xFEE
 10001                           wreg	equ	0xFE8
 10002                           indf1	equ	0xFE7
 10003                           postdec1	equ	0xFE5
 10004                           plusw1	equ	0xFE3
 10005                           fsr1h	equ	0xFE2
 10006                           fsr1l	equ	0xFE1
 10007                           indf2	equ	0xFDF
 10008                           postinc2	equ	0xFDE
 10009                           postdec2	equ	0xFDD
 10010                           plusw2	equ	0xFDB
 10011                           fsr2h	equ	0xFDA
 10012                           fsr2l	equ	0xFD9
 10013                           status	equ	0xFD8
 10014                           
 10015 ;; *************** function __bootloader_find_file *****************
 10016 ;; Defined at:
 10017 ;;		line 152 in file "bootloader.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;		None
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      void 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10035 ;;Total ram usage:        0 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; Hardware stack levels required when called:    7
 10038 ;; This function calls:
 10039 ;;		_fat_find_file
 10040 ;;		_fat_get_file_size
 10041 ;; This function is called by:
 10042 ;;		_bootloader_run
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text44
 10047  0064FE                     __ptext44:
 10048                           	opt stack 0
 10049  0064FE                     __bootloader_find_file:
 10050                           	opt stack 22
 10051                           
 10052                           ;bootloader.c: 155: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10053                           
 10054                           ;incstack = 0
 10055  0064FE  0EB7               	movlw	low _bootloader_filename
 10056  006500  6E2C               	movwf	fat_find_file@name,c
 10057  006502  0E8F               	movlw	high _bootloader_filename
 10058  006504  6E2D               	movwf	fat_find_file@name+1,c
 10059  006506  0EC8               	movlw	low _bootloader_extension
 10060  006508  6E2E               	movwf	fat_find_file@extension,c
 10061  00650A  0E8F               	movlw	high _bootloader_extension
 10062  00650C  6E2F               	movwf	fat_find_file@extension+1,c
 10063  00650E  EC56  F02B         	call	_fat_find_file	;wreg free
 10064  006512  0100               	movlb	0	; () banked
 10065  006514  6FFF               	movwf	_file_number& (0+255),b
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;bootloader.c: 158: if(file_number!=0xFF)
 10069  006516  29FF               	incf	_file_number& (0+255),w,b
 10070  006518  B4D8               	btfsc	status,2,c
 10071  00651A  D034               	goto	l2392
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;bootloader.c: 159: {;bootloader.c: 161: hex_file_size = fat_get_file_size(file_number);
 10075  00651C  51FF               	movf	_file_number& (0+255),w,b
 10076  00651E  ECCA  F039         	call	_fat_get_file_size
 10077  006522  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
 10078  006526  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10079  00652A  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10080  00652E  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10081                           
 10082                           ;bootloader.c: 163: hex_file_entries = 0;
 10083  006532  0E00               	movlw	0
 10084  006534  0101               	movlb	1	; () banked
 10085  006536  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
 10086  006538  0E00               	movlw	0
 10087  00653A  6F78               	movwf	_hex_file_entries& (0+255),b
 10088                           
 10089                           ; BSR set to: 1
 10090                           ;bootloader.c: 164: hex_file_offset = 0;
 10091  00653C  0E00               	movlw	0
 10092  00653E  0100               	movlb	0	; () banked
 10093  006540  6FD7               	movwf	_hex_file_offset& (0+255),b
 10094  006542  0E00               	movlw	0
 10095  006544  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
 10096  006546  0E00               	movlw	0
 10097  006548  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
 10098  00654A  0E00               	movlw	0
 10099  00654C  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;bootloader.c: 165: file_minimum_address = 0xFFFFFFFF;
 10103  00654E  0101               	movlb	1	; () banked
 10104  006550  6952               	setf	_file_minimum_address& (0+255),b
 10105  006552  6953               	setf	(_file_minimum_address+1)& (0+255),b
 10106  006554  6954               	setf	(_file_minimum_address+2)& (0+255),b
 10107  006556  6955               	setf	(_file_minimum_address+3)& (0+255),b
 10108                           
 10109                           ; BSR set to: 1
 10110                           ;bootloader.c: 166: file_maximum_address = 0x00000000;
 10111  006558  0E00               	movlw	0
 10112  00655A  6F4E               	movwf	_file_maximum_address& (0+255),b
 10113  00655C  0E00               	movlw	0
 10114  00655E  6F4F               	movwf	(_file_maximum_address+1)& (0+255),b
 10115  006560  0E00               	movlw	0
 10116  006562  6F50               	movwf	(_file_maximum_address+2)& (0+255),b
 10117  006564  0E00               	movlw	0
 10118  006566  6F51               	movwf	(_file_maximum_address+3)& (0+255),b
 10119                           
 10120                           ; BSR set to: 1
 10121                           ;bootloader.c: 167: extended_linear_address = 0x00000000;
 10122  006568  0E00               	movlw	0
 10123  00656A  6F46               	movwf	_extended_linear_address& (0+255),b
 10124  00656C  0E00               	movlw	0
 10125  00656E  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10126  006570  0E00               	movlw	0
 10127  006572  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10128  006574  0E00               	movlw	0
 10129  006576  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10130                           
 10131                           ; BSR set to: 1
 10132                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10133  006578  0E20               	movlw	32
 10134  00657A  0100               	movlb	0	; () banked
 10135  00657C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10139  00657E  0E20               	movlw	32
 10140  006580  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10141                           
 10142                           ;bootloader.c: 170: }
 10143  006582  0012               	return	
 10144  006584                     l2392:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;bootloader.c: 172: else;bootloader.c: 173: {;bootloader.c: 175: hex_file_size = 0;
 10148                           
 10149                           ; BSR set to: 0
 10150  006584  0E00               	movlw	0
 10151  006586  0101               	movlb	1	; () banked
 10152  006588  6F4A               	movwf	_hex_file_size& (0+255),b
 10153  00658A  0E00               	movlw	0
 10154  00658C  6F4B               	movwf	(_hex_file_size+1)& (0+255),b
 10155  00658E  0E00               	movlw	0
 10156  006590  6F4C               	movwf	(_hex_file_size+2)& (0+255),b
 10157  006592  0E00               	movlw	0
 10158  006594  6F4D               	movwf	(_hex_file_size+3)& (0+255),b
 10159                           
 10160                           ;bootloader.c: 177: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10161  006596  0E10               	movlw	16
 10162  006598  0100               	movlb	0	; () banked
 10163  00659A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10164                           
 10165                           ;bootloader.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10166  00659C  0E10               	movlw	16
 10167  00659E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10168  0065A0  0012               	return	
 10169  0065A2                     __end_of__bootloader_find_file:
 10170                           	opt stack 0
 10171                           tblptru	equ	0xFF8
 10172                           tblptrh	equ	0xFF7
 10173                           tblptrl	equ	0xFF6
 10174                           tablat	equ	0xFF5
 10175                           prodh	equ	0xFF4
 10176                           prodl	equ	0xFF3
 10177                           intcon	equ	0xFF2
 10178                           intcon2	equ	0xFF1
 10179                           intcon3	equ	0xFF0
 10180                           postinc0	equ	0xFEE
 10181                           wreg	equ	0xFE8
 10182                           indf1	equ	0xFE7
 10183                           postdec1	equ	0xFE5
 10184                           plusw1	equ	0xFE3
 10185                           fsr1h	equ	0xFE2
 10186                           fsr1l	equ	0xFE1
 10187                           indf2	equ	0xFDF
 10188                           postinc2	equ	0xFDE
 10189                           postdec2	equ	0xFDD
 10190                           plusw2	equ	0xFDB
 10191                           fsr2h	equ	0xFDA
 10192                           fsr2l	equ	0xFD9
 10193                           status	equ	0xFD8
 10194                           
 10195 ;; *************** function __normal_mode *****************
 10196 ;; Defined at:
 10197 ;;		line 208 in file "main.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;		None
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;		None
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      unsigned char 
 10204 ;; Registers used:
 10205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10215 ;;Total ram usage:        0 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    3
 10218 ;; This function calls:
 10219 ;;		_i2c_eeprom_readByte
 10220 ;;		_i2c_eeprom_writeByte
 10221 ;; This function is called by:
 10222 ;;		_main
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           	psect	text45
 10227  007786                     __ptext45:
 10228                           	opt stack 0
 10229  007786                     __normal_mode:
 10230                           	opt stack 27
 10231                           
 10232                           ;main.c: 210: if(i2c_eeprom_readByte(0x100)==0x94)
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;incstack = 0
 10236  007786  0E01               	movlw	1
 10237  007788  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10238  00778A  0E00               	movlw	0
 10239  00778C  6E12               	movwf	i2c_eeprom_readByte@address,c
 10240  00778E  ECA5  F03E         	call	_i2c_eeprom_readByte	;wreg free
 10241  007792  0A94               	xorlw	148
 10242  007794  A4D8               	btfss	status,2,c
 10243  007796  D00A               	goto	l914
 10244                           
 10245                           ;main.c: 211: {;main.c: 213: i2c_eeprom_writeByte(0x100, 0x00);
 10246  007798  0E01               	movlw	1
 10247  00779A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10248  00779C  0E00               	movlw	0
 10249  00779E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10250  0077A0  0E00               	movlw	0
 10251  0077A2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10252  0077A4  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
 10253                           
 10254                           ;main.c: 215: return 0;
 10255  0077A8  0E00               	movlw	0
 10256  0077AA  0012               	return	
 10257  0077AC                     l914:
 10258                           
 10259                           ;main.c: 217: else if(i2c_eeprom_readByte(0x100)==0x78)
 10260  0077AC  0E01               	movlw	1
 10261  0077AE  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10262  0077B0  0E00               	movlw	0
 10263  0077B2  6E12               	movwf	i2c_eeprom_readByte@address,c
 10264  0077B4  ECA5  F03E         	call	_i2c_eeprom_readByte	;wreg free
 10265  0077B8  0A78               	xorlw	120
 10266  0077BA  A4D8               	btfss	status,2,c
 10267  0077BC  D00A               	goto	l917
 10268                           
 10269                           ;main.c: 218: {;main.c: 220: i2c_eeprom_writeByte(0x100, 0x00);
 10270  0077BE  0E01               	movlw	1
 10271  0077C0  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10272  0077C2  0E00               	movlw	0
 10273  0077C4  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10274  0077C6  0E00               	movlw	0
 10275  0077C8  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10276  0077CA  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
 10277                           
 10278                           ;main.c: 222: return 1;
 10279  0077CE  0E01               	movlw	1
 10280  0077D0  0012               	return	
 10281  0077D2                     l917:
 10282                           
 10283                           ;main.c: 223: };main.c: 229: LATAbits.LA0 = 1;
 10284  0077D2  8089               	bsf	3977,0,c	;volatile
 10285                           
 10286                           ;main.c: 230: TRISAbits.TRISA0 = 0;
 10287  0077D4  9092               	bcf	3986,0,c	;volatile
 10288                           
 10289                           ;main.c: 231: TRISAbits.TRISA0 = 1;
 10290  0077D6  8092               	bsf	3986,0,c	;volatile
 10291                           
 10292                           ;main.c: 233: if(!PORTAbits.RA0)
 10293  0077D8  B080               	btfsc	3968,0,c	;volatile
 10294  0077DA  D002               	goto	l918
 10295                           
 10296                           ;main.c: 234: {;main.c: 236: return 0;
 10297  0077DC  0E00               	movlw	0
 10298                           
 10299                           ;main.c: 237: }
 10300  0077DE  0012               	return	
 10301  0077E0                     l918:
 10302                           
 10303                           ;main.c: 238: else;main.c: 239: {;main.c: 241: return 1;
 10304  0077E0  0E01               	movlw	1
 10305  0077E2  0012               	return	
 10306  0077E4                     __end_of__normal_mode:
 10307                           	opt stack 0
 10308                           tblptru	equ	0xFF8
 10309                           tblptrh	equ	0xFF7
 10310                           tblptrl	equ	0xFF6
 10311                           tablat	equ	0xFF5
 10312                           prodh	equ	0xFF4
 10313                           prodl	equ	0xFF3
 10314                           intcon	equ	0xFF2
 10315                           intcon2	equ	0xFF1
 10316                           intcon3	equ	0xFF0
 10317                           postinc0	equ	0xFEE
 10318                           wreg	equ	0xFE8
 10319                           indf1	equ	0xFE7
 10320                           postdec1	equ	0xFE5
 10321                           plusw1	equ	0xFE3
 10322                           fsr1h	equ	0xFE2
 10323                           fsr1l	equ	0xFE1
 10324                           indf2	equ	0xFDF
 10325                           postinc2	equ	0xFDE
 10326                           postdec2	equ	0xFDD
 10327                           plusw2	equ	0xFDB
 10328                           fsr2h	equ	0xFDA
 10329                           fsr2l	equ	0xFD9
 10330                           status	equ	0xFD8
 10331                           
 10332 ;; *************** function _i2c_eeprom_readByte *****************
 10333 ;; Defined at:
 10334 ;;		line 367 in file "i2c.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  address         2   17[COMRAM] unsigned int 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  addr            1   23[COMRAM] unsigned char 
 10339 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      unsigned char 
 10342 ;; Registers used:
 10343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10351 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10353 ;;Total ram usage:        7 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    2
 10356 ;; This function calls:
 10357 ;;		__i2c_read
 10358 ;;		__i2c_write
 10359 ;;		_i2c_set_frequency
 10360 ;; This function is called by:
 10361 ;;		__normal_mode
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           	psect	text46
 10366  007D4A                     __ptext46:
 10367                           	opt stack 0
 10368  007D4A                     _i2c_eeprom_readByte:
 10369                           	opt stack 27
 10370                           
 10371                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10372                           
 10373                           ;incstack = 0
 10374  007D4A  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10375  007D4E  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10376  007D52  0E07               	movlw	7
 10377  007D54  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10378  007D56                     u11785:
 10379  007D56  90D8               	bcf	status,0,c
 10380  007D58  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10381  007D5A  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10382  007D5C  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10383  007D5E  D7FB               	goto	u11785
 10384  007D60  5014               	movf	??_i2c_eeprom_readByte,w,c
 10385  007D62  0B0E               	andlw	14
 10386  007D64  09A0               	iorlw	160
 10387  007D66  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10388                           
 10389                           ;i2c.c: 372: addr = address & 0xFF;
 10390  007D68  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10391                           
 10392                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10393  007D6C  0E02               	movlw	2
 10394  007D6E  ECB5  F042         	call	_i2c_set_frequency
 10395                           
 10396                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10397  007D72  0E18               	movlw	low i2c_eeprom_readByte@addr
 10398  007D74  6E06               	movwf	__i2c_write@data,c
 10399  007D76  0E00               	movlw	high i2c_eeprom_readByte@addr
 10400  007D78  6E07               	movwf	__i2c_write@data+1,c
 10401  007D7A  0E01               	movlw	1
 10402  007D7C  6E08               	movwf	__i2c_write@length,c
 10403  007D7E  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10404  007D80  EC3F  F03F         	call	__i2c_write
 10405                           
 10406                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10407  007D84  0E18               	movlw	low i2c_eeprom_readByte@addr
 10408  007D86  6E06               	movwf	__i2c_read@data,c
 10409  007D88  0E00               	movlw	high i2c_eeprom_readByte@addr
 10410  007D8A  6E07               	movwf	__i2c_read@data+1,c
 10411  007D8C  0E01               	movlw	1
 10412  007D8E  6E08               	movwf	__i2c_read@length,c
 10413  007D90  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10414  007D92  EC6C  F036         	call	__i2c_read
 10415                           
 10416                           ;i2c.c: 379: return addr;
 10417  007D96  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10418  007D98  0012               	return	
 10419  007D9A                     __end_of_i2c_eeprom_readByte:
 10420                           	opt stack 0
 10421                           tblptru	equ	0xFF8
 10422                           tblptrh	equ	0xFF7
 10423                           tblptrl	equ	0xFF6
 10424                           tablat	equ	0xFF5
 10425                           prodh	equ	0xFF4
 10426                           prodl	equ	0xFF3
 10427                           intcon	equ	0xFF2
 10428                           intcon2	equ	0xFF1
 10429                           intcon3	equ	0xFF0
 10430                           postinc0	equ	0xFEE
 10431                           wreg	equ	0xFE8
 10432                           indf1	equ	0xFE7
 10433                           postdec1	equ	0xFE5
 10434                           plusw1	equ	0xFE3
 10435                           fsr1h	equ	0xFE2
 10436                           fsr1l	equ	0xFE1
 10437                           indf2	equ	0xFDF
 10438                           postinc2	equ	0xFDE
 10439                           postdec2	equ	0xFDD
 10440                           plusw2	equ	0xFDB
 10441                           fsr2h	equ	0xFDA
 10442                           fsr2l	equ	0xFD9
 10443                           status	equ	0xFD8
 10444                           
 10445 ;; *************** function __i2c_read *****************
 10446 ;; Defined at:
 10447 ;;		line 161 in file "i2c.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  slave_addres    1    wreg     unsigned char 
 10450 ;;  data            2    5[COMRAM] PTR unsigned char 
 10451 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10452 ;;  length          1    7[COMRAM] unsigned char 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10455 ;;  cntr            1   16[COMRAM] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10465 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10467 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;Total ram usage:       12 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    1
 10472 ;; This function calls:
 10473 ;;		__i2c_acknowledge
 10474 ;;		__i2c_get
 10475 ;;		__i2c_not_acknowledge
 10476 ;;		__i2c_send
 10477 ;;		__i2c_start
 10478 ;;		__i2c_stop
 10479 ;;		__i2c_wait_idle
 10480 ;; This function is called by:
 10481 ;;		_i2c_eeprom_readByte
 10482 ;;		_i2c_eeprom_read
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text47
 10487  006CD8                     __ptext47:
 10488                           	opt stack 0
 10489  006CD8                     __i2c_read:
 10490                           	opt stack 27
 10491                           
 10492                           ;incstack = 0
 10493                           ;__i2c_read@slave_address stored from wreg
 10494  006CD8  6E10               	movwf	__i2c_read@slave_address,c
 10495                           
 10496                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10497  006CDA  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 10498                           
 10499                           ;i2c.c: 166: _i2c_start();
 10500  006CDE  EC32  F045         	call	__i2c_start	;wreg free
 10501                           
 10502                           ;i2c.c: 167: _i2c_wait_idle();
 10503  006CE2  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 10504                           
 10505                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10506  006CE6  5010               	movf	__i2c_read@slave_address,w,c
 10507  006CE8  0901               	iorlw	1
 10508  006CEA  EC36  F045         	call	__i2c_send
 10509                           
 10510                           ;i2c.c: 169: _i2c_wait_idle();
 10511  006CEE  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 10512                           
 10513                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10514  006CF2  0E00               	movlw	0
 10515  006CF4  6E11               	movwf	__i2c_read@cntr,c
 10516  006CF6  D00E               	goto	l1209
 10517  006CF8                     
 10518                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10519  006CF8  5011               	movf	__i2c_read@cntr,w,c
 10520  006CFA  0D01               	mullw	1
 10521  006CFC  50F3               	movf	prodl,w,c
 10522  006CFE  2406               	addwf	__i2c_read@data,w,c
 10523  006D00  6ED9               	movwf	fsr2l,c
 10524  006D02  50F4               	movf	prodh,w,c
 10525  006D04  2007               	addwfc	__i2c_read@data+1,w,c
 10526  006D06  6EDA               	movwf	fsr2h,c
 10527  006D08  ECFC  F044         	call	__i2c_get	;wreg free
 10528  006D0C  6EDF               	movwf	indf2,c
 10529                           
 10530                           ;i2c.c: 174: _i2c_acknowledge();
 10531  006D0E  EC01  F045         	call	__i2c_acknowledge	;wreg free
 10532  006D12  2A11               	incf	__i2c_read@cntr,f,c
 10533  006D14                     l1209:
 10534  006D14  0EFF               	movlw	255
 10535  006D16  6E09               	movwf	??__i2c_read& (0+255),c
 10536  006D18  0EFF               	movlw	255
 10537  006D1A  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10538  006D1C  5008               	movf	__i2c_read@length,w,c
 10539  006D1E  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10540  006D20  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10541  006D22  5009               	movf	??__i2c_read,w,c
 10542  006D24  260B               	addwf	??__i2c_read+2,f,c
 10543  006D26  500A               	movf	??__i2c_read+1,w,c
 10544  006D28  220C               	addwfc	??__i2c_read+3,f,c
 10545  006D2A  5011               	movf	__i2c_read@cntr,w,c
 10546  006D2C  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10547  006D2E  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10548  006D30  500B               	movf	??__i2c_read+2,w,c
 10549  006D32  5C0D               	subwf	??__i2c_read+4,w,c
 10550  006D34  500E               	movf	??__i2c_read+5,w,c
 10551  006D36  0A80               	xorlw	128
 10552  006D38  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10553  006D3A  500C               	movf	??__i2c_read+3,w,c
 10554  006D3C  0A80               	xorlw	128
 10555  006D3E  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10556  006D40  A0D8               	btfss	status,0,c
 10557  006D42  D7DA               	goto	l1210
 10558                           
 10559                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10560  006D44  5011               	movf	__i2c_read@cntr,w,c
 10561  006D46  0D01               	mullw	1
 10562  006D48  50F3               	movf	prodl,w,c
 10563  006D4A  2406               	addwf	__i2c_read@data,w,c
 10564  006D4C  6ED9               	movwf	fsr2l,c
 10565  006D4E  50F4               	movf	prodh,w,c
 10566  006D50  2007               	addwfc	__i2c_read@data+1,w,c
 10567  006D52  6EDA               	movwf	fsr2h,c
 10568  006D54  ECFC  F044         	call	__i2c_get	;wreg free
 10569  006D58  6EDF               	movwf	indf2,c
 10570                           
 10571                           ;i2c.c: 177: _i2c_not_acknowledge();
 10572  006D5A  ECF7  F044         	call	__i2c_not_acknowledge	;wreg free
 10573                           
 10574                           ;i2c.c: 179: _i2c_stop();
 10575  006D5E  EC2E  F045         	call	__i2c_stop	;wreg free
 10576  006D62  0012               	return		;funcret
 10577  006D64                     __end_of__i2c_read:
 10578                           	opt stack 0
 10579                           tblptru	equ	0xFF8
 10580                           tblptrh	equ	0xFF7
 10581                           tblptrl	equ	0xFF6
 10582                           tablat	equ	0xFF5
 10583                           prodh	equ	0xFF4
 10584                           prodl	equ	0xFF3
 10585                           intcon	equ	0xFF2
 10586                           intcon2	equ	0xFF1
 10587                           intcon3	equ	0xFF0
 10588                           postinc0	equ	0xFEE
 10589                           wreg	equ	0xFE8
 10590                           indf1	equ	0xFE7
 10591                           postdec1	equ	0xFE5
 10592                           plusw1	equ	0xFE3
 10593                           fsr1h	equ	0xFE2
 10594                           fsr1l	equ	0xFE1
 10595                           indf2	equ	0xFDF
 10596                           postinc2	equ	0xFDE
 10597                           postdec2	equ	0xFDD
 10598                           plusw2	equ	0xFDB
 10599                           fsr2h	equ	0xFDA
 10600                           fsr2l	equ	0xFD9
 10601                           status	equ	0xFD8
 10602                           
 10603 ;; *************** function __i2c_not_acknowledge *****************
 10604 ;; Defined at:
 10605 ;;		line 90 in file "i2c.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		None
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;Total ram usage:        0 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		__i2c_read
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text48
 10633  0089EE                     __ptext48:
 10634                           	opt stack 0
 10635  0089EE                     __i2c_not_acknowledge:
 10636                           	opt stack 27
 10637                           
 10638                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 10639                           
 10640                           ;incstack = 0
 10641  0089EE  8AC5               	bsf	4037,5,c	;volatile
 10642                           
 10643                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 10644  0089F0  88C5               	bsf	4037,4,c	;volatile
 10645  0089F2  A8C5               	btfss	4037,4,c	;volatile
 10646  0089F4  0012               	return	
 10647  0089F6  D7FD               	goto	l1181
 10648  0089F8                     __end_of__i2c_not_acknowledge:
 10649                           	opt stack 0
 10650                           tblptru	equ	0xFF8
 10651                           tblptrh	equ	0xFF7
 10652                           tblptrl	equ	0xFF6
 10653                           tablat	equ	0xFF5
 10654                           prodh	equ	0xFF4
 10655                           prodl	equ	0xFF3
 10656                           intcon	equ	0xFF2
 10657                           intcon2	equ	0xFF1
 10658                           intcon3	equ	0xFF0
 10659                           postinc0	equ	0xFEE
 10660                           wreg	equ	0xFE8
 10661                           indf1	equ	0xFE7
 10662                           postdec1	equ	0xFE5
 10663                           plusw1	equ	0xFE3
 10664                           fsr1h	equ	0xFE2
 10665                           fsr1l	equ	0xFE1
 10666                           indf2	equ	0xFDF
 10667                           postinc2	equ	0xFDE
 10668                           postdec2	equ	0xFDD
 10669                           plusw2	equ	0xFDB
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           
 10674 ;; *************** function __i2c_get *****************
 10675 ;; Defined at:
 10676 ;;		line 67 in file "i2c.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;		None
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;		None
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      unsigned char 
 10683 ;; Registers used:
 10684 ;;		wreg, status,2
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10694 ;;Total ram usage:        0 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; This function calls:
 10697 ;;		Nothing
 10698 ;; This function is called by:
 10699 ;;		__i2c_read
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text49
 10704  0089F8                     __ptext49:
 10705                           	opt stack 0
 10706  0089F8                     __i2c_get:
 10707                           	opt stack 27
 10708                           
 10709                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 10710                           
 10711                           ;incstack = 0
 10712  0089F8  86C5               	bsf	4037,3,c	;volatile
 10713  0089FA  B6C5               	btfsc	4037,3,c	;volatile
 10714  0089FC  D7FE               	goto	l1163
 10715                           
 10716                           ;i2c.c: 71: return SSP1BUF;
 10717  0089FE  50C9               	movf	4041,w,c	;volatile
 10718  008A00  0012               	return	
 10719  008A02                     __end_of__i2c_get:
 10720                           	opt stack 0
 10721                           tblptru	equ	0xFF8
 10722                           tblptrh	equ	0xFF7
 10723                           tblptrl	equ	0xFF6
 10724                           tablat	equ	0xFF5
 10725                           prodh	equ	0xFF4
 10726                           prodl	equ	0xFF3
 10727                           intcon	equ	0xFF2
 10728                           intcon2	equ	0xFF1
 10729                           intcon3	equ	0xFF0
 10730                           postinc0	equ	0xFEE
 10731                           wreg	equ	0xFE8
 10732                           indf1	equ	0xFE7
 10733                           postdec1	equ	0xFE5
 10734                           plusw1	equ	0xFE3
 10735                           fsr1h	equ	0xFE2
 10736                           fsr1l	equ	0xFE1
 10737                           indf2	equ	0xFDF
 10738                           postinc2	equ	0xFDE
 10739                           postdec2	equ	0xFDD
 10740                           plusw2	equ	0xFDB
 10741                           fsr2h	equ	0xFDA
 10742                           fsr2l	equ	0xFD9
 10743                           status	equ	0xFD8
 10744                           
 10745 ;; *************** function __i2c_acknowledge *****************
 10746 ;; Defined at:
 10747 ;;		line 82 in file "i2c.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		None
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		__i2c_read
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text50
 10775  008A02                     __ptext50:
 10776                           	opt stack 0
 10777  008A02                     __i2c_acknowledge:
 10778                           	opt stack 27
 10779                           
 10780                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 10781                           
 10782                           ;incstack = 0
 10783  008A02  9AC5               	bcf	4037,5,c	;volatile
 10784                           
 10785                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 10786  008A04  88C5               	bsf	4037,4,c	;volatile
 10787  008A06  A8C5               	btfss	4037,4,c	;volatile
 10788  008A08  0012               	return	
 10789  008A0A  D7FD               	goto	l1175
 10790  008A0C                     __end_of__i2c_acknowledge:
 10791                           	opt stack 0
 10792                           tblptru	equ	0xFF8
 10793                           tblptrh	equ	0xFF7
 10794                           tblptrl	equ	0xFF6
 10795                           tablat	equ	0xFF5
 10796                           prodh	equ	0xFF4
 10797                           prodl	equ	0xFF3
 10798                           intcon	equ	0xFF2
 10799                           intcon2	equ	0xFF1
 10800                           intcon3	equ	0xFF0
 10801                           postinc0	equ	0xFEE
 10802                           wreg	equ	0xFE8
 10803                           indf1	equ	0xFE7
 10804                           postdec1	equ	0xFE5
 10805                           plusw1	equ	0xFE3
 10806                           fsr1h	equ	0xFE2
 10807                           fsr1l	equ	0xFE1
 10808                           indf2	equ	0xFDF
 10809                           postinc2	equ	0xFDE
 10810                           postdec2	equ	0xFDD
 10811                           plusw2	equ	0xFDB
 10812                           fsr2h	equ	0xFDA
 10813                           fsr2l	equ	0xFD9
 10814                           status	equ	0xFD8
 10815                           
 10816 ;; *************** function _USBDeviceTasks *****************
 10817 ;; Defined at:
 10818 ;;		line 477 in file "usb_device.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  i               1   31[COMRAM] unsigned char 
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;Total ram usage:        1 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:    8
 10839 ;; This function calls:
 10840 ;;		_USBCtrlEPAllowStatusStage
 10841 ;;		_USBCtrlEPService
 10842 ;;		_USBDeviceInit
 10843 ;;		_USBIncrement1msInternalTimers
 10844 ;;		_USBStallHandler
 10845 ;;		_USBSuspend
 10846 ;;		_USBWakeFromSuspend
 10847 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10848 ;; This function is called by:
 10849 ;;		_main
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text51
 10854  0035D8                     __ptext51:
 10855                           	opt stack 0
 10856  0035D8                     _USBDeviceTasks:
 10857                           	opt stack 22
 10858                           
 10859                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 10860                           
 10861                           ; BSR set to: 0
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;usb_device.c: 543: return;
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 10868                           
 10869                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 10870                           
 10871                           ;usb_device.c: 511: UIE = 0;
 10872                           
 10873                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 10874                           
 10875                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 10876                           
 10877                           ;incstack = 0
 10878  0035D8  0100               	movlb	0	; () banked
 10879  0035DA  51F8               	movf	_USBDeviceState& (0+255),w,b
 10880  0035DC  A4D8               	btfss	status,2,c
 10881  0035DE  D012               	goto	l150
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 10885  0035E0  0E00               	movlw	0
 10886  0035E2  6E65               	movwf	3941,c	;volatile
 10887                           
 10888                           ;usb_device.c: 572: UIE = 0;
 10889  0035E4  0E00               	movlw	0
 10890  0035E6  010F               	movlb	15	; () banked
 10891  0035E8  6F36               	movwf	54,b	;volatile
 10892                           
 10893                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10894  0035EA  0E16               	movlw	22
 10895  0035EC  6F39               	movwf	57,b	;volatile
 10896  0035EE  0E9F               	movlw	159
 10897  0035F0  6F37               	movwf	55,b	;volatile
 10898  0035F2  0E7B               	movlw	123
 10899  0035F4  6F36               	movwf	54,b	;volatile
 10900                           
 10901                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10902  0035F6  D001               	goto	l151
 10903  0035F8                     l152:
 10904  0035F8  8665               	bsf	3941,3,c	;volatile
 10905  0035FA                     l151:
 10906  0035FA  A665               	btfss	3941,3,c	;volatile
 10907  0035FC  D7FD               	goto	l152
 10908                           
 10909                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 10910  0035FE  0E01               	movlw	1
 10911  003600  0100               	movlb	0	; () banked
 10912  003602  6FF8               	movwf	_USBDeviceState& (0+255),b
 10913  003604                     l150:
 10914                           
 10915                           ; BSR set to: 0
 10916                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10917                           
 10918                           ; BSR set to: 0
 10919  003604  05F8               	decf	_USBDeviceState& (0+255),w,b
 10920  003606  B4D8               	btfsc	status,2,c
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 10924  003608  BA65               	btfsc	3941,5,c	;volatile
 10925  00360A  D00A               	goto	l155
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 10929  00360C  0E00               	movlw	0
 10930  00360E  6E62               	movwf	3938,c	;volatile
 10931                           
 10932                           ;usb_device.c: 612: UIE=0;
 10933  003610  0E00               	movlw	0
 10934  003612  010F               	movlb	15	; () banked
 10935  003614  6F36               	movwf	54,b	;volatile
 10936                           
 10937                           ; BSR set to: 15
 10938                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10939  003616  8136               	bsf	54,0,b	;volatile
 10940                           
 10941                           ; BSR set to: 15
 10942                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10943  003618  8936               	bsf	54,4,b	;volatile
 10944                           
 10945                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10946  00361A  0E02               	movlw	2
 10947  00361C  0100               	movlb	0	; () banked
 10948  00361E  6FF8               	movwf	_USBDeviceState& (0+255),b
 10949  003620                     l155:
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 10953                           
 10954                           ; BSR set to: 0
 10955                           
 10956                           ; BSR set to: 0
 10957  003620  A462               	btfss	3938,2,c	;volatile
 10958  003622  D006               	goto	l156
 10959                           
 10960                           ; BSR set to: 0
 10961  003624  010F               	movlb	15	; () banked
 10962  003626  A536               	btfss	54,2,b	;volatile
 10963  003628  D003               	goto	l156
 10964                           
 10965                           ; BSR set to: 15
 10966                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 10967  00362A  9462               	bcf	3938,2,c	;volatile
 10968                           
 10969                           ; BSR set to: 15
 10970                           ;usb_device.c: 640: USBWakeFromSuspend();
 10971  00362C  EC28  F041         	call	_USBWakeFromSuspend	;wreg free
 10972  003630                     l156:
 10973                           
 10974                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 10975  003630  A265               	btfss	3941,1,c	;volatile
 10976  003632  D002               	goto	l157
 10977                           
 10978                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 10979  003634  98A1               	bcf	4001,4,c	;volatile
 10980                           
 10981                           ;usb_device.c: 650: return;
 10982  003636  0012               	return	
 10983  003638                     l157:
 10984                           
 10985                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10986  003638  A062               	btfss	3938,0,c	;volatile
 10987  00363A  D009               	goto	l158
 10988  00363C  010F               	movlb	15	; () banked
 10989  00363E  A136               	btfss	54,0,b	;volatile
 10990  003640  D006               	goto	l158
 10991                           
 10992                           ; BSR set to: 15
 10993                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 10994  003642  EC87  F01E         	call	_USBDeviceInit	;wreg free
 10995                           
 10996                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10997  003646  0E04               	movlw	4
 10998  003648  0100               	movlb	0	; () banked
 10999  00364A  6FF8               	movwf	_USBDeviceState& (0+255),b
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;usb_device.c: 681: (UIR &= 0xFE);
 11003  00364C  9062               	bcf	3938,0,c	;volatile
 11004  00364E                     l158:
 11005                           
 11006                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11007                           
 11008                           ; BSR set to: 0
 11009  00364E  A862               	btfss	3938,4,c	;volatile
 11010  003650  D004               	goto	l159
 11011  003652  010F               	movlb	15	; () banked
 11012  003654  B936               	btfsc	54,4,b	;volatile
 11013                           
 11014                           ; BSR set to: 15
 11015                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11016  003656  EC44  F042         	call	_USBSuspend	;wreg free
 11017  00365A                     l159:
 11018                           
 11019                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11020  00365A  AC62               	btfss	3938,6,c	;volatile
 11021  00365C  D01C               	goto	l163
 11022                           
 11023                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11024  00365E  010F               	movlb	15	; () banked
 11025  003660  AD36               	btfss	54,6,b	;volatile
 11026  003662  D00E               	goto	l161
 11027                           
 11028                           ; BSR set to: 15
 11029                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11030  003664  0E00               	movlw	0
 11031  003666  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11032  003668  0E73               	movlw	115
 11033  00366A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11034  00366C  0E00               	movlw	0
 11035  00366E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11036  003670  0E00               	movlw	0
 11037  003672  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11038  003674  0E00               	movlw	0
 11039  003676  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11040  003678  0E01               	movlw	1
 11041  00367A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11042  00367C  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11043  003680                     l161:
 11044                           
 11045                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11046  003680  9C62               	bcf	3938,6,c	;volatile
 11047                           
 11048                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11049  003682  ECF6  F043         	call	_USBIncrement1msInternalTimers	;wreg free
 11050                           
 11051                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11052  003686  0100               	movlb	0	; () banked
 11053  003688  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11054  00368A  A4D8               	btfss	status,2,c
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11058  00368C  07F3               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11062                           
 11063                           ; BSR set to: 0
 11064  00368E  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11065  003690  B4D8               	btfsc	status,2,c
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11069  003692  ECD5  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11070  003696                     l163:
 11071                           
 11072                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11073  003696  AA62               	btfss	3938,5,c	;volatile
 11074  003698  D004               	goto	l164
 11075  00369A  010F               	movlb	15	; () banked
 11076  00369C  BB36               	btfsc	54,5,b	;volatile
 11077                           
 11078                           ; BSR set to: 15
 11079                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11080  00369E  ECAA  F03F         	call	_USBStallHandler	;wreg free
 11081  0036A2                     l164:
 11082                           
 11083                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11084  0036A2  A262               	btfss	3938,1,c	;volatile
 11085  0036A4  D012               	goto	l165
 11086  0036A6  010F               	movlb	15	; () banked
 11087  0036A8  A336               	btfss	54,1,b	;volatile
 11088  0036AA  D00F               	goto	l165
 11089                           
 11090                           ; BSR set to: 15
 11091                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11092  0036AC  0E7F               	movlw	127
 11093  0036AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11094  0036B0  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11095  0036B2  0E00               	movlw	0
 11096  0036B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11097  0036B6  0E00               	movlw	0
 11098  0036B8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11099  0036BA  0E00               	movlw	0
 11100  0036BC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11101  0036BE  0E01               	movlw	1
 11102  0036C0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11103  0036C2  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11104                           
 11105                           ;usb_device.c: 759: {UEIR = 0;};
 11106  0036C6  0E00               	movlw	0
 11107  0036C8  6E63               	movwf	3939,c	;volatile
 11108  0036CA                     l165:
 11109                           
 11110                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11111  0036CA  0E04               	movlw	4
 11112  0036CC  0100               	movlb	0	; () banked
 11113  0036CE  61F8               	cpfslt	_USBDeviceState& (0+255),b
 11114  0036D0  D002               	goto	l166
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11118  0036D2  98A1               	bcf	4001,4,c	;volatile
 11119                           
 11120                           ;usb_device.c: 777: return;
 11121  0036D4  0012               	return	
 11122  0036D6                     l166:
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11126  0036D6  010F               	movlb	15	; () banked
 11127  0036D8  A736               	btfss	54,3,b	;volatile
 11128  0036DA  D03C               	goto	u12340
 11129                           
 11130                           ; BSR set to: 15
 11131                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11132  0036DC  0E00               	movlw	0
 11133  0036DE  6E20               	movwf	USBDeviceTasks@i,c
 11134  0036E0                     l15131:
 11135                           
 11136                           ; BSR set to: 15
 11137  0036E0  0E03               	movlw	3
 11138  0036E2  6420               	cpfsgt	USBDeviceTasks@i,c
 11139  0036E4  D001               	goto	l168
 11140  0036E6  D036               	goto	u12340
 11141  0036E8                     l168:
 11142                           
 11143                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11144  0036E8  A662               	btfss	3938,3,c	;volatile
 11145  0036EA  D034               	goto	u12340
 11146                           
 11147                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11148  0036EC  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11149                           
 11150                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11151  0036F0  0100               	movlb	0	; () banked
 11152  0036F2  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11153  0036F4  32E8               	rrcf	wreg,f,c
 11154  0036F6  32E8               	rrcf	wreg,f,c
 11155  0036F8  0B0F               	andlw	15
 11156  0036FA  6FF4               	movwf	_endpoint_number& (0+255),b
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;usb_device.c: 793: (UIR &= 0xF7);
 11160  0036FC  9662               	bcf	3938,3,c	;volatile
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11164  0036FE  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11165  003700  D007               	goto	l171
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11169  003702  51F4               	movf	_endpoint_number& (0+255),w,b
 11170  003704  0D01               	mullw	1
 11171  003706  0E6C               	movlw	low _ep_data_out
 11172  003708  24F3               	addwf	prodl,w,c
 11173  00370A  6ED9               	movwf	fsr2l,c
 11174  00370C  0E01               	movlw	high _ep_data_out
 11175  00370E  D007               	goto	L5
 11176  003710                     l171:
 11177                           
 11178                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11179                           
 11180                           ; BSR set to: 1
 11181  003710  0100               	movlb	0	; () banked
 11182  003712  51F4               	movf	_endpoint_number& (0+255),w,b
 11183  003714  0D01               	mullw	1
 11184  003716  0E6F               	movlw	low _ep_data_in
 11185  003718  24F3               	addwf	prodl,w,c
 11186  00371A  6ED9               	movwf	fsr2l,c
 11187  00371C  0E01               	movlw	high _ep_data_in
 11188  00371E                     L5:
 11189  00371E  20F4               	addwfc	prodh,w,c
 11190  003720  6EDA               	movwf	fsr2h,c
 11191  003722  0101               	movlb	1	; () banked
 11192  003724  70DF               	btg	indf2,0,c
 11193                           
 11194                           ; BSR set to: 1
 11195                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11196                           
 11197                           ; BSR set to: 1
 11198  003726  0100               	movlb	0	; () banked
 11199  003728  51F4               	movf	_endpoint_number& (0+255),w,b
 11200  00372A  A4D8               	btfss	status,2,c
 11201  00372C  D003               	goto	l173
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11205  00372E  ECDA  F030         	call	_USBCtrlEPService	;wreg free
 11206                           
 11207                           ;usb_device.c: 813: }
 11208  003732  D00E               	goto	l175
 11209  003734                     l173:
 11210                           
 11211                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11212  003734  0E00               	movlw	0
 11213  003736  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11214  003738  0E72               	movlw	114
 11215  00373A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11216  00373C  0EFD               	movlw	low _USTATcopy
 11217  00373E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11218  003740  0E00               	movlw	high _USTATcopy
 11219  003742  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11220  003744  0E00               	movlw	0
 11221  003746  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11222  003748  0E00               	movlw	0
 11223  00374A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11224  00374C  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11225  003750                     l175:
 11226  003750  2A20               	incf	USBDeviceTasks@i,f,c
 11227  003752  D7C6               	goto	l15131
 11228  003754                     u12340:
 11229                           
 11230                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11231  003754  98A1               	bcf	4001,4,c	;volatile
 11232  003756  0012               	return		;funcret
 11233  003758                     __end_of_USBDeviceTasks:
 11234                           	opt stack 0
 11235                           tblptru	equ	0xFF8
 11236                           tblptrh	equ	0xFF7
 11237                           tblptrl	equ	0xFF6
 11238                           tablat	equ	0xFF5
 11239                           prodh	equ	0xFF4
 11240                           prodl	equ	0xFF3
 11241                           intcon	equ	0xFF2
 11242                           intcon2	equ	0xFF1
 11243                           intcon3	equ	0xFF0
 11244                           postinc0	equ	0xFEE
 11245                           wreg	equ	0xFE8
 11246                           indf1	equ	0xFE7
 11247                           postdec1	equ	0xFE5
 11248                           plusw1	equ	0xFE3
 11249                           fsr1h	equ	0xFE2
 11250                           fsr1l	equ	0xFE1
 11251                           indf2	equ	0xFDF
 11252                           postinc2	equ	0xFDE
 11253                           postdec2	equ	0xFDD
 11254                           plusw2	equ	0xFDB
 11255                           fsr2h	equ	0xFDA
 11256                           fsr2l	equ	0xFD9
 11257                           status	equ	0xFD8
 11258                           
 11259 ;; *************** function _USBWakeFromSuspend *****************
 11260 ;; Defined at:
 11261 ;;		line 2305 in file "usb_device.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;		None
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;Total ram usage:        0 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    4
 11282 ;; This function calls:
 11283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11284 ;; This function is called by:
 11285 ;;		_USBDeviceTasks
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text52
 11290  008250                     __ptext52:
 11291                           	opt stack 0
 11292  008250                     _USBWakeFromSuspend:
 11293                           	opt stack 25
 11294                           
 11295                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11296                           
 11297                           ;incstack = 0
 11298  008250  0E00               	movlw	0
 11299  008252  0101               	movlb	1	; () banked
 11300  008254  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11301                           
 11302                           ; BSR set to: 1
 11303                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11304  008256  0E00               	movlw	0
 11305  008258  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11306  00825A  0E74               	movlw	116
 11307  00825C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11308  00825E  0E00               	movlw	0
 11309  008260  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11310  008262  0E00               	movlw	0
 11311  008264  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11312  008266  0E00               	movlw	0
 11313  008268  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11314  00826A  0E00               	movlw	0
 11315  00826C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11316  00826E  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11317                           
 11318                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11319  008272  9265               	bcf	3941,1,c	;volatile
 11320                           
 11321                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11322  008274  010F               	movlb	15	; () banked
 11323  008276  9536               	bcf	54,2,b	;volatile
 11324                           
 11325                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11326  008278  D001               	goto	l303
 11327  00827A                     
 11328                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11329                           
 11330                           ; BSR set to: 15
 11331  00827A  9462               	bcf	3938,2,c	;volatile
 11332  00827C                     l303:
 11333  00827C  B462               	btfsc	3938,2,c	;volatile
 11334  00827E  D7FD               	goto	l304
 11335                           
 11336                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11337  008280  0E00               	movlw	0
 11338  008282  0101               	movlb	1	; () banked
 11339  008284  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11340                           
 11341                           ; BSR set to: 1
 11342  008286  0012               	return		;funcret
 11343  008288                     __end_of_USBWakeFromSuspend:
 11344                           	opt stack 0
 11345                           tblptru	equ	0xFF8
 11346                           tblptrh	equ	0xFF7
 11347                           tblptrl	equ	0xFF6
 11348                           tablat	equ	0xFF5
 11349                           prodh	equ	0xFF4
 11350                           prodl	equ	0xFF3
 11351                           intcon	equ	0xFF2
 11352                           intcon2	equ	0xFF1
 11353                           intcon3	equ	0xFF0
 11354                           postinc0	equ	0xFEE
 11355                           wreg	equ	0xFE8
 11356                           indf1	equ	0xFE7
 11357                           postdec1	equ	0xFE5
 11358                           plusw1	equ	0xFE3
 11359                           fsr1h	equ	0xFE2
 11360                           fsr1l	equ	0xFE1
 11361                           indf2	equ	0xFDF
 11362                           postinc2	equ	0xFDE
 11363                           postdec2	equ	0xFDD
 11364                           plusw2	equ	0xFDB
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _USBSuspend *****************
 11370 ;; Defined at:
 11371 ;;		line 2247 in file "usb_device.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    4
 11392 ;; This function calls:
 11393 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11394 ;; This function is called by:
 11395 ;;		_USBDeviceTasks
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text53
 11400  008488                     __ptext53:
 11401                           	opt stack 0
 11402  008488                     _USBSuspend:
 11403                           	opt stack 25
 11404                           
 11405                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11406                           
 11407                           ; BSR set to: 1
 11408                           ;incstack = 0
 11409  008488  010F               	movlb	15	; () banked
 11410  00848A  8536               	bsf	54,2,b	;volatile
 11411                           
 11412                           ; BSR set to: 15
 11413                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11414  00848C  9862               	bcf	3938,4,c	;volatile
 11415                           
 11416                           ; BSR set to: 15
 11417                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11418  00848E  8265               	bsf	3941,1,c	;volatile
 11419                           
 11420                           ; BSR set to: 15
 11421                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11422  008490  0E01               	movlw	1
 11423  008492  0101               	movlb	1	; () banked
 11424  008494  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11428  008496  0E00               	movlw	0
 11429  008498  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11430                           
 11431                           ; BSR set to: 1
 11432                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11433  00849A  0E00               	movlw	0
 11434  00849C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11435  00849E  0E75               	movlw	117
 11436  0084A0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11437  0084A2  0E00               	movlw	0
 11438  0084A4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11439  0084A6  0E00               	movlw	0
 11440  0084A8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11441  0084AA  0E00               	movlw	0
 11442  0084AC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11443  0084AE  0E00               	movlw	0
 11444  0084B0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11445  0084B2  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11446  0084B6  0012               	return		;funcret
 11447  0084B8                     __end_of_USBSuspend:
 11448                           	opt stack 0
 11449                           tblptru	equ	0xFF8
 11450                           tblptrh	equ	0xFF7
 11451                           tblptrl	equ	0xFF6
 11452                           tablat	equ	0xFF5
 11453                           prodh	equ	0xFF4
 11454                           prodl	equ	0xFF3
 11455                           intcon	equ	0xFF2
 11456                           intcon2	equ	0xFF1
 11457                           intcon3	equ	0xFF0
 11458                           postinc0	equ	0xFEE
 11459                           wreg	equ	0xFE8
 11460                           indf1	equ	0xFE7
 11461                           postdec1	equ	0xFE5
 11462                           plusw1	equ	0xFE3
 11463                           fsr1h	equ	0xFE2
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           postinc2	equ	0xFDE
 11467                           postdec2	equ	0xFDD
 11468                           plusw2	equ	0xFDB
 11469                           fsr2h	equ	0xFDA
 11470                           fsr2l	equ	0xFD9
 11471                           status	equ	0xFD8
 11472                           
 11473 ;; *************** function _USBStallHandler *****************
 11474 ;; Defined at:
 11475 ;;		line 2204 in file "usb_device.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;		None
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;		None
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      void 
 11482 ;; Registers used:
 11483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;Total ram usage:        1 bytes
 11494 ;; Hardware stack levels used:    1
 11495 ;; This function calls:
 11496 ;;		Nothing
 11497 ;; This function is called by:
 11498 ;;		_USBDeviceTasks
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text54
 11503  007F54                     __ptext54:
 11504                           	opt stack 0
 11505  007F54                     _USBStallHandler:
 11506                           	opt stack 29
 11507                           
 11508                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11509                           
 11510                           ;incstack = 0
 11511  007F54  010F               	movlb	15	; () banked
 11512  007F56  A126               	btfss	38,0,b	;volatile
 11513  007F58  D01D               	goto	l295
 11514                           
 11515                           ; BSR set to: 15
 11516                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11517  007F5A  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11518  007F5E  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11519  007F62  0E80               	movlw	128
 11520  007F64  18DE               	xorwf	postinc2,w,c
 11521  007F66  A4D8               	btfss	status,2,c
 11522  007F68  D014               	goto	l296
 11523                           
 11524                           ; BSR set to: 15
 11525  007F6A  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 11526  007F6E  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11527  007F72  0E84               	movlw	132
 11528  007F74  18DE               	xorwf	postinc2,w,c
 11529  007F76  A4D8               	btfss	status,2,c
 11530  007F78  D00C               	goto	l296
 11531                           
 11532                           ; BSR set to: 15
 11533                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11534  007F7A  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11535  007F7E  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11536  007F82  0E0C               	movlw	12
 11537  007F84  6EDF               	movwf	indf2,c
 11538                           
 11539                           ; BSR set to: 15
 11540                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11541  007F86  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11542  007F8A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11543  007F8E  0E00               	movlw	0
 11544  007F90  8EDB               	bsf	plusw2,7,c
 11545  007F92                     l296:
 11546                           
 11547                           ; BSR set to: 15
 11548                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11549                           
 11550                           ; BSR set to: 15
 11551  007F92  9126               	bcf	38,0,b	;volatile
 11552  007F94                     l295:
 11553                           
 11554                           ; BSR set to: 15
 11555                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11556  007F94  9A62               	bcf	3938,5,c	;volatile
 11557                           
 11558                           ; BSR set to: 15
 11559  007F96  0012               	return		;funcret
 11560  007F98                     __end_of_USBStallHandler:
 11561                           	opt stack 0
 11562                           tblptru	equ	0xFF8
 11563                           tblptrh	equ	0xFF7
 11564                           tblptrl	equ	0xFF6
 11565                           tablat	equ	0xFF5
 11566                           prodh	equ	0xFF4
 11567                           prodl	equ	0xFF3
 11568                           intcon	equ	0xFF2
 11569                           intcon2	equ	0xFF1
 11570                           intcon3	equ	0xFF0
 11571                           postinc0	equ	0xFEE
 11572                           wreg	equ	0xFE8
 11573                           indf1	equ	0xFE7
 11574                           postdec1	equ	0xFE5
 11575                           plusw1	equ	0xFE3
 11576                           fsr1h	equ	0xFE2
 11577                           fsr1l	equ	0xFE1
 11578                           indf2	equ	0xFDF
 11579                           postinc2	equ	0xFDE
 11580                           postdec2	equ	0xFDD
 11581                           plusw2	equ	0xFDB
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8
 11585                           
 11586 ;; *************** function _USBIncrement1msInternalTimers *****************
 11587 ;; Defined at:
 11588 ;;		line 3027 in file "usb_device.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;		None
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2, status,0
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11606 ;;Total ram usage:        0 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; This function calls:
 11609 ;;		Nothing
 11610 ;; This function is called by:
 11611 ;;		_USBDeviceTasks
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           	psect	text55
 11616  0087EC                     __ptext55:
 11617                           	opt stack 0
 11618  0087EC                     _USBIncrement1msInternalTimers:
 11619                           	opt stack 29
 11620                           
 11621                           ;usb_device.c: 3035: USB1msTickCount++;
 11622                           
 11623                           ; BSR set to: 15
 11624                           ;incstack = 0
 11625  0087EC  0E01               	movlw	1
 11626  0087EE  0101               	movlb	1	; () banked
 11627  0087F0  2762               	addwf	_USB1msTickCount& (0+255),f,b
 11628  0087F2  0E00               	movlw	0
 11629  0087F4  2363               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 11630  0087F6  2364               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 11631  0087F8  2365               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 11632                           
 11633                           ; BSR set to: 1
 11634                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 11635  0087FA  5192               	movf	_USBBusIsSuspended& (0+255),w,b
 11636  0087FC  A4D8               	btfss	status,2,c
 11637  0087FE  0012               	return	
 11638                           
 11639                           ; BSR set to: 1
 11640                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 11641  008800  2B90               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 11642                           
 11643                           ; BSR set to: 1
 11644                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 11645  008802  5190               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 11646  008804  A4D8               	btfss	status,2,c
 11647  008806  0012               	return	
 11648                           
 11649                           ; BSR set to: 1
 11650                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 11651  008808  6990               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 11652                           
 11653                           ; BSR set to: 1
 11654  00880A  0012               	return	
 11655  00880C                     __end_of_USBIncrement1msInternalTimers:
 11656                           	opt stack 0
 11657                           tblptru	equ	0xFF8
 11658                           tblptrh	equ	0xFF7
 11659                           tblptrl	equ	0xFF6
 11660                           tablat	equ	0xFF5
 11661                           prodh	equ	0xFF4
 11662                           prodl	equ	0xFF3
 11663                           intcon	equ	0xFF2
 11664                           intcon2	equ	0xFF1
 11665                           intcon3	equ	0xFF0
 11666                           postinc0	equ	0xFEE
 11667                           wreg	equ	0xFE8
 11668                           indf1	equ	0xFE7
 11669                           postdec1	equ	0xFE5
 11670                           plusw1	equ	0xFE3
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           postinc2	equ	0xFDE
 11675                           postdec2	equ	0xFDD
 11676                           plusw2	equ	0xFDB
 11677                           fsr2h	equ	0xFDA
 11678                           fsr2l	equ	0xFD9
 11679                           status	equ	0xFD8
 11680                           
 11681 ;; *************** function _USBDeviceInit *****************
 11682 ;; Defined at:
 11683 ;;		line 277 in file "usb_device.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  i               1    8[COMRAM] unsigned char 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11701 ;;Total ram usage:        1 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    1
 11704 ;; This function calls:
 11705 ;;		_memset
 11706 ;; This function is called by:
 11707 ;;		_USBDeviceTasks
 11708 ;;		_main
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text56
 11713  003D0E                     __ptext56:
 11714                           	opt stack 0
 11715  003D0E                     _USBDeviceInit:
 11716                           	opt stack 28
 11717                           
 11718                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11719                           
 11720                           ; BSR set to: 1
 11721                           ;incstack = 0
 11722  003D0E  98A0               	bcf	4000,4,c	;volatile
 11723                           
 11724                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 11725  003D10  0E00               	movlw	0
 11726  003D12  6E63               	movwf	3939,c	;volatile
 11727                           
 11728                           ;usb_device.c: 291: {UIR = 0;};
 11729  003D14  0E00               	movlw	0
 11730  003D16  6E62               	movwf	3938,c	;volatile
 11731                           
 11732                           ;usb_device.c: 294: UEP0 = 0;
 11733  003D18  0E00               	movlw	0
 11734  003D1A  010F               	movlb	15	; () banked
 11735  003D1C  6F26               	movwf	38,b	;volatile
 11736                           
 11737                           ; BSR set to: 15
 11738                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 11739  003D1E  0E27               	movlw	39
 11740  003D20  6E01               	movwf	memset@p1,c
 11741  003D22  0E0F               	movlw	15
 11742  003D24  6E02               	movwf	memset@p1+1,c
 11743  003D26  0E00               	movlw	0
 11744  003D28  6E04               	movwf	memset@c+1,c
 11745  003D2A  0E00               	movlw	0
 11746  003D2C  6E03               	movwf	memset@c,c
 11747  003D2E  0E00               	movlw	0
 11748  003D30  6E06               	movwf	memset@n+1,c
 11749  003D32  0E02               	movlw	2
 11750  003D34  6E05               	movwf	memset@n,c
 11751  003D36  EC9F  F042         	call	_memset	;wreg free
 11752                           
 11753                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11754  003D3A  0E16               	movlw	22
 11755  003D3C  010F               	movlb	15	; () banked
 11756  003D3E  6F39               	movwf	57,b	;volatile
 11757                           
 11758                           ; BSR set to: 15
 11759  003D40  0E9F               	movlw	159
 11760  003D42  6F37               	movwf	55,b	;volatile
 11761                           
 11762                           ; BSR set to: 15
 11763  003D44  0E7B               	movlw	123
 11764  003D46  6F36               	movwf	54,b	;volatile
 11765                           
 11766                           ; BSR set to: 15
 11767                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 11768  003D48  0E00               	movlw	0
 11769  003D4A  6E09               	movwf	USBDeviceInit@i,c
 11770  003D4C                     l14397:
 11771                           
 11772                           ; BSR set to: 15
 11773  003D4C  0E0B               	movlw	11
 11774  003D4E  6409               	cpfsgt	USBDeviceInit@i,c
 11775  003D50  D001               	goto	l139
 11776  003D52  D00E               	goto	u11380
 11777  003D54                     l139:
 11778                           
 11779                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 11780                           
 11781                           ; BSR set to: 15
 11782  003D54  5009               	movf	USBDeviceInit@i,w,c
 11783  003D56  0D04               	mullw	4
 11784  003D58  0E00               	movlw	0
 11785  003D5A  24F3               	addwf	prodl,w,c
 11786  003D5C  6ED9               	movwf	fsr2l,c
 11787  003D5E  0E0D               	movlw	13
 11788  003D60  20F4               	addwfc	prodh,w,c
 11789  003D62  6EDA               	movwf	fsr2h,c
 11790  003D64  6ADE               	clrf	postinc2,c
 11791  003D66  6ADE               	clrf	postinc2,c
 11792  003D68  6ADE               	clrf	postinc2,c
 11793  003D6A  6ADD               	clrf	postdec2,c
 11794  003D6C  2A09               	incf	USBDeviceInit@i,f,c
 11795  003D6E  D7EE               	goto	l14397
 11796  003D70                     u11380:
 11797                           
 11798                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 11799  003D70  8C65               	bsf	3941,6,c	;volatile
 11800                           
 11801                           ;usb_device.c: 316: UADDR = 0x00;
 11802  003D72  0E00               	movlw	0
 11803  003D74  010F               	movlb	15	; () banked
 11804  003D76  6F38               	movwf	56,b	;volatile
 11805                           
 11806                           ; BSR set to: 15
 11807                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11808  003D78  9865               	bcf	3941,4,c	;volatile
 11809                           
 11810                           ; BSR set to: 15
 11811                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11812  003D7A  9C65               	bcf	3941,6,c	;volatile
 11813  003D7C                     
 11814                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 11815                           
 11816                           ; BSR set to: 15
 11817  003D7C  9662               	bcf	3938,3,c	;volatile
 11818                           
 11819                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11820  003D7E  0E00               	movlw	0
 11821  003D80  0100               	movlb	0	; () banked
 11822  003D82  6FCE               	movwf	(_inPipes+3)& (0+255),b
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11826  003D84  0E00               	movlw	0
 11827  003D86  0101               	movlb	1	; () banked
 11828  003D88  6F34               	movwf	(_outPipes+3)& (0+255),b
 11829                           
 11830                           ; BSR set to: 1
 11831                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11832  003D8A  0E00               	movlw	0
 11833  003D8C  6F36               	movwf	(_outPipes+5)& (0+255),b
 11834  003D8E  0E00               	movlw	0
 11835  003D90  6F35               	movwf	(_outPipes+4)& (0+255),b
 11836                           
 11837                           ; BSR set to: 1
 11838                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11839  003D92  B662               	btfsc	3938,3,c	;volatile
 11840  003D94  D7F3               	goto	l141
 11841                           
 11842                           ; BSR set to: 1
 11843                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11844                           
 11845                           ; BSR set to: 1
 11846  003D96  0E01               	movlw	1
 11847  003D98  0100               	movlb	0	; () banked
 11848  003D9A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11849                           
 11850                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11851  003D9C  0E01               	movlw	1
 11852  003D9E  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11853                           
 11854                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11855  003DA0  0E00               	movlw	0
 11856  003DA2  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11857                           
 11858                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11859  003DA4  0E00               	movlw	0
 11860  003DA6  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11861                           
 11862                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11863  003DA8  0E00               	movlw	0
 11864  003DAA  0101               	movlb	1	; () banked
 11865  003DAC  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11866                           
 11867                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11868  003DAE  0E00               	movlw	0
 11869  003DB0  6E09               	movwf	USBDeviceInit@i,c
 11870  003DB2                     l14425:
 11871                           
 11872                           ; BSR set to: 1
 11873  003DB2  0E02               	movlw	2
 11874  003DB4  6409               	cpfsgt	USBDeviceInit@i,c
 11875  003DB6  D001               	goto	l143
 11876  003DB8  D02E               	goto	u11410
 11877  003DBA                     l143:
 11878                           
 11879                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11880                           
 11881                           ; BSR set to: 1
 11882  003DBA  5009               	movf	USBDeviceInit@i,w,c
 11883  003DBC  0D02               	mullw	2
 11884  003DBE  0ED1               	movlw	low _pBDTEntryIn
 11885  003DC0  24F3               	addwf	prodl,w,c
 11886  003DC2  6ED9               	movwf	fsr2l,c
 11887  003DC4  0E00               	movlw	high _pBDTEntryIn
 11888  003DC6  20F4               	addwfc	prodh,w,c
 11889  003DC8  6EDA               	movwf	fsr2h,c
 11890  003DCA  0E00               	movlw	0
 11891  003DCC  6EDE               	movwf	postinc2,c
 11892  003DCE  0E00               	movlw	0
 11893  003DD0  6EDD               	movwf	postdec2,c
 11894                           
 11895                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11896  003DD2  5009               	movf	USBDeviceInit@i,w,c
 11897  003DD4  0D02               	mullw	2
 11898  003DD6  0E40               	movlw	low _pBDTEntryOut
 11899  003DD8  24F3               	addwf	prodl,w,c
 11900  003DDA  6ED9               	movwf	fsr2l,c
 11901  003DDC  0E01               	movlw	high _pBDTEntryOut
 11902  003DDE  20F4               	addwfc	prodh,w,c
 11903  003DE0  6EDA               	movwf	fsr2h,c
 11904  003DE2  0E00               	movlw	0
 11905  003DE4  6EDE               	movwf	postinc2,c
 11906  003DE6  0E00               	movlw	0
 11907  003DE8  6EDD               	movwf	postdec2,c
 11908                           
 11909                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 11910  003DEA  5009               	movf	USBDeviceInit@i,w,c
 11911  003DEC  0D01               	mullw	1
 11912  003DEE  0E6F               	movlw	low _ep_data_in
 11913  003DF0  24F3               	addwf	prodl,w,c
 11914  003DF2  6ED9               	movwf	fsr2l,c
 11915  003DF4  0E01               	movlw	high _ep_data_in
 11916  003DF6  20F4               	addwfc	prodh,w,c
 11917  003DF8  6EDA               	movwf	fsr2h,c
 11918  003DFA  0E00               	movlw	0
 11919  003DFC  6EDF               	movwf	indf2,c
 11920                           
 11921                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 11922  003DFE  5009               	movf	USBDeviceInit@i,w,c
 11923  003E00  0D01               	mullw	1
 11924  003E02  0E6C               	movlw	low _ep_data_out
 11925  003E04  24F3               	addwf	prodl,w,c
 11926  003E06  6ED9               	movwf	fsr2l,c
 11927  003E08  0E01               	movlw	high _ep_data_out
 11928  003E0A  20F4               	addwfc	prodh,w,c
 11929  003E0C  6EDA               	movwf	fsr2h,c
 11930  003E0E  0E00               	movlw	0
 11931  003E10  6EDF               	movwf	indf2,c
 11932  003E12  2A09               	incf	USBDeviceInit@i,f,c
 11933  003E14  D7CE               	goto	l14425
 11934  003E16                     u11410:
 11935                           
 11936                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11937  003E16  0E08               	movlw	8
 11938  003E18  0100               	movlb	0	; () banked
 11939  003E1A  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 11940  003E1C  0E0D               	movlw	13
 11941  003E1E  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 11945  003E20  0E16               	movlw	22
 11946  003E22  010F               	movlb	15	; () banked
 11947  003E24  6F26               	movwf	38,b	;volatile
 11948                           
 11949                           ; BSR set to: 15
 11950                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 11951  003E26  0E0D               	movlw	13
 11952  003E28  010D               	movlb	13	; () banked
 11953  003E2A  6F03               	movwf	3,b	;volatile
 11954  003E2C  0E30               	movlw	48
 11955  003E2E  6F02               	movwf	2,b	;volatile
 11956                           
 11957                           ; BSR set to: 13
 11958                           ;usb_device.c: 359: BDT[0].CNT = 8;
 11959  003E30  0E08               	movlw	8
 11960  003E32  6F01               	movwf	1,b	;volatile
 11961                           
 11962                           ; BSR set to: 13
 11963                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 11964  003E34  0E04               	movlw	4
 11965  003E36  6F00               	movwf	0,b	;volatile
 11966                           
 11967                           ; BSR set to: 13
 11968                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 11969  003E38  8F00               	bsf	0,7,b	;volatile
 11970                           
 11971                           ; BSR set to: 13
 11972                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 11973  003E3A  0E00               	movlw	0
 11974  003E3C  0100               	movlb	0	; () banked
 11975  003E3E  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;usb_device.c: 366: USB1msTickCount = 0;
 11979  003E40  0E00               	movlw	0
 11980  003E42  0101               	movlb	1	; () banked
 11981  003E44  6F62               	movwf	_USB1msTickCount& (0+255),b
 11982  003E46  0E00               	movlw	0
 11983  003E48  6F63               	movwf	(_USB1msTickCount+1)& (0+255),b
 11984  003E4A  0E00               	movlw	0
 11985  003E4C  6F64               	movwf	(_USB1msTickCount+2)& (0+255),b
 11986  003E4E  0E00               	movlw	0
 11987  003E50  6F65               	movwf	(_USB1msTickCount+3)& (0+255),b
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 11991  003E52  0E00               	movlw	0
 11992  003E54  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11993                           
 11994                           ; BSR set to: 1
 11995                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 11996  003E56  0E00               	movlw	0
 11997  003E58  0100               	movlb	0	; () banked
 11998  003E5A  6FF8               	movwf	_USBDeviceState& (0+255),b
 11999                           
 12000                           ; BSR set to: 0
 12001  003E5C  0012               	return		;funcret
 12002  003E5E                     __end_of_USBDeviceInit:
 12003                           	opt stack 0
 12004                           tblptru	equ	0xFF8
 12005                           tblptrh	equ	0xFF7
 12006                           tblptrl	equ	0xFF6
 12007                           tablat	equ	0xFF5
 12008                           prodh	equ	0xFF4
 12009                           prodl	equ	0xFF3
 12010                           intcon	equ	0xFF2
 12011                           intcon2	equ	0xFF1
 12012                           intcon3	equ	0xFF0
 12013                           postinc0	equ	0xFEE
 12014                           wreg	equ	0xFE8
 12015                           indf1	equ	0xFE7
 12016                           postdec1	equ	0xFE5
 12017                           plusw1	equ	0xFE3
 12018                           fsr1h	equ	0xFE2
 12019                           fsr1l	equ	0xFE1
 12020                           indf2	equ	0xFDF
 12021                           postinc2	equ	0xFDE
 12022                           postdec2	equ	0xFDD
 12023                           plusw2	equ	0xFDB
 12024                           fsr2h	equ	0xFDA
 12025                           fsr2l	equ	0xFD9
 12026                           status	equ	0xFD8
 12027                           
 12028 ;; *************** function _USBCtrlEPService *****************
 12029 ;; Defined at:
 12030 ;;		line 2374 in file "usb_device.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;		None
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      void 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12047 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12048 ;;Total ram usage:        2 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    7
 12051 ;; This function calls:
 12052 ;;		_USBCtrlTrfInHandler
 12053 ;;		_USBCtrlTrfOutHandler
 12054 ;;		_USBCtrlTrfSetupHandler
 12055 ;;		_memcpy
 12056 ;; This function is called by:
 12057 ;;		_USBDeviceTasks
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text57
 12062  0061B4                     __ptext57:
 12063                           	opt stack 0
 12064  0061B4                     _USBCtrlEPService:
 12065                           	opt stack 22
 12066                           
 12067                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;incstack = 0
 12071  0061B4  0E2D               	movlw	45
 12072  0061B6  0100               	movlb	0	; () banked
 12073  0061B8  6FF3               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12077  0061BA  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12078  0061BE  0EFD               	movlw	253
 12079  0061C0  161E               	andwf	??_USBCtrlEPService,f,c
 12080  0061C2  A4D8               	btfss	status,2,c
 12081  0061C4  D044               	goto	l309
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12085  0061C6  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12086  0061CA  90D8               	bcf	status,0,c
 12087  0061CC  321E               	rrcf	??_USBCtrlEPService,f,c
 12088  0061CE  0E3F               	movlw	63
 12089  0061D0  161E               	andwf	??_USBCtrlEPService,f,c
 12090  0061D2  501E               	movf	??_USBCtrlEPService,w,c
 12091  0061D4  0D04               	mullw	4
 12092  0061D6  0E00               	movlw	0
 12093  0061D8  24F3               	addwf	prodl,w,c
 12094  0061DA  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12095  0061DC  0E0D               	movlw	13
 12096  0061DE  20F4               	addwfc	prodh,w,c
 12097  0061E0  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12101  0061E2  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12102  0061E6  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12106  0061EA  0E04               	movlw	4
 12107  0061EC  19E1               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12108  0061EE  6FE1               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12109  0061F0  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12110  0061F2  6FE2               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12114  0061F4  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12115  0061F8  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12116  0061FC  30DF               	rrcf	223,w,c
 12117  0061FE  32E8               	rrcf	wreg,f,c
 12118  006200  0B0F               	andlw	15
 12119  006202  0A0D               	xorlw	13
 12120  006204  A4D8               	btfss	status,2,c
 12121  006206  D020               	goto	l310
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12125  006208  0E30               	movlw	48
 12126  00620A  6E01               	movwf	memcpy@d1,c
 12127  00620C  0E0D               	movlw	13
 12128  00620E  6E02               	movwf	memcpy@d1+1,c
 12129  006210  EE20 F002          	lfsr	2,2
 12130  006214  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12131  006216  26D9               	addwf	fsr2l,f,c
 12132  006218  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12133  00621A  22DA               	addwfc	fsr2h,f,c
 12134  00621C  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12135  006220  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12136  006224  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12137  006228  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12138  00622C  5003               	movf	memcpy@s1,w,c
 12139  00622E  1004               	iorwf	memcpy@s1+1,w,c
 12140  006230  A4D8               	btfss	status,2,c
 12141  006232  0E20               	movlw	32
 12142  006234  6E05               	movwf	memcpy@s1+2,c
 12143  006236  0E00               	movlw	0
 12144  006238  6E07               	movwf	memcpy@n+1,c
 12145  00623A  0E08               	movlw	8
 12146  00623C  6E06               	movwf	memcpy@n,c
 12147  00623E  EC9C  F03A         	call	_memcpy	;wreg free
 12148                           
 12149                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12150  006242  ECFB  F034         	call	_USBCtrlTrfSetupHandler	;wreg free
 12151                           
 12152                           ;usb_device.c: 2411: }
 12153  006246  0012               	return	
 12154  006248                     l310:
 12155                           
 12156                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12157  006248  EC36  F03A         	call	_USBCtrlTrfOutHandler	;wreg free
 12158                           
 12159                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12160  00624C  0012               	return	
 12161  00624E                     l309:
 12162                           
 12163                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12164  00624E  0100               	movlb	0	; () banked
 12165  006250  51FD               	movf	_USTATcopy& (0+255),w,b
 12166  006252  0BFD               	andlw	253
 12167  006254  0A04               	xorlw	4
 12168  006256  A4D8               	btfss	status,2,c
 12169  006258  0012               	return	
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12173  00625A  EC3B  F02E         	call	_USBCtrlTrfInHandler	;wreg free
 12174  00625E  0012               	return	
 12175  006260                     __end_of_USBCtrlEPService:
 12176                           	opt stack 0
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           intcon2	equ	0xFF1
 12185                           intcon3	equ	0xFF0
 12186                           postinc0	equ	0xFEE
 12187                           wreg	equ	0xFE8
 12188                           indf1	equ	0xFE7
 12189                           postdec1	equ	0xFE5
 12190                           plusw1	equ	0xFE3
 12191                           fsr1h	equ	0xFE2
 12192                           fsr1l	equ	0xFE1
 12193                           indf2	equ	0xFDF
 12194                           postinc2	equ	0xFDE
 12195                           postdec2	equ	0xFDD
 12196                           plusw2	equ	0xFDB
 12197                           fsr2h	equ	0xFDA
 12198                           fsr2l	equ	0xFD9
 12199                           status	equ	0xFD8
 12200                           
 12201 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12202 ;; Defined at:
 12203 ;;		line 2467 in file "usb_device.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;		None
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;		None
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      void 
 12210 ;; Registers used:
 12211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12221 ;;Total ram usage:        0 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    6
 12224 ;; This function calls:
 12225 ;;		_USBCheckStdRequest
 12226 ;;		_USBCtrlEPServiceComplete
 12227 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12228 ;; This function is called by:
 12229 ;;		_USBCtrlEPService
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           	psect	text58
 12234  0069F6                     __ptext58:
 12235                           	opt stack 0
 12236  0069F6                     _USBCtrlTrfSetupHandler:
 12237                           	opt stack 22
 12238                           
 12239                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12240                           
 12241                           ;incstack = 0
 12242  0069F6  0E00               	movlw	0
 12243  0069F8  0100               	movlb	0	; () banked
 12244  0069FA  6FF7               	movwf	_shortPacketStatus& (0+255),b
 12245                           
 12246                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12247  0069FC  0E00               	movlw	0
 12248  0069FE  6FF2               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12249                           
 12250                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12251  006A00  0E00               	movlw	0
 12252  006A02  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12253                           
 12254                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12255  006A04  0E00               	movlw	0
 12256  006A06  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12257                           
 12258                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12259  006A08  0E00               	movlw	0
 12260  006A0A  0101               	movlb	1	; () banked
 12261  006A0C  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12262                           
 12263                           ;usb_device.c: 2477: controlTransferState = 0;
 12264  006A0E  0E00               	movlw	0
 12265  006A10  0100               	movlb	0	; () banked
 12266  006A12  6FF6               	movwf	_controlTransferState& (0+255),b
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12270  006A14  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12271  006A18  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12272  006A1C  0E7F               	movlw	127
 12273  006A1E  16DF               	andwf	indf2,f,c
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12277  006A20  0E04               	movlw	4
 12278  006A22  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12279  006A24  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12280  006A26  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12281  006A28  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12285  006A2A  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12286  006A2E  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12287  006A32  0E7F               	movlw	127
 12288  006A34  16DF               	andwf	indf2,f,c
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12292  006A36  0E04               	movlw	4
 12293  006A38  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12294  006A3A  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12295  006A3C  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12296  006A3E  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12300  006A40  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12301  006A44  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12302  006A48  0E7F               	movlw	127
 12303  006A4A  16DF               	andwf	indf2,f,c
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12307  006A4C  0E00               	movlw	0
 12308  006A4E  6FCE               	movwf	(_inPipes+3)& (0+255),b
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12312  006A50  0E00               	movlw	0
 12313  006A52  6FD0               	movwf	(_inPipes+5)& (0+255),b
 12314  006A54  0E00               	movlw	0
 12315  006A56  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12319  006A58  0E00               	movlw	0
 12320  006A5A  0101               	movlb	1	; () banked
 12321  006A5C  6F34               	movwf	(_outPipes+3)& (0+255),b
 12322                           
 12323                           ; BSR set to: 1
 12324                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12325  006A5E  0E00               	movlw	0
 12326  006A60  6F36               	movwf	(_outPipes+5)& (0+255),b
 12327  006A62  0E00               	movlw	0
 12328  006A64  6F35               	movwf	(_outPipes+4)& (0+255),b
 12329                           
 12330                           ; BSR set to: 1
 12331                           ;usb_device.c: 2502: USBCheckStdRequest();
 12332  006A66  EC40  F028         	call	_USBCheckStdRequest	;wreg free
 12333                           
 12334                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12335  006A6A  0E00               	movlw	0
 12336  006A6C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12337  006A6E  0E03               	movlw	3
 12338  006A70  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12339  006A72  0E00               	movlw	0
 12340  006A74  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12341  006A76  0E00               	movlw	0
 12342  006A78  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12343  006A7A  0E00               	movlw	0
 12344  006A7C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12345  006A7E  0E00               	movlw	0
 12346  006A80  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12347  006A82  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12348                           
 12349                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12350  006A86  EC54  F026         	call	_USBCtrlEPServiceComplete	;wreg free
 12351  006A8A  0012               	return		;funcret
 12352  006A8C                     __end_of_USBCtrlTrfSetupHandler:
 12353                           	opt stack 0
 12354                           tblptru	equ	0xFF8
 12355                           tblptrh	equ	0xFF7
 12356                           tblptrl	equ	0xFF6
 12357                           tablat	equ	0xFF5
 12358                           prodh	equ	0xFF4
 12359                           prodl	equ	0xFF3
 12360                           intcon	equ	0xFF2
 12361                           intcon2	equ	0xFF1
 12362                           intcon3	equ	0xFF0
 12363                           postinc0	equ	0xFEE
 12364                           wreg	equ	0xFE8
 12365                           indf1	equ	0xFE7
 12366                           postdec1	equ	0xFE5
 12367                           plusw1	equ	0xFE3
 12368                           fsr1h	equ	0xFE2
 12369                           fsr1l	equ	0xFE1
 12370                           indf2	equ	0xFDF
 12371                           postinc2	equ	0xFDE
 12372                           postdec2	equ	0xFDD
 12373                           plusw2	equ	0xFDB
 12374                           fsr2h	equ	0xFDA
 12375                           fsr2l	equ	0xFD9
 12376                           status	equ	0xFD8
 12377                           
 12378 ;; *************** function _USBCtrlEPServiceComplete *****************
 12379 ;; Defined at:
 12380 ;;		line 1618 in file "usb_device.c"
 12381 ;; Parameters:    Size  Location     Type
 12382 ;;		None
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;		None
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12398 ;;Total ram usage:        0 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; Hardware stack levels required when called:    2
 12401 ;; This function calls:
 12402 ;;		_USBCtrlEPAllowDataStage
 12403 ;;		_USBCtrlEPAllowStatusStage
 12404 ;; This function is called by:
 12405 ;;		_USBCtrlTrfSetupHandler
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409                           	psect	text59
 12410  004CA8                     __ptext59:
 12411                           	opt stack 0
 12412  004CA8                     _USBCtrlEPServiceComplete:
 12413                           	opt stack 25
 12414                           
 12415                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12416                           
 12417                           ;incstack = 0
 12418  004CA8  9865               	bcf	3941,4,c	;volatile
 12419                           
 12420                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12421  004CAA  0100               	movlb	0	; () banked
 12422  004CAC  BFCE               	btfsc	(_inPipes+3)& (0+255),7,b
 12423  004CAE  D03C               	goto	l219
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12427  004CB0  0101               	movlb	1	; () banked
 12428  004CB2  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12429  004CB4  D00D               	goto	l220
 12430                           
 12431                           ; BSR set to: 1
 12432                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12433  004CB6  0E02               	movlw	2
 12434  004CB8  0100               	movlb	0	; () banked
 12435  004CBA  6FF6               	movwf	_controlTransferState& (0+255),b
 12436                           
 12437                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12438  004CBC  51EE               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12439  004CBE  B4D8               	btfsc	status,2,c
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12443  004CC0  EC74  F033         	call	_USBCtrlEPAllowDataStage	;wreg free
 12444                           
 12445                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12446  004CC4  0E00               	movlw	0
 12447  004CC6  0100               	movlb	0	; () banked
 12448  004CC8  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12449                           
 12450                           ; BSR set to: 0
 12451                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12452  004CCA  0E00               	movlw	0
 12453  004CCC  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12454                           
 12455                           ;usb_device.c: 1654: }
 12456  004CCE  0012               	return	
 12457  004CD0                     l220:
 12458                           
 12459                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12460                           
 12461                           ; BSR set to: 0
 12462  004CD0  0100               	movlb	0	; () banked
 12463  004CD2  EE20 F001          	lfsr	2,1
 12464  004CD6  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12465  004CD8  26D9               	addwf	fsr2l,f,c
 12466  004CDA  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12467  004CDC  22DA               	addwfc	fsr2h,f,c
 12468  004CDE  0E08               	movlw	8
 12469  004CE0  6EDF               	movwf	indf2,c
 12470                           
 12471                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12472  004CE2  EE20 F002          	lfsr	2,2
 12473  004CE6  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12474  004CE8  26D9               	addwf	fsr2l,f,c
 12475  004CEA  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12476  004CEC  22DA               	addwfc	fsr2h,f,c
 12477  004CEE  0E30               	movlw	48
 12478  004CF0  6EDE               	movwf	postinc2,c
 12479  004CF2  0E0D               	movlw	13
 12480  004CF4  6EDD               	movwf	postdec2,c
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12484  004CF6  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12485  004CFA  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12486  004CFE  0E0C               	movlw	12
 12487  004D00  6EDF               	movwf	indf2,c
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12491  004D02  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12492  004D06  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12493  004D0A  0E00               	movlw	0
 12494  004D0C  8EDB               	bsf	plusw2,7,c
 12495                           
 12496                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12497  004D0E  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12498  004D12  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12499  004D16  0E04               	movlw	4
 12500  004D18  6EDF               	movwf	indf2,c
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12504  004D1A  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12505  004D1E  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12506  004D22  0E00               	movlw	0
 12507  004D24  8EDB               	bsf	plusw2,7,c
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12511  004D26  0012               	return	
 12512  004D28                     l219:
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12516  004D28  010D               	movlb	13	; () banked
 12517  004D2A  AF30               	btfss	48,7,b	;volatile
 12518  004D2C  D012               	goto	l224
 12519                           
 12520                           ; BSR set to: 13
 12521                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12522  004D2E  0E01               	movlw	1
 12523  004D30  0100               	movlb	0	; () banked
 12524  004D32  6FF6               	movwf	_controlTransferState& (0+255),b
 12525                           
 12526                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12527  004D34  51EF               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12528  004D36  B4D8               	btfsc	status,2,c
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12532  004D38  EC74  F033         	call	_USBCtrlEPAllowDataStage	;wreg free
 12533                           
 12534                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12535  004D3C  0E00               	movlw	0
 12536  004D3E  0100               	movlb	0	; () banked
 12537  004D40  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12541  004D42  0E00               	movlw	0
 12542  004D44  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12546  004D46  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12547  004D48  A4D8               	btfss	status,2,c
 12548  004D4A  0012               	return	
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12552  004D4C  ECD5  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12553                           
 12554                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12555  004D50  0012               	return	
 12556  004D52                     l224:
 12557                           
 12558                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12559  004D52  0E02               	movlw	2
 12560  004D54  0100               	movlb	0	; () banked
 12561  004D56  6FF6               	movwf	_controlTransferState& (0+255),b
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 12565  004D58  EE20 F001          	lfsr	2,1
 12566  004D5C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12567  004D5E  26D9               	addwf	fsr2l,f,c
 12568  004D60  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12569  004D62  22DA               	addwfc	fsr2h,f,c
 12570  004D64  0E08               	movlw	8
 12571  004D66  6EDF               	movwf	indf2,c
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12575  004D68  EE20 F002          	lfsr	2,2
 12576  004D6C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12577  004D6E  26D9               	addwf	fsr2l,f,c
 12578  004D70  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12579  004D72  22DA               	addwfc	fsr2h,f,c
 12580  004D74  0E30               	movlw	48
 12581  004D76  6EDE               	movwf	postinc2,c
 12582  004D78  0E0D               	movlw	13
 12583  004D7A  6EDD               	movwf	postdec2,c
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12587  004D7C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12588  004D80  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12589  004D84  0E04               	movlw	4
 12590  004D86  6EDF               	movwf	indf2,c
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12594  004D88  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12595  004D8C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12596  004D90  0E00               	movlw	0
 12597  004D92  8EDB               	bsf	plusw2,7,c
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 12601  004D94  0E00               	movlw	0
 12602  004D96  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 12606  004D98  0E00               	movlw	0
 12607  004D9A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 12611  004D9C  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12612  004D9E  A4D8               	btfss	status,2,c
 12613  004DA0  0012               	return	
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 12617  004DA2  ECD5  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12618  004DA6  0012               	return	
 12619  004DA8                     __end_of_USBCtrlEPServiceComplete:
 12620                           	opt stack 0
 12621                           tblptru	equ	0xFF8
 12622                           tblptrh	equ	0xFF7
 12623                           tblptrl	equ	0xFF6
 12624                           tablat	equ	0xFF5
 12625                           prodh	equ	0xFF4
 12626                           prodl	equ	0xFF3
 12627                           intcon	equ	0xFF2
 12628                           intcon2	equ	0xFF1
 12629                           intcon3	equ	0xFF0
 12630                           postinc0	equ	0xFEE
 12631                           wreg	equ	0xFE8
 12632                           indf1	equ	0xFE7
 12633                           postdec1	equ	0xFE5
 12634                           plusw1	equ	0xFE3
 12635                           fsr1h	equ	0xFE2
 12636                           fsr1l	equ	0xFE1
 12637                           indf2	equ	0xFDF
 12638                           postinc2	equ	0xFDE
 12639                           postdec2	equ	0xFDD
 12640                           plusw2	equ	0xFDB
 12641                           fsr2h	equ	0xFDA
 12642                           fsr2l	equ	0xFD9
 12643                           status	equ	0xFD8
 12644                           
 12645 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12646 ;; Defined at:
 12647 ;;		line 1490 in file "usb_device.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;		None
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  1    wreg      void 
 12654 ;; Registers used:
 12655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12665 ;;Total ram usage:        0 bytes
 12666 ;; Hardware stack levels used:    1
 12667 ;; Hardware stack levels required when called:    1
 12668 ;; This function calls:
 12669 ;;		_USBCtrlTrfTxService
 12670 ;; This function is called by:
 12671 ;;		_USBCtrlEPServiceComplete
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           
 12675                           	psect	text60
 12676  0066E8                     __ptext60:
 12677                           	opt stack 0
 12678  0066E8                     _USBCtrlEPAllowDataStage:
 12679                           	opt stack 25
 12680                           
 12681                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 12682                           
 12683                           ;incstack = 0
 12684  0066E8  0E00               	movlw	0
 12685  0066EA  0100               	movlb	0	; () banked
 12686  0066EC  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12687                           
 12688                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 12689  0066EE  0E00               	movlw	0
 12690  0066F0  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;usb_device.c: 1495: if(controlTransferState == 2)
 12694  0066F2  0E02               	movlw	2
 12695  0066F4  19F6               	xorwf	_controlTransferState& (0+255),w,b
 12696  0066F6  A4D8               	btfss	status,2,c
 12697  0066F8  D01F               	goto	l208
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 12701  0066FA  EE20 F001          	lfsr	2,1
 12702  0066FE  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12703  006700  26D9               	addwf	fsr2l,f,c
 12704  006702  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12705  006704  22DA               	addwfc	fsr2h,f,c
 12706  006706  0E08               	movlw	8
 12707  006708  6EDF               	movwf	indf2,c
 12708                           
 12709                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12710  00670A  EE20 F002          	lfsr	2,2
 12711  00670E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12712  006710  26D9               	addwf	fsr2l,f,c
 12713  006712  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12714  006714  22DA               	addwfc	fsr2h,f,c
 12715  006716  0E38               	movlw	56
 12716  006718  6EDE               	movwf	postinc2,c
 12717  00671A  0E0D               	movlw	13
 12718  00671C  6EDD               	movwf	postdec2,c
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12722  00671E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12723  006722  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12724  006726  0E48               	movlw	72
 12725  006728  6EDF               	movwf	indf2,c
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12729  00672A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12730  00672E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12731  006732  0E00               	movlw	0
 12732  006734  8EDB               	bsf	plusw2,7,c
 12733                           
 12734                           ;usb_device.c: 1502: }
 12735  006736  0012               	return	
 12736  006738                     l208:
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 12740                           
 12741                           ; BSR set to: 0
 12742  006738  51CF               	movf	(_inPipes+4)& (0+255),w,b
 12743  00673A  010D               	movlb	13	; () banked
 12744  00673C  5D36               	subwf	54,w,b	;volatile
 12745  00673E  0100               	movlb	0	; () banked
 12746  006740  51D0               	movf	(_inPipes+5)& (0+255),w,b
 12747  006742  010D               	movlb	13	; () banked
 12748  006744  5937               	subwfb	55,w,b	;volatile
 12749  006746  B0D8               	btfsc	status,0,c
 12750  006748  D004               	goto	l210
 12751                           
 12752                           ; BSR set to: 13
 12753                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 12754  00674A  CD36 F0CF          	movff	3382,_inPipes+4	;volatile
 12755  00674E  CD37 F0D0          	movff	3383,_inPipes+5	;volatile
 12756  006752                     l210:
 12757                           
 12758                           ; BSR set to: 13
 12759                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 12760                           
 12761                           ; BSR set to: 13
 12762  006752  EC33  F02C         	call	_USBCtrlTrfTxService	;wreg free
 12763                           
 12764                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12765  006756  0100               	movlb	0	; () banked
 12766  006758  EE20 F002          	lfsr	2,2
 12767  00675C  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 12768  00675E  26D9               	addwf	fsr2l,f,c
 12769  006760  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12770  006762  22DA               	addwfc	fsr2h,f,c
 12771  006764  0E38               	movlw	56
 12772  006766  6EDE               	movwf	postinc2,c
 12773  006768  0E0D               	movlw	13
 12774  00676A  6EDD               	movwf	postdec2,c
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12778  00676C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12779  006770  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12780  006774  0E48               	movlw	72
 12781  006776  6EDF               	movwf	indf2,c
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12785  006778  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12786  00677C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12787  006780  0E00               	movlw	0
 12788  006782  8EDB               	bsf	plusw2,7,c
 12789  006784  0012               	return	
 12790  006786                     __end_of_USBCtrlEPAllowDataStage:
 12791                           	opt stack 0
 12792                           tblptru	equ	0xFF8
 12793                           tblptrh	equ	0xFF7
 12794                           tblptrl	equ	0xFF6
 12795                           tablat	equ	0xFF5
 12796                           prodh	equ	0xFF4
 12797                           prodl	equ	0xFF3
 12798                           intcon	equ	0xFF2
 12799                           intcon2	equ	0xFF1
 12800                           intcon3	equ	0xFF0
 12801                           postinc0	equ	0xFEE
 12802                           wreg	equ	0xFE8
 12803                           indf1	equ	0xFE7
 12804                           postdec1	equ	0xFE5
 12805                           plusw1	equ	0xFE3
 12806                           fsr1h	equ	0xFE2
 12807                           fsr1l	equ	0xFE1
 12808                           indf2	equ	0xFDF
 12809                           postinc2	equ	0xFDE
 12810                           postdec2	equ	0xFDD
 12811                           plusw2	equ	0xFDB
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816 ;; *************** function _USBCheckStdRequest *****************
 12817 ;; Defined at:
 12818 ;;		line 2688 in file "usb_device.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;		None
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;		None
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      void 
 12825 ;; Registers used:
 12826 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12836 ;;Total ram usage:        0 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:    5
 12839 ;; This function calls:
 12840 ;;		_USBStdFeatureReqHandler
 12841 ;;		_USBStdGetDscHandler
 12842 ;;		_USBStdGetStatusHandler
 12843 ;;		_USBStdSetCfgHandler
 12844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12845 ;; This function is called by:
 12846 ;;		_USBCtrlTrfSetupHandler
 12847 ;; This function uses a non-reentrant model
 12848 ;;
 12849                           
 12850                           	psect	text61
 12851  005080                     __ptext61:
 12852                           	opt stack 0
 12853  005080                     _USBCheckStdRequest:
 12854                           	opt stack 22
 12855                           
 12856                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;incstack = 0
 12860  005080  010D               	movlb	13	; () banked
 12861  005082  3930               	swapf	48,w,b	;volatile
 12862  005084  32E8               	rrcf	wreg,f,c
 12863  005086  0B03               	andlw	3
 12864  005088  0900               	iorlw	0
 12865  00508A  A4D8               	btfss	status,2,c
 12866  00508C  0012               	return	
 12867  00508E  D047               	goto	l343
 12868  005090                     l344:
 12869                           
 12870                           ; BSR set to: 13
 12871                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 12872  005090  0100               	movlb	0	; () banked
 12873  005092  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 12877  005094  0E08               	movlw	8
 12878  005096  6FF8               	movwf	_USBDeviceState& (0+255),b
 12879                           
 12880                           ;usb_device.c: 2698: break;
 12881  005098  0012               	return	
 12882  00509A                     
 12883                           ;usb_device.c: 2700: USBStdGetDscHandler();
 12884                           
 12885                           ; BSR set to: 0
 12886  00509A  EC74  F020         	call	_USBStdGetDscHandler	;wreg free
 12887                           
 12888                           ;usb_device.c: 2701: break;
 12889  00509E  0012               	return	
 12890  0050A0                     
 12891                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 12892  0050A0  ECB1  F028         	call	_USBStdSetCfgHandler	;wreg free
 12893                           
 12894                           ;usb_device.c: 2704: break;
 12895  0050A4  0012               	return	
 12896  0050A6                     
 12897                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12898  0050A6  0EFE               	movlw	low _USBActiveConfiguration
 12899  0050A8  0100               	movlb	0	; () banked
 12900  0050AA  6FCB               	movwf	_inPipes& (0+255),b
 12901  0050AC  0E00               	movlw	high _USBActiveConfiguration
 12902  0050AE  6FCC               	movwf	(_inPipes+1)& (0+255),b
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12906  0050B0  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 12910  0050B2  0E01               	movlw	1
 12911  0050B4  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 12915  0050B6  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12916                           
 12917                           ;usb_device.c: 2710: break;
 12918  0050B8  0012               	return	
 12919  0050BA                     
 12920                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 12921                           
 12922                           ; BSR set to: 0
 12923  0050BA  EC30  F031         	call	_USBStdGetStatusHandler	;wreg free
 12924                           
 12925                           ;usb_device.c: 2713: break;
 12926  0050BE  0012               	return	
 12927  0050C0                     
 12928                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 12929  0050C0  EC8F  F00D         	call	_USBStdFeatureReqHandler	;wreg free
 12930                           
 12931                           ;usb_device.c: 2717: break;
 12932  0050C4  0012               	return	
 12933  0050C6                     
 12934                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 12935  0050C6  010D               	movlb	13	; () banked
 12936  0050C8  5134               	movf	52,w,b	;volatile
 12937  0050CA  0D01               	mullw	1
 12938  0050CC  0EAF               	movlw	low _USBAlternateInterface
 12939  0050CE  24F3               	addwf	prodl,w,c
 12940  0050D0  0100               	movlb	0	; () banked
 12941  0050D2  6FCB               	movwf	_inPipes& (0+255),b
 12942  0050D4  0E01               	movlw	high _USBAlternateInterface
 12943  0050D6  20F4               	addwfc	prodh,w,c
 12944  0050D8  6FCC               	movwf	(_inPipes+1)& (0+255),b
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12948  0050DA  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 12952  0050DC  0E01               	movlw	1
 12953  0050DE  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 12957  0050E0  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12958                           
 12959                           ;usb_device.c: 2723: break;
 12960  0050E2  0012               	return	
 12961  0050E4                     l353:
 12962                           
 12963                           ; BSR set to: 13
 12964                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 12965  0050E4  0100               	movlb	0	; () banked
 12966  0050E6  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 12970  0050E8  010D               	movlb	13	; () banked
 12971  0050EA  5134               	movf	52,w,b	;volatile
 12972  0050EC  0D01               	mullw	1
 12973  0050EE  0EAF               	movlw	low _USBAlternateInterface
 12974  0050F0  24F3               	addwf	prodl,w,c
 12975  0050F2  6ED9               	movwf	fsr2l,c
 12976  0050F4  0E01               	movlw	high _USBAlternateInterface
 12977  0050F6  20F4               	addwfc	prodh,w,c
 12978  0050F8  6EDA               	movwf	fsr2h,c
 12979  0050FA  CD32 FFDF          	movff	3378,indf2	;volatile
 12980                           
 12981                           ;usb_device.c: 2727: break;
 12982  0050FE  0012               	return	
 12983  005100                     
 12984                           ; BSR set to: 13
 12985                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12986                           
 12987                           ; BSR set to: 13
 12988  005100  0E00               	movlw	0
 12989  005102  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12990  005104  0E02               	movlw	2
 12991  005106  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12992  005108  0E00               	movlw	0
 12993  00510A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12994  00510C  0E00               	movlw	0
 12995  00510E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12996  005110  0E00               	movlw	0
 12997  005112  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12998  005114  0E00               	movlw	0
 12999  005116  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13000  005118  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13001                           
 13002                           ;usb_device.c: 2734: }
 13003                           
 13004                           ;usb_device.c: 2733: break;
 13005                           
 13006                           ;usb_device.c: 2732: default:
 13007                           
 13008                           ;usb_device.c: 2731: case 12:
 13009                           
 13010                           ;usb_device.c: 2730: break;
 13011  00511C  0012               	return	
 13012  00511E                     l343:
 13013  00511E  010D               	movlb	13	; () banked
 13014  005120  5131               	movf	49,w,b	;volatile
 13015                           
 13016                           ; Switch size 1, requested type "space"
 13017                           ; Number of cases is 11, Range of values is 0 to 12
 13018                           ; switch strategies available:
 13019                           ; Name         Instructions Cycles
 13020                           ; simple_byte           34    18 (average)
 13021                           ;	Chosen strategy is simple_byte
 13022  005122  0A00               	xorlw	0	; case 0
 13023  005124  B4D8               	btfsc	status,2,c
 13024  005126  D7C9               	goto	l349
 13025  005128  0A01               	xorlw	1	; case 1
 13026  00512A  B4D8               	btfsc	status,2,c
 13027  00512C  D7C9               	goto	l350
 13028  00512E  0A02               	xorlw	2	; case 3
 13029  005130  B4D8               	btfsc	status,2,c
 13030  005132  D7C6               	goto	l350
 13031  005134  0A06               	xorlw	6	; case 5
 13032  005136  B4D8               	btfsc	status,2,c
 13033  005138  D7AB               	goto	l344
 13034  00513A  0A03               	xorlw	3	; case 6
 13035  00513C  B4D8               	btfsc	status,2,c
 13036  00513E  D7AD               	goto	l346
 13037  005140  0A01               	xorlw	1	; case 7
 13038  005142  B4D8               	btfsc	status,2,c
 13039  005144  D7DD               	goto	l354
 13040  005146  0A0F               	xorlw	15	; case 8
 13041  005148  B4D8               	btfsc	status,2,c
 13042  00514A  D7AD               	goto	l348
 13043  00514C  0A01               	xorlw	1	; case 9
 13044  00514E  B4D8               	btfsc	status,2,c
 13045  005150  D7A7               	goto	l347
 13046  005152  0A03               	xorlw	3	; case 10
 13047  005154  B4D8               	btfsc	status,2,c
 13048  005156  D7B7               	goto	l352
 13049  005158  0A01               	xorlw	1	; case 11
 13050  00515A  B4D8               	btfsc	status,2,c
 13051  00515C  D7C3               	goto	l353
 13052  00515E  0A07               	xorlw	7	; case 12
 13053  005160  0012               	return	
 13054  005162                     __end_of_USBCheckStdRequest:
 13055                           	opt stack 0
 13056                           tblptru	equ	0xFF8
 13057                           tblptrh	equ	0xFF7
 13058                           tblptrl	equ	0xFF6
 13059                           tablat	equ	0xFF5
 13060                           prodh	equ	0xFF4
 13061                           prodl	equ	0xFF3
 13062                           intcon	equ	0xFF2
 13063                           intcon2	equ	0xFF1
 13064                           intcon3	equ	0xFF0
 13065                           postinc0	equ	0xFEE
 13066                           wreg	equ	0xFE8
 13067                           indf1	equ	0xFE7
 13068                           postdec1	equ	0xFE5
 13069                           plusw1	equ	0xFE3
 13070                           fsr1h	equ	0xFE2
 13071                           fsr1l	equ	0xFE1
 13072                           indf2	equ	0xFDF
 13073                           postinc2	equ	0xFDE
 13074                           postdec2	equ	0xFDD
 13075                           plusw2	equ	0xFDB
 13076                           fsr2h	equ	0xFDA
 13077                           fsr2l	equ	0xFD9
 13078                           status	equ	0xFD8
 13079                           
 13080 ;; *************** function _USBStdSetCfgHandler *****************
 13081 ;; Defined at:
 13082 ;;		line 1970 in file "usb_device.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;		None
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;  i               1   23[COMRAM] unsigned char 
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13100 ;;Total ram usage:        1 bytes
 13101 ;; Hardware stack levels used:    1
 13102 ;; Hardware stack levels required when called:    4
 13103 ;; This function calls:
 13104 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13105 ;;		_memset
 13106 ;; This function is called by:
 13107 ;;		_USBCheckStdRequest
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text62
 13112  005162                     __ptext62:
 13113                           	opt stack 0
 13114  005162                     _USBStdSetCfgHandler:
 13115                           	opt stack 22
 13116                           
 13117                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13118                           
 13119                           ;incstack = 0
 13120  005162  0100               	movlb	0	; () banked
 13121  005164  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13125  005166  0E27               	movlw	39
 13126  005168  6E01               	movwf	memset@p1,c
 13127  00516A  0E0F               	movlw	15
 13128  00516C  6E02               	movwf	memset@p1+1,c
 13129  00516E  0E00               	movlw	0
 13130  005170  6E04               	movwf	memset@c+1,c
 13131  005172  0E00               	movlw	0
 13132  005174  6E03               	movwf	memset@c,c
 13133  005176  0E00               	movlw	0
 13134  005178  6E06               	movwf	memset@n+1,c
 13135  00517A  0E02               	movlw	2
 13136  00517C  6E05               	movwf	memset@n,c
 13137  00517E  EC9F  F042         	call	_memset	;wreg free
 13138                           
 13139                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13140  005182  0E00               	movlw	0
 13141  005184  6E01               	movwf	memset@p1,c
 13142  005186  0E0D               	movlw	13
 13143  005188  6E02               	movwf	memset@p1+1,c
 13144  00518A  0E00               	movlw	0
 13145  00518C  6E04               	movwf	memset@c+1,c
 13146  00518E  0E00               	movlw	0
 13147  005190  6E03               	movwf	memset@c,c
 13148  005192  0E00               	movlw	0
 13149  005194  6E06               	movwf	memset@n+1,c
 13150  005196  0E30               	movlw	48
 13151  005198  6E05               	movwf	memset@n,c
 13152  00519A  EC9F  F042         	call	_memset	;wreg free
 13153                           
 13154                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13155  00519E  8C65               	bsf	3941,6,c	;volatile
 13156                           
 13157                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13158  0051A0  0E00               	movlw	0
 13159  0051A2  6E18               	movwf	USBStdSetCfgHandler@i,c
 13160  0051A4                     l12585:
 13161  0051A4  0E02               	movlw	2
 13162  0051A6  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13163  0051A8  D001               	goto	l260
 13164  0051AA  D016               	goto	u9350
 13165  0051AC                     l260:
 13166                           
 13167                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13168  0051AC  5018               	movf	USBStdSetCfgHandler@i,w,c
 13169  0051AE  0D01               	mullw	1
 13170  0051B0  0E6F               	movlw	low _ep_data_in
 13171  0051B2  24F3               	addwf	prodl,w,c
 13172  0051B4  6ED9               	movwf	fsr2l,c
 13173  0051B6  0E01               	movlw	high _ep_data_in
 13174  0051B8  20F4               	addwfc	prodh,w,c
 13175  0051BA  6EDA               	movwf	fsr2h,c
 13176  0051BC  0E00               	movlw	0
 13177  0051BE  6EDF               	movwf	indf2,c
 13178                           
 13179                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13180  0051C0  5018               	movf	USBStdSetCfgHandler@i,w,c
 13181  0051C2  0D01               	mullw	1
 13182  0051C4  0E6C               	movlw	low _ep_data_out
 13183  0051C6  24F3               	addwf	prodl,w,c
 13184  0051C8  6ED9               	movwf	fsr2l,c
 13185  0051CA  0E01               	movlw	high _ep_data_out
 13186  0051CC  20F4               	addwfc	prodh,w,c
 13187  0051CE  6EDA               	movwf	fsr2h,c
 13188  0051D0  0E00               	movlw	0
 13189  0051D2  6EDF               	movwf	indf2,c
 13190  0051D4  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13191  0051D6  D7E6               	goto	l12585
 13192  0051D8                     u9350:
 13193                           
 13194                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13195  0051D8  0EAF               	movlw	low _USBAlternateInterface
 13196  0051DA  6E01               	movwf	memset@p1,c
 13197  0051DC  0E01               	movlw	high _USBAlternateInterface
 13198  0051DE  6E02               	movwf	memset@p1+1,c
 13199  0051E0  0E00               	movlw	0
 13200  0051E2  6E04               	movwf	memset@c+1,c
 13201  0051E4  0E00               	movlw	0
 13202  0051E6  6E03               	movwf	memset@c,c
 13203  0051E8  0E00               	movlw	0
 13204  0051EA  6E06               	movwf	memset@n+1,c
 13205  0051EC  0E02               	movlw	2
 13206  0051EE  6E05               	movwf	memset@n,c
 13207  0051F0  EC9F  F042         	call	_memset	;wreg free
 13208                           
 13209                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13210  0051F4  9C65               	bcf	3941,6,c	;volatile
 13211                           
 13212                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13213  0051F6  0E08               	movlw	8
 13214  0051F8  0100               	movlb	0	; () banked
 13215  0051FA  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 13216  0051FC  0E0D               	movlw	13
 13217  0051FE  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13221  005200  0E00               	movlw	0
 13222  005202  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13223  005204  0E0D               	movlw	13
 13224  005206  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13228  005208  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13229  00520C  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13233  005210  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13237  005214  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13238  005216  A4D8               	btfss	status,2,c
 13239  005218  D003               	goto	l262
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13243  00521A  0E10               	movlw	16
 13244  00521C  6FF8               	movwf	_USBDeviceState& (0+255),b
 13245                           
 13246                           ;usb_device.c: 2015: }
 13247  00521E  0012               	return	
 13248  005220                     l262:
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13252                           
 13253                           ; BSR set to: 0
 13254  005220  0E00               	movlw	0
 13255  005222  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13256  005224  0E01               	movlw	1
 13257  005226  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13258  005228  0EFE               	movlw	low _USBActiveConfiguration
 13259  00522A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13260  00522C  0E00               	movlw	high _USBActiveConfiguration
 13261  00522E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13262  005230  0E00               	movlw	0
 13263  005232  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13264  005234  0E01               	movlw	1
 13265  005236  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13266  005238  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13267                           
 13268                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13269  00523C  0E20               	movlw	32
 13270  00523E  0100               	movlb	0	; () banked
 13271  005240  6FF8               	movwf	_USBDeviceState& (0+255),b
 13272  005242  0012               	return	
 13273  005244                     __end_of_USBStdSetCfgHandler:
 13274                           	opt stack 0
 13275                           tblptru	equ	0xFF8
 13276                           tblptrh	equ	0xFF7
 13277                           tblptrl	equ	0xFF6
 13278                           tablat	equ	0xFF5
 13279                           prodh	equ	0xFF4
 13280                           prodl	equ	0xFF3
 13281                           intcon	equ	0xFF2
 13282                           intcon2	equ	0xFF1
 13283                           intcon3	equ	0xFF0
 13284                           postinc0	equ	0xFEE
 13285                           wreg	equ	0xFE8
 13286                           indf1	equ	0xFE7
 13287                           postdec1	equ	0xFE5
 13288                           plusw1	equ	0xFE3
 13289                           fsr1h	equ	0xFE2
 13290                           fsr1l	equ	0xFE1
 13291                           indf2	equ	0xFDF
 13292                           postinc2	equ	0xFDE
 13293                           postdec2	equ	0xFDD
 13294                           plusw2	equ	0xFDB
 13295                           fsr2h	equ	0xFDA
 13296                           fsr2l	equ	0xFD9
 13297                           status	equ	0xFD8
 13298                           
 13299 ;; *************** function _memset *****************
 13300 ;; Defined at:
 13301 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  p1              2    0[COMRAM] PTR void 
 13304 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13305 ;;  c               2    2[COMRAM] int 
 13306 ;;  n               2    4[COMRAM] unsigned int 
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;  p               2    6[COMRAM] PTR unsigned char 
 13309 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  2    0[COMRAM] PTR void 
 13312 ;; Registers used:
 13313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/0
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13319 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13322 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13323 ;;Total ram usage:        8 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; This function calls:
 13326 ;;		Nothing
 13327 ;; This function is called by:
 13328 ;;		_USBDeviceInit
 13329 ;;		_USBStdSetCfgHandler
 13330 ;; This function uses a non-reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text63
 13334  00853E                     __ptext63:
 13335                           	opt stack 0
 13336  00853E                     _memset:
 13337                           	opt stack 28
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;incstack = 0
 13341  00853E  C001  F007         	movff	memset@p1,memset@p
 13342  008542  C002  F008         	movff	memset@p1+1,memset@p+1
 13343  008546  D008               	goto	l3613
 13344  008548                     l11223:
 13345  008548  C007  FFD9         	movff	memset@p,fsr2l
 13346  00854C  C008  FFDA         	movff	memset@p+1,fsr2h
 13347  008550  C003  FFDF         	movff	memset@c,indf2
 13348  008554  4A07               	infsnz	memset@p,f,c
 13349  008556  2A08               	incf	memset@p+1,f,c
 13350  008558                     l3613:
 13351  008558  0605               	decf	memset@n,f,c
 13352  00855A  A0D8               	btfss	status,0,c
 13353  00855C  0606               	decf	memset@n+1,f,c
 13354  00855E  2805               	incf	memset@n,w,c
 13355  008560  E1F3               	bnz	l11223
 13356  008562  2806               	incf	memset@n+1,w,c
 13357  008564  B4D8               	btfsc	status,2,c
 13358  008566  0012               	return	
 13359  008568  D7EF               	goto	l3614
 13360  00856A                     __end_of_memset:
 13361                           	opt stack 0
 13362                           tblptru	equ	0xFF8
 13363                           tblptrh	equ	0xFF7
 13364                           tblptrl	equ	0xFF6
 13365                           tablat	equ	0xFF5
 13366                           prodh	equ	0xFF4
 13367                           prodl	equ	0xFF3
 13368                           intcon	equ	0xFF2
 13369                           intcon2	equ	0xFF1
 13370                           intcon3	equ	0xFF0
 13371                           postinc0	equ	0xFEE
 13372                           wreg	equ	0xFE8
 13373                           indf1	equ	0xFE7
 13374                           postdec1	equ	0xFE5
 13375                           plusw1	equ	0xFE3
 13376                           fsr1h	equ	0xFE2
 13377                           fsr1l	equ	0xFE1
 13378                           indf2	equ	0xFDF
 13379                           postinc2	equ	0xFDE
 13380                           postdec2	equ	0xFDD
 13381                           plusw2	equ	0xFDB
 13382                           fsr2h	equ	0xFDA
 13383                           fsr2l	equ	0xFD9
 13384                           status	equ	0xFD8
 13385                           
 13386 ;; *************** function _USBStdGetStatusHandler *****************
 13387 ;; Defined at:
 13388 ;;		line 2131 in file "usb_device.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;		None
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;  p               2    1[COMRAM] PTR struct __BDT
 13393 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      void 
 13396 ;; Registers used:
 13397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13407 ;;Total ram usage:        3 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; This function calls:
 13410 ;;		Nothing
 13411 ;; This function is called by:
 13412 ;;		_USBCheckStdRequest
 13413 ;; This function uses a non-reentrant model
 13414 ;;
 13415                           
 13416                           	psect	text64
 13417  006260                     __ptext64:
 13418                           	opt stack 0
 13419  006260                     _USBStdGetStatusHandler:
 13420                           	opt stack 26
 13421                           
 13422                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13423                           
 13424                           ;incstack = 0
 13425  006260  0E00               	movlw	0
 13426  006262  010D               	movlb	13	; () banked
 13427  006264  6F38               	movwf	56,b	;volatile
 13428                           
 13429                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13430  006266  0E00               	movlw	0
 13431  006268  6F39               	movwf	57,b	;volatile
 13432                           
 13433                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13434  00626A  D039               	goto	l281
 13435  00626C                     l282:
 13436                           
 13437                           ; BSR set to: 13
 13438                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13439  00626C  0100               	movlb	0	; () banked
 13440  00626E  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13441                           
 13442                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13443                           
 13444                           ; BSR set to: 13
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13448                           
 13449                           ;usb_device.c: 2144: if(0 == 1)
 13450  006270  0100               	movlb	0	; () banked
 13451  006272  05F5               	decf	_RemoteWakeup& (0+255),w,b
 13452  006274  A4D8               	btfss	status,2,c
 13453  006276  D03E               	goto	l285
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13457  006278  010D               	movlb	13	; () banked
 13458  00627A  8338               	bsf	56,1,b	;volatile
 13459                           
 13460                           ; BSR set to: 13
 13461                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13462  00627C  D03B               	goto	l285
 13463  00627E                     l286:
 13464                           
 13465                           ; BSR set to: 13
 13466                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13467  00627E  0100               	movlb	0	; () banked
 13468  006280  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13469                           
 13470                           ;usb_device.c: 2156: break;
 13471  006282  D038               	goto	l285
 13472  006284                     l287:
 13473                           
 13474                           ; BSR set to: 13
 13475                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13476  006284  0100               	movlb	0	; () banked
 13477  006286  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13478                           
 13479                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13480  006288  010D               	movlb	13	; () banked
 13481  00628A  BF34               	btfsc	52,7,b	;volatile
 13482  00628C  D00A               	goto	l288
 13483                           
 13484                           ; BSR set to: 13
 13485                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13486  00628E  5134               	movf	52,w,b	;volatile
 13487  006290  0B0F               	andlw	15
 13488  006292  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13489  006294  5001               	movf	??_USBStdGetStatusHandler,w,c
 13490  006296  0D02               	mullw	2
 13491  006298  0E40               	movlw	low _pBDTEntryOut
 13492  00629A  24F3               	addwf	prodl,w,c
 13493  00629C  6ED9               	movwf	fsr2l,c
 13494  00629E  0E01               	movlw	high _pBDTEntryOut
 13495  0062A0  D009               	goto	L6
 13496  0062A2                     l288:
 13497                           
 13498                           ; BSR set to: 13
 13499                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13500                           
 13501                           ; BSR set to: 13
 13502  0062A2  5134               	movf	52,w,b	;volatile
 13503  0062A4  0B0F               	andlw	15
 13504  0062A6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13505  0062A8  5001               	movf	??_USBStdGetStatusHandler,w,c
 13506  0062AA  0D02               	mullw	2
 13507  0062AC  0ED1               	movlw	low _pBDTEntryIn
 13508  0062AE  24F3               	addwf	prodl,w,c
 13509  0062B0  6ED9               	movwf	fsr2l,c
 13510  0062B2  0E00               	movlw	high _pBDTEntryIn
 13511  0062B4                     L6:
 13512  0062B4  20F4               	addwfc	prodh,w,c
 13513  0062B6  6EDA               	movwf	fsr2h,c
 13514  0062B8  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13515  0062BC  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13516                           
 13517                           ; BSR set to: 13
 13518                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13519                           
 13520                           ; BSR set to: 13
 13521  0062C0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13522  0062C4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13523  0062C8  AEDF               	btfss	indf2,7,c
 13524  0062CA  D014               	goto	l285
 13525                           
 13526                           ; BSR set to: 13
 13527  0062CC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13528  0062D0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13529  0062D4  A4DF               	btfss	indf2,2,c
 13530  0062D6  D00E               	goto	l285
 13531                           
 13532                           ; BSR set to: 13
 13533                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13534  0062D8  0E01               	movlw	1
 13535  0062DA  6F38               	movwf	56,b	;volatile
 13536                           
 13537                           ; BSR set to: 13
 13538                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13539                           
 13540                           ; BSR set to: 13
 13541                           ;usb_device.c: 2176: break;
 13542  0062DC  D00B               	goto	l285
 13543  0062DE                     l281:
 13544                           
 13545                           ; BSR set to: 13
 13546                           
 13547                           ; BSR set to: 13
 13548  0062DE  5130               	movf	48,w,b	;volatile
 13549  0062E0  0B1F               	andlw	31
 13550                           
 13551                           ; Switch size 1, requested type "space"
 13552                           ; Number of cases is 3, Range of values is 0 to 2
 13553                           ; switch strategies available:
 13554                           ; Name         Instructions Cycles
 13555                           ; simple_byte           10     6 (average)
 13556                           ;	Chosen strategy is simple_byte
 13557  0062E2  0A00               	xorlw	0	; case 0
 13558  0062E4  B4D8               	btfsc	status,2,c
 13559  0062E6  D7C2               	goto	l282
 13560  0062E8  0A01               	xorlw	1	; case 1
 13561  0062EA  B4D8               	btfsc	status,2,c
 13562  0062EC  D7C8               	goto	l286
 13563  0062EE  0A03               	xorlw	3	; case 2
 13564  0062F0  B4D8               	btfsc	status,2,c
 13565  0062F2  D7C8               	goto	l287
 13566  0062F4                     l285:
 13567                           
 13568                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 13569  0062F4  0100               	movlb	0	; () banked
 13570  0062F6  AFCE               	btfss	(_inPipes+3)& (0+255),7,b
 13571  0062F8  0012               	return	
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 13575  0062FA  0E38               	movlw	56
 13576  0062FC  6FCB               	movwf	_inPipes& (0+255),b
 13577  0062FE  0E0D               	movlw	13
 13578  006300  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13582  006302  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 13586  006304  0E02               	movlw	2
 13587  006306  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13588  006308  0012               	return	
 13589  00630A                     __end_of_USBStdGetStatusHandler:
 13590                           	opt stack 0
 13591                           tblptru	equ	0xFF8
 13592                           tblptrh	equ	0xFF7
 13593                           tblptrl	equ	0xFF6
 13594                           tablat	equ	0xFF5
 13595                           prodh	equ	0xFF4
 13596                           prodl	equ	0xFF3
 13597                           intcon	equ	0xFF2
 13598                           intcon2	equ	0xFF1
 13599                           intcon3	equ	0xFF0
 13600                           postinc0	equ	0xFEE
 13601                           wreg	equ	0xFE8
 13602                           indf1	equ	0xFE7
 13603                           postdec1	equ	0xFE5
 13604                           plusw1	equ	0xFE3
 13605                           fsr1h	equ	0xFE2
 13606                           fsr1l	equ	0xFE1
 13607                           indf2	equ	0xFDF
 13608                           postinc2	equ	0xFDE
 13609                           postdec2	equ	0xFDD
 13610                           plusw2	equ	0xFDB
 13611                           fsr2h	equ	0xFDA
 13612                           fsr2l	equ	0xFD9
 13613                           status	equ	0xFD8
 13614                           
 13615 ;; *************** function _USBStdGetDscHandler *****************
 13616 ;; Defined at:
 13617 ;;		line 2045 in file "usb_device.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;		None
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;		None
 13622 ;; Return value:  Size  Location     Type
 13623 ;;                  1    wreg      void 
 13624 ;; Registers used:
 13625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13626 ;; Tracked objects:
 13627 ;;		On entry : 0/0
 13628 ;;		On exit  : 0/0
 13629 ;;		Unchanged: 0/0
 13630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13635 ;;Total ram usage:        2 bytes
 13636 ;; Hardware stack levels used:    1
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_USBCheckStdRequest
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text65
 13645  0040E8                     __ptext65:
 13646                           	opt stack 0
 13647  0040E8                     _USBStdGetDscHandler:
 13648                           	opt stack 26
 13649                           
 13650                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;incstack = 0
 13654  0040E8  0E80               	movlw	128
 13655  0040EA  010D               	movlb	13	; () banked
 13656  0040EC  1930               	xorwf	48,w,b	;volatile
 13657  0040EE  A4D8               	btfss	status,2,c
 13658  0040F0  0012               	return	
 13659                           
 13660                           ; BSR set to: 13
 13661                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13662  0040F2  0EC0               	movlw	192
 13663  0040F4  0100               	movlb	0	; () banked
 13664  0040F6  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13665                           
 13666                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 13667  0040F8  D088               	goto	l268
 13668  0040FA                     
 13669                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13670                           
 13671                           ; BSR set to: 0
 13672  0040FA  0EA5               	movlw	low _device_dsc
 13673  0040FC  0100               	movlb	0	; () banked
 13674  0040FE  6FCB               	movwf	_inPipes& (0+255),b
 13675  004100  0E8F               	movlw	high _device_dsc
 13676  004102  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 13680  004104  0E00               	movlw	0
 13681  004106  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13682  004108  0E12               	movlw	18
 13683  00410A  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13684                           
 13685                           ;usb_device.c: 2060: break;
 13686  00410C  0012               	return	
 13687  00410E                     
 13688                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 13689                           
 13690                           ; BSR set to: 0
 13691  00410E  010D               	movlb	13	; () banked
 13692  004110  5132               	movf	50,w,b	;volatile
 13693  004112  A4D8               	btfss	status,2,c
 13694  004114  D043               	goto	l272
 13695                           
 13696                           ; BSR set to: 13
 13697                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 13698  004116  5132               	movf	50,w,b	;volatile
 13699  004118  0D02               	mullw	2
 13700  00411A  0EA5               	movlw	low _USB_CD_Ptr
 13701  00411C  24F3               	addwf	prodl,w,c
 13702  00411E  6EF6               	movwf	tblptrl,c
 13703  004120  0E8E               	movlw	high _USB_CD_Ptr
 13704  004122  20F4               	addwfc	prodh,w,c
 13705  004124  6EF7               	movwf	tblptrh,c
 13706  004126                     	if	1	;There are 3 active tblptr bytes
 13707  004126  6AF8               	clrf	tblptru,c
 13708  004128  0E00               	movlw	low (__mediumconst shr (0+16))
 13709  00412A  22F8               	addwfc	tblptru,f,c
 13710  00412C                     	endif
 13711  00412C  0009               	tblrd		*+
 13712  00412E  CFF5 F0CB          	movff	tablat,_inPipes
 13713  004132  000A               	tblrd		*-
 13714  004134  CFF5 F0CC          	movff	tablat,_inPipes+1
 13715                           
 13716                           ; BSR set to: 13
 13717                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13718  004138  0E02               	movlw	2
 13719  00413A  0100               	movlb	0	; () banked
 13720  00413C  25CB               	addwf	_inPipes& (0+255),w,b
 13721  00413E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13722  004140  0E00               	movlw	0
 13723  004142  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13724  004144  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13725  004146  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13726  00414A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13727  00414E  6AF8               	clrf	tblptru,c
 13728  004150  0E0E               	movlw	(high __ramtop+-1)
 13729  004152  64F7               	cpfsgt	tblptrh,c
 13730  004154  D003               	bra	u9397
 13731  004156  0008               	tblrd		*
 13732  004158  50F5               	movf	tablat,w,c
 13733  00415A  D005               	bra	u9390
 13734  00415C                     u9397:
 13735  00415C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13736  004160  CFF7 FFEA          	movff	tblptrh,fsr0h
 13737  004164  50EF               	movf	indf0,w,c
 13738  004166                     u9390:
 13739  004166  0100               	movlb	0	; () banked
 13740  004168  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13744  00416A  0E03               	movlw	3
 13745  00416C  25CB               	addwf	_inPipes& (0+255),w,b
 13746  00416E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13747  004170  0E00               	movlw	0
 13748  004172  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13749  004174  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13750  004176  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13751  00417A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13752  00417E  6AF8               	clrf	tblptru,c
 13753  004180  0E0E               	movlw	(high __ramtop+-1)
 13754  004182  64F7               	cpfsgt	tblptrh,c
 13755  004184  D003               	bra	u9407
 13756  004186  0008               	tblrd		*
 13757  004188  50F5               	movf	tablat,w,c
 13758  00418A  D005               	bra	u9400
 13759  00418C                     u9407:
 13760  00418C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13761  004190  CFF7 FFEA          	movff	tblptrh,fsr0h
 13762  004194  50EF               	movf	indf0,w,c
 13763  004196                     u9400:
 13764  004196  0100               	movlb	0	; () banked
 13765  004198  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13766                           
 13767                           ;usb_device.c: 2078: }
 13768  00419A  0012               	return	
 13769  00419C                     l272:
 13770                           
 13771                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 13772                           
 13773                           ; BSR set to: 0
 13774  00419C  0E00               	movlw	0
 13775  00419E  0100               	movlb	0	; () banked
 13776  0041A0  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 13780  0041A2  0012               	return	
 13781  0041A4                     
 13782                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 13783                           
 13784                           ; BSR set to: 0
 13785  0041A4  0E04               	movlw	4
 13786  0041A6  010D               	movlb	13	; () banked
 13787  0041A8  6132               	cpfslt	50,b	;volatile
 13788  0041AA  D027               	goto	l275
 13789                           
 13790                           ; BSR set to: 13
 13791                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 13792  0041AC  5132               	movf	50,w,b	;volatile
 13793  0041AE  0D02               	mullw	2
 13794  0041B0  0E7B               	movlw	low _USB_SD_Ptr
 13795  0041B2  24F3               	addwf	prodl,w,c
 13796  0041B4  6EF6               	movwf	tblptrl,c
 13797  0041B6  0E8E               	movlw	high _USB_SD_Ptr
 13798  0041B8  20F4               	addwfc	prodh,w,c
 13799  0041BA  6EF7               	movwf	tblptrh,c
 13800  0041BC                     	if	1	;There are 3 active tblptr bytes
 13801  0041BC  6AF8               	clrf	tblptru,c
 13802  0041BE  0E00               	movlw	low (__mediumconst shr (0+16))
 13803  0041C0  22F8               	addwfc	tblptru,f,c
 13804  0041C2                     	endif
 13805  0041C2  0009               	tblrd		*+
 13806  0041C4  CFF5 F0CB          	movff	tablat,_inPipes
 13807  0041C8  000A               	tblrd		*-
 13808  0041CA  CFF5 F0CC          	movff	tablat,_inPipes+1
 13809                           
 13810                           ; BSR set to: 13
 13811                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13812  0041CE  C0CB  FFF6         	movff	_inPipes,tblptrl
 13813  0041D2  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 13814  0041D6  6AF8               	clrf	tblptru,c
 13815  0041D8  0E0E               	movlw	(high __ramtop+-1)
 13816  0041DA  64F7               	cpfsgt	tblptrh,c
 13817  0041DC  D003               	bra	u9427
 13818  0041DE  0008               	tblrd		*
 13819  0041E0  50F5               	movf	tablat,w,c
 13820  0041E2  D005               	bra	u9420
 13821  0041E4                     u9427:
 13822  0041E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13823  0041E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13824  0041EC  50EF               	movf	indf0,w,c
 13825  0041EE                     u9420:
 13826  0041EE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13827  0041F0  5001               	movf	??_USBStdGetDscHandler,w,c
 13828  0041F2  0100               	movlb	0	; () banked
 13829  0041F4  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13830  0041F6  6BD0               	clrf	(_inPipes+5)& (0+255),b
 13831                           
 13832                           ;usb_device.c: 2094: }
 13833  0041F8  0012               	return	
 13834  0041FA                     l275:
 13835                           
 13836                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 13837                           
 13838                           ; BSR set to: 0
 13839  0041FA  0E00               	movlw	0
 13840  0041FC  0100               	movlb	0	; () banked
 13841  0041FE  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 13845  004200  0012               	return	
 13846  004202                     
 13847                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 13848                           
 13849                           ; BSR set to: 0
 13850  004202  0E00               	movlw	0
 13851  004204  0100               	movlb	0	; () banked
 13852  004206  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;usb_device.c: 2112: }
 13856                           
 13857                           ;usb_device.c: 2111: break;
 13858  004208  0012               	return	
 13859  00420A                     l268:
 13860                           
 13861                           ; BSR set to: 0
 13862                           
 13863                           ; BSR set to: 0
 13864  00420A  010D               	movlb	13	; () banked
 13865  00420C  5133               	movf	51,w,b	;volatile
 13866                           
 13867                           ; Switch size 1, requested type "space"
 13868                           ; Number of cases is 3, Range of values is 1 to 3
 13869                           ; switch strategies available:
 13870                           ; Name         Instructions Cycles
 13871                           ; simple_byte           10     6 (average)
 13872                           ;	Chosen strategy is simple_byte
 13873  00420E  0A01               	xorlw	1	; case 1
 13874  004210  B4D8               	btfsc	status,2,c
 13875  004212  D773               	goto	l269
 13876  004214  0A03               	xorlw	3	; case 2
 13877  004216  B4D8               	btfsc	status,2,c
 13878  004218  D77A               	goto	l271
 13879  00421A  0A01               	xorlw	1	; case 3
 13880  00421C  B4D8               	btfsc	status,2,c
 13881  00421E  D7C2               	goto	l274
 13882  004220  D7F0               	goto	l277
 13883  004222                     __end_of_USBStdGetDscHandler:
 13884                           	opt stack 0
 13885                           tblptru	equ	0xFF8
 13886                           tblptrh	equ	0xFF7
 13887                           tblptrl	equ	0xFF6
 13888                           tablat	equ	0xFF5
 13889                           prodh	equ	0xFF4
 13890                           prodl	equ	0xFF3
 13891                           intcon	equ	0xFF2
 13892                           intcon2	equ	0xFF1
 13893                           intcon3	equ	0xFF0
 13894                           indf0	equ	0xFEF
 13895                           postinc0	equ	0xFEE
 13896                           fsr0h	equ	0xFEA
 13897                           fsr0l	equ	0xFE9
 13898                           wreg	equ	0xFE8
 13899                           indf1	equ	0xFE7
 13900                           postdec1	equ	0xFE5
 13901                           plusw1	equ	0xFE3
 13902                           fsr1h	equ	0xFE2
 13903                           fsr1l	equ	0xFE1
 13904                           indf2	equ	0xFDF
 13905                           postinc2	equ	0xFDE
 13906                           postdec2	equ	0xFDD
 13907                           plusw2	equ	0xFDB
 13908                           fsr2h	equ	0xFDA
 13909                           fsr2l	equ	0xFD9
 13910                           status	equ	0xFD8
 13911                           
 13912 ;; *************** function _USBStdFeatureReqHandler *****************
 13913 ;; Defined at:
 13914 ;;		line 2756 in file "usb_device.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;		None
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;  p               2   27[COMRAM] PTR struct __BDT
 13919 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13920 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 13921 ;;		 -> UEP0(1), 
 13922 ;;  current_ep_d    1   26[COMRAM] struct .
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  1    wreg      void 
 13925 ;; Registers used:
 13926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13927 ;; Tracked objects:
 13928 ;;		On entry : 0/0
 13929 ;;		On exit  : 0/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13933 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13935 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13936 ;;Total ram usage:        6 bytes
 13937 ;; Hardware stack levels used:    1
 13938 ;; Hardware stack levels required when called:    4
 13939 ;; This function calls:
 13940 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13941 ;; This function is called by:
 13942 ;;		_USBCheckStdRequest
 13943 ;; This function uses a non-reentrant model
 13944 ;;
 13945                           
 13946                           	psect	text66
 13947  001B1E                     __ptext66:
 13948                           	opt stack 0
 13949  001B1E                     _USBStdFeatureReqHandler:
 13950                           	opt stack 22
 13951                           
 13952                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 13953                           
 13954                           ;incstack = 0
 13955  001B1E  010D               	movlb	13	; () banked
 13956  001B20  0532               	decf	50,w,b	;volatile
 13957  001B22  A4D8               	btfss	status,2,c
 13958  001B24  D011               	goto	l361
 13959                           
 13960                           ; BSR set to: 13
 13961  001B26  5130               	movf	48,w,b	;volatile
 13962  001B28  0B1F               	andlw	31
 13963  001B2A  0900               	iorlw	0
 13964  001B2C  A4D8               	btfss	status,2,c
 13965  001B2E  D00C               	goto	l361
 13966                           
 13967                           ; BSR set to: 13
 13968                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 13969  001B30  0100               	movlb	0	; () banked
 13970  001B32  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 13974  001B34  0E03               	movlw	3
 13975  001B36  010D               	movlb	13	; () banked
 13976  001B38  1931               	xorwf	49,w,b	;volatile
 13977  001B3A  A4D8               	btfss	status,2,c
 13978  001B3C  D002               	goto	l360
 13979                           
 13980                           ; BSR set to: 13
 13981                           ;usb_device.c: 2806: RemoteWakeup = 1;
 13982  001B3E  0E01               	movlw	1
 13983  001B40  D001               	goto	L7
 13984  001B42                     l360:
 13985                           
 13986                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 13987                           
 13988                           ; BSR set to: 0
 13989  001B42  0E00               	movlw	0
 13990  001B44                     L7:
 13991  001B44  0100               	movlb	0	; () banked
 13992  001B46  6FF5               	movwf	_RemoteWakeup& (0+255),b
 13993  001B48                     l361:
 13994                           
 13995                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 13996                           
 13997                           ; BSR set to: 0
 13998  001B48  010D               	movlb	13	; () banked
 13999  001B4A  5132               	movf	50,w,b	;volatile
 14000  001B4C  A4D8               	btfss	status,2,c
 14001  001B4E  0012               	return	
 14002                           
 14003                           ; BSR set to: 13
 14004  001B50  5130               	movf	48,w,b	;volatile
 14005  001B52  0B1F               	andlw	31
 14006  001B54  0A02               	xorlw	2
 14007  001B56  A4D8               	btfss	status,2,c
 14008  001B58  0012               	return	
 14009                           
 14010                           ; BSR set to: 13
 14011  001B5A  5134               	movf	52,w,b	;volatile
 14012  001B5C  0B0F               	andlw	15
 14013  001B5E  0900               	iorlw	0
 14014  001B60  B4D8               	btfsc	status,2,c
 14015  001B62  0012               	return	
 14016                           
 14017                           ; BSR set to: 13
 14018  001B64  5134               	movf	52,w,b	;volatile
 14019  001B66  0B0F               	andlw	15
 14020  001B68  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14021  001B6A  0E03               	movlw	3
 14022  001B6C  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14023  001B6E  0012               	return	
 14024                           
 14025                           ; BSR set to: 13
 14026  001B70  0E20               	movlw	32
 14027  001B72  0100               	movlb	0	; () banked
 14028  001B74  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 14029  001B76  A4D8               	btfss	status,2,c
 14030  001B78  0012               	return	
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14034  001B7A  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14035                           
 14036                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14037  001B7C  010D               	movlb	13	; () banked
 14038  001B7E  BF34               	btfsc	52,7,b	;volatile
 14039  001B80  D019               	goto	l363
 14040                           
 14041                           ; BSR set to: 13
 14042                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14043  001B82  5134               	movf	52,w,b	;volatile
 14044  001B84  0B0F               	andlw	15
 14045  001B86  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14046  001B88  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14047  001B8A  0D02               	mullw	2
 14048  001B8C  0E40               	movlw	low _pBDTEntryOut
 14049  001B8E  24F3               	addwf	prodl,w,c
 14050  001B90  6ED9               	movwf	fsr2l,c
 14051  001B92  0E01               	movlw	high _pBDTEntryOut
 14052  001B94  20F4               	addwfc	prodh,w,c
 14053  001B96  6EDA               	movwf	fsr2h,c
 14054  001B98  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14055  001B9C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14056                           
 14057                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14058  001BA0  5134               	movf	52,w,b	;volatile
 14059  001BA2  0B0F               	andlw	15
 14060  001BA4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14061  001BA6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14062  001BA8  0D01               	mullw	1
 14063  001BAA  0E6C               	movlw	low _ep_data_out
 14064  001BAC  24F3               	addwf	prodl,w,c
 14065  001BAE  6ED9               	movwf	fsr2l,c
 14066  001BB0  0E01               	movlw	high _ep_data_out
 14067  001BB2  D018               	goto	L8
 14068  001BB4                     l363:
 14069                           
 14070                           ; BSR set to: 13
 14071                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14072                           
 14073                           ; BSR set to: 13
 14074  001BB4  5134               	movf	52,w,b	;volatile
 14075  001BB6  0B0F               	andlw	15
 14076  001BB8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14077  001BBA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14078  001BBC  0D02               	mullw	2
 14079  001BBE  0ED1               	movlw	low _pBDTEntryIn
 14080  001BC0  24F3               	addwf	prodl,w,c
 14081  001BC2  6ED9               	movwf	fsr2l,c
 14082  001BC4  0E00               	movlw	high _pBDTEntryIn
 14083  001BC6  20F4               	addwfc	prodh,w,c
 14084  001BC8  6EDA               	movwf	fsr2h,c
 14085  001BCA  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14086  001BCE  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14087                           
 14088                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14089  001BD2  5134               	movf	52,w,b	;volatile
 14090  001BD4  0B0F               	andlw	15
 14091  001BD6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14092  001BD8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14093  001BDA  0D01               	mullw	1
 14094  001BDC  0E6F               	movlw	low _ep_data_in
 14095  001BDE  24F3               	addwf	prodl,w,c
 14096  001BE0  6ED9               	movwf	fsr2l,c
 14097  001BE2  0E01               	movlw	high _ep_data_in
 14098  001BE4                     L8:
 14099  001BE4  20F4               	addwfc	prodh,w,c
 14100  001BE6  6EDA               	movwf	fsr2h,c
 14101  001BE8  50DF               	movf	indf2,w,c
 14102  001BEA  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14103                           
 14104                           ; BSR set to: 13
 14105                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14106                           
 14107                           ; BSR set to: 13
 14108  001BEC  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14109  001BEE  D006               	goto	l365
 14110                           
 14111                           ; BSR set to: 13
 14112                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14113  001BF0  0EFB               	movlw	251
 14114  001BF2  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14115  001BF4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14116  001BF6  0EFF               	movlw	255
 14117  001BF8  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14118  001BFA  D004               	goto	L9
 14119  001BFC                     l365:
 14120                           
 14121                           ; BSR set to: 13
 14122                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14123                           
 14124                           ; BSR set to: 13
 14125  001BFC  0E04               	movlw	4
 14126  001BFE  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14127  001C00  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14128  001C02  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14129  001C04                     L9:
 14130  001C04  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14131                           
 14132                           ; BSR set to: 13
 14133                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14134                           
 14135                           ; BSR set to: 13
 14136  001C06  BF34               	btfsc	52,7,b	;volatile
 14137  001C08  D00A               	goto	l367
 14138                           
 14139                           ; BSR set to: 13
 14140                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14141  001C0A  5134               	movf	52,w,b	;volatile
 14142  001C0C  0B0F               	andlw	15
 14143  001C0E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14144  001C10  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14145  001C12  0D02               	mullw	2
 14146  001C14  0E40               	movlw	low _pBDTEntryOut
 14147  001C16  24F3               	addwf	prodl,w,c
 14148  001C18  6ED9               	movwf	fsr2l,c
 14149  001C1A  0E01               	movlw	high _pBDTEntryOut
 14150  001C1C  D009               	goto	L10
 14151  001C1E                     l367:
 14152                           
 14153                           ; BSR set to: 13
 14154                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14155                           
 14156                           ; BSR set to: 13
 14157  001C1E  5134               	movf	52,w,b	;volatile
 14158  001C20  0B0F               	andlw	15
 14159  001C22  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14160  001C24  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14161  001C26  0D02               	mullw	2
 14162  001C28  0ED1               	movlw	low _pBDTEntryIn
 14163  001C2A  24F3               	addwf	prodl,w,c
 14164  001C2C  6ED9               	movwf	fsr2l,c
 14165  001C2E  0E00               	movlw	high _pBDTEntryIn
 14166  001C30                     L10:
 14167  001C30  20F4               	addwfc	prodh,w,c
 14168  001C32  6EDA               	movwf	fsr2h,c
 14169  001C34  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14170  001C38  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14171                           
 14172                           ; BSR set to: 13
 14173                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14174                           
 14175                           ; BSR set to: 13
 14176  001C3C  0E03               	movlw	3
 14177  001C3E  1931               	xorwf	49,w,b	;volatile
 14178  001C40  A4D8               	btfss	status,2,c
 14179  001C42  D02D               	goto	l369
 14180                           
 14181                           ; BSR set to: 13
 14182                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14183  001C44  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14184  001C48  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14185  001C4C  AEDF               	btfss	indf2,7,c
 14186  001C4E  D01A               	goto	l372
 14187                           
 14188                           ; BSR set to: 13
 14189                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14190  001C50  BF34               	btfsc	52,7,b	;volatile
 14191  001C52  D00A               	goto	l371
 14192                           
 14193                           ; BSR set to: 13
 14194                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14195  001C54  5134               	movf	52,w,b	;volatile
 14196  001C56  0B0F               	andlw	15
 14197  001C58  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14198  001C5A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14199  001C5C  0D01               	mullw	1
 14200  001C5E  0E6C               	movlw	low _ep_data_out
 14201  001C60  24F3               	addwf	prodl,w,c
 14202  001C62  6ED9               	movwf	fsr2l,c
 14203  001C64  0E01               	movlw	high _ep_data_out
 14204  001C66  D00A               	goto	L11
 14205  001C68                     l371:
 14206                           
 14207                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14208                           
 14209                           ; BSR set to: 1
 14210  001C68  010D               	movlb	13	; () banked
 14211  001C6A  5134               	movf	52,w,b	;volatile
 14212  001C6C  0B0F               	andlw	15
 14213  001C6E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14214  001C70  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14215  001C72  0D01               	mullw	1
 14216  001C74  0E6F               	movlw	low _ep_data_in
 14217  001C76  24F3               	addwf	prodl,w,c
 14218  001C78  6ED9               	movwf	fsr2l,c
 14219  001C7A  0E01               	movlw	high _ep_data_in
 14220  001C7C                     L11:
 14221  001C7C  20F4               	addwfc	prodh,w,c
 14222  001C7E  6EDA               	movwf	fsr2h,c
 14223  001C80  0101               	movlb	1	; () banked
 14224  001C82  82DF               	bsf	indf2,1,c
 14225  001C84                     l372:
 14226                           
 14227                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14228                           
 14229                           ; BSR set to: 1
 14230                           
 14231                           ; BSR set to: 1
 14232  001C84  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14233  001C88  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14234  001C8C  0E00               	movlw	0
 14235  001C8E  84DB               	bsf	plusw2,2,c
 14236                           
 14237                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14238  001C90  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14239  001C94  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14240  001C98  0E00               	movlw	0
 14241  001C9A  8EDB               	bsf	plusw2,7,c
 14242                           
 14243                           ;usb_device.c: 2878: }
 14244  001C9C  0012               	return	
 14245  001C9E                     l369:
 14246                           
 14247                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14248  001C9E  0E04               	movlw	4
 14249  001CA0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14250  001CA2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14251  001CA4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14252  001CA6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14253                           
 14254                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14255  001CA8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14256  001CAC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14257  001CB0  AEDF               	btfss	indf2,7,c
 14258  001CB2  D01B               	goto	l374
 14259                           
 14260                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14261  001CB4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14262  001CB8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14263  001CBC  0E7F               	movlw	127
 14264  001CBE  16DF               	andwf	indf2,f,c
 14265                           
 14266                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14267  001CC0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14268  001CC4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14269  001CC8  0E00               	movlw	0
 14270  001CCA  8CDB               	bsf	plusw2,6,c
 14271                           
 14272                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14273  001CCC  0E00               	movlw	0
 14274  001CCE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14275  001CD0  0E05               	movlw	5
 14276  001CD2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14277  001CD4  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14278  001CD8  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14279  001CDC  0E00               	movlw	0
 14280  001CDE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14281  001CE0  0E02               	movlw	2
 14282  001CE2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14283  001CE4  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14284                           
 14285                           ;usb_device.c: 2893: }
 14286  001CE8  D006               	goto	l375
 14287  001CEA                     l374:
 14288                           
 14289                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14290  001CEA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14291  001CEE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14292  001CF2  0E00               	movlw	0
 14293  001CF4  8CDB               	bsf	plusw2,6,c
 14294  001CF6                     l375:
 14295                           
 14296                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14297  001CF6  0E04               	movlw	4
 14298  001CF8  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14299  001CFA  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14300  001CFC  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14301  001CFE  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14302                           
 14303                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14304  001D00  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14305  001D02  D006               	goto	u9640
 14306  001D04  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14307  001D08  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14308  001D0C  AEDF               	btfss	indf2,7,c
 14309  001D0E  D030               	goto	l376
 14310  001D10                     u9640:
 14311                           
 14312                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14313  001D10  010D               	movlb	13	; () banked
 14314  001D12  BF34               	btfsc	52,7,b	;volatile
 14315  001D14  D00A               	goto	l379
 14316                           
 14317                           ; BSR set to: 13
 14318                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14319  001D16  5134               	movf	52,w,b	;volatile
 14320  001D18  0B0F               	andlw	15
 14321  001D1A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14322  001D1C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14323  001D1E  0D01               	mullw	1
 14324  001D20  0E6C               	movlw	low _ep_data_out
 14325  001D22  24F3               	addwf	prodl,w,c
 14326  001D24  6ED9               	movwf	fsr2l,c
 14327  001D26  0E01               	movlw	high _ep_data_out
 14328  001D28  D00A               	goto	L12
 14329  001D2A                     l379:
 14330                           
 14331                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14332                           
 14333                           ; BSR set to: 1
 14334  001D2A  010D               	movlb	13	; () banked
 14335  001D2C  5134               	movf	52,w,b	;volatile
 14336  001D2E  0B0F               	andlw	15
 14337  001D30  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14338  001D32  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14339  001D34  0D01               	mullw	1
 14340  001D36  0E6F               	movlw	low _ep_data_in
 14341  001D38  24F3               	addwf	prodl,w,c
 14342  001D3A  6ED9               	movwf	fsr2l,c
 14343  001D3C  0E01               	movlw	high _ep_data_in
 14344  001D3E                     L12:
 14345  001D3E  20F4               	addwfc	prodh,w,c
 14346  001D40  6EDA               	movwf	fsr2h,c
 14347  001D42  0101               	movlb	1	; () banked
 14348  001D44  92DF               	bcf	indf2,1,c
 14349                           
 14350                           ; BSR set to: 1
 14351                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14352                           
 14353                           ; BSR set to: 1
 14354  001D46  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14355  001D4A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14356  001D4E  0E3B               	movlw	59
 14357  001D50  16DF               	andwf	indf2,f,c
 14358                           
 14359                           ; BSR set to: 1
 14360                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14361  001D52  0E00               	movlw	0
 14362  001D54  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14363  001D56  0E05               	movlw	5
 14364  001D58  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14365  001D5A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14366  001D5E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14367  001D62  0E00               	movlw	0
 14368  001D64  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14369  001D66  0E02               	movlw	2
 14370  001D68  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14371  001D6A  ECF8  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14372                           
 14373                           ;usb_device.c: 2923: }
 14374  001D6E  D006               	goto	l381
 14375  001D70                     l376:
 14376                           
 14377                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14378  001D70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14379  001D74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14380  001D78  0E3B               	movlw	59
 14381  001D7A  16DF               	andwf	indf2,f,c
 14382  001D7C                     l381:
 14383                           
 14384                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14385  001D7C  010D               	movlb	13	; () banked
 14386  001D7E  5134               	movf	52,w,b	;volatile
 14387  001D80  0B0F               	andlw	15
 14388  001D82  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14389  001D84  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14390  001D86  0D01               	mullw	1
 14391  001D88  0E26               	movlw	38
 14392  001D8A  24F3               	addwf	prodl,w,c
 14393  001D8C  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14394  001D8E  0E0F               	movlw	15
 14395  001D90  20F4               	addwfc	prodh,w,c
 14396  001D92  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14397                           
 14398                           ; BSR set to: 13
 14399                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14400  001D94  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14401  001D98  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14402  001D9C  0EFE               	movlw	254
 14403  001D9E  16DF               	andwf	indf2,f,c
 14404                           
 14405                           ; BSR set to: 13
 14406  001DA0  0012               	return	
 14407  001DA2                     __end_of_USBStdFeatureReqHandler:
 14408                           	opt stack 0
 14409                           tblptru	equ	0xFF8
 14410                           tblptrh	equ	0xFF7
 14411                           tblptrl	equ	0xFF6
 14412                           tablat	equ	0xFF5
 14413                           prodh	equ	0xFF4
 14414                           prodl	equ	0xFF3
 14415                           intcon	equ	0xFF2
 14416                           intcon2	equ	0xFF1
 14417                           intcon3	equ	0xFF0
 14418                           indf0	equ	0xFEF
 14419                           postinc0	equ	0xFEE
 14420                           fsr0h	equ	0xFEA
 14421                           fsr0l	equ	0xFE9
 14422                           wreg	equ	0xFE8
 14423                           indf1	equ	0xFE7
 14424                           postdec1	equ	0xFE5
 14425                           plusw1	equ	0xFE3
 14426                           fsr1h	equ	0xFE2
 14427                           fsr1l	equ	0xFE1
 14428                           indf2	equ	0xFDF
 14429                           postinc2	equ	0xFDE
 14430                           postdec2	equ	0xFDD
 14431                           plusw2	equ	0xFDB
 14432                           fsr2h	equ	0xFDA
 14433                           fsr2l	equ	0xFD9
 14434                           status	equ	0xFD8
 14435                           
 14436 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14437 ;; Defined at:
 14438 ;;		line 54 in file "usb_events.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  event           2   15[COMRAM] enum E6832
 14441 ;;  pdata           2   17[COMRAM] PTR void 
 14442 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14443 ;;		 -> BDT(48), 
 14444 ;;  size            2   19[COMRAM] unsigned int 
 14445 ;; Auto vars:     Size  Location     Type
 14446 ;;		None
 14447 ;; Return value:  Size  Location     Type
 14448 ;;                  1    wreg      unsigned char 
 14449 ;; Registers used:
 14450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14451 ;; Tracked objects:
 14452 ;;		On entry : 0/0
 14453 ;;		On exit  : 0/0
 14454 ;;		Unchanged: 0/0
 14455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14456 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14459 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14460 ;;Total ram usage:        8 bytes
 14461 ;; Hardware stack levels used:    1
 14462 ;; Hardware stack levels required when called:    3
 14463 ;; This function calls:
 14464 ;;		_APP_DeviceCustomHIDInitialize
 14465 ;;		_APP_DeviceMSDInitialize
 14466 ;;		_MSDTransferTerminated
 14467 ;;		_SYSTEM_Initialize
 14468 ;;		_USBCheckHIDRequest
 14469 ;;		_USBCheckMSDRequest
 14470 ;; This function is called by:
 14471 ;;		_USBDeviceTasks
 14472 ;;		_USBStdSetCfgHandler
 14473 ;;		_USBSuspend
 14474 ;;		_USBWakeFromSuspend
 14475 ;;		_USBCtrlTrfSetupHandler
 14476 ;;		_USBCheckStdRequest
 14477 ;;		_USBStdFeatureReqHandler
 14478 ;; This function uses a non-reentrant model
 14479 ;;
 14480                           
 14481                           	psect	text67
 14482  006DF0                     __ptext67:
 14483                           	opt stack 0
 14484  006DF0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14485                           	opt stack 26
 14486                           
 14487                           ;usb_events.c: 56: switch((int)event)
 14488                           
 14489                           ;incstack = 0
 14490  006DF0  D019               	goto	l800
 14491  006DF2                     
 14492                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14493  006DF2  0E01               	movlw	1
 14494  006DF4  EC29  F03E         	call	_SYSTEM_Initialize
 14495                           
 14496                           ;usb_events.c: 79: break;
 14497  006DF8  0012               	return	
 14498  006DFA                     
 14499                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14500  006DFA  0E02               	movlw	2
 14501  006DFC  EC29  F03E         	call	_SYSTEM_Initialize
 14502                           
 14503                           ;usb_events.c: 90: break;
 14504  006E00  0012               	return	
 14505  006E02                     
 14506                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14507  006E02  EC93  F041         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14508                           
 14509                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14510  006E06  ECCC  F044         	call	_APP_DeviceMSDInitialize	;wreg free
 14511                           
 14512                           ;usb_events.c: 100: break;
 14513                           
 14514                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14515                           
 14516                           ;usb_events.c: 97: break;
 14517  006E0A  0012               	return	
 14518  006E0C                     
 14519                           ;usb_events.c: 105: USBCheckHIDRequest();
 14520  006E0C  EC22  F029         	call	_USBCheckHIDRequest	;wreg free
 14521                           
 14522                           ;usb_events.c: 108: USBCheckMSDRequest();
 14523  006E10  EC9F  F02E         	call	_USBCheckMSDRequest	;wreg free
 14524                           
 14525                           ;usb_events.c: 112: break;
 14526                           
 14527                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14528                           
 14529                           ;usb_events.c: 109: break;
 14530  006E14  0012               	return	
 14531  006E16                     
 14532                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14533  006E16  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14534  006E1A  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14535  006E1E  ECFC  F03C         	call	_MSDTransferTerminated	;wreg free
 14536                           
 14537                           ;usb_events.c: 129: }
 14538                           
 14539                           ;usb_events.c: 128: break;
 14540                           
 14541                           ;usb_events.c: 127: default:
 14542                           
 14543                           ;usb_events.c: 125: break;
 14544  006E22  0012               	return	
 14545  006E24                     l800:
 14546  006E24  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14547  006E28  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14548                           
 14549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14550                           ; Switch size 1, requested type "space"
 14551                           ; Number of cases is 2, Range of values is 0 to 127
 14552                           ; switch strategies available:
 14553                           ; Name         Instructions Cycles
 14554                           ; simple_byte            7     4 (average)
 14555                           ;	Chosen strategy is simple_byte
 14556  006E2C  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14557  006E2E  0A00               	xorlw	0	; case 0
 14558  006E30  B4D8               	btfsc	status,2,c
 14559  006E32  D004               	goto	l15865
 14560  006E34  0A7F               	xorlw	127	; case 127
 14561  006E36  A4D8               	btfss	status,2,c
 14562  006E38  0012               	return	
 14563  006E3A  D01A               	goto	l15867
 14564  006E3C                     l15865:
 14565                           
 14566                           ; Switch size 1, requested type "space"
 14567                           ; Number of cases is 8, Range of values is 1 to 117
 14568                           ; switch strategies available:
 14569                           ; Name         Instructions Cycles
 14570                           ; simple_byte           25    13 (average)
 14571                           ;	Chosen strategy is simple_byte
 14572  006E3C  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14573  006E3E  0A01               	xorlw	1	; case 1
 14574  006E40  B4D8               	btfsc	status,2,c
 14575  006E42  D7DF               	goto	l806
 14576  006E44  0A03               	xorlw	3	; case 2
 14577  006E46  B4D8               	btfsc	status,2,c
 14578  006E48  0012               	return	
 14579  006E4A  0A01               	xorlw	1	; case 3
 14580  006E4C  B4D8               	btfsc	status,2,c
 14581  006E4E  D7DE               	goto	l808
 14582  006E50  0A06               	xorlw	6	; case 5
 14583  006E52  B4D8               	btfsc	status,2,c
 14584  006E54  D7E0               	goto	l810
 14585  006E56  0A77               	xorlw	119	; case 114
 14586  006E58  B4D8               	btfsc	status,2,c
 14587  006E5A  0012               	return	
 14588  006E5C  0A01               	xorlw	1	; case 115
 14589  006E5E  B4D8               	btfsc	status,2,c
 14590  006E60  0012               	return	
 14591  006E62  0A07               	xorlw	7	; case 116
 14592  006E64  B4D8               	btfsc	status,2,c
 14593  006E66  D7C9               	goto	l805
 14594  006E68  0A01               	xorlw	1	; case 117
 14595  006E6A  A4D8               	btfss	status,2,c
 14596  006E6C  0012               	return	
 14597  006E6E  D7C1               	goto	l804
 14598  006E70                     l15867:
 14599                           
 14600                           ; Switch size 1, requested type "space"
 14601                           ; Number of cases is 1, Range of values is 255 to 255
 14602                           ; switch strategies available:
 14603                           ; Name         Instructions Cycles
 14604                           ; simple_byte            4     3 (average)
 14605                           ;	Chosen strategy is simple_byte
 14606  006E70  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14607  006E72  0AFF               	xorlw	255	; case 255
 14608  006E74  0012               	return	
 14609  006E76                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14610                           	opt stack 0
 14611                           tblptru	equ	0xFF8
 14612                           tblptrh	equ	0xFF7
 14613                           tblptrl	equ	0xFF6
 14614                           tablat	equ	0xFF5
 14615                           prodh	equ	0xFF4
 14616                           prodl	equ	0xFF3
 14617                           intcon	equ	0xFF2
 14618                           intcon2	equ	0xFF1
 14619                           intcon3	equ	0xFF0
 14620                           indf0	equ	0xFEF
 14621                           postinc0	equ	0xFEE
 14622                           fsr0h	equ	0xFEA
 14623                           fsr0l	equ	0xFE9
 14624                           wreg	equ	0xFE8
 14625                           indf1	equ	0xFE7
 14626                           postdec1	equ	0xFE5
 14627                           plusw1	equ	0xFE3
 14628                           fsr1h	equ	0xFE2
 14629                           fsr1l	equ	0xFE1
 14630                           indf2	equ	0xFDF
 14631                           postinc2	equ	0xFDE
 14632                           postdec2	equ	0xFDD
 14633                           plusw2	equ	0xFDB
 14634                           fsr2h	equ	0xFDA
 14635                           fsr2l	equ	0xFD9
 14636                           status	equ	0xFD8
 14637                           
 14638 ;; *************** function _USBCheckMSDRequest *****************
 14639 ;; Defined at:
 14640 ;;		line 218 in file "usb_device_msd.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;		None
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;		None
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14655 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14658 ;;Total ram usage:        4 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; Hardware stack levels required when called:    1
 14661 ;; This function calls:
 14662 ;;		_USBTransferOnePacket
 14663 ;; This function is called by:
 14664 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text68
 14669  005D3E                     __ptext68:
 14670                           	opt stack 0
 14671  005D3E                     _USBCheckMSDRequest:
 14672                           	opt stack 27
 14673                           
 14674                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 14675                           
 14676                           ;incstack = 0
 14677  005D3E  010D               	movlb	13	; () banked
 14678  005D40  5130               	movf	48,w,b	;volatile
 14679  005D42  0B1F               	andlw	31
 14680  005D44  06E8               	decf	wreg,f,c
 14681  005D46  A4D8               	btfss	status,2,c
 14682  005D48  0012               	return	
 14683                           
 14684                           ; BSR set to: 13
 14685                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 14686                           
 14687                           ; BSR set to: 13
 14688                           
 14689                           ; BSR set to: 13
 14690                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 14691  005D4A  5134               	movf	52,w,b	;volatile
 14692  005D4C  A4D8               	btfss	status,2,c
 14693  005D4E  0012               	return	
 14694  005D50  D04F               	goto	l529
 14695  005D52                     
 14696                           ; BSR set to: 13
 14697                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 14698                           
 14699                           ; BSR set to: 13
 14700  005D52  5132               	movf	50,w,b	;volatile
 14701  005D54  1133               	iorwf	51,w,b	;volatile
 14702  005D56  A4D8               	btfss	status,2,c
 14703  005D58  0012               	return	
 14704                           
 14705                           ; BSR set to: 13
 14706  005D5A  5136               	movf	54,w,b	;volatile
 14707  005D5C  1137               	iorwf	55,w,b	;volatile
 14708  005D5E  A4D8               	btfss	status,2,c
 14709  005D60  0012               	return	
 14710                           
 14711                           ; BSR set to: 13
 14712                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 14713                           
 14714                           ; BSR set to: 13
 14715                           
 14716                           ; BSR set to: 13
 14717                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 14718  005D62  0E00               	movlw	0
 14719  005D64  0100               	movlb	0	; () banked
 14720  005D66  6FED               	movwf	_MSD_State& (0+255),b
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 14724  005D68  69EC               	setf	_MSDCommandState& (0+255),b
 14725                           
 14726                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 14727  005D6A  0E00               	movlw	0
 14728  005D6C  6FEB               	movwf	_MSDReadState& (0+255),b
 14729                           
 14730                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 14731  005D6E  0E00               	movlw	0
 14732  005D70  6FEA               	movwf	_MSDWriteState& (0+255),b
 14733                           
 14734                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 14735  005D72  0E01               	movlw	1
 14736  005D74  0101               	movlb	1	; () banked
 14737  005D76  6F8E               	movwf	_MSDCBWValid& (0+255),b
 14738                           
 14739                           ; BSR set to: 1
 14740                           
 14741                           ; BSR set to: 1
 14742                           
 14743                           ; BSR set to: 1
 14744                           
 14745                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 14746  005D78  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 14747  005D7C  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 14748                           
 14749                           ; BSR set to: 1
 14750  005D80  500C               	movf	_USBCheckMSDRequest$2319,w,c
 14751  005D82  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 14752  005D84  B4D8               	btfsc	status,2,c
 14753  005D86  D00A               	goto	u7480
 14754                           
 14755                           ; BSR set to: 1
 14756                           
 14757                           ; BSR set to: 1
 14758                           
 14759                           ; BSR set to: 1
 14760                           
 14761                           ; BSR set to: 1
 14762  005D88  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 14763  005D8C  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 14764                           
 14765                           ; BSR set to: 1
 14766                           
 14767                           ; BSR set to: 1
 14768  005D90  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 14769  005D94  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 14770  005D98  BEDF               	btfsc	indf2,7,c
 14771  005D9A  D00F               	goto	l534
 14772  005D9C                     u7480:
 14773                           
 14774                           ; BSR set to: 1
 14775                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 14776                           
 14777                           ; BSR set to: 1
 14778  005D9C  0E00               	movlw	0
 14779  005D9E  6E01               	movwf	USBTransferOnePacket@dir,c
 14780  005DA0  0E40               	movlw	64
 14781  005DA2  6E02               	movwf	USBTransferOnePacket@data,c
 14782  005DA4  0E0D               	movlw	13
 14783  005DA6  6E03               	movwf	USBTransferOnePacket@data+1,c
 14784  005DA8  0E40               	movlw	64
 14785  005DAA  6E04               	movwf	USBTransferOnePacket@len,c
 14786  005DAC  0E02               	movlw	2
 14787  005DAE  ECD3  F025         	call	_USBTransferOnePacket
 14788  005DB2  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 14789  005DB6  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 14790  005DBA                     l534:
 14791                           
 14792                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 14793  005DBA  0E80               	movlw	128
 14794  005DBC  0100               	movlb	0	; () banked
 14795  005DBE  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14796                           
 14797                           ;usb_device_msd.c: 263: break;
 14798  005DC0  0012               	return	
 14799  005DC2                     
 14800                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 14801                           
 14802                           ; BSR set to: 0
 14803  005DC2  010D               	movlb	13	; () banked
 14804  005DC4  5132               	movf	50,w,b	;volatile
 14805  005DC6  1133               	iorwf	51,w,b	;volatile
 14806  005DC8  A4D8               	btfss	status,2,c
 14807  005DCA  0012               	return	
 14808                           
 14809                           ; BSR set to: 13
 14810  005DCC  0536               	decf	54,w,b	;volatile
 14811  005DCE  1137               	iorwf	55,w,b	;volatile
 14812  005DD0  A4D8               	btfss	status,2,c
 14813  005DD2  0012               	return	
 14814                           
 14815                           ; BSR set to: 13
 14816                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 14817                           
 14818                           ; BSR set to: 13
 14819                           
 14820                           ; BSR set to: 13
 14821                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 14822  005DD4  0E00               	movlw	0
 14823  005DD6  6F38               	movwf	56,b	;volatile
 14824                           
 14825                           ; BSR set to: 13
 14826                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14827  005DD8  0E38               	movlw	56
 14828  005DDA  0100               	movlb	0	; () banked
 14829  005DDC  6FCB               	movwf	_inPipes& (0+255),b
 14830  005DDE  0E0D               	movlw	13
 14831  005DE0  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14832                           
 14833                           ; BSR set to: 0
 14834  005DE2  0E00               	movlw	0
 14835  005DE4  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14836  005DE6  0E01               	movlw	1
 14837  005DE8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14838                           
 14839                           ; BSR set to: 0
 14840  005DEA  0EC1               	movlw	193
 14841  005DEC  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;usb_device_msd.c: 278: }
 14845                           
 14846                           ;usb_device_msd.c: 277: break;
 14847  005DEE  0012               	return	
 14848  005DF0                     l529:
 14849                           
 14850                           ; BSR set to: 0
 14851  005DF0  010D               	movlb	13	; () banked
 14852  005DF2  5131               	movf	49,w,b	;volatile
 14853                           
 14854                           ; Switch size 1, requested type "space"
 14855                           ; Number of cases is 2, Range of values is 254 to 255
 14856                           ; switch strategies available:
 14857                           ; Name         Instructions Cycles
 14858                           ; simple_byte            7     4 (average)
 14859                           ;	Chosen strategy is simple_byte
 14860  005DF4  0AFE               	xorlw	254	; case 254
 14861  005DF6  B4D8               	btfsc	status,2,c
 14862  005DF8  D7E4               	goto	l546
 14863  005DFA  0A01               	xorlw	1	; case 255
 14864  005DFC  A4D8               	btfss	status,2,c
 14865  005DFE  0012               	return	
 14866  005E00  D7A8               	goto	l530
 14867  005E02                     __end_of_USBCheckMSDRequest:
 14868                           	opt stack 0
 14869                           tblptru	equ	0xFF8
 14870                           tblptrh	equ	0xFF7
 14871                           tblptrl	equ	0xFF6
 14872                           tablat	equ	0xFF5
 14873                           prodh	equ	0xFF4
 14874                           prodl	equ	0xFF3
 14875                           intcon	equ	0xFF2
 14876                           intcon2	equ	0xFF1
 14877                           intcon3	equ	0xFF0
 14878                           indf0	equ	0xFEF
 14879                           postinc0	equ	0xFEE
 14880                           fsr0h	equ	0xFEA
 14881                           fsr0l	equ	0xFE9
 14882                           wreg	equ	0xFE8
 14883                           indf1	equ	0xFE7
 14884                           postdec1	equ	0xFE5
 14885                           plusw1	equ	0xFE3
 14886                           fsr1h	equ	0xFE2
 14887                           fsr1l	equ	0xFE1
 14888                           indf2	equ	0xFDF
 14889                           postinc2	equ	0xFDE
 14890                           postdec2	equ	0xFDD
 14891                           plusw2	equ	0xFDB
 14892                           fsr2h	equ	0xFDA
 14893                           fsr2l	equ	0xFD9
 14894                           status	equ	0xFD8
 14895                           
 14896 ;; *************** function _USBCheckHIDRequest *****************
 14897 ;; Defined at:
 14898 ;;		line 153 in file "usb_device_hid.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;		None
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;		None
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      void 
 14905 ;; Registers used:
 14906 ;;		wreg, status,2, status,0
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14916 ;;Total ram usage:        0 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; This function calls:
 14919 ;;		Nothing
 14920 ;; This function is called by:
 14921 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14922 ;; This function uses a non-reentrant model
 14923 ;;
 14924                           
 14925                           	psect	text69
 14926  005244                     __ptext69:
 14927                           	opt stack 0
 14928  005244                     _USBCheckHIDRequest:
 14929                           	opt stack 28
 14930                           
 14931                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 14932                           
 14933                           ;incstack = 0
 14934  005244  010D               	movlb	13	; () banked
 14935  005246  5130               	movf	48,w,b	;volatile
 14936  005248  0B1F               	andlw	31
 14937  00524A  06E8               	decf	wreg,f,c
 14938  00524C  A4D8               	btfss	status,2,c
 14939  00524E  0012               	return	
 14940                           
 14941                           ; BSR set to: 13
 14942                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 14943                           
 14944                           ; BSR set to: 13
 14945                           
 14946                           ; BSR set to: 13
 14947  005250  5134               	movf	52,w,b	;volatile
 14948  005252  A4D8               	btfss	status,2,c
 14949  005254  0012               	return	
 14950                           
 14951                           ; BSR set to: 13
 14952                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 14953                           
 14954                           ; BSR set to: 13
 14955                           
 14956                           ; BSR set to: 13
 14957  005256  0E06               	movlw	6
 14958  005258  1931               	xorwf	49,w,b	;volatile
 14959  00525A  B4D8               	btfsc	status,2,c
 14960  00525C  D01A               	goto	l411
 14961  00525E  D022               	goto	l414
 14962  005260                     
 14963                           ; BSR set to: 13
 14964                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 14965                           
 14966                           ; BSR set to: 13
 14967  005260  0100               	movlb	0	; () banked
 14968  005262  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 14969  005264  A4D8               	btfss	status,2,c
 14970  005266  D01E               	goto	l414
 14971                           
 14972                           ; BSR set to: 0
 14973                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 14974  005268  0EBA               	movlw	low (_configDescriptor1+18)
 14975  00526A  6FCB               	movwf	_inPipes& (0+255),b
 14976  00526C  0E8E               	movlw	high (_configDescriptor1+18)
 14977  00526E  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14978                           
 14979                           ; BSR set to: 0
 14980  005270  0E00               	movlw	0
 14981  005272  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14982  005274  0E09               	movlw	9
 14983  005276  D00B               	goto	L13
 14984  005278                     l10721:
 14985                           
 14986                           ; BSR set to: 0
 14987  005278  0EC0               	movlw	192
 14988  00527A  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14989                           
 14990                           ; BSR set to: 0
 14991                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 14992  00527C  D013               	goto	l414
 14993  00527E                     
 14994                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 14995                           
 14996                           ; BSR set to: 0
 14997  00527E  0E6E               	movlw	low _hid_rpt01
 14998  005280  0100               	movlb	0	; () banked
 14999  005282  6FCB               	movwf	_inPipes& (0+255),b
 15000  005284  0E8F               	movlw	high _hid_rpt01
 15001  005286  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15002                           
 15003                           ; BSR set to: 0
 15004  005288  0E00               	movlw	0
 15005  00528A  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15006  00528C  0E1D               	movlw	29
 15007  00528E                     L13:
 15008  00528E  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15009  005290  D7F3               	goto	l10721
 15010  005292                     l411:
 15011                           
 15012                           ; BSR set to: 0
 15013  005292  010D               	movlb	13	; () banked
 15014  005294  5133               	movf	51,w,b	;volatile
 15015                           
 15016                           ; Switch size 1, requested type "space"
 15017                           ; Number of cases is 3, Range of values is 33 to 35
 15018                           ; switch strategies available:
 15019                           ; Name         Instructions Cycles
 15020                           ; simple_byte           10     6 (average)
 15021                           ;	Chosen strategy is simple_byte
 15022  005296  0A21               	xorlw	33	; case 33
 15023  005298  B4D8               	btfsc	status,2,c
 15024  00529A  D7E2               	goto	l412
 15025  00529C  0A03               	xorlw	3	; case 34
 15026  00529E  B4D8               	btfsc	status,2,c
 15027  0052A0  D7EE               	goto	l415
 15028  0052A2  0A01               	xorlw	1	; case 35
 15029  0052A4                     l414:
 15030                           
 15031                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15032                           
 15033                           ; BSR set to: 13
 15034                           
 15035                           ; BSR set to: 13
 15036  0052A4  010D               	movlb	13	; () banked
 15037  0052A6  3930               	swapf	48,w,b	;volatile
 15038  0052A8  32E8               	rrcf	wreg,f,c
 15039  0052AA  0B03               	andlw	3
 15040  0052AC  06E8               	decf	wreg,f,c
 15041  0052AE  A4D8               	btfss	status,2,c
 15042  0052B0  0012               	return	
 15043  0052B2  D024               	goto	l418
 15044  0052B4                     
 15045                           ; BSR set to: 13
 15046                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15047                           
 15048                           ; BSR set to: 13
 15049  0052B4  0EB2               	movlw	low _idle_rate
 15050  0052B6  0100               	movlb	0	; () banked
 15051  0052B8  6FCB               	movwf	_inPipes& (0+255),b
 15052  0052BA  0E01               	movlw	high _idle_rate
 15053  0052BC  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15054                           
 15055                           ; BSR set to: 0
 15056  0052BE  0E00               	movlw	0
 15057  0052C0  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15058  0052C2  0E01               	movlw	1
 15059  0052C4  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15060                           
 15061                           ; BSR set to: 0
 15062  0052C6  0EC1               	movlw	193
 15063  0052C8  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15064                           
 15065                           ;usb_device_hid.c: 223: break;
 15066  0052CA  0012               	return	
 15067  0052CC                     
 15068                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15069                           
 15070                           ; BSR set to: 0
 15071  0052CC  0E80               	movlw	128
 15072  0052CE  0100               	movlb	0	; () banked
 15073  0052D0  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15077  0052D2  CD33 F1B2          	movff	3379,_idle_rate	;volatile
 15078                           
 15079                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15080  0052D6  0012               	return	
 15081  0052D8                     
 15082                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15083                           
 15084                           ; BSR set to: 0
 15085  0052D8  0EB1               	movlw	low _active_protocol
 15086  0052DA  0100               	movlb	0	; () banked
 15087  0052DC  6FCB               	movwf	_inPipes& (0+255),b
 15088  0052DE  0E01               	movlw	high _active_protocol
 15089  0052E0  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15090                           
 15091                           ; BSR set to: 0
 15092  0052E2  0E00               	movlw	0
 15093  0052E4  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15094  0052E6  0E01               	movlw	1
 15095  0052E8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15096                           
 15097                           ; BSR set to: 0
 15098  0052EA  0E81               	movlw	129
 15099  0052EC  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15100                           
 15101                           ;usb_device_hid.c: 234: break;
 15102  0052EE  0012               	return	
 15103  0052F0                     
 15104                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15105                           
 15106                           ; BSR set to: 0
 15107  0052F0  0E80               	movlw	128
 15108  0052F2  0100               	movlb	0	; () banked
 15109  0052F4  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15113  0052F6  CD32 F1B1          	movff	3378,_active_protocol	;volatile
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;usb_device_hid.c: 239: }
 15117                           
 15118                           ;usb_device_hid.c: 238: break;
 15119  0052FA  0012               	return	
 15120  0052FC                     l418:
 15121                           
 15122                           ; BSR set to: 0
 15123  0052FC  010D               	movlb	13	; () banked
 15124  0052FE  5131               	movf	49,w,b	;volatile
 15125                           
 15126                           ; Switch size 1, requested type "space"
 15127                           ; Number of cases is 6, Range of values is 1 to 11
 15128                           ; switch strategies available:
 15129                           ; Name         Instructions Cycles
 15130                           ; simple_byte           19    10 (average)
 15131                           ;	Chosen strategy is simple_byte
 15132  005300  0A01               	xorlw	1	; case 1
 15133  005302  B4D8               	btfsc	status,2,c
 15134  005304  0012               	return	
 15135  005306  0A03               	xorlw	3	; case 2
 15136  005308  B4D8               	btfsc	status,2,c
 15137  00530A  D7D4               	goto	l422
 15138  00530C  0A01               	xorlw	1	; case 3
 15139  00530E  B4D8               	btfsc	status,2,c
 15140  005310  D7E3               	goto	l424
 15141  005312  0A0A               	xorlw	10	; case 9
 15142  005314  B4D8               	btfsc	status,2,c
 15143  005316  0012               	return	
 15144  005318  0A03               	xorlw	3	; case 10
 15145  00531A  B4D8               	btfsc	status,2,c
 15146  00531C  D7D7               	goto	l423
 15147  00531E  0A01               	xorlw	1	; case 11
 15148  005320  A4D8               	btfss	status,2,c
 15149  005322  0012               	return	
 15150  005324  D7E5               	goto	l425
 15151  005326                     __end_of_USBCheckHIDRequest:
 15152                           	opt stack 0
 15153                           tblptru	equ	0xFF8
 15154                           tblptrh	equ	0xFF7
 15155                           tblptrl	equ	0xFF6
 15156                           tablat	equ	0xFF5
 15157                           prodh	equ	0xFF4
 15158                           prodl	equ	0xFF3
 15159                           intcon	equ	0xFF2
 15160                           intcon2	equ	0xFF1
 15161                           intcon3	equ	0xFF0
 15162                           indf0	equ	0xFEF
 15163                           postinc0	equ	0xFEE
 15164                           fsr0h	equ	0xFEA
 15165                           fsr0l	equ	0xFE9
 15166                           wreg	equ	0xFE8
 15167                           indf1	equ	0xFE7
 15168                           postdec1	equ	0xFE5
 15169                           plusw1	equ	0xFE3
 15170                           fsr1h	equ	0xFE2
 15171                           fsr1l	equ	0xFE1
 15172                           indf2	equ	0xFDF
 15173                           postinc2	equ	0xFDE
 15174                           postdec2	equ	0xFDD
 15175                           plusw2	equ	0xFDB
 15176                           fsr2h	equ	0xFDA
 15177                           fsr2l	equ	0xFD9
 15178                           status	equ	0xFD8
 15179                           
 15180 ;; *************** function _SYSTEM_Initialize *****************
 15181 ;; Defined at:
 15182 ;;		line 80 in file "system.c"
 15183 ;; Parameters:    Size  Location     Type
 15184 ;;  state           1    wreg     enum E6623
 15185 ;; Auto vars:     Size  Location     Type
 15186 ;;  state           1    4[COMRAM] enum E6623
 15187 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15188 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15189 ;; Return value:  Size  Location     Type
 15190 ;;                  1    wreg      void 
 15191 ;; Registers used:
 15192 ;;		wreg, status,2, status,0
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15199 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15201 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15202 ;;Total ram usage:        5 bytes
 15203 ;; Hardware stack levels used:    1
 15204 ;; This function calls:
 15205 ;;		Nothing
 15206 ;; This function is called by:
 15207 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15208 ;;		_main
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           	psect	text70
 15213  007C52                     __ptext70:
 15214                           	opt stack 0
 15215  007C52                     _SYSTEM_Initialize:
 15216                           	opt stack 28
 15217                           
 15218                           ;incstack = 0
 15219                           ;SYSTEM_Initialize@state stored from wreg
 15220  007C52  6E05               	movwf	SYSTEM_Initialize@state,c
 15221                           
 15222                           ;system.c: 82: switch(state)
 15223  007C54  D01D               	goto	l926
 15224  007C56                     
 15225                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15226  007C56  0E02               	movlw	2
 15227  007C58  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15228  007C5A  0E58               	movlw	88
 15229  007C5C  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15230                           
 15231                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15232  007C5E  8C9B               	bsf	3995,6,c	;volatile
 15233  007C60                     l10907:
 15234  007C60  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15235  007C62  A0D8               	btfss	status,0,c
 15236  007C64  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15237  007C66  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15238  007C68  E1FB               	bnz	l10907
 15239  007C6A  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15240  007C6C  B4D8               	btfsc	status,2,c
 15241  007C6E  0012               	return	
 15242  007C70  D7F7               	goto	l929
 15243  007C72                     
 15244                           ;system.c: 119: OSCCON = 0x70;
 15245  007C72  0E70               	movlw	112
 15246  007C74  6ED3               	movwf	4051,c	;volatile
 15247                           
 15248                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15249  007C76  0E03               	movlw	3
 15250  007C78  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 15251  007C7A  0E20               	movlw	32
 15252  007C7C  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 15253  007C7E                     l10911:
 15254  007C7E  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 15255  007C80  A0D8               	btfss	status,0,c
 15256  007C82  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 15257  007C84  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 15258  007C86  E1FB               	bnz	l10911
 15259  007C88  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 15260  007C8A  B4D8               	btfsc	status,2,c
 15261  007C8C  0012               	return	
 15262  007C8E  D7F7               	goto	l935
 15263  007C90                     l926:
 15264  007C90  5005               	movf	SYSTEM_Initialize@state,w,c
 15265                           
 15266                           ; Switch size 1, requested type "space"
 15267                           ; Number of cases is 3, Range of values is 0 to 2
 15268                           ; switch strategies available:
 15269                           ; Name         Instructions Cycles
 15270                           ; simple_byte           10     6 (average)
 15271                           ;	Chosen strategy is simple_byte
 15272  007C92  0A00               	xorlw	0	; case 0
 15273  007C94  B4D8               	btfsc	status,2,c
 15274  007C96  D7DF               	goto	l927
 15275  007C98  0A01               	xorlw	1	; case 1
 15276  007C9A  B4D8               	btfsc	status,2,c
 15277  007C9C  0012               	return	
 15278  007C9E  0A03               	xorlw	3	; case 2
 15279  007CA0  A4D8               	btfss	status,2,c
 15280  007CA2  0012               	return	
 15281  007CA4  D7E6               	goto	l933
 15282  007CA6                     __end_of_SYSTEM_Initialize:
 15283                           	opt stack 0
 15284                           tblptru	equ	0xFF8
 15285                           tblptrh	equ	0xFF7
 15286                           tblptrl	equ	0xFF6
 15287                           tablat	equ	0xFF5
 15288                           prodh	equ	0xFF4
 15289                           prodl	equ	0xFF3
 15290                           intcon	equ	0xFF2
 15291                           intcon2	equ	0xFF1
 15292                           intcon3	equ	0xFF0
 15293                           indf0	equ	0xFEF
 15294                           postinc0	equ	0xFEE
 15295                           fsr0h	equ	0xFEA
 15296                           fsr0l	equ	0xFE9
 15297                           wreg	equ	0xFE8
 15298                           indf1	equ	0xFE7
 15299                           postdec1	equ	0xFE5
 15300                           plusw1	equ	0xFE3
 15301                           fsr1h	equ	0xFE2
 15302                           fsr1l	equ	0xFE1
 15303                           indf2	equ	0xFDF
 15304                           postinc2	equ	0xFDE
 15305                           postdec2	equ	0xFDD
 15306                           plusw2	equ	0xFDB
 15307                           fsr2h	equ	0xFDA
 15308                           fsr2l	equ	0xFD9
 15309                           status	equ	0xFD8
 15310                           
 15311 ;; *************** function _MSDTransferTerminated *****************
 15312 ;; Defined at:
 15313 ;;		line 1674 in file "usb_device_msd.c"
 15314 ;; Parameters:    Size  Location     Type
 15315 ;;  handle          2   11[COMRAM] PTR void 
 15316 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15317 ;;		 -> BDT(48), 
 15318 ;; Auto vars:     Size  Location     Type
 15319 ;;		None
 15320 ;; Return value:  Size  Location     Type
 15321 ;;                  1    wreg      void 
 15322 ;; Registers used:
 15323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15324 ;; Tracked objects:
 15325 ;;		On entry : 0/0
 15326 ;;		On exit  : 0/0
 15327 ;;		Unchanged: 0/0
 15328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15333 ;;Total ram usage:        4 bytes
 15334 ;; Hardware stack levels used:    1
 15335 ;; Hardware stack levels required when called:    1
 15336 ;; This function calls:
 15337 ;;		_USBStallEndpoint
 15338 ;;		_USBTransferOnePacket
 15339 ;; This function is called by:
 15340 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15341 ;; This function uses a non-reentrant model
 15342 ;;
 15343                           
 15344                           	psect	text71
 15345  0079F8                     __ptext71:
 15346                           	opt stack 0
 15347  0079F8                     _MSDTransferTerminated:
 15348                           	opt stack 27
 15349                           
 15350                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15351                           
 15352                           ;incstack = 0
 15353  0079F8  0101               	movlb	1	; () banked
 15354  0079FA  518E               	movf	_MSDCBWValid& (0+255),w,b
 15355  0079FC  A4D8               	btfss	status,2,c
 15356  0079FE  D00B               	goto	l764
 15357                           
 15358                           ; BSR set to: 1
 15359                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15360  007A00  0E01               	movlw	1
 15361  007A02  6E01               	movwf	USBStallEndpoint@dir,c
 15362  007A04  0E02               	movlw	2
 15363  007A06  ECC8  F023         	call	_USBStallEndpoint
 15364                           
 15365                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15366  007A0A  0E00               	movlw	0
 15367  007A0C  6E01               	movwf	USBStallEndpoint@dir,c
 15368  007A0E  0E02               	movlw	2
 15369  007A10  ECC8  F023         	call	_USBStallEndpoint
 15370                           
 15371                           ;usb_device_msd.c: 1681: }
 15372  007A14  0012               	return	
 15373  007A16                     l764:
 15374  007A16  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15375  007A1A  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15376  007A1E  500E               	movf	_MSDTransferTerminated$2407,w,c
 15377  007A20  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15378  007A22  E114               	bnz	l767
 15379  007A24  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15380  007A26  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15381  007A28  A4D8               	btfss	status,2,c
 15382  007A2A  0012               	return	
 15383                           
 15384                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15385  007A2C  0E00               	movlw	0
 15386  007A2E  6E01               	movwf	USBTransferOnePacket@dir,c
 15387  007A30  0E40               	movlw	64
 15388  007A32  6E02               	movwf	USBTransferOnePacket@data,c
 15389  007A34  0E0D               	movlw	13
 15390  007A36  6E03               	movwf	USBTransferOnePacket@data+1,c
 15391  007A38  0E40               	movlw	64
 15392  007A3A  6E04               	movwf	USBTransferOnePacket@len,c
 15393  007A3C  0E02               	movlw	2
 15394  007A3E  ECD3  F025         	call	_USBTransferOnePacket
 15395  007A42  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15396  007A46  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15397  007A4A  0012               	return	
 15398  007A4C                     l767:
 15399  007A4C  0012               	return		;funcret
 15400  007A4E                     __end_of_MSDTransferTerminated:
 15401                           	opt stack 0
 15402                           tblptru	equ	0xFF8
 15403                           tblptrh	equ	0xFF7
 15404                           tblptrl	equ	0xFF6
 15405                           tablat	equ	0xFF5
 15406                           prodh	equ	0xFF4
 15407                           prodl	equ	0xFF3
 15408                           intcon	equ	0xFF2
 15409                           intcon2	equ	0xFF1
 15410                           intcon3	equ	0xFF0
 15411                           indf0	equ	0xFEF
 15412                           postinc0	equ	0xFEE
 15413                           fsr0h	equ	0xFEA
 15414                           fsr0l	equ	0xFE9
 15415                           wreg	equ	0xFE8
 15416                           indf1	equ	0xFE7
 15417                           postdec1	equ	0xFE5
 15418                           plusw1	equ	0xFE3
 15419                           fsr1h	equ	0xFE2
 15420                           fsr1l	equ	0xFE1
 15421                           indf2	equ	0xFDF
 15422                           postinc2	equ	0xFDE
 15423                           postdec2	equ	0xFDD
 15424                           plusw2	equ	0xFDB
 15425                           fsr2h	equ	0xFDA
 15426                           fsr2l	equ	0xFD9
 15427                           status	equ	0xFD8
 15428                           
 15429 ;; *************** function _APP_DeviceMSDInitialize *****************
 15430 ;; Defined at:
 15431 ;;		line 84 in file "app_device_msd.c"
 15432 ;; Parameters:    Size  Location     Type
 15433 ;;		None
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;		None
 15436 ;; Return value:  Size  Location     Type
 15437 ;;                  1    wreg      void 
 15438 ;; Registers used:
 15439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15440 ;; Tracked objects:
 15441 ;;		On entry : 0/0
 15442 ;;		On exit  : 0/0
 15443 ;;		Unchanged: 0/0
 15444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15449 ;;Total ram usage:        0 bytes
 15450 ;; Hardware stack levels used:    1
 15451 ;; Hardware stack levels required when called:    2
 15452 ;; This function calls:
 15453 ;;		_USBEnableEndpoint
 15454 ;;		_USBMSDInit
 15455 ;; This function is called by:
 15456 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           	psect	text72
 15461  008998                     __ptext72:
 15462                           	opt stack 0
 15463  008998                     _APP_DeviceMSDInitialize:
 15464                           	opt stack 26
 15465                           
 15466                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15467                           
 15468                           ;incstack = 0
 15469  008998  0E1E               	movlw	30
 15470  00899A  6E09               	movwf	USBEnableEndpoint@options,c
 15471  00899C  0E02               	movlw	2
 15472  00899E  ECD1  F040         	call	_USBEnableEndpoint
 15473                           
 15474                           ;app_device_msd.c: 93: USBMSDInit();
 15475  0089A2  EC52  F025         	call	_USBMSDInit	;wreg free
 15476  0089A6  0012               	return		;funcret
 15477  0089A8                     __end_of_APP_DeviceMSDInitialize:
 15478                           	opt stack 0
 15479                           tblptru	equ	0xFF8
 15480                           tblptrh	equ	0xFF7
 15481                           tblptrl	equ	0xFF6
 15482                           tablat	equ	0xFF5
 15483                           prodh	equ	0xFF4
 15484                           prodl	equ	0xFF3
 15485                           intcon	equ	0xFF2
 15486                           intcon2	equ	0xFF1
 15487                           intcon3	equ	0xFF0
 15488                           indf0	equ	0xFEF
 15489                           postinc0	equ	0xFEE
 15490                           fsr0h	equ	0xFEA
 15491                           fsr0l	equ	0xFE9
 15492                           wreg	equ	0xFE8
 15493                           indf1	equ	0xFE7
 15494                           postdec1	equ	0xFE5
 15495                           plusw1	equ	0xFE3
 15496                           fsr1h	equ	0xFE2
 15497                           fsr1l	equ	0xFE1
 15498                           indf2	equ	0xFDF
 15499                           postinc2	equ	0xFDE
 15500                           postdec2	equ	0xFDD
 15501                           plusw2	equ	0xFDB
 15502                           fsr2h	equ	0xFDA
 15503                           fsr2l	equ	0xFD9
 15504                           status	equ	0xFD8
 15505                           
 15506 ;; *************** function _USBMSDInit *****************
 15507 ;; Defined at:
 15508 ;;		line 142 in file "usb_device_msd.c"
 15509 ;; Parameters:    Size  Location     Type
 15510 ;;		None
 15511 ;; Auto vars:     Size  Location     Type
 15512 ;;		None
 15513 ;; Return value:  Size  Location     Type
 15514 ;;                  1    wreg      void 
 15515 ;; Registers used:
 15516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15517 ;; Tracked objects:
 15518 ;;		On entry : 0/0
 15519 ;;		On exit  : 0/0
 15520 ;;		Unchanged: 0/0
 15521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15524 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15526 ;;Total ram usage:        3 bytes
 15527 ;; Hardware stack levels used:    1
 15528 ;; Hardware stack levels required when called:    1
 15529 ;; This function calls:
 15530 ;;		_ExternalFlash_MediaDetect
 15531 ;;		_ExternalFlash_MediaInitialize
 15532 ;;		_ResetSenseData
 15533 ;;		_USBTransferOnePacket
 15534 ;; This function is called by:
 15535 ;;		_APP_DeviceMSDInitialize
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           	psect	text73
 15540  004AA4                     __ptext73:
 15541                           	opt stack 0
 15542  004AA4                     _USBMSDInit:
 15543                           	opt stack 26
 15544                           
 15545                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15546                           
 15547                           ;incstack = 0
 15548  004AA4  0E00               	movlw	0
 15549  004AA6  6E01               	movwf	USBTransferOnePacket@dir,c
 15550  004AA8  0E40               	movlw	64
 15551  004AAA  6E02               	movwf	USBTransferOnePacket@data,c
 15552  004AAC  0E0D               	movlw	13
 15553  004AAE  6E03               	movwf	USBTransferOnePacket@data+1,c
 15554  004AB0  0E40               	movlw	64
 15555  004AB2  6E04               	movwf	USBTransferOnePacket@len,c
 15556  004AB4  0E02               	movlw	2
 15557  004AB6  ECD3  F025         	call	_USBTransferOnePacket
 15558  004ABA  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15559  004ABE  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15560  004AC2  C0D5  F0DD         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15561  004AC6  C0D6  F0DE         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15562                           
 15563                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 15564  004ACA  0E00               	movlw	0
 15565  004ACC  0100               	movlb	0	; () banked
 15566  004ACE  6FED               	movwf	_MSD_State& (0+255),b
 15567                           
 15568                           ; BSR set to: 0
 15569                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 15570  004AD0  69EC               	setf	_MSDCommandState& (0+255),b
 15571                           
 15572                           ; BSR set to: 0
 15573                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 15574  004AD2  0E00               	movlw	0
 15575  004AD4  6FEB               	movwf	_MSDReadState& (0+255),b
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 15579  004AD6  0E00               	movlw	0
 15580  004AD8  6FEA               	movwf	_MSDWriteState& (0+255),b
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 15584  004ADA  0E00               	movlw	0
 15585  004ADC  6FE7               	movwf	_MSDHostNoData& (0+255),b
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 15589  004ADE  0E00               	movlw	0
 15590  004AE0  0101               	movlb	1	; () banked
 15591  004AE2  6F5A               	movwf	_gblNumBLKS& (0+255),b
 15592  004AE4  0E00               	movlw	0
 15593  004AE6  6F5B               	movwf	(_gblNumBLKS+1)& (0+255),b
 15594  004AE8  0E00               	movlw	0
 15595  004AEA  6F5C               	movwf	(_gblNumBLKS+2)& (0+255),b
 15596  004AEC  0E00               	movlw	0
 15597  004AEE  6F5D               	movwf	(_gblNumBLKS+3)& (0+255),b
 15598                           
 15599                           ; BSR set to: 1
 15600                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 15601  004AF0  0E00               	movlw	0
 15602  004AF2  6F56               	movwf	_gblBLKLen& (0+255),b
 15603  004AF4  0E00               	movlw	0
 15604  004AF6  6F57               	movwf	(_gblBLKLen+1)& (0+255),b
 15605  004AF8  0E00               	movlw	0
 15606  004AFA  6F58               	movwf	(_gblBLKLen+2)& (0+255),b
 15607  004AFC  0E00               	movlw	0
 15608  004AFE  6F59               	movwf	(_gblBLKLen+3)& (0+255),b
 15609                           
 15610                           ; BSR set to: 1
 15611                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 15612  004B00  0E01               	movlw	1
 15613  004B02  6F8E               	movwf	_MSDCBWValid& (0+255),b
 15614                           
 15615                           ; BSR set to: 1
 15616                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 15617  004B04  0E00               	movlw	0
 15618  004B06  6F83               	movwf	(_gblMediaPresent+1)& (0+255),b
 15619  004B08  0E00               	movlw	0
 15620  004B0A  6F82               	movwf	_gblMediaPresent& (0+255),b
 15621                           
 15622                           ; BSR set to: 1
 15623                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 15624  004B0C  0E00               	movlw	0
 15625  004B0E  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 15626  004B10  D046               	goto	l518
 15627  004B12                     
 15628                           ; BSR set to: 1
 15629                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 15630                           
 15631                           ; BSR set to: 1
 15632  004B12  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15633  004B14  0D01               	mullw	1
 15634  004B16  0EE8               	movlw	low _SoftDetach
 15635  004B18  24F3               	addwf	prodl,w,c
 15636  004B1A  6ED9               	movwf	fsr2l,c
 15637  004B1C  0E00               	movlw	high _SoftDetach
 15638  004B1E  20F4               	addwfc	prodh,w,c
 15639  004B20  6EDA               	movwf	fsr2h,c
 15640  004B22  0E00               	movlw	0
 15641  004B24  6EDF               	movwf	indf2,c
 15642                           
 15643                           ; BSR set to: 1
 15644                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 15645  004B26  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 15646  004B2A  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 15647  004B2E  D801               	call	u7058
 15648  004B30  D009               	goto	u7059
 15649  004B32                     u7058:
 15650  004B32  0005               	push	
 15651  004B34  6EFA               	movwf	pclath,c
 15652  004B36  51B9               	movf	(_LUN+6)& (0+255),w,b
 15653  004B38  6EFD               	movwf	tosl,c
 15654  004B3A  51BA               	movf	(_LUN+7)& (0+255),w,b
 15655  004B3C  6EFE               	movwf	tosh,c
 15656  004B3E  6AFF               	clrf	tosu,c
 15657  004B40  50FA               	movf	pclath,w,c
 15658  004B42  0012               	return		;indir
 15659  004B44                     u7059:
 15660  004B44  0900               	iorlw	0
 15661  004B46  B4D8               	btfsc	status,2,c
 15662  004B48  D026               	goto	l521
 15663                           
 15664                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 15665  004B4A  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 15666  004B4E  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 15667  004B52  D801               	call	u7078
 15668  004B54  D00A               	goto	u7079
 15669  004B56                     u7078:
 15670  004B56  0005               	push	
 15671  004B58  6EFA               	movwf	pclath,c
 15672  004B5A  0101               	movlb	1	; () banked
 15673  004B5C  51B3               	movf	_LUN& (0+255),w,b
 15674  004B5E  6EFD               	movwf	tosl,c
 15675  004B60  51B4               	movf	(_LUN+1)& (0+255),w,b
 15676  004B62  6EFE               	movwf	tosh,c
 15677  004B64  6AFF               	clrf	tosu,c
 15678  004B66  50FA               	movf	pclath,w,c
 15679  004B68  0012               	return		;indir
 15680  004B6A                     u7079:
 15681  004B6A  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 15682  004B6C  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 15683  004B6E  B4D8               	btfsc	status,2,c
 15684  004B70  D012               	goto	l521
 15685                           
 15686                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 15687  004B72  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 15688  004B76  0E01               	movlw	1
 15689  004B78  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 15690  004B7A  0E00               	movlw	0
 15691  004B7C  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 15692  004B7E  2A0C               	incf	??_USBMSDInit,f,c
 15693  004B80  D003               	goto	u7094
 15694  004B82                     u7095:
 15695  004B82  90D8               	bcf	status,0,c
 15696  004B84  360D               	rlcf	??_USBMSDInit+1,f,c
 15697  004B86  360E               	rlcf	??_USBMSDInit+2,f,c
 15698  004B88                     u7094:
 15699  004B88  2E0C               	decfsz	??_USBMSDInit,f,c
 15700  004B8A  D7FB               	goto	u7095
 15701  004B8C  500D               	movf	??_USBMSDInit+1,w,c
 15702  004B8E  0101               	movlb	1	; () banked
 15703  004B90  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 15704  004B92  500E               	movf	??_USBMSDInit+2,w,c
 15705  004B94  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 15706  004B96                     l521:
 15707                           
 15708                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 15709                           
 15710                           ; BSR set to: 1
 15711                           
 15712                           ; BSR set to: 1
 15713  004B96  EC31  F03B         	call	_ResetSenseData	;wreg free
 15714  004B9A  0101               	movlb	1	; () banked
 15715  004B9C  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 15716  004B9E                     l518:
 15717                           
 15718                           ; BSR set to: 1
 15719                           
 15720                           ; BSR set to: 1
 15721  004B9E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15722  004BA0  A4D8               	btfss	status,2,c
 15723  004BA2  0012               	return	
 15724  004BA4  D7B6               	goto	l519
 15725  004BA6                     __end_of_USBMSDInit:
 15726                           	opt stack 0
 15727                           tosu	equ	0xFFF
 15728                           tosh	equ	0xFFE
 15729                           tosl	equ	0xFFD
 15730                           pclath	equ	0xFFA
 15731                           tblptru	equ	0xFF8
 15732                           tblptrh	equ	0xFF7
 15733                           tblptrl	equ	0xFF6
 15734                           tablat	equ	0xFF5
 15735                           prodh	equ	0xFF4
 15736                           prodl	equ	0xFF3
 15737                           intcon	equ	0xFF2
 15738                           intcon2	equ	0xFF1
 15739                           intcon3	equ	0xFF0
 15740                           indf0	equ	0xFEF
 15741                           postinc0	equ	0xFEE
 15742                           fsr0h	equ	0xFEA
 15743                           fsr0l	equ	0xFE9
 15744                           wreg	equ	0xFE8
 15745                           indf1	equ	0xFE7
 15746                           postdec1	equ	0xFE5
 15747                           plusw1	equ	0xFE3
 15748                           fsr1h	equ	0xFE2
 15749                           fsr1l	equ	0xFE1
 15750                           indf2	equ	0xFDF
 15751                           postinc2	equ	0xFDE
 15752                           postdec2	equ	0xFDD
 15753                           plusw2	equ	0xFDB
 15754                           fsr2h	equ	0xFDA
 15755                           fsr2l	equ	0xFD9
 15756                           status	equ	0xFD8
 15757                           
 15758 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 15759 ;; Defined at:
 15760 ;;		line 47 in file "app_device_custom_hid.c"
 15761 ;; Parameters:    Size  Location     Type
 15762 ;;		None
 15763 ;; Auto vars:     Size  Location     Type
 15764 ;;		None
 15765 ;; Return value:  Size  Location     Type
 15766 ;;                  1    wreg      void 
 15767 ;; Registers used:
 15768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15769 ;; Tracked objects:
 15770 ;;		On entry : 0/0
 15771 ;;		On exit  : 0/0
 15772 ;;		Unchanged: 0/0
 15773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15778 ;;Total ram usage:        0 bytes
 15779 ;; Hardware stack levels used:    1
 15780 ;; Hardware stack levels required when called:    2
 15781 ;; This function calls:
 15782 ;;		_USBEnableEndpoint
 15783 ;;		_USBTransferOnePacket
 15784 ;; This function is called by:
 15785 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15786 ;; This function uses a non-reentrant model
 15787 ;;
 15788                           
 15789                           	psect	text74
 15790  008326                     __ptext74:
 15791                           	opt stack 0
 15792  008326                     _APP_DeviceCustomHIDInitialize:
 15793                           	opt stack 26
 15794                           
 15795                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 15796                           
 15797                           ; BSR set to: 1
 15798                           ;incstack = 0
 15799  008326  0E00               	movlw	0
 15800  008328  0101               	movlb	1	; () banked
 15801  00832A  6F7E               	movwf	_USBInHandle& (0+255),b
 15802  00832C  0E00               	movlw	0
 15803  00832E  6F7F               	movwf	(_USBInHandle+1)& (0+255),b
 15804                           
 15805                           ; BSR set to: 1
 15806                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 15807  008330  0E1E               	movlw	30
 15808  008332  6E09               	movwf	USBEnableEndpoint@options,c
 15809  008334  0E01               	movlw	1
 15810  008336  ECD1  F040         	call	_USBEnableEndpoint
 15811                           
 15812                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 15813  00833A  0E00               	movlw	0
 15814  00833C  6E01               	movwf	USBTransferOnePacket@dir,c
 15815  00833E  0E50               	movlw	low _ReceivedDataBuffer
 15816  008340  6E02               	movwf	USBTransferOnePacket@data,c
 15817  008342  0E02               	movlw	high _ReceivedDataBuffer
 15818  008344  6E03               	movwf	USBTransferOnePacket@data+1,c
 15819  008346  0E40               	movlw	64
 15820  008348  6E04               	movwf	USBTransferOnePacket@len,c
 15821  00834A  0E01               	movlw	1
 15822  00834C  ECD3  F025         	call	_USBTransferOnePacket
 15823  008350  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 15824  008354  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 15825  008358  0012               	return		;funcret
 15826  00835A                     __end_of_APP_DeviceCustomHIDInitialize:
 15827                           	opt stack 0
 15828                           tosu	equ	0xFFF
 15829                           tosh	equ	0xFFE
 15830                           tosl	equ	0xFFD
 15831                           pclath	equ	0xFFA
 15832                           tblptru	equ	0xFF8
 15833                           tblptrh	equ	0xFF7
 15834                           tblptrl	equ	0xFF6
 15835                           tablat	equ	0xFF5
 15836                           prodh	equ	0xFF4
 15837                           prodl	equ	0xFF3
 15838                           intcon	equ	0xFF2
 15839                           intcon2	equ	0xFF1
 15840                           intcon3	equ	0xFF0
 15841                           indf0	equ	0xFEF
 15842                           postinc0	equ	0xFEE
 15843                           fsr0h	equ	0xFEA
 15844                           fsr0l	equ	0xFE9
 15845                           wreg	equ	0xFE8
 15846                           indf1	equ	0xFE7
 15847                           postdec1	equ	0xFE5
 15848                           plusw1	equ	0xFE3
 15849                           fsr1h	equ	0xFE2
 15850                           fsr1l	equ	0xFE1
 15851                           indf2	equ	0xFDF
 15852                           postinc2	equ	0xFDE
 15853                           postdec2	equ	0xFDD
 15854                           plusw2	equ	0xFDB
 15855                           fsr2h	equ	0xFDA
 15856                           fsr2l	equ	0xFD9
 15857                           status	equ	0xFD8
 15858                           
 15859 ;; *************** function _USBEnableEndpoint *****************
 15860 ;; Defined at:
 15861 ;;		line 878 in file "usb_device.c"
 15862 ;; Parameters:    Size  Location     Type
 15863 ;;  ep              1    wreg     unsigned char 
 15864 ;;  options         1    8[COMRAM] unsigned char 
 15865 ;; Auto vars:     Size  Location     Type
 15866 ;;  ep              1   11[COMRAM] unsigned char 
 15867 ;;  p               2    9[COMRAM] PTR unsigned char 
 15868 ;;		 -> UEP0(1), 
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  1    wreg      void 
 15871 ;; Registers used:
 15872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15873 ;; Tracked objects:
 15874 ;;		On entry : 0/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15882 ;;Total ram usage:        4 bytes
 15883 ;; Hardware stack levels used:    1
 15884 ;; Hardware stack levels required when called:    1
 15885 ;; This function calls:
 15886 ;;		_USBConfigureEndpoint
 15887 ;; This function is called by:
 15888 ;;		_APP_DeviceCustomHIDInitialize
 15889 ;;		_APP_DeviceMSDInitialize
 15890 ;; This function uses a non-reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text75
 15894  0081A2                     __ptext75:
 15895                           	opt stack 0
 15896  0081A2                     _USBEnableEndpoint:
 15897                           	opt stack 26
 15898                           
 15899                           ;incstack = 0
 15900                           ;USBEnableEndpoint@ep stored from wreg
 15901  0081A2  6E0C               	movwf	USBEnableEndpoint@ep,c
 15902                           
 15903                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 15904  0081A4  A409               	btfss	USBEnableEndpoint@options,2,c
 15905  0081A6  D005               	goto	l178
 15906                           
 15907                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15908  0081A8  0E00               	movlw	0
 15909  0081AA  6E01               	movwf	USBConfigureEndpoint@direction,c
 15910  0081AC  500C               	movf	USBEnableEndpoint@ep,w,c
 15911  0081AE  EC46  F035         	call	_USBConfigureEndpoint
 15912  0081B2                     l178:
 15913                           
 15914                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 15915  0081B2  A209               	btfss	USBEnableEndpoint@options,1,c
 15916  0081B4  D005               	goto	l179
 15917                           
 15918                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15919  0081B6  0E01               	movlw	1
 15920  0081B8  6E01               	movwf	USBConfigureEndpoint@direction,c
 15921  0081BA  500C               	movf	USBEnableEndpoint@ep,w,c
 15922  0081BC  EC46  F035         	call	_USBConfigureEndpoint
 15923  0081C0                     l179:
 15924                           
 15925                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15926  0081C0  500C               	movf	USBEnableEndpoint@ep,w,c
 15927  0081C2  0D01               	mullw	1
 15928  0081C4  0E26               	movlw	38
 15929  0081C6  24F3               	addwf	prodl,w,c
 15930  0081C8  6E0A               	movwf	USBEnableEndpoint@p,c
 15931  0081CA  0E0F               	movlw	15
 15932  0081CC  20F4               	addwfc	prodh,w,c
 15933  0081CE  6E0B               	movwf	USBEnableEndpoint@p+1,c
 15934                           
 15935                           ;usb_device.c: 901: *p = options;
 15936  0081D0  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 15937  0081D4  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 15938  0081D8  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 15939  0081DC  0012               	return		;funcret
 15940  0081DE                     __end_of_USBEnableEndpoint:
 15941                           	opt stack 0
 15942                           tosu	equ	0xFFF
 15943                           tosh	equ	0xFFE
 15944                           tosl	equ	0xFFD
 15945                           pclath	equ	0xFFA
 15946                           tblptru	equ	0xFF8
 15947                           tblptrh	equ	0xFF7
 15948                           tblptrl	equ	0xFF6
 15949                           tablat	equ	0xFF5
 15950                           prodh	equ	0xFF4
 15951                           prodl	equ	0xFF3
 15952                           intcon	equ	0xFF2
 15953                           intcon2	equ	0xFF1
 15954                           intcon3	equ	0xFF0
 15955                           indf0	equ	0xFEF
 15956                           postinc0	equ	0xFEE
 15957                           fsr0h	equ	0xFEA
 15958                           fsr0l	equ	0xFE9
 15959                           wreg	equ	0xFE8
 15960                           indf1	equ	0xFE7
 15961                           postdec1	equ	0xFE5
 15962                           plusw1	equ	0xFE3
 15963                           fsr1h	equ	0xFE2
 15964                           fsr1l	equ	0xFE1
 15965                           indf2	equ	0xFDF
 15966                           postinc2	equ	0xFDE
 15967                           postdec2	equ	0xFDD
 15968                           plusw2	equ	0xFDB
 15969                           fsr2h	equ	0xFDA
 15970                           fsr2l	equ	0xFD9
 15971                           status	equ	0xFD8
 15972                           
 15973 ;; *************** function _USBConfigureEndpoint *****************
 15974 ;; Defined at:
 15975 ;;		line 1545 in file "usb_device.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;  EPNum           1    wreg     unsigned char 
 15978 ;;  direction       1    0[COMRAM] unsigned char 
 15979 ;; Auto vars:     Size  Location     Type
 15980 ;;  EPNum           1    5[COMRAM] unsigned char 
 15981 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 15982 ;;		 -> BDT(48), 
 15983 ;; Return value:  Size  Location     Type
 15984 ;;                  1    wreg      void 
 15985 ;; Registers used:
 15986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15987 ;; Tracked objects:
 15988 ;;		On entry : 0/0
 15989 ;;		On exit  : 0/0
 15990 ;;		Unchanged: 0/0
 15991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15992 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15993 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15995 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15996 ;;Total ram usage:        8 bytes
 15997 ;; Hardware stack levels used:    1
 15998 ;; This function calls:
 15999 ;;		Nothing
 16000 ;; This function is called by:
 16001 ;;		_USBEnableEndpoint
 16002 ;; This function uses a non-reentrant model
 16003 ;;
 16004                           
 16005                           	psect	text76
 16006  006A8C                     __ptext76:
 16007                           	opt stack 0
 16008  006A8C                     _USBConfigureEndpoint:
 16009                           	opt stack 26
 16010                           
 16011                           ;incstack = 0
 16012                           ;USBConfigureEndpoint@EPNum stored from wreg
 16013  006A8C  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16014                           
 16015                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16016  006A8E  0E00               	movlw	0
 16017  006A90  6E07               	movwf	USBConfigureEndpoint@handle,c
 16018  006A92  0E0D               	movlw	13
 16019  006A94  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16020                           
 16021                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16022  006A96  5001               	movf	USBConfigureEndpoint@direction,w,c
 16023  006A98  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16024  006A9A  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16025  006A9C  90D8               	bcf	status,0,c
 16026  006A9E  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16027  006AA0  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16028  006AA2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16029  006AA4  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16030  006AA6  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16031  006AA8  90D8               	bcf	status,0,c
 16032  006AAA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16033  006AAC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16034  006AAE  90D8               	bcf	status,0,c
 16035  006AB0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16036  006AB2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16037  006AB4  5002               	movf	??_USBConfigureEndpoint,w,c
 16038  006AB6  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16039  006AB8  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16040  006ABA  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16041  006ABC  90D8               	bcf	status,0,c
 16042  006ABE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16043  006AC0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16044  006AC2  90D8               	bcf	status,0,c
 16045  006AC4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16046  006AC6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16047  006AC8  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16048  006ACA  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16049  006ACC  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16050  006ACE  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16051                           
 16052                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16053  006AD0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16054  006AD4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16055  006AD8  9EDF               	bcf	indf2,7,c
 16056                           
 16057                           ;usb_device.c: 1559: if(direction == 0)
 16058  006ADA  5001               	movf	USBConfigureEndpoint@direction,w,c
 16059  006ADC  A4D8               	btfss	status,2,c
 16060  006ADE  D007               	goto	l214
 16061                           
 16062                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16063  006AE0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16064  006AE2  0D02               	mullw	2
 16065  006AE4  0E40               	movlw	low _pBDTEntryOut
 16066  006AE6  24F3               	addwf	prodl,w,c
 16067  006AE8  6ED9               	movwf	fsr2l,c
 16068  006AEA  0E01               	movlw	high _pBDTEntryOut
 16069  006AEC  D006               	goto	L14
 16070  006AEE                     l214:
 16071                           
 16072                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16073  006AEE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16074  006AF0  0D02               	mullw	2
 16075  006AF2  0ED1               	movlw	low _pBDTEntryIn
 16076  006AF4  24F3               	addwf	prodl,w,c
 16077  006AF6  6ED9               	movwf	fsr2l,c
 16078  006AF8  0E00               	movlw	high _pBDTEntryIn
 16079  006AFA                     L14:
 16080  006AFA  20F4               	addwfc	prodh,w,c
 16081  006AFC  6EDA               	movwf	fsr2h,c
 16082  006AFE  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16083  006B02  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16084                           
 16085                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16086  006B06  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16087  006B0A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16088  006B0E  9CDF               	bcf	indf2,6,c
 16089                           
 16090                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16091  006B10  EE20 F004          	lfsr	2,4
 16092  006B14  5007               	movf	USBConfigureEndpoint@handle,w,c
 16093  006B16  26D9               	addwf	fsr2l,f,c
 16094  006B18  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16095  006B1A  22DA               	addwfc	fsr2h,f,c
 16096  006B1C  8CDF               	bsf	indf2,6,c
 16097  006B1E  0012               	return		;funcret
 16098  006B20                     __end_of_USBConfigureEndpoint:
 16099                           	opt stack 0
 16100                           tosu	equ	0xFFF
 16101                           tosh	equ	0xFFE
 16102                           tosl	equ	0xFFD
 16103                           pclath	equ	0xFFA
 16104                           tblptru	equ	0xFF8
 16105                           tblptrh	equ	0xFF7
 16106                           tblptrl	equ	0xFF6
 16107                           tablat	equ	0xFF5
 16108                           prodh	equ	0xFF4
 16109                           prodl	equ	0xFF3
 16110                           intcon	equ	0xFF2
 16111                           intcon2	equ	0xFF1
 16112                           intcon3	equ	0xFF0
 16113                           indf0	equ	0xFEF
 16114                           postinc0	equ	0xFEE
 16115                           fsr0h	equ	0xFEA
 16116                           fsr0l	equ	0xFE9
 16117                           wreg	equ	0xFE8
 16118                           indf1	equ	0xFE7
 16119                           postdec1	equ	0xFE5
 16120                           plusw1	equ	0xFE3
 16121                           fsr1h	equ	0xFE2
 16122                           fsr1l	equ	0xFE1
 16123                           indf2	equ	0xFDF
 16124                           postinc2	equ	0xFDE
 16125                           postdec2	equ	0xFDD
 16126                           plusw2	equ	0xFDB
 16127                           fsr2h	equ	0xFDA
 16128                           fsr2l	equ	0xFD9
 16129                           status	equ	0xFD8
 16130                           
 16131 ;; *************** function _USBCtrlTrfOutHandler *****************
 16132 ;; Defined at:
 16133 ;;		line 2540 in file "usb_device.c"
 16134 ;; Parameters:    Size  Location     Type
 16135 ;;		None
 16136 ;; Auto vars:     Size  Location     Type
 16137 ;;		None
 16138 ;; Return value:  Size  Location     Type
 16139 ;;                  1    wreg      void 
 16140 ;; Registers used:
 16141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16142 ;; Tracked objects:
 16143 ;;		On entry : 0/0
 16144 ;;		On exit  : 0/0
 16145 ;;		Unchanged: 0/0
 16146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16151 ;;Total ram usage:        0 bytes
 16152 ;; Hardware stack levels used:    1
 16153 ;; Hardware stack levels required when called:    2
 16154 ;; This function calls:
 16155 ;;		_USBCtrlTrfRxService
 16156 ;; This function is called by:
 16157 ;;		_USBCtrlEPService
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           	psect	text77
 16162  00746C                     __ptext77:
 16163                           	opt stack 0
 16164  00746C                     _USBCtrlTrfOutHandler:
 16165                           	opt stack 26
 16166                           
 16167                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16168                           
 16169                           ;incstack = 0
 16170  00746C  0E02               	movlw	2
 16171  00746E  0100               	movlb	0	; () banked
 16172  007470  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16173  007472  A4D8               	btfss	status,2,c
 16174  007474  D003               	goto	l320
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16178  007476  ECA7  F021         	call	_USBCtrlTrfRxService	;wreg free
 16179                           
 16180                           ;usb_device.c: 2545: }
 16181  00747A  0012               	return	
 16182  00747C                     l320:
 16183                           
 16184                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16185  00747C  0E00               	movlw	0
 16186  00747E  0100               	movlb	0	; () banked
 16187  007480  6FF6               	movwf	_controlTransferState& (0+255),b
 16188                           
 16189                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16190  007482  0101               	movlb	1	; () banked
 16191  007484  5191               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16192  007486  A4D8               	btfss	status,2,c
 16193  007488  D020               	goto	l322
 16194                           
 16195                           ; BSR set to: 1
 16196                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16197  00748A  0100               	movlb	0	; () banked
 16198  00748C  EE20 F001          	lfsr	2,1
 16199  007490  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16200  007492  26D9               	addwf	fsr2l,f,c
 16201  007494  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16202  007496  22DA               	addwfc	fsr2h,f,c
 16203  007498  0E08               	movlw	8
 16204  00749A  6EDF               	movwf	indf2,c
 16205                           
 16206                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16207  00749C  EE20 F002          	lfsr	2,2
 16208  0074A0  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16209  0074A2  26D9               	addwf	fsr2l,f,c
 16210  0074A4  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16211  0074A6  22DA               	addwfc	fsr2h,f,c
 16212  0074A8  0E30               	movlw	48
 16213  0074AA  6EDE               	movwf	postinc2,c
 16214  0074AC  0E0D               	movlw	13
 16215  0074AE  6EDD               	movwf	postdec2,c
 16216                           
 16217                           ; BSR set to: 0
 16218                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16219  0074B0  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16220  0074B4  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16221  0074B8  0E0C               	movlw	12
 16222  0074BA  6EDF               	movwf	indf2,c
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16226  0074BC  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16227  0074C0  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16228  0074C4  0E00               	movlw	0
 16229  0074C6  8EDB               	bsf	plusw2,7,c
 16230                           
 16231                           ;usb_device.c: 2563: }
 16232  0074C8  0012               	return	
 16233  0074CA                     l322:
 16234                           
 16235                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16236                           
 16237                           ; BSR set to: 0
 16238  0074CA  0E00               	movlw	0
 16239  0074CC  0101               	movlb	1	; () banked
 16240  0074CE  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16241                           
 16242                           ; BSR set to: 1
 16243  0074D0  0012               	return	
 16244  0074D2                     __end_of_USBCtrlTrfOutHandler:
 16245                           	opt stack 0
 16246                           tosu	equ	0xFFF
 16247                           tosh	equ	0xFFE
 16248                           tosl	equ	0xFFD
 16249                           pclath	equ	0xFFA
 16250                           tblptru	equ	0xFF8
 16251                           tblptrh	equ	0xFF7
 16252                           tblptrl	equ	0xFF6
 16253                           tablat	equ	0xFF5
 16254                           prodh	equ	0xFF4
 16255                           prodl	equ	0xFF3
 16256                           intcon	equ	0xFF2
 16257                           intcon2	equ	0xFF1
 16258                           intcon3	equ	0xFF0
 16259                           indf0	equ	0xFEF
 16260                           postinc0	equ	0xFEE
 16261                           fsr0h	equ	0xFEA
 16262                           fsr0l	equ	0xFE9
 16263                           wreg	equ	0xFE8
 16264                           indf1	equ	0xFE7
 16265                           postdec1	equ	0xFE5
 16266                           plusw1	equ	0xFE3
 16267                           fsr1h	equ	0xFE2
 16268                           fsr1l	equ	0xFE1
 16269                           indf2	equ	0xFDF
 16270                           postinc2	equ	0xFDE
 16271                           postdec2	equ	0xFDD
 16272                           plusw2	equ	0xFDB
 16273                           fsr2h	equ	0xFDA
 16274                           fsr2l	equ	0xFD9
 16275                           status	equ	0xFD8
 16276                           
 16277 ;; *************** function _USBCtrlTrfRxService *****************
 16278 ;; Defined at:
 16279 ;;		line 1854 in file "usb_device.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16284 ;;  i               1    0[COMRAM] unsigned char 
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      void 
 16287 ;; Registers used:
 16288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16298 ;;Total ram usage:        2 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    1
 16301 ;; This function calls:
 16302 ;;		_USBCtrlEPAllowStatusStage
 16303 ;; This function is called by:
 16304 ;;		_USBCtrlTrfOutHandler
 16305 ;; This function uses a non-reentrant model
 16306 ;;
 16307                           
 16308                           	psect	text78
 16309  00434E                     __ptext78:
 16310                           	opt stack 0
 16311  00434E                     _USBCtrlTrfRxService:
 16312                           	opt stack 26
 16313                           
 16314                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16315                           
 16316                           ;incstack = 0
 16317  00434E  0100               	movlb	0	; () banked
 16318  004350  EE20 F001          	lfsr	2,1
 16319  004354  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16320  004356  26D9               	addwf	fsr2l,f,c
 16321  004358  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16322  00435A  22DA               	addwfc	fsr2h,f,c
 16323  00435C  50DF               	movf	indf2,w,c
 16324  00435E  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16328  004360  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16329  004362  0101               	movlb	1	; () banked
 16330  004364  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16331  004366  0E00               	movlw	0
 16332  004368  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16333  00436A  A0D8               	btfss	status,0,c
 16334                           
 16335                           ; BSR set to: 1
 16336                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16337  00436C  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16338                           
 16339                           ; BSR set to: 1
 16340                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16341                           
 16342                           ; BSR set to: 1
 16343  004370  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16344  004372  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16345  004374  0E00               	movlw	0
 16346  004376  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16347                           
 16348                           ; BSR set to: 1
 16349                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16350  004378  0E00               	movlw	0
 16351  00437A  6E01               	movwf	USBCtrlTrfRxService@i,c
 16352  00437C  D011               	goto	l248
 16353  00437E                     
 16354                           ; BSR set to: 1
 16355                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16356                           
 16357                           ; BSR set to: 1
 16358  00437E  5001               	movf	USBCtrlTrfRxService@i,w,c
 16359  004380  0D01               	mullw	1
 16360  004382  0E38               	movlw	56
 16361  004384  24F3               	addwf	prodl,w,c
 16362  004386  6ED9               	movwf	fsr2l,c
 16363  004388  0E0D               	movlw	13
 16364  00438A  20F4               	addwfc	prodh,w,c
 16365  00438C  6EDA               	movwf	fsr2h,c
 16366  00438E  C131  FFE1         	movff	_outPipes,fsr1l
 16367  004392  C132  FFE2         	movff	_outPipes+1,fsr1h
 16368  004396  CFDF FFE7          	movff	indf2,indf1
 16369                           
 16370                           ; BSR set to: 1
 16371  00439A  4B31               	infsnz	_outPipes& (0+255),f,b
 16372  00439C  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16373                           
 16374                           ; BSR set to: 1
 16375  00439E  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16376  0043A0                     l248:
 16377                           
 16378                           ; BSR set to: 1
 16379                           
 16380                           ; BSR set to: 1
 16381  0043A0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16382  0043A2  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16383  0043A4  A0D8               	btfss	status,0,c
 16384  0043A6  D7EB               	goto	l249
 16385                           
 16386                           ; BSR set to: 1
 16387                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16388                           
 16389                           ; BSR set to: 1
 16390  0043A8  5135               	movf	(_outPipes+4)& (0+255),w,b
 16391  0043AA  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16392  0043AC  B4D8               	btfsc	status,2,c
 16393  0043AE  D033               	goto	l251
 16394                           
 16395                           ; BSR set to: 1
 16396                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16397  0043B0  0100               	movlb	0	; () banked
 16398  0043B2  EE20 F001          	lfsr	2,1
 16399  0043B6  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16400  0043B8  26D9               	addwf	fsr2l,f,c
 16401  0043BA  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16402  0043BC  22DA               	addwfc	fsr2h,f,c
 16403  0043BE  0E08               	movlw	8
 16404  0043C0  6EDF               	movwf	indf2,c
 16405                           
 16406                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16407  0043C2  EE20 F002          	lfsr	2,2
 16408  0043C6  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16409  0043C8  26D9               	addwf	fsr2l,f,c
 16410  0043CA  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16411  0043CC  22DA               	addwfc	fsr2h,f,c
 16412  0043CE  0E38               	movlw	56
 16413  0043D0  6EDE               	movwf	postinc2,c
 16414  0043D2  0E0D               	movlw	13
 16415  0043D4  6EDD               	movwf	postdec2,c
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16419  0043D6  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16420  0043DA  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16421  0043DE  BCDF               	btfsc	indf2,6,c
 16422  0043E0  D00D               	goto	l252
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16426  0043E2  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16427  0043E6  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16428  0043EA  0E48               	movlw	72
 16429  0043EC  6EDF               	movwf	indf2,c
 16430                           
 16431                           ; BSR set to: 0
 16432                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16433  0043EE  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16434  0043F2  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16435  0043F6  0E00               	movlw	0
 16436  0043F8  8EDB               	bsf	plusw2,7,c
 16437                           
 16438                           ;usb_device.c: 1891: }
 16439  0043FA  0012               	return	
 16440  0043FC                     l252:
 16441                           
 16442                           ; BSR set to: 0
 16443                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16444                           
 16445                           ; BSR set to: 0
 16446  0043FC  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16447  004400  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16448  004404  0E08               	movlw	8
 16449  004406  6EDF               	movwf	indf2,c
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16453  004408  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16454  00440C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16455  004410  0E00               	movlw	0
 16456  004412  8EDB               	bsf	plusw2,7,c
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16460  004414  0012               	return	
 16461  004416                     l251:
 16462                           
 16463                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16464                           
 16465                           ; BSR set to: 0
 16466  004416  0100               	movlb	0	; () banked
 16467  004418  EE20 F001          	lfsr	2,1
 16468  00441C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16469  00441E  26D9               	addwf	fsr2l,f,c
 16470  004420  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16471  004422  22DA               	addwfc	fsr2h,f,c
 16472  004424  0E08               	movlw	8
 16473  004426  6EDF               	movwf	indf2,c
 16474                           
 16475                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16476  004428  EE20 F002          	lfsr	2,2
 16477  00442C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16478  00442E  26D9               	addwf	fsr2l,f,c
 16479  004430  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16480  004432  22DA               	addwfc	fsr2h,f,c
 16481  004434  0E30               	movlw	48
 16482  004436  6EDE               	movwf	postinc2,c
 16483  004438  0E0D               	movlw	13
 16484  00443A  6EDD               	movwf	postdec2,c
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16488  00443C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16489  004440  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16490  004444  0E04               	movlw	4
 16491  004446  6EDF               	movwf	indf2,c
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16495  004448  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16496  00444C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16497  004450  0E00               	movlw	0
 16498  004452  8EDB               	bsf	plusw2,7,c
 16499                           
 16500                           ; BSR set to: 0
 16501                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16502                           
 16503                           ; BSR set to: 0
 16504  004454  0101               	movlb	1	; () banked
 16505  004456  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16506                           
 16507                           ; BSR set to: 1
 16508                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16509  004458  0100               	movlb	0	; () banked
 16510  00445A  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16511  00445C  A4D8               	btfss	status,2,c
 16512  00445E  0012               	return	
 16513                           
 16514                           ; BSR set to: 0
 16515                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16516  004460  ECD5  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16517  004464  0012               	return	
 16518  004466                     __end_of_USBCtrlTrfRxService:
 16519                           	opt stack 0
 16520                           tosu	equ	0xFFF
 16521                           tosh	equ	0xFFE
 16522                           tosl	equ	0xFFD
 16523                           pclath	equ	0xFFA
 16524                           tblptru	equ	0xFF8
 16525                           tblptrh	equ	0xFF7
 16526                           tblptrl	equ	0xFF6
 16527                           tablat	equ	0xFF5
 16528                           prodh	equ	0xFF4
 16529                           prodl	equ	0xFF3
 16530                           intcon	equ	0xFF2
 16531                           intcon2	equ	0xFF1
 16532                           intcon3	equ	0xFF0
 16533                           indf0	equ	0xFEF
 16534                           postinc0	equ	0xFEE
 16535                           fsr0h	equ	0xFEA
 16536                           fsr0l	equ	0xFE9
 16537                           wreg	equ	0xFE8
 16538                           indf1	equ	0xFE7
 16539                           postdec1	equ	0xFE5
 16540                           plusw1	equ	0xFE3
 16541                           fsr1h	equ	0xFE2
 16542                           fsr1l	equ	0xFE1
 16543                           indf2	equ	0xFDF
 16544                           postinc2	equ	0xFDE
 16545                           postdec2	equ	0xFDD
 16546                           plusw2	equ	0xFDB
 16547                           fsr2h	equ	0xFDA
 16548                           fsr2l	equ	0xFD9
 16549                           status	equ	0xFD8
 16550                           
 16551 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16552 ;; Defined at:
 16553 ;;		line 1418 in file "usb_device.c"
 16554 ;; Parameters:    Size  Location     Type
 16555 ;;		None
 16556 ;; Auto vars:     Size  Location     Type
 16557 ;;		None
 16558 ;; Return value:  Size  Location     Type
 16559 ;;                  1    wreg      void 
 16560 ;; Registers used:
 16561 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16562 ;; Tracked objects:
 16563 ;;		On entry : 0/0
 16564 ;;		On exit  : 0/0
 16565 ;;		Unchanged: 0/0
 16566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16571 ;;Total ram usage:        0 bytes
 16572 ;; Hardware stack levels used:    1
 16573 ;; This function calls:
 16574 ;;		Nothing
 16575 ;; This function is called by:
 16576 ;;		_USBDeviceTasks
 16577 ;;		_USBCtrlEPServiceComplete
 16578 ;;		_USBCtrlTrfRxService
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           	psect	text79
 16583  005BAA                     __ptext79:
 16584                           	opt stack 0
 16585  005BAA                     _USBCtrlEPAllowStatusStage:
 16586                           	opt stack 26
 16587                           
 16588                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 16589                           
 16590                           ;incstack = 0
 16591  005BAA  0100               	movlb	0	; () banked
 16592  005BAC  51F1               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 16593  005BAE  A4D8               	btfss	status,2,c
 16594  005BB0  0012               	return	
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 16598  005BB2  0E01               	movlw	1
 16599  005BB4  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16600                           
 16601                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 16602  005BB6  51F0               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 16603  005BB8  A4D8               	btfss	status,2,c
 16604  005BBA  0012               	return	
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 16608  005BBC  0E01               	movlw	1
 16609  005BBE  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;usb_device.c: 1434: if(controlTransferState == 2)
 16613  005BC0  0E02               	movlw	2
 16614  005BC2  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16615  005BC4  A4D8               	btfss	status,2,c
 16616  005BC6  D015               	goto	l202
 16617                           
 16618                           ; BSR set to: 0
 16619                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 16620  005BC8  EE20 F001          	lfsr	2,1
 16621  005BCC  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16622  005BCE  26D9               	addwf	fsr2l,f,c
 16623  005BD0  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16624  005BD2  22DA               	addwfc	fsr2h,f,c
 16625  005BD4  0E00               	movlw	0
 16626  005BD6  6EDF               	movwf	indf2,c
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16630  005BD8  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16631  005BDC  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16632  005BE0  0E48               	movlw	72
 16633  005BE2  6EDF               	movwf	indf2,c
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16637  005BE4  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16638  005BE8  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16639  005BEC  0E00               	movlw	0
 16640  005BEE  8EDB               	bsf	plusw2,7,c
 16641                           
 16642                           ;usb_device.c: 1439: }
 16643  005BF0  0012               	return	
 16644  005BF2                     l202:
 16645                           
 16646                           ; BSR set to: 0
 16647                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 16648                           
 16649                           ; BSR set to: 0
 16650  005BF2  05F6               	decf	_controlTransferState& (0+255),w,b
 16651  005BF4  A4D8               	btfss	status,2,c
 16652  005BF6  0012               	return	
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 16656  005BF8  0E00               	movlw	0
 16657  005BFA  0101               	movlb	1	; () banked
 16658  005BFC  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16659                           
 16660                           ; BSR set to: 1
 16661                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 16662  005BFE  0100               	movlb	0	; () banked
 16663  005C00  EE20 F001          	lfsr	2,1
 16664  005C04  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16665  005C06  26D9               	addwf	fsr2l,f,c
 16666  005C08  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16667  005C0A  22DA               	addwfc	fsr2h,f,c
 16668  005C0C  0E08               	movlw	8
 16669  005C0E  6EDF               	movwf	indf2,c
 16670                           
 16671                           ; BSR set to: 0
 16672                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16673  005C10  EE20 F002          	lfsr	2,2
 16674  005C14  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16675  005C16  26D9               	addwf	fsr2l,f,c
 16676  005C18  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16677  005C1A  22DA               	addwfc	fsr2h,f,c
 16678  005C1C  0E30               	movlw	48
 16679  005C1E  6EDE               	movwf	postinc2,c
 16680  005C20  0E0D               	movlw	13
 16681  005C22  6EDD               	movwf	postdec2,c
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16685  005C24  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16686  005C28  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16687  005C2C  0E04               	movlw	4
 16688  005C2E  6EDF               	movwf	indf2,c
 16689                           
 16690                           ; BSR set to: 0
 16691                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16692  005C30  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16693  005C34  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16694  005C38  0E00               	movlw	0
 16695  005C3A  8EDB               	bsf	plusw2,7,c
 16696                           
 16697                           ; BSR set to: 0
 16698                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 16699  005C3C  0E01               	movlw	1
 16700  005C3E  0101               	movlb	1	; () banked
 16701  005C40  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16702                           
 16703                           ; BSR set to: 1
 16704                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 16705  005C42  0100               	movlb	0	; () banked
 16706  005C44  EE20 F001          	lfsr	2,1
 16707  005C48  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16708  005C4A  26D9               	addwf	fsr2l,f,c
 16709  005C4C  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16710  005C4E  22DA               	addwfc	fsr2h,f,c
 16711  005C50  0E08               	movlw	8
 16712  005C52  6EDF               	movwf	indf2,c
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16716  005C54  EE20 F002          	lfsr	2,2
 16717  005C58  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16718  005C5A  26D9               	addwf	fsr2l,f,c
 16719  005C5C  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16720  005C5E  22DA               	addwfc	fsr2h,f,c
 16721  005C60  0E30               	movlw	48
 16722  005C62  6EDE               	movwf	postinc2,c
 16723  005C64  0E0D               	movlw	13
 16724  005C66  6EDD               	movwf	postdec2,c
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16728  005C68  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16729  005C6C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16730  005C70  0E80               	movlw	128
 16731  005C72  6EDF               	movwf	indf2,c
 16732                           
 16733                           ; BSR set to: 0
 16734                           
 16735                           ; BSR set to: 0
 16736                           
 16737                           ; BSR set to: 0
 16738  005C74  0012               	return	
 16739  005C76                     __end_of_USBCtrlEPAllowStatusStage:
 16740                           	opt stack 0
 16741                           tosu	equ	0xFFF
 16742                           tosh	equ	0xFFE
 16743                           tosl	equ	0xFFD
 16744                           pclath	equ	0xFFA
 16745                           tblptru	equ	0xFF8
 16746                           tblptrh	equ	0xFF7
 16747                           tblptrl	equ	0xFF6
 16748                           tablat	equ	0xFF5
 16749                           prodh	equ	0xFF4
 16750                           prodl	equ	0xFF3
 16751                           intcon	equ	0xFF2
 16752                           intcon2	equ	0xFF1
 16753                           intcon3	equ	0xFF0
 16754                           indf0	equ	0xFEF
 16755                           postinc0	equ	0xFEE
 16756                           fsr0h	equ	0xFEA
 16757                           fsr0l	equ	0xFE9
 16758                           wreg	equ	0xFE8
 16759                           indf1	equ	0xFE7
 16760                           postdec1	equ	0xFE5
 16761                           plusw1	equ	0xFE3
 16762                           fsr1h	equ	0xFE2
 16763                           fsr1l	equ	0xFE1
 16764                           indf2	equ	0xFDF
 16765                           postinc2	equ	0xFDE
 16766                           postdec2	equ	0xFDD
 16767                           plusw2	equ	0xFDB
 16768                           fsr2h	equ	0xFDA
 16769                           fsr2l	equ	0xFD9
 16770                           status	equ	0xFD8
 16771                           
 16772 ;; *************** function _USBCtrlTrfInHandler *****************
 16773 ;; Defined at:
 16774 ;;		line 2594 in file "usb_device.c"
 16775 ;; Parameters:    Size  Location     Type
 16776 ;;		None
 16777 ;; Auto vars:     Size  Location     Type
 16778 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16779 ;; Return value:  Size  Location     Type
 16780 ;;                  1    wreg      void 
 16781 ;; Registers used:
 16782 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16783 ;; Tracked objects:
 16784 ;;		On entry : 0/0
 16785 ;;		On exit  : 0/0
 16786 ;;		Unchanged: 0/0
 16787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16792 ;;Total ram usage:        1 bytes
 16793 ;; Hardware stack levels used:    1
 16794 ;; Hardware stack levels required when called:    1
 16795 ;; This function calls:
 16796 ;;		_USBCtrlTrfTxService
 16797 ;; This function is called by:
 16798 ;;		_USBCtrlEPService
 16799 ;; This function uses a non-reentrant model
 16800 ;;
 16801                           
 16802                           	psect	text80
 16803  005C76                     __ptext80:
 16804                           	opt stack 0
 16805  005C76                     _USBCtrlTrfInHandler:
 16806                           	opt stack 27
 16807                           
 16808                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;incstack = 0
 16812  005C76  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16813  005C7A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16814  005C7E  0100               	movlb	0	; () banked
 16815  005C80  0E00               	movlw	0
 16816  005C82  BCDF               	btfsc	indf2,6,c
 16817  005C84  0E01               	movlw	1
 16818  005C86  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 16822  005C88  0E04               	movlw	4
 16823  005C8A  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 16824  005C8C  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 16825  005C8E  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16826  005C90  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 16830  005C92  0E08               	movlw	8
 16831  005C94  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 16832  005C96  A4D8               	btfss	status,2,c
 16833  005C98  D00D               	goto	l329
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 16837  005C9A  010D               	movlb	13	; () banked
 16838  005C9C  5132               	movf	50,w,b	;volatile
 16839  005C9E  0B7F               	andlw	127
 16840  005CA0  010F               	movlb	15	; () banked
 16841  005CA2  6F38               	movwf	56,b	;volatile
 16842                           
 16843                           ; BSR set to: 15
 16844                           ;usb_device.c: 2609: if(UADDR != 0u)
 16845  005CA4  5138               	movf	56,w,b	;volatile
 16846  005CA6  B4D8               	btfsc	status,2,c
 16847  005CA8  D002               	goto	l328
 16848                           
 16849                           ; BSR set to: 15
 16850                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 16851  005CAA  0E10               	movlw	16
 16852  005CAC  D001               	goto	L15
 16853  005CAE                     l328:
 16854                           
 16855                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 16856                           
 16857                           ; BSR set to: 0
 16858  005CAE  0E04               	movlw	4
 16859  005CB0                     L15:
 16860  005CB0  0100               	movlb	0	; () banked
 16861  005CB2  6FF8               	movwf	_USBDeviceState& (0+255),b
 16862  005CB4                     l329:
 16863                           
 16864                           ; BSR set to: 0
 16865                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 16866                           
 16867                           ; BSR set to: 0
 16868                           
 16869                           ; BSR set to: 0
 16870  005CB4  05F6               	decf	_controlTransferState& (0+255),w,b
 16871  005CB6  A4D8               	btfss	status,2,c
 16872  005CB8  D03B               	goto	l330
 16873                           
 16874                           ; BSR set to: 0
 16875                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 16876  005CBA  EE20 F002          	lfsr	2,2
 16877  005CBE  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16878  005CC0  26D9               	addwf	fsr2l,f,c
 16879  005CC2  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16880  005CC4  22DA               	addwfc	fsr2h,f,c
 16881  005CC6  0E38               	movlw	56
 16882  005CC8  6EDE               	movwf	postinc2,c
 16883  005CCA  0E0D               	movlw	13
 16884  005CCC  6EDD               	movwf	postdec2,c
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 16888  005CCE  EC33  F02C         	call	_USBCtrlTrfTxService	;wreg free
 16889                           
 16890                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 16891  005CD2  0E02               	movlw	2
 16892  005CD4  0100               	movlb	0	; () banked
 16893  005CD6  19F7               	xorwf	_shortPacketStatus& (0+255),w,b
 16894  005CD8  A4D8               	btfss	status,2,c
 16895  005CDA  D00D               	goto	l331
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 16899  005CDC  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16900  005CE0  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16901  005CE4  0E04               	movlw	4
 16902  005CE6  6EDF               	movwf	indf2,c
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16906  005CE8  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16907  005CEC  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16908  005CF0  0E00               	movlw	0
 16909  005CF2  8EDB               	bsf	plusw2,7,c
 16910                           
 16911                           ;usb_device.c: 2635: }
 16912  005CF4  0012               	return	
 16913  005CF6                     l331:
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 16917                           
 16918                           ; BSR set to: 0
 16919  005CF6  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 16920  005CF8  A4D8               	btfss	status,2,c
 16921  005CFA  D00D               	goto	l333
 16922                           
 16923                           ; BSR set to: 0
 16924                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 16925  005CFC  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16926  005D00  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16927  005D04  0E48               	movlw	72
 16928  005D06  6EDF               	movwf	indf2,c
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16932  005D08  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16933  005D0C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16934  005D10  0E00               	movlw	0
 16935  005D12  8EDB               	bsf	plusw2,7,c
 16936                           
 16937                           ;usb_device.c: 2642: }
 16938  005D14  0012               	return	
 16939  005D16                     l333:
 16940                           
 16941                           ; BSR set to: 0
 16942                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 16943                           
 16944                           ; BSR set to: 0
 16945  005D16  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16946  005D1A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16947  005D1E  0E08               	movlw	8
 16948  005D20  6EDF               	movwf	indf2,c
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16952  005D22  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16953  005D26  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16954  005D2A  0E00               	movlw	0
 16955  005D2C  8EDB               	bsf	plusw2,7,c
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 16959                           
 16960                           ; BSR set to: 0
 16961  005D2E  0012               	return	
 16962  005D30                     l330:
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 16966  005D30  0101               	movlb	1	; () banked
 16967  005D32  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 16968                           
 16969                           ; BSR set to: 1
 16970                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 16971                           
 16972                           ; BSR set to: 1
 16973  005D34  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 16977                           
 16978                           ; BSR set to: 1
 16979  005D36  0E00               	movlw	0
 16980  005D38  0100               	movlb	0	; () banked
 16981  005D3A  6FF6               	movwf	_controlTransferState& (0+255),b
 16982  005D3C  0012               	return	
 16983  005D3E                     __end_of_USBCtrlTrfInHandler:
 16984                           	opt stack 0
 16985                           tosu	equ	0xFFF
 16986                           tosh	equ	0xFFE
 16987                           tosl	equ	0xFFD
 16988                           pclath	equ	0xFFA
 16989                           tblptru	equ	0xFF8
 16990                           tblptrh	equ	0xFF7
 16991                           tblptrl	equ	0xFF6
 16992                           tablat	equ	0xFF5
 16993                           prodh	equ	0xFF4
 16994                           prodl	equ	0xFF3
 16995                           intcon	equ	0xFF2
 16996                           intcon2	equ	0xFF1
 16997                           intcon3	equ	0xFF0
 16998                           indf0	equ	0xFEF
 16999                           postinc0	equ	0xFEE
 17000                           fsr0h	equ	0xFEA
 17001                           fsr0l	equ	0xFE9
 17002                           wreg	equ	0xFE8
 17003                           indf1	equ	0xFE7
 17004                           postdec1	equ	0xFE5
 17005                           plusw1	equ	0xFE3
 17006                           fsr1h	equ	0xFE2
 17007                           fsr1l	equ	0xFE1
 17008                           indf2	equ	0xFDF
 17009                           postinc2	equ	0xFDE
 17010                           postdec2	equ	0xFDD
 17011                           plusw2	equ	0xFDB
 17012                           fsr2h	equ	0xFDA
 17013                           fsr2l	equ	0xFD9
 17014                           status	equ	0xFD8
 17015                           
 17016 ;; *************** function _USBCtrlTrfTxService *****************
 17017 ;; Defined at:
 17018 ;;		line 1773 in file "usb_device.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;		None
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  1    wreg      void 
 17025 ;; Registers used:
 17026 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17036 ;;Total ram usage:        1 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; This function calls:
 17039 ;;		Nothing
 17040 ;; This function is called by:
 17041 ;;		_USBCtrlEPAllowDataStage
 17042 ;;		_USBCtrlTrfInHandler
 17043 ;; This function uses a non-reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text81
 17047  005866                     __ptext81:
 17048                           	opt stack 0
 17049  005866                     _USBCtrlTrfTxService:
 17050                           	opt stack 25
 17051                           
 17052                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;incstack = 0
 17056  005866  0E08               	movlw	8
 17057  005868  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17058                           
 17059                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17060  00586A  0100               	movlb	0	; () banked
 17061  00586C  51D0               	movf	(_inPipes+5)& (0+255),w,b
 17062  00586E  E110               	bnz	l11271
 17063  005870  0E08               	movlw	8
 17064  005872  5DCF               	subwf	(_inPipes+4)& (0+255),w,b
 17065  005874  B0D8               	btfsc	status,0,c
 17066  005876  D00C               	goto	l235
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17070  005878  C0CF  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17074  00587C  51F7               	movf	_shortPacketStatus& (0+255),w,b
 17075  00587E  A4D8               	btfss	status,2,c
 17076  005880  D002               	goto	l233
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17080  005882  0E01               	movlw	1
 17081  005884  D004               	goto	L16
 17082  005886                     l233:
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17086                           
 17087                           ; BSR set to: 0
 17088  005886  05F7               	decf	_shortPacketStatus& (0+255),w,b
 17089  005888  A4D8               	btfss	status,2,c
 17090  00588A  D002               	goto	l235
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17094  00588C  0E02               	movlw	2
 17095  00588E                     L16:
 17096  00588E  6FF7               	movwf	_shortPacketStatus& (0+255),b
 17097  005890                     l235:
 17098  005890                     l11271:
 17099                           
 17100                           ; BSR set to: 0
 17101                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17102  005890  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17103  005892  5FCF               	subwf	(_inPipes+4)& (0+255),f,b
 17104  005894  0E00               	movlw	0
 17105  005896  5BD0               	subwfb	(_inPipes+5)& (0+255),f,b
 17106                           
 17107                           ; BSR set to: 0
 17108                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17109  005898  EE20 F001          	lfsr	2,1
 17110  00589C  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17111  00589E  26D9               	addwf	fsr2l,f,c
 17112  0058A0  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17113  0058A2  22DA               	addwfc	fsr2h,f,c
 17114  0058A4  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17118  0058A8  0E38               	movlw	56
 17119  0058AA  0101               	movlb	1	; () banked
 17120  0058AC  6F88               	movwf	_pDst& (0+255),b
 17121  0058AE  0E0D               	movlw	13
 17122  0058B0  6F89               	movwf	(_pDst+1)& (0+255),b
 17123                           
 17124                           ; BSR set to: 1
 17125                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17126  0058B2  0100               	movlb	0	; () banked
 17127  0058B4  A1CE               	btfss	(_inPipes+3)& (0+255),0,b
 17128  0058B6  D01D               	goto	l237
 17129  0058B8  D03C               	goto	l241
 17130  0058BA                     
 17131                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17132                           
 17133                           ; BSR set to: 0
 17134  0058BA  C0CB  FFF6         	movff	_inPipes,tblptrl
 17135  0058BE  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17136  0058C2  6AF8               	clrf	tblptru,c
 17137  0058C4  C188  FFD9         	movff	_pDst,fsr2l
 17138  0058C8  C189  FFDA         	movff	_pDst+1,fsr2h
 17139  0058CC  0E0E               	movlw	(high __ramtop+-1)
 17140  0058CE  64F7               	cpfsgt	tblptrh,c
 17141  0058D0  D003               	bra	u8177
 17142  0058D2  0008               	tblrd		*
 17143  0058D4  50F5               	movf	tablat,w,c
 17144  0058D6  D005               	bra	u8170
 17145  0058D8                     u8177:
 17146  0058D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17147  0058DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17148  0058E0  50EF               	movf	indf0,w,c
 17149  0058E2                     u8170:
 17150  0058E2  6EDF               	movwf	indf2,c
 17151  0058E4  0100               	movlb	0	; () banked
 17152  0058E6  4BCB               	infsnz	_inPipes& (0+255),f,b
 17153  0058E8  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17154                           
 17155                           ; BSR set to: 0
 17156  0058EA  0101               	movlb	1	; () banked
 17157  0058EC  4B88               	infsnz	_pDst& (0+255),f,b
 17158  0058EE  2B89               	incf	(_pDst+1)& (0+255),f,b
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;usb_device.c: 1816: byteToSend--;
 17162  0058F0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17163  0058F2                     l237:
 17164                           
 17165                           ; BSR set to: 1
 17166  0058F2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17167  0058F4  B4D8               	btfsc	status,2,c
 17168  0058F6  0012               	return	
 17169  0058F8  D7E0               	goto	l238
 17170  0058FA                     
 17171                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17172  0058FA  C0CB  FFF6         	movff	_inPipes,tblptrl
 17173  0058FE  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17174  005902  6AF8               	clrf	tblptru,c
 17175  005904  C188  FFD9         	movff	_pDst,fsr2l
 17176  005908  C189  FFDA         	movff	_pDst+1,fsr2h
 17177  00590C  0E0E               	movlw	(high __ramtop+-1)
 17178  00590E  64F7               	cpfsgt	tblptrh,c
 17179  005910  D003               	bra	u8197
 17180  005912  0008               	tblrd		*
 17181  005914  50F5               	movf	tablat,w,c
 17182  005916  D005               	bra	u8190
 17183  005918                     u8197:
 17184  005918  CFF6 FFE9          	movff	tblptrl,fsr0l
 17185  00591C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17186  005920  50EF               	movf	indf0,w,c
 17187  005922                     u8190:
 17188  005922  6EDF               	movwf	indf2,c
 17189  005924  0100               	movlb	0	; () banked
 17190  005926  4BCB               	infsnz	_inPipes& (0+255),f,b
 17191  005928  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17192                           
 17193                           ; BSR set to: 0
 17194  00592A  0101               	movlb	1	; () banked
 17195  00592C  4B88               	infsnz	_pDst& (0+255),f,b
 17196  00592E  2B89               	incf	(_pDst+1)& (0+255),f,b
 17197                           
 17198                           ; BSR set to: 1
 17199                           ;usb_device.c: 1824: byteToSend--;
 17200  005930  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17201  005932                     l241:
 17202                           
 17203                           ; BSR set to: 1
 17204  005932  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17205  005934  B4D8               	btfsc	status,2,c
 17206  005936  0012               	return	
 17207  005938  D7E0               	goto	l242
 17208  00593A                     __end_of_USBCtrlTrfTxService:
 17209                           	opt stack 0
 17210                           tosu	equ	0xFFF
 17211                           tosh	equ	0xFFE
 17212                           tosl	equ	0xFFD
 17213                           pclath	equ	0xFFA
 17214                           tblptru	equ	0xFF8
 17215                           tblptrh	equ	0xFF7
 17216                           tblptrl	equ	0xFF6
 17217                           tablat	equ	0xFF5
 17218                           prodh	equ	0xFF4
 17219                           prodl	equ	0xFF3
 17220                           intcon	equ	0xFF2
 17221                           intcon2	equ	0xFF1
 17222                           intcon3	equ	0xFF0
 17223                           indf0	equ	0xFEF
 17224                           postinc0	equ	0xFEE
 17225                           fsr0h	equ	0xFEA
 17226                           fsr0l	equ	0xFE9
 17227                           wreg	equ	0xFE8
 17228                           indf1	equ	0xFE7
 17229                           postdec1	equ	0xFE5
 17230                           plusw1	equ	0xFE3
 17231                           fsr1h	equ	0xFE2
 17232                           fsr1l	equ	0xFE1
 17233                           indf2	equ	0xFDF
 17234                           postinc2	equ	0xFDE
 17235                           postdec2	equ	0xFDD
 17236                           plusw2	equ	0xFDB
 17237                           fsr2h	equ	0xFDA
 17238                           fsr2l	equ	0xFD9
 17239                           status	equ	0xFD8
 17240                           
 17241 ;; *************** function _APP_DeviceMSDTasks *****************
 17242 ;; Defined at:
 17243 ;;		line 110 in file "app_device_msd.c"
 17244 ;; Parameters:    Size  Location     Type
 17245 ;;		None
 17246 ;; Auto vars:     Size  Location     Type
 17247 ;;		None
 17248 ;; Return value:  Size  Location     Type
 17249 ;;                  1    wreg      void 
 17250 ;; Registers used:
 17251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17252 ;; Tracked objects:
 17253 ;;		On entry : 0/0
 17254 ;;		On exit  : 0/0
 17255 ;;		Unchanged: 0/0
 17256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17261 ;;Total ram usage:        0 bytes
 17262 ;; Hardware stack levels used:    1
 17263 ;; Hardware stack levels required when called:   11
 17264 ;; This function calls:
 17265 ;;		_MSDTasks
 17266 ;; This function is called by:
 17267 ;;		_main
 17268 ;; This function uses a non-reentrant model
 17269 ;;
 17270                           
 17271                           	psect	text82
 17272  008930                     __ptext82:
 17273                           	opt stack 0
 17274  008930                     _APP_DeviceMSDTasks:
 17275                           	opt stack 19
 17276                           
 17277                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17278                           
 17279                           ;incstack = 0
 17280  008930  0E20               	movlw	32
 17281  008932  0100               	movlb	0	; () banked
 17282  008934  61F8               	cpfslt	_USBDeviceState& (0+255),b
 17283  008936  D001               	goto	l1008
 17284  008938  0012               	return	
 17285  00893A                     l1008:
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17289  00893A  B265               	btfsc	3941,1,c	;volatile
 17290  00893C  0012               	return	
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17294                           
 17295                           ; BSR set to: 0
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17299  00893E  EC03  F010         	call	_MSDTasks	;wreg free
 17300  008942  0012               	return		;funcret
 17301  008944                     __end_of_APP_DeviceMSDTasks:
 17302                           	opt stack 0
 17303                           tosu	equ	0xFFF
 17304                           tosh	equ	0xFFE
 17305                           tosl	equ	0xFFD
 17306                           pclath	equ	0xFFA
 17307                           tblptru	equ	0xFF8
 17308                           tblptrh	equ	0xFF7
 17309                           tblptrl	equ	0xFF6
 17310                           tablat	equ	0xFF5
 17311                           prodh	equ	0xFF4
 17312                           prodl	equ	0xFF3
 17313                           intcon	equ	0xFF2
 17314                           intcon2	equ	0xFF1
 17315                           intcon3	equ	0xFF0
 17316                           indf0	equ	0xFEF
 17317                           postinc0	equ	0xFEE
 17318                           fsr0h	equ	0xFEA
 17319                           fsr0l	equ	0xFE9
 17320                           wreg	equ	0xFE8
 17321                           indf1	equ	0xFE7
 17322                           postdec1	equ	0xFE5
 17323                           plusw1	equ	0xFE3
 17324                           fsr1h	equ	0xFE2
 17325                           fsr1l	equ	0xFE1
 17326                           indf2	equ	0xFDF
 17327                           postinc2	equ	0xFDE
 17328                           postdec2	equ	0xFDD
 17329                           plusw2	equ	0xFDB
 17330                           fsr2h	equ	0xFDA
 17331                           fsr2l	equ	0xFD9
 17332                           status	equ	0xFD8
 17333                           
 17334 ;; *************** function _MSDTasks *****************
 17335 ;; Defined at:
 17336 ;;		line 335 in file "usb_device_msd.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;		None
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;  i               1   81[COMRAM] unsigned char 
 17341 ;; Return value:  Size  Location     Type
 17342 ;;                  1    wreg      unsigned char 
 17343 ;; Registers used:
 17344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17351 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17354 ;;Total ram usage:        6 bytes
 17355 ;; Hardware stack levels used:    1
 17356 ;; Hardware stack levels required when called:   10
 17357 ;; This function calls:
 17358 ;;		_MSDProcessCommand
 17359 ;;		_USBStallEndpoint
 17360 ;;		_USBTransferOnePacket
 17361 ;; This function is called by:
 17362 ;;		_APP_DeviceMSDTasks
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text83
 17367  002006                     __ptext83:
 17368                           	opt stack 0
 17369  002006                     _MSDTasks:
 17370                           	opt stack 19
 17371                           
 17372                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17373                           
 17374                           ;incstack = 0
 17375  002006  0E20               	movlw	32
 17376  002008  0100               	movlb	0	; () banked
 17377  00200A  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17378  00200C  A4D8               	btfss	status,2,c
 17379  00200E  0012               	return	
 17380  002010  D115               	goto	l554
 17381  002012                     
 17382                           ; BSR set to: 0
 17383                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17384                           
 17385                           ; BSR set to: 0
 17386  002012  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17387  002014  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17388  002016  B4D8               	btfsc	status,2,c
 17389  002018  D006               	goto	u11530
 17390                           
 17391                           ; BSR set to: 0
 17392  00201A  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17393  00201E  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17394  002022  BEDF               	btfsc	indf2,7,c
 17395  002024  0012               	return	
 17396  002026                     u11530:
 17397                           
 17398                           ; BSR set to: 0
 17399                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17400                           
 17401                           ; BSR set to: 0
 17402  002026  0E00               	movlw	0
 17403  002028  6E52               	movwf	MSDTasks@i,c
 17404  00202A                     l14535:
 17405                           
 17406                           ; BSR set to: 0
 17407  00202A  0E1E               	movlw	30
 17408  00202C  6452               	cpfsgt	MSDTasks@i,c
 17409  00202E  D001               	goto	l559
 17410  002030  D014               	goto	u11550
 17411  002032                     l559:
 17412                           
 17413                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17414                           
 17415                           ; BSR set to: 0
 17416  002032  5052               	movf	MSDTasks@i,w,c
 17417  002034  0D01               	mullw	1
 17418  002036  0E40               	movlw	64
 17419  002038  24F3               	addwf	prodl,w,c
 17420  00203A  6ED9               	movwf	fsr2l,c
 17421  00203C  0E0D               	movlw	13
 17422  00203E  20F4               	addwfc	prodh,w,c
 17423  002040  6EDA               	movwf	fsr2h,c
 17424  002042  5052               	movf	MSDTasks@i,w,c
 17425  002044  0D01               	mullw	1
 17426  002046  0E00               	movlw	low _gblCBW
 17427  002048  24F3               	addwf	prodl,w,c
 17428  00204A  6EE1               	movwf	fsr1l,c
 17429  00204C  0E01               	movlw	high _gblCBW
 17430  00204E  20F4               	addwfc	prodh,w,c
 17431  002050  6EE2               	movwf	fsr1h,c
 17432  002052  CFDF FFE7          	movff	indf2,indf1
 17433  002056  2A52               	incf	MSDTasks@i,f,c
 17434  002058  D7E8               	goto	l14535
 17435  00205A                     u11550:
 17436                           
 17437                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17438  00205A  0100               	movlb	0	; () banked
 17439  00205C  EE20 F001          	lfsr	2,1
 17440  002060  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17441  002062  26D9               	addwf	fsr2l,f,c
 17442  002064  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17443  002066  22DA               	addwfc	fsr2h,f,c
 17444  002068  0E1F               	movlw	31
 17445  00206A  18DE               	xorwf	postinc2,w,c
 17446  00206C  A4D8               	btfss	status,2,c
 17447  00206E  D070               	goto	l561
 17448                           
 17449                           ; BSR set to: 0
 17450  002070  0E55               	movlw	85
 17451  002072  0101               	movlb	1	; () banked
 17452  002074  1900               	xorwf	_gblCBW& (0+255),w,b
 17453  002076  E16C               	bnz	l561
 17454  002078  0E53               	movlw	83
 17455  00207A  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17456  00207C  E169               	bnz	l561
 17457  00207E  0E42               	movlw	66
 17458  002080  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17459  002082  E166               	bnz	l14585
 17460  002084  0E43               	movlw	67
 17461  002086  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17462  002088  A4D8               	btfss	status,2,c
 17463  00208A  D062               	goto	l561
 17464                           
 17465                           ; BSR set to: 1
 17466                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17467  00208C  0E01               	movlw	1
 17468  00208E  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17469                           
 17470                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17471  002090  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17472  002092  A4D8               	btfss	status,2,c
 17473  002094  D052               	goto	l562
 17474                           
 17475                           ; BSR set to: 1
 17476  002096  0E11               	movlw	17
 17477  002098  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17478  00209A  D04F               	goto	l562
 17479                           
 17480                           ; BSR set to: 1
 17481  00209C  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17482  00209E  B4D8               	btfsc	status,2,c
 17483  0020A0  D04C               	goto	l562
 17484                           
 17485                           ; BSR set to: 1
 17486  0020A2  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17487  0020A6  0E3F               	movlw	63
 17488  0020A8  164D               	andwf	??_MSDTasks,f,c
 17489  0020AA  A4D8               	btfss	status,2,c
 17490  0020AC  D046               	goto	l562
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17494  0020AE  0E55               	movlw	85
 17495  0020B0  010D               	movlb	13	; () banked
 17496  0020B2  6F80               	movwf	128,b	;volatile
 17497  0020B4  0E53               	movlw	83
 17498  0020B6  6F81               	movwf	129,b	;volatile
 17499  0020B8  0E42               	movlw	66
 17500  0020BA  6F82               	movwf	130,b	;volatile
 17501  0020BC  0E53               	movlw	83
 17502  0020BE  6F83               	movwf	131,b	;volatile
 17503                           
 17504                           ; BSR set to: 13
 17505                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17506  0020C0  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17507  0020C4  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17508  0020C8  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17509  0020CC  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17510                           
 17511                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17512  0020D0  0E00               	movlw	0
 17513  0020D2  6F88               	movwf	136,b	;volatile
 17514  0020D4  0E00               	movlw	0
 17515  0020D6  6F89               	movwf	137,b	;volatile
 17516  0020D8  0E00               	movlw	0
 17517  0020DA  6F8A               	movwf	138,b	;volatile
 17518  0020DC  0E00               	movlw	0
 17519  0020DE  6F8B               	movwf	139,b	;volatile
 17520                           
 17521                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17522  0020E0  0E00               	movlw	0
 17523  0020E2  6F8C               	movwf	140,b	;volatile
 17524                           
 17525                           ; BSR set to: 13
 17526                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17527  0020E4  0100               	movlb	0	; () banked
 17528  0020E6  69EC               	setf	_MSDCommandState& (0+255),b
 17529                           
 17530                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17531  0020E8  0E00               	movlw	0
 17532  0020EA  6FEB               	movwf	_MSDReadState& (0+255),b
 17533                           
 17534                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17535  0020EC  0E00               	movlw	0
 17536  0020EE  6FEA               	movwf	_MSDWriteState& (0+255),b
 17537                           
 17538                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17539  0020F0  0E00               	movlw	0
 17540  0020F2  6FE9               	movwf	_MSDRetryAttempt& (0+255),b
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17544  0020F4  0E03               	movlw	3
 17545  0020F6  0101               	movlb	1	; () banked
 17546  0020F8  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17547  0020FA  B4D8               	btfsc	status,2,c
 17548  0020FC  D008               	goto	l563
 17549                           
 17550                           ; BSR set to: 1
 17551                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17552  0020FE  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17553  002100  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17554  002102  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17555  002104  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17556                           
 17557                           ; BSR set to: 1
 17558                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17559  002106  0E00               	movlw	0
 17560  002108  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17561                           
 17562                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17563  00210A  0E00               	movlw	0
 17564  00210C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17565  00210E                     l563:
 17566                           
 17567                           ; BSR set to: 1
 17568                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 17569                           
 17570                           ; BSR set to: 1
 17571  00210E  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 17572  002110  D002               	goto	l564
 17573                           
 17574                           ; BSR set to: 1
 17575                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 17576  002112  0E01               	movlw	1
 17577  002114  D001               	goto	L17
 17578  002116                     l564:
 17579                           
 17580                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 17581                           
 17582                           ; BSR set to: 0
 17583  002116  0E02               	movlw	2
 17584  002118                     L17:
 17585  002118  0100               	movlb	0	; () banked
 17586  00211A  6FED               	movwf	_MSD_State& (0+255),b
 17587                           
 17588                           ; BSR set to: 0
 17589                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 17590                           
 17591                           ; BSR set to: 0
 17592  00211C  0101               	movlb	1	; () banked
 17593  00211E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 17594  002120  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 17595  002122  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 17596  002124  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 17597  002126  B4D8               	btfsc	status,2,c
 17598  002128  D002               	goto	l566
 17599                           
 17600                           ; BSR set to: 1
 17601                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 17602  00212A  0E00               	movlw	0
 17603  00212C  D001               	goto	L18
 17604  00212E                     l566:
 17605                           
 17606                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 17607                           
 17608                           ; BSR set to: 0
 17609  00212E  0E01               	movlw	1
 17610  002130                     L18:
 17611  002130  0100               	movlb	0	; () banked
 17612  002132  6FE7               	movwf	_MSDHostNoData& (0+255),b
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 17616                           
 17617                           ; BSR set to: 0
 17618  002134  C10F  F0EC         	movff	_gblCBW+15,_MSDCommandState
 17619                           
 17620                           ;usb_device_msd.c: 454: }
 17621  002138  0012               	return	
 17622  00213A                     l562:
 17623                           
 17624                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 17625                           
 17626                           ; BSR set to: 0
 17627  00213A  0E01               	movlw	1
 17628  00213C  6E01               	movwf	USBStallEndpoint@dir,c
 17629  00213E  0E02               	movlw	2
 17630  002140  ECC8  F023         	call	_USBStallEndpoint
 17631                           
 17632                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 17633  002144  0E00               	movlw	0
 17634  002146  6E01               	movwf	USBStallEndpoint@dir,c
 17635  002148  0E02               	movlw	2
 17636  00214A  ECC8  F023         	call	_USBStallEndpoint
 17637                           
 17638                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 17639  00214E  0012               	return	
 17640  002150                     l561:
 17641  002150                     l14585:
 17642                           
 17643                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 17644  002150  0E01               	movlw	1
 17645  002152  6E01               	movwf	USBStallEndpoint@dir,c
 17646  002154  0E02               	movlw	2
 17647  002156  ECC8  F023         	call	_USBStallEndpoint
 17648                           
 17649                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 17650  00215A  0E00               	movlw	0
 17651  00215C  6E01               	movwf	USBStallEndpoint@dir,c
 17652  00215E  0E02               	movlw	2
 17653  002160  ECC8  F023         	call	_USBStallEndpoint
 17654                           
 17655                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 17656  002164  0E00               	movlw	0
 17657  002166  0101               	movlb	1	; () banked
 17658  002168  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17659                           
 17660                           ; BSR set to: 1
 17661                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 17662                           
 17663                           ; BSR set to: 1
 17664  00216A  0012               	return	
 17665  00216C                     
 17666                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 17667                           
 17668                           ; BSR set to: 1
 17669  00216C  EC33  F022         	call	_MSDProcessCommand	;wreg free
 17670  002170  0AFF               	xorlw	255
 17671  002172  A4D8               	btfss	status,2,c
 17672  002174  0012               	return	
 17673                           
 17674                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 17675  002176  0E03               	movlw	3
 17676  002178  0100               	movlb	0	; () banked
 17677  00217A  6FED               	movwf	_MSD_State& (0+255),b
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 17681  00217C  0012               	return	
 17682  00217E                     
 17683                           ; BSR set to: 0
 17684                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 17685                           
 17686                           ; BSR set to: 0
 17687  00217E  EC33  F022         	call	_MSDProcessCommand	;wreg free
 17688  002182  0AFF               	xorlw	255
 17689  002184  A4D8               	btfss	status,2,c
 17690  002186  0012               	return	
 17691                           
 17692                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 17693  002188  010D               	movlb	13	; () banked
 17694  00218A  518C               	movf	140,w,b	;volatile
 17695  00218C  A4D8               	btfss	status,2,c
 17696  00218E  D008               	goto	l575
 17697                           
 17698                           ; BSR set to: 13
 17699  002190  5188               	movf	136,w,b	;volatile
 17700  002192  1189               	iorwf	137,w,b	;volatile
 17701  002194  118A               	iorwf	138,w,b	;volatile
 17702  002196  118B               	iorwf	139,w,b	;volatile
 17703  002198  B4D8               	btfsc	status,2,c
 17704  00219A  D002               	goto	l575
 17705                           
 17706                           ; BSR set to: 13
 17707                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 17708  00219C  0E02               	movlw	2
 17709  00219E  6F8C               	movwf	140,b	;volatile
 17710  0021A0                     l575:
 17711                           
 17712                           ; BSR set to: 13
 17713                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 17714  0021A0  0E03               	movlw	3
 17715  0021A2  0100               	movlb	0	; () banked
 17716  0021A4  6FED               	movwf	_MSD_State& (0+255),b
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 17720  0021A6  0012               	return	
 17721  0021A8                     
 17722                           ; BSR set to: 0
 17723                           
 17724                           ; BSR set to: 0
 17725  0021A8  C0D5  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 17726  0021AC  C0D6  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 17727                           
 17728                           ; BSR set to: 0
 17729                           
 17730                           ; BSR set to: 0
 17731                           
 17732                           ; BSR set to: 0
 17733  0021B0  504E               	movf	_MSDTasks$2372,w,c
 17734  0021B2  104F               	iorwf	_MSDTasks$2372+1,w,c
 17735  0021B4  B4D8               	btfsc	status,2,c
 17736  0021B6  D00A               	goto	l577
 17737                           
 17738                           ; BSR set to: 0
 17739  0021B8  C0D5  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 17740  0021BC  C0D6  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 17741                           
 17742                           ; BSR set to: 0
 17743                           
 17744                           ; BSR set to: 0
 17745                           
 17746                           ; BSR set to: 0
 17747                           
 17748                           ; BSR set to: 0
 17749  0021C0  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 17750  0021C4  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 17751  0021C8  BEDF               	btfsc	indf2,7,c
 17752  0021CA  0012               	return	
 17753  0021CC                     l577:
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 17757                           
 17758                           ; BSR set to: 0
 17759  0021CC  0E01               	movlw	1
 17760  0021CE  6E01               	movwf	USBTransferOnePacket@dir,c
 17761  0021D0  0E80               	movlw	128
 17762  0021D2  6E02               	movwf	USBTransferOnePacket@data,c
 17763  0021D4  0E0D               	movlw	13
 17764  0021D6  6E03               	movwf	USBTransferOnePacket@data+1,c
 17765  0021D8  0E0D               	movlw	13
 17766  0021DA  6E04               	movwf	USBTransferOnePacket@len,c
 17767  0021DC  0E02               	movlw	2
 17768  0021DE  ECD3  F025         	call	_USBTransferOnePacket
 17769  0021E2  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 17770  0021E6  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 17771                           
 17772                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 17773  0021EA  0100               	movlb	0	; () banked
 17774  0021EC  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17775  0021EE  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17776  0021F0  B4D8               	btfsc	status,2,c
 17777  0021F2  D006               	goto	u11720
 17778                           
 17779                           ; BSR set to: 0
 17780  0021F4  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17781  0021F8  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17782  0021FC  BEDF               	btfsc	indf2,7,c
 17783  0021FE  D00F               	goto	l586
 17784  002200                     u11720:
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 17788                           
 17789                           ; BSR set to: 0
 17790  002200  0E00               	movlw	0
 17791  002202  6E01               	movwf	USBTransferOnePacket@dir,c
 17792  002204  0E40               	movlw	64
 17793  002206  6E02               	movwf	USBTransferOnePacket@data,c
 17794  002208  0E0D               	movlw	13
 17795  00220A  6E03               	movwf	USBTransferOnePacket@data+1,c
 17796  00220C  0E40               	movlw	64
 17797  00220E  6E04               	movwf	USBTransferOnePacket@len,c
 17798  002210  0E02               	movlw	2
 17799  002212  ECD3  F025         	call	_USBTransferOnePacket
 17800  002216  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17801  00221A  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17802  00221E                     l586:
 17803                           
 17804                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 17805  00221E  0E00               	movlw	0
 17806  002220  0100               	movlb	0	; () banked
 17807  002222  6FED               	movwf	_MSD_State& (0+255),b
 17808                           
 17809                           ;usb_device_msd.c: 513: break;
 17810  002224  0012               	return	
 17811  002226                     
 17812                           ; BSR set to: 0
 17813                           ;usb_device_msd.c: 518: MSD_State=0x00;
 17814                           
 17815                           ; BSR set to: 0
 17816  002226  0E00               	movlw	0
 17817  002228  6FED               	movwf	_MSD_State& (0+255),b
 17818                           
 17819                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 17820  00222A  0E02               	movlw	2
 17821  00222C  010D               	movlb	13	; () banked
 17822  00222E  6F8C               	movwf	140,b	;volatile
 17823                           
 17824                           ; BSR set to: 13
 17825                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 17826  002230  0E00               	movlw	0
 17827  002232  6E01               	movwf	USBStallEndpoint@dir,c
 17828  002234  0E02               	movlw	2
 17829  002236  ECC8  F023         	call	_USBStallEndpoint
 17830                           
 17831                           ;usb_device_msd.c: 521: }
 17832  00223A  0012               	return	
 17833  00223C                     l554:
 17834  00223C  0100               	movlb	0	; () banked
 17835  00223E  51ED               	movf	_MSD_State& (0+255),w,b
 17836                           
 17837                           ; Switch size 1, requested type "space"
 17838                           ; Number of cases is 4, Range of values is 0 to 3
 17839                           ; switch strategies available:
 17840                           ; Name         Instructions Cycles
 17841                           ; simple_byte           13     7 (average)
 17842                           ;	Chosen strategy is simple_byte
 17843  002240  0A00               	xorlw	0	; case 0
 17844  002242  B4D8               	btfsc	status,2,c
 17845  002244  D6E6               	goto	l555
 17846  002246  0A01               	xorlw	1	; case 1
 17847  002248  B4D8               	btfsc	status,2,c
 17848  00224A  D790               	goto	l571
 17849  00224C  0A03               	xorlw	3	; case 2
 17850  00224E  B4D8               	btfsc	status,2,c
 17851  002250  D796               	goto	l573
 17852  002252  0A01               	xorlw	1	; case 3
 17853  002254  B4D8               	btfsc	status,2,c
 17854  002256  D7A8               	goto	l576
 17855  002258  D7E6               	goto	l589
 17856  00225A                     __end_of_MSDTasks:
 17857                           	opt stack 0
 17858                           tosu	equ	0xFFF
 17859                           tosh	equ	0xFFE
 17860                           tosl	equ	0xFFD
 17861                           pclath	equ	0xFFA
 17862                           tblptru	equ	0xFF8
 17863                           tblptrh	equ	0xFF7
 17864                           tblptrl	equ	0xFF6
 17865                           tablat	equ	0xFF5
 17866                           prodh	equ	0xFF4
 17867                           prodl	equ	0xFF3
 17868                           intcon	equ	0xFF2
 17869                           intcon2	equ	0xFF1
 17870                           intcon3	equ	0xFF0
 17871                           indf0	equ	0xFEF
 17872                           postinc0	equ	0xFEE
 17873                           fsr0h	equ	0xFEA
 17874                           fsr0l	equ	0xFE9
 17875                           wreg	equ	0xFE8
 17876                           indf1	equ	0xFE7
 17877                           postdec1	equ	0xFE5
 17878                           plusw1	equ	0xFE3
 17879                           fsr1h	equ	0xFE2
 17880                           fsr1l	equ	0xFE1
 17881                           indf2	equ	0xFDF
 17882                           postinc2	equ	0xFDE
 17883                           postdec2	equ	0xFDD
 17884                           plusw2	equ	0xFDB
 17885                           fsr2h	equ	0xFDA
 17886                           fsr2l	equ	0xFD9
 17887                           status	equ	0xFD8
 17888                           
 17889 ;; *************** function _MSDProcessCommand *****************
 17890 ;; Defined at:
 17891 ;;		line 553 in file "usb_device_msd.c"
 17892 ;; Parameters:    Size  Location     Type
 17893 ;;		None
 17894 ;; Auto vars:     Size  Location     Type
 17895 ;;		None
 17896 ;; Return value:  Size  Location     Type
 17897 ;;                  1    wreg      unsigned char 
 17898 ;; Registers used:
 17899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17900 ;; Tracked objects:
 17901 ;;		On entry : 0/0
 17902 ;;		On exit  : 0/0
 17903 ;;		Unchanged: 0/0
 17904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17907 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17908 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17909 ;;Total ram usage:        5 bytes
 17910 ;; Hardware stack levels used:    1
 17911 ;; Hardware stack levels required when called:    9
 17912 ;; This function calls:
 17913 ;;		_ExternalFlash_MediaDetect
 17914 ;;		_ExternalFlash_MediaInitialize
 17915 ;;		_MSDProcessCommandMediaAbsent
 17916 ;;		_MSDProcessCommandMediaPresent
 17917 ;; This function is called by:
 17918 ;;		_MSDTasks
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922                           	psect	text84
 17923  004466                     __ptext84:
 17924                           	opt stack 0
 17925  004466                     _MSDProcessCommand:
 17926                           	opt stack 19
 17927                           
 17928                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 17929                           
 17930                           ;incstack = 0
 17931  004466  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17932  00446A  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17933  00446E  D801               	call	u10858
 17934  004470  D00A               	goto	u10859
 17935  004472                     u10858:
 17936  004472  0005               	push	
 17937  004474  6EFA               	movwf	pclath,c
 17938  004476  0101               	movlb	1	; () banked
 17939  004478  51B9               	movf	(_LUN+6)& (0+255),w,b
 17940  00447A  6EFD               	movwf	tosl,c
 17941  00447C  51BA               	movf	(_LUN+7)& (0+255),w,b
 17942  00447E  6EFE               	movwf	tosh,c
 17943  004480  6AFF               	clrf	tosu,c
 17944  004482  50FA               	movf	pclath,w,c
 17945  004484  0012               	return		;indir
 17946  004486                     u10859:
 17947  004486  0900               	iorlw	0
 17948  004488  B4D8               	btfsc	status,2,c
 17949  00448A  D00C               	goto	u10870
 17950  00448C  0101               	movlb	1	; () banked
 17951  00448E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17952  004490  0D01               	mullw	1
 17953  004492  0EE8               	movlw	low _SoftDetach
 17954  004494  24F3               	addwf	prodl,w,c
 17955  004496  6ED9               	movwf	fsr2l,c
 17956  004498  0E00               	movlw	high _SoftDetach
 17957  00449A  20F4               	addwfc	prodh,w,c
 17958  00449C  6EDA               	movwf	fsr2h,c
 17959  00449E  04DE               	decf	postinc2,w,c
 17960  0044A0  A4D8               	btfss	status,2,c
 17961  0044A2  D019               	goto	l592
 17962  0044A4                     u10870:
 17963                           
 17964                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 17965                           
 17966                           ; BSR set to: 1
 17967  0044A4  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17968  0044A8  0E01               	movlw	1
 17969  0044AA  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17970  0044AC  0E00               	movlw	0
 17971  0044AE  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17972  0044B0  2A48               	incf	??_MSDProcessCommand,f,c
 17973  0044B2  D003               	goto	u10884
 17974  0044B4                     u10885:
 17975  0044B4  90D8               	bcf	status,0,c
 17976  0044B6  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17977  0044B8  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17978  0044BA                     u10884:
 17979  0044BA  2E48               	decfsz	??_MSDProcessCommand,f,c
 17980  0044BC  D7FB               	goto	u10885
 17981  0044BE  1C49               	comf	??_MSDProcessCommand+1,w,c
 17982  0044C0  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 17983  0044C2  1C4A               	comf	??_MSDProcessCommand+2,w,c
 17984  0044C4  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 17985  0044C6  504B               	movf	??_MSDProcessCommand+3,w,c
 17986  0044C8  0101               	movlb	1	; () banked
 17987  0044CA  1782               	andwf	_gblMediaPresent& (0+255),f,b
 17988  0044CC  504C               	movf	??_MSDProcessCommand+4,w,c
 17989  0044CE  1783               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 17990                           
 17991                           ; BSR set to: 1
 17992                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 17993  0044D0  EC00  F03B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 17994                           
 17995                           ;usb_device_msd.c: 563: }
 17996  0044D4  D04E               	goto	l599
 17997  0044D6                     l592:
 17998                           
 17999                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18000  0044D6  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18001  0044DA  0E01               	movlw	1
 18002  0044DC  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18003  0044DE  0E00               	movlw	0
 18004  0044E0  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18005  0044E2  2A48               	incf	??_MSDProcessCommand,f,c
 18006  0044E4  D003               	goto	u10894
 18007  0044E6                     u10895:
 18008  0044E6  90D8               	bcf	status,0,c
 18009  0044E8  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18010  0044EA  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18011  0044EC                     u10894:
 18012  0044EC  2E48               	decfsz	??_MSDProcessCommand,f,c
 18013  0044EE  D7FB               	goto	u10895
 18014  0044F0  0101               	movlb	1	; () banked
 18015  0044F2  5182               	movf	_gblMediaPresent& (0+255),w,b
 18016  0044F4  1649               	andwf	??_MSDProcessCommand+1,f,c
 18017  0044F6  5183               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18018  0044F8  164A               	andwf	??_MSDProcessCommand+2,f,c
 18019  0044FA  5049               	movf	??_MSDProcessCommand+1,w,c
 18020  0044FC  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18021  0044FE  A4D8               	btfss	status,2,c
 18022  004500  D036               	goto	l596
 18023                           
 18024                           ; BSR set to: 1
 18025                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18026  004502  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18027  004506  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18028  00450A  D801               	call	u10918
 18029  00450C  D009               	goto	u10919
 18030  00450E                     u10918:
 18031  00450E  0005               	push	
 18032  004510  6EFA               	movwf	pclath,c
 18033  004512  51B3               	movf	_LUN& (0+255),w,b
 18034  004514  6EFD               	movwf	tosl,c
 18035  004516  51B4               	movf	(_LUN+1)& (0+255),w,b
 18036  004518  6EFE               	movwf	tosh,c
 18037  00451A  6AFF               	clrf	tosu,c
 18038  00451C  50FA               	movf	pclath,w,c
 18039  00451E  0012               	return		;indir
 18040  004520                     u10919:
 18041  004520  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18042  004522  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18043  004524  B4D8               	btfsc	status,2,c
 18044  004526  D020               	goto	l597
 18045                           
 18046                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18047  004528  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18048  00452C  0E01               	movlw	1
 18049  00452E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18050  004530  0E00               	movlw	0
 18051  004532  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18052  004534  2A48               	incf	??_MSDProcessCommand,f,c
 18053  004536  D003               	goto	u10934
 18054  004538                     u10935:
 18055  004538  90D8               	bcf	status,0,c
 18056  00453A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18057  00453C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18058  00453E                     u10934:
 18059  00453E  2E48               	decfsz	??_MSDProcessCommand,f,c
 18060  004540  D7FB               	goto	u10935
 18061  004542  5049               	movf	??_MSDProcessCommand+1,w,c
 18062  004544  0101               	movlb	1	; () banked
 18063  004546  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 18064  004548  504A               	movf	??_MSDProcessCommand+2,w,c
 18065  00454A  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18066                           
 18067                           ; BSR set to: 1
 18068                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18069  00454C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18070  00454E  0BF0               	andlw	-16
 18071  004550  0906               	iorlw	6
 18072  004552  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18073                           
 18074                           ; BSR set to: 1
 18075                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18076  004554  0E28               	movlw	40
 18077  004556  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18078                           
 18079                           ; BSR set to: 1
 18080                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18081  004558  0E00               	movlw	0
 18082  00455A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18083                           
 18084                           ; BSR set to: 1
 18085                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18086  00455C  0E01               	movlw	1
 18087  00455E  010D               	movlb	13	; () banked
 18088  004560  6F8C               	movwf	140,b	;volatile
 18089                           
 18090                           ; BSR set to: 13
 18091                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18092  004562  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18093                           
 18094                           ;usb_device_msd.c: 589: }
 18095  004566  D005               	goto	l599
 18096  004568                     l597:
 18097                           
 18098                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18099  004568  EC00  F03B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18100                           
 18101                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18102  00456C  D002               	goto	l599
 18103  00456E                     l596:
 18104                           
 18105                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18106  00456E  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18107  004572                     l599:
 18108                           
 18109                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18110  004572  0100               	movlb	0	; () banked
 18111  004574  51EC               	movf	_MSDCommandState& (0+255),w,b
 18112  004576  0012               	return	
 18113  004578                     __end_of_MSDProcessCommand:
 18114                           	opt stack 0
 18115                           tosu	equ	0xFFF
 18116                           tosh	equ	0xFFE
 18117                           tosl	equ	0xFFD
 18118                           pclath	equ	0xFFA
 18119                           tblptru	equ	0xFF8
 18120                           tblptrh	equ	0xFF7
 18121                           tblptrl	equ	0xFF6
 18122                           tablat	equ	0xFF5
 18123                           prodh	equ	0xFF4
 18124                           prodl	equ	0xFF3
 18125                           intcon	equ	0xFF2
 18126                           intcon2	equ	0xFF1
 18127                           intcon3	equ	0xFF0
 18128                           indf0	equ	0xFEF
 18129                           postinc0	equ	0xFEE
 18130                           fsr0h	equ	0xFEA
 18131                           fsr0l	equ	0xFE9
 18132                           wreg	equ	0xFE8
 18133                           indf1	equ	0xFE7
 18134                           postdec1	equ	0xFE5
 18135                           plusw1	equ	0xFE3
 18136                           fsr1h	equ	0xFE2
 18137                           fsr1l	equ	0xFE1
 18138                           indf2	equ	0xFDF
 18139                           postinc2	equ	0xFDE
 18140                           postdec2	equ	0xFDD
 18141                           plusw2	equ	0xFDB
 18142                           fsr2h	equ	0xFDA
 18143                           fsr2l	equ	0xFD9
 18144                           status	equ	0xFD8
 18145                           
 18146 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18147 ;; Defined at:
 18148 ;;		line 635 in file "usb_device_msd.c"
 18149 ;; Parameters:    Size  Location     Type
 18150 ;;		None
 18151 ;; Auto vars:     Size  Location     Type
 18152 ;;		None
 18153 ;; Return value:  Size  Location     Type
 18154 ;;                  1    wreg      void 
 18155 ;; Registers used:
 18156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18157 ;; Tracked objects:
 18158 ;;		On entry : 0/0
 18159 ;;		On exit  : 0/0
 18160 ;;		Unchanged: 0/0
 18161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18166 ;;Total ram usage:        0 bytes
 18167 ;; Hardware stack levels used:    1
 18168 ;; Hardware stack levels required when called:    8
 18169 ;; This function calls:
 18170 ;;		_MSDErrorHandler
 18171 ;;		_MSDProcessCommandMediaPresent
 18172 ;;		_ResetSenseData
 18173 ;; This function is called by:
 18174 ;;		_MSDProcessCommand
 18175 ;; This function uses a non-reentrant model
 18176 ;;
 18177                           
 18178                           	psect	text85
 18179  007600                     __ptext85:
 18180                           	opt stack 0
 18181  007600                     _MSDProcessCommandMediaAbsent:
 18182                           	opt stack 19
 18183                           
 18184                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;incstack = 0
 18188  007600  D01E               	goto	l603
 18189  007602                     
 18190                           ;usb_device_msd.c: 646: ResetSenseData();
 18191  007602  EC31  F03B         	call	_ResetSenseData	;wreg free
 18192                           
 18193                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18194  007606  0101               	movlb	1	; () banked
 18195  007608  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18196  00760A  0BF0               	andlw	-16
 18197  00760C  0902               	iorlw	2
 18198  00760E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18199                           
 18200                           ; BSR set to: 1
 18201                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18202  007610  0E3A               	movlw	58
 18203  007612  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18204                           
 18205                           ; BSR set to: 1
 18206                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18207  007614  0E00               	movlw	0
 18208  007616  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18209                           
 18210                           ; BSR set to: 1
 18211                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18212  007618  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18213                           
 18214                           ;usb_device_msd.c: 655: break;
 18215  00761C  0012               	return	
 18216  00761E                     
 18217                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18218  00761E  0E01               	movlw	1
 18219  007620  010D               	movlb	13	; () banked
 18220  007622  6F8C               	movwf	140,b	;volatile
 18221                           
 18222                           ; BSR set to: 13
 18223                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18224  007624  0100               	movlb	0	; () banked
 18225  007626  69EC               	setf	_MSDCommandState& (0+255),b
 18226                           
 18227                           ;usb_device_msd.c: 665: break;
 18228  007628  0012               	return	
 18229  00762A                     
 18230                           ; BSR set to: 0
 18231                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18232                           
 18233                           ; BSR set to: 0
 18234  00762A  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18235                           
 18236                           ;usb_device_msd.c: 671: break;
 18237  00762E  0012               	return	
 18238  007630                     
 18239                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18240  007630  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18241                           
 18242                           ;usb_device_msd.c: 677: break;
 18243  007634  0012               	return	
 18244  007636                     
 18245                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18246  007636  0E7F               	movlw	127
 18247  007638  ECCF  F024         	call	_MSDErrorHandler
 18248                           
 18249                           ;usb_device_msd.c: 685: }
 18250                           
 18251                           ;usb_device_msd.c: 684: break;
 18252  00763C  0012               	return	
 18253  00763E                     l603:
 18254  00763E  0100               	movlb	0	; () banked
 18255  007640  51EC               	movf	_MSDCommandState& (0+255),w,b
 18256                           
 18257                           ; Switch size 1, requested type "space"
 18258                           ; Number of cases is 5, Range of values is 0 to 253
 18259                           ; switch strategies available:
 18260                           ; Name         Instructions Cycles
 18261                           ; simple_byte           16     9 (average)
 18262                           ;	Chosen strategy is simple_byte
 18263  007642  0A00               	xorlw	0	; case 0
 18264  007644  B4D8               	btfsc	status,2,c
 18265  007646  D7EB               	goto	l606
 18266  007648  0A03               	xorlw	3	; case 3
 18267  00764A  B4D8               	btfsc	status,2,c
 18268  00764C  D7DA               	goto	l604
 18269  00764E  0A11               	xorlw	17	; case 18
 18270  007650  B4D8               	btfsc	status,2,c
 18271  007652  D7EB               	goto	l608
 18272  007654  0A0C               	xorlw	12	; case 30
 18273  007656  B4D8               	btfsc	status,2,c
 18274  007658  D7E2               	goto	l606
 18275  00765A  0AE3               	xorlw	227	; case 253
 18276  00765C  B4D8               	btfsc	status,2,c
 18277  00765E  D7E8               	goto	l609
 18278  007660  D7EA               	goto	l610
 18279  007662                     __end_of_MSDProcessCommandMediaAbsent:
 18280                           	opt stack 0
 18281                           tosu	equ	0xFFF
 18282                           tosh	equ	0xFFE
 18283                           tosl	equ	0xFFD
 18284                           pclath	equ	0xFFA
 18285                           tblptru	equ	0xFF8
 18286                           tblptrh	equ	0xFF7
 18287                           tblptrl	equ	0xFF6
 18288                           tablat	equ	0xFF5
 18289                           prodh	equ	0xFF4
 18290                           prodl	equ	0xFF3
 18291                           intcon	equ	0xFF2
 18292                           intcon2	equ	0xFF1
 18293                           intcon3	equ	0xFF0
 18294                           indf0	equ	0xFEF
 18295                           postinc0	equ	0xFEE
 18296                           fsr0h	equ	0xFEA
 18297                           fsr0l	equ	0xFE9
 18298                           wreg	equ	0xFE8
 18299                           indf1	equ	0xFE7
 18300                           postdec1	equ	0xFE5
 18301                           plusw1	equ	0xFE3
 18302                           fsr1h	equ	0xFE2
 18303                           fsr1l	equ	0xFE1
 18304                           indf2	equ	0xFDF
 18305                           postinc2	equ	0xFDE
 18306                           postdec2	equ	0xFDD
 18307                           plusw2	equ	0xFDB
 18308                           fsr2h	equ	0xFDA
 18309                           fsr2l	equ	0xFD9
 18310                           status	equ	0xFD8
 18311                           
 18312 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18313 ;; Defined at:
 18314 ;;		line 712 in file "usb_device_msd.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;		None
 18317 ;; Auto vars:     Size  Location     Type
 18318 ;;  capacity        4   66[COMRAM] struct .
 18319 ;;  sectorSize      4   62[COMRAM] struct .
 18320 ;;  i               1   70[COMRAM] unsigned char 
 18321 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  1    wreg      void 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18332 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18335 ;;Total ram usage:       14 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:    7
 18338 ;; This function calls:
 18339 ;;		_ExternalFlash_CapacityRead
 18340 ;;		_ExternalFlash_SectorSizeRead
 18341 ;;		_ExternalFlash_WriteProtectStateGet
 18342 ;;		_MSDCheckForErrorCases
 18343 ;;		_MSDComputeDeviceInAndResidue
 18344 ;;		_MSDErrorHandler
 18345 ;;		_MSDReadHandler
 18346 ;;		_MSDWriteHandler
 18347 ;;		_ResetSenseData
 18348 ;;		_USBTransferOnePacket
 18349 ;;		_memcpy
 18350 ;; This function is called by:
 18351 ;;		_MSDProcessCommand
 18352 ;;		_MSDProcessCommandMediaAbsent
 18353 ;; This function uses a non-reentrant model
 18354 ;;
 18355                           
 18356                           	psect	text86
 18357  00086C                     __ptext86:
 18358                           	opt stack 0
 18359  00086C                     _MSDProcessCommandMediaPresent:
 18360                           	opt stack 20
 18361                           
 18362                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18363                           
 18364                           ;incstack = 0
 18365  00086C  D1B9               	goto	l614
 18366  00086E                     
 18367                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18368  00086E  EC49  F018         	call	_MSDReadHandler	;wreg free
 18369  000872  0900               	iorlw	0
 18370  000874  A4D8               	btfss	status,2,c
 18371  000876  0012               	return	
 18372                           
 18373                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18374  000878  0100               	movlb	0	; () banked
 18375  00087A  69EC               	setf	_MSDCommandState& (0+255),b
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18379  00087C  0012               	return	
 18380  00087E                     
 18381                           ; BSR set to: 0
 18382                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18383                           
 18384                           ; BSR set to: 0
 18385  00087E  ECE9  F00A         	call	_MSDWriteHandler	;wreg free
 18386  000882  0900               	iorlw	0
 18387  000884  A4D8               	btfss	status,2,c
 18388  000886  0012               	return	
 18389                           
 18390                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18391  000888  0100               	movlb	0	; () banked
 18392  00088A  69EC               	setf	_MSDCommandState& (0+255),b
 18393                           
 18394                           ; BSR set to: 0
 18395                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18396  00088C  0012               	return	
 18397  00088E                     
 18398                           ; BSR set to: 0
 18399                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18400                           
 18401                           ; BSR set to: 0
 18402  00088E  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18403  000890  A4D8               	btfss	status,2,c
 18404  000892  D002               	goto	l621
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18408  000894  69EC               	setf	_MSDCommandState& (0+255),b
 18409                           
 18410                           ;usb_device_msd.c: 751: break;
 18411  000896  0012               	return	
 18412  000898                     l621:
 18413                           
 18414                           ; BSR set to: 0
 18415                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18416  000898  C112  F0DC         	movff	_gblCBW+18,_TransferLength+1
 18417                           
 18418                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18419  00089C  C113  F0DB         	movff	_gblCBW+19,_TransferLength
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18423  0008A0  C0DB  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18424  0008A4  C0DC  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18425  0008A8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18426  0008AA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18427  0008AC  EC93  F029         	call	_MSDCheckForErrorCases	;wreg free
 18428  0008B0  0900               	iorlw	0
 18429  0008B2  A4D8               	btfss	status,2,c
 18430  0008B4  0012               	return	
 18431                           
 18432                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18433                           
 18434                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18435  0008B6  0E00               	movlw	0
 18436  0008B8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18437  0008BA  0E24               	movlw	36
 18438  0008BC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18439  0008BE  EC61  F034         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18440                           
 18441                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18442  0008C2  0E00               	movlw	0
 18443  0008C4  6E01               	movwf	memcpy@d1,c
 18444  0008C6  0E06               	movlw	6
 18445  0008C8  6E02               	movwf	memcpy@d1+1,c
 18446  0008CA  0E4A               	movlw	low _inq_resp
 18447  0008CC  6E03               	movwf	memcpy@s1,c
 18448  0008CE  0E8F               	movlw	high _inq_resp
 18449  0008D0  6E04               	movwf	memcpy@s1+1,c
 18450  0008D2  5003               	movf	memcpy@s1,w,c
 18451  0008D4  1004               	iorwf	memcpy@s1+1,w,c
 18452  0008D6  A4D8               	btfss	status,2,c
 18453  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18454  0008DA  6E05               	movwf	memcpy@s1+2,c
 18455  0008DC  0E00               	movlw	0
 18456  0008DE  6E07               	movwf	memcpy@n+1,c
 18457  0008E0  0E24               	movlw	36
 18458  0008E2  6E06               	movwf	memcpy@n,c
 18459  0008E4  EC9C  F03A         	call	_memcpy	;wreg free
 18460                           
 18461                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18462  0008E8  0EFD               	movlw	253
 18463  0008EA  0100               	movlb	0	; () banked
 18464  0008EC  6FEC               	movwf	_MSDCommandState& (0+255),b
 18465                           
 18466                           ;usb_device_msd.c: 773: break;
 18467  0008EE  0012               	return	
 18468  0008F0                     
 18469                           ; BSR set to: 0
 18470                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18471                           
 18472                           ; BSR set to: 0
 18473  0008F0  C1C1  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18474  0008F4  C1C2  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18475  0008F8  D801               	call	u9708
 18476  0008FA  D00A               	goto	u9709
 18477  0008FC                     u9708:
 18478  0008FC  0005               	push	
 18479  0008FE  6EFA               	movwf	pclath,c
 18480  000900  0101               	movlb	1	; () banked
 18481  000902  51B5               	movf	(_LUN+2)& (0+255),w,b
 18482  000904  6EFD               	movwf	tosl,c
 18483  000906  51B6               	movf	(_LUN+3)& (0+255),w,b
 18484  000908  6EFE               	movwf	tosh,c
 18485  00090A  6AFF               	clrf	tosu,c
 18486  00090C  50FA               	movf	pclath,w,c
 18487  00090E  0012               	return		;indir
 18488  000910                     u9709:
 18489  000910  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18490  000914  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18491  000918  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18492  00091C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18493                           
 18494                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18495  000920  C1C1  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18496  000924  C1C2  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18497  000928  D801               	call	u9718
 18498  00092A  D00A               	goto	u9719
 18499  00092C                     u9718:
 18500  00092C  0005               	push	
 18501  00092E  6EFA               	movwf	pclath,c
 18502  000930  0101               	movlb	1	; () banked
 18503  000932  51B7               	movf	(_LUN+4)& (0+255),w,b
 18504  000934  6EFD               	movwf	tosl,c
 18505  000936  51B8               	movf	(_LUN+5)& (0+255),w,b
 18506  000938  6EFE               	movwf	tosh,c
 18507  00093A  6AFF               	clrf	tosu,c
 18508  00093C  50FA               	movf	pclath,w,c
 18509  00093E  0012               	return		;indir
 18510  000940                     u9719:
 18511  000940  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18512  000944  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18513  000948  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18514  00094A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18515                           
 18516                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18517  00094C  EE26 F000          	lfsr	2,1536
 18518  000950  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18519                           
 18520                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18521  000954  EE26 F001          	lfsr	2,1537	;volatile
 18522  000958  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18523                           
 18524                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18525  00095C  EE26 F002          	lfsr	2,1538	;volatile
 18526  000960  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18527                           
 18528                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18529  000964  EE26 F003          	lfsr	2,1539	;volatile
 18530  000968  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18531                           
 18532                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18533  00096C  EE26 F004          	lfsr	2,1540	;volatile
 18534  000970  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18535                           
 18536                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18537  000974  EE26 F005          	lfsr	2,1541	;volatile
 18538  000978  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18539                           
 18540                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18541  00097C  EE26 F006          	lfsr	2,1542	;volatile
 18542  000980  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18543                           
 18544                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18545  000984  EE26 F007          	lfsr	2,1543	;volatile
 18546  000988  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18547                           
 18548                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18549  00098C  0E00               	movlw	0
 18550  00098E  0100               	movlb	0	; () banked
 18551  000990  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18552  000992  0E08               	movlw	8
 18553  000994  6FDB               	movwf	_TransferLength& (0+255),b
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18557  000996  0E00               	movlw	0
 18558  000998  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18559  00099A  0E08               	movlw	8
 18560  00099C  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18561  00099E  EC61  F034         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18562                           
 18563                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 18564  0009A2  0EFD               	movlw	253
 18565  0009A4  0100               	movlb	0	; () banked
 18566  0009A6  6FEC               	movwf	_MSDCommandState& (0+255),b
 18567                           
 18568                           ;usb_device_msd.c: 802: break;
 18569  0009A8  0012               	return	
 18570  0009AA                     
 18571                           ; BSR set to: 0
 18572                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 18573                           
 18574                           ; BSR set to: 0
 18575  0009AA  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18576  0009AC  A4D8               	btfss	status,2,c
 18577  0009AE  D002               	goto	l625
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 18581  0009B0  69EC               	setf	_MSDCommandState& (0+255),b
 18582                           
 18583                           ;usb_device_msd.c: 814: break;
 18584  0009B2  0012               	return	
 18585  0009B4                     l625:
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 18589                           
 18590                           ; BSR set to: 0
 18591  0009B4  0E00               	movlw	0
 18592  0009B6  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18593  0009B8  0E12               	movlw	18
 18594  0009BA  6FDB               	movwf	_TransferLength& (0+255),b
 18595                           
 18596                           ; BSR set to: 0
 18597                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 18598  0009BC  0E00               	movlw	0
 18599  0009BE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18600  0009C0  0E12               	movlw	18
 18601  0009C2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18602  0009C4  EC61  F034         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18603                           
 18604                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 18605  0009C8  0E00               	movlw	0
 18606  0009CA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18607  0009CC                     l12817:
 18608  0009CC  0E11               	movlw	17
 18609  0009CE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 18610  0009D0  D001               	goto	l626
 18611  0009D2  D014               	goto	u9740
 18612  0009D4                     l626:
 18613                           
 18614                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 18615  0009D4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18616  0009D6  0D01               	mullw	1
 18617  0009D8  0E1F               	movlw	low _gblSenseData
 18618  0009DA  24F3               	addwf	prodl,w,c
 18619  0009DC  6ED9               	movwf	fsr2l,c
 18620  0009DE  0E01               	movlw	high _gblSenseData
 18621  0009E0  20F4               	addwfc	prodh,w,c
 18622  0009E2  6EDA               	movwf	fsr2h,c
 18623  0009E4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18624  0009E6  0D01               	mullw	1
 18625  0009E8  0E00               	movlw	0
 18626  0009EA  24F3               	addwf	prodl,w,c
 18627  0009EC  6EE1               	movwf	fsr1l,c
 18628  0009EE  0E06               	movlw	6
 18629  0009F0  20F4               	addwfc	prodh,w,c
 18630  0009F2  6EE2               	movwf	fsr1h,c
 18631  0009F4  CFDF FFE7          	movff	indf2,indf1
 18632  0009F8  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18633  0009FA  D7E8               	goto	l12817
 18634  0009FC                     u9740:
 18635                           
 18636                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 18637  0009FC  0EFD               	movlw	253
 18638  0009FE  0100               	movlb	0	; () banked
 18639  000A00  6FEC               	movwf	_MSDCommandState& (0+255),b
 18640                           
 18641                           ;usb_device_msd.c: 827: break;
 18642  000A02  0012               	return	
 18643  000A04                     l628:
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 18647  000A04  0E03               	movlw	3
 18648  000A06  CFE8 F600          	movff	wreg,1536
 18649                           
 18650                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 18651  000A0A  0E00               	movlw	0
 18652  000A0C  CFE8 F601          	movff	wreg,1537	;volatile
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 18656  000A10  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 18657  000A14  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 18658  000A18  D801               	call	u9758
 18659  000A1A  D00A               	goto	u9759
 18660  000A1C                     u9758:
 18661  000A1C  0005               	push	
 18662  000A1E  6EFA               	movwf	pclath,c
 18663  000A20  0101               	movlb	1	; () banked
 18664  000A22  51BD               	movf	(_LUN+10)& (0+255),w,b
 18665  000A24  6EFD               	movwf	tosl,c
 18666  000A26  51BE               	movf	(_LUN+11)& (0+255),w,b
 18667  000A28  6EFE               	movwf	tosh,c
 18668  000A2A  6AFF               	clrf	tosu,c
 18669  000A2C  50FA               	movf	pclath,w,c
 18670  000A2E  0012               	return		;indir
 18671  000A30                     u9759:
 18672  000A30  0900               	iorlw	0
 18673  000A32  A4D8               	btfss	status,2,c
 18674  000A34  D004               	goto	l630
 18675  000A36  0E00               	movlw	0
 18676  000A38  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18677  000A3A  0E00               	movlw	0
 18678  000A3C  D003               	goto	L19
 18679  000A3E                     l630:
 18680  000A3E  0E00               	movlw	0
 18681  000A40  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18682  000A42  0E80               	movlw	128
 18683  000A44                     L19:
 18684  000A44  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 18685  000A46  EE26 F002          	lfsr	2,1538	;volatile
 18686  000A4A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 18687                           
 18688                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 18689  000A4E  0E00               	movlw	0
 18690  000A50  CFE8 F603          	movff	wreg,1539	;volatile
 18691                           
 18692                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 18693  000A54  0E00               	movlw	0
 18694  000A56  0100               	movlb	0	; () banked
 18695  000A58  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18696  000A5A  0E04               	movlw	4
 18697  000A5C  6FDB               	movwf	_TransferLength& (0+255),b
 18698                           
 18699                           ; BSR set to: 0
 18700                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 18701  000A5E  0E00               	movlw	0
 18702  000A60  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18703  000A62  0E04               	movlw	4
 18704  000A64  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18705  000A66  EC61  F034         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18706                           
 18707                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 18708  000A6A  0EFD               	movlw	253
 18709  000A6C  0100               	movlb	0	; () banked
 18710  000A6E  6FEC               	movwf	_MSDCommandState& (0+255),b
 18711                           
 18712                           ;usb_device_msd.c: 839: break;
 18713  000A70  0012               	return	
 18714  000A72                     
 18715                           ; BSR set to: 0
 18716                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 18717                           
 18718                           ; BSR set to: 0
 18719  000A72  0101               	movlb	1	; () banked
 18720  000A74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18721  000A76  0BF0               	andlw	-16
 18722  000A78  0905               	iorlw	5
 18723  000A7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18724                           
 18725                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 18726  000A7C  0E20               	movlw	32
 18727  000A7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18728                           
 18729                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 18730  000A80  0E00               	movlw	0
 18731  000A82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18732                           
 18733                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 18734  000A84  0E01               	movlw	1
 18735  000A86  010D               	movlb	13	; () banked
 18736  000A88  6F8C               	movwf	140,b	;volatile
 18737                           
 18738                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 18739  000A8A  0E00               	movlw	0
 18740  000A8C  6F88               	movwf	136,b	;volatile
 18741  000A8E  0E00               	movlw	0
 18742  000A90  6F89               	movwf	137,b	;volatile
 18743  000A92  0E00               	movlw	0
 18744  000A94  6F8A               	movwf	138,b	;volatile
 18745  000A96  0E00               	movlw	0
 18746  000A98  6F8B               	movwf	139,b	;volatile
 18747                           
 18748                           ; BSR set to: 13
 18749                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 18750  000A9A  0100               	movlb	0	; () banked
 18751  000A9C  69EC               	setf	_MSDCommandState& (0+255),b
 18752                           
 18753                           ;usb_device_msd.c: 848: break;
 18754  000A9E  0012               	return	
 18755  000AA0                     
 18756                           ; BSR set to: 0
 18757                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 18758                           
 18759                           ; BSR set to: 0
 18760  000AA0  0E00               	movlw	0
 18761  000AA2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 18762  000AA4  0E00               	movlw	0
 18763  000AA6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 18764  000AA8  0E00               	movlw	0
 18765  000AAA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 18766  000AAC  0E00               	movlw	0
 18767  000AAE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 18768  000AB0  EC93  F029         	call	_MSDCheckForErrorCases	;wreg free
 18769  000AB4  0900               	iorlw	0
 18770  000AB6  A4D8               	btfss	status,2,c
 18771  000AB8  0012               	return	
 18772                           
 18773                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 18774                           
 18775                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 18776  000ABA  0101               	movlb	1	; () banked
 18777  000ABC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18778  000ABE  0B0F               	andlw	15
 18779  000AC0  0A06               	xorlw	6
 18780  000AC2  A4D8               	btfss	status,2,c
 18781  000AC4  D007               	goto	l636
 18782                           
 18783                           ; BSR set to: 1
 18784  000AC6  010D               	movlb	13	; () banked
 18785  000AC8  058C               	decf	140,w,b	;volatile
 18786  000ACA  A4D8               	btfss	status,2,c
 18787  000ACC  D003               	goto	l636
 18788                           
 18789                           ; BSR set to: 13
 18790                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 18791  000ACE  0100               	movlb	0	; () banked
 18792  000AD0  69EC               	setf	_MSDCommandState& (0+255),b
 18793                           
 18794                           ;usb_device_msd.c: 870: }
 18795  000AD2  0012               	return	
 18796  000AD4                     l636:
 18797                           
 18798                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 18799                           
 18800                           ; BSR set to: 0
 18801  000AD4  EC31  F03B         	call	_ResetSenseData	;wreg free
 18802                           
 18803                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 18804  000AD8  0E00               	movlw	0
 18805  000ADA  010D               	movlb	13	; () banked
 18806  000ADC  6F88               	movwf	136,b	;volatile
 18807  000ADE  0E00               	movlw	0
 18808  000AE0  6F89               	movwf	137,b	;volatile
 18809  000AE2  0E00               	movlw	0
 18810  000AE4  6F8A               	movwf	138,b	;volatile
 18811  000AE6  0E00               	movlw	0
 18812  000AE8  6F8B               	movwf	139,b	;volatile
 18813                           
 18814                           ; BSR set to: 13
 18815                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 18816  000AEA  0100               	movlb	0	; () banked
 18817  000AEC  69EC               	setf	_MSDCommandState& (0+255),b
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 18821  000AEE  0012               	return	
 18822  000AF0                     
 18823                           ; BSR set to: 0
 18824                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 18825                           
 18826                           ; BSR set to: 0
 18827                           
 18828                           ; BSR set to: 0
 18829  000AF0  0E00               	movlw	0
 18830  000AF2  010D               	movlb	13	; () banked
 18831  000AF4  6F88               	movwf	136,b	;volatile
 18832  000AF6  0E00               	movlw	0
 18833  000AF8  6F89               	movwf	137,b	;volatile
 18834  000AFA  0E00               	movlw	0
 18835  000AFC  6F8A               	movwf	138,b	;volatile
 18836  000AFE  0E00               	movlw	0
 18837  000B00  6F8B               	movwf	139,b	;volatile
 18838                           
 18839                           ; BSR set to: 13
 18840                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 18841  000B02  0100               	movlb	0	; () banked
 18842  000B04  69EC               	setf	_MSDCommandState& (0+255),b
 18843                           
 18844                           ;usb_device_msd.c: 885: break;
 18845  000B06  0012               	return	
 18846  000B08                     
 18847                           ; BSR set to: 0
 18848                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 18849                           
 18850                           ; BSR set to: 0
 18851  000B08  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 18852  000B0A  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 18853  000B0C  B4D8               	btfsc	status,2,c
 18854  000B0E  D006               	goto	u9810
 18855                           
 18856                           ; BSR set to: 0
 18857  000B10  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 18858  000B14  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 18859  000B18  BEDF               	btfsc	indf2,7,c
 18860  000B1A  0012               	return	
 18861  000B1C                     u9810:
 18862                           
 18863                           ; BSR set to: 0
 18864                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 18865                           
 18866                           ; BSR set to: 0
 18867  000B1C  0101               	movlb	1	; () banked
 18868  000B1E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 18869  000B20  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18870  000B22  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18871  000B24  E104               	bnz	u9820
 18872  000B26  0E40               	movlw	64
 18873  000B28  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 18874  000B2A  A0D8               	btfss	status,0,c
 18875  000B2C  D009               	goto	l644
 18876  000B2E                     u9820:
 18877                           
 18878                           ; BSR set to: 1
 18879                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 18880  000B2E  0E40               	movlw	64
 18881  000B30  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 18882                           
 18883                           ; BSR set to: 1
 18884                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 18885  000B32  0E40               	movlw	64
 18886  000B34  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 18887  000B36  0E00               	movlw	0
 18888  000B38  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 18889  000B3A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 18890  000B3C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 18891                           
 18892                           ;usb_device_msd.c: 900: }
 18893  000B3E  D00A               	goto	l645
 18894  000B40                     l644:
 18895                           
 18896                           ; BSR set to: 1
 18897                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 18898  000B40  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 18899                           
 18900                           ; BSR set to: 1
 18901                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 18902  000B44  0E00               	movlw	0
 18903  000B46  6F08               	movwf	(_gblCBW+8)& (0+255),b
 18904  000B48  0E00               	movlw	0
 18905  000B4A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 18906  000B4C  0E00               	movlw	0
 18907  000B4E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 18908  000B50  0E00               	movlw	0
 18909  000B52  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 18910  000B54                     l645:
 18911                           
 18912                           ; BSR set to: 1
 18913                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 18914                           
 18915                           ; BSR set to: 1
 18916  000B54  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18917  000B56  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 18918  000B58  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 18919  000B5A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 18920  000B5C  0100               	movlb	0	; () banked
 18921  000B5E  5DDB               	subwf	_TransferLength& (0+255),w,b
 18922  000B60  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 18923  000B62  59DC               	subwfb	(_TransferLength+1)& (0+255),w,b
 18924  000B64  A0D8               	btfss	status,0,c
 18925  000B66  D005               	goto	l646
 18926                           
 18927                           ; BSR set to: 0
 18928                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 18929  000B68  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18930  000B6A  5FDB               	subwf	_TransferLength& (0+255),f,b
 18931  000B6C  0E00               	movlw	0
 18932  000B6E  5BDC               	subwfb	(_TransferLength+1)& (0+255),f,b
 18933                           
 18934                           ;usb_device_msd.c: 918: }
 18935  000B70  D01A               	goto	u9850
 18936  000B72                     l646:
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 18940                           
 18941                           ; BSR set to: 0
 18942  000B72  0E00               	movlw	0
 18943  000B74  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18944  000B76  D013               	goto	l648
 18945  000B78                     
 18946                           ; BSR set to: 0
 18947                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 18948                           
 18949                           ; BSR set to: 0
 18950  000B78  51DB               	movf	_TransferLength& (0+255),w,b
 18951  000B7A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 18952  000B7C  B4D8               	btfsc	status,2,c
 18953  000B7E  D004               	goto	l650
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 18957  000B80  07DB               	decf	_TransferLength& (0+255),f,b
 18958  000B82  A0D8               	btfss	status,0,c
 18959  000B84  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 18960                           
 18961                           ;usb_device_msd.c: 932: }
 18962  000B86  D00A               	goto	l651
 18963  000B88                     l650:
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 18967                           
 18968                           ; BSR set to: 0
 18969  000B88  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18970  000B8A  0D01               	mullw	1
 18971  000B8C  0E00               	movlw	0
 18972  000B8E  24F3               	addwf	prodl,w,c
 18973  000B90  6ED9               	movwf	fsr2l,c
 18974  000B92  0E06               	movlw	6
 18975  000B94  20F4               	addwfc	prodh,w,c
 18976  000B96  6EDA               	movwf	fsr2h,c
 18977  000B98  0E00               	movlw	0
 18978  000B9A  6EDF               	movwf	indf2,c
 18979  000B9C                     l651:
 18980                           
 18981                           ; BSR set to: 0
 18982                           
 18983                           ; BSR set to: 0
 18984  000B9C  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18985  000B9E                     l648:
 18986                           
 18987                           ; BSR set to: 0
 18988                           
 18989                           ; BSR set to: 0
 18990  000B9E  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18991  000BA0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 18992  000BA2  A0D8               	btfss	status,0,c
 18993  000BA4  D7E9               	goto	l649
 18994  000BA6                     u9850:
 18995                           
 18996                           ; BSR set to: 0
 18997                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 18998                           
 18999                           ; BSR set to: 0
 19000                           
 19001                           ; BSR set to: 0
 19002  000BA6  0E01               	movlw	1
 19003  000BA8  6E01               	movwf	USBTransferOnePacket@dir,c
 19004  000BAA  0E00               	movlw	0
 19005  000BAC  6E02               	movwf	USBTransferOnePacket@data,c
 19006  000BAE  0E06               	movlw	6
 19007  000BB0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19008  000BB2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19009  000BB6  0E02               	movlw	2
 19010  000BB8  ECD3  F025         	call	_USBTransferOnePacket
 19011  000BBC  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19012  000BC0  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19013                           
 19014                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19015  000BC4  0101               	movlb	1	; () banked
 19016  000BC6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19017  000BC8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19018  000BCA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19019  000BCC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19020  000BCE  A4D8               	btfss	status,2,c
 19021  000BD0  0012               	return	
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19025  000BD2  0100               	movlb	0	; () banked
 19026  000BD4  69EC               	setf	_MSDCommandState& (0+255),b
 19027                           
 19028                           ; BSR set to: 0
 19029                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19030                           
 19031                           ; BSR set to: 0
 19032                           
 19033                           ;usb_device_msd.c: 949: break;
 19034  000BD6  0012               	return	
 19035  000BD8                     
 19036                           ; BSR set to: 0
 19037                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19038                           
 19039                           ; BSR set to: 0
 19040                           
 19041                           ;usb_device_msd.c: 954: default:
 19042                           
 19043                           ; BSR set to: 0
 19044  000BD8  0E7F               	movlw	127
 19045  000BDA  ECCF  F024         	call	_MSDErrorHandler
 19046                           
 19047                           ;usb_device_msd.c: 960: }
 19048                           
 19049                           ;usb_device_msd.c: 959: break;
 19050  000BDE  0012               	return	
 19051  000BE0                     l614:
 19052  000BE0  0100               	movlb	0	; () banked
 19053  000BE2  51EC               	movf	_MSDCommandState& (0+255),w,b
 19054                           
 19055                           ; Switch size 1, requested type "space"
 19056                           ; Number of cases is 12, Range of values is 0 to 254
 19057                           ; switch strategies available:
 19058                           ; Name         Instructions Cycles
 19059                           ; simple_byte           37    19 (average)
 19060                           ;	Chosen strategy is simple_byte
 19061  000BE4  0A00               	xorlw	0	; case 0
 19062  000BE6  B4D8               	btfsc	status,2,c
 19063  000BE8  D75B               	goto	l634
 19064  000BEA  0A03               	xorlw	3	; case 3
 19065  000BEC  B4D8               	btfsc	status,2,c
 19066  000BEE  D6DD               	goto	l624
 19067  000BF0  0A11               	xorlw	17	; case 18
 19068  000BF2  B4D8               	btfsc	status,2,c
 19069  000BF4  D64C               	goto	l620
 19070  000BF6  0A08               	xorlw	8	; case 26
 19071  000BF8  B4D8               	btfsc	status,2,c
 19072  000BFA  D704               	goto	l628
 19073  000BFC  0A01               	xorlw	1	; case 27
 19074  000BFE  B4D8               	btfsc	status,2,c
 19075  000C00  D777               	goto	l638
 19076  000C02  0A05               	xorlw	5	; case 30
 19077  000C04  B4D8               	btfsc	status,2,c
 19078  000C06  D735               	goto	l633
 19079  000C08  0A3B               	xorlw	59	; case 37
 19080  000C0A  B4D8               	btfsc	status,2,c
 19081  000C0C  D671               	goto	l623
 19082  000C0E  0A0D               	xorlw	13	; case 40
 19083  000C10  B4D8               	btfsc	status,2,c
 19084  000C12  D62D               	goto	l615
 19085  000C14  0A02               	xorlw	2	; case 42
 19086  000C16  B4D8               	btfsc	status,2,c
 19087  000C18  D632               	goto	l618
 19088  000C1A  0A05               	xorlw	5	; case 47
 19089  000C1C  B4D8               	btfsc	status,2,c
 19090  000C1E  D768               	goto	l638
 19091  000C20  0AD2               	xorlw	210	; case 253
 19092  000C22  B4D8               	btfsc	status,2,c
 19093  000C24  D771               	goto	l640
 19094  000C26  0A03               	xorlw	3	; case 254
 19095  000C28  D7D7               	goto	l654
 19096  000C2A                     __end_of_MSDProcessCommandMediaPresent:
 19097                           	opt stack 0
 19098                           tosu	equ	0xFFF
 19099                           tosh	equ	0xFFE
 19100                           tosl	equ	0xFFD
 19101                           pclath	equ	0xFFA
 19102                           tblptru	equ	0xFF8
 19103                           tblptrh	equ	0xFF7
 19104                           tblptrl	equ	0xFF6
 19105                           tablat	equ	0xFF5
 19106                           prodh	equ	0xFF4
 19107                           prodl	equ	0xFF3
 19108                           intcon	equ	0xFF2
 19109                           intcon2	equ	0xFF1
 19110                           intcon3	equ	0xFF0
 19111                           indf0	equ	0xFEF
 19112                           postinc0	equ	0xFEE
 19113                           fsr0h	equ	0xFEA
 19114                           fsr0l	equ	0xFE9
 19115                           wreg	equ	0xFE8
 19116                           indf1	equ	0xFE7
 19117                           postdec1	equ	0xFE5
 19118                           plusw1	equ	0xFE3
 19119                           fsr1h	equ	0xFE2
 19120                           fsr1l	equ	0xFE1
 19121                           indf2	equ	0xFDF
 19122                           postinc2	equ	0xFDE
 19123                           postdec2	equ	0xFDD
 19124                           plusw2	equ	0xFDB
 19125                           fsr2h	equ	0xFDA
 19126                           fsr2l	equ	0xFD9
 19127                           status	equ	0xFD8
 19128                           
 19129 ;; *************** function _MSDWriteHandler *****************
 19130 ;; Defined at:
 19131 ;;		line 1188 in file "usb_device_msd.c"
 19132 ;; Parameters:    Size  Location     Type
 19133 ;;		None
 19134 ;; Auto vars:     Size  Location     Type
 19135 ;;		None
 19136 ;; Return value:  Size  Location     Type
 19137 ;;                  1    wreg      unsigned char 
 19138 ;; Registers used:
 19139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19140 ;; Tracked objects:
 19141 ;;		On entry : 0/0
 19142 ;;		On exit  : 0/0
 19143 ;;		Unchanged: 0/0
 19144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19147 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19148 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19149 ;;Total ram usage:        5 bytes
 19150 ;; Hardware stack levels used:    1
 19151 ;; Hardware stack levels required when called:    6
 19152 ;; This function calls:
 19153 ;;		_ExternalFlash_SectorWrite
 19154 ;;		_ExternalFlash_WriteProtectStateGet
 19155 ;;		_MSDCheckForErrorCases
 19156 ;;		_USBStallEndpoint
 19157 ;;		_USBTransferOnePacket
 19158 ;; This function is called by:
 19159 ;;		_MSDProcessCommandMediaPresent
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           	psect	text87
 19164  0015D2                     __ptext87:
 19165                           	opt stack 0
 19166  0015D2                     _MSDWriteHandler:
 19167                           	opt stack 20
 19168                           
 19169                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19170                           
 19171                           ;incstack = 0
 19172  0015D2  D146               	goto	l684
 19173  0015D4                     l685:
 19174                           
 19175                           ; BSR set to: 0
 19176                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19177  0015D4  C111  F161         	movff	_gblCBW+17,_LBA+3
 19178                           
 19179                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19180  0015D8  C112  F160         	movff	_gblCBW+18,_LBA+2
 19181                           
 19182                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19183  0015DC  C113  F15F         	movff	_gblCBW+19,_LBA+1
 19184                           
 19185                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19186  0015E0  C114  F15E         	movff	_gblCBW+20,_LBA
 19187                           
 19188                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19189  0015E4  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 19190                           
 19191                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19192  0015E8  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 19193                           
 19194                           ; BSR set to: 0
 19195                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19196  0015EC  51DB               	movf	_TransferLength& (0+255),w,b
 19197  0015EE  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19198  0015F0  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 19199  0015F2  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19200  0015F4  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19201  0015F6  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19202  0015F8  0E09               	movlw	9
 19203  0015FA                     u8345:
 19204  0015FA  90D8               	bcf	status,0,c
 19205  0015FC  3630               	rlcf	??_MSDWriteHandler,f,c
 19206  0015FE  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19207  001600  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19208  001602  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19209  001604  2EE8               	decfsz	wreg,f,c
 19210  001606  D7F9               	goto	u8345
 19211  001608  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19212  00160C  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19213  001610  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19214  001614  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19215  001618  EC93  F029         	call	_MSDCheckForErrorCases	;wreg free
 19216  00161C  0900               	iorlw	0
 19217  00161E  A4D8               	btfss	status,2,c
 19218  001620  D131               	goto	l687
 19219                           
 19220                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19221                           
 19222                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19223  001622  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19224  001626  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19225  00162A  D801               	call	u8368
 19226  00162C  D00A               	goto	u8369
 19227  00162E                     u8368:
 19228  00162E  0005               	push	
 19229  001630  6EFA               	movwf	pclath,c
 19230  001632  0101               	movlb	1	; () banked
 19231  001634  51BD               	movf	(_LUN+10)& (0+255),w,b
 19232  001636  6EFD               	movwf	tosl,c
 19233  001638  51BE               	movf	(_LUN+11)& (0+255),w,b
 19234  00163A  6EFE               	movwf	tosh,c
 19235  00163C  6AFF               	clrf	tosu,c
 19236  00163E  50FA               	movf	pclath,w,c
 19237  001640  0012               	return		;indir
 19238  001642                     u8369:
 19239  001642  0900               	iorlw	0
 19240  001644  B4D8               	btfsc	status,2,c
 19241  001646  D016               	goto	l688
 19242                           
 19243                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19244  001648  0E01               	movlw	1
 19245  00164A  010D               	movlb	13	; () banked
 19246  00164C  6F8C               	movwf	140,b	;volatile
 19247                           
 19248                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19249  00164E  0101               	movlb	1	; () banked
 19250  001650  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19251  001652  0BF0               	andlw	-16
 19252  001654  0907               	iorlw	7
 19253  001656  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19254                           
 19255                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19256  001658  0E27               	movlw	39
 19257  00165A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19258                           
 19259                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19260  00165C  0E00               	movlw	0
 19261  00165E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19262                           
 19263                           ; BSR set to: 1
 19264                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19265  001660  0E00               	movlw	0
 19266  001662  6E01               	movwf	USBStallEndpoint@dir,c
 19267  001664  0E02               	movlw	2
 19268  001666  ECC8  F023         	call	_USBStallEndpoint
 19269                           
 19270                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19271  00166A  0E00               	movlw	0
 19272  00166C  0100               	movlb	0	; () banked
 19273  00166E  6FEA               	movwf	_MSDWriteState& (0+255),b
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19277  001670  51EA               	movf	_MSDWriteState& (0+255),w,b
 19278                           
 19279                           ; BSR set to: 0
 19280  001672  0012               	return	
 19281  001674                     l688:
 19282                           
 19283                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19284                           
 19285                           ; BSR set to: 0
 19286  001674  0E01               	movlw	1
 19287  001676  0100               	movlb	0	; () banked
 19288  001678  6FED               	movwf	_MSD_State& (0+255),b
 19289  00167A                     
 19290                           ; BSR set to: 0
 19291                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19292                           
 19293                           ; BSR set to: 0
 19294  00167A  51DB               	movf	_TransferLength& (0+255),w,b
 19295  00167C  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19296  00167E  A4D8               	btfss	status,2,c
 19297  001680  D002               	goto	l691
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19301  001682  0E00               	movlw	0
 19302  001684  D056               	goto	L20
 19303  001686                     l691:
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19307                           
 19308                           ; BSR set to: 0
 19309  001686  0E03               	movlw	3
 19310  001688  6FEA               	movwf	_MSDWriteState& (0+255),b
 19311                           
 19312                           ; BSR set to: 0
 19313                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19314  00168A  0E00               	movlw	0
 19315  00168C  0101               	movlb	1	; () banked
 19316  00168E  6F86               	movwf	_ptrNextData& (0+255),b
 19317  001690  0E06               	movlw	6
 19318  001692  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 19319                           
 19320                           ; BSR set to: 1
 19321                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19322  001694  0E00               	movlw	0
 19323  001696  010D               	movlb	13	; () banked
 19324  001698  6F88               	movwf	136,b	;volatile
 19325  00169A  0E02               	movlw	2
 19326  00169C  6F89               	movwf	137,b	;volatile
 19327  00169E  0E00               	movlw	0
 19328  0016A0  6F8A               	movwf	138,b	;volatile
 19329  0016A2  0E00               	movlw	0
 19330  0016A4  6F8B               	movwf	139,b	;volatile
 19331  0016A6                     l692:
 19332                           
 19333                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19334  0016A6  010D               	movlb	13	; () banked
 19335  0016A8  5188               	movf	136,w,b	;volatile
 19336  0016AA  1189               	iorwf	137,w,b	;volatile
 19337  0016AC  118A               	iorwf	138,w,b	;volatile
 19338  0016AE  118B               	iorwf	139,w,b	;volatile
 19339  0016B0  B4D8               	btfsc	status,2,c
 19340  0016B2  D01E               	goto	l693
 19341                           
 19342                           ; BSR set to: 13
 19343                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19344  0016B4  0100               	movlb	0	; () banked
 19345  0016B6  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19346  0016B8  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19347  0016BA  B4D8               	btfsc	status,2,c
 19348  0016BC  D006               	goto	l694
 19349                           
 19350                           ; BSR set to: 0
 19351  0016BE  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19352  0016C2  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19353  0016C6  BEDF               	btfsc	indf2,7,c
 19354  0016C8  D0DD               	goto	l687
 19355  0016CA                     l694:
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19359                           
 19360                           ; BSR set to: 0
 19361  0016CA  0E00               	movlw	0
 19362  0016CC  6E01               	movwf	USBTransferOnePacket@dir,c
 19363  0016CE  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19364  0016D2  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19365  0016D6  0E40               	movlw	64
 19366  0016D8  6E04               	movwf	USBTransferOnePacket@len,c
 19367  0016DA  0E02               	movlw	2
 19368  0016DC  ECD3  F025         	call	_USBTransferOnePacket
 19369  0016E0  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19370  0016E4  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19371                           
 19372                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19373  0016E8  0E04               	movlw	4
 19374  0016EA  0100               	movlb	0	; () banked
 19375  0016EC  6FEA               	movwf	_MSDWriteState& (0+255),b
 19376                           
 19377                           ;usb_device_msd.c: 1260: }
 19378  0016EE  D023               	goto	l695
 19379  0016F0                     l693:
 19380                           
 19381                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19382                           
 19383                           ; BSR set to: 0
 19384  0016F0  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19385  0016F4  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19386  0016F8  D801               	call	u8428
 19387  0016FA  D00A               	goto	u8429
 19388  0016FC                     u8428:
 19389  0016FC  0005               	push	
 19390  0016FE  6EFA               	movwf	pclath,c
 19391  001700  0101               	movlb	1	; () banked
 19392  001702  51BD               	movf	(_LUN+10)& (0+255),w,b
 19393  001704  6EFD               	movwf	tosl,c
 19394  001706  51BE               	movf	(_LUN+11)& (0+255),w,b
 19395  001708  6EFE               	movwf	tosh,c
 19396  00170A  6AFF               	clrf	tosu,c
 19397  00170C  50FA               	movf	pclath,w,c
 19398  00170E  0012               	return		;indir
 19399  001710                     u8429:
 19400  001710  0900               	iorlw	0
 19401  001712  B4D8               	btfsc	status,2,c
 19402  001714  D00C               	goto	l696
 19403                           
 19404                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19405  001716  0E01               	movlw	1
 19406  001718  010D               	movlb	13	; () banked
 19407  00171A  6F8C               	movwf	140,b	;volatile
 19408                           
 19409                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19410  00171C  0101               	movlb	1	; () banked
 19411  00171E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19412  001720  0BF0               	andlw	-16
 19413  001722  0902               	iorlw	2
 19414  001724  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19415                           
 19416                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19417  001726  0E27               	movlw	39
 19418  001728  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19419                           
 19420                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19421  00172A  0E00               	movlw	0
 19422  00172C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19423  00172E                     l696:
 19424                           
 19425                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19426  00172E  0E02               	movlw	2
 19427  001730  D095               	goto	L22
 19428  001732                     L20:
 19429  001732  6FEA               	movwf	_MSDWriteState& (0+255),b
 19430                           
 19431                           ;usb_device_msd.c: 1280: break;
 19432  001734  D0A7               	goto	l687
 19433  001736                     l695:
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19437                           
 19438                           ; BSR set to: 0
 19439                           
 19440                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19441                           
 19442                           ; BSR set to: 0
 19443  001736  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19444  001738  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19445  00173A  B4D8               	btfsc	status,2,c
 19446  00173C  D006               	goto	l698
 19447                           
 19448                           ; BSR set to: 0
 19449  00173E  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19450  001742  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19451  001746  BEDF               	btfsc	indf2,7,c
 19452  001748  D09D               	goto	l687
 19453  00174A                     l698:
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19457                           
 19458                           ; BSR set to: 0
 19459  00174A  EE20 F001          	lfsr	2,1
 19460  00174E  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19461  001750  26D9               	addwf	fsr2l,f,c
 19462  001752  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19463  001754  22DA               	addwfc	fsr2h,f,c
 19464  001756  50DF               	movf	indf2,w,c
 19465  001758  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19466  00175A  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19467  00175E  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19468  001760  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19469  001762  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19470  001764  5031               	movf	??_MSDWriteHandler+1,w,c
 19471  001766  0101               	movlb	1	; () banked
 19472  001768  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19473  00176A  5032               	movf	??_MSDWriteHandler+2,w,c
 19474  00176C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19475  00176E  5033               	movf	??_MSDWriteHandler+3,w,c
 19476  001770  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19477  001772  5034               	movf	??_MSDWriteHandler+4,w,c
 19478  001774  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19479                           
 19480                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19481  001776  0100               	movlb	0	; () banked
 19482  001778  EE20 F001          	lfsr	2,1
 19483  00177C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19484  00177E  26D9               	addwf	fsr2l,f,c
 19485  001780  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19486  001782  22DA               	addwfc	fsr2h,f,c
 19487  001784  50DF               	movf	indf2,w,c
 19488  001786  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19489  001788  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19490  00178C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19491  00178E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19492  001790  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19493  001792  5031               	movf	??_MSDWriteHandler+1,w,c
 19494  001794  010D               	movlb	13	; () banked
 19495  001796  5F88               	subwf	136,f,b	;volatile
 19496  001798  5032               	movf	??_MSDWriteHandler+2,w,c
 19497  00179A  5B89               	subwfb	137,f,b	;volatile
 19498  00179C  5033               	movf	??_MSDWriteHandler+3,w,c
 19499  00179E  5B8A               	subwfb	138,f,b	;volatile
 19500  0017A0  5034               	movf	??_MSDWriteHandler+4,w,c
 19501  0017A2  5B8B               	subwfb	139,f,b	;volatile
 19502                           
 19503                           ; BSR set to: 13
 19504                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19505  0017A4  0E40               	movlw	64
 19506  0017A6  0101               	movlb	1	; () banked
 19507  0017A8  2786               	addwf	_ptrNextData& (0+255),f,b
 19508  0017AA  0E00               	movlw	0
 19509  0017AC  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19510                           
 19511                           ; BSR set to: 1
 19512                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19513  0017AE  0E03               	movlw	3
 19514  0017B0  D055               	goto	L22
 19515  0017B2                     
 19516                           ; BSR set to: 0
 19517                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19518                           
 19519                           ; BSR set to: 0
 19520  0017B2  010D               	movlb	13	; () banked
 19521  0017B4  518C               	movf	140,w,b	;volatile
 19522  0017B6  A4D8               	btfss	status,2,c
 19523  0017B8  D03B               	goto	l703
 19524                           
 19525                           ; BSR set to: 13
 19526                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19527  0017BA  C1C1  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19528  0017BE  C1C2  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19529  0017C2  C15E  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19530  0017C6  C15F  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19531  0017CA  C160  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19532  0017CE  C161  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19533  0017D2  0E00               	movlw	0
 19534  0017D4  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19535  0017D6  0E06               	movlw	6
 19536  0017D8  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19537  0017DA  0101               	movlb	1	; () banked
 19538  0017DC  515E               	movf	_LBA& (0+255),w,b
 19539  0017DE  115F               	iorwf	(_LBA+1)& (0+255),w,b
 19540  0017E0  1160               	iorwf	(_LBA+2)& (0+255),w,b
 19541  0017E2  1161               	iorwf	(_LBA+3)& (0+255),w,b
 19542  0017E4  A4D8               	btfss	status,2,c
 19543  0017E6  D002               	goto	u8470
 19544  0017E8  0E01               	movlw	1
 19545  0017EA  D001               	goto	u8480
 19546  0017EC                     u8470:
 19547  0017EC  0E00               	movlw	0
 19548  0017EE                     u8480:
 19549  0017EE  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19550  0017F0  D801               	call	u8498
 19551  0017F2  D009               	goto	u8499
 19552  0017F4                     u8498:
 19553  0017F4  0005               	push	
 19554  0017F6  6EFA               	movwf	pclath,c
 19555  0017F8  51BF               	movf	(_LUN+12)& (0+255),w,b
 19556  0017FA  6EFD               	movwf	tosl,c
 19557  0017FC  51C0               	movf	(_LUN+13)& (0+255),w,b
 19558  0017FE  6EFE               	movwf	tosh,c
 19559  001800  6AFF               	clrf	tosu,c
 19560  001802  50FA               	movf	pclath,w,c
 19561  001804  0012               	return		;indir
 19562  001806                     u8499:
 19563  001806  06E8               	decf	wreg,f,c
 19564  001808  B4D8               	btfsc	status,2,c
 19565  00180A  D012               	goto	l703
 19566                           
 19567                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 19568  00180C  0E64               	movlw	100
 19569  00180E  0100               	movlb	0	; () banked
 19570  001810  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 19571  001812  D002               	goto	l702
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 19575  001814  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 19576                           
 19577                           ;usb_device_msd.c: 1314: break;
 19578  001816  D036               	goto	l687
 19579  001818                     l702:
 19580                           
 19581                           ; BSR set to: 0
 19582                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 19583                           
 19584                           ; BSR set to: 0
 19585  001818  0E01               	movlw	1
 19586  00181A  010D               	movlb	13	; () banked
 19587  00181C  6F8C               	movwf	140,b	;volatile
 19588                           
 19589                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 19590  00181E  0101               	movlb	1	; () banked
 19591  001820  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19592  001822  0BF0               	andlw	-16
 19593  001824  0903               	iorlw	3
 19594  001826  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19595                           
 19596                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 19597  001828  0E00               	movlw	0
 19598  00182A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19599                           
 19600                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 19601  00182C  0E00               	movlw	0
 19602  00182E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19603  001830                     l703:
 19604                           
 19605                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 19606                           
 19607                           ; BSR set to: 1
 19608                           
 19609                           ; BSR set to: 1
 19610                           
 19611                           ; BSR set to: 1
 19612  001830  0E01               	movlw	1
 19613  001832  0101               	movlb	1	; () banked
 19614  001834  275E               	addwf	_LBA& (0+255),f,b
 19615  001836  0E00               	movlw	0
 19616  001838  235F               	addwfc	(_LBA+1)& (0+255),f,b
 19617  00183A  2360               	addwfc	(_LBA+2)& (0+255),f,b
 19618  00183C  2361               	addwfc	(_LBA+3)& (0+255),f,b
 19619                           
 19620                           ; BSR set to: 1
 19621                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 19622  00183E  0100               	movlb	0	; () banked
 19623  001840  07DB               	decf	_TransferLength& (0+255),f,b
 19624  001842  A0D8               	btfss	status,0,c
 19625  001844  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19626                           
 19627                           ; BSR set to: 0
 19628                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 19629  001846  0E01               	movlw	1
 19630  001848  D774               	goto	L20
 19631  00184A                     
 19632                           ; BSR set to: 0
 19633                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 19634                           
 19635                           ; BSR set to: 0
 19636  00184A  0E02               	movlw	2
 19637  00184C  010D               	movlb	13	; () banked
 19638  00184E  6F8C               	movwf	140,b	;volatile
 19639                           
 19640                           ; BSR set to: 13
 19641                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 19642  001850  0E00               	movlw	0
 19643  001852  6E01               	movwf	USBStallEndpoint@dir,c
 19644  001854  0E02               	movlw	2
 19645  001856  ECC8  F023         	call	_USBStallEndpoint
 19646                           
 19647                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 19648  00185A  0E00               	movlw	0
 19649  00185C                     L22:
 19650  00185C  0100               	movlb	0	; () banked
 19651  00185E  D769               	goto	L20
 19652  001860                     l684:
 19653                           
 19654                           ; BSR set to: 0
 19655  001860  0100               	movlb	0	; () banked
 19656  001862  51EA               	movf	_MSDWriteState& (0+255),w,b
 19657                           
 19658                           ; Switch size 1, requested type "space"
 19659                           ; Number of cases is 5, Range of values is 0 to 4
 19660                           ; switch strategies available:
 19661                           ; Name         Instructions Cycles
 19662                           ; simple_byte           16     9 (average)
 19663                           ;	Chosen strategy is simple_byte
 19664  001864  0A00               	xorlw	0	; case 0
 19665  001866  B4D8               	btfsc	status,2,c
 19666  001868  D6B5               	goto	l685
 19667  00186A  0A01               	xorlw	1	; case 1
 19668  00186C  B4D8               	btfsc	status,2,c
 19669  00186E  D705               	goto	l690
 19670  001870  0A03               	xorlw	3	; case 2
 19671  001872  B4D8               	btfsc	status,2,c
 19672  001874  D79E               	goto	l699
 19673  001876  0A01               	xorlw	1	; case 3
 19674  001878  B4D8               	btfsc	status,2,c
 19675  00187A  D715               	goto	l692
 19676  00187C  0A07               	xorlw	7	; case 4
 19677  00187E  B4D8               	btfsc	status,2,c
 19678  001880  D75A               	goto	l695
 19679  001882  D7E3               	goto	l704
 19680  001884                     l687:
 19681                           
 19682                           ;usb_device_msd.c: 1347: return MSDWriteState;
 19683                           
 19684                           ; BSR set to: 0
 19685  001884  0100               	movlb	0	; () banked
 19686  001886  51EA               	movf	_MSDWriteState& (0+255),w,b
 19687  001888  0012               	return	
 19688  00188A                     __end_of_MSDWriteHandler:
 19689                           	opt stack 0
 19690                           tosu	equ	0xFFF
 19691                           tosh	equ	0xFFE
 19692                           tosl	equ	0xFFD
 19693                           pclath	equ	0xFFA
 19694                           tblptru	equ	0xFF8
 19695                           tblptrh	equ	0xFF7
 19696                           tblptrl	equ	0xFF6
 19697                           tablat	equ	0xFF5
 19698                           prodh	equ	0xFF4
 19699                           prodl	equ	0xFF3
 19700                           intcon	equ	0xFF2
 19701                           intcon2	equ	0xFF1
 19702                           intcon3	equ	0xFF0
 19703                           indf0	equ	0xFEF
 19704                           postinc0	equ	0xFEE
 19705                           fsr0h	equ	0xFEA
 19706                           fsr0l	equ	0xFE9
 19707                           wreg	equ	0xFE8
 19708                           indf1	equ	0xFE7
 19709                           postdec1	equ	0xFE5
 19710                           plusw1	equ	0xFE3
 19711                           fsr1h	equ	0xFE2
 19712                           fsr1l	equ	0xFE1
 19713                           indf2	equ	0xFDF
 19714                           postinc2	equ	0xFDE
 19715                           postdec2	equ	0xFDD
 19716                           plusw2	equ	0xFDB
 19717                           fsr2h	equ	0xFDA
 19718                           fsr2l	equ	0xFD9
 19719                           status	equ	0xFD8
 19720                           
 19721 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 19722 ;; Defined at:
 19723 ;;		line 34 in file "external_flash.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;  config          2    0[COMRAM] PTR void 
 19726 ;;		 -> NULL(0), 
 19727 ;; Auto vars:     Size  Location     Type
 19728 ;;		None
 19729 ;; Return value:  Size  Location     Type
 19730 ;;                  1    wreg      unsigned char 
 19731 ;; Registers used:
 19732 ;;		wreg
 19733 ;; Tracked objects:
 19734 ;;		On entry : 0/0
 19735 ;;		On exit  : 0/0
 19736 ;;		Unchanged: 0/0
 19737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19742 ;;Total ram usage:        2 bytes
 19743 ;; Hardware stack levels used:    1
 19744 ;; This function calls:
 19745 ;;		Nothing
 19746 ;; This function is called by:
 19747 ;;		_MSDWriteHandler
 19748 ;;		_MSDProcessCommandMediaPresent
 19749 ;; This function uses a non-reentrant model
 19750 ;;
 19751                           
 19752                           	psect	text88
 19753  008A98                     __ptext88:
 19754                           	opt stack 0
 19755  008A98                     _ExternalFlash_WriteProtectStateGet:
 19756                           	opt stack 25
 19757                           
 19758                           ;external_flash.c: 37: return 0;
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;incstack = 0
 19762  008A98  0E00               	movlw	0
 19763  008A9A  0012               	return	
 19764  008A9C                     __end_of_ExternalFlash_WriteProtectStateGet:
 19765                           	opt stack 0
 19766                           tosu	equ	0xFFF
 19767                           tosh	equ	0xFFE
 19768                           tosl	equ	0xFFD
 19769                           pclath	equ	0xFFA
 19770                           tblptru	equ	0xFF8
 19771                           tblptrh	equ	0xFF7
 19772                           tblptrl	equ	0xFF6
 19773                           tablat	equ	0xFF5
 19774                           prodh	equ	0xFF4
 19775                           prodl	equ	0xFF3
 19776                           intcon	equ	0xFF2
 19777                           intcon2	equ	0xFF1
 19778                           intcon3	equ	0xFF0
 19779                           indf0	equ	0xFEF
 19780                           postinc0	equ	0xFEE
 19781                           fsr0h	equ	0xFEA
 19782                           fsr0l	equ	0xFE9
 19783                           wreg	equ	0xFE8
 19784                           indf1	equ	0xFE7
 19785                           postdec1	equ	0xFE5
 19786                           plusw1	equ	0xFE3
 19787                           fsr1h	equ	0xFE2
 19788                           fsr1l	equ	0xFE1
 19789                           indf2	equ	0xFDF
 19790                           postinc2	equ	0xFDE
 19791                           postdec2	equ	0xFDD
 19792                           plusw2	equ	0xFDB
 19793                           fsr2h	equ	0xFDA
 19794                           fsr2l	equ	0xFD9
 19795                           status	equ	0xFD8
 19796                           
 19797 ;; *************** function _ExternalFlash_SectorWrite *****************
 19798 ;; Defined at:
 19799 ;;		line 56 in file "external_flash.c"
 19800 ;; Parameters:    Size  Location     Type
 19801 ;;  config          2   36[COMRAM] PTR void 
 19802 ;;		 -> NULL(0), 
 19803 ;;  sector_addr     4   38[COMRAM] unsigned long 
 19804 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 19805 ;;		 -> msd_buffer(512), 
 19806 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 19807 ;; Auto vars:     Size  Location     Type
 19808 ;;  page            2   45[COMRAM] unsigned int 
 19809 ;; Return value:  Size  Location     Type
 19810 ;;                  1    wreg      unsigned char 
 19811 ;; Registers used:
 19812 ;;		wreg, status,2, status,0, cstack
 19813 ;; Tracked objects:
 19814 ;;		On entry : 0/0
 19815 ;;		On exit  : 0/0
 19816 ;;		Unchanged: 0/0
 19817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19818 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19821 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;Total ram usage:       11 bytes
 19823 ;; Hardware stack levels used:    1
 19824 ;; Hardware stack levels required when called:    5
 19825 ;; This function calls:
 19826 ;;		_flash_sector_write
 19827 ;; This function is called by:
 19828 ;;		_MSDWriteHandler
 19829 ;; This function uses a non-reentrant model
 19830 ;;
 19831                           
 19832                           	psect	text89
 19833  00838E                     __ptext89:
 19834                           	opt stack 0
 19835  00838E                     _ExternalFlash_SectorWrite:
 19836                           	opt stack 20
 19837                           
 19838                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 19839                           
 19840                           ;incstack = 0
 19841  00838E  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 19842  008392  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 19843                           
 19844                           ;external_flash.c: 61: if(sector_addr >= 8192)
 19845  008396  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 19846  008398  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 19847  00839A  E104               	bnz	u7790
 19848  00839C  0E20               	movlw	32
 19849  00839E  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 19850  0083A0  A0D8               	btfss	status,0,c
 19851  0083A2  D002               	goto	l1880
 19852  0083A4                     u7790:
 19853                           
 19854                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 19855  0083A4  0E00               	movlw	0
 19856  0083A6  0012               	return	
 19857  0083A8                     l1880:
 19858                           
 19859                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 19860  0083A8  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 19861  0083AC  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 19862  0083B0  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 19863  0083B4  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 19864  0083B8  ECA8  F03D         	call	_flash_sector_write	;wreg free
 19865                           
 19866                           ;external_flash.c: 69: return 1;
 19867  0083BC  0E01               	movlw	1
 19868  0083BE  0012               	return	
 19869  0083C0                     __end_of_ExternalFlash_SectorWrite:
 19870                           	opt stack 0
 19871                           tosu	equ	0xFFF
 19872                           tosh	equ	0xFFE
 19873                           tosl	equ	0xFFD
 19874                           pclath	equ	0xFFA
 19875                           tblptru	equ	0xFF8
 19876                           tblptrh	equ	0xFF7
 19877                           tblptrl	equ	0xFF6
 19878                           tablat	equ	0xFF5
 19879                           prodh	equ	0xFF4
 19880                           prodl	equ	0xFF3
 19881                           intcon	equ	0xFF2
 19882                           intcon2	equ	0xFF1
 19883                           intcon3	equ	0xFF0
 19884                           indf0	equ	0xFEF
 19885                           postinc0	equ	0xFEE
 19886                           fsr0h	equ	0xFEA
 19887                           fsr0l	equ	0xFE9
 19888                           wreg	equ	0xFE8
 19889                           indf1	equ	0xFE7
 19890                           postdec1	equ	0xFE5
 19891                           plusw1	equ	0xFE3
 19892                           fsr1h	equ	0xFE2
 19893                           fsr1l	equ	0xFE1
 19894                           indf2	equ	0xFDF
 19895                           postinc2	equ	0xFDE
 19896                           postdec2	equ	0xFDD
 19897                           plusw2	equ	0xFDB
 19898                           fsr2h	equ	0xFDA
 19899                           fsr2l	equ	0xFD9
 19900                           status	equ	0xFD8
 19901                           
 19902 ;; *************** function _MSDReadHandler *****************
 19903 ;; Defined at:
 19904 ;;		line 1038 in file "usb_device_msd.c"
 19905 ;; Parameters:    Size  Location     Type
 19906 ;;		None
 19907 ;; Auto vars:     Size  Location     Type
 19908 ;;		None
 19909 ;; Return value:  Size  Location     Type
 19910 ;;                  1    wreg      unsigned char 
 19911 ;; Registers used:
 19912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19913 ;; Tracked objects:
 19914 ;;		On entry : 0/0
 19915 ;;		On exit  : 0/0
 19916 ;;		Unchanged: 0/0
 19917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19920 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19922 ;;Total ram usage:        4 bytes
 19923 ;; Hardware stack levels used:    1
 19924 ;; Hardware stack levels required when called:    6
 19925 ;; This function calls:
 19926 ;;		_ExternalFlash_SectorRead
 19927 ;;		_MSDCheckForErrorCases
 19928 ;;		_USBStallEndpoint
 19929 ;;		_USBTransferOnePacket
 19930 ;; This function is called by:
 19931 ;;		_MSDProcessCommandMediaPresent
 19932 ;; This function uses a non-reentrant model
 19933 ;;
 19934                           
 19935                           	psect	text90
 19936  003092                     __ptext90:
 19937                           	opt stack 0
 19938  003092                     _MSDReadHandler:
 19939                           	opt stack 20
 19940                           
 19941                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 19942                           
 19943                           ;incstack = 0
 19944  003092  D0D7               	goto	l665
 19945  003094                     l666:
 19946                           
 19947                           ; BSR set to: 0
 19948                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 19949  003094  C111  F161         	movff	_gblCBW+17,_LBA+3
 19950                           
 19951                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 19952  003098  C112  F160         	movff	_gblCBW+18,_LBA+2
 19953                           
 19954                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 19955  00309C  C113  F15F         	movff	_gblCBW+19,_LBA+1
 19956                           
 19957                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 19958  0030A0  C114  F15E         	movff	_gblCBW+20,_LBA
 19959                           
 19960                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 19961  0030A4  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 19962                           
 19963                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 19964  0030A8  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19968  0030AC  51DB               	movf	_TransferLength& (0+255),w,b
 19969  0030AE  6E36               	movwf	??_MSDReadHandler& (0+255),c
 19970  0030B0  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 19971  0030B2  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 19972  0030B4  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 19973  0030B6  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 19974  0030B8  0E09               	movlw	9
 19975  0030BA                     u8235:
 19976  0030BA  90D8               	bcf	status,0,c
 19977  0030BC  3636               	rlcf	??_MSDReadHandler,f,c
 19978  0030BE  3637               	rlcf	??_MSDReadHandler+1,f,c
 19979  0030C0  3638               	rlcf	??_MSDReadHandler+2,f,c
 19980  0030C2  3639               	rlcf	??_MSDReadHandler+3,f,c
 19981  0030C4  2EE8               	decfsz	wreg,f,c
 19982  0030C6  D7F9               	goto	u8235
 19983  0030C8  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 19984  0030CC  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19985  0030D0  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19986  0030D4  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19987  0030D8  EC93  F029         	call	_MSDCheckForErrorCases	;wreg free
 19988  0030DC  0900               	iorlw	0
 19989  0030DE  A4D8               	btfss	status,2,c
 19990  0030E0  D0C2               	goto	l668
 19991                           
 19992                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 19993                           
 19994                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 19995  0030E2  0E01               	movlw	1
 19996  0030E4  0100               	movlb	0	; () banked
 19997  0030E6  6FEB               	movwf	_MSDReadState& (0+255),b
 19998  0030E8                     
 19999                           ; BSR set to: 0
 20000                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20001                           
 20002                           ; BSR set to: 0
 20003  0030E8  51DB               	movf	_TransferLength& (0+255),w,b
 20004  0030EA  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 20005  0030EC  A4D8               	btfss	status,2,c
 20006  0030EE  D002               	goto	l670
 20007                           
 20008                           ; BSR set to: 0
 20009                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20010  0030F0  0E00               	movlw	0
 20011  0030F2  D046               	goto	L23
 20012  0030F4                     l670:
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20016                           
 20017                           ; BSR set to: 0
 20018  0030F4  07DB               	decf	_TransferLength& (0+255),f,b
 20019  0030F6  A0D8               	btfss	status,0,c
 20020  0030F8  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 20021                           
 20022                           ; BSR set to: 0
 20023                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20024  0030FA  0E02               	movlw	2
 20025  0030FC  6FEB               	movwf	_MSDReadState& (0+255),b
 20026  0030FE                     
 20027                           ; BSR set to: 0
 20028                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20029                           
 20030                           ; BSR set to: 0
 20031  0030FE  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20032  003100  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20033  003102  B4D8               	btfsc	status,2,c
 20034  003104  D006               	goto	l672
 20035                           
 20036                           ; BSR set to: 0
 20037  003106  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20038  00310A  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20039  00310E  BEDF               	btfsc	indf2,7,c
 20040  003110  D0AA               	goto	l668
 20041  003112                     l672:
 20042                           
 20043                           ; BSR set to: 0
 20044                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20045                           
 20046                           ; BSR set to: 0
 20047  003112  C1C1  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20048  003116  C1C2  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20049  00311A  C15E  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20050  00311E  C15F  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20051  003122  C160  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20052  003126  C161  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20053  00312A  0E00               	movlw	0
 20054  00312C  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20055  00312E  0E06               	movlw	6
 20056  003130  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20057  003132  D801               	call	u8288
 20058  003134  D00A               	goto	u8289
 20059  003136                     u8288:
 20060  003136  0005               	push	
 20061  003138  6EFA               	movwf	pclath,c
 20062  00313A  0101               	movlb	1	; () banked
 20063  00313C  51BB               	movf	(_LUN+8)& (0+255),w,b
 20064  00313E  6EFD               	movwf	tosl,c
 20065  003140  51BC               	movf	(_LUN+9)& (0+255),w,b
 20066  003142  6EFE               	movwf	tosh,c
 20067  003144  6AFF               	clrf	tosu,c
 20068  003146  50FA               	movf	pclath,w,c
 20069  003148  0012               	return		;indir
 20070  00314A                     u8289:
 20071  00314A  06E8               	decf	wreg,f,c
 20072  00314C  B4D8               	btfsc	status,2,c
 20073  00314E  D01A               	goto	l675
 20074                           
 20075                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20076  003150  0E64               	movlw	100
 20077  003152  0100               	movlb	0	; () banked
 20078  003154  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 20079  003156  D002               	goto	l674
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20083  003158  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 20084                           
 20085                           ;usb_device_msd.c: 1088: break;
 20086  00315A  D085               	goto	l668
 20087  00315C                     l674:
 20088                           
 20089                           ; BSR set to: 0
 20090                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20091                           
 20092                           ; BSR set to: 0
 20093  00315C  0E02               	movlw	2
 20094  00315E  010D               	movlb	13	; () banked
 20095  003160  6F8C               	movwf	140,b	;volatile
 20096                           
 20097                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20098  003162  0101               	movlb	1	; () banked
 20099  003164  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20100  003166  0BF0               	andlw	-16
 20101  003168  0903               	iorlw	3
 20102  00316A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20103                           
 20104                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20105  00316C  0E00               	movlw	0
 20106  00316E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20107                           
 20108                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20109  003170  0E00               	movlw	0
 20110  003172  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20111                           
 20112                           ; BSR set to: 1
 20113                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20114  003174  0E01               	movlw	1
 20115  003176  6E01               	movwf	USBStallEndpoint@dir,c
 20116  003178  0E02               	movlw	2
 20117  00317A  ECC8  F023         	call	_USBStallEndpoint
 20118  00317E  D05E               	goto	l11381
 20119  003180                     L23:
 20120  003180  6FEB               	movwf	_MSDReadState& (0+255),b
 20121                           
 20122                           ;usb_device_msd.c: 1109: break;
 20123  003182  D071               	goto	l668
 20124  003184                     l675:
 20125                           
 20126                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20127                           
 20128                           ; BSR set to: 0
 20129                           
 20130                           ; BSR set to: 0
 20131  003184  0E01               	movlw	1
 20132  003186  0101               	movlb	1	; () banked
 20133  003188  275E               	addwf	_LBA& (0+255),f,b
 20134  00318A  0E00               	movlw	0
 20135  00318C  235F               	addwfc	(_LBA+1)& (0+255),f,b
 20136  00318E  2360               	addwfc	(_LBA+2)& (0+255),f,b
 20137  003190  2361               	addwfc	(_LBA+3)& (0+255),f,b
 20138                           
 20139                           ; BSR set to: 1
 20140                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20141  003192  0E00               	movlw	0
 20142  003194  010D               	movlb	13	; () banked
 20143  003196  6F88               	movwf	136,b	;volatile
 20144  003198  0E02               	movlw	2
 20145  00319A  6F89               	movwf	137,b	;volatile
 20146  00319C  0E00               	movlw	0
 20147  00319E  6F8A               	movwf	138,b	;volatile
 20148  0031A0  0E00               	movlw	0
 20149  0031A2  6F8B               	movwf	139,b	;volatile
 20150                           
 20151                           ; BSR set to: 13
 20152                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20153  0031A4  0E00               	movlw	0
 20154  0031A6  0101               	movlb	1	; () banked
 20155  0031A8  6F86               	movwf	_ptrNextData& (0+255),b
 20156  0031AA  0E06               	movlw	6
 20157  0031AC  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 20158                           
 20159                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20160  0031AE  0E03               	movlw	3
 20161  0031B0  0100               	movlb	0	; () banked
 20162  0031B2  6FEB               	movwf	_MSDReadState& (0+255),b
 20163  0031B4                     
 20164                           ; BSR set to: 0
 20165                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20166                           
 20167                           ; BSR set to: 0
 20168  0031B4  010D               	movlb	13	; () banked
 20169  0031B6  5188               	movf	136,w,b	;volatile
 20170  0031B8  1189               	iorwf	137,w,b	;volatile
 20171  0031BA  118A               	iorwf	138,w,b	;volatile
 20172  0031BC  118B               	iorwf	139,w,b	;volatile
 20173  0031BE  A4D8               	btfss	status,2,c
 20174  0031C0  D002               	goto	l677
 20175                           
 20176                           ; BSR set to: 13
 20177                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20178  0031C2  0E01               	movlw	1
 20179  0031C4  D03C               	goto	L25
 20180  0031C6                     l677:
 20181                           
 20182                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20183                           
 20184                           ; BSR set to: 0
 20185  0031C6  0E04               	movlw	4
 20186  0031C8  0100               	movlb	0	; () banked
 20187  0031CA  6FEB               	movwf	_MSDReadState& (0+255),b
 20188  0031CC                     
 20189                           ; BSR set to: 0
 20190                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20191                           
 20192                           ; BSR set to: 0
 20193  0031CC  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20194  0031CE  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20195  0031D0  B4D8               	btfsc	status,2,c
 20196  0031D2  D006               	goto	l679
 20197                           
 20198                           ; BSR set to: 0
 20199  0031D4  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20200  0031D8  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20201  0031DC  BEDF               	btfsc	indf2,7,c
 20202  0031DE  D043               	goto	l668
 20203  0031E0                     l679:
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20207                           
 20208                           ; BSR set to: 0
 20209  0031E0  0E01               	movlw	1
 20210  0031E2  6E01               	movwf	USBTransferOnePacket@dir,c
 20211  0031E4  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20212  0031E8  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20213  0031EC  0E40               	movlw	64
 20214  0031EE  6E04               	movwf	USBTransferOnePacket@len,c
 20215  0031F0  0E02               	movlw	2
 20216  0031F2  ECD3  F025         	call	_USBTransferOnePacket
 20217  0031F6  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20218  0031FA  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20219                           
 20220                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20221  0031FE  0E03               	movlw	3
 20222  003200  0100               	movlb	0	; () banked
 20223  003202  6FEB               	movwf	_MSDReadState& (0+255),b
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20227  003204  0E40               	movlw	64
 20228  003206  0101               	movlb	1	; () banked
 20229  003208  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20230  00320A  0E00               	movlw	0
 20231  00320C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20232  00320E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20233  003210  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20234                           
 20235                           ; BSR set to: 1
 20236                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20237  003212  0E40               	movlw	64
 20238  003214  010D               	movlb	13	; () banked
 20239  003216  5F88               	subwf	136,f,b	;volatile
 20240  003218  0E00               	movlw	0
 20241  00321A  5B89               	subwfb	137,f,b	;volatile
 20242  00321C  5B8A               	subwfb	138,f,b	;volatile
 20243  00321E  5B8B               	subwfb	139,f,b	;volatile
 20244                           
 20245                           ; BSR set to: 13
 20246                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20247  003220  0E40               	movlw	64
 20248  003222  0101               	movlb	1	; () banked
 20249  003224  2786               	addwf	_ptrNextData& (0+255),f,b
 20250  003226  0E00               	movlw	0
 20251  003228  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20252                           
 20253                           ;usb_device_msd.c: 1149: break;
 20254  00322A  D01D               	goto	l668
 20255  00322C                     
 20256                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20257                           
 20258                           ; BSR set to: 1
 20259  00322C  0E02               	movlw	2
 20260  00322E  010D               	movlb	13	; () banked
 20261  003230  6F8C               	movwf	140,b	;volatile
 20262                           
 20263                           ; BSR set to: 13
 20264                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20265  003232  0E01               	movlw	1
 20266  003234  6E01               	movwf	USBStallEndpoint@dir,c
 20267  003236  0E02               	movlw	2
 20268  003238  ECC8  F023         	call	_USBStallEndpoint
 20269  00323C                     l11381:
 20270                           
 20271                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20272  00323C  0E00               	movlw	0
 20273  00323E                     L25:
 20274  00323E  0100               	movlb	0	; () banked
 20275  003240  D79F               	goto	L23
 20276  003242                     l665:
 20277                           
 20278                           ; BSR set to: 0
 20279  003242  0100               	movlb	0	; () banked
 20280  003244  51EB               	movf	_MSDReadState& (0+255),w,b
 20281                           
 20282                           ; Switch size 1, requested type "space"
 20283                           ; Number of cases is 5, Range of values is 0 to 4
 20284                           ; switch strategies available:
 20285                           ; Name         Instructions Cycles
 20286                           ; simple_byte           16     9 (average)
 20287                           ;	Chosen strategy is simple_byte
 20288  003246  0A00               	xorlw	0	; case 0
 20289  003248  B4D8               	btfsc	status,2,c
 20290  00324A  D724               	goto	l666
 20291  00324C  0A01               	xorlw	1	; case 1
 20292  00324E  B4D8               	btfsc	status,2,c
 20293  003250  D74B               	goto	l669
 20294  003252  0A03               	xorlw	3	; case 2
 20295  003254  B4D8               	btfsc	status,2,c
 20296  003256  D753               	goto	l671
 20297  003258  0A01               	xorlw	1	; case 3
 20298  00325A  B4D8               	btfsc	status,2,c
 20299  00325C  D7AB               	goto	l676
 20300  00325E  0A07               	xorlw	7	; case 4
 20301  003260  B4D8               	btfsc	status,2,c
 20302  003262  D7B4               	goto	l678
 20303  003264  D7E3               	goto	l680
 20304  003266                     l668:
 20305                           
 20306                           ;usb_device_msd.c: 1161: return MSDReadState;
 20307                           
 20308                           ; BSR set to: 0
 20309  003266  0100               	movlb	0	; () banked
 20310  003268  51EB               	movf	_MSDReadState& (0+255),w,b
 20311  00326A  0012               	return	
 20312  00326C                     __end_of_MSDReadHandler:
 20313                           	opt stack 0
 20314                           tosu	equ	0xFFF
 20315                           tosh	equ	0xFFE
 20316                           tosl	equ	0xFFD
 20317                           pclath	equ	0xFFA
 20318                           tblptru	equ	0xFF8
 20319                           tblptrh	equ	0xFF7
 20320                           tblptrl	equ	0xFF6
 20321                           tablat	equ	0xFF5
 20322                           prodh	equ	0xFF4
 20323                           prodl	equ	0xFF3
 20324                           intcon	equ	0xFF2
 20325                           intcon2	equ	0xFF1
 20326                           intcon3	equ	0xFF0
 20327                           indf0	equ	0xFEF
 20328                           postinc0	equ	0xFEE
 20329                           fsr0h	equ	0xFEA
 20330                           fsr0l	equ	0xFE9
 20331                           wreg	equ	0xFE8
 20332                           indf1	equ	0xFE7
 20333                           postdec1	equ	0xFE5
 20334                           plusw1	equ	0xFE3
 20335                           fsr1h	equ	0xFE2
 20336                           fsr1l	equ	0xFE1
 20337                           indf2	equ	0xFDF
 20338                           postinc2	equ	0xFDE
 20339                           postdec2	equ	0xFDD
 20340                           plusw2	equ	0xFDB
 20341                           fsr2h	equ	0xFDA
 20342                           fsr2l	equ	0xFD9
 20343                           status	equ	0xFD8
 20344                           
 20345 ;; *************** function _MSDCheckForErrorCases *****************
 20346 ;; Defined at:
 20347 ;;		line 1434 in file "usb_device_msd.c"
 20348 ;; Parameters:    Size  Location     Type
 20349 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20350 ;; Auto vars:     Size  Location     Type
 20351 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20352 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20353 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20354 ;; Return value:  Size  Location     Type
 20355 ;;                  1    wreg      unsigned char 
 20356 ;; Registers used:
 20357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20358 ;; Tracked objects:
 20359 ;;		On entry : 0/0
 20360 ;;		On exit  : 0/0
 20361 ;;		Unchanged: 0/0
 20362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20366 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20367 ;;Total ram usage:        7 bytes
 20368 ;; Hardware stack levels used:    1
 20369 ;; Hardware stack levels required when called:    2
 20370 ;; This function calls:
 20371 ;;		_MSDErrorHandler
 20372 ;; This function is called by:
 20373 ;;		_MSDProcessCommandMediaPresent
 20374 ;;		_MSDReadHandler
 20375 ;;		_MSDWriteHandler
 20376 ;; This function uses a non-reentrant model
 20377 ;;
 20378                           
 20379                           	psect	text91
 20380  005326                     __ptext91:
 20381                           	opt stack 0
 20382  005326                     _MSDCheckForErrorCases:
 20383                           	opt stack 23
 20384                           
 20385                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;incstack = 0
 20389  005326  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20390  005328  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20391  00532A  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20392  00532C  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20393  00532E  A4D8               	btfss	status,2,c
 20394  005330  D002               	goto	l710
 20395                           
 20396                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20397  005332  0E01               	movlw	1
 20398  005334  D001               	goto	L26
 20399  005336                     l710:
 20400                           
 20401                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20402  005336  0E00               	movlw	0
 20403  005338                     L26:
 20404  005338  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20405                           
 20406                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20407  00533A  0100               	movlb	0	; () banked
 20408  00533C  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20409  00533E  A4D8               	btfss	status,2,c
 20410  005340  D005               	goto	l712
 20411                           
 20412                           ; BSR set to: 0
 20413  005342  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20414  005344  A4D8               	btfss	status,2,c
 20415  005346  D002               	goto	l712
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20419  005348  0E00               	movlw	0
 20420                           
 20421                           ; BSR set to: 0
 20422  00534A  0012               	return	
 20423  00534C                     l712:
 20424                           
 20425                           ; BSR set to: 0
 20426                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20427                           
 20428                           ; BSR set to: 0
 20429  00534C  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20430  00534E  0101               	movlb	1	; () banked
 20431  005350  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20432  005352  E11A               	bnz	l10839
 20433  005354  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20434  005356  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20435  005358  E117               	bnz	l10839
 20436  00535A  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20437  00535C  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20438  00535E  E114               	bnz	l10839
 20439  005360  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20440  005362  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20441  005364  A4D8               	btfss	status,2,c
 20442  005366  D010               	goto	l718
 20443                           
 20444                           ; BSR set to: 1
 20445                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20446  005368  0100               	movlb	0	; () banked
 20447  00536A  05ED               	decf	_MSD_State& (0+255),w,b
 20448  00536C  A4D8               	btfss	status,2,c
 20449  00536E  D006               	goto	l715
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20453  005370  0E2A               	movlw	42
 20454  005372  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20455  005374  B4D8               	btfsc	status,2,c
 20456  005376  D008               	goto	l718
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20460  005378  0E00               	movlw	0
 20461                           
 20462                           ; BSR set to: 0
 20463  00537A  0012               	return	
 20464  00537C                     l715:
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20468                           
 20469                           ; BSR set to: 0
 20470  00537C  0E2A               	movlw	42
 20471  00537E  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20472  005380  A4D8               	btfss	status,2,c
 20473  005382  D002               	goto	l718
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20477  005384  0E00               	movlw	0
 20478                           
 20479                           ; BSR set to: 0
 20480  005386  0012               	return	
 20481  005388                     l718:
 20482  005388                     l10839:
 20483                           
 20484                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20485  005388  0101               	movlb	1	; () banked
 20486  00538A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20487  00538C  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20488  00538E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20489  005390  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20490  005392  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20491  005394  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20492  005396  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20493  005398  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20494  00539A  B0D8               	btfsc	status,0,c
 20495  00539C  D002               	goto	l719
 20496                           
 20497                           ; BSR set to: 1
 20498                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20499  00539E  0E01               	movlw	1
 20500  0053A0  D001               	goto	L27
 20501  0053A2                     l719:
 20502                           
 20503                           ; BSR set to: 1
 20504                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20505                           
 20506                           ; BSR set to: 1
 20507  0053A2  0E00               	movlw	0
 20508  0053A4                     L27:
 20509  0053A4  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20510                           
 20511                           ; BSR set to: 1
 20512                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20513                           
 20514                           ; BSR set to: 1
 20515  0053A6  0E02               	movlw	2
 20516  0053A8  0100               	movlb	0	; () banked
 20517  0053AA  19ED               	xorwf	_MSD_State& (0+255),w,b
 20518  0053AC  A4D8               	btfss	status,2,c
 20519  0053AE  D014               	goto	l721
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20523  0053B0  0E2A               	movlw	42
 20524  0053B2  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20525  0053B4  B4D8               	btfsc	status,2,c
 20526  0053B6  D005               	goto	l722
 20527                           
 20528                           ; BSR set to: 0
 20529  0053B8  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20530  0053BA  A4D8               	btfss	status,2,c
 20531  0053BC  D002               	goto	l722
 20532  0053BE                     u7610:
 20533                           
 20534                           ; BSR set to: 0
 20535                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20536  0053BE  0E05               	movlw	5
 20537  0053C0  D01D               	goto	L30
 20538  0053C2                     l722:
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20542                           
 20543                           ; BSR set to: 0
 20544  0053C2  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20545  0053C4  B4D8               	btfsc	status,2,c
 20546  0053C6  D00F               	goto	u7660
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20550                           
 20551                           ; BSR set to: 0
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20555  0053C8  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20556  0053CA  B4D8               	btfsc	status,2,c
 20557  0053CC  D003               	goto	u7640
 20558                           
 20559                           ; BSR set to: 0
 20560                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20561                           
 20562                           ; BSR set to: 0
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 20566  0053CE  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20567  0053D0  A4D8               	btfss	status,2,c
 20568  0053D2  D7F5               	goto	u7610
 20569  0053D4                     u7640:
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 20573  0053D4  0E04               	movlw	4
 20574  0053D6  D012               	goto	L30
 20575  0053D8                     l721:
 20576                           
 20577                           ; BSR set to: 0
 20578                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 20579                           
 20580                           ; BSR set to: 0
 20581  0053D8  0E2A               	movlw	42
 20582  0053DA  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20583  0053DC  B4D8               	btfsc	status,2,c
 20584  0053DE  D00D               	goto	l737
 20585                           
 20586                           ; BSR set to: 0
 20587                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 20588                           
 20589                           ; BSR set to: 0
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 20593  0053E0  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20594  0053E2  A4D8               	btfss	status,2,c
 20595  0053E4  D002               	goto	l733
 20596  0053E6                     u7660:
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 20600  0053E6  0E01               	movlw	1
 20601  0053E8  D009               	goto	L30
 20602  0053EA                     l733:
 20603                           
 20604                           ; BSR set to: 0
 20605                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 20606                           
 20607                           ; BSR set to: 0
 20608  0053EA  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20609  0053EC  B4D8               	btfsc	status,2,c
 20610  0053EE  D003               	goto	u7680
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 20614                           
 20615                           ; BSR set to: 0
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 20619  0053F0  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20620  0053F2  A4D8               	btfss	status,2,c
 20621  0053F4  D002               	goto	l737
 20622  0053F6                     u7680:
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 20626  0053F6  0E02               	movlw	2
 20627  0053F8  D001               	goto	L30
 20628  0053FA                     l737:
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 20632                           
 20633                           ; BSR set to: 0
 20634  0053FA  0E03               	movlw	3
 20635  0053FC                     L30:
 20636  0053FC  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 20637                           
 20638                           ; BSR set to: 0
 20639                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 20640                           
 20641                           ; BSR set to: 0
 20642                           
 20643                           ; BSR set to: 0
 20644                           
 20645                           ; BSR set to: 0
 20646                           
 20647                           ; BSR set to: 0
 20648                           
 20649                           ; BSR set to: 0
 20650  0053FE  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20651  005400  ECCF  F024         	call	_MSDErrorHandler
 20652                           
 20653                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 20654  005404  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20655  005406  0012               	return	
 20656  005408                     __end_of_MSDCheckForErrorCases:
 20657                           	opt stack 0
 20658                           tosu	equ	0xFFF
 20659                           tosh	equ	0xFFE
 20660                           tosl	equ	0xFFD
 20661                           pclath	equ	0xFFA
 20662                           tblptru	equ	0xFF8
 20663                           tblptrh	equ	0xFF7
 20664                           tblptrl	equ	0xFF6
 20665                           tablat	equ	0xFF5
 20666                           prodh	equ	0xFF4
 20667                           prodl	equ	0xFF3
 20668                           intcon	equ	0xFF2
 20669                           intcon2	equ	0xFF1
 20670                           intcon3	equ	0xFF0
 20671                           indf0	equ	0xFEF
 20672                           postinc0	equ	0xFEE
 20673                           fsr0h	equ	0xFEA
 20674                           fsr0l	equ	0xFE9
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postdec1	equ	0xFE5
 20678                           plusw1	equ	0xFE3
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           indf2	equ	0xFDF
 20682                           postinc2	equ	0xFDE
 20683                           postdec2	equ	0xFDD
 20684                           plusw2	equ	0xFDB
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _MSDErrorHandler *****************
 20690 ;; Defined at:
 20691 ;;		line 1577 in file "usb_device_msd.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;  ErrorCase       1    wreg     unsigned char 
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 20696 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 20697 ;; Return value:  Size  Location     Type
 20698 ;;                  1    wreg      void 
 20699 ;; Registers used:
 20700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20701 ;; Tracked objects:
 20702 ;;		On entry : 0/0
 20703 ;;		On exit  : 0/0
 20704 ;;		Unchanged: 0/0
 20705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20710 ;;Total ram usage:        2 bytes
 20711 ;; Hardware stack levels used:    1
 20712 ;; Hardware stack levels required when called:    1
 20713 ;; This function calls:
 20714 ;;		_ResetSenseData
 20715 ;;		_USBStallEndpoint
 20716 ;; This function is called by:
 20717 ;;		_MSDProcessCommandMediaAbsent
 20718 ;;		_MSDProcessCommandMediaPresent
 20719 ;;		_MSDCheckForErrorCases
 20720 ;; This function uses a non-reentrant model
 20721 ;;
 20722                           
 20723                           	psect	text92
 20724  00499E                     __ptext92:
 20725                           	opt stack 0
 20726  00499E                     _MSDErrorHandler:
 20727                           	opt stack 23
 20728                           
 20729                           ;incstack = 0
 20730                           ;MSDErrorHandler@ErrorCase stored from wreg
 20731  00499E  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 20732                           
 20733                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 20734  0049A0  0100               	movlb	0	; () banked
 20735  0049A2  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20736  0049A4  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20737  0049A6  B4D8               	btfsc	status,2,c
 20738  0049A8  D006               	goto	u7120
 20739                           
 20740                           ; BSR set to: 0
 20741  0049AA  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20742  0049AE  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20743  0049B2  BEDF               	btfsc	indf2,7,c
 20744  0049B4  0012               	return	
 20745  0049B6                     u7120:
 20746                           
 20747                           ; BSR set to: 0
 20748                           
 20749                           ; BSR set to: 0
 20750  0049B6  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 20751  0049B8  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20752  0049BA  B4D8               	btfsc	status,2,c
 20753  0049BC  D006               	goto	l741
 20754                           
 20755                           ; BSR set to: 0
 20756  0049BE  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20757  0049C2  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20758  0049C6  BEDF               	btfsc	indf2,7,c
 20759  0049C8  0012               	return	
 20760  0049CA                     l741:
 20761                           
 20762                           ; BSR set to: 0
 20763                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 20764  0049CA  C0ED  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 20765                           
 20766                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 20767  0049CE  69EC               	setf	_MSDCommandState& (0+255),b
 20768                           
 20769                           ; BSR set to: 0
 20770                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 20771  0049D0  0E00               	movlw	0
 20772  0049D2  6FEB               	movwf	_MSDReadState& (0+255),b
 20773                           
 20774                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 20775  0049D4  0E00               	movlw	0
 20776  0049D6  6FEA               	movwf	_MSDWriteState& (0+255),b
 20777                           
 20778                           ; BSR set to: 0
 20779                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 20780  0049D8  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 20781  0049DC  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 20782  0049E0  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 20783  0049E4  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 20784                           
 20785                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 20786  0049E8  0E01               	movlw	1
 20787  0049EA  010D               	movlb	13	; () banked
 20788  0049EC  6F8C               	movwf	140,b	;volatile
 20789                           
 20790                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 20791  0049EE  0E03               	movlw	3
 20792  0049F0  0100               	movlb	0	; () banked
 20793  0049F2  6FED               	movwf	_MSD_State& (0+255),b
 20794                           
 20795                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 20796  0049F4  D043               	goto	l747
 20797  0049F6                     
 20798                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 20799                           
 20800                           ; BSR set to: 0
 20801  0049F6  0E02               	movlw	2
 20802  0049F8  010D               	movlb	13	; () banked
 20803  0049FA  6F8C               	movwf	140,b	;volatile
 20804                           
 20805                           ;usb_device_msd.c: 1607: break;
 20806  0049FC  0012               	return	
 20807  0049FE                     
 20808                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 20809                           
 20810                           ; BSR set to: 13
 20811  0049FE  0E01               	movlw	1
 20812  004A00  6E01               	movwf	USBStallEndpoint@dir,c
 20813  004A02  0E02               	movlw	2
 20814  004A04  ECC8  F023         	call	_USBStallEndpoint
 20815                           
 20816                           ;usb_device_msd.c: 1611: break;
 20817  004A08  0012               	return	
 20818  004A0A                     
 20819                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 20820  004A0A  0E02               	movlw	2
 20821  004A0C  010D               	movlb	13	; () banked
 20822  004A0E  6F8C               	movwf	140,b	;volatile
 20823                           
 20824                           ; BSR set to: 13
 20825                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 20826  004A10  0E01               	movlw	1
 20827  004A12  6E01               	movwf	USBStallEndpoint@dir,c
 20828  004A14  0E02               	movlw	2
 20829  004A16  ECC8  F023         	call	_USBStallEndpoint
 20830                           
 20831                           ;usb_device_msd.c: 1616: break;
 20832  004A1A  0012               	return	
 20833  004A1C                     
 20834                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 20835  004A1C  0E00               	movlw	0
 20836  004A1E  6E01               	movwf	USBStallEndpoint@dir,c
 20837  004A20  0E02               	movlw	2
 20838  004A22  ECC8  F023         	call	_USBStallEndpoint
 20839                           
 20840                           ;usb_device_msd.c: 1620: break;
 20841  004A26  0012               	return	
 20842  004A28                     
 20843                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 20844  004A28  0E02               	movlw	2
 20845  004A2A  010D               	movlb	13	; () banked
 20846  004A2C  6F8C               	movwf	140,b	;volatile
 20847                           
 20848                           ; BSR set to: 13
 20849                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 20850  004A2E  0E00               	movlw	0
 20851  004A30  6E01               	movwf	USBStallEndpoint@dir,c
 20852  004A32  0E02               	movlw	2
 20853  004A34  ECC8  F023         	call	_USBStallEndpoint
 20854                           
 20855                           ;usb_device_msd.c: 1625: break;
 20856  004A38  0012               	return	
 20857  004A3A                     
 20858                           ;usb_device_msd.c: 1628: ResetSenseData();
 20859  004A3A  EC31  F03B         	call	_ResetSenseData	;wreg free
 20860                           
 20861                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 20862  004A3E  0101               	movlb	1	; () banked
 20863  004A40  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20864  004A42  0BF0               	andlw	-16
 20865  004A44  0905               	iorlw	5
 20866  004A46  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20867                           
 20868                           ; BSR set to: 1
 20869                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 20870  004A48  0E20               	movlw	32
 20871  004A4A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20872                           
 20873                           ; BSR set to: 1
 20874                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 20875  004A4C  0E00               	movlw	0
 20876  004A4E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20877                           
 20878                           ; BSR set to: 1
 20879                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 20880  004A50  0E02               	movlw	2
 20881  004A52  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 20882  004A54  A4D8               	btfss	status,2,c
 20883  004A56  D00C               	goto	l755
 20884                           
 20885                           ; BSR set to: 1
 20886  004A58  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20887  004A5A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20888  004A5C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20889  004A5E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20890  004A60  B4D8               	btfsc	status,2,c
 20891  004A62  D006               	goto	l755
 20892                           
 20893                           ; BSR set to: 1
 20894                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 20895  004A64  0E00               	movlw	0
 20896  004A66  6E01               	movwf	USBStallEndpoint@dir,c
 20897  004A68  0E02               	movlw	2
 20898  004A6A  ECC8  F023         	call	_USBStallEndpoint
 20899                           
 20900                           ;usb_device_msd.c: 1636: }
 20901  004A6E  0012               	return	
 20902  004A70                     l755:
 20903                           
 20904                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 20905  004A70  0E01               	movlw	1
 20906  004A72  6E01               	movwf	USBStallEndpoint@dir,c
 20907  004A74  0E02               	movlw	2
 20908  004A76  ECC8  F023         	call	_USBStallEndpoint
 20909                           
 20910                           ;usb_device_msd.c: 1644: }
 20911                           
 20912                           ;usb_device_msd.c: 1643: break;
 20913                           
 20914                           ;usb_device_msd.c: 1642: default:
 20915                           
 20916                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 20917  004A7A  0012               	return	
 20918  004A7C                     l747:
 20919  004A7C  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 20920                           
 20921                           ; Switch size 1, requested type "space"
 20922                           ; Number of cases is 6, Range of values is 1 to 127
 20923                           ; switch strategies available:
 20924                           ; Name         Instructions Cycles
 20925                           ; simple_byte           19    10 (average)
 20926                           ;	Chosen strategy is simple_byte
 20927  004A7E  0A01               	xorlw	1	; case 1
 20928  004A80  B4D8               	btfsc	status,2,c
 20929  004A82  D7B9               	goto	l748
 20930  004A84  0A03               	xorlw	3	; case 2
 20931  004A86  B4D8               	btfsc	status,2,c
 20932  004A88  D7BA               	goto	l750
 20933  004A8A  0A01               	xorlw	1	; case 3
 20934  004A8C  B4D8               	btfsc	status,2,c
 20935  004A8E  D7BD               	goto	l751
 20936  004A90  0A07               	xorlw	7	; case 4
 20937  004A92  B4D8               	btfsc	status,2,c
 20938  004A94  D7C3               	goto	l752
 20939  004A96  0A01               	xorlw	1	; case 5
 20940  004A98  B4D8               	btfsc	status,2,c
 20941  004A9A  D7C6               	goto	l753
 20942  004A9C  0A7A               	xorlw	122	; case 127
 20943  004A9E  A4D8               	btfss	status,2,c
 20944  004AA0  0012               	return	
 20945  004AA2  D7CB               	goto	l754
 20946  004AA4                     __end_of_MSDErrorHandler:
 20947                           	opt stack 0
 20948                           tosu	equ	0xFFF
 20949                           tosh	equ	0xFFE
 20950                           tosl	equ	0xFFD
 20951                           pclath	equ	0xFFA
 20952                           tblptru	equ	0xFF8
 20953                           tblptrh	equ	0xFF7
 20954                           tblptrl	equ	0xFF6
 20955                           tablat	equ	0xFF5
 20956                           prodh	equ	0xFF4
 20957                           prodl	equ	0xFF3
 20958                           intcon	equ	0xFF2
 20959                           intcon2	equ	0xFF1
 20960                           intcon3	equ	0xFF0
 20961                           indf0	equ	0xFEF
 20962                           postinc0	equ	0xFEE
 20963                           fsr0h	equ	0xFEA
 20964                           fsr0l	equ	0xFE9
 20965                           wreg	equ	0xFE8
 20966                           indf1	equ	0xFE7
 20967                           postdec1	equ	0xFE5
 20968                           plusw1	equ	0xFE3
 20969                           fsr1h	equ	0xFE2
 20970                           fsr1l	equ	0xFE1
 20971                           indf2	equ	0xFDF
 20972                           postinc2	equ	0xFDE
 20973                           postdec2	equ	0xFDD
 20974                           plusw2	equ	0xFDB
 20975                           fsr2h	equ	0xFDA
 20976                           fsr2l	equ	0xFD9
 20977                           status	equ	0xFD8
 20978                           
 20979 ;; *************** function _USBStallEndpoint *****************
 20980 ;; Defined at:
 20981 ;;		line 1073 in file "usb_device.c"
 20982 ;; Parameters:    Size  Location     Type
 20983 ;;  ep              1    wreg     unsigned char 
 20984 ;;  dir             1    0[COMRAM] unsigned char 
 20985 ;; Auto vars:     Size  Location     Type
 20986 ;;  ep              1    5[COMRAM] unsigned char 
 20987 ;;  p               2    6[COMRAM] PTR struct __BDT
 20988 ;;		 -> BDT(48), 
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  1    wreg      void 
 20991 ;; Registers used:
 20992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20999 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21001 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21002 ;;Total ram usage:        8 bytes
 21003 ;; Hardware stack levels used:    1
 21004 ;; This function calls:
 21005 ;;		Nothing
 21006 ;; This function is called by:
 21007 ;;		_MSDTasks
 21008 ;;		_MSDReadHandler
 21009 ;;		_MSDWriteHandler
 21010 ;;		_MSDErrorHandler
 21011 ;;		_MSDTransferTerminated
 21012 ;; This function uses a non-reentrant model
 21013 ;;
 21014                           
 21015                           	psect	text93
 21016  004790                     __ptext93:
 21017                           	opt stack 0
 21018  004790                     _USBStallEndpoint:
 21019                           	opt stack 27
 21020                           
 21021                           ;incstack = 0
 21022                           ;USBStallEndpoint@ep stored from wreg
 21023  004790  6E06               	movwf	USBStallEndpoint@ep,c
 21024                           
 21025                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21026  004792  5006               	movf	USBStallEndpoint@ep,w,c
 21027  004794  A4D8               	btfss	status,2,c
 21028  004796  D02C               	goto	l191
 21029                           
 21030                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21031  004798  0100               	movlb	0	; () banked
 21032  00479A  EE20 F001          	lfsr	2,1
 21033  00479E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21034  0047A0  26D9               	addwf	fsr2l,f,c
 21035  0047A2  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21036  0047A4  22DA               	addwfc	fsr2h,f,c
 21037  0047A6  0E08               	movlw	8
 21038  0047A8  6EDF               	movwf	indf2,c
 21039                           
 21040                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21041  0047AA  EE20 F002          	lfsr	2,2
 21042  0047AE  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21043  0047B0  26D9               	addwf	fsr2l,f,c
 21044  0047B2  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21045  0047B4  22DA               	addwfc	fsr2h,f,c
 21046  0047B6  0E30               	movlw	48
 21047  0047B8  6EDE               	movwf	postinc2,c
 21048  0047BA  0E0D               	movlw	13
 21049  0047BC  6EDD               	movwf	postdec2,c
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21053  0047BE  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21054  0047C2  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21055  0047C6  0E0C               	movlw	12
 21056  0047C8  6EDF               	movwf	indf2,c
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21060  0047CA  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21061  0047CE  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21062  0047D2  0E00               	movlw	0
 21063  0047D4  8EDB               	bsf	plusw2,7,c
 21064                           
 21065                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21066  0047D6  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21067  0047DA  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21068  0047DE  0E04               	movlw	4
 21069  0047E0  6EDF               	movwf	indf2,c
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21073  0047E2  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21074  0047E6  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21075  0047EA  0E00               	movlw	0
 21076  0047EC  8EDB               	bsf	plusw2,7,c
 21077                           
 21078                           ;usb_device.c: 1089: }
 21079  0047EE  0012               	return	
 21080  0047F0                     l191:
 21081                           
 21082                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21083                           
 21084                           ; BSR set to: 0
 21085  0047F0  5001               	movf	USBStallEndpoint@dir,w,c
 21086  0047F2  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21087  0047F4  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21088  0047F6  90D8               	bcf	status,0,c
 21089  0047F8  3602               	rlcf	??_USBStallEndpoint,f,c
 21090  0047FA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21091  0047FC  5006               	movf	USBStallEndpoint@ep,w,c
 21092  0047FE  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21093  004800  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21094  004802  90D8               	bcf	status,0,c
 21095  004804  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21096  004806  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21097  004808  90D8               	bcf	status,0,c
 21098  00480A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21099  00480C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21100  00480E  5002               	movf	??_USBStallEndpoint,w,c
 21101  004810  2604               	addwf	??_USBStallEndpoint+2,f,c
 21102  004812  5003               	movf	??_USBStallEndpoint+1,w,c
 21103  004814  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21104  004816  90D8               	bcf	status,0,c
 21105  004818  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21106  00481A  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21107  00481C  90D8               	bcf	status,0,c
 21108  00481E  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21109  004820  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21110  004822  0E00               	movlw	0
 21111  004824  2404               	addwf	??_USBStallEndpoint+2,w,c
 21112  004826  6E07               	movwf	USBStallEndpoint@p,c
 21113  004828  0E0D               	movlw	13
 21114  00482A  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21115  00482C  6E08               	movwf	USBStallEndpoint@p+1,c
 21116                           
 21117                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21118  00482E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21119  004832  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21120  004836  0E00               	movlw	0
 21121  004838  84DB               	bsf	plusw2,2,c
 21122                           
 21123                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21124  00483A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21125  00483E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21126  004842  0E00               	movlw	0
 21127  004844  8EDB               	bsf	plusw2,7,c
 21128                           
 21129                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21130  004846  5006               	movf	USBStallEndpoint@ep,w,c
 21131  004848  0D04               	mullw	4
 21132  00484A  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21133  00484E  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21134  004852  5001               	movf	USBStallEndpoint@dir,w,c
 21135  004854  0D02               	mullw	2
 21136  004856  50F3               	movf	prodl,w,c
 21137  004858  2602               	addwf	??_USBStallEndpoint,f,c
 21138  00485A  50F4               	movf	prodh,w,c
 21139  00485C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21140  00485E  90D8               	bcf	status,0,c
 21141  004860  3602               	rlcf	??_USBStallEndpoint,f,c
 21142  004862  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21143  004864  90D8               	bcf	status,0,c
 21144  004866  3602               	rlcf	??_USBStallEndpoint,f,c
 21145  004868  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21146  00486A  0E04               	movlw	4
 21147  00486C  2602               	addwf	??_USBStallEndpoint,f,c
 21148  00486E  0E00               	movlw	0
 21149  004870  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21150  004872  0E00               	movlw	0
 21151  004874  2402               	addwf	??_USBStallEndpoint,w,c
 21152  004876  6E07               	movwf	USBStallEndpoint@p,c
 21153  004878  0E0D               	movlw	13
 21154  00487A  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21155  00487C  6E08               	movwf	USBStallEndpoint@p+1,c
 21156                           
 21157                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21158  00487E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21159  004882  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21160  004886  0E00               	movlw	0
 21161  004888  84DB               	bsf	plusw2,2,c
 21162                           
 21163                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21164  00488A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21165  00488E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21166  004892  0E00               	movlw	0
 21167  004894  8EDB               	bsf	plusw2,7,c
 21168  004896  0012               	return	
 21169  004898                     __end_of_USBStallEndpoint:
 21170                           	opt stack 0
 21171                           tosu	equ	0xFFF
 21172                           tosh	equ	0xFFE
 21173                           tosl	equ	0xFFD
 21174                           pclath	equ	0xFFA
 21175                           tblptru	equ	0xFF8
 21176                           tblptrh	equ	0xFF7
 21177                           tblptrl	equ	0xFF6
 21178                           tablat	equ	0xFF5
 21179                           prodh	equ	0xFF4
 21180                           prodl	equ	0xFF3
 21181                           intcon	equ	0xFF2
 21182                           intcon2	equ	0xFF1
 21183                           intcon3	equ	0xFF0
 21184                           indf0	equ	0xFEF
 21185                           postinc0	equ	0xFEE
 21186                           fsr0h	equ	0xFEA
 21187                           fsr0l	equ	0xFE9
 21188                           wreg	equ	0xFE8
 21189                           indf1	equ	0xFE7
 21190                           postdec1	equ	0xFE5
 21191                           plusw1	equ	0xFE3
 21192                           fsr1h	equ	0xFE2
 21193                           fsr1l	equ	0xFE1
 21194                           indf2	equ	0xFDF
 21195                           postinc2	equ	0xFDE
 21196                           postdec2	equ	0xFDD
 21197                           plusw2	equ	0xFDB
 21198                           fsr2h	equ	0xFDA
 21199                           fsr2l	equ	0xFD9
 21200                           status	equ	0xFD8
 21201                           
 21202 ;; *************** function _ResetSenseData *****************
 21203 ;; Defined at:
 21204 ;;		line 1373 in file "usb_device_msd.c"
 21205 ;; Parameters:    Size  Location     Type
 21206 ;;		None
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;		None
 21209 ;; Return value:  Size  Location     Type
 21210 ;;                  1    wreg      void 
 21211 ;; Registers used:
 21212 ;;		wreg, status,2
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/0
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21222 ;;Total ram usage:        0 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; This function calls:
 21225 ;;		Nothing
 21226 ;; This function is called by:
 21227 ;;		_USBMSDInit
 21228 ;;		_MSDProcessCommandMediaAbsent
 21229 ;;		_MSDProcessCommandMediaPresent
 21230 ;;		_MSDErrorHandler
 21231 ;; This function uses a non-reentrant model
 21232 ;;
 21233                           
 21234                           	psect	text94
 21235  007662                     __ptext94:
 21236                           	opt stack 0
 21237  007662                     _ResetSenseData:
 21238                           	opt stack 26
 21239                           
 21240                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21241                           
 21242                           ;incstack = 0
 21243  007662  0101               	movlb	1	; () banked
 21244  007664  911F               	bcf	_gblSenseData& (0+255),0,b
 21245  007666  931F               	bcf	_gblSenseData& (0+255),1,b
 21246  007668  951F               	bcf	_gblSenseData& (0+255),2,b
 21247  00766A  971F               	bcf	_gblSenseData& (0+255),3,b
 21248  00766C  891F               	bsf	_gblSenseData& (0+255),4,b
 21249  00766E  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21250  007670  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21251                           
 21252                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21253  007672  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21254                           
 21255                           ; BSR set to: 1
 21256                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21257  007674  0E00               	movlw	0
 21258  007676  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21259                           
 21260                           ; BSR set to: 1
 21261                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21262  007678  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21263  00767A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21264  00767C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21265  00767E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21269  007680  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21270                           
 21271                           ; BSR set to: 1
 21272                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21273  007682  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21277  007684  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21278                           
 21279                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21280  007686  0E00               	movlw	0
 21281  007688  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21282                           
 21283                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21284  00768A  0E00               	movlw	0
 21285  00768C  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21286                           
 21287                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21288  00768E  0E00               	movlw	0
 21289  007690  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21290                           
 21291                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21292  007692  0E00               	movlw	0
 21293  007694  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21294                           
 21295                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21296  007696  0E0A               	movlw	10
 21297  007698  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21298                           
 21299                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21300  00769A  0E00               	movlw	0
 21301  00769C  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21302  00769E  0E00               	movlw	0
 21303  0076A0  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21304  0076A2  0E00               	movlw	0
 21305  0076A4  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21306  0076A6  0E00               	movlw	0
 21307  0076A8  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21308                           
 21309                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21310  0076AA  0E00               	movlw	0
 21311  0076AC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21312                           
 21313                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21314  0076AE  0E00               	movlw	0
 21315  0076B0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21316                           
 21317                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21318  0076B2  0E00               	movlw	0
 21319  0076B4  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21320                           
 21321                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21322  0076B6  0E00               	movlw	0
 21323  0076B8  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21324                           
 21325                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21326  0076BA  0E00               	movlw	0
 21327  0076BC  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21328                           
 21329                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21330  0076BE  0E00               	movlw	0
 21331  0076C0  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21332                           
 21333                           ; BSR set to: 1
 21334  0076C2  0012               	return		;funcret
 21335  0076C4                     __end_of_ResetSenseData:
 21336                           	opt stack 0
 21337                           tosu	equ	0xFFF
 21338                           tosh	equ	0xFFE
 21339                           tosl	equ	0xFFD
 21340                           pclath	equ	0xFFA
 21341                           tblptru	equ	0xFF8
 21342                           tblptrh	equ	0xFF7
 21343                           tblptrl	equ	0xFF6
 21344                           tablat	equ	0xFF5
 21345                           prodh	equ	0xFF4
 21346                           prodl	equ	0xFF3
 21347                           intcon	equ	0xFF2
 21348                           intcon2	equ	0xFF1
 21349                           intcon3	equ	0xFF0
 21350                           indf0	equ	0xFEF
 21351                           postinc0	equ	0xFEE
 21352                           fsr0h	equ	0xFEA
 21353                           fsr0l	equ	0xFE9
 21354                           wreg	equ	0xFE8
 21355                           indf1	equ	0xFE7
 21356                           postdec1	equ	0xFE5
 21357                           plusw1	equ	0xFE3
 21358                           fsr1h	equ	0xFE2
 21359                           fsr1l	equ	0xFE1
 21360                           indf2	equ	0xFDF
 21361                           postinc2	equ	0xFDE
 21362                           postdec2	equ	0xFDD
 21363                           plusw2	equ	0xFDB
 21364                           fsr2h	equ	0xFDA
 21365                           fsr2l	equ	0xFD9
 21366                           status	equ	0xFD8
 21367                           
 21368 ;; *************** function _ExternalFlash_SectorRead *****************
 21369 ;; Defined at:
 21370 ;;		line 40 in file "external_flash.c"
 21371 ;; Parameters:    Size  Location     Type
 21372 ;;  config          2   43[COMRAM] PTR void 
 21373 ;;		 -> NULL(0), 
 21374 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21375 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21376 ;;		 -> msd_buffer(512), 
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;  page            2   51[COMRAM] unsigned int 
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  1    wreg      unsigned char 
 21381 ;; Registers used:
 21382 ;;		wreg, status,2, status,0, cstack
 21383 ;; Tracked objects:
 21384 ;;		On entry : 0/0
 21385 ;;		On exit  : 0/0
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21388 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21391 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21392 ;;Total ram usage:       10 bytes
 21393 ;; Hardware stack levels used:    1
 21394 ;; Hardware stack levels required when called:    5
 21395 ;; This function calls:
 21396 ;;		_flash_sector_read
 21397 ;; This function is called by:
 21398 ;;		_MSDReadHandler
 21399 ;; This function uses a non-reentrant model
 21400 ;;
 21401                           
 21402                           	psect	text95
 21403  0083C0                     __ptext95:
 21404                           	opt stack 0
 21405  0083C0                     _ExternalFlash_SectorRead:
 21406                           	opt stack 20
 21407                           
 21408                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21409                           
 21410                           ; BSR set to: 1
 21411                           ;incstack = 0
 21412  0083C0  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21413  0083C4  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21414                           
 21415                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21416  0083C8  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21417  0083CA  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21418  0083CC  E104               	bnz	u7780
 21419  0083CE  0E20               	movlw	32
 21420  0083D0  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21421  0083D2  A0D8               	btfss	status,0,c
 21422  0083D4  D002               	goto	l1876
 21423  0083D6                     u7780:
 21424                           
 21425                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21426  0083D6  0E00               	movlw	0
 21427  0083D8  0012               	return	
 21428  0083DA                     l1876:
 21429                           
 21430                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21431  0083DA  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21432  0083DE  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21433  0083E2  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21434  0083E6  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21435  0083EA  ECF9  F041         	call	_flash_sector_read	;wreg free
 21436                           
 21437                           ;external_flash.c: 53: return 1;
 21438  0083EE  0E01               	movlw	1
 21439  0083F0  0012               	return	
 21440  0083F2                     __end_of_ExternalFlash_SectorRead:
 21441                           	opt stack 0
 21442                           tosu	equ	0xFFF
 21443                           tosh	equ	0xFFE
 21444                           tosl	equ	0xFFD
 21445                           pclath	equ	0xFFA
 21446                           tblptru	equ	0xFF8
 21447                           tblptrh	equ	0xFF7
 21448                           tblptrl	equ	0xFF6
 21449                           tablat	equ	0xFF5
 21450                           prodh	equ	0xFF4
 21451                           prodl	equ	0xFF3
 21452                           intcon	equ	0xFF2
 21453                           intcon2	equ	0xFF1
 21454                           intcon3	equ	0xFF0
 21455                           indf0	equ	0xFEF
 21456                           postinc0	equ	0xFEE
 21457                           fsr0h	equ	0xFEA
 21458                           fsr0l	equ	0xFE9
 21459                           wreg	equ	0xFE8
 21460                           indf1	equ	0xFE7
 21461                           postdec1	equ	0xFE5
 21462                           plusw1	equ	0xFE3
 21463                           fsr1h	equ	0xFE2
 21464                           fsr1l	equ	0xFE1
 21465                           indf2	equ	0xFDF
 21466                           postinc2	equ	0xFDE
 21467                           postdec2	equ	0xFDD
 21468                           plusw2	equ	0xFDB
 21469                           fsr2h	equ	0xFDA
 21470                           fsr2l	equ	0xFD9
 21471                           status	equ	0xFD8
 21472                           
 21473 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21474 ;; Defined at:
 21475 ;;		line 993 in file "usb_device_msd.c"
 21476 ;; Parameters:    Size  Location     Type
 21477 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21478 ;; Auto vars:     Size  Location     Type
 21479 ;;		None
 21480 ;; Return value:  Size  Location     Type
 21481 ;;                  1    wreg      void 
 21482 ;; Registers used:
 21483 ;;		wreg, status,2, status,0
 21484 ;; Tracked objects:
 21485 ;;		On entry : 0/0
 21486 ;;		On exit  : 0/0
 21487 ;;		Unchanged: 0/0
 21488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21493 ;;Total ram usage:        6 bytes
 21494 ;; Hardware stack levels used:    1
 21495 ;; This function calls:
 21496 ;;		Nothing
 21497 ;; This function is called by:
 21498 ;;		_MSDProcessCommandMediaPresent
 21499 ;; This function uses a non-reentrant model
 21500 ;;
 21501                           
 21502                           	psect	text96
 21503  0068C2                     __ptext96:
 21504                           	opt stack 0
 21505  0068C2                     _MSDComputeDeviceInAndResidue:
 21506                           	opt stack 26
 21507                           
 21508                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21509                           
 21510                           ;incstack = 0
 21511  0068C2  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21512  0068C4  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21513  0068C6  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21514  0068C8  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21515  0068CA  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21516  0068CC  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21517  0068CE  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21518  0068D0  0101               	movlb	1	; () banked
 21519  0068D2  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21520  0068D4  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21521  0068D6  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21522  0068D8  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21523  0068DA  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21524  0068DC  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21525  0068DE  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21526  0068E0  B0D8               	btfsc	status,0,c
 21527  0068E2  D00E               	goto	l659
 21528                           
 21529                           ; BSR set to: 1
 21530                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21531  0068E4  0E00               	movlw	0
 21532  0068E6  010D               	movlb	13	; () banked
 21533  0068E8  6F88               	movwf	136,b	;volatile
 21534  0068EA  0E00               	movlw	0
 21535  0068EC  6F89               	movwf	137,b	;volatile
 21536  0068EE  0E00               	movlw	0
 21537  0068F0  6F8A               	movwf	138,b	;volatile
 21538  0068F2  0E00               	movlw	0
 21539  0068F4  6F8B               	movwf	139,b	;volatile
 21540                           
 21541                           ; BSR set to: 13
 21542                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21543  0068F6  C108  F0DB         	movff	_gblCBW+8,_TransferLength
 21544  0068FA  C109  F0DC         	movff	_gblCBW+9,_TransferLength+1
 21545                           
 21546                           ;usb_device_msd.c: 1002: }
 21547  0068FE  0012               	return	
 21548  006900                     l659:
 21549                           
 21550                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21551                           
 21552                           ; BSR set to: 13
 21553  006900  0100               	movlb	0	; () banked
 21554  006902  51DB               	movf	_TransferLength& (0+255),w,b
 21555  006904  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21556  006906  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21557  006908  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21558  00690A  B0D8               	btfsc	status,0,c
 21559  00690C  D004               	goto	l661
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21563  00690E  C001  F0DB         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 21564  006912  C002  F0DC         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 21565  006916                     l661:
 21566                           
 21567                           ; BSR set to: 0
 21568                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 21569                           
 21570                           ; BSR set to: 0
 21571  006916  51DB               	movf	_TransferLength& (0+255),w,b
 21572  006918  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21573  00691A  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21574  00691C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21575  00691E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21576  006920  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21577  006922  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 21578  006924  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 21579  006926  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 21580  006928  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 21581  00692A  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 21582  00692C  0E00               	movlw	0
 21583  00692E  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 21584  006930  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 21585  006932  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 21586  006934  0101               	movlb	1	; () banked
 21587  006936  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21588  006938  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 21589  00693A  010D               	movlb	13	; () banked
 21590  00693C  6F88               	movwf	136,b	;volatile
 21591  00693E  0101               	movlb	1	; () banked
 21592  006940  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21593  006942  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 21594  006944  010D               	movlb	13	; () banked
 21595  006946  6F89               	movwf	137,b	;volatile
 21596  006948  0101               	movlb	1	; () banked
 21597  00694A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21598  00694C  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 21599  00694E  010D               	movlb	13	; () banked
 21600  006950  6F8A               	movwf	138,b	;volatile
 21601  006952  0101               	movlb	1	; () banked
 21602  006954  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21603  006956  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 21604  006958  010D               	movlb	13	; () banked
 21605  00695A  6F8B               	movwf	139,b	;volatile
 21606  00695C  0012               	return	
 21607  00695E                     __end_of_MSDComputeDeviceInAndResidue:
 21608                           	opt stack 0
 21609                           tosu	equ	0xFFF
 21610                           tosh	equ	0xFFE
 21611                           tosl	equ	0xFFD
 21612                           pclath	equ	0xFFA
 21613                           tblptru	equ	0xFF8
 21614                           tblptrh	equ	0xFF7
 21615                           tblptrl	equ	0xFF6
 21616                           tablat	equ	0xFF5
 21617                           prodh	equ	0xFF4
 21618                           prodl	equ	0xFF3
 21619                           intcon	equ	0xFF2
 21620                           intcon2	equ	0xFF1
 21621                           intcon3	equ	0xFF0
 21622                           indf0	equ	0xFEF
 21623                           postinc0	equ	0xFEE
 21624                           fsr0h	equ	0xFEA
 21625                           fsr0l	equ	0xFE9
 21626                           wreg	equ	0xFE8
 21627                           indf1	equ	0xFE7
 21628                           postdec1	equ	0xFE5
 21629                           plusw1	equ	0xFE3
 21630                           fsr1h	equ	0xFE2
 21631                           fsr1l	equ	0xFE1
 21632                           indf2	equ	0xFDF
 21633                           postinc2	equ	0xFDE
 21634                           postdec2	equ	0xFDD
 21635                           plusw2	equ	0xFDB
 21636                           fsr2h	equ	0xFDA
 21637                           fsr2l	equ	0xFD9
 21638                           status	equ	0xFD8
 21639                           
 21640 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 21641 ;; Defined at:
 21642 ;;		line 18 in file "external_flash.c"
 21643 ;; Parameters:    Size  Location     Type
 21644 ;;  config          2    0[COMRAM] PTR void 
 21645 ;;		 -> NULL(0), 
 21646 ;; Auto vars:     Size  Location     Type
 21647 ;;		None
 21648 ;; Return value:  Size  Location     Type
 21649 ;;                  2    0[COMRAM] unsigned int 
 21650 ;; Registers used:
 21651 ;;		wreg, status,2
 21652 ;; Tracked objects:
 21653 ;;		On entry : 0/0
 21654 ;;		On exit  : 0/0
 21655 ;;		Unchanged: 0/0
 21656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21661 ;;Total ram usage:        2 bytes
 21662 ;; Hardware stack levels used:    1
 21663 ;; This function calls:
 21664 ;;		Nothing
 21665 ;; This function is called by:
 21666 ;;		_MSDProcessCommandMediaPresent
 21667 ;; This function uses a non-reentrant model
 21668 ;;
 21669                           
 21670                           	psect	text97
 21671  008A0C                     __ptext97:
 21672                           	opt stack 0
 21673  008A0C                     _ExternalFlash_SectorSizeRead:
 21674                           	opt stack 26
 21675                           
 21676                           ;external_flash.c: 20: return 512;
 21677                           
 21678                           ; BSR set to: 13
 21679                           ;incstack = 0
 21680  008A0C  0E02               	movlw	2
 21681  008A0E  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 21682  008A10  0E00               	movlw	0
 21683  008A12  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 21684  008A14  0012               	return	
 21685  008A16                     __end_of_ExternalFlash_SectorSizeRead:
 21686                           	opt stack 0
 21687                           tosu	equ	0xFFF
 21688                           tosh	equ	0xFFE
 21689                           tosl	equ	0xFFD
 21690                           pclath	equ	0xFFA
 21691                           tblptru	equ	0xFF8
 21692                           tblptrh	equ	0xFF7
 21693                           tblptrl	equ	0xFF6
 21694                           tablat	equ	0xFF5
 21695                           prodh	equ	0xFF4
 21696                           prodl	equ	0xFF3
 21697                           intcon	equ	0xFF2
 21698                           intcon2	equ	0xFF1
 21699                           intcon3	equ	0xFF0
 21700                           indf0	equ	0xFEF
 21701                           postinc0	equ	0xFEE
 21702                           fsr0h	equ	0xFEA
 21703                           fsr0l	equ	0xFE9
 21704                           wreg	equ	0xFE8
 21705                           indf1	equ	0xFE7
 21706                           postdec1	equ	0xFE5
 21707                           plusw1	equ	0xFE3
 21708                           fsr1h	equ	0xFE2
 21709                           fsr1l	equ	0xFE1
 21710                           indf2	equ	0xFDF
 21711                           postinc2	equ	0xFDE
 21712                           postdec2	equ	0xFDD
 21713                           plusw2	equ	0xFDB
 21714                           fsr2h	equ	0xFDA
 21715                           fsr2l	equ	0xFD9
 21716                           status	equ	0xFD8
 21717                           
 21718 ;; *************** function _ExternalFlash_CapacityRead *****************
 21719 ;; Defined at:
 21720 ;;		line 23 in file "external_flash.c"
 21721 ;; Parameters:    Size  Location     Type
 21722 ;;  config          2    0[COMRAM] PTR void 
 21723 ;;		 -> NULL(0), 
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  4    0[COMRAM] unsigned long 
 21728 ;; Registers used:
 21729 ;;		wreg, status,2
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21739 ;;Total ram usage:        4 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; This function calls:
 21742 ;;		Nothing
 21743 ;; This function is called by:
 21744 ;;		_MSDProcessCommandMediaPresent
 21745 ;; This function uses a non-reentrant model
 21746 ;;
 21747                           
 21748                           	psect	text98
 21749  008944                     __ptext98:
 21750                           	opt stack 0
 21751  008944                     _ExternalFlash_CapacityRead:
 21752                           	opt stack 26
 21753                           
 21754                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 21755                           
 21756                           ;incstack = 0
 21757  008944  0EFF               	movlw	255
 21758  008946  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 21759  008948  0E1F               	movlw	31
 21760  00894A  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 21761  00894C  0E00               	movlw	0
 21762  00894E  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 21763  008950  0E00               	movlw	0
 21764  008952  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 21765  008954  0012               	return	
 21766  008956                     __end_of_ExternalFlash_CapacityRead:
 21767                           	opt stack 0
 21768                           tosu	equ	0xFFF
 21769                           tosh	equ	0xFFE
 21770                           tosl	equ	0xFFD
 21771                           pclath	equ	0xFFA
 21772                           tblptru	equ	0xFF8
 21773                           tblptrh	equ	0xFF7
 21774                           tblptrl	equ	0xFF6
 21775                           tablat	equ	0xFF5
 21776                           prodh	equ	0xFF4
 21777                           prodl	equ	0xFF3
 21778                           intcon	equ	0xFF2
 21779                           intcon2	equ	0xFF1
 21780                           intcon3	equ	0xFF0
 21781                           indf0	equ	0xFEF
 21782                           postinc0	equ	0xFEE
 21783                           fsr0h	equ	0xFEA
 21784                           fsr0l	equ	0xFE9
 21785                           wreg	equ	0xFE8
 21786                           indf1	equ	0xFE7
 21787                           postdec1	equ	0xFE5
 21788                           plusw1	equ	0xFE3
 21789                           fsr1h	equ	0xFE2
 21790                           fsr1l	equ	0xFE1
 21791                           indf2	equ	0xFDF
 21792                           postinc2	equ	0xFDE
 21793                           postdec2	equ	0xFDD
 21794                           plusw2	equ	0xFDB
 21795                           fsr2h	equ	0xFDA
 21796                           fsr2l	equ	0xFD9
 21797                           status	equ	0xFD8
 21798                           
 21799 ;; *************** function _ExternalFlash_MediaInitialize *****************
 21800 ;; Defined at:
 21801 ;;		line 10 in file "external_flash.c"
 21802 ;; Parameters:    Size  Location     Type
 21803 ;;  config          2    0[COMRAM] PTR void 
 21804 ;;		 -> NULL(0), 
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;		None
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  2    0[COMRAM] PTR struct .
 21809 ;; Registers used:
 21810 ;;		wreg, status,2, status,0
 21811 ;; Tracked objects:
 21812 ;;		On entry : 0/0
 21813 ;;		On exit  : 0/0
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21820 ;;Total ram usage:        2 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; This function calls:
 21823 ;;		Nothing
 21824 ;; This function is called by:
 21825 ;;		_USBMSDInit
 21826 ;;		_MSDProcessCommand
 21827 ;; This function uses a non-reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text99
 21831  00885E                     __ptext99:
 21832                           	opt stack 0
 21833  00885E                     _ExternalFlash_MediaInitialize:
 21834                           	opt stack 26
 21835                           
 21836                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 21837                           
 21838                           ;incstack = 0
 21839  00885E  0101               	movlb	1	; () banked
 21840  008860  81AB               	bsf	(_mediaInformation+1)& (0+255),0,b
 21841                           
 21842                           ; BSR set to: 1
 21843                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 21844  008862  0E02               	movlw	2
 21845  008864  6FAD               	movwf	(_mediaInformation+3)& (0+255),b
 21846  008866  0E00               	movlw	0
 21847  008868  6FAC               	movwf	(_mediaInformation+2)& (0+255),b
 21848                           
 21849                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 21850  00886A  0E00               	movlw	0
 21851  00886C  6FAA               	movwf	_mediaInformation& (0+255),b
 21852                           
 21853                           ; BSR set to: 1
 21854                           ;external_flash.c: 15: return &mediaInformation;
 21855  00886E  0EAA               	movlw	low _mediaInformation
 21856  008870  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 21857  008872  0E01               	movlw	high _mediaInformation
 21858  008874  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 21859  008876  0012               	return	
 21860  008878                     __end_of_ExternalFlash_MediaInitialize:
 21861                           	opt stack 0
 21862                           tosu	equ	0xFFF
 21863                           tosh	equ	0xFFE
 21864                           tosl	equ	0xFFD
 21865                           pclath	equ	0xFFA
 21866                           tblptru	equ	0xFF8
 21867                           tblptrh	equ	0xFF7
 21868                           tblptrl	equ	0xFF6
 21869                           tablat	equ	0xFF5
 21870                           prodh	equ	0xFF4
 21871                           prodl	equ	0xFF3
 21872                           intcon	equ	0xFF2
 21873                           intcon2	equ	0xFF1
 21874                           intcon3	equ	0xFF0
 21875                           indf0	equ	0xFEF
 21876                           postinc0	equ	0xFEE
 21877                           fsr0h	equ	0xFEA
 21878                           fsr0l	equ	0xFE9
 21879                           wreg	equ	0xFE8
 21880                           indf1	equ	0xFE7
 21881                           postdec1	equ	0xFE5
 21882                           plusw1	equ	0xFE3
 21883                           fsr1h	equ	0xFE2
 21884                           fsr1l	equ	0xFE1
 21885                           indf2	equ	0xFDF
 21886                           postinc2	equ	0xFDE
 21887                           postdec2	equ	0xFDD
 21888                           plusw2	equ	0xFDB
 21889                           fsr2h	equ	0xFDA
 21890                           fsr2l	equ	0xFD9
 21891                           status	equ	0xFD8
 21892                           
 21893 ;; *************** function _ExternalFlash_MediaDetect *****************
 21894 ;; Defined at:
 21895 ;;		line 29 in file "external_flash.c"
 21896 ;; Parameters:    Size  Location     Type
 21897 ;;  config          2    0[COMRAM] PTR void 
 21898 ;;		 -> NULL(0), 
 21899 ;; Auto vars:     Size  Location     Type
 21900 ;;		None
 21901 ;; Return value:  Size  Location     Type
 21902 ;;                  1    wreg      unsigned char 
 21903 ;; Registers used:
 21904 ;;		wreg
 21905 ;; Tracked objects:
 21906 ;;		On entry : 0/0
 21907 ;;		On exit  : 0/0
 21908 ;;		Unchanged: 0/0
 21909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21914 ;;Total ram usage:        2 bytes
 21915 ;; Hardware stack levels used:    1
 21916 ;; This function calls:
 21917 ;;		Nothing
 21918 ;; This function is called by:
 21919 ;;		_USBMSDInit
 21920 ;;		_MSDProcessCommand
 21921 ;; This function uses a non-reentrant model
 21922 ;;
 21923                           
 21924                           	psect	text100
 21925  008A9C                     __ptext100:
 21926                           	opt stack 0
 21927  008A9C                     _ExternalFlash_MediaDetect:
 21928                           	opt stack 26
 21929                           
 21930                           ;external_flash.c: 31: return 1;
 21931                           
 21932                           ; BSR set to: 1
 21933                           ;incstack = 0
 21934  008A9C  0E01               	movlw	1
 21935  008A9E  0012               	return	
 21936  008AA0                     __end_of_ExternalFlash_MediaDetect:
 21937                           	opt stack 0
 21938                           tosu	equ	0xFFF
 21939                           tosh	equ	0xFFE
 21940                           tosl	equ	0xFFD
 21941                           pclath	equ	0xFFA
 21942                           tblptru	equ	0xFF8
 21943                           tblptrh	equ	0xFF7
 21944                           tblptrl	equ	0xFF6
 21945                           tablat	equ	0xFF5
 21946                           prodh	equ	0xFF4
 21947                           prodl	equ	0xFF3
 21948                           intcon	equ	0xFF2
 21949                           intcon2	equ	0xFF1
 21950                           intcon3	equ	0xFF0
 21951                           indf0	equ	0xFEF
 21952                           postinc0	equ	0xFEE
 21953                           fsr0h	equ	0xFEA
 21954                           fsr0l	equ	0xFE9
 21955                           wreg	equ	0xFE8
 21956                           indf1	equ	0xFE7
 21957                           postdec1	equ	0xFE5
 21958                           plusw1	equ	0xFE3
 21959                           fsr1h	equ	0xFE2
 21960                           fsr1l	equ	0xFE1
 21961                           indf2	equ	0xFDF
 21962                           postinc2	equ	0xFDE
 21963                           postdec2	equ	0xFDD
 21964                           plusw2	equ	0xFDB
 21965                           fsr2h	equ	0xFDA
 21966                           fsr2l	equ	0xFD9
 21967                           status	equ	0xFD8
 21968                           
 21969 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 21970 ;; Defined at:
 21971 ;;		line 74 in file "app_device_custom_hid.c"
 21972 ;; Parameters:    Size  Location     Type
 21973 ;;		None
 21974 ;; Auto vars:     Size  Location     Type
 21975 ;;  idx             1    0        unsigned char 
 21976 ;; Return value:  Size  Location     Type
 21977 ;;                  1    wreg      void 
 21978 ;; Registers used:
 21979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21980 ;; Tracked objects:
 21981 ;;		On entry : 0/0
 21982 ;;		On exit  : 0/0
 21983 ;;		Unchanged: 0/0
 21984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21989 ;;Total ram usage:        4 bytes
 21990 ;; Hardware stack levels used:    1
 21991 ;; Hardware stack levels required when called:   12
 21992 ;; This function calls:
 21993 ;;		_USBTransferOnePacket
 21994 ;;		_api_parse
 21995 ;;		_api_prepare
 21996 ;; This function is called by:
 21997 ;;		_main
 21998 ;; This function uses a non-reentrant model
 21999 ;;
 22000                           
 22001                           	psect	text101
 22002  00630A                     __ptext101:
 22003                           	opt stack 0
 22004  00630A                     _APP_DeviceCustomHIDTasks:
 22005                           	opt stack 18
 22006                           
 22007                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22008                           
 22009                           ;incstack = 0
 22010  00630A  0E20               	movlw	32
 22011  00630C  0100               	movlb	0	; () banked
 22012  00630E  61F8               	cpfslt	_USBDeviceState& (0+255),b
 22013  006310  D001               	goto	l966
 22014  006312  0012               	return	
 22015  006314                     l966:
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22019  006314  B265               	btfsc	3941,1,c	;volatile
 22020  006316  0012               	return	
 22021                           
 22022                           ; BSR set to: 0
 22023                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22024                           
 22025                           ; BSR set to: 0
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22029  006318  0101               	movlb	1	; () banked
 22030  00631A  5180               	movf	_USBOutHandle& (0+255),w,b
 22031  00631C  1181               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22032  00631E  B4D8               	btfsc	status,2,c
 22033  006320  D006               	goto	u12430
 22034                           
 22035                           ; BSR set to: 1
 22036  006322  C180  FFD9         	movff	_USBOutHandle,fsr2l
 22037  006326  C181  FFDA         	movff	_USBOutHandle+1,fsr2h
 22038  00632A  BEDF               	btfsc	indf2,7,c
 22039  00632C  0012               	return	
 22040  00632E                     u12430:
 22041                           
 22042                           ; BSR set to: 1
 22043                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22044                           
 22045                           ; BSR set to: 1
 22046  00632E  517E               	movf	_USBInHandle& (0+255),w,b
 22047  006330  117F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22048  006332  B4D8               	btfsc	status,2,c
 22049  006334  D006               	goto	u12450
 22050                           
 22051                           ; BSR set to: 1
 22052  006336  C17E  FFD9         	movff	_USBInHandle,fsr2l
 22053  00633A  C17F  FFDA         	movff	_USBInHandle+1,fsr2h
 22054  00633E  BEDF               	btfsc	indf2,7,c
 22055  006340  D020               	goto	l972
 22056  006342                     u12450:
 22057                           
 22058                           ; BSR set to: 1
 22059                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22060                           
 22061                           ; BSR set to: 1
 22062  006342  0E50               	movlw	_ReceivedDataBuffer& (0+255)
 22063  006344  0100               	movlb	0	; () banked
 22064  006346  6FB7               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22065  006348  6BB8               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22066  00634A  C0B7  F0B2         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22067  00634E  C0B8  F0B3         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22068  006352  0E80               	movlw	_ToSendDataBuffer& (0+255)
 22069  006354  6FB9               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22070  006356  6BBA               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22071  006358  C0B9  F0B4         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22072  00635C  C0BA  F0B5         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22073  006360  EC2F  F01F         	call	_api_prepare	;wreg free
 22074                           
 22075                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22076  006364  0E01               	movlw	1
 22077  006366  6E01               	movwf	USBTransferOnePacket@dir,c
 22078  006368  0E80               	movlw	low _ToSendDataBuffer
 22079  00636A  6E02               	movwf	USBTransferOnePacket@data,c
 22080  00636C  0E03               	movlw	high _ToSendDataBuffer
 22081  00636E  6E03               	movwf	USBTransferOnePacket@data+1,c
 22082  006370  0E40               	movlw	64
 22083  006372  6E04               	movwf	USBTransferOnePacket@len,c
 22084  006374  0E01               	movlw	1
 22085  006376  ECD3  F025         	call	_USBTransferOnePacket
 22086  00637A  C001  F17E         	movff	?_USBTransferOnePacket,_USBInHandle
 22087  00637E  C002  F17F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22088  006382                     l972:
 22089                           
 22090                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 22091  006382  0E50               	movlw	low _ReceivedDataBuffer
 22092  006384  0100               	movlb	0	; () banked
 22093  006386  6F9B               	movwf	api_parse@inBuffer& (0+255),b
 22094  006388  0E02               	movlw	high _ReceivedDataBuffer
 22095  00638A  6F9C               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22096  00638C  0E40               	movlw	64
 22097  00638E  6F9D               	movwf	api_parse@receivedDataLength& (0+255),b
 22098  006390  EC06  F02D         	call	_api_parse	;wreg free
 22099                           
 22100                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22101  006394  0E00               	movlw	0
 22102  006396  6E01               	movwf	USBTransferOnePacket@dir,c
 22103  006398  0E50               	movlw	low _ReceivedDataBuffer
 22104  00639A  6E02               	movwf	USBTransferOnePacket@data,c
 22105  00639C  0E02               	movlw	high _ReceivedDataBuffer
 22106  00639E  6E03               	movwf	USBTransferOnePacket@data+1,c
 22107  0063A0  0E40               	movlw	64
 22108  0063A2  6E04               	movwf	USBTransferOnePacket@len,c
 22109  0063A4  0E01               	movlw	1
 22110  0063A6  ECD3  F025         	call	_USBTransferOnePacket
 22111  0063AA  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 22112  0063AE  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22113  0063B2  0012               	return	
 22114  0063B4                     __end_of_APP_DeviceCustomHIDTasks:
 22115                           	opt stack 0
 22116                           tosu	equ	0xFFF
 22117                           tosh	equ	0xFFE
 22118                           tosl	equ	0xFFD
 22119                           pclath	equ	0xFFA
 22120                           tblptru	equ	0xFF8
 22121                           tblptrh	equ	0xFF7
 22122                           tblptrl	equ	0xFF6
 22123                           tablat	equ	0xFF5
 22124                           prodh	equ	0xFF4
 22125                           prodl	equ	0xFF3
 22126                           intcon	equ	0xFF2
 22127                           intcon2	equ	0xFF1
 22128                           intcon3	equ	0xFF0
 22129                           indf0	equ	0xFEF
 22130                           postinc0	equ	0xFEE
 22131                           fsr0h	equ	0xFEA
 22132                           fsr0l	equ	0xFE9
 22133                           wreg	equ	0xFE8
 22134                           indf1	equ	0xFE7
 22135                           postdec1	equ	0xFE5
 22136                           plusw1	equ	0xFE3
 22137                           fsr1h	equ	0xFE2
 22138                           fsr1l	equ	0xFE1
 22139                           indf2	equ	0xFDF
 22140                           postinc2	equ	0xFDE
 22141                           postdec2	equ	0xFDD
 22142                           plusw2	equ	0xFDB
 22143                           fsr2h	equ	0xFDA
 22144                           fsr2l	equ	0xFD9
 22145                           status	equ	0xFD8
 22146                           
 22147 ;; *************** function _api_prepare *****************
 22148 ;; Defined at:
 22149 ;;		line 53 in file "api.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22152 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22153 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22154 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22155 ;; Auto vars:     Size  Location     Type
 22156 ;;  command         1   86[BANK0 ] enum E6715
 22157 ;; Return value:  Size  Location     Type
 22158 ;;                  1    wreg      void 
 22159 ;; Registers used:
 22160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22161 ;; Tracked objects:
 22162 ;;		On entry : 0/0
 22163 ;;		On exit  : 0/0
 22164 ;;		Unchanged: 0/0
 22165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22169 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22170 ;;Total ram usage:        5 bytes
 22171 ;; Hardware stack levels used:    1
 22172 ;; Hardware stack levels required when called:   10
 22173 ;; This function calls:
 22174 ;;		__fill_buffer_find_file
 22175 ;;		__fill_buffer_get_bootloader_details
 22176 ;;		__fill_buffer_get_configuration
 22177 ;;		__fill_buffer_get_display
 22178 ;;		__fill_buffer_get_file_details
 22179 ;;		__fill_buffer_get_status
 22180 ;;		__fill_buffer_read_file
 22181 ;;		_memcpy
 22182 ;; This function is called by:
 22183 ;;		_main
 22184 ;;		_APP_DeviceCustomHIDTasks
 22185 ;; This function uses a non-reentrant model
 22186 ;;
 22187                           
 22188                           	psect	text102
 22189  003E5E                     __ptext102:
 22190                           	opt stack 0
 22191  003E5E                     _api_prepare:
 22192                           	opt stack 20
 22193                           
 22194                           ;api.c: 55: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22195                           
 22196                           ;incstack = 0
 22197  003E5E  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22198  003E62  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22199  003E66  50DF               	movf	indf2,w,c
 22200  003E68  0100               	movlb	0	; () banked
 22201  003E6A  6FB6               	movwf	api_prepare@command& (0+255),b
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;api.c: 57: if(command>0x7F)
 22205  003E6C  0E7F               	movlw	127
 22206  003E6E  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22207  003E70  D088               	goto	l2651
 22208  003E72  D031               	goto	l2644
 22209  003E74                     
 22210                           ; BSR set to: 0
 22211                           ;api.c: 73: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22212                           
 22213                           ; BSR set to: 0
 22214  003E74  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22215  003E78  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22216  003E7C  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22217  003E80  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22218  003E84  ECB1  F038         	call	__fill_buffer_get_file_details	;wreg free
 22219                           
 22220                           ;api.c: 74: break;
 22221  003E88  0012               	return	
 22222  003E8A                     
 22223                           ;api.c: 78: _fill_buffer_find_file(inBuffer, outBuffer);
 22224  003E8A  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22225  003E8E  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22226  003E92  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22227  003E96  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22228  003E9A  EC23  F033         	call	__fill_buffer_find_file	;wreg free
 22229                           
 22230                           ;api.c: 79: break;
 22231  003E9E  0012               	return	
 22232  003EA0                     
 22233                           ;api.c: 83: _fill_buffer_read_file(inBuffer, outBuffer);
 22234  003EA0  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22235  003EA4  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22236  003EA8  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22237  003EAC  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22238  003EB0  EC5E  F013         	call	__fill_buffer_read_file	;wreg free
 22239                           
 22240                           ;api.c: 84: break;
 22241  003EB4  0012               	return	
 22242  003EB6                     
 22243                           ;api.c: 87: outBuffer[0] = 0x99;
 22244  003EB6  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22245  003EBA  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22246  003EBE  0E99               	movlw	153
 22247  003EC0  6EDF               	movwf	indf2,c
 22248                           
 22249                           ;api.c: 88: outBuffer[1] = 0x99;
 22250  003EC2  0100               	movlb	0	; () banked
 22251  003EC4  EE20 F001          	lfsr	2,1
 22252  003EC8  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22253  003ECA  26D9               	addwf	fsr2l,f,c
 22254  003ECC  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22255  003ECE  22DA               	addwfc	fsr2h,f,c
 22256  003ED0  0E99               	movlw	153
 22257  003ED2  6EDF               	movwf	indf2,c
 22258                           
 22259                           ;api.c: 89: }
 22260  003ED4  0012               	return	
 22261  003ED6                     l2644:
 22262                           
 22263                           ; BSR set to: 0
 22264                           
 22265                           ; BSR set to: 0
 22266  003ED6  51B6               	movf	api_prepare@command& (0+255),w,b
 22267                           
 22268                           ; Switch size 1, requested type "space"
 22269                           ; Number of cases is 3, Range of values is 128 to 130
 22270                           ; switch strategies available:
 22271                           ; Name         Instructions Cycles
 22272                           ; simple_byte           10     6 (average)
 22273                           ;	Chosen strategy is simple_byte
 22274  003ED8  0A80               	xorlw	128	; case 128
 22275  003EDA  B4D8               	btfsc	status,2,c
 22276  003EDC  D7CB               	goto	l2645
 22277  003EDE  0A01               	xorlw	1	; case 129
 22278  003EE0  B4D8               	btfsc	status,2,c
 22279  003EE2  D7D3               	goto	l2647
 22280  003EE4  0A03               	xorlw	3	; case 130
 22281  003EE6  B4D8               	btfsc	status,2,c
 22282  003EE8  D7DB               	goto	l2648
 22283  003EEA  D7E5               	goto	l2649
 22284  003EEC                     
 22285                           ; BSR set to: 0
 22286                           ;api.c: 98: _fill_buffer_get_status(outBuffer);
 22287                           
 22288                           ; BSR set to: 0
 22289  003EEC  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22290  003EF0  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22291  003EF4  EC04  F02A         	call	__fill_buffer_get_status	;wreg free
 22292                           
 22293                           ;api.c: 99: break;
 22294  003EF8  0012               	return	
 22295  003EFA                     
 22296                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 0);
 22297  003EFA  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22298  003EFE  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22299  003F02  0E00               	movlw	0
 22300  003F04  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22301  003F06  EC26  F030         	call	__fill_buffer_get_display	;wreg free
 22302                           
 22303                           ;api.c: 104: break;
 22304  003F0A  0012               	return	
 22305  003F0C                     
 22306                           ;api.c: 108: _fill_buffer_get_display(outBuffer, 1);
 22307  003F0C  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22308  003F10  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22309  003F14  0E01               	movlw	1
 22310  003F16  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22311  003F18  EC26  F030         	call	__fill_buffer_get_display	;wreg free
 22312                           
 22313                           ;api.c: 109: break;
 22314  003F1C  0012               	return	
 22315  003F1E                     
 22316                           ;api.c: 113: _fill_buffer_get_bootloader_details(outBuffer);
 22317  003F1E  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22318  003F22  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22319  003F26  EC63  F016         	call	__fill_buffer_get_bootloader_details	;wreg free
 22320                           
 22321                           ;api.c: 114: break;
 22322  003F2A  0012               	return	
 22323  003F2C                     
 22324                           ;api.c: 118: _fill_buffer_get_configuration(outBuffer);
 22325  003F2C  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22326  003F30  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22327  003F34  ECC3  F033         	call	__fill_buffer_get_configuration	;wreg free
 22328                           
 22329                           ;api.c: 119: break;
 22330  003F38  0012               	return	
 22331  003F3A                     
 22332                           ;api.c: 123: memcpy(outBuffer, inBuffer, 64);
 22333  003F3A  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22334  003F3E  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22335  003F42  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22336  003F46  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22337  003F4A  5003               	movf	memcpy@s1,w,c
 22338  003F4C  1004               	iorwf	memcpy@s1+1,w,c
 22339  003F4E  A4D8               	btfss	status,2,c
 22340  003F50  0E20               	movlw	32
 22341  003F52  6E05               	movwf	memcpy@s1+2,c
 22342  003F54  0E00               	movlw	0
 22343  003F56  6E07               	movwf	memcpy@n+1,c
 22344  003F58  0E40               	movlw	64
 22345  003F5A  6E06               	movwf	memcpy@n,c
 22346  003F5C  EC9C  F03A         	call	_memcpy	;wreg free
 22347                           
 22348                           ;api.c: 124: break;
 22349  003F60  0012               	return	
 22350  003F62                     
 22351                           ;api.c: 127: outBuffer[0] = 0x99;
 22352  003F62  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22353  003F66  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22354  003F6A  0E99               	movlw	153
 22355  003F6C  6EDF               	movwf	indf2,c
 22356                           
 22357                           ;api.c: 128: outBuffer[1] = 0x99;
 22358  003F6E  0100               	movlb	0	; () banked
 22359  003F70  EE20 F001          	lfsr	2,1
 22360  003F74  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22361  003F76  26D9               	addwf	fsr2l,f,c
 22362  003F78  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22363  003F7A  22DA               	addwfc	fsr2h,f,c
 22364  003F7C  0E99               	movlw	153
 22365  003F7E  6EDF               	movwf	indf2,c
 22366                           
 22367                           ;api.c: 129: }
 22368  003F80  0012               	return	
 22369  003F82                     l2651:
 22370                           
 22371                           ; BSR set to: 0
 22372                           
 22373                           ; BSR set to: 0
 22374  003F82  51B6               	movf	api_prepare@command& (0+255),w,b
 22375                           
 22376                           ; Switch size 1, requested type "space"
 22377                           ; Number of cases is 6, Range of values is 16 to 32
 22378                           ; switch strategies available:
 22379                           ; Name         Instructions Cycles
 22380                           ; simple_byte           19    10 (average)
 22381                           ;	Chosen strategy is simple_byte
 22382  003F84  0A10               	xorlw	16	; case 16
 22383  003F86  B4D8               	btfsc	status,2,c
 22384  003F88  D7B1               	goto	l2652
 22385  003F8A  0A01               	xorlw	1	; case 17
 22386  003F8C  B4D8               	btfsc	status,2,c
 22387  003F8E  D7B5               	goto	l2654
 22388  003F90  0A03               	xorlw	3	; case 18
 22389  003F92  B4D8               	btfsc	status,2,c
 22390  003F94  D7BB               	goto	l2655
 22391  003F96  0A01               	xorlw	1	; case 19
 22392  003F98  B4D8               	btfsc	status,2,c
 22393  003F9A  D7C1               	goto	l2656
 22394  003F9C  0A07               	xorlw	7	; case 20
 22395  003F9E  B4D8               	btfsc	status,2,c
 22396  003FA0  D7C5               	goto	l2657
 22397  003FA2  0A34               	xorlw	52	; case 32
 22398  003FA4  B4D8               	btfsc	status,2,c
 22399  003FA6  D7C9               	goto	l2658
 22400  003FA8  D7DC               	goto	l2659
 22401  003FAA                     __end_of_api_prepare:
 22402                           	opt stack 0
 22403                           tosu	equ	0xFFF
 22404                           tosh	equ	0xFFE
 22405                           tosl	equ	0xFFD
 22406                           pclath	equ	0xFFA
 22407                           tblptru	equ	0xFF8
 22408                           tblptrh	equ	0xFF7
 22409                           tblptrl	equ	0xFF6
 22410                           tablat	equ	0xFF5
 22411                           prodh	equ	0xFF4
 22412                           prodl	equ	0xFF3
 22413                           intcon	equ	0xFF2
 22414                           intcon2	equ	0xFF1
 22415                           intcon3	equ	0xFF0
 22416                           indf0	equ	0xFEF
 22417                           postinc0	equ	0xFEE
 22418                           fsr0h	equ	0xFEA
 22419                           fsr0l	equ	0xFE9
 22420                           wreg	equ	0xFE8
 22421                           indf1	equ	0xFE7
 22422                           postdec1	equ	0xFE5
 22423                           plusw1	equ	0xFE3
 22424                           fsr1h	equ	0xFE2
 22425                           fsr1l	equ	0xFE1
 22426                           indf2	equ	0xFDF
 22427                           postinc2	equ	0xFDE
 22428                           postdec2	equ	0xFDD
 22429                           plusw2	equ	0xFDB
 22430                           fsr2h	equ	0xFDA
 22431                           fsr2l	equ	0xFD9
 22432                           status	equ	0xFD8
 22433                           
 22434 ;; *************** function __fill_buffer_read_file *****************
 22435 ;; Defined at:
 22436 ;;		line 384 in file "api.c"
 22437 ;; Parameters:    Size  Location     Type
 22438 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22439 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22440 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22441 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22442 ;; Auto vars:     Size  Location     Type
 22443 ;;  start           4   78[BANK0 ] unsigned long 
 22444 ;;  data_length     4   74[BANK0 ] unsigned long 
 22445 ;;  file_size       4   70[BANK0 ] unsigned long 
 22446 ;; Return value:  Size  Location     Type
 22447 ;;                  1    wreg      void 
 22448 ;; Registers used:
 22449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22450 ;; Tracked objects:
 22451 ;;		On entry : 0/0
 22452 ;;		On exit  : 0/0
 22453 ;;		Unchanged: 0/0
 22454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22456 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22457 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22458 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22459 ;;Total ram usage:       20 bytes
 22460 ;; Hardware stack levels used:    1
 22461 ;; Hardware stack levels required when called:    9
 22462 ;; This function calls:
 22463 ;;		_fat_get_file_size
 22464 ;;		_fat_read_from_file
 22465 ;; This function is called by:
 22466 ;;		_api_prepare
 22467 ;; This function uses a non-reentrant model
 22468 ;;
 22469                           
 22470                           	psect	text103
 22471  0026BC                     __ptext103:
 22472                           	opt stack 0
 22473  0026BC                     __fill_buffer_read_file:
 22474                           	opt stack 20
 22475                           
 22476                           ;api.c: 386: uint32_t start;;api.c: 387: uint32_t file_size;;api.c: 388: uint32_t data_l
      +                          ength;;api.c: 391: outBuffer[0] = DATAREQUEST_FIND_FILE;
 22477                           
 22478                           ;incstack = 0
 22479  0026BC  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22480  0026C0  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22481  0026C4  0E81               	movlw	129
 22482  0026C6  6EDF               	movwf	indf2,c
 22483                           
 22484                           ;api.c: 394: outBuffer[1] = 0xC125 >> 8;
 22485  0026C8  0100               	movlb	0	; () banked
 22486  0026CA  EE20 F001          	lfsr	2,1
 22487  0026CE  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22488  0026D0  26D9               	addwf	fsr2l,f,c
 22489  0026D2  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22490  0026D4  22DA               	addwfc	fsr2h,f,c
 22491  0026D6  0EC1               	movlw	193
 22492  0026D8  6EDF               	movwf	indf2,c
 22493                           
 22494                           ; BSR set to: 0
 22495                           ;api.c: 395: outBuffer[2] = (uint8_t) 0xC125;
 22496  0026DA  EE20 F002          	lfsr	2,2
 22497  0026DE  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22498  0026E0  26D9               	addwf	fsr2l,f,c
 22499  0026E2  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22500  0026E4  22DA               	addwfc	fsr2h,f,c
 22501  0026E6  0E25               	movlw	37
 22502  0026E8  6EDF               	movwf	indf2,c
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;api.c: 398: outBuffer[3] = inBuffer[1];
 22506  0026EA  EE20 F001          	lfsr	2,1
 22507  0026EE  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22508  0026F0  26D9               	addwf	fsr2l,f,c
 22509  0026F2  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22510  0026F4  22DA               	addwfc	fsr2h,f,c
 22511  0026F6  EE10 F003          	lfsr	1,3
 22512  0026FA  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22513  0026FC  26E1               	addwf	fsr1l,f,c
 22514  0026FE  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22515  002700  22E2               	addwfc	fsr1h,f,c
 22516  002702  CFDF FFE7          	movff	indf2,indf1
 22517                           
 22518                           ; BSR set to: 0
 22519                           ;api.c: 401: outBuffer[4] = inBuffer[1];
 22520  002706  EE20 F001          	lfsr	2,1
 22521  00270A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22522  00270C  26D9               	addwf	fsr2l,f,c
 22523  00270E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22524  002710  22DA               	addwfc	fsr2h,f,c
 22525  002712  EE10 F004          	lfsr	1,4
 22526  002716  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22527  002718  26E1               	addwf	fsr1l,f,c
 22528  00271A  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22529  00271C  22E2               	addwfc	fsr1h,f,c
 22530  00271E  CFDF FFE7          	movff	indf2,indf1
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;api.c: 402: outBuffer[5] = inBuffer[2];
 22534  002722  EE20 F002          	lfsr	2,2
 22535  002726  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22536  002728  26D9               	addwf	fsr2l,f,c
 22537  00272A  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22538  00272C  22DA               	addwfc	fsr2h,f,c
 22539  00272E  EE10 F005          	lfsr	1,5
 22540  002732  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22541  002734  26E1               	addwf	fsr1l,f,c
 22542  002736  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22543  002738  22E2               	addwfc	fsr1h,f,c
 22544  00273A  CFDF FFE7          	movff	indf2,indf1
 22545                           
 22546                           ; BSR set to: 0
 22547                           ;api.c: 403: outBuffer[6] = inBuffer[3];
 22548  00273E  EE20 F003          	lfsr	2,3
 22549  002742  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22550  002744  26D9               	addwf	fsr2l,f,c
 22551  002746  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22552  002748  22DA               	addwfc	fsr2h,f,c
 22553  00274A  EE10 F006          	lfsr	1,6
 22554  00274E  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22555  002750  26E1               	addwf	fsr1l,f,c
 22556  002752  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22557  002754  22E2               	addwfc	fsr1h,f,c
 22558  002756  CFDF FFE7          	movff	indf2,indf1
 22559                           
 22560                           ; BSR set to: 0
 22561                           ;api.c: 404: outBuffer[7] = inBuffer[4];
 22562  00275A  EE20 F004          	lfsr	2,4
 22563  00275E  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22564  002760  26D9               	addwf	fsr2l,f,c
 22565  002762  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22566  002764  22DA               	addwfc	fsr2h,f,c
 22567  002766  EE10 F007          	lfsr	1,7
 22568  00276A  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22569  00276C  26E1               	addwf	fsr1l,f,c
 22570  00276E  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22571  002770  22E2               	addwfc	fsr1h,f,c
 22572  002772  CFDF FFE7          	movff	indf2,indf1
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;api.c: 407: start = inBuffer[4];
 22576  002776  EE20 F004          	lfsr	2,4
 22577  00277A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22578  00277C  26D9               	addwf	fsr2l,f,c
 22579  00277E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22580  002780  22DA               	addwfc	fsr2h,f,c
 22581  002782  50DF               	movf	indf2,w,c
 22582  002784  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22583  002786  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22584  002788  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 22585  00278A  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 22586  00278C  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 22587  00278E  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 22588                           
 22589                           ; BSR set to: 0
 22590                           ;api.c: 408: start <<= 8;
 22591  002790  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22592  002794  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22593  002798  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22594  00279C  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22595                           
 22596                           ; BSR set to: 0
 22597                           ;api.c: 409: start |= inBuffer[3];
 22598  00279E  EE20 F003          	lfsr	2,3
 22599  0027A2  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22600  0027A4  26D9               	addwf	fsr2l,f,c
 22601  0027A6  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22602  0027A8  22DA               	addwfc	fsr2h,f,c
 22603  0027AA  50DF               	movf	indf2,w,c
 22604  0027AC  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22605  0027AE  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22606  0027B0  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22607                           
 22608                           ; BSR set to: 0
 22609                           ;api.c: 410: start <<= 8;
 22610  0027B2  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22611  0027B6  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22612  0027BA  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22613  0027BE  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22614                           
 22615                           ; BSR set to: 0
 22616                           ;api.c: 411: start |= inBuffer[2];
 22617  0027C0  EE20 F002          	lfsr	2,2
 22618  0027C4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22619  0027C6  26D9               	addwf	fsr2l,f,c
 22620  0027C8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22621  0027CA  22DA               	addwfc	fsr2h,f,c
 22622  0027CC  50DF               	movf	indf2,w,c
 22623  0027CE  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22624  0027D0  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22625  0027D2  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;api.c: 412: start <<= 8;
 22629  0027D4  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22630  0027D8  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22631  0027DC  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22632  0027E0  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22633                           
 22634                           ; BSR set to: 0
 22635                           ;api.c: 413: start |= inBuffer[1];
 22636  0027E2  EE20 F001          	lfsr	2,1
 22637  0027E6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22638  0027E8  26D9               	addwf	fsr2l,f,c
 22639  0027EA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22640  0027EC  22DA               	addwfc	fsr2h,f,c
 22641  0027EE  50DF               	movf	indf2,w,c
 22642  0027F0  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22643  0027F2  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22644  0027F4  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22645                           
 22646                           ; BSR set to: 0
 22647                           ;api.c: 416: file_size = fat_get_file_size(inBuffer[1]);
 22648  0027F6  EE20 F001          	lfsr	2,1
 22649  0027FA  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22650  0027FC  26D9               	addwf	fsr2l,f,c
 22651  0027FE  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22652  002800  22DA               	addwfc	fsr2h,f,c
 22653  002802  50DF               	movf	indf2,w,c
 22654  002804  ECCA  F039         	call	_fat_get_file_size
 22655  002808  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 22656  00280C  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 22657  002810  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 22658  002814  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 22659                           
 22660                           ;api.c: 417: data_length = file_size - start;
 22661  002818  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 22662  00281C  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 22663  002820  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 22664  002824  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 22665  002828  0100               	movlb	0	; () banked
 22666  00282A  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 22667  00282C  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 22668  00282E  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 22669  002830  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 22670  002832  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 22671  002834  0E00               	movlw	0
 22672  002836  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 22673  002838  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 22674  00283A  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 22675  00283C  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 22676  00283E  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 22677  002840  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22678  002842  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 22679  002844  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 22680  002846  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22681  002848  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 22682  00284A  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 22683  00284C  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22684  00284E  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 22685  002850  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 22686  002852  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22687                           
 22688                           ; BSR set to: 0
 22689                           ;api.c: 418: if(data_length>54)
 22690  002854  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 22691  002856  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 22692  002858  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 22693  00285A  E104               	bnz	u11290
 22694  00285C  0E37               	movlw	55
 22695  00285E  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 22696  002860  A0D8               	btfss	status,0,c
 22697  002862  D008               	goto	l2711
 22698  002864                     u11290:
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;api.c: 419: {;api.c: 421: data_length = 54;
 22702  002864  0E36               	movlw	54
 22703  002866  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22704  002868  0E00               	movlw	0
 22705  00286A  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22706  00286C  0E00               	movlw	0
 22707  00286E  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22708  002870  0E00               	movlw	0
 22709  002872  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22710  002874                     l2711:
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;api.c: 422: };api.c: 425: outBuffer[8] = (uint8_t) data_length;
 22714                           
 22715                           ; BSR set to: 0
 22716  002874  EE20 F008          	lfsr	2,8
 22717  002878  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22718  00287A  26D9               	addwf	fsr2l,f,c
 22719  00287C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22720  00287E  22DA               	addwfc	fsr2h,f,c
 22721  002880  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 22722                           
 22723                           ; BSR set to: 0
 22724                           ;api.c: 428: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 22725  002884  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 22726  002888  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 22727  00288C  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 22728  002890  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 22729  002894  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 22730  002898  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 22731  00289C  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 22732  0028A0  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 22733  0028A4  0E0A               	movlw	10
 22734  0028A6  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22735  0028A8  6F76               	movwf	fat_read_from_file@data& (0+255),b
 22736  0028AA  0E00               	movlw	0
 22737  0028AC  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22738  0028AE  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 22739  0028B0  EE20 F001          	lfsr	2,1
 22740  0028B4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22741  0028B6  26D9               	addwf	fsr2l,f,c
 22742  0028B8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22743  0028BA  22DA               	addwfc	fsr2h,f,c
 22744  0028BC  50DF               	movf	indf2,w,c
 22745  0028BE  EC53  F027         	call	_fat_read_from_file
 22746  0028C2  0100               	movlb	0	; () banked
 22747  0028C4  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22748  0028C6  EE20 F009          	lfsr	2,9
 22749  0028CA  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22750  0028CC  26D9               	addwf	fsr2l,f,c
 22751  0028CE  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22752  0028D0  22DA               	addwfc	fsr2h,f,c
 22753  0028D2  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 22754                           
 22755                           ; BSR set to: 0
 22756  0028D6  0012               	return		;funcret
 22757  0028D8                     __end_of__fill_buffer_read_file:
 22758                           	opt stack 0
 22759                           tosu	equ	0xFFF
 22760                           tosh	equ	0xFFE
 22761                           tosl	equ	0xFFD
 22762                           pclath	equ	0xFFA
 22763                           tblptru	equ	0xFF8
 22764                           tblptrh	equ	0xFF7
 22765                           tblptrl	equ	0xFF6
 22766                           tablat	equ	0xFF5
 22767                           prodh	equ	0xFF4
 22768                           prodl	equ	0xFF3
 22769                           intcon	equ	0xFF2
 22770                           intcon2	equ	0xFF1
 22771                           intcon3	equ	0xFF0
 22772                           indf0	equ	0xFEF
 22773                           postinc0	equ	0xFEE
 22774                           fsr0h	equ	0xFEA
 22775                           fsr0l	equ	0xFE9
 22776                           wreg	equ	0xFE8
 22777                           indf1	equ	0xFE7
 22778                           postdec1	equ	0xFE5
 22779                           plusw1	equ	0xFE3
 22780                           fsr1h	equ	0xFE2
 22781                           fsr1l	equ	0xFE1
 22782                           indf2	equ	0xFDF
 22783                           postinc2	equ	0xFDE
 22784                           postdec2	equ	0xFDD
 22785                           plusw2	equ	0xFDB
 22786                           fsr2h	equ	0xFDA
 22787                           fsr2l	equ	0xFD9
 22788                           status	equ	0xFD8
 22789                           
 22790 ;; *************** function _fat_read_from_file *****************
 22791 ;; Defined at:
 22792 ;;		line 732 in file "fat16.c"
 22793 ;; Parameters:    Size  Location     Type
 22794 ;;  file_number     1    wreg     unsigned char 
 22795 ;;  start_byte      4   14[BANK0 ] unsigned long 
 22796 ;;  length          4   18[BANK0 ] unsigned long 
 22797 ;;  data            2   22[BANK0 ] PTR unsigned char 
 22798 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22799 ;; Auto vars:     Size  Location     Type
 22800 ;;  file_number     1   24[BANK0 ] unsigned char 
 22801 ;;  root           32   30[BANK0 ] struct .
 22802 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 22803 ;;  cluster         2   25[BANK0 ] unsigned int 
 22804 ;;  return_code     1   29[BANK0 ] unsigned char 
 22805 ;; Return value:  Size  Location     Type
 22806 ;;                  1    wreg      unsigned char 
 22807 ;; Registers used:
 22808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22809 ;; Tracked objects:
 22810 ;;		On entry : 0/0
 22811 ;;		On exit  : 0/0
 22812 ;;		Unchanged: 0/0
 22813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22814 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22815 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22816 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22817 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22818 ;;Total ram usage:       52 bytes
 22819 ;; Hardware stack levels used:    1
 22820 ;; Hardware stack levels required when called:    8
 22821 ;; This function calls:
 22822 ;;		_fat_get_file_information
 22823 ;;		_fat_read_from_file_fast
 22824 ;; This function is called by:
 22825 ;;		__fill_buffer_read_file
 22826 ;; This function uses a non-reentrant model
 22827 ;;
 22828                           
 22829                           	psect	text104
 22830  004EA6                     __ptext104:
 22831                           	opt stack 0
 22832  004EA6                     _fat_read_from_file:
 22833                           	opt stack 20
 22834                           
 22835                           ; BSR set to: 0
 22836                           ;incstack = 0
 22837                           ;fat_read_from_file@file_number stored from wreg
 22838  004EA6  0100               	movlb	0	; () banked
 22839  004EA8  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 22840                           
 22841                           ;fat16.c: 734: rootEntry_t root;;fat16.c: 735: uint16_t cluster;;fat16.c: 736: uint16_t 
      +                          cluster_number;;fat16.c: 737: uint8_t return_code;;fat16.c: 740: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 22842  004EAA  0E7E               	movlw	low fat_read_from_file@root
 22843  004EAC  6E30               	movwf	fat_get_file_information@data,c
 22844  004EAE  0E00               	movlw	high fat_read_from_file@root
 22845  004EB0  6E31               	movwf	fat_get_file_information@data+1,c
 22846  004EB2  0100               	movlb	0	; () banked
 22847  004EB4  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 22848  004EB6  ECEA  F038         	call	_fat_get_file_information
 22849  004EBA  0100               	movlb	0	; () banked
 22850  004EBC  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 22851                           
 22852                           ; BSR set to: 0
 22853                           ;fat16.c: 741: if(return_code!=0x00)
 22854  004EBE  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22855  004EC0  B4D8               	btfsc	status,2,c
 22856  004EC2  D002               	goto	l2061
 22857                           
 22858                           ; BSR set to: 0
 22859                           ;fat16.c: 742: {;fat16.c: 744: return return_code;
 22860  004EC4  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22861                           
 22862                           ; BSR set to: 0
 22863  004EC6  0012               	return	
 22864  004EC8                     l2061:
 22865                           
 22866                           ; BSR set to: 0
 22867                           ;fat16.c: 745: };fat16.c: 748: if(start_byte > root.fileSize)
 22868                           
 22869                           ; BSR set to: 0
 22870  004EC8  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 22871  004ECA  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22872  004ECC  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22873  004ECE  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22874  004ED0  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22875  004ED2  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22876  004ED4  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 22877  004ED6  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 22878  004ED8  B0D8               	btfsc	status,0,c
 22879  004EDA  D002               	goto	l2063
 22880                           
 22881                           ; BSR set to: 0
 22882                           ;fat16.c: 749: {;fat16.c: 751: return 0xFF;
 22883  004EDC  0EFF               	movlw	255
 22884                           
 22885                           ; BSR set to: 0
 22886  004EDE  0012               	return	
 22887  004EE0                     l2063:
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;fat16.c: 752: };fat16.c: 754: if(start_byte+length > root.fileSize)
 22891                           
 22892                           ; BSR set to: 0
 22893  004EE0  5172               	movf	fat_read_from_file@length& (0+255),w,b
 22894  004EE2  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 22895  004EE4  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 22896  004EE6  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 22897  004EE8  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22898  004EEA  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 22899  004EEC  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 22900  004EEE  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22901  004EF0  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 22902  004EF2  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 22903  004EF4  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 22904  004EF6  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 22905  004EF8  505C               	movf	??_fat_read_from_file,w,c
 22906  004EFA  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22907  004EFC  505D               	movf	??_fat_read_from_file+1,w,c
 22908  004EFE  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22909  004F00  505E               	movf	??_fat_read_from_file+2,w,c
 22910  004F02  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22911  004F04  505F               	movf	??_fat_read_from_file+3,w,c
 22912  004F06  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 22913  004F08  B0D8               	btfsc	status,0,c
 22914  004F0A  D01D               	goto	l2064
 22915                           
 22916                           ; BSR set to: 0
 22917                           ;fat16.c: 755: {;fat16.c: 757: length = root.fileSize - start_byte;
 22918  004F0C  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 22919  004F10  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 22920  004F14  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 22921  004F18  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 22922  004F1C  1E5C               	comf	??_fat_read_from_file,f,c
 22923  004F1E  1E5D               	comf	??_fat_read_from_file+1,f,c
 22924  004F20  1E5E               	comf	??_fat_read_from_file+2,f,c
 22925  004F22  1E5F               	comf	??_fat_read_from_file+3,f,c
 22926  004F24  2A5C               	incf	??_fat_read_from_file,f,c
 22927  004F26  0E00               	movlw	0
 22928  004F28  225D               	addwfc	??_fat_read_from_file+1,f,c
 22929  004F2A  225E               	addwfc	??_fat_read_from_file+2,f,c
 22930  004F2C  225F               	addwfc	??_fat_read_from_file+3,f,c
 22931  004F2E  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 22932  004F30  245C               	addwf	??_fat_read_from_file,w,c
 22933  004F32  6F72               	movwf	fat_read_from_file@length& (0+255),b
 22934  004F34  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 22935  004F36  205D               	addwfc	??_fat_read_from_file+1,w,c
 22936  004F38  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 22937  004F3A  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 22938  004F3C  205E               	addwfc	??_fat_read_from_file+2,w,c
 22939  004F3E  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 22940  004F40  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 22941  004F42  205F               	addwfc	??_fat_read_from_file+3,w,c
 22942  004F44  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 22943  004F46                     l2064:
 22944                           
 22945                           ; BSR set to: 0
 22946                           ;fat16.c: 758: };fat16.c: 761: cluster = root.firstCluster;
 22947                           
 22948                           ; BSR set to: 0
 22949  004F46  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 22950  004F4A  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 22951                           
 22952                           ; BSR set to: 0
 22953                           ;fat16.c: 762: cluster_number = 0;
 22954  004F4E  0E00               	movlw	0
 22955  004F50  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 22956  004F52  0E00               	movlw	0
 22957  004F54  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 22958                           
 22959                           ; BSR set to: 0
 22960                           ;fat16.c: 765: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 22961  004F56  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 22962  004F5A  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 22963  004F5E  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 22964  004F62  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 22965  004F66  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 22966  004F6A  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 22967  004F6E  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 22968  004F72  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 22969  004F76  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 22970  004F7A  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 22971  004F7E  0E79               	movlw	low fat_read_from_file@cluster
 22972  004F80  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 22973  004F82  0E00               	movlw	high fat_read_from_file@cluster
 22974  004F84  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 22975  004F86  0E7B               	movlw	low fat_read_from_file@cluster_number
 22976  004F88  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 22977  004F8A  0E00               	movlw	high fat_read_from_file@cluster_number
 22978  004F8C  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 22979  004F8E  EC4B  F012         	call	_fat_read_from_file_fast	;wreg free
 22980  004F92  0012               	return	
 22981  004F94                     __end_of_fat_read_from_file:
 22982                           	opt stack 0
 22983                           tosu	equ	0xFFF
 22984                           tosh	equ	0xFFE
 22985                           tosl	equ	0xFFD
 22986                           pclath	equ	0xFFA
 22987                           tblptru	equ	0xFF8
 22988                           tblptrh	equ	0xFF7
 22989                           tblptrl	equ	0xFF6
 22990                           tablat	equ	0xFF5
 22991                           prodh	equ	0xFF4
 22992                           prodl	equ	0xFF3
 22993                           intcon	equ	0xFF2
 22994                           intcon2	equ	0xFF1
 22995                           intcon3	equ	0xFF0
 22996                           indf0	equ	0xFEF
 22997                           postinc0	equ	0xFEE
 22998                           fsr0h	equ	0xFEA
 22999                           fsr0l	equ	0xFE9
 23000                           wreg	equ	0xFE8
 23001                           indf1	equ	0xFE7
 23002                           postdec1	equ	0xFE5
 23003                           plusw1	equ	0xFE3
 23004                           fsr1h	equ	0xFE2
 23005                           fsr1l	equ	0xFE1
 23006                           indf2	equ	0xFDF
 23007                           postinc2	equ	0xFDE
 23008                           postdec2	equ	0xFDD
 23009                           plusw2	equ	0xFDB
 23010                           fsr2h	equ	0xFDA
 23011                           fsr2l	equ	0xFD9
 23012                           status	equ	0xFD8
 23013                           
 23014 ;; *************** function _fat_read_from_file_fast *****************
 23015 ;; Defined at:
 23016 ;;		line 768 in file "fat16.c"
 23017 ;; Parameters:    Size  Location     Type
 23018 ;;  start_byte      4   65[COMRAM] unsigned long 
 23019 ;;  length          4   69[COMRAM] unsigned long 
 23020 ;;  data            2   73[COMRAM] PTR unsigned char 
 23021 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 23022 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23023 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23024 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23025 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;  position        4   10[BANK0 ] unsigned long 
 23028 ;;  read_length     2    8[BANK0 ] unsigned int 
 23029 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23030 ;;  offset          2    4[BANK0 ] unsigned int 
 23031 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23032 ;;  sector          2    0[BANK0 ] unsigned int 
 23033 ;; Return value:  Size  Location     Type
 23034 ;;                  1    wreg      unsigned char 
 23035 ;; Registers used:
 23036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23037 ;; Tracked objects:
 23038 ;;		On entry : 0/0
 23039 ;;		On exit  : 0/0
 23040 ;;		Unchanged: 0/0
 23041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23042 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23043 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23044 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23045 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23046 ;;Total ram usage:       40 bytes
 23047 ;; Hardware stack levels used:    1
 23048 ;; Hardware stack levels required when called:    7
 23049 ;; This function calls:
 23050 ;;		__data_sector_from_cluster
 23051 ;;		__find_nth_cluster
 23052 ;;		__read_fat
 23053 ;;		_flash_partial_read
 23054 ;; This function is called by:
 23055 ;;		_fat_read_from_file
 23056 ;;		__bootloader_verify_file
 23057 ;;		__bootloader_program
 23058 ;; This function uses a non-reentrant model
 23059 ;;
 23060                           
 23061                           	psect	text105
 23062  002496                     __ptext105:
 23063                           	opt stack 0
 23064  002496                     _fat_read_from_file_fast:
 23065                           	opt stack 21
 23066                           
 23067                           ;fat16.c: 770: uint32_t position;;fat16.c: 771: uint16_t offset;;fat16.c: 772: uint16_t 
      +                          sector;;fat16.c: 773: uint16_t read_length;;fat16.c: 774: uint16_t working_cluster;;fat1
      +                          6.c: 775: uint16_t needed_cluster;;fat16.c: 778: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23068                           
 23069                           ;incstack = 0
 23070  002496  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23071  00249A  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23072  00249E  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23073  0024A2  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23074  0024A6  0E0A               	movlw	10
 23075  0024A8  D005               	goto	u10020
 23076  0024AA                     u10025:
 23077  0024AA  90D8               	bcf	status,0,c
 23078  0024AC  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23079  0024AE  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23080  0024B0  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23081  0024B2  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23082  0024B4                     u10020:
 23083  0024B4  2EE8               	decfsz	wreg,f,c
 23084  0024B6  D7F9               	goto	u10025
 23085  0024B8  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23086  0024BC  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23087                           
 23088                           ;fat16.c: 781: if((*cluster_number) > needed_cluster)
 23089  0024C0  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23090  0024C4  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23091  0024C8  50DE               	movf	postinc2,w,c
 23092  0024CA  0100               	movlb	0	; () banked
 23093  0024CC  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23094  0024CE  50DE               	movf	postinc2,w,c
 23095  0024D0  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23096  0024D2  B0D8               	btfsc	status,0,c
 23097  0024D4  D002               	goto	l2067
 23098                           
 23099                           ; BSR set to: 0
 23100                           ;fat16.c: 782: {;fat16.c: 783: return 0xFF;
 23101  0024D6  0EFF               	movlw	255
 23102                           
 23103                           ; BSR set to: 0
 23104  0024D8  0012               	return	
 23105  0024DA                     l2067:
 23106                           
 23107                           ; BSR set to: 0
 23108                           ;fat16.c: 784: };fat16.c: 787: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23109                           
 23110                           ; BSR set to: 0
 23111  0024DA  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23112  0024DE  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23113  0024E2  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23114  0024E6  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23115  0024EA  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23116  0024EE  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23117  0024F2  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23118  0024F6  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23119  0024FA  1E50               	comf	??_fat_read_from_file_fast,f,c
 23120  0024FC  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23121  0024FE  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23122  002500  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23123  002502  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23124  002504  2450               	addwf	??_fat_read_from_file_fast,w,c
 23125  002506  6E3A               	movwf	__find_nth_cluster@n,c
 23126  002508  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23127  00250A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23128  00250C  6E3B               	movwf	__find_nth_cluster@n+1,c
 23129  00250E  EC12  F034         	call	__find_nth_cluster	;wreg free
 23130  002512  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23131  002516  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23132  00251A  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23133  00251E  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23134                           
 23135                           ;fat16.c: 790: (*cluster_number) = needed_cluster;
 23136  002522  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23137  002526  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23138  00252A  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23139  00252E  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23140                           
 23141                           ;fat16.c: 794: working_cluster = (*cluster);
 23142  002532  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23143  002536  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23144  00253A  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23145  00253E  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23146                           
 23147                           ;fat16.c: 797: position = (needed_cluster << 9);
 23148  002542  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23149  002546  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23150  00254A  0E09               	movlw	9
 23151  00254C                     u10045:
 23152  00254C  90D8               	bcf	status,0,c
 23153  00254E  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23154  002550  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23155  002552  2EE8               	decfsz	wreg,f,c
 23156  002554  D7FB               	goto	u10045
 23157  002556  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23158  00255A  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23159  00255E  0100               	movlb	0	; () banked
 23160  002560  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23161  002562  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;fat16.c: 798: offset = start_byte - position;
 23165  002564  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23166  002568  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23167  00256C  1E50               	comf	??_fat_read_from_file_fast,f,c
 23168  00256E  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23169  002570  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23170  002572  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23171  002574  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23172  002576  2450               	addwf	??_fat_read_from_file_fast,w,c
 23173  002578  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23174  00257A  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23175  00257C  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23176  00257E  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23177                           
 23178                           ; BSR set to: 0
 23179                           ;fat16.c: 801: position = 0;
 23180  002580  0E00               	movlw	0
 23181  002582  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23182  002584  0E00               	movlw	0
 23183  002586  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23184  002588  0E00               	movlw	0
 23185  00258A  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23186  00258C  0E00               	movlw	0
 23187  00258E  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23188                           
 23189                           ;fat16.c: 802: while(position < length)
 23190  002590  D089               	goto	l2069
 23191  002592                     
 23192                           ; BSR set to: 0
 23193                           ;fat16.c: 803: {;fat16.c: 805: if(offset==512)
 23194                           
 23195                           ; BSR set to: 0
 23196  002592  0E02               	movlw	2
 23197  002594  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23198  002596  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23199  002598  A4D8               	btfss	status,2,c
 23200  00259A  D00F               	goto	l2071
 23201                           
 23202                           ; BSR set to: 0
 23203                           ;fat16.c: 806: {;fat16.c: 808: working_cluster = _read_fat(working_cluster);
 23204  00259C  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23205  0025A0  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23206  0025A4  ECD3  F03D         	call	__read_fat	;wreg free
 23207  0025A8  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23208  0025AC  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23209                           
 23210                           ;fat16.c: 809: offset = 0;
 23211  0025B0  0E00               	movlw	0
 23212  0025B2  0100               	movlb	0	; () banked
 23213  0025B4  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23214  0025B6  0E00               	movlw	0
 23215  0025B8  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23216  0025BA                     l2071:
 23217                           
 23218                           ; BSR set to: 0
 23219                           ;fat16.c: 810: };fat16.c: 813: sector = _data_sector_from_cluster(working_cluster);
 23220                           
 23221                           ; BSR set to: 0
 23222  0025BA  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23223  0025BE  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23224  0025C2  ECDB  F044         	call	__data_sector_from_cluster	;wreg free
 23225  0025C6  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23226  0025CA  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23227                           
 23228                           ;fat16.c: 816: read_length = 512 - offset;
 23229  0025CE  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23230  0025D2  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23231  0025D6  1E50               	comf	??_fat_read_from_file_fast,f,c
 23232  0025D8  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23233  0025DA  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23234  0025DC  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23235  0025DE  0E00               	movlw	0
 23236  0025E0  2450               	addwf	??_fat_read_from_file_fast,w,c
 23237  0025E2  0100               	movlb	0	; () banked
 23238  0025E4  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23239  0025E6  0E02               	movlw	2
 23240  0025E8  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23241  0025EA  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23242                           
 23243                           ; BSR set to: 0
 23244                           ;fat16.c: 817: if(read_length > (length-position))
 23245  0025EC  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23246  0025EE  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23247  0025F0  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23248  0025F2  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23249  0025F4  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23250  0025F6  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23251  0025F8  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23252  0025FC  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23253  002600  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23254  002604  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23255  002608  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23256  00260A  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23257  00260C  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23258  00260E  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23259  002610  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23260  002612  0E00               	movlw	0
 23261  002614  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23262  002616  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23263  002618  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23264  00261A  5046               	movf	fat_read_from_file_fast@length,w,c
 23265  00261C  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23266  00261E  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23267  002620  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23268  002622  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23269  002624  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23270  002626  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23271  002628  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23272  00262A  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23273  00262C  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23274  00262E  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23275  002630  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23276  002632  5050               	movf	??_fat_read_from_file_fast,w,c
 23277  002634  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23278  002636  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23279  002638  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23280  00263A  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23281  00263C  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23282  00263E  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23283  002640  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23284  002642  B0D8               	btfsc	status,0,c
 23285  002644  D00E               	goto	l2072
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;fat16.c: 818: {;fat16.c: 820: read_length = length - position;
 23289  002646  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23290  00264A  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23291  00264E  1E50               	comf	??_fat_read_from_file_fast,f,c
 23292  002650  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23293  002652  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23294  002654  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23295  002656  5046               	movf	fat_read_from_file_fast@length,w,c
 23296  002658  2450               	addwf	??_fat_read_from_file_fast,w,c
 23297  00265A  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23298  00265C  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23299  00265E  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23300  002660  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23301  002662                     l2072:
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;fat16.c: 821: };fat16.c: 824: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23305                           
 23306                           ; BSR set to: 0
 23307  002662  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23308  002666  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23309  00266A  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23310  00266E  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23311  002672  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23312  002676  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23313  00267A  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23314  00267C  244A               	addwf	fat_read_from_file_fast@data,w,c
 23315  00267E  6E2E               	movwf	flash_partial_read@data,c
 23316  002680  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23317  002682  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23318  002684  6E2F               	movwf	flash_partial_read@data+1,c
 23319  002686  EC12  F042         	call	_flash_partial_read	;wreg free
 23320                           
 23321                           ;fat16.c: 827: position += read_length;
 23322  00268A  0100               	movlb	0	; () banked
 23323  00268C  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23324  00268E  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23325  002690  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23326  002692  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23327  002694  0E00               	movlw	0
 23328  002696  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23329  002698  0E00               	movlw	0
 23330  00269A  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23331                           
 23332                           ; BSR set to: 0
 23333                           ;fat16.c: 828: offset += read_length;
 23334  00269C  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23335  00269E  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23336  0026A0  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23337  0026A2  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23338  0026A4                     l2069:
 23339                           
 23340                           ; BSR set to: 0
 23341                           
 23342                           ; BSR set to: 0
 23343  0026A4  5046               	movf	fat_read_from_file_fast@length,w,c
 23344  0026A6  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23345  0026A8  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23346  0026AA  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23347  0026AC  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23348  0026AE  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23349  0026B0  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23350  0026B2  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23351  0026B4  A0D8               	btfss	status,0,c
 23352  0026B6  D76D               	goto	l2070
 23353                           
 23354                           ; BSR set to: 0
 23355                           ;fat16.c: 829: };fat16.c: 832: return 0x00;
 23356                           
 23357                           ; BSR set to: 0
 23358  0026B8  0E00               	movlw	0
 23359  0026BA  0012               	return	
 23360  0026BC                     __end_of_fat_read_from_file_fast:
 23361                           	opt stack 0
 23362                           tosu	equ	0xFFF
 23363                           tosh	equ	0xFFE
 23364                           tosl	equ	0xFFD
 23365                           pclath	equ	0xFFA
 23366                           tblptru	equ	0xFF8
 23367                           tblptrh	equ	0xFF7
 23368                           tblptrl	equ	0xFF6
 23369                           tablat	equ	0xFF5
 23370                           prodh	equ	0xFF4
 23371                           prodl	equ	0xFF3
 23372                           intcon	equ	0xFF2
 23373                           intcon2	equ	0xFF1
 23374                           intcon3	equ	0xFF0
 23375                           indf0	equ	0xFEF
 23376                           postinc0	equ	0xFEE
 23377                           fsr0h	equ	0xFEA
 23378                           fsr0l	equ	0xFE9
 23379                           wreg	equ	0xFE8
 23380                           indf1	equ	0xFE7
 23381                           postdec1	equ	0xFE5
 23382                           plusw1	equ	0xFE3
 23383                           fsr1h	equ	0xFE2
 23384                           fsr1l	equ	0xFE1
 23385                           indf2	equ	0xFDF
 23386                           postinc2	equ	0xFDE
 23387                           postdec2	equ	0xFDD
 23388                           plusw2	equ	0xFDB
 23389                           fsr2h	equ	0xFDA
 23390                           fsr2l	equ	0xFD9
 23391                           status	equ	0xFD8
 23392                           
 23393 ;; *************** function __fill_buffer_get_status *****************
 23394 ;; Defined at:
 23395 ;;		line 192 in file "api.c"
 23396 ;; Parameters:    Size  Location     Type
 23397 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23398 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23399 ;; Auto vars:     Size  Location     Type
 23400 ;;		None
 23401 ;; Return value:  Size  Location     Type
 23402 ;;                  1    wreg      void 
 23403 ;; Registers used:
 23404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23405 ;; Tracked objects:
 23406 ;;		On entry : 0/0
 23407 ;;		On exit  : 0/0
 23408 ;;		Unchanged: 0/0
 23409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23414 ;;Total ram usage:        2 bytes
 23415 ;; Hardware stack levels used:    1
 23416 ;; Hardware stack levels required when called:    4
 23417 ;; This function calls:
 23418 ;;		_flash_is_busy
 23419 ;;		_ui_get_status
 23420 ;; This function is called by:
 23421 ;;		_api_prepare
 23422 ;; This function uses a non-reentrant model
 23423 ;;
 23424                           
 23425                           	psect	text106
 23426  005408                     __ptext106:
 23427                           	opt stack 0
 23428  005408                     __fill_buffer_get_status:
 23429                           	opt stack 25
 23430                           
 23431                           ;api.c: 195: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;incstack = 0
 23435  005408  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23436  00540C  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23437  005410  0E10               	movlw	16
 23438  005412  6EDF               	movwf	indf2,c
 23439                           
 23440                           ;api.c: 198: outBuffer[1] = 0xC125 >> 8;
 23441  005414  EE20 F001          	lfsr	2,1
 23442  005418  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23443  00541A  26D9               	addwf	fsr2l,f,c
 23444  00541C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23445  00541E  22DA               	addwfc	fsr2h,f,c
 23446  005420  0EC1               	movlw	193
 23447  005422  6EDF               	movwf	indf2,c
 23448                           
 23449                           ;api.c: 199: outBuffer[2] = (uint8_t) 0xC125;
 23450  005424  EE20 F002          	lfsr	2,2
 23451  005428  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23452  00542A  26D9               	addwf	fsr2l,f,c
 23453  00542C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23454  00542E  22DA               	addwfc	fsr2h,f,c
 23455  005430  0E25               	movlw	37
 23456  005432  6EDF               	movwf	indf2,c
 23457                           
 23458                           ;api.c: 203: outBuffer[3] = (uint8_t) flash_is_busy();
 23459  005434  EE20 F003          	lfsr	2,3
 23460  005438  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23461  00543A  26D9               	addwf	fsr2l,f,c
 23462  00543C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23463  00543E  22DA               	addwfc	fsr2h,f,c
 23464  005440  EC78  F044         	call	_flash_is_busy	;wreg free
 23465  005444  6EDF               	movwf	indf2,c
 23466                           
 23467                           ;api.c: 206: outBuffer[4] = 0x00;
 23468  005446  EE20 F004          	lfsr	2,4
 23469  00544A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23470  00544C  26D9               	addwf	fsr2l,f,c
 23471  00544E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23472  005450  22DA               	addwfc	fsr2h,f,c
 23473  005452  0E00               	movlw	0
 23474  005454  6EDF               	movwf	indf2,c
 23475                           
 23476                           ;api.c: 207: outBuffer[5] = 0x02;
 23477  005456  EE20 F005          	lfsr	2,5
 23478  00545A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23479  00545C  26D9               	addwf	fsr2l,f,c
 23480  00545E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23481  005460  22DA               	addwfc	fsr2h,f,c
 23482  005462  0E02               	movlw	2
 23483  005464  6EDF               	movwf	indf2,c
 23484                           
 23485                           ;api.c: 208: outBuffer[6] = 0x02;
 23486  005466  EE20 F006          	lfsr	2,6
 23487  00546A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23488  00546C  26D9               	addwf	fsr2l,f,c
 23489  00546E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23490  005470  22DA               	addwfc	fsr2h,f,c
 23491  005472  0E02               	movlw	2
 23492  005474  6EDF               	movwf	indf2,c
 23493                           
 23494                           ;api.c: 211: outBuffer[7] = ui_get_status();
 23495  005476  EE20 F007          	lfsr	2,7
 23496  00547A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23497  00547C  26D9               	addwf	fsr2l,f,c
 23498  00547E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23499  005480  22DA               	addwfc	fsr2h,f,c
 23500  005482  EC46  F045         	call	_ui_get_status	;wreg free
 23501  005486  6EDF               	movwf	indf2,c
 23502                           
 23503                           ;api.c: 214: outBuffer[8] = os.encoderCount;
 23504  005488  EE20 F008          	lfsr	2,8
 23505  00548C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23506  00548E  26D9               	addwf	fsr2l,f,c
 23507  005490  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23508  005492  22DA               	addwfc	fsr2h,f,c
 23509  005494  C0C5  FFDF         	movff	_os,indf2	;volatile
 23510                           
 23511                           ;api.c: 215: outBuffer[9] = os.buttonCount;
 23512  005498  EE20 F009          	lfsr	2,9
 23513  00549C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23514  00549E  26D9               	addwf	fsr2l,f,c
 23515  0054A0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23516  0054A2  22DA               	addwfc	fsr2h,f,c
 23517  0054A4  C0C6  FFDF         	movff	_os+1,indf2	;volatile
 23518                           
 23519                           ;api.c: 216: outBuffer[10] = os.timeSlot;
 23520  0054A8  EE20 F00A          	lfsr	2,10
 23521  0054AC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23522  0054AE  26D9               	addwf	fsr2l,f,c
 23523  0054B0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23524  0054B2  22DA               	addwfc	fsr2h,f,c
 23525  0054B4  C0C7  FFDF         	movff	_os+2,indf2	;volatile
 23526                           
 23527                           ;api.c: 217: outBuffer[11] = os.done;
 23528  0054B8  EE20 F00B          	lfsr	2,11
 23529  0054BC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23530  0054BE  26D9               	addwf	fsr2l,f,c
 23531  0054C0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23532  0054C2  22DA               	addwfc	fsr2h,f,c
 23533  0054C4  C0C8  FFDF         	movff	_os+3,indf2	;volatile
 23534                           
 23535                           ;api.c: 218: outBuffer[12] = os.bootloader_mode;
 23536  0054C8  EE20 F00C          	lfsr	2,12
 23537  0054CC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23538  0054CE  26D9               	addwf	fsr2l,f,c
 23539  0054D0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23540  0054D2  22DA               	addwfc	fsr2h,f,c
 23541  0054D4  C0C9  FFDF         	movff	_os+4,indf2	;volatile
 23542                           
 23543                           ;api.c: 219: outBuffer[13] = os.display_mode;
 23544  0054D8  EE20 F00D          	lfsr	2,13
 23545  0054DC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23546  0054DE  26D9               	addwf	fsr2l,f,c
 23547  0054E0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23548  0054E2  22DA               	addwfc	fsr2h,f,c
 23549  0054E4  C0CA  FFDF         	movff	_os+5,indf2	;volatile
 23550  0054E8  0012               	return		;funcret
 23551  0054EA                     __end_of__fill_buffer_get_status:
 23552                           	opt stack 0
 23553                           tosu	equ	0xFFF
 23554                           tosh	equ	0xFFE
 23555                           tosl	equ	0xFFD
 23556                           pclath	equ	0xFFA
 23557                           tblptru	equ	0xFF8
 23558                           tblptrh	equ	0xFF7
 23559                           tblptrl	equ	0xFF6
 23560                           tablat	equ	0xFF5
 23561                           prodh	equ	0xFF4
 23562                           prodl	equ	0xFF3
 23563                           intcon	equ	0xFF2
 23564                           intcon2	equ	0xFF1
 23565                           intcon3	equ	0xFF0
 23566                           indf0	equ	0xFEF
 23567                           postinc0	equ	0xFEE
 23568                           fsr0h	equ	0xFEA
 23569                           fsr0l	equ	0xFE9
 23570                           wreg	equ	0xFE8
 23571                           indf1	equ	0xFE7
 23572                           postdec1	equ	0xFE5
 23573                           plusw1	equ	0xFE3
 23574                           fsr1h	equ	0xFE2
 23575                           fsr1l	equ	0xFE1
 23576                           indf2	equ	0xFDF
 23577                           postinc2	equ	0xFDE
 23578                           postdec2	equ	0xFDD
 23579                           plusw2	equ	0xFDB
 23580                           fsr2h	equ	0xFDA
 23581                           fsr2l	equ	0xFD9
 23582                           status	equ	0xFD8
 23583                           
 23584 ;; *************** function _flash_is_busy *****************
 23585 ;; Defined at:
 23586 ;;		line 354 in file "flash.c"
 23587 ;; Parameters:    Size  Location     Type
 23588 ;;		None
 23589 ;; Auto vars:     Size  Location     Type
 23590 ;;  result          1   19[COMRAM] unsigned char 
 23591 ;; Return value:  Size  Location     Type
 23592 ;;                  1    wreg      unsigned char 
 23593 ;; Registers used:
 23594 ;;		wreg, status,2, status,0, cstack
 23595 ;; Tracked objects:
 23596 ;;		On entry : 0/0
 23597 ;;		On exit  : 0/0
 23598 ;;		Unchanged: 0/0
 23599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23604 ;;Total ram usage:        1 bytes
 23605 ;; Hardware stack levels used:    1
 23606 ;; Hardware stack levels required when called:    3
 23607 ;; This function calls:
 23608 ;;		__flash_is_busy
 23609 ;;		_spi_set_configuration
 23610 ;; This function is called by:
 23611 ;;		__fill_buffer_get_status
 23612 ;; This function uses a non-reentrant model
 23613 ;;
 23614                           
 23615                           	psect	text107
 23616  0088F0                     __ptext107:
 23617                           	opt stack 0
 23618  0088F0                     _flash_is_busy:
 23619                           	opt stack 25
 23620                           
 23621                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 23622                           
 23623                           ;incstack = 0
 23624  0088F0  0E00               	movlw	0
 23625  0088F2  EC43  F023         	call	_spi_set_configuration
 23626                           
 23627                           ;flash.c: 362: result = _flash_is_busy();
 23628  0088F6  ECD5  F043         	call	__flash_is_busy	;wreg free
 23629  0088FA  6E14               	movwf	flash_is_busy@result,c
 23630                           
 23631                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23632  0088FC  0E01               	movlw	1
 23633  0088FE  EC43  F023         	call	_spi_set_configuration
 23634                           
 23635                           ;flash.c: 368: return result;
 23636  008902  5014               	movf	flash_is_busy@result,w,c
 23637  008904  0012               	return	
 23638  008906                     __end_of_flash_is_busy:
 23639                           	opt stack 0
 23640                           tosu	equ	0xFFF
 23641                           tosh	equ	0xFFE
 23642                           tosl	equ	0xFFD
 23643                           pclath	equ	0xFFA
 23644                           tblptru	equ	0xFF8
 23645                           tblptrh	equ	0xFF7
 23646                           tblptrl	equ	0xFF6
 23647                           tablat	equ	0xFF5
 23648                           prodh	equ	0xFF4
 23649                           prodl	equ	0xFF3
 23650                           intcon	equ	0xFF2
 23651                           intcon2	equ	0xFF1
 23652                           intcon3	equ	0xFF0
 23653                           indf0	equ	0xFEF
 23654                           postinc0	equ	0xFEE
 23655                           fsr0h	equ	0xFEA
 23656                           fsr0l	equ	0xFE9
 23657                           wreg	equ	0xFE8
 23658                           indf1	equ	0xFE7
 23659                           postdec1	equ	0xFE5
 23660                           plusw1	equ	0xFE3
 23661                           fsr1h	equ	0xFE2
 23662                           fsr1l	equ	0xFE1
 23663                           indf2	equ	0xFDF
 23664                           postinc2	equ	0xFDE
 23665                           postdec2	equ	0xFDD
 23666                           plusw2	equ	0xFDB
 23667                           fsr2h	equ	0xFDA
 23668                           fsr2l	equ	0xFD9
 23669                           status	equ	0xFD8
 23670                           
 23671 ;; *************** function __fill_buffer_get_file_details *****************
 23672 ;; Defined at:
 23673 ;;		line 345 in file "api.c"
 23674 ;; Parameters:    Size  Location     Type
 23675 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 23676 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23677 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 23678 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23679 ;; Auto vars:     Size  Location     Type
 23680 ;;  file_number     1   60[COMRAM] unsigned char 
 23681 ;; Return value:  Size  Location     Type
 23682 ;;                  1    wreg      void 
 23683 ;; Registers used:
 23684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23685 ;; Tracked objects:
 23686 ;;		On entry : 0/0
 23687 ;;		On exit  : 0/0
 23688 ;;		Unchanged: 0/0
 23689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23694 ;;Total ram usage:        6 bytes
 23695 ;; Hardware stack levels used:    1
 23696 ;; Hardware stack levels required when called:    6
 23697 ;; This function calls:
 23698 ;;		_fat_get_file_information
 23699 ;; This function is called by:
 23700 ;;		_api_prepare
 23701 ;; This function uses a non-reentrant model
 23702 ;;
 23703                           
 23704                           	psect	text108
 23705  007162                     __ptext108:
 23706                           	opt stack 0
 23707  007162                     __fill_buffer_get_file_details:
 23708                           	opt stack 23
 23709                           
 23710                           ;api.c: 347: uint8_t file_number = inBuffer[1];
 23711                           
 23712                           ;incstack = 0
 23713  007162  EE20 F001          	lfsr	2,1
 23714  007166  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 23715  007168  26D9               	addwf	fsr2l,f,c
 23716  00716A  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 23717  00716C  22DA               	addwfc	fsr2h,f,c
 23718  00716E  50DF               	movf	indf2,w,c
 23719  007170  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 23720                           
 23721                           ;api.c: 350: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 23722  007172  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 23723  007176  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 23724  00717A  0E80               	movlw	128
 23725  00717C  6EDF               	movwf	indf2,c
 23726                           
 23727                           ;api.c: 353: outBuffer[1] = 0xC125 >> 8;
 23728  00717E  EE20 F001          	lfsr	2,1
 23729  007182  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23730  007184  26D9               	addwf	fsr2l,f,c
 23731  007186  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23732  007188  22DA               	addwfc	fsr2h,f,c
 23733  00718A  0EC1               	movlw	193
 23734  00718C  6EDF               	movwf	indf2,c
 23735                           
 23736                           ;api.c: 354: outBuffer[2] = (uint8_t) 0xC125;
 23737  00718E  EE20 F002          	lfsr	2,2
 23738  007192  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23739  007194  26D9               	addwf	fsr2l,f,c
 23740  007196  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23741  007198  22DA               	addwfc	fsr2h,f,c
 23742  00719A  0E25               	movlw	37
 23743  00719C  6EDF               	movwf	indf2,c
 23744                           
 23745                           ;api.c: 357: outBuffer[3] = file_number;
 23746  00719E  EE20 F003          	lfsr	2,3
 23747  0071A2  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23748  0071A4  26D9               	addwf	fsr2l,f,c
 23749  0071A6  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23750  0071A8  22DA               	addwfc	fsr2h,f,c
 23751  0071AA  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 23752                           
 23753                           ;api.c: 360: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 23754  0071AE  0E05               	movlw	5
 23755  0071B0  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 23756  0071B2  6E30               	movwf	fat_get_file_information@data,c
 23757  0071B4  0E00               	movlw	0
 23758  0071B6  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 23759  0071B8  6E31               	movwf	fat_get_file_information@data+1,c
 23760  0071BA  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 23761  0071BC  ECEA  F038         	call	_fat_get_file_information
 23762  0071C0  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 23763  0071C2  EE20 F004          	lfsr	2,4
 23764  0071C6  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23765  0071C8  26D9               	addwf	fsr2l,f,c
 23766  0071CA  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23767  0071CC  22DA               	addwfc	fsr2h,f,c
 23768  0071CE  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 23769  0071D2  0012               	return		;funcret
 23770  0071D4                     __end_of__fill_buffer_get_file_details:
 23771                           	opt stack 0
 23772                           tosu	equ	0xFFF
 23773                           tosh	equ	0xFFE
 23774                           tosl	equ	0xFFD
 23775                           pclath	equ	0xFFA
 23776                           tblptru	equ	0xFF8
 23777                           tblptrh	equ	0xFF7
 23778                           tblptrl	equ	0xFF6
 23779                           tablat	equ	0xFF5
 23780                           prodh	equ	0xFF4
 23781                           prodl	equ	0xFF3
 23782                           intcon	equ	0xFF2
 23783                           intcon2	equ	0xFF1
 23784                           intcon3	equ	0xFF0
 23785                           indf0	equ	0xFEF
 23786                           postinc0	equ	0xFEE
 23787                           fsr0h	equ	0xFEA
 23788                           fsr0l	equ	0xFE9
 23789                           wreg	equ	0xFE8
 23790                           indf1	equ	0xFE7
 23791                           postdec1	equ	0xFE5
 23792                           plusw1	equ	0xFE3
 23793                           fsr1h	equ	0xFE2
 23794                           fsr1l	equ	0xFE1
 23795                           indf2	equ	0xFDF
 23796                           postinc2	equ	0xFDE
 23797                           postdec2	equ	0xFDD
 23798                           plusw2	equ	0xFDB
 23799                           fsr2h	equ	0xFDA
 23800                           fsr2l	equ	0xFD9
 23801                           status	equ	0xFD8
 23802                           
 23803 ;; *************** function __fill_buffer_get_display *****************
 23804 ;; Defined at:
 23805 ;;		line 223 in file "api.c"
 23806 ;; Parameters:    Size  Location     Type
 23807 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 23808 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23809 ;;  secondHalf      1    6[COMRAM] unsigned char 
 23810 ;; Auto vars:     Size  Location     Type
 23811 ;;  position        1   15[COMRAM] unsigned char 
 23812 ;;  start_line      1   14[COMRAM] unsigned char 
 23813 ;;  line            1   13[COMRAM] unsigned char 
 23814 ;;  cntr            1   12[COMRAM] unsigned char 
 23815 ;; Return value:  Size  Location     Type
 23816 ;;                  1    wreg      void 
 23817 ;; Registers used:
 23818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23819 ;; Tracked objects:
 23820 ;;		On entry : 0/0
 23821 ;;		On exit  : 0/0
 23822 ;;		Unchanged: 0/0
 23823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23824 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23826 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23827 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23828 ;;Total ram usage:       12 bytes
 23829 ;; Hardware stack levels used:    1
 23830 ;; Hardware stack levels required when called:    1
 23831 ;; This function calls:
 23832 ;;		_display_get_character
 23833 ;; This function is called by:
 23834 ;;		_api_prepare
 23835 ;; This function uses a non-reentrant model
 23836 ;;
 23837                           
 23838                           	psect	text109
 23839  00604C                     __ptext109:
 23840                           	opt stack 0
 23841  00604C                     __fill_buffer_get_display:
 23842                           	opt stack 28
 23843                           
 23844                           ;api.c: 225: uint8_t cntr;;api.c: 226: uint8_t line;;api.c: 227: uint8_t start_line;;api
      +                          .c: 228: uint8_t position;;api.c: 231: if(secondHalf)
 23845                           
 23846                           ;incstack = 0
 23847  00604C  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 23848  00604E  B4D8               	btfsc	status,2,c
 23849  006050  D006               	goto	l2681
 23850                           
 23851                           ;api.c: 232: {;api.c: 233: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 23852  006052  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 23853  006056  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 23854  00605A  0E12               	movlw	18
 23855  00605C  D005               	goto	L31
 23856  00605E                     l2681:
 23857                           
 23858                           ;api.c: 235: else;api.c: 236: {;api.c: 237: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 23859  00605E  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 23860  006062  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 23861  006066  0E11               	movlw	17
 23862  006068                     L31:
 23863  006068  6EDF               	movwf	indf2,c
 23864                           
 23865                           ;api.c: 238: };api.c: 241: outBuffer[1] = 0xC125 >> 8;
 23866  00606A  EE20 F001          	lfsr	2,1
 23867  00606E  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 23868  006070  26D9               	addwf	fsr2l,f,c
 23869  006072  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 23870  006074  22DA               	addwfc	fsr2h,f,c
 23871  006076  0EC1               	movlw	193
 23872  006078  6EDF               	movwf	indf2,c
 23873                           
 23874                           ;api.c: 242: outBuffer[2] = (uint8_t) 0xC125;
 23875  00607A  EE20 F002          	lfsr	2,2
 23876  00607E  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 23877  006080  26D9               	addwf	fsr2l,f,c
 23878  006082  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 23879  006084  22DA               	addwfc	fsr2h,f,c
 23880  006086  0E25               	movlw	37
 23881  006088  6EDF               	movwf	indf2,c
 23882                           
 23883                           ;api.c: 245: cntr = 3;
 23884  00608A  0E03               	movlw	3
 23885  00608C  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 23886                           
 23887                           ;api.c: 246: if(secondHalf)
 23888  00608E  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 23889  006090  B4D8               	btfsc	status,2,c
 23890  006092  D002               	goto	l2683
 23891                           
 23892                           ;api.c: 247: {;api.c: 248: start_line = 2;
 23893  006094  0E02               	movlw	2
 23894  006096  D001               	goto	L32
 23895  006098                     l2683:
 23896                           
 23897                           ;api.c: 250: else;api.c: 251: {;api.c: 252: start_line = 0;
 23898  006098  0E00               	movlw	0
 23899  00609A                     L32:
 23900  00609A  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 23901                           
 23902                           ;api.c: 253: };api.c: 254: for(line=start_line; line<start_line+2; ++line)
 23903  00609C  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 23904  0060A0  D01A               	goto	l2685
 23905  0060A2                     
 23906                           ;api.c: 255: {;api.c: 256: for(position=0; position<20; ++position)
 23907  0060A2  0E00               	movlw	0
 23908  0060A4  6E10               	movwf	__fill_buffer_get_display@position,c
 23909  0060A6                     l14221:
 23910  0060A6  0E13               	movlw	19
 23911  0060A8  6410               	cpfsgt	__fill_buffer_get_display@position,c
 23912  0060AA  D001               	goto	l2687
 23913  0060AC  D013               	goto	u11330
 23914  0060AE                     l2687:
 23915                           
 23916                           ;api.c: 257: {;api.c: 258: outBuffer[cntr] = display_get_character(line, position);
 23917  0060AE  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 23918  0060B2  500E               	movf	__fill_buffer_get_display@line,w,c
 23919  0060B4  ECE1  F042         	call	_display_get_character
 23920  0060B8  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 23921  0060BA  500D               	movf	__fill_buffer_get_display@cntr,w,c
 23922  0060BC  0D01               	mullw	1
 23923  0060BE  50F3               	movf	prodl,w,c
 23924  0060C0  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 23925  0060C2  6ED9               	movwf	fsr2l,c
 23926  0060C4  50F4               	movf	prodh,w,c
 23927  0060C6  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 23928  0060C8  6EDA               	movwf	fsr2h,c
 23929  0060CA  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 23930                           
 23931                           ;api.c: 259: ++cntr;
 23932  0060CE  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 23933  0060D0  2A10               	incf	__fill_buffer_get_display@position,f,c
 23934  0060D2  D7E9               	goto	l14221
 23935  0060D4                     u11330:
 23936  0060D4  2A0E               	incf	__fill_buffer_get_display@line,f,c
 23937  0060D6                     l2685:
 23938  0060D6  500F               	movf	__fill_buffer_get_display@start_line,w,c
 23939  0060D8  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 23940  0060DA  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 23941  0060DC  0E02               	movlw	2
 23942  0060DE  2608               	addwf	??__fill_buffer_get_display,f,c
 23943  0060E0  0E00               	movlw	0
 23944  0060E2  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 23945  0060E4  500E               	movf	__fill_buffer_get_display@line,w,c
 23946  0060E6  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 23947  0060E8  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 23948  0060EA  5008               	movf	??__fill_buffer_get_display,w,c
 23949  0060EC  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 23950  0060EE  500B               	movf	??__fill_buffer_get_display+3,w,c
 23951  0060F0  0A80               	xorlw	128
 23952  0060F2  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 23953  0060F4  5009               	movf	??__fill_buffer_get_display+1,w,c
 23954  0060F6  0A80               	xorlw	128
 23955  0060F8  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 23956  0060FA  B0D8               	btfsc	status,0,c
 23957  0060FC  0012               	return	
 23958  0060FE  D7D1               	goto	l2686
 23959  006100                     __end_of__fill_buffer_get_display:
 23960                           	opt stack 0
 23961                           tosu	equ	0xFFF
 23962                           tosh	equ	0xFFE
 23963                           tosl	equ	0xFFD
 23964                           pclath	equ	0xFFA
 23965                           tblptru	equ	0xFF8
 23966                           tblptrh	equ	0xFF7
 23967                           tblptrl	equ	0xFF6
 23968                           tablat	equ	0xFF5
 23969                           prodh	equ	0xFF4
 23970                           prodl	equ	0xFF3
 23971                           intcon	equ	0xFF2
 23972                           intcon2	equ	0xFF1
 23973                           intcon3	equ	0xFF0
 23974                           indf0	equ	0xFEF
 23975                           postinc0	equ	0xFEE
 23976                           fsr0h	equ	0xFEA
 23977                           fsr0l	equ	0xFE9
 23978                           wreg	equ	0xFE8
 23979                           indf1	equ	0xFE7
 23980                           postdec1	equ	0xFE5
 23981                           plusw1	equ	0xFE3
 23982                           fsr1h	equ	0xFE2
 23983                           fsr1l	equ	0xFE1
 23984                           indf2	equ	0xFDF
 23985                           postinc2	equ	0xFDE
 23986                           postdec2	equ	0xFDD
 23987                           plusw2	equ	0xFDB
 23988                           fsr2h	equ	0xFDA
 23989                           fsr2l	equ	0xFD9
 23990                           status	equ	0xFD8
 23991                           
 23992 ;; *************** function _display_get_character *****************
 23993 ;; Defined at:
 23994 ;;		line 70 in file "display.c"
 23995 ;; Parameters:    Size  Location     Type
 23996 ;;  line            1    wreg     unsigned char 
 23997 ;;  position        1    0[COMRAM] unsigned char 
 23998 ;; Auto vars:     Size  Location     Type
 23999 ;;  line            1    3[COMRAM] unsigned char 
 24000 ;; Return value:  Size  Location     Type
 24001 ;;                  1    wreg      unsigned char 
 24002 ;; Registers used:
 24003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24004 ;; Tracked objects:
 24005 ;;		On entry : 0/0
 24006 ;;		On exit  : 0/0
 24007 ;;		Unchanged: 0/0
 24008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24013 ;;Total ram usage:        4 bytes
 24014 ;; Hardware stack levels used:    1
 24015 ;; This function calls:
 24016 ;;		Nothing
 24017 ;; This function is called by:
 24018 ;;		__fill_buffer_get_display
 24019 ;; This function uses a non-reentrant model
 24020 ;;
 24021                           
 24022                           	psect	text110
 24023  0085C2                     __ptext110:
 24024                           	opt stack 0
 24025  0085C2                     _display_get_character:
 24026                           	opt stack 28
 24027                           
 24028                           ;incstack = 0
 24029                           ;display_get_character@line stored from wreg
 24030  0085C2  6E04               	movwf	display_get_character@line,c
 24031                           
 24032                           ;display.c: 72: return display_content[line][position];
 24033  0085C4  5004               	movf	display_get_character@line,w,c
 24034  0085C6  0D14               	mullw	20
 24035  0085C8  0E00               	movlw	low _display_content
 24036  0085CA  6E02               	movwf	??_display_get_character& (0+255),c
 24037  0085CC  0E02               	movlw	high _display_content
 24038  0085CE  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24039  0085D0  50F3               	movf	prodl,w,c
 24040  0085D2  2602               	addwf	??_display_get_character,f,c
 24041  0085D4  50F4               	movf	prodh,w,c
 24042  0085D6  2203               	addwfc	??_display_get_character+1,f,c
 24043  0085D8  5001               	movf	display_get_character@position,w,c
 24044  0085DA  0D01               	mullw	1
 24045  0085DC  50F3               	movf	prodl,w,c
 24046  0085DE  2402               	addwf	??_display_get_character,w,c
 24047  0085E0  6ED9               	movwf	fsr2l,c
 24048  0085E2  50F4               	movf	prodh,w,c
 24049  0085E4  2003               	addwfc	??_display_get_character+1,w,c
 24050  0085E6  6EDA               	movwf	fsr2h,c
 24051  0085E8  50DF               	movf	indf2,w,c
 24052  0085EA  0012               	return	
 24053  0085EC                     __end_of_display_get_character:
 24054                           	opt stack 0
 24055                           tosu	equ	0xFFF
 24056                           tosh	equ	0xFFE
 24057                           tosl	equ	0xFFD
 24058                           pclath	equ	0xFFA
 24059                           tblptru	equ	0xFF8
 24060                           tblptrh	equ	0xFF7
 24061                           tblptrl	equ	0xFF6
 24062                           tablat	equ	0xFF5
 24063                           prodh	equ	0xFF4
 24064                           prodl	equ	0xFF3
 24065                           intcon	equ	0xFF2
 24066                           intcon2	equ	0xFF1
 24067                           intcon3	equ	0xFF0
 24068                           indf0	equ	0xFEF
 24069                           postinc0	equ	0xFEE
 24070                           fsr0h	equ	0xFEA
 24071                           fsr0l	equ	0xFE9
 24072                           wreg	equ	0xFE8
 24073                           indf1	equ	0xFE7
 24074                           postdec1	equ	0xFE5
 24075                           plusw1	equ	0xFE3
 24076                           fsr1h	equ	0xFE2
 24077                           fsr1l	equ	0xFE1
 24078                           indf2	equ	0xFDF
 24079                           postinc2	equ	0xFDE
 24080                           postdec2	equ	0xFDD
 24081                           plusw2	equ	0xFDB
 24082                           fsr2h	equ	0xFDA
 24083                           fsr2l	equ	0xFD9
 24084                           status	equ	0xFD8
 24085                           
 24086 ;; *************** function __fill_buffer_get_configuration *****************
 24087 ;; Defined at:
 24088 ;;		line 324 in file "api.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 24091 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24092 ;; Auto vars:     Size  Location     Type
 24093 ;;		None
 24094 ;; Return value:  Size  Location     Type
 24095 ;;                  1    wreg      void 
 24096 ;; Registers used:
 24097 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24098 ;; Tracked objects:
 24099 ;;		On entry : 0/0
 24100 ;;		On exit  : 0/0
 24101 ;;		Unchanged: 0/0
 24102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24107 ;;Total ram usage:        2 bytes
 24108 ;; Hardware stack levels used:    1
 24109 ;; This function calls:
 24110 ;;		Nothing
 24111 ;; This function is called by:
 24112 ;;		_api_prepare
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text111
 24117  006786                     __ptext111:
 24118                           	opt stack 0
 24119  006786                     __fill_buffer_get_configuration:
 24120                           	opt stack 29
 24121                           
 24122                           ;api.c: 327: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24123                           
 24124                           ;incstack = 0
 24125  006786  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 24126  00678A  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 24127  00678E  0E10               	movlw	16
 24128  006790  6EDF               	movwf	indf2,c
 24129                           
 24130                           ;api.c: 330: outBuffer[1] = 0xC125 >> 8;
 24131  006792  EE20 F001          	lfsr	2,1
 24132  006796  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24133  006798  26D9               	addwf	fsr2l,f,c
 24134  00679A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24135  00679C  22DA               	addwfc	fsr2h,f,c
 24136  00679E  0EC1               	movlw	193
 24137  0067A0  6EDF               	movwf	indf2,c
 24138                           
 24139                           ;api.c: 331: outBuffer[2] = (uint8_t) 0xC125;
 24140  0067A2  EE20 F002          	lfsr	2,2
 24141  0067A6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24142  0067A8  26D9               	addwf	fsr2l,f,c
 24143  0067AA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24144  0067AC  22DA               	addwfc	fsr2h,f,c
 24145  0067AE  0E25               	movlw	37
 24146  0067B0  6EDF               	movwf	indf2,c
 24147                           
 24148                           ;api.c: 334: outBuffer[3] = communicationSettings.spiMode;
 24149  0067B2  EE20 F003          	lfsr	2,3
 24150  0067B6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24151  0067B8  26D9               	addwf	fsr2l,f,c
 24152  0067BA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24153  0067BC  22DA               	addwfc	fsr2h,f,c
 24154  0067BE  C139  FFDF         	movff	_communicationSettings,indf2
 24155                           
 24156                           ;api.c: 335: outBuffer[4] = communicationSettings.spiFrequency;
 24157  0067C2  EE20 F004          	lfsr	2,4
 24158  0067C6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24159  0067C8  26D9               	addwf	fsr2l,f,c
 24160  0067CA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24161  0067CC  22DA               	addwfc	fsr2h,f,c
 24162  0067CE  C13A  FFDF         	movff	_communicationSettings+1,indf2
 24163                           
 24164                           ;api.c: 336: outBuffer[5] = communicationSettings.spiPolarity;
 24165  0067D2  EE20 F005          	lfsr	2,5
 24166  0067D6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24167  0067D8  26D9               	addwf	fsr2l,f,c
 24168  0067DA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24169  0067DC  22DA               	addwfc	fsr2h,f,c
 24170  0067DE  C13B  FFDF         	movff	_communicationSettings+2,indf2
 24171                           
 24172                           ;api.c: 339: outBuffer[6] = communicationSettings.i2cMode;
 24173  0067E2  EE20 F006          	lfsr	2,6
 24174  0067E6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24175  0067E8  26D9               	addwf	fsr2l,f,c
 24176  0067EA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24177  0067EC  22DA               	addwfc	fsr2h,f,c
 24178  0067EE  C13C  FFDF         	movff	_communicationSettings+3,indf2
 24179                           
 24180                           ;api.c: 340: outBuffer[7] = communicationSettings.i2cFrequency;
 24181  0067F2  EE20 F007          	lfsr	2,7
 24182  0067F6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24183  0067F8  26D9               	addwf	fsr2l,f,c
 24184  0067FA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24185  0067FC  22DA               	addwfc	fsr2h,f,c
 24186  0067FE  C13D  FFDF         	movff	_communicationSettings+4,indf2
 24187                           
 24188                           ;api.c: 341: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 24189  006802  EE20 F008          	lfsr	2,8
 24190  006806  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24191  006808  26D9               	addwf	fsr2l,f,c
 24192  00680A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24193  00680C  22DA               	addwfc	fsr2h,f,c
 24194  00680E  C13E  FFDF         	movff	_communicationSettings+5,indf2
 24195                           
 24196                           ;api.c: 342: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 24197  006812  EE20 F009          	lfsr	2,9
 24198  006816  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24199  006818  26D9               	addwf	fsr2l,f,c
 24200  00681A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24201  00681C  22DA               	addwfc	fsr2h,f,c
 24202  00681E  C13F  FFDF         	movff	_communicationSettings+6,indf2
 24203  006822  0012               	return		;funcret
 24204  006824                     __end_of__fill_buffer_get_configuration:
 24205                           	opt stack 0
 24206                           tosu	equ	0xFFF
 24207                           tosh	equ	0xFFE
 24208                           tosl	equ	0xFFD
 24209                           pclath	equ	0xFFA
 24210                           tblptru	equ	0xFF8
 24211                           tblptrh	equ	0xFF7
 24212                           tblptrl	equ	0xFF6
 24213                           tablat	equ	0xFF5
 24214                           prodh	equ	0xFF4
 24215                           prodl	equ	0xFF3
 24216                           intcon	equ	0xFF2
 24217                           intcon2	equ	0xFF1
 24218                           intcon3	equ	0xFF0
 24219                           indf0	equ	0xFEF
 24220                           postinc0	equ	0xFEE
 24221                           fsr0h	equ	0xFEA
 24222                           fsr0l	equ	0xFE9
 24223                           wreg	equ	0xFE8
 24224                           indf1	equ	0xFE7
 24225                           postdec1	equ	0xFE5
 24226                           plusw1	equ	0xFE3
 24227                           fsr1h	equ	0xFE2
 24228                           fsr1l	equ	0xFE1
 24229                           indf2	equ	0xFDF
 24230                           postinc2	equ	0xFDE
 24231                           postdec2	equ	0xFDD
 24232                           plusw2	equ	0xFDB
 24233                           fsr2h	equ	0xFDA
 24234                           fsr2l	equ	0xFD9
 24235                           status	equ	0xFD8
 24236                           
 24237 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24238 ;; Defined at:
 24239 ;;		line 264 in file "api.c"
 24240 ;; Parameters:    Size  Location     Type
 24241 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24242 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24243 ;; Auto vars:     Size  Location     Type
 24244 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24245 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24246 ;;  cntr            1   10[COMRAM] unsigned char 
 24247 ;;  data_length     1    9[COMRAM] unsigned char 
 24248 ;; Return value:  Size  Location     Type
 24249 ;;                  1    wreg      void 
 24250 ;; Registers used:
 24251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24252 ;; Tracked objects:
 24253 ;;		On entry : 0/0
 24254 ;;		On exit  : 0/0
 24255 ;;		Unchanged: 0/0
 24256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24258 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24259 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24260 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24261 ;;Total ram usage:       13 bytes
 24262 ;; Hardware stack levels used:    1
 24263 ;; Hardware stack levels required when called:    1
 24264 ;; This function calls:
 24265 ;;		_bootloader_get_entries
 24266 ;;		_bootloader_get_error
 24267 ;;		_bootloader_get_file_size
 24268 ;;		_bootloader_get_flashPagesWritten
 24269 ;;		_bootloader_get_rec_address
 24270 ;;		_bootloader_get_rec_checksum
 24271 ;;		_bootloader_get_rec_checksumCheck
 24272 ;;		_bootloader_get_rec_data
 24273 ;;		_bootloader_get_rec_dataLength
 24274 ;;		_bootloader_get_rec_recordType
 24275 ;;		_bootloader_get_total_entries
 24276 ;; This function is called by:
 24277 ;;		_api_prepare
 24278 ;; This function uses a non-reentrant model
 24279 ;;
 24280                           
 24281                           	psect	text112
 24282  002CC6                     __ptext112:
 24283                           	opt stack 0
 24284  002CC6                     __fill_buffer_get_bootloader_details:
 24285                           	opt stack 28
 24286                           
 24287                           ;api.c: 266: uint8_t cntr;;api.c: 267: uint8_t data_length;;api.c: 268: uint16_t buffer_
      +                          small;;api.c: 269: uint32_t buffer_large;;api.c: 272: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24288                           
 24289                           ;incstack = 0
 24290  002CC6  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24291  002CCA  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24292  002CCE  0E13               	movlw	19
 24293  002CD0  6EDF               	movwf	indf2,c
 24294                           
 24295                           ;api.c: 275: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 24296  002CD2  EE20 F001          	lfsr	2,1
 24297  002CD6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24298  002CD8  26D9               	addwf	fsr2l,f,c
 24299  002CDA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24300  002CDC  22DA               	addwfc	fsr2h,f,c
 24301  002CDE  0EC1               	movlw	193
 24302  002CE0  6EDF               	movwf	indf2,c
 24303                           
 24304                           ;api.c: 276: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 24305  002CE2  EE20 F002          	lfsr	2,2
 24306  002CE6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24307  002CE8  26D9               	addwf	fsr2l,f,c
 24308  002CEA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24309  002CEC  22DA               	addwfc	fsr2h,f,c
 24310  002CEE  0E25               	movlw	37
 24311  002CF0  6EDF               	movwf	indf2,c
 24312                           
 24313                           ;api.c: 279: buffer_large = bootloader_get_file_size();
 24314  002CF2  ECAB  F044         	call	_bootloader_get_file_size	;wreg free
 24315  002CF6  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24316  002CFA  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24317  002CFE  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24318  002D02  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24319                           
 24320                           ;api.c: 280: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24321  002D06  EE20 F003          	lfsr	2,3
 24322  002D0A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24323  002D0C  26D9               	addwf	fsr2l,f,c
 24324  002D0E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24325  002D10  22DA               	addwfc	fsr2h,f,c
 24326  002D12  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24327  002D14  6EDF               	movwf	indf2,c
 24328                           
 24329                           ;api.c: 281: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24330  002D16  EE20 F004          	lfsr	2,4
 24331  002D1A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24332  002D1C  26D9               	addwf	fsr2l,f,c
 24333  002D1E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24334  002D20  22DA               	addwfc	fsr2h,f,c
 24335  002D22  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24336                           
 24337                           ;api.c: 282: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24338  002D26  EE20 F005          	lfsr	2,5
 24339  002D2A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24340  002D2C  26D9               	addwf	fsr2l,f,c
 24341  002D2E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24342  002D30  22DA               	addwfc	fsr2h,f,c
 24343  002D32  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24344  002D34  6EDF               	movwf	indf2,c
 24345                           
 24346                           ;api.c: 283: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24347  002D36  EE20 F006          	lfsr	2,6
 24348  002D3A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24349  002D3C  26D9               	addwf	fsr2l,f,c
 24350  002D3E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24351  002D40  22DA               	addwfc	fsr2h,f,c
 24352  002D42  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24353                           
 24354                           ;api.c: 285: buffer_small = bootloader_get_entries();
 24355  002D46  EC15  F045         	call	_bootloader_get_entries	;wreg free
 24356  002D4A  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24357  002D4E  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24358                           
 24359                           ;api.c: 286: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24360  002D52  EE20 F007          	lfsr	2,7
 24361  002D56  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24362  002D58  26D9               	addwf	fsr2l,f,c
 24363  002D5A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24364  002D5C  22DA               	addwfc	fsr2h,f,c
 24365  002D5E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24366  002D60  6EDF               	movwf	indf2,c
 24367                           
 24368                           ;api.c: 287: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24369  002D62  EE20 F008          	lfsr	2,8
 24370  002D66  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24371  002D68  26D9               	addwf	fsr2l,f,c
 24372  002D6A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24373  002D6C  22DA               	addwfc	fsr2h,f,c
 24374  002D6E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24375                           
 24376                           ;api.c: 289: buffer_small = bootloader_get_total_entries();
 24377  002D72  EC1F  F045         	call	_bootloader_get_total_entries	;wreg free
 24378  002D76  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24379  002D7A  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24380                           
 24381                           ;api.c: 290: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24382  002D7E  EE20 F009          	lfsr	2,9
 24383  002D82  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24384  002D84  26D9               	addwf	fsr2l,f,c
 24385  002D86  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24386  002D88  22DA               	addwfc	fsr2h,f,c
 24387  002D8A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24388  002D8C  6EDF               	movwf	indf2,c
 24389                           
 24390                           ;api.c: 291: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24391  002D8E  EE20 F00A          	lfsr	2,10
 24392  002D92  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24393  002D94  26D9               	addwf	fsr2l,f,c
 24394  002D96  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24395  002D98  22DA               	addwfc	fsr2h,f,c
 24396  002D9A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24397                           
 24398                           ;api.c: 293: outBuffer[11] = (uint8_t) bootloader_get_error();
 24399  002D9E  EE20 F00B          	lfsr	2,11
 24400  002DA2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24401  002DA4  26D9               	addwf	fsr2l,f,c
 24402  002DA6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24403  002DA8  22DA               	addwfc	fsr2h,f,c
 24404  002DAA  EC49  F045         	call	_bootloader_get_error	;wreg free
 24405  002DAE  6EDF               	movwf	indf2,c
 24406                           
 24407                           ;api.c: 295: buffer_small = bootloader_get_flashPagesWritten();
 24408  002DB0  EC1A  F045         	call	_bootloader_get_flashPagesWritten	;wreg free
 24409  002DB4  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24410  002DB8  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24411                           
 24412                           ;api.c: 296: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24413  002DBC  EE20 F00C          	lfsr	2,12
 24414  002DC0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24415  002DC2  26D9               	addwf	fsr2l,f,c
 24416  002DC4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24417  002DC6  22DA               	addwfc	fsr2h,f,c
 24418  002DC8  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24419  002DCA  6EDF               	movwf	indf2,c
 24420                           
 24421                           ;api.c: 297: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24422  002DCC  EE20 F00D          	lfsr	2,13
 24423  002DD0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24424  002DD2  26D9               	addwf	fsr2l,f,c
 24425  002DD4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24426  002DD6  22DA               	addwfc	fsr2h,f,c
 24427  002DD8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24428                           
 24429                           ;api.c: 300: buffer_small = bootloader_get_rec_dataLength();
 24430  002DDC  EC0B  F045         	call	_bootloader_get_rec_dataLength	;wreg free
 24431  002DE0  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24432  002DE4  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24433                           
 24434                           ;api.c: 301: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24435  002DE8  EE20 F00E          	lfsr	2,14
 24436  002DEC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24437  002DEE  26D9               	addwf	fsr2l,f,c
 24438  002DF0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24439  002DF2  22DA               	addwfc	fsr2h,f,c
 24440  002DF4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24441  002DF6  6EDF               	movwf	indf2,c
 24442                           
 24443                           ;api.c: 302: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24444  002DF8  EE20 F00F          	lfsr	2,15
 24445  002DFC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24446  002DFE  26D9               	addwf	fsr2l,f,c
 24447  002E00  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24448  002E02  22DA               	addwfc	fsr2h,f,c
 24449  002E04  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24450                           
 24451                           ;api.c: 304: buffer_small = bootloader_get_rec_address();
 24452  002E08  EC10  F045         	call	_bootloader_get_rec_address	;wreg free
 24453  002E0C  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24454  002E10  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24455                           
 24456                           ;api.c: 305: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24457  002E14  EE20 F010          	lfsr	2,16
 24458  002E18  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24459  002E1A  26D9               	addwf	fsr2l,f,c
 24460  002E1C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24461  002E1E  22DA               	addwfc	fsr2h,f,c
 24462  002E20  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24463  002E22  6EDF               	movwf	indf2,c
 24464                           
 24465                           ;api.c: 306: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24466  002E24  EE20 F011          	lfsr	2,17
 24467  002E28  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24468  002E2A  26D9               	addwf	fsr2l,f,c
 24469  002E2C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24470  002E2E  22DA               	addwfc	fsr2h,f,c
 24471  002E30  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24472                           
 24473                           ;api.c: 308: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24474  002E34  EE20 F012          	lfsr	2,18
 24475  002E38  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24476  002E3A  26D9               	addwf	fsr2l,f,c
 24477  002E3C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24478  002E3E  22DA               	addwfc	fsr2h,f,c
 24479  002E40  EC3D  F045         	call	_bootloader_get_rec_recordType	;wreg free
 24480  002E44  6EDF               	movwf	indf2,c
 24481                           
 24482                           ;api.c: 309: outBuffer[19] = bootloader_get_rec_checksum();
 24483  002E46  EE20 F013          	lfsr	2,19
 24484  002E4A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24485  002E4C  26D9               	addwf	fsr2l,f,c
 24486  002E4E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24487  002E50  22DA               	addwfc	fsr2h,f,c
 24488  002E52  EC43  F045         	call	_bootloader_get_rec_checksum	;wreg free
 24489  002E56  6EDF               	movwf	indf2,c
 24490                           
 24491                           ;api.c: 310: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24492  002E58  EE20 F014          	lfsr	2,20
 24493  002E5C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24494  002E5E  26D9               	addwf	fsr2l,f,c
 24495  002E60  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24496  002E62  22DA               	addwfc	fsr2h,f,c
 24497  002E64  EC40  F045         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24498  002E68  6EDF               	movwf	indf2,c
 24499                           
 24500                           ;api.c: 312: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24501  002E6A  EC0B  F045         	call	_bootloader_get_rec_dataLength	;wreg free
 24502  002E6E  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24503  002E70  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24504                           
 24505                           ;api.c: 313: if(data_length>43)
 24506  002E72  0E2B               	movlw	43
 24507  002E74  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24508  002E76  D002               	goto	l2693
 24509                           
 24510                           ;api.c: 314: {;api.c: 316: data_length = 43;
 24511  002E78  0E2B               	movlw	43
 24512  002E7A  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24513  002E7C                     l2693:
 24514                           
 24515                           ;api.c: 317: };api.c: 318: for(cntr=0; cntr<data_length; ++cntr)
 24516  002E7C  0E00               	movlw	0
 24517  002E7E  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24518  002E80  D014               	goto	l2694
 24519  002E82                     
 24520                           ;api.c: 319: {;api.c: 320: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24521  002E82  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24522  002E84  EC83  F044         	call	_bootloader_get_rec_data
 24523  002E88  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24524  002E8A  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24525  002E8C  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24526  002E8E  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24527  002E90  0E15               	movlw	21
 24528  002E92  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24529  002E94  0E00               	movlw	0
 24530  002E96  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 24531  002E98  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 24532  002E9A  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24533  002E9C  6ED9               	movwf	fsr2l,c
 24534  002E9E  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 24535  002EA0  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24536  002EA2  6EDA               	movwf	fsr2h,c
 24537  002EA4  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 24538  002EA8  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 24539  002EAA                     l2694:
 24540  002EAA  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 24541  002EAC  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 24542  002EAE  B0D8               	btfsc	status,0,c
 24543  002EB0  0012               	return	
 24544  002EB2  D7E7               	goto	l2695
 24545  002EB4                     __end_of__fill_buffer_get_bootloader_details:
 24546                           	opt stack 0
 24547                           tosu	equ	0xFFF
 24548                           tosh	equ	0xFFE
 24549                           tosl	equ	0xFFD
 24550                           pclath	equ	0xFFA
 24551                           tblptru	equ	0xFF8
 24552                           tblptrh	equ	0xFF7
 24553                           tblptrl	equ	0xFF6
 24554                           tablat	equ	0xFF5
 24555                           prodh	equ	0xFF4
 24556                           prodl	equ	0xFF3
 24557                           intcon	equ	0xFF2
 24558                           intcon2	equ	0xFF1
 24559                           intcon3	equ	0xFF0
 24560                           indf0	equ	0xFEF
 24561                           postinc0	equ	0xFEE
 24562                           fsr0h	equ	0xFEA
 24563                           fsr0l	equ	0xFE9
 24564                           wreg	equ	0xFE8
 24565                           indf1	equ	0xFE7
 24566                           postdec1	equ	0xFE5
 24567                           plusw1	equ	0xFE3
 24568                           fsr1h	equ	0xFE2
 24569                           fsr1l	equ	0xFE1
 24570                           indf2	equ	0xFDF
 24571                           postinc2	equ	0xFDE
 24572                           postdec2	equ	0xFDD
 24573                           plusw2	equ	0xFDB
 24574                           fsr2h	equ	0xFDA
 24575                           fsr2l	equ	0xFD9
 24576                           status	equ	0xFD8
 24577                           
 24578 ;; *************** function _bootloader_get_rec_recordType *****************
 24579 ;; Defined at:
 24580 ;;		line 491 in file "bootloader.c"
 24581 ;; Parameters:    Size  Location     Type
 24582 ;;		None
 24583 ;; Auto vars:     Size  Location     Type
 24584 ;;		None
 24585 ;; Return value:  Size  Location     Type
 24586 ;;                  1    wreg      enum E6772
 24587 ;; Registers used:
 24588 ;;		wreg, status,2
 24589 ;; Tracked objects:
 24590 ;;		On entry : 0/0
 24591 ;;		On exit  : 0/0
 24592 ;;		Unchanged: 0/0
 24593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24598 ;;Total ram usage:        0 bytes
 24599 ;; Hardware stack levels used:    1
 24600 ;; This function calls:
 24601 ;;		Nothing
 24602 ;; This function is called by:
 24603 ;;		__fill_buffer_get_bootloader_details
 24604 ;; This function uses a non-reentrant model
 24605 ;;
 24606                           
 24607                           	psect	text113
 24608  008A7A                     __ptext113:
 24609                           	opt stack 0
 24610  008A7A                     _bootloader_get_rec_recordType:
 24611                           	opt stack 28
 24612                           
 24613                           ;bootloader.c: 493: return hex_file_entry.recordType;
 24614                           
 24615                           ;incstack = 0
 24616  008A7A  0101               	movlb	1	; () banked
 24617  008A7C  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
 24618  008A7E  0012               	return	
 24619  008A80                     __end_of_bootloader_get_rec_recordType:
 24620                           	opt stack 0
 24621                           tosu	equ	0xFFF
 24622                           tosh	equ	0xFFE
 24623                           tosl	equ	0xFFD
 24624                           pclath	equ	0xFFA
 24625                           tblptru	equ	0xFF8
 24626                           tblptrh	equ	0xFF7
 24627                           tblptrl	equ	0xFF6
 24628                           tablat	equ	0xFF5
 24629                           prodh	equ	0xFF4
 24630                           prodl	equ	0xFF3
 24631                           intcon	equ	0xFF2
 24632                           intcon2	equ	0xFF1
 24633                           intcon3	equ	0xFF0
 24634                           indf0	equ	0xFEF
 24635                           postinc0	equ	0xFEE
 24636                           fsr0h	equ	0xFEA
 24637                           fsr0l	equ	0xFE9
 24638                           wreg	equ	0xFE8
 24639                           indf1	equ	0xFE7
 24640                           postdec1	equ	0xFE5
 24641                           plusw1	equ	0xFE3
 24642                           fsr1h	equ	0xFE2
 24643                           fsr1l	equ	0xFE1
 24644                           indf2	equ	0xFDF
 24645                           postinc2	equ	0xFDE
 24646                           postdec2	equ	0xFDD
 24647                           plusw2	equ	0xFDB
 24648                           fsr2h	equ	0xFDA
 24649                           fsr2l	equ	0xFD9
 24650                           status	equ	0xFD8
 24651                           
 24652 ;; *************** function _bootloader_get_rec_dataLength *****************
 24653 ;; Defined at:
 24654 ;;		line 480 in file "bootloader.c"
 24655 ;; Parameters:    Size  Location     Type
 24656 ;;		None
 24657 ;; Auto vars:     Size  Location     Type
 24658 ;;		None
 24659 ;; Return value:  Size  Location     Type
 24660 ;;                  2    0[COMRAM] unsigned int 
 24661 ;; Registers used:
 24662 ;;		None
 24663 ;; Tracked objects:
 24664 ;;		On entry : 0/0
 24665 ;;		On exit  : 0/0
 24666 ;;		Unchanged: 0/0
 24667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24672 ;;Total ram usage:        2 bytes
 24673 ;; Hardware stack levels used:    1
 24674 ;; This function calls:
 24675 ;;		Nothing
 24676 ;; This function is called by:
 24677 ;;		__fill_buffer_get_bootloader_details
 24678 ;; This function uses a non-reentrant model
 24679 ;;
 24680                           
 24681                           	psect	text114
 24682  008A16                     __ptext114:
 24683                           	opt stack 0
 24684  008A16                     _bootloader_get_rec_dataLength:
 24685                           	opt stack 28
 24686                           
 24687                           ;bootloader.c: 482: return hex_file_entry.dataLength;
 24688                           
 24689                           ; BSR set to: 1
 24690                           ;incstack = 0
 24691  008A16  C193  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 24692  008A1A  C194  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 24693  008A1E  0012               	return		;funcret
 24694  008A20                     __end_of_bootloader_get_rec_dataLength:
 24695                           	opt stack 0
 24696                           tosu	equ	0xFFF
 24697                           tosh	equ	0xFFE
 24698                           tosl	equ	0xFFD
 24699                           pclath	equ	0xFFA
 24700                           tblptru	equ	0xFF8
 24701                           tblptrh	equ	0xFF7
 24702                           tblptrl	equ	0xFF6
 24703                           tablat	equ	0xFF5
 24704                           prodh	equ	0xFF4
 24705                           prodl	equ	0xFF3
 24706                           intcon	equ	0xFF2
 24707                           intcon2	equ	0xFF1
 24708                           intcon3	equ	0xFF0
 24709                           indf0	equ	0xFEF
 24710                           postinc0	equ	0xFEE
 24711                           fsr0h	equ	0xFEA
 24712                           fsr0l	equ	0xFE9
 24713                           wreg	equ	0xFE8
 24714                           indf1	equ	0xFE7
 24715                           postdec1	equ	0xFE5
 24716                           plusw1	equ	0xFE3
 24717                           fsr1h	equ	0xFE2
 24718                           fsr1l	equ	0xFE1
 24719                           indf2	equ	0xFDF
 24720                           postinc2	equ	0xFDE
 24721                           postdec2	equ	0xFDD
 24722                           plusw2	equ	0xFDB
 24723                           fsr2h	equ	0xFDA
 24724                           fsr2l	equ	0xFD9
 24725                           status	equ	0xFD8
 24726                           
 24727 ;; *************** function _bootloader_get_rec_data *****************
 24728 ;; Defined at:
 24729 ;;		line 496 in file "bootloader.c"
 24730 ;; Parameters:    Size  Location     Type
 24731 ;;  index           1    wreg     unsigned char 
 24732 ;; Auto vars:     Size  Location     Type
 24733 ;;  index           1    0[COMRAM] unsigned char 
 24734 ;; Return value:  Size  Location     Type
 24735 ;;                  1    wreg      unsigned char 
 24736 ;; Registers used:
 24737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24738 ;; Tracked objects:
 24739 ;;		On entry : 0/0
 24740 ;;		On exit  : 0/0
 24741 ;;		Unchanged: 0/0
 24742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24747 ;;Total ram usage:        1 bytes
 24748 ;; Hardware stack levels used:    1
 24749 ;; This function calls:
 24750 ;;		Nothing
 24751 ;; This function is called by:
 24752 ;;		__fill_buffer_get_bootloader_details
 24753 ;; This function uses a non-reentrant model
 24754 ;;
 24755                           
 24756                           	psect	text115
 24757  008906                     __ptext115:
 24758                           	opt stack 0
 24759  008906                     _bootloader_get_rec_data:
 24760                           	opt stack 28
 24761                           
 24762                           ;incstack = 0
 24763                           ;bootloader_get_rec_data@index stored from wreg
 24764  008906  6E01               	movwf	bootloader_get_rec_data@index,c
 24765                           
 24766                           ;bootloader.c: 498: return hex_file_entry.data[index];
 24767  008908  5001               	movf	bootloader_get_rec_data@index,w,c
 24768  00890A  0D01               	mullw	1
 24769  00890C  0E98               	movlw	low (_hex_file_entry+5)
 24770  00890E  24F3               	addwf	prodl,w,c
 24771  008910  6ED9               	movwf	fsr2l,c
 24772  008912  0E01               	movlw	high (_hex_file_entry+5)
 24773  008914  20F4               	addwfc	prodh,w,c
 24774  008916  6EDA               	movwf	fsr2h,c
 24775  008918  50DF               	movf	indf2,w,c
 24776  00891A  0012               	return	
 24777  00891C                     __end_of_bootloader_get_rec_data:
 24778                           	opt stack 0
 24779                           tosu	equ	0xFFF
 24780                           tosh	equ	0xFFE
 24781                           tosl	equ	0xFFD
 24782                           pclath	equ	0xFFA
 24783                           tblptru	equ	0xFF8
 24784                           tblptrh	equ	0xFF7
 24785                           tblptrl	equ	0xFF6
 24786                           tablat	equ	0xFF5
 24787                           prodh	equ	0xFF4
 24788                           prodl	equ	0xFF3
 24789                           intcon	equ	0xFF2
 24790                           intcon2	equ	0xFF1
 24791                           intcon3	equ	0xFF0
 24792                           indf0	equ	0xFEF
 24793                           postinc0	equ	0xFEE
 24794                           fsr0h	equ	0xFEA
 24795                           fsr0l	equ	0xFE9
 24796                           wreg	equ	0xFE8
 24797                           indf1	equ	0xFE7
 24798                           postdec1	equ	0xFE5
 24799                           plusw1	equ	0xFE3
 24800                           fsr1h	equ	0xFE2
 24801                           fsr1l	equ	0xFE1
 24802                           indf2	equ	0xFDF
 24803                           postinc2	equ	0xFDE
 24804                           postdec2	equ	0xFDD
 24805                           plusw2	equ	0xFDB
 24806                           fsr2h	equ	0xFDA
 24807                           fsr2l	equ	0xFD9
 24808                           status	equ	0xFD8
 24809                           
 24810 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 24811 ;; Defined at:
 24812 ;;		line 506 in file "bootloader.c"
 24813 ;; Parameters:    Size  Location     Type
 24814 ;;		None
 24815 ;; Auto vars:     Size  Location     Type
 24816 ;;		None
 24817 ;; Return value:  Size  Location     Type
 24818 ;;                  1    wreg      unsigned char 
 24819 ;; Registers used:
 24820 ;;		wreg, status,2
 24821 ;; Tracked objects:
 24822 ;;		On entry : 0/0
 24823 ;;		On exit  : 0/0
 24824 ;;		Unchanged: 0/0
 24825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24830 ;;Total ram usage:        0 bytes
 24831 ;; Hardware stack levels used:    1
 24832 ;; This function calls:
 24833 ;;		Nothing
 24834 ;; This function is called by:
 24835 ;;		__fill_buffer_get_bootloader_details
 24836 ;; This function uses a non-reentrant model
 24837 ;;
 24838                           
 24839                           	psect	text116
 24840  008A80                     __ptext116:
 24841                           	opt stack 0
 24842  008A80                     _bootloader_get_rec_checksumCheck:
 24843                           	opt stack 28
 24844                           
 24845                           ;bootloader.c: 508: return hex_file_entry.checksumCheck;
 24846                           
 24847                           ;incstack = 0
 24848  008A80  0101               	movlb	1	; () banked
 24849  008A82  51A9               	movf	(_hex_file_entry+22)& (0+255),w,b
 24850  008A84  0012               	return	
 24851  008A86                     __end_of_bootloader_get_rec_checksumCheck:
 24852                           	opt stack 0
 24853                           tosu	equ	0xFFF
 24854                           tosh	equ	0xFFE
 24855                           tosl	equ	0xFFD
 24856                           pclath	equ	0xFFA
 24857                           tblptru	equ	0xFF8
 24858                           tblptrh	equ	0xFF7
 24859                           tblptrl	equ	0xFF6
 24860                           tablat	equ	0xFF5
 24861                           prodh	equ	0xFF4
 24862                           prodl	equ	0xFF3
 24863                           intcon	equ	0xFF2
 24864                           intcon2	equ	0xFF1
 24865                           intcon3	equ	0xFF0
 24866                           indf0	equ	0xFEF
 24867                           postinc0	equ	0xFEE
 24868                           fsr0h	equ	0xFEA
 24869                           fsr0l	equ	0xFE9
 24870                           wreg	equ	0xFE8
 24871                           indf1	equ	0xFE7
 24872                           postdec1	equ	0xFE5
 24873                           plusw1	equ	0xFE3
 24874                           fsr1h	equ	0xFE2
 24875                           fsr1l	equ	0xFE1
 24876                           indf2	equ	0xFDF
 24877                           postinc2	equ	0xFDE
 24878                           postdec2	equ	0xFDD
 24879                           plusw2	equ	0xFDB
 24880                           fsr2h	equ	0xFDA
 24881                           fsr2l	equ	0xFD9
 24882                           status	equ	0xFD8
 24883                           
 24884 ;; *************** function _bootloader_get_rec_checksum *****************
 24885 ;; Defined at:
 24886 ;;		line 501 in file "bootloader.c"
 24887 ;; Parameters:    Size  Location     Type
 24888 ;;		None
 24889 ;; Auto vars:     Size  Location     Type
 24890 ;;		None
 24891 ;; Return value:  Size  Location     Type
 24892 ;;                  1    wreg      unsigned char 
 24893 ;; Registers used:
 24894 ;;		wreg, status,2
 24895 ;; Tracked objects:
 24896 ;;		On entry : 0/0
 24897 ;;		On exit  : 0/0
 24898 ;;		Unchanged: 0/0
 24899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24904 ;;Total ram usage:        0 bytes
 24905 ;; Hardware stack levels used:    1
 24906 ;; This function calls:
 24907 ;;		Nothing
 24908 ;; This function is called by:
 24909 ;;		__fill_buffer_get_bootloader_details
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text117
 24914  008A86                     __ptext117:
 24915                           	opt stack 0
 24916  008A86                     _bootloader_get_rec_checksum:
 24917                           	opt stack 28
 24918                           
 24919                           ;bootloader.c: 503: return hex_file_entry.checksum;
 24920                           
 24921                           ; BSR set to: 1
 24922                           ;incstack = 0
 24923  008A86  0101               	movlb	1	; () banked
 24924  008A88  51A8               	movf	(_hex_file_entry+21)& (0+255),w,b
 24925  008A8A  0012               	return	
 24926  008A8C                     __end_of_bootloader_get_rec_checksum:
 24927                           	opt stack 0
 24928                           tosu	equ	0xFFF
 24929                           tosh	equ	0xFFE
 24930                           tosl	equ	0xFFD
 24931                           pclath	equ	0xFFA
 24932                           tblptru	equ	0xFF8
 24933                           tblptrh	equ	0xFF7
 24934                           tblptrl	equ	0xFF6
 24935                           tablat	equ	0xFF5
 24936                           prodh	equ	0xFF4
 24937                           prodl	equ	0xFF3
 24938                           intcon	equ	0xFF2
 24939                           intcon2	equ	0xFF1
 24940                           intcon3	equ	0xFF0
 24941                           indf0	equ	0xFEF
 24942                           postinc0	equ	0xFEE
 24943                           fsr0h	equ	0xFEA
 24944                           fsr0l	equ	0xFE9
 24945                           wreg	equ	0xFE8
 24946                           indf1	equ	0xFE7
 24947                           postdec1	equ	0xFE5
 24948                           plusw1	equ	0xFE3
 24949                           fsr1h	equ	0xFE2
 24950                           fsr1l	equ	0xFE1
 24951                           indf2	equ	0xFDF
 24952                           postinc2	equ	0xFDE
 24953                           postdec2	equ	0xFDD
 24954                           plusw2	equ	0xFDB
 24955                           fsr2h	equ	0xFDA
 24956                           fsr2l	equ	0xFD9
 24957                           status	equ	0xFD8
 24958                           
 24959 ;; *************** function __fill_buffer_find_file *****************
 24960 ;; Defined at:
 24961 ;;		line 363 in file "api.c"
 24962 ;; Parameters:    Size  Location     Type
 24963 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 24964 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24965 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 24966 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24967 ;; Auto vars:     Size  Location     Type
 24968 ;;  cntr            1   62[COMRAM] unsigned char 
 24969 ;; Return value:  Size  Location     Type
 24970 ;;                  1    wreg      void 
 24971 ;; Registers used:
 24972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24973 ;; Tracked objects:
 24974 ;;		On entry : 0/0
 24975 ;;		On exit  : 0/0
 24976 ;;		Unchanged: 0/0
 24977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24980 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24981 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24982 ;;Total ram usage:        9 bytes
 24983 ;; Hardware stack levels used:    1
 24984 ;; Hardware stack levels required when called:    6
 24985 ;; This function calls:
 24986 ;;		_fat_find_file
 24987 ;; This function is called by:
 24988 ;;		_api_prepare
 24989 ;; This function uses a non-reentrant model
 24990 ;;
 24991                           
 24992                           	psect	text118
 24993  006646                     __ptext118:
 24994                           	opt stack 0
 24995  006646                     __fill_buffer_find_file:
 24996                           	opt stack 23
 24997                           
 24998                           ;api.c: 365: uint8_t cntr;;api.c: 368: outBuffer[0] = DATAREQUEST_FIND_FILE;
 24999                           
 25000                           ; BSR set to: 1
 25001                           ;incstack = 0
 25002  006646  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25003  00664A  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25004  00664E  0E81               	movlw	129
 25005  006650  6EDF               	movwf	indf2,c
 25006                           
 25007                           ;api.c: 371: outBuffer[1] = 0xC125 >> 8;
 25008  006652  EE20 F001          	lfsr	2,1
 25009  006656  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25010  006658  26D9               	addwf	fsr2l,f,c
 25011  00665A  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25012  00665C  22DA               	addwfc	fsr2h,f,c
 25013  00665E  0EC1               	movlw	193
 25014  006660  6EDF               	movwf	indf2,c
 25015                           
 25016                           ;api.c: 372: outBuffer[2] = (uint8_t) 0xC125;
 25017  006662  EE20 F002          	lfsr	2,2
 25018  006666  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25019  006668  26D9               	addwf	fsr2l,f,c
 25020  00666A  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25021  00666C  22DA               	addwfc	fsr2h,f,c
 25022  00666E  0E25               	movlw	37
 25023  006670  6EDF               	movwf	indf2,c
 25024                           
 25025                           ;api.c: 375: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25026  006672  0E01               	movlw	1
 25027  006674  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25028  006676  6E2C               	movwf	fat_find_file@name,c
 25029  006678  0E00               	movlw	0
 25030  00667A  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25031  00667C  6E2D               	movwf	fat_find_file@name+1,c
 25032  00667E  0E09               	movlw	9
 25033  006680  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25034  006682  6E2E               	movwf	fat_find_file@extension,c
 25035  006684  0E00               	movlw	0
 25036  006686  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25037  006688  6E2F               	movwf	fat_find_file@extension+1,c
 25038  00668A  EC56  F02B         	call	_fat_find_file	;wreg free
 25039  00668E  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25040  006690  EE20 F003          	lfsr	2,3
 25041  006694  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25042  006696  26D9               	addwf	fsr2l,f,c
 25043  006698  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25044  00669A  22DA               	addwfc	fsr2h,f,c
 25045  00669C  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 25046                           
 25047                           ;api.c: 378: for(cntr=0; cntr<11; ++cntr)
 25048  0066A0  0E00               	movlw	0
 25049  0066A2  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 25050  0066A4                     l14119:
 25051  0066A4  0E0A               	movlw	10
 25052  0066A6  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 25053  0066A8  D001               	goto	l2706
 25054  0066AA  0012               	return	
 25055  0066AC                     l2706:
 25056                           
 25057                           ;api.c: 379: {;api.c: 380: outBuffer[cntr+12] = inBuffer[cntr+1];
 25058  0066AC  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25059  0066AE  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25060  0066B0  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 25061  0066B2  0E01               	movlw	1
 25062  0066B4  263B               	addwf	??__fill_buffer_find_file,f,c
 25063  0066B6  0E00               	movlw	0
 25064  0066B8  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 25065  0066BA  503B               	movf	??__fill_buffer_find_file,w,c
 25066  0066BC  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25067  0066BE  6ED9               	movwf	fsr2l,c
 25068  0066C0  503C               	movf	??__fill_buffer_find_file+1,w,c
 25069  0066C2  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25070  0066C4  6EDA               	movwf	fsr2h,c
 25071  0066C6  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25072  0066C8  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 25073  0066CA  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 25074  0066CC  0E0C               	movlw	12
 25075  0066CE  263D               	addwf	??__fill_buffer_find_file+2,f,c
 25076  0066D0  0E00               	movlw	0
 25077  0066D2  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 25078  0066D4  503D               	movf	??__fill_buffer_find_file+2,w,c
 25079  0066D6  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 25080  0066D8  6EE1               	movwf	fsr1l,c
 25081  0066DA  503E               	movf	??__fill_buffer_find_file+3,w,c
 25082  0066DC  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 25083  0066DE  6EE2               	movwf	fsr1h,c
 25084  0066E0  CFDF FFE7          	movff	indf2,indf1
 25085  0066E4  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 25086  0066E6  D7DE               	goto	l14119
 25087  0066E8                     __end_of__fill_buffer_find_file:
 25088                           	opt stack 0
 25089                           tosu	equ	0xFFF
 25090                           tosh	equ	0xFFE
 25091                           tosl	equ	0xFFD
 25092                           pclath	equ	0xFFA
 25093                           tblptru	equ	0xFF8
 25094                           tblptrh	equ	0xFF7
 25095                           tblptrl	equ	0xFF6
 25096                           tablat	equ	0xFF5
 25097                           prodh	equ	0xFF4
 25098                           prodl	equ	0xFF3
 25099                           intcon	equ	0xFF2
 25100                           intcon2	equ	0xFF1
 25101                           intcon3	equ	0xFF0
 25102                           indf0	equ	0xFEF
 25103                           postinc0	equ	0xFEE
 25104                           fsr0h	equ	0xFEA
 25105                           fsr0l	equ	0xFE9
 25106                           wreg	equ	0xFE8
 25107                           indf1	equ	0xFE7
 25108                           postdec1	equ	0xFE5
 25109                           plusw1	equ	0xFE3
 25110                           fsr1h	equ	0xFE2
 25111                           fsr1l	equ	0xFE1
 25112                           indf2	equ	0xFDF
 25113                           postinc2	equ	0xFDE
 25114                           postdec2	equ	0xFDD
 25115                           plusw2	equ	0xFDB
 25116                           fsr2h	equ	0xFDA
 25117                           fsr2l	equ	0xFD9
 25118                           status	equ	0xFD8
 25119                           
 25120 ;; *************** function _api_parse *****************
 25121 ;; Defined at:
 25122 ;;		line 133 in file "api.c"
 25123 ;; Parameters:    Size  Location     Type
 25124 ;;  inBuffer        2   59[BANK0 ] PTR unsigned char 
 25125 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25126 ;;  receivedData    1   61[BANK0 ] unsigned char 
 25127 ;; Auto vars:     Size  Location     Type
 25128 ;;  idx             1   64[BANK0 ] unsigned char 
 25129 ;; Return value:  Size  Location     Type
 25130 ;;                  1    wreg      void 
 25131 ;; Registers used:
 25132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25133 ;; Tracked objects:
 25134 ;;		On entry : 0/0
 25135 ;;		On exit  : 0/0
 25136 ;;		Unchanged: 0/0
 25137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25142 ;;Total ram usage:        6 bytes
 25143 ;; Hardware stack levels used:    1
 25144 ;; Hardware stack levels required when called:   11
 25145 ;; This function calls:
 25146 ;;		__parse_command_long
 25147 ;;		__parse_command_short
 25148 ;; This function is called by:
 25149 ;;		_main
 25150 ;;		_APP_DeviceCustomHIDTasks
 25151 ;; This function uses a non-reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text119
 25155  005A0C                     __ptext119:
 25156                           	opt stack 0
 25157  005A0C                     _api_parse:
 25158                           	opt stack 19
 25159                           
 25160                           ;api.c: 137: uint8_t idx;;api.c: 139: if(inBuffer[0]>0x7F)
 25161                           
 25162                           ;incstack = 0
 25163  005A0C  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25164  005A10  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25165  005A14  0E7F               	movlw	127
 25166  005A16  64DF               	cpfsgt	indf2,c
 25167  005A18  D001               	goto	l2663
 25168  005A1A  0012               	return	
 25169  005A1C                     l2663:
 25170                           
 25171                           ;api.c: 144: };api.c: 146: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25172  005A1C  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25173  005A20  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25174  005A24  0E20               	movlw	32
 25175  005A26  18DE               	xorwf	postinc2,w,c
 25176  005A28  B4D8               	btfsc	status,2,c
 25177  005A2A  0012               	return	
 25178                           
 25179                           ;api.c: 151: };api.c: 153: idx = 1;
 25180                           
 25181                           ;api.c: 147: {;api.c: 150: return;
 25182  005A2C  0E01               	movlw	1
 25183  005A2E  0100               	movlb	0	; () banked
 25184  005A30  6FA0               	movwf	api_parse@idx& (0+255),b
 25185                           
 25186                           ;api.c: 154: while(idx<receivedDataLength)
 25187  005A32  D04F               	goto	l2671
 25188  005A34                     
 25189                           ; BSR set to: 0
 25190                           ;api.c: 155: {;api.c: 157: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 25191                           
 25192                           ; BSR set to: 0
 25193  005A34  51A0               	movf	api_parse@idx& (0+255),w,b
 25194  005A36  0D01               	mullw	1
 25195  005A38  50F3               	movf	prodl,w,c
 25196  005A3A  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25197  005A3C  6ED9               	movwf	fsr2l,c
 25198  005A3E  50F4               	movf	prodh,w,c
 25199  005A40  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25200  005A42  6EDA               	movwf	fsr2h,c
 25201  005A44  0E99               	movlw	153
 25202  005A46  18DE               	xorwf	postinc2,w,c
 25203  005A48  B4D8               	btfsc	status,2,c
 25204  005A4A  0012               	return	
 25205  005A4C  D027               	goto	l2669
 25206  005A4E                     
 25207                           ; BSR set to: 0
 25208                           ;api.c: 165: _parse_command_short(inBuffer[idx]);
 25209                           
 25210                           ; BSR set to: 0
 25211  005A4E  51A0               	movf	api_parse@idx& (0+255),w,b
 25212  005A50  0D01               	mullw	1
 25213  005A52  50F3               	movf	prodl,w,c
 25214  005A54  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25215  005A56  6ED9               	movwf	fsr2l,c
 25216  005A58  50F4               	movf	prodh,w,c
 25217  005A5A  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25218  005A5C  6EDA               	movwf	fsr2h,c
 25219  005A5E  50DF               	movf	indf2,w,c
 25220  005A60  EC80  F030         	call	__parse_command_short
 25221  005A64  D00B               	goto	l14685
 25222  005A66                     
 25223                           ; BSR set to: 0
 25224                           ;api.c: 170: _parse_command_short(inBuffer[idx]);
 25225                           
 25226                           ; BSR set to: 0
 25227  005A66  51A0               	movf	api_parse@idx& (0+255),w,b
 25228  005A68  0D01               	mullw	1
 25229  005A6A  50F3               	movf	prodl,w,c
 25230  005A6C  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25231  005A6E  6ED9               	movwf	fsr2l,c
 25232  005A70  50F4               	movf	prodh,w,c
 25233  005A72  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25234  005A74  6EDA               	movwf	fsr2h,c
 25235  005A76  50DF               	movf	indf2,w,c
 25236  005A78  EC80  F030         	call	__parse_command_short
 25237  005A7C                     l14685:
 25238                           
 25239                           ;api.c: 171: ++idx;
 25240  005A7C  0100               	movlb	0	; () banked
 25241  005A7E  2BA0               	incf	api_parse@idx& (0+255),f,b
 25242                           
 25243                           ;api.c: 172: break;
 25244  005A80  D028               	goto	l2671
 25245  005A82                     
 25246                           ; BSR set to: 0
 25247                           ;api.c: 175: idx += _parse_command_long(&inBuffer[idx]);
 25248                           
 25249                           ; BSR set to: 0
 25250  005A82  51A0               	movf	api_parse@idx& (0+255),w,b
 25251  005A84  0D01               	mullw	1
 25252  005A86  50F3               	movf	prodl,w,c
 25253  005A88  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25254  005A8A  6F98               	movwf	__parse_command_long@data& (0+255),b
 25255  005A8C  50F4               	movf	prodh,w,c
 25256  005A8E  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25257  005A90  6F99               	movwf	(__parse_command_long@data+1)& (0+255),b
 25258  005A92  ECDA  F031         	call	__parse_command_long	;wreg free
 25259  005A96  0100               	movlb	0	; () banked
 25260  005A98  27A0               	addwf	api_parse@idx& (0+255),f,b
 25261                           
 25262                           ;api.c: 176: break;
 25263  005A9A  D01B               	goto	l2671
 25264  005A9C                     l2669:
 25265                           
 25266                           ; BSR set to: 0
 25267                           
 25268                           ; BSR set to: 0
 25269  005A9C  51A0               	movf	api_parse@idx& (0+255),w,b
 25270  005A9E  0D01               	mullw	1
 25271  005AA0  50F3               	movf	prodl,w,c
 25272  005AA2  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25273  005AA4  6ED9               	movwf	fsr2l,c
 25274  005AA6  50F4               	movf	prodh,w,c
 25275  005AA8  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25276  005AAA  6EDA               	movwf	fsr2h,c
 25277  005AAC  50DF               	movf	indf2,w,c
 25278  005AAE  0BF0               	andlw	240
 25279  005AB0  6F9E               	movwf	??_api_parse& (0+255),b
 25280  005AB2  6B9F               	clrf	(??_api_parse+1)& (0+255),b
 25281                           
 25282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25283                           ; Switch size 1, requested type "space"
 25284                           ; Number of cases is 1, Range of values is 0 to 0
 25285                           ; switch strategies available:
 25286                           ; Name         Instructions Cycles
 25287                           ; simple_byte            4     3 (average)
 25288                           ;	Chosen strategy is simple_byte
 25289  005AB4  519F               	movf	(??_api_parse+1)& (0+255),w,b
 25290  005AB6  0A00               	xorlw	0	; case 0
 25291  005AB8  A4D8               	btfss	status,2,c
 25292  005ABA  0012               	return	
 25293                           
 25294                           ; BSR set to: 0
 25295                           ; Switch size 1, requested type "space"
 25296                           ; Number of cases is 3, Range of values is 32 to 80
 25297                           ; switch strategies available:
 25298                           ; Name         Instructions Cycles
 25299                           ; simple_byte           10     6 (average)
 25300                           ;	Chosen strategy is simple_byte
 25301  005ABC  519E               	movf	??_api_parse& (0+255),w,b
 25302  005ABE  0A20               	xorlw	32	; case 32
 25303  005AC0  B4D8               	btfsc	status,2,c
 25304  005AC2  D7C5               	goto	l2670
 25305  005AC4  0A10               	xorlw	16	; case 48
 25306  005AC6  B4D8               	btfsc	status,2,c
 25307  005AC8  D7CE               	goto	l2672
 25308  005ACA  0A60               	xorlw	96	; case 80
 25309  005ACC  A4D8               	btfss	status,2,c
 25310  005ACE  0012               	return	
 25311  005AD0  D7D8               	goto	l2673
 25312  005AD2                     l2671:
 25313                           
 25314                           ; BSR set to: 0
 25315                           
 25316                           ; BSR set to: 0
 25317                           
 25318                           ; BSR set to: 0
 25319  005AD2  519D               	movf	api_parse@receivedDataLength& (0+255),w,b
 25320  005AD4  5DA0               	subwf	api_parse@idx& (0+255),w,b
 25321  005AD6  B0D8               	btfsc	status,0,c
 25322  005AD8  0012               	return	
 25323  005ADA  D7AC               	goto	l2667
 25324  005ADC                     __end_of_api_parse:
 25325                           	opt stack 0
 25326                           tosu	equ	0xFFF
 25327                           tosh	equ	0xFFE
 25328                           tosl	equ	0xFFD
 25329                           pclath	equ	0xFFA
 25330                           tblptru	equ	0xFF8
 25331                           tblptrh	equ	0xFF7
 25332                           tblptrl	equ	0xFF6
 25333                           tablat	equ	0xFF5
 25334                           prodh	equ	0xFF4
 25335                           prodl	equ	0xFF3
 25336                           intcon	equ	0xFF2
 25337                           intcon2	equ	0xFF1
 25338                           intcon3	equ	0xFF0
 25339                           indf0	equ	0xFEF
 25340                           postinc0	equ	0xFEE
 25341                           fsr0h	equ	0xFEA
 25342                           fsr0l	equ	0xFE9
 25343                           wreg	equ	0xFE8
 25344                           indf1	equ	0xFE7
 25345                           postdec1	equ	0xFE5
 25346                           plusw1	equ	0xFE3
 25347                           fsr1h	equ	0xFE2
 25348                           fsr1l	equ	0xFE1
 25349                           indf2	equ	0xFDF
 25350                           postinc2	equ	0xFDE
 25351                           postdec2	equ	0xFDD
 25352                           plusw2	equ	0xFDB
 25353                           fsr2h	equ	0xFDA
 25354                           fsr2l	equ	0xFD9
 25355                           status	equ	0xFD8
 25356                           
 25357 ;; *************** function __parse_command_short *****************
 25358 ;; Defined at:
 25359 ;;		line 432 in file "api.c"
 25360 ;; Parameters:    Size  Location     Type
 25361 ;;  cmd             1    wreg     unsigned char 
 25362 ;; Auto vars:     Size  Location     Type
 25363 ;;  cmd             1   43[COMRAM] unsigned char 
 25364 ;; Return value:  Size  Location     Type
 25365 ;;                  1    wreg      void 
 25366 ;; Registers used:
 25367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25368 ;; Tracked objects:
 25369 ;;		On entry : 0/0
 25370 ;;		On exit  : 0/0
 25371 ;;		Unchanged: 0/0
 25372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25377 ;;Total ram usage:        1 bytes
 25378 ;; Hardware stack levels used:    1
 25379 ;; Hardware stack levels required when called:    8
 25380 ;; This function calls:
 25381 ;;		_i2c_eeprom_writeByte
 25382 ;;		_reboot
 25383 ;;		_system_delay_ms
 25384 ;; This function is called by:
 25385 ;;		_api_parse
 25386 ;; This function uses a non-reentrant model
 25387 ;;
 25388                           
 25389                           	psect	text120
 25390  006100                     __ptext120:
 25391                           	opt stack 0
 25392  006100                     __parse_command_short:
 25393                           	opt stack 21
 25394                           
 25395                           ;incstack = 0
 25396                           ;__parse_command_short@cmd stored from wreg
 25397  006100  6E2C               	movwf	__parse_command_short@cmd,c
 25398                           
 25399                           ;api.c: 434: switch(cmd)
 25400  006102  D041               	goto	l2715
 25401  006104                     
 25402                           ;api.c: 437: i2c_eeprom_writeByte(0x100, 0x00);
 25403  006104  0E01               	movlw	1
 25404  006106  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25405  006108  0E00               	movlw	0
 25406  00610A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25407  00610C  0E00               	movlw	0
 25408  00610E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25409  006110  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25410                           
 25411                           ;api.c: 438: system_delay_ms(10);
 25412  006114  0E0A               	movlw	10
 25413  006116  EC7D  F043         	call	_system_delay_ms
 25414                           
 25415                           ;api.c: 439: reboot();
 25416  00611A  EC3C  F044         	call	_reboot	;wreg free
 25417                           
 25418                           ;api.c: 440: break;
 25419  00611E  0012               	return	
 25420  006120                     
 25421                           ;api.c: 443: i2c_eeprom_writeByte(0x100, 0x94);
 25422  006120  0E01               	movlw	1
 25423  006122  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25424  006124  0E00               	movlw	0
 25425  006126  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25426  006128  0E94               	movlw	148
 25427  00612A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25428  00612C  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25429                           
 25430                           ;api.c: 444: system_delay_ms(10);
 25431  006130  0E0A               	movlw	10
 25432  006132  EC7D  F043         	call	_system_delay_ms
 25433                           
 25434                           ;api.c: 445: reboot();
 25435  006136  EC3C  F044         	call	_reboot	;wreg free
 25436                           
 25437                           ;api.c: 446: break;
 25438  00613A  0012               	return	
 25439  00613C                     
 25440                           ;api.c: 449: i2c_eeprom_writeByte(0x100, 0x78);
 25441  00613C  0E01               	movlw	1
 25442  00613E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25443  006140  0E00               	movlw	0
 25444  006142  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25445  006144  0E78               	movlw	120
 25446  006146  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25447  006148  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25448                           
 25449                           ;api.c: 450: system_delay_ms(10);
 25450  00614C  0E0A               	movlw	10
 25451  00614E  EC7D  F043         	call	_system_delay_ms
 25452                           
 25453                           ;api.c: 451: reboot();
 25454  006152  EC3C  F044         	call	_reboot	;wreg free
 25455                           
 25456                           ;api.c: 452: break;
 25457  006156  0012               	return	
 25458  006158                     
 25459                           ;api.c: 456: i2c_eeprom_writeByte(0x100, 0x78);
 25460  006158  0E01               	movlw	1
 25461  00615A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25462  00615C  0E00               	movlw	0
 25463  00615E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25464  006160  0E78               	movlw	120
 25465  006162  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25466  006164  EC73  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25467                           
 25468                           ;api.c: 457: system_delay_ms(10);
 25469  006168  0E0A               	movlw	10
 25470  00616A  EC7D  F043         	call	_system_delay_ms
 25471                           
 25472                           ;api.c: 458: reboot();
 25473  00616E  EC3C  F044         	call	_reboot	;wreg free
 25474                           
 25475                           ;api.c: 459: break;
 25476  006172  0012               	return	
 25477  006174                     
 25478                           ;api.c: 462: --os.encoderCount;
 25479  006174  0100               	movlb	0	; () banked
 25480  006176  07C5               	decf	_os& (0+255),f,b	;volatile
 25481                           
 25482                           ;api.c: 463: break;
 25483  006178  0012               	return	
 25484  00617A                     
 25485                           ;api.c: 466: ++os.encoderCount;
 25486                           
 25487                           ; BSR set to: 0
 25488  00617A  0100               	movlb	0	; () banked
 25489  00617C  2BC5               	incf	_os& (0+255),f,b	;volatile
 25490                           
 25491                           ;api.c: 467: break;
 25492  00617E  0012               	return	
 25493  006180                     
 25494                           ;api.c: 470: ++os.buttonCount;
 25495                           
 25496                           ; BSR set to: 0
 25497  006180  0100               	movlb	0	; () banked
 25498  006182  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
 25499                           
 25500                           ; BSR set to: 0
 25501                           ;api.c: 472: }
 25502                           
 25503                           ;api.c: 471: break;
 25504  006184  0012               	return	
 25505  006186                     l2715:
 25506                           
 25507                           ; BSR set to: 0
 25508  006186  502C               	movf	__parse_command_short@cmd,w,c
 25509                           
 25510                           ; Switch size 1, requested type "space"
 25511                           ; Number of cases is 7, Range of values is 32 to 62
 25512                           ; switch strategies available:
 25513                           ; Name         Instructions Cycles
 25514                           ; simple_byte           22    12 (average)
 25515                           ;	Chosen strategy is simple_byte
 25516  006188  0A20               	xorlw	32	; case 32
 25517  00618A  B4D8               	btfsc	status,2,c
 25518  00618C  D7BB               	goto	l2716
 25519  00618E  0A01               	xorlw	1	; case 33
 25520  006190  B4D8               	btfsc	status,2,c
 25521  006192  D7C6               	goto	l2718
 25522  006194  0A03               	xorlw	3	; case 34
 25523  006196  B4D8               	btfsc	status,2,c
 25524  006198  D7D1               	goto	l2719
 25525  00619A  0A01               	xorlw	1	; case 35
 25526  00619C  B4D8               	btfsc	status,2,c
 25527  00619E  D7DC               	goto	l2720
 25528  0061A0  0A1F               	xorlw	31	; case 60
 25529  0061A2  B4D8               	btfsc	status,2,c
 25530  0061A4  D7E7               	goto	l2721
 25531  0061A6  0A01               	xorlw	1	; case 61
 25532  0061A8  B4D8               	btfsc	status,2,c
 25533  0061AA  D7E7               	goto	l2722
 25534  0061AC  0A03               	xorlw	3	; case 62
 25535  0061AE  A4D8               	btfss	status,2,c
 25536  0061B0  0012               	return	
 25537  0061B2  D7E6               	goto	l2723
 25538  0061B4                     __end_of__parse_command_short:
 25539                           	opt stack 0
 25540                           tosu	equ	0xFFF
 25541                           tosh	equ	0xFFE
 25542                           tosl	equ	0xFFD
 25543                           pclath	equ	0xFFA
 25544                           tblptru	equ	0xFF8
 25545                           tblptrh	equ	0xFF7
 25546                           tblptrl	equ	0xFF6
 25547                           tablat	equ	0xFF5
 25548                           prodh	equ	0xFF4
 25549                           prodl	equ	0xFF3
 25550                           intcon	equ	0xFF2
 25551                           intcon2	equ	0xFF1
 25552                           intcon3	equ	0xFF0
 25553                           indf0	equ	0xFEF
 25554                           postinc0	equ	0xFEE
 25555                           fsr0h	equ	0xFEA
 25556                           fsr0l	equ	0xFE9
 25557                           wreg	equ	0xFE8
 25558                           indf1	equ	0xFE7
 25559                           postdec1	equ	0xFE5
 25560                           plusw1	equ	0xFE3
 25561                           fsr1h	equ	0xFE2
 25562                           fsr1l	equ	0xFE1
 25563                           indf2	equ	0xFDF
 25564                           postinc2	equ	0xFDE
 25565                           postdec2	equ	0xFDD
 25566                           plusw2	equ	0xFDB
 25567                           fsr2h	equ	0xFDA
 25568                           fsr2l	equ	0xFD9
 25569                           status	equ	0xFD8
 25570                           
 25571 ;; *************** function _system_delay_ms *****************
 25572 ;; Defined at:
 25573 ;;		line 63 in file "os.c"
 25574 ;; Parameters:    Size  Location     Type
 25575 ;;  ms              1    wreg     unsigned char 
 25576 ;; Auto vars:     Size  Location     Type
 25577 ;;  ms              1    1[COMRAM] unsigned char 
 25578 ;;  cntr            1    2[COMRAM] unsigned char 
 25579 ;; Return value:  Size  Location     Type
 25580 ;;                  1    wreg      void 
 25581 ;; Registers used:
 25582 ;;		wreg, status,2, status,0, cstack
 25583 ;; Tracked objects:
 25584 ;;		On entry : 0/0
 25585 ;;		On exit  : 0/0
 25586 ;;		Unchanged: 0/0
 25587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25591 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25592 ;;Total ram usage:        3 bytes
 25593 ;; Hardware stack levels used:    1
 25594 ;; This function calls:
 25595 ;;		Nothing
 25596 ;; This function is called by:
 25597 ;;		_system_minimal_init
 25598 ;;		__ui_encoder
 25599 ;;		__parse_command_short
 25600 ;; This function uses a non-reentrant model
 25601 ;;
 25602                           
 25603                           	psect	text121
 25604  0086FA                     __ptext121:
 25605                           	opt stack 0
 25606  0086FA                     _system_delay_ms:
 25607                           	opt stack 28
 25608                           
 25609                           ;incstack = 0
 25610                           ;system_delay_ms@ms stored from wreg
 25611  0086FA  6E02               	movwf	system_delay_ms@ms,c
 25612                           
 25613                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 25614  0086FC  0E00               	movlw	0
 25615  0086FE  6E03               	movwf	system_delay_ms@cntr,c
 25616  008700  D009               	goto	l1090
 25617  008702                     
 25618                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 25619  008702  0E10               	movlw	16
 25620  008704  6E01               	movwf	??_system_delay_ms& (0+255),c
 25621  008706  0E94               	movlw	148
 25622  008708                     u12937:
 25623  008708  2EE8               	decfsz	wreg,f,c
 25624  00870A  D7FE               	bra	u12937
 25625  00870C  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 25626  00870E  D7FC               	bra	u12937
 25627  008710  D000               	nop2	
 25628  008712  2A03               	incf	system_delay_ms@cntr,f,c
 25629  008714                     l1090:
 25630  008714  5002               	movf	system_delay_ms@ms,w,c
 25631  008716  5C03               	subwf	system_delay_ms@cntr,w,c
 25632  008718  B0D8               	btfsc	status,0,c
 25633  00871A  0012               	return	
 25634  00871C  D7F2               	goto	l1091
 25635  00871E                     __end_of_system_delay_ms:
 25636                           	opt stack 0
 25637                           tosu	equ	0xFFF
 25638                           tosh	equ	0xFFE
 25639                           tosl	equ	0xFFD
 25640                           pclath	equ	0xFFA
 25641                           tblptru	equ	0xFF8
 25642                           tblptrh	equ	0xFF7
 25643                           tblptrl	equ	0xFF6
 25644                           tablat	equ	0xFF5
 25645                           prodh	equ	0xFF4
 25646                           prodl	equ	0xFF3
 25647                           intcon	equ	0xFF2
 25648                           intcon2	equ	0xFF1
 25649                           intcon3	equ	0xFF0
 25650                           indf0	equ	0xFEF
 25651                           postinc0	equ	0xFEE
 25652                           fsr0h	equ	0xFEA
 25653                           fsr0l	equ	0xFE9
 25654                           wreg	equ	0xFE8
 25655                           indf1	equ	0xFE7
 25656                           postdec1	equ	0xFE5
 25657                           plusw1	equ	0xFE3
 25658                           fsr1h	equ	0xFE2
 25659                           fsr1l	equ	0xFE1
 25660                           indf2	equ	0xFDF
 25661                           postinc2	equ	0xFDE
 25662                           postdec2	equ	0xFDD
 25663                           plusw2	equ	0xFDB
 25664                           fsr2h	equ	0xFDA
 25665                           fsr2l	equ	0xFD9
 25666                           status	equ	0xFD8
 25667                           
 25668 ;; *************** function _reboot *****************
 25669 ;; Defined at:
 25670 ;;		line 259 in file "os.c"
 25671 ;; Parameters:    Size  Location     Type
 25672 ;;		None
 25673 ;; Auto vars:     Size  Location     Type
 25674 ;;		None
 25675 ;; Return value:  Size  Location     Type
 25676 ;;                  1    wreg      void 
 25677 ;; Registers used:
 25678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25679 ;; Tracked objects:
 25680 ;;		On entry : 0/0
 25681 ;;		On exit  : 0/0
 25682 ;;		Unchanged: 0/0
 25683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25688 ;;Total ram usage:        0 bytes
 25689 ;; Hardware stack levels used:    1
 25690 ;; Hardware stack levels required when called:    7
 25691 ;; This function calls:
 25692 ;;		_display_prepare
 25693 ;;		_display_update
 25694 ;;		_ui_get_status
 25695 ;; This function is called by:
 25696 ;;		__ui_encoder
 25697 ;;		__parse_command_short
 25698 ;; This function uses a non-reentrant model
 25699 ;;
 25700                           
 25701                           	psect	text122
 25702  008878                     __ptext122:
 25703                           	opt stack 0
 25704  008878                     _reboot:
 25705                           	opt stack 21
 25706                           
 25707                           ;os.c: 262: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 25708                           
 25709                           ;incstack = 0
 25710  008878  0E80               	movlw	128
 25711  00887A  0100               	movlb	0	; () banked
 25712  00887C  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 25713                           
 25714                           ; BSR set to: 0
 25715                           ;os.c: 263: display_prepare(os.display_mode);
 25716  00887E  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
 25717  008880  EC9D  F02C         	call	_display_prepare
 25718                           
 25719                           ;os.c: 264: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 25720  008884  EC46  F045         	call	_ui_get_status	;wreg free
 25721  008888  0A05               	xorlw	5
 25722  00888A  B4D8               	btfsc	status,2,c
 25723                           
 25724                           ;os.c: 265: {;os.c: 266: display_update();
 25725  00888C  EC01  F03A         	call	_display_update	;wreg free
 25726  008890                     
 25727                           ;os.c: 267: };os.c: 270: while(1);
 25728  008890  D7FF               	goto	l1117
 25729  008892                     __end_of_reboot:
 25730                           	opt stack 0
 25731                           tosu	equ	0xFFF
 25732                           tosh	equ	0xFFE
 25733                           tosl	equ	0xFFD
 25734                           pclath	equ	0xFFA
 25735                           tblptru	equ	0xFF8
 25736                           tblptrh	equ	0xFF7
 25737                           tblptrl	equ	0xFF6
 25738                           tablat	equ	0xFF5
 25739                           prodh	equ	0xFF4
 25740                           prodl	equ	0xFF3
 25741                           intcon	equ	0xFF2
 25742                           intcon2	equ	0xFF1
 25743                           intcon3	equ	0xFF0
 25744                           indf0	equ	0xFEF
 25745                           postinc0	equ	0xFEE
 25746                           fsr0h	equ	0xFEA
 25747                           fsr0l	equ	0xFE9
 25748                           wreg	equ	0xFE8
 25749                           indf1	equ	0xFE7
 25750                           postdec1	equ	0xFE5
 25751                           plusw1	equ	0xFE3
 25752                           fsr1h	equ	0xFE2
 25753                           fsr1l	equ	0xFE1
 25754                           indf2	equ	0xFDF
 25755                           postinc2	equ	0xFDE
 25756                           postdec2	equ	0xFDD
 25757                           plusw2	equ	0xFDB
 25758                           fsr2h	equ	0xFDA
 25759                           fsr2l	equ	0xFD9
 25760                           status	equ	0xFD8
 25761                           
 25762 ;; *************** function _ui_get_status *****************
 25763 ;; Defined at:
 25764 ;;		line 95 in file "ui.c"
 25765 ;; Parameters:    Size  Location     Type
 25766 ;;		None
 25767 ;; Auto vars:     Size  Location     Type
 25768 ;;		None
 25769 ;; Return value:  Size  Location     Type
 25770 ;;                  1    wreg      enum E7928
 25771 ;; Registers used:
 25772 ;;		wreg, status,2
 25773 ;; Tracked objects:
 25774 ;;		On entry : 0/0
 25775 ;;		On exit  : 0/0
 25776 ;;		Unchanged: 0/0
 25777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25782 ;;Total ram usage:        0 bytes
 25783 ;; Hardware stack levels used:    1
 25784 ;; This function calls:
 25785 ;;		Nothing
 25786 ;; This function is called by:
 25787 ;;		_main
 25788 ;;		_reboot
 25789 ;;		__fill_buffer_get_status
 25790 ;; This function uses a non-reentrant model
 25791 ;;
 25792                           
 25793                           	psect	text123
 25794  008A8C                     __ptext123:
 25795                           	opt stack 0
 25796  008A8C                     _ui_get_status:
 25797                           	opt stack 27
 25798                           
 25799                           ;ui.c: 97: return userInterfaceStatus;
 25800                           
 25801                           ;incstack = 0
 25802  008A8C  0100               	movlb	0	; () banked
 25803  008A8E  51E6               	movf	_userInterfaceStatus& (0+255),w,b
 25804  008A90  0012               	return	
 25805  008A92                     __end_of_ui_get_status:
 25806                           	opt stack 0
 25807                           tosu	equ	0xFFF
 25808                           tosh	equ	0xFFE
 25809                           tosl	equ	0xFFD
 25810                           pclath	equ	0xFFA
 25811                           tblptru	equ	0xFF8
 25812                           tblptrh	equ	0xFF7
 25813                           tblptrl	equ	0xFF6
 25814                           tablat	equ	0xFF5
 25815                           prodh	equ	0xFF4
 25816                           prodl	equ	0xFF3
 25817                           intcon	equ	0xFF2
 25818                           intcon2	equ	0xFF1
 25819                           intcon3	equ	0xFF0
 25820                           indf0	equ	0xFEF
 25821                           postinc0	equ	0xFEE
 25822                           fsr0h	equ	0xFEA
 25823                           fsr0l	equ	0xFE9
 25824                           wreg	equ	0xFE8
 25825                           indf1	equ	0xFE7
 25826                           postdec1	equ	0xFE5
 25827                           plusw1	equ	0xFE3
 25828                           fsr1h	equ	0xFE2
 25829                           fsr1l	equ	0xFE1
 25830                           indf2	equ	0xFDF
 25831                           postinc2	equ	0xFDE
 25832                           postdec2	equ	0xFDD
 25833                           plusw2	equ	0xFDB
 25834                           fsr2h	equ	0xFDA
 25835                           fsr2l	equ	0xFD9
 25836                           status	equ	0xFD8
 25837                           
 25838 ;; *************** function _display_update *****************
 25839 ;; Defined at:
 25840 ;;		line 555 in file "display.c"
 25841 ;; Parameters:    Size  Location     Type
 25842 ;;		None
 25843 ;; Auto vars:     Size  Location     Type
 25844 ;;		None
 25845 ;; Return value:  Size  Location     Type
 25846 ;;                  1    wreg      void 
 25847 ;; Registers used:
 25848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25849 ;; Tracked objects:
 25850 ;;		On entry : 0/0
 25851 ;;		On exit  : 0/0
 25852 ;;		Unchanged: 0/0
 25853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25858 ;;Total ram usage:        0 bytes
 25859 ;; Hardware stack levels used:    1
 25860 ;; Hardware stack levels required when called:    4
 25861 ;; This function calls:
 25862 ;;		_i2c_display_cursor
 25863 ;;		_i2c_display_write_fixed
 25864 ;; This function is called by:
 25865 ;;		_main
 25866 ;;		_reboot
 25867 ;; This function uses a non-reentrant model
 25868 ;;
 25869                           
 25870                           	psect	text124
 25871  007402                     __ptext124:
 25872                           	opt stack 0
 25873  007402                     _display_update:
 25874                           	opt stack 23
 25875                           
 25876                           ;display.c: 557: i2c_display_cursor(0, 0);
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;incstack = 0
 25880  007402  0E00               	movlw	0
 25881  007404  6E0E               	movwf	i2c_display_cursor@position,c
 25882  007406  0E00               	movlw	0
 25883  007408  EC8F  F043         	call	_i2c_display_cursor
 25884                           
 25885                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 25886  00740C  0E00               	movlw	low _display_content
 25887  00740E  6E06               	movwf	i2c_display_write_fixed@data,c
 25888  007410  0E02               	movlw	high _display_content
 25889  007412  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25890  007414  0E14               	movlw	20
 25891  007416  6E08               	movwf	i2c_display_write_fixed@length,c
 25892  007418  EC27  F03D         	call	_i2c_display_write_fixed	;wreg free
 25893                           
 25894                           ;display.c: 559: i2c_display_cursor(1, 0);
 25895  00741C  0E00               	movlw	0
 25896  00741E  6E0E               	movwf	i2c_display_cursor@position,c
 25897  007420  0E01               	movlw	1
 25898  007422  EC8F  F043         	call	_i2c_display_cursor
 25899                           
 25900                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 25901  007426  0E14               	movlw	low (_display_content+20)
 25902  007428  6E06               	movwf	i2c_display_write_fixed@data,c
 25903  00742A  0E02               	movlw	high (_display_content+20)
 25904  00742C  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25905  00742E  0E14               	movlw	20
 25906  007430  6E08               	movwf	i2c_display_write_fixed@length,c
 25907  007432  EC27  F03D         	call	_i2c_display_write_fixed	;wreg free
 25908                           
 25909                           ;display.c: 561: i2c_display_cursor(2, 0);
 25910  007436  0E00               	movlw	0
 25911  007438  6E0E               	movwf	i2c_display_cursor@position,c
 25912  00743A  0E02               	movlw	2
 25913  00743C  EC8F  F043         	call	_i2c_display_cursor
 25914                           
 25915                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 25916  007440  0E28               	movlw	low (_display_content+40)
 25917  007442  6E06               	movwf	i2c_display_write_fixed@data,c
 25918  007444  0E02               	movlw	high (_display_content+40)
 25919  007446  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25920  007448  0E14               	movlw	20
 25921  00744A  6E08               	movwf	i2c_display_write_fixed@length,c
 25922  00744C  EC27  F03D         	call	_i2c_display_write_fixed	;wreg free
 25923                           
 25924                           ;display.c: 563: i2c_display_cursor(3, 0);
 25925  007450  0E00               	movlw	0
 25926  007452  6E0E               	movwf	i2c_display_cursor@position,c
 25927  007454  0E03               	movlw	3
 25928  007456  EC8F  F043         	call	_i2c_display_cursor
 25929                           
 25930                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 25931  00745A  0E3C               	movlw	low (_display_content+60)
 25932  00745C  6E06               	movwf	i2c_display_write_fixed@data,c
 25933  00745E  0E02               	movlw	high (_display_content+60)
 25934  007460  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25935  007462  0E14               	movlw	20
 25936  007464  6E08               	movwf	i2c_display_write_fixed@length,c
 25937  007466  EC27  F03D         	call	_i2c_display_write_fixed	;wreg free
 25938  00746A  0012               	return		;funcret
 25939  00746C                     __end_of_display_update:
 25940                           	opt stack 0
 25941                           tosu	equ	0xFFF
 25942                           tosh	equ	0xFFE
 25943                           tosl	equ	0xFFD
 25944                           pclath	equ	0xFFA
 25945                           tblptru	equ	0xFF8
 25946                           tblptrh	equ	0xFF7
 25947                           tblptrl	equ	0xFF6
 25948                           tablat	equ	0xFF5
 25949                           prodh	equ	0xFF4
 25950                           prodl	equ	0xFF3
 25951                           intcon	equ	0xFF2
 25952                           intcon2	equ	0xFF1
 25953                           intcon3	equ	0xFF0
 25954                           indf0	equ	0xFEF
 25955                           postinc0	equ	0xFEE
 25956                           fsr0h	equ	0xFEA
 25957                           fsr0l	equ	0xFE9
 25958                           wreg	equ	0xFE8
 25959                           indf1	equ	0xFE7
 25960                           postdec1	equ	0xFE5
 25961                           plusw1	equ	0xFE3
 25962                           fsr1h	equ	0xFE2
 25963                           fsr1l	equ	0xFE1
 25964                           indf2	equ	0xFDF
 25965                           postinc2	equ	0xFDE
 25966                           postdec2	equ	0xFDD
 25967                           plusw2	equ	0xFDB
 25968                           fsr2h	equ	0xFDA
 25969                           fsr2l	equ	0xFD9
 25970                           status	equ	0xFD8
 25971                           
 25972 ;; *************** function _i2c_display_write_fixed *****************
 25973 ;; Defined at:
 25974 ;;		line 270 in file "i2c.c"
 25975 ;; Parameters:    Size  Location     Type
 25976 ;;  data            2    5[COMRAM] PTR unsigned char 
 25977 ;;		 -> display_content(80), 
 25978 ;;  length          1    7[COMRAM] unsigned char 
 25979 ;; Auto vars:     Size  Location     Type
 25980 ;;  pos             1    8[COMRAM] unsigned char 
 25981 ;; Return value:  Size  Location     Type
 25982 ;;                  1    wreg      void 
 25983 ;; Registers used:
 25984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25985 ;; Tracked objects:
 25986 ;;		On entry : 0/0
 25987 ;;		On exit  : 0/0
 25988 ;;		Unchanged: 0/0
 25989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25990 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25994 ;;Total ram usage:        4 bytes
 25995 ;; Hardware stack levels used:    1
 25996 ;; Hardware stack levels required when called:    1
 25997 ;; This function calls:
 25998 ;;		__i2c_send
 25999 ;;		__i2c_start
 26000 ;;		__i2c_stop
 26001 ;;		__i2c_wait_idle
 26002 ;;		_i2c_set_frequency
 26003 ;; This function is called by:
 26004 ;;		_display_update
 26005 ;; This function uses a non-reentrant model
 26006 ;;
 26007                           
 26008                           	psect	text125
 26009  007A4E                     __ptext125:
 26010                           	opt stack 0
 26011  007A4E                     _i2c_display_write_fixed:
 26012                           	opt stack 25
 26013                           
 26014                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26015                           
 26016                           ;incstack = 0
 26017  007A4E  0E02               	movlw	2
 26018  007A50  ECB5  F042         	call	_i2c_set_frequency
 26019                           
 26020                           ;i2c.c: 277: _i2c_wait_idle();
 26021  007A54  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 26022                           
 26023                           ;i2c.c: 278: _i2c_start();
 26024  007A58  EC32  F045         	call	__i2c_start	;wreg free
 26025                           
 26026                           ;i2c.c: 279: _i2c_wait_idle();
 26027  007A5C  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 26028                           
 26029                           ;i2c.c: 280: _i2c_send(0b01111000);
 26030  007A60  0E78               	movlw	120
 26031  007A62  EC36  F045         	call	__i2c_send
 26032                           
 26033                           ;i2c.c: 281: _i2c_wait_idle();
 26034  007A66  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 26035                           
 26036                           ;i2c.c: 282: _i2c_send(0b01000000);
 26037  007A6A  0E40               	movlw	64
 26038  007A6C  EC36  F045         	call	__i2c_send
 26039                           
 26040                           ;i2c.c: 283: _i2c_wait_idle();
 26041  007A70  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 26042                           
 26043                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 26044  007A74  0E00               	movlw	0
 26045  007A76  6E09               	movwf	i2c_display_write_fixed@pos,c
 26046  007A78  D00E               	goto	l1232
 26047  007A7A                     
 26048                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 26049  007A7A  5009               	movf	i2c_display_write_fixed@pos,w,c
 26050  007A7C  0D01               	mullw	1
 26051  007A7E  50F3               	movf	prodl,w,c
 26052  007A80  2406               	addwf	i2c_display_write_fixed@data,w,c
 26053  007A82  6ED9               	movwf	fsr2l,c
 26054  007A84  50F4               	movf	prodh,w,c
 26055  007A86  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26056  007A88  6EDA               	movwf	fsr2h,c
 26057  007A8A  50DF               	movf	indf2,w,c
 26058  007A8C  EC36  F045         	call	__i2c_send
 26059                           
 26060                           ;i2c.c: 289: _i2c_wait_idle();
 26061  007A90  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 26062  007A94  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26063  007A96                     l1232:
 26064  007A96  5008               	movf	i2c_display_write_fixed@length,w,c
 26065  007A98  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26066  007A9A  A0D8               	btfss	status,0,c
 26067  007A9C  D7EE               	goto	l1233
 26068                           
 26069                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 26070  007A9E  EC2E  F045         	call	__i2c_stop	;wreg free
 26071  007AA2  0012               	return		;funcret
 26072  007AA4                     __end_of_i2c_display_write_fixed:
 26073                           	opt stack 0
 26074                           tosu	equ	0xFFF
 26075                           tosh	equ	0xFFE
 26076                           tosl	equ	0xFFD
 26077                           pclath	equ	0xFFA
 26078                           tblptru	equ	0xFF8
 26079                           tblptrh	equ	0xFF7
 26080                           tblptrl	equ	0xFF6
 26081                           tablat	equ	0xFF5
 26082                           prodh	equ	0xFF4
 26083                           prodl	equ	0xFF3
 26084                           intcon	equ	0xFF2
 26085                           intcon2	equ	0xFF1
 26086                           intcon3	equ	0xFF0
 26087                           indf0	equ	0xFEF
 26088                           postinc0	equ	0xFEE
 26089                           fsr0h	equ	0xFEA
 26090                           fsr0l	equ	0xFE9
 26091                           wreg	equ	0xFE8
 26092                           indf1	equ	0xFE7
 26093                           postdec1	equ	0xFE5
 26094                           plusw1	equ	0xFE3
 26095                           fsr1h	equ	0xFE2
 26096                           fsr1l	equ	0xFE1
 26097                           indf2	equ	0xFDF
 26098                           postinc2	equ	0xFDE
 26099                           postdec2	equ	0xFDD
 26100                           plusw2	equ	0xFDB
 26101                           fsr2h	equ	0xFDA
 26102                           fsr2l	equ	0xFD9
 26103                           status	equ	0xFD8
 26104                           
 26105 ;; *************** function _i2c_display_cursor *****************
 26106 ;; Defined at:
 26107 ;;		line 230 in file "i2c.c"
 26108 ;; Parameters:    Size  Location     Type
 26109 ;;  line            1    wreg     unsigned char 
 26110 ;;  position        1   13[COMRAM] unsigned char 
 26111 ;; Auto vars:     Size  Location     Type
 26112 ;;  line            1   14[COMRAM] unsigned char 
 26113 ;;  address         1   15[COMRAM] unsigned char 
 26114 ;; Return value:  Size  Location     Type
 26115 ;;                  1    wreg      void 
 26116 ;; Registers used:
 26117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26118 ;; Tracked objects:
 26119 ;;		On entry : 0/0
 26120 ;;		On exit  : 0/0
 26121 ;;		Unchanged: 0/0
 26122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26127 ;;Total ram usage:        3 bytes
 26128 ;; Hardware stack levels used:    1
 26129 ;; Hardware stack levels required when called:    3
 26130 ;; This function calls:
 26131 ;;		__ic2_display_set_address
 26132 ;;		_i2c_set_frequency
 26133 ;; This function is called by:
 26134 ;;		_display_update
 26135 ;; This function uses a non-reentrant model
 26136 ;;
 26137                           
 26138                           	psect	text126
 26139  00871E                     __ptext126:
 26140                           	opt stack 0
 26141  00871E                     _i2c_display_cursor:
 26142                           	opt stack 23
 26143                           
 26144                           ;incstack = 0
 26145                           ;i2c_display_cursor@line stored from wreg
 26146  00871E  6E0F               	movwf	i2c_display_cursor@line,c
 26147                           
 26148                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 26149  008720  0E03               	movlw	3
 26150  008722  160F               	andwf	i2c_display_cursor@line,f,c
 26151                           
 26152                           ;i2c.c: 236: address = line<<5;
 26153  008724  380F               	swapf	i2c_display_cursor@line,w,c
 26154  008726  46E8               	rlncf	wreg,f,c
 26155  008728  0BE0               	andlw	224
 26156  00872A  6E10               	movwf	i2c_display_cursor@address,c
 26157                           
 26158                           ;i2c.c: 237: position &= 0b11111;
 26159  00872C  0E1F               	movlw	31
 26160  00872E  160E               	andwf	i2c_display_cursor@position,f,c
 26161                           
 26162                           ;i2c.c: 238: address |= position;
 26163  008730  500E               	movf	i2c_display_cursor@position,w,c
 26164  008732  1210               	iorwf	i2c_display_cursor@address,f,c
 26165                           
 26166                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26167  008734  0E02               	movlw	2
 26168  008736  ECB5  F042         	call	_i2c_set_frequency
 26169                           
 26170                           ;i2c.c: 244: _ic2_display_set_address(address);
 26171  00873A  5010               	movf	i2c_display_cursor@address,w,c
 26172  00873C  EC31  F043         	call	__ic2_display_set_address
 26173  008740  0012               	return		;funcret
 26174  008742                     __end_of_i2c_display_cursor:
 26175                           	opt stack 0
 26176                           tosu	equ	0xFFF
 26177                           tosh	equ	0xFFE
 26178                           tosl	equ	0xFFD
 26179                           pclath	equ	0xFFA
 26180                           tblptru	equ	0xFF8
 26181                           tblptrh	equ	0xFF7
 26182                           tblptrl	equ	0xFF6
 26183                           tablat	equ	0xFF5
 26184                           prodh	equ	0xFF4
 26185                           prodl	equ	0xFF3
 26186                           intcon	equ	0xFF2
 26187                           intcon2	equ	0xFF1
 26188                           intcon3	equ	0xFF0
 26189                           indf0	equ	0xFEF
 26190                           postinc0	equ	0xFEE
 26191                           fsr0h	equ	0xFEA
 26192                           fsr0l	equ	0xFE9
 26193                           wreg	equ	0xFE8
 26194                           indf1	equ	0xFE7
 26195                           postdec1	equ	0xFE5
 26196                           plusw1	equ	0xFE3
 26197                           fsr1h	equ	0xFE2
 26198                           fsr1l	equ	0xFE1
 26199                           indf2	equ	0xFDF
 26200                           postinc2	equ	0xFDE
 26201                           postdec2	equ	0xFDD
 26202                           plusw2	equ	0xFDB
 26203                           fsr2h	equ	0xFDA
 26204                           fsr2l	equ	0xFD9
 26205                           status	equ	0xFD8
 26206                           
 26207 ;; *************** function __ic2_display_set_address *****************
 26208 ;; Defined at:
 26209 ;;		line 194 in file "i2c.c"
 26210 ;; Parameters:    Size  Location     Type
 26211 ;;  address         1    wreg     unsigned char 
 26212 ;; Auto vars:     Size  Location     Type
 26213 ;;  address         1   10[COMRAM] unsigned char 
 26214 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26215 ;; Return value:  Size  Location     Type
 26216 ;;                  1    wreg      void 
 26217 ;; Registers used:
 26218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26219 ;; Tracked objects:
 26220 ;;		On entry : 0/0
 26221 ;;		On exit  : 0/0
 26222 ;;		Unchanged: 0/0
 26223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26225 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26228 ;;Total ram usage:        3 bytes
 26229 ;; Hardware stack levels used:    1
 26230 ;; Hardware stack levels required when called:    2
 26231 ;; This function calls:
 26232 ;;		__i2c_write
 26233 ;;		_i2c_set_frequency
 26234 ;; This function is called by:
 26235 ;;		_i2c_display_cursor
 26236 ;; This function uses a non-reentrant model
 26237 ;;
 26238                           
 26239                           	psect	text127
 26240  008662                     __ptext127:
 26241                           	opt stack 0
 26242  008662                     __ic2_display_set_address:
 26243                           	opt stack 23
 26244                           
 26245                           ;incstack = 0
 26246                           ;__ic2_display_set_address@address stored from wreg
 26247  008662  6E0B               	movwf	__ic2_display_set_address@address,c
 26248                           
 26249                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 26250  008664  0E00               	movlw	0
 26251  008666  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26252                           
 26253                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 26254  008668  500B               	movf	__ic2_display_set_address@address,w,c
 26255  00866A  0980               	iorlw	128
 26256  00866C  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26257                           
 26258                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26259  00866E  0E02               	movlw	2
 26260  008670  ECB5  F042         	call	_i2c_set_frequency
 26261                           
 26262                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 26263  008674  0E0C               	movlw	low __ic2_display_set_address@data_array
 26264  008676  6E06               	movwf	__i2c_write@data,c
 26265  008678  0E00               	movlw	high __ic2_display_set_address@data_array
 26266  00867A  6E07               	movwf	__i2c_write@data+1,c
 26267  00867C  0E02               	movlw	2
 26268  00867E  6E08               	movwf	__i2c_write@length,c
 26269  008680  0E78               	movlw	120
 26270  008682  EC3F  F03F         	call	__i2c_write
 26271  008686  0012               	return		;funcret
 26272  008688                     __end_of__ic2_display_set_address:
 26273                           	opt stack 0
 26274                           tosu	equ	0xFFF
 26275                           tosh	equ	0xFFE
 26276                           tosl	equ	0xFFD
 26277                           pclath	equ	0xFFA
 26278                           tblptru	equ	0xFF8
 26279                           tblptrh	equ	0xFF7
 26280                           tblptrl	equ	0xFF6
 26281                           tablat	equ	0xFF5
 26282                           prodh	equ	0xFF4
 26283                           prodl	equ	0xFF3
 26284                           intcon	equ	0xFF2
 26285                           intcon2	equ	0xFF1
 26286                           intcon3	equ	0xFF0
 26287                           indf0	equ	0xFEF
 26288                           postinc0	equ	0xFEE
 26289                           fsr0h	equ	0xFEA
 26290                           fsr0l	equ	0xFE9
 26291                           wreg	equ	0xFE8
 26292                           indf1	equ	0xFE7
 26293                           postdec1	equ	0xFE5
 26294                           plusw1	equ	0xFE3
 26295                           fsr1h	equ	0xFE2
 26296                           fsr1l	equ	0xFE1
 26297                           indf2	equ	0xFDF
 26298                           postinc2	equ	0xFDE
 26299                           postdec2	equ	0xFDD
 26300                           plusw2	equ	0xFDB
 26301                           fsr2h	equ	0xFDA
 26302                           fsr2l	equ	0xFD9
 26303                           status	equ	0xFD8
 26304                           
 26305 ;; *************** function _display_prepare *****************
 26306 ;; Defined at:
 26307 ;;		line 286 in file "display.c"
 26308 ;; Parameters:    Size  Location     Type
 26309 ;;  mode            1    wreg     unsigned char 
 26310 ;; Auto vars:     Size  Location     Type
 26311 ;;  mode            1   42[COMRAM] unsigned char 
 26312 ;; Return value:  Size  Location     Type
 26313 ;;                  1    wreg      void 
 26314 ;; Registers used:
 26315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26316 ;; Tracked objects:
 26317 ;;		On entry : 0/0
 26318 ;;		On exit  : 0/0
 26319 ;;		Unchanged: 0/0
 26320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26325 ;;Total ram usage:        3 bytes
 26326 ;; Hardware stack levels used:    1
 26327 ;; Hardware stack levels required when called:    6
 26328 ;; This function calls:
 26329 ;;		__display_checked
 26330 ;;		__display_clear
 26331 ;;		__display_done
 26332 ;;		__display_failed
 26333 ;;		__display_found
 26334 ;;		__display_programming
 26335 ;;		__display_rebooting
 26336 ;;		__display_search
 26337 ;;		__display_start
 26338 ;;		__display_verify
 26339 ;; This function is called by:
 26340 ;;		_main
 26341 ;;		_reboot
 26342 ;; This function uses a non-reentrant model
 26343 ;;
 26344                           
 26345                           	psect	text128
 26346  00593A                     __ptext128:
 26347                           	opt stack 0
 26348  00593A                     _display_prepare:
 26349                           	opt stack 21
 26350                           
 26351                           ;incstack = 0
 26352                           ;display_prepare@mode stored from wreg
 26353  00593A  6E2B               	movwf	display_prepare@mode,c
 26354                           
 26355                           ;display.c: 288: _display_clear();
 26356  00593C  EC1B  F03F         	call	__display_clear	;wreg free
 26357                           
 26358                           ;display.c: 290: switch(mode&0xF0)
 26359  005940  D01B               	goto	l1542
 26360  005942                     
 26361                           ;display.c: 293: _display_start();
 26362  005942  EC6B  F015         	call	__display_start	;wreg free
 26363                           
 26364                           ;display.c: 294: break;
 26365  005946  D047               	goto	l1553
 26366  005948                     
 26367                           ;display.c: 297: _display_search();
 26368  005948  ECDE  F01D         	call	__display_search	;wreg free
 26369                           
 26370                           ;display.c: 298: break;
 26371  00594C  D044               	goto	l1553
 26372  00594E                     
 26373                           ;display.c: 301: _display_found();
 26374  00594E  EC5A  F017         	call	__display_found	;wreg free
 26375                           
 26376                           ;display.c: 302: break;
 26377  005952  D041               	goto	l1553
 26378  005954                     
 26379                           ;display.c: 305: _display_verify();
 26380  005954  EC11  F021         	call	__display_verify	;wreg free
 26381                           
 26382                           ;display.c: 306: break;
 26383  005958  D03E               	goto	l1553
 26384  00595A                     
 26385                           ;display.c: 309: _display_checked();
 26386  00595A  ECAC  F01B         	call	__display_checked	;wreg free
 26387                           
 26388                           ;display.c: 310: break;
 26389  00595E  D03B               	goto	l1553
 26390  005960                     
 26391                           ;display.c: 313: _display_failed();
 26392  005960  EC6E  F009         	call	__display_failed	;wreg free
 26393                           
 26394                           ;display.c: 314: break;
 26395  005964  D038               	goto	l1553
 26396  005966                     
 26397                           ;display.c: 317: _display_programming();
 26398  005966  EC36  F019         	call	__display_programming	;wreg free
 26399                           
 26400                           ;display.c: 318: break;
 26401  00596A  D035               	goto	l1553
 26402  00596C                     
 26403                           ;display.c: 321: _display_done();
 26404  00596C  EC6A  F01C         	call	__display_done	;wreg free
 26405                           
 26406                           ;display.c: 322: break;
 26407  005970  D032               	goto	l1553
 26408  005972                     
 26409                           ;display.c: 325: _display_rebooting();
 26410  005972  EC52  F03D         	call	__display_rebooting	;wreg free
 26411                           
 26412                           ;display.c: 327: }
 26413                           
 26414                           ;display.c: 326: break;
 26415  005976  D02F               	goto	l1553
 26416  005978                     l1542:
 26417  005978  502B               	movf	display_prepare@mode,w,c
 26418  00597A  0BF0               	andlw	240
 26419  00597C  6E29               	movwf	??_display_prepare& (0+255),c
 26420  00597E  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26421                           
 26422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26423                           ; Switch size 1, requested type "space"
 26424                           ; Number of cases is 1, Range of values is 0 to 0
 26425                           ; switch strategies available:
 26426                           ; Name         Instructions Cycles
 26427                           ; simple_byte            4     3 (average)
 26428                           ;	Chosen strategy is simple_byte
 26429  005980  502A               	movf	??_display_prepare+1,w,c
 26430  005982  0A00               	xorlw	0	; case 0
 26431  005984  A4D8               	btfss	status,2,c
 26432  005986  D027               	goto	l1553
 26433                           
 26434                           ; Switch size 1, requested type "space"
 26435                           ; Number of cases is 9, Range of values is 0 to 128
 26436                           ; switch strategies available:
 26437                           ; Name         Instructions Cycles
 26438                           ; simple_byte           28    15 (average)
 26439                           ;	Chosen strategy is simple_byte
 26440  005988  5029               	movf	??_display_prepare,w,c
 26441  00598A  0A00               	xorlw	0	; case 0
 26442  00598C  B4D8               	btfsc	status,2,c
 26443  00598E  D7D9               	goto	l1543
 26444  005990  0A10               	xorlw	16	; case 16
 26445  005992  B4D8               	btfsc	status,2,c
 26446  005994  D7D9               	goto	l1545
 26447  005996  0A30               	xorlw	48	; case 32
 26448  005998  B4D8               	btfsc	status,2,c
 26449  00599A  D7D9               	goto	l1546
 26450  00599C  0A10               	xorlw	16	; case 48
 26451  00599E  B4D8               	btfsc	status,2,c
 26452  0059A0  D7D9               	goto	l1547
 26453  0059A2  0A70               	xorlw	112	; case 64
 26454  0059A4  B4D8               	btfsc	status,2,c
 26455  0059A6  D7D9               	goto	l1548
 26456  0059A8  0A10               	xorlw	16	; case 80
 26457  0059AA  B4D8               	btfsc	status,2,c
 26458  0059AC  D7D9               	goto	l1549
 26459  0059AE  0A30               	xorlw	48	; case 96
 26460  0059B0  B4D8               	btfsc	status,2,c
 26461  0059B2  D7D9               	goto	l1550
 26462  0059B4  0A10               	xorlw	16	; case 112
 26463  0059B6  B4D8               	btfsc	status,2,c
 26464  0059B8  D7D9               	goto	l1551
 26465  0059BA  0AF0               	xorlw	240	; case 128
 26466  0059BC  B4D8               	btfsc	status,2,c
 26467  0059BE  D7D9               	goto	l1552
 26468                           
 26469                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 26470  0059C0  D00A               	goto	l1553
 26471  0059C2                     
 26472                           ;display.c: 333: display_content[0][17] = '.';
 26473  0059C2  0E2E               	movlw	46
 26474  0059C4  0102               	movlb	2	; () banked
 26475  0059C6  6F11               	movwf	(_display_content+17)& (0+255),b
 26476  0059C8                     l1555:
 26477                           
 26478                           ;display.c: 336: display_content[0][16] = '.';
 26479  0059C8  0E2E               	movlw	46
 26480  0059CA  0102               	movlb	2	; () banked
 26481  0059CC  6F10               	movwf	(_display_content+16)& (0+255),b
 26482  0059CE                     l1556:
 26483                           
 26484                           ;display.c: 339: display_content[0][15] = '.';
 26485  0059CE  0E2E               	movlw	46
 26486  0059D0  0102               	movlb	2	; () banked
 26487  0059D2  6F0F               	movwf	(_display_content+15)& (0+255),b
 26488                           
 26489                           ;display.c: 341: }
 26490  0059D4  D015               	goto	l1557
 26491  0059D6                     l1553:
 26492                           
 26493                           ; BSR set to: 2
 26494  0059D6  0100               	movlb	0	; () banked
 26495  0059D8  39C7               	swapf	(_os+2)& (0+255),w,b	;volatile
 26496  0059DA  42E8               	rrncf	wreg,f,c
 26497  0059DC  0B07               	andlw	7
 26498  0059DE  0B03               	andlw	3
 26499  0059E0  6E29               	movwf	??_display_prepare& (0+255),c
 26500  0059E2  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26501                           
 26502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26503                           ; Switch size 1, requested type "space"
 26504                           ; Number of cases is 1, Range of values is 0 to 0
 26505                           ; switch strategies available:
 26506                           ; Name         Instructions Cycles
 26507                           ; simple_byte            4     3 (average)
 26508                           ;	Chosen strategy is simple_byte
 26509  0059E4  502A               	movf	??_display_prepare+1,w,c
 26510  0059E6  0A00               	xorlw	0	; case 0
 26511  0059E8  A4D8               	btfss	status,2,c
 26512  0059EA  D00A               	goto	l1557
 26513                           
 26514                           ; BSR set to: 0
 26515                           ; Switch size 1, requested type "space"
 26516                           ; Number of cases is 3, Range of values is 1 to 3
 26517                           ; switch strategies available:
 26518                           ; Name         Instructions Cycles
 26519                           ; simple_byte           10     6 (average)
 26520                           ;	Chosen strategy is simple_byte
 26521  0059EC  5029               	movf	??_display_prepare,w,c
 26522  0059EE  0A01               	xorlw	1	; case 1
 26523  0059F0  B4D8               	btfsc	status,2,c
 26524  0059F2  D7ED               	goto	l1556
 26525  0059F4  0A03               	xorlw	3	; case 2
 26526  0059F6  B4D8               	btfsc	status,2,c
 26527  0059F8  D7E7               	goto	l1555
 26528  0059FA  0A01               	xorlw	1	; case 3
 26529  0059FC  B4D8               	btfsc	status,2,c
 26530  0059FE  D7E1               	goto	l1554
 26531  005A00                     l1557:
 26532                           
 26533                           ;display.c: 345: if(INTCONbits.GIE)
 26534  005A00  AEF2               	btfss	intcon,7,c	;volatile
 26535  005A02  0012               	return	
 26536                           
 26537                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 26538  005A04  0E49               	movlw	73
 26539  005A06  0102               	movlb	2	; () banked
 26540  005A08  6F12               	movwf	(_display_content+18)& (0+255),b
 26541  005A0A  0012               	return	
 26542  005A0C                     __end_of_display_prepare:
 26543                           	opt stack 0
 26544                           tosu	equ	0xFFF
 26545                           tosh	equ	0xFFE
 26546                           tosl	equ	0xFFD
 26547                           pclath	equ	0xFFA
 26548                           tblptru	equ	0xFF8
 26549                           tblptrh	equ	0xFF7
 26550                           tblptrl	equ	0xFF6
 26551                           tablat	equ	0xFF5
 26552                           prodh	equ	0xFF4
 26553                           prodl	equ	0xFF3
 26554                           intcon	equ	0xFF2
 26555                           intcon2	equ	0xFF1
 26556                           intcon3	equ	0xFF0
 26557                           indf0	equ	0xFEF
 26558                           postinc0	equ	0xFEE
 26559                           fsr0h	equ	0xFEA
 26560                           fsr0l	equ	0xFE9
 26561                           wreg	equ	0xFE8
 26562                           indf1	equ	0xFE7
 26563                           postdec1	equ	0xFE5
 26564                           plusw1	equ	0xFE3
 26565                           fsr1h	equ	0xFE2
 26566                           fsr1l	equ	0xFE1
 26567                           indf2	equ	0xFDF
 26568                           postinc2	equ	0xFDE
 26569                           postdec2	equ	0xFDD
 26570                           plusw2	equ	0xFDB
 26571                           fsr2h	equ	0xFDA
 26572                           fsr2l	equ	0xFD9
 26573                           status	equ	0xFD8
 26574                           
 26575 ;; *************** function __display_verify *****************
 26576 ;; Defined at:
 26577 ;;		line 417 in file "display.c"
 26578 ;; Parameters:    Size  Location     Type
 26579 ;;		None
 26580 ;; Auto vars:     Size  Location     Type
 26581 ;;  cntr            1   32[COMRAM] unsigned char 
 26582 ;;  start           1    0        unsigned char 
 26583 ;; Return value:  Size  Location     Type
 26584 ;;                  1    wreg      void 
 26585 ;; Registers used:
 26586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26587 ;; Tracked objects:
 26588 ;;		On entry : 0/0
 26589 ;;		On exit  : 0/0
 26590 ;;		Unchanged: 0/0
 26591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26596 ;;Total ram usage:        3 bytes
 26597 ;; Hardware stack levels used:    1
 26598 ;; Hardware stack levels required when called:    4
 26599 ;; This function calls:
 26600 ;;		__display_itoa_u16
 26601 ;;		_bootloader_get_entries
 26602 ;; This function is called by:
 26603 ;;		_display_prepare
 26604 ;; This function uses a non-reentrant model
 26605 ;;
 26606                           
 26607                           	psect	text129
 26608  004222                     __ptext129:
 26609                           	opt stack 0
 26610  004222                     __display_verify:
 26611                           	opt stack 22
 26612                           
 26613                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 26614                           
 26615                           ;incstack = 0
 26616  004222  0E00               	movlw	0
 26617  004224  6E21               	movwf	__display_verify@cntr,c
 26618                           
 26619                           ;display.c: 422: while(verify_line1[cntr])
 26620  004226  D017               	goto	l1610
 26621  004228                     
 26622                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 26623  004228  5021               	movf	__display_verify@cntr,w,c
 26624  00422A  0D01               	mullw	1
 26625  00422C  0EC4               	movlw	low _verify_line1
 26626  00422E  24F3               	addwf	prodl,w,c
 26627  004230  6EF6               	movwf	tblptrl,c
 26628  004232  0E8D               	movlw	high _verify_line1
 26629  004234  20F4               	addwfc	prodh,w,c
 26630  004236  6EF7               	movwf	tblptrh,c
 26631  004238                     	if	1	;There are 3 active tblptr bytes
 26632  004238  6AF8               	clrf	tblptru,c
 26633  00423A  0E00               	movlw	low (__mediumconst shr (0+16))
 26634  00423C  22F8               	addwfc	tblptru,f,c
 26635  00423E                     	endif
 26636  00423E  5021               	movf	__display_verify@cntr,w,c
 26637  004240  0D01               	mullw	1
 26638  004242  0E00               	movlw	low _display_content
 26639  004244  24F3               	addwf	prodl,w,c
 26640  004246  6ED9               	movwf	fsr2l,c
 26641  004248  0E02               	movlw	high _display_content
 26642  00424A  20F4               	addwfc	prodh,w,c
 26643  00424C  6EDA               	movwf	fsr2h,c
 26644  00424E  0008               	tblrd		*
 26645  004250  CFF5 FFDF          	movff	tablat,indf2
 26646  004254  2A21               	incf	__display_verify@cntr,f,c
 26647  004256                     l1610:
 26648  004256  5021               	movf	__display_verify@cntr,w,c
 26649  004258  0D01               	mullw	1
 26650  00425A  0EC4               	movlw	low _verify_line1
 26651  00425C  24F3               	addwf	prodl,w,c
 26652  00425E  6EF6               	movwf	tblptrl,c
 26653  004260  0E8D               	movlw	high _verify_line1
 26654  004262  20F4               	addwfc	prodh,w,c
 26655  004264  6EF7               	movwf	tblptrh,c
 26656  004266                     	if	1	;There are 3 active tblptr bytes
 26657  004266  6AF8               	clrf	tblptru,c
 26658  004268  0E00               	movlw	low (__mediumconst shr (0+16))
 26659  00426A  22F8               	addwfc	tblptru,f,c
 26660  00426C                     	endif
 26661  00426C  0008               	tblrd		*
 26662  00426E  50F5               	movf	tablat,w,c
 26663  004270  0900               	iorlw	0
 26664  004272  A4D8               	btfss	status,2,c
 26665  004274  D7D9               	goto	l1611
 26666                           
 26667                           ;display.c: 424: cntr = 0;
 26668  004276  0E00               	movlw	0
 26669  004278  6E21               	movwf	__display_verify@cntr,c
 26670                           
 26671                           ;display.c: 425: while(verify_line2[cntr])
 26672  00427A  D017               	goto	l1613
 26673  00427C                     
 26674                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 26675  00427C  5021               	movf	__display_verify@cntr,w,c
 26676  00427E  0D01               	mullw	1
 26677  004280  0E4C               	movlw	low _verify_line2
 26678  004282  24F3               	addwf	prodl,w,c
 26679  004284  6EF6               	movwf	tblptrl,c
 26680  004286  0E8E               	movlw	high _verify_line2
 26681  004288  20F4               	addwfc	prodh,w,c
 26682  00428A  6EF7               	movwf	tblptrh,c
 26683  00428C                     	if	1	;There are 3 active tblptr bytes
 26684  00428C  6AF8               	clrf	tblptru,c
 26685  00428E  0E00               	movlw	low (__mediumconst shr (0+16))
 26686  004290  22F8               	addwfc	tblptru,f,c
 26687  004292                     	endif
 26688  004292  5021               	movf	__display_verify@cntr,w,c
 26689  004294  0D01               	mullw	1
 26690  004296  0E14               	movlw	low (_display_content+20)
 26691  004298  24F3               	addwf	prodl,w,c
 26692  00429A  6ED9               	movwf	fsr2l,c
 26693  00429C  0E02               	movlw	high (_display_content+20)
 26694  00429E  20F4               	addwfc	prodh,w,c
 26695  0042A0  6EDA               	movwf	fsr2h,c
 26696  0042A2  0008               	tblrd		*
 26697  0042A4  CFF5 FFDF          	movff	tablat,indf2
 26698  0042A8  2A21               	incf	__display_verify@cntr,f,c
 26699  0042AA                     l1613:
 26700  0042AA  5021               	movf	__display_verify@cntr,w,c
 26701  0042AC  0D01               	mullw	1
 26702  0042AE  0E4C               	movlw	low _verify_line2
 26703  0042B0  24F3               	addwf	prodl,w,c
 26704  0042B2  6EF6               	movwf	tblptrl,c
 26705  0042B4  0E8E               	movlw	high _verify_line2
 26706  0042B6  20F4               	addwfc	prodh,w,c
 26707  0042B8  6EF7               	movwf	tblptrh,c
 26708  0042BA                     	if	1	;There are 3 active tblptr bytes
 26709  0042BA  6AF8               	clrf	tblptru,c
 26710  0042BC  0E00               	movlw	low (__mediumconst shr (0+16))
 26711  0042BE  22F8               	addwfc	tblptru,f,c
 26712  0042C0                     	endif
 26713  0042C0  0008               	tblrd		*
 26714  0042C2  50F5               	movf	tablat,w,c
 26715  0042C4  0900               	iorlw	0
 26716  0042C6  A4D8               	btfss	status,2,c
 26717  0042C8  D7D9               	goto	l1614
 26718                           
 26719                           ;display.c: 427: cntr = 0;
 26720  0042CA  0E00               	movlw	0
 26721  0042CC  6E21               	movwf	__display_verify@cntr,c
 26722                           
 26723                           ;display.c: 428: while(verify_line3[cntr])
 26724  0042CE  D017               	goto	l1616
 26725  0042D0                     
 26726                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 26727  0042D0  5021               	movf	__display_verify@cntr,w,c
 26728  0042D2  0D01               	mullw	1
 26729  0042D4  0E8A               	movlw	low _verify_line3
 26730  0042D6  24F3               	addwf	prodl,w,c
 26731  0042D8  6EF6               	movwf	tblptrl,c
 26732  0042DA  0E8E               	movlw	high _verify_line3
 26733  0042DC  20F4               	addwfc	prodh,w,c
 26734  0042DE  6EF7               	movwf	tblptrh,c
 26735  0042E0                     	if	1	;There are 3 active tblptr bytes
 26736  0042E0  6AF8               	clrf	tblptru,c
 26737  0042E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26738  0042E4  22F8               	addwfc	tblptru,f,c
 26739  0042E6                     	endif
 26740  0042E6  5021               	movf	__display_verify@cntr,w,c
 26741  0042E8  0D01               	mullw	1
 26742  0042EA  0E28               	movlw	low (_display_content+40)
 26743  0042EC  24F3               	addwf	prodl,w,c
 26744  0042EE  6ED9               	movwf	fsr2l,c
 26745  0042F0  0E02               	movlw	high (_display_content+40)
 26746  0042F2  20F4               	addwfc	prodh,w,c
 26747  0042F4  6EDA               	movwf	fsr2h,c
 26748  0042F6  0008               	tblrd		*
 26749  0042F8  CFF5 FFDF          	movff	tablat,indf2
 26750  0042FC  2A21               	incf	__display_verify@cntr,f,c
 26751  0042FE                     l1616:
 26752  0042FE  5021               	movf	__display_verify@cntr,w,c
 26753  004300  0D01               	mullw	1
 26754  004302  0E8A               	movlw	low _verify_line3
 26755  004304  24F3               	addwf	prodl,w,c
 26756  004306  6EF6               	movwf	tblptrl,c
 26757  004308  0E8E               	movlw	high _verify_line3
 26758  00430A  20F4               	addwfc	prodh,w,c
 26759  00430C  6EF7               	movwf	tblptrh,c
 26760  00430E                     	if	1	;There are 3 active tblptr bytes
 26761  00430E  6AF8               	clrf	tblptru,c
 26762  004310  0E00               	movlw	low (__mediumconst shr (0+16))
 26763  004312  22F8               	addwfc	tblptru,f,c
 26764  004314                     	endif
 26765  004314  0008               	tblrd		*
 26766  004316  50F5               	movf	tablat,w,c
 26767  004318  0900               	iorlw	0
 26768  00431A  A4D8               	btfss	status,2,c
 26769  00431C  D7D9               	goto	l1617
 26770                           
 26771                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 26772  00431E  EC15  F045         	call	_bootloader_get_entries	;wreg free
 26773  004322  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 26774  004326  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 26775  00432A  6A1B               	clrf	__display_itoa_u16@value+2,c
 26776  00432C  6A1C               	clrf	__display_itoa_u16@value+3,c
 26777  00432E  5021               	movf	__display_verify@cntr,w,c
 26778  004330  6E1F               	movwf	??__display_verify& (0+255),c
 26779  004332  6A20               	clrf	(??__display_verify+1)& (0+255),c
 26780  004334  0E01               	movlw	1
 26781  004336  261F               	addwf	??__display_verify,f,c
 26782  004338  0E00               	movlw	0
 26783  00433A  2220               	addwfc	??__display_verify+1,f,c
 26784  00433C  0E28               	movlw	low (_display_content+40)
 26785  00433E  241F               	addwf	??__display_verify,w,c
 26786  004340  6E1D               	movwf	__display_itoa_u16@text,c
 26787  004342  0E02               	movlw	high (_display_content+40)
 26788  004344  2020               	addwfc	??__display_verify+1,w,c
 26789  004346  6E1E               	movwf	__display_itoa_u16@text+1,c
 26790  004348  EC01  F02F         	call	__display_itoa_u16	;wreg free
 26791  00434C  0012               	return		;funcret
 26792  00434E                     __end_of__display_verify:
 26793                           	opt stack 0
 26794                           tosu	equ	0xFFF
 26795                           tosh	equ	0xFFE
 26796                           tosl	equ	0xFFD
 26797                           pclath	equ	0xFFA
 26798                           tblptru	equ	0xFF8
 26799                           tblptrh	equ	0xFF7
 26800                           tblptrl	equ	0xFF6
 26801                           tablat	equ	0xFF5
 26802                           prodh	equ	0xFF4
 26803                           prodl	equ	0xFF3
 26804                           intcon	equ	0xFF2
 26805                           intcon2	equ	0xFF1
 26806                           intcon3	equ	0xFF0
 26807                           indf0	equ	0xFEF
 26808                           postinc0	equ	0xFEE
 26809                           fsr0h	equ	0xFEA
 26810                           fsr0l	equ	0xFE9
 26811                           wreg	equ	0xFE8
 26812                           indf1	equ	0xFE7
 26813                           postdec1	equ	0xFE5
 26814                           plusw1	equ	0xFE3
 26815                           fsr1h	equ	0xFE2
 26816                           fsr1l	equ	0xFE1
 26817                           indf2	equ	0xFDF
 26818                           postinc2	equ	0xFDE
 26819                           postdec2	equ	0xFDD
 26820                           plusw2	equ	0xFDB
 26821                           fsr2h	equ	0xFDA
 26822                           fsr2l	equ	0xFD9
 26823                           status	equ	0xFD8
 26824                           
 26825 ;; *************** function __display_start *****************
 26826 ;; Defined at:
 26827 ;;		line 351 in file "display.c"
 26828 ;; Parameters:    Size  Location     Type
 26829 ;;		None
 26830 ;; Auto vars:     Size  Location     Type
 26831 ;;  cntr            1   36[COMRAM] unsigned char 
 26832 ;; Return value:  Size  Location     Type
 26833 ;;                  1    wreg      void 
 26834 ;; Registers used:
 26835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26836 ;; Tracked objects:
 26837 ;;		On entry : 0/0
 26838 ;;		On exit  : 0/0
 26839 ;;		Unchanged: 0/0
 26840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26845 ;;Total ram usage:        1 bytes
 26846 ;; Hardware stack levels used:    1
 26847 ;; Hardware stack levels required when called:    5
 26848 ;; This function calls:
 26849 ;;		__display_itoa_u32
 26850 ;; This function is called by:
 26851 ;;		_display_prepare
 26852 ;; This function uses a non-reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text130
 26856  002AD6                     __ptext130:
 26857                           	opt stack 0
 26858  002AD6                     __display_start:
 26859                           	opt stack 21
 26860                           
 26861                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 26862                           
 26863                           ;incstack = 0
 26864  002AD6  0E00               	movlw	0
 26865  002AD8  6E25               	movwf	__display_start@cntr,c
 26866                           
 26867                           ;display.c: 355: while(start_line1[cntr])
 26868  002ADA  D017               	goto	l1562
 26869  002ADC                     
 26870                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 26871  002ADC  5025               	movf	__display_start@cntr,w,c
 26872  002ADE  0D01               	mullw	1
 26873  002AE0  0EF4               	movlw	low _start_line1
 26874  002AE2  24F3               	addwf	prodl,w,c
 26875  002AE4  6EF6               	movwf	tblptrl,c
 26876  002AE6  0E8D               	movlw	high _start_line1
 26877  002AE8  20F4               	addwfc	prodh,w,c
 26878  002AEA  6EF7               	movwf	tblptrh,c
 26879  002AEC                     	if	1	;There are 3 active tblptr bytes
 26880  002AEC  6AF8               	clrf	tblptru,c
 26881  002AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 26882  002AF0  22F8               	addwfc	tblptru,f,c
 26883  002AF2                     	endif
 26884  002AF2  5025               	movf	__display_start@cntr,w,c
 26885  002AF4  0D01               	mullw	1
 26886  002AF6  0E00               	movlw	low _display_content
 26887  002AF8  24F3               	addwf	prodl,w,c
 26888  002AFA  6ED9               	movwf	fsr2l,c
 26889  002AFC  0E02               	movlw	high _display_content
 26890  002AFE  20F4               	addwfc	prodh,w,c
 26891  002B00  6EDA               	movwf	fsr2h,c
 26892  002B02  0008               	tblrd		*
 26893  002B04  CFF5 FFDF          	movff	tablat,indf2
 26894  002B08  2A25               	incf	__display_start@cntr,f,c
 26895  002B0A                     l1562:
 26896  002B0A  5025               	movf	__display_start@cntr,w,c
 26897  002B0C  0D01               	mullw	1
 26898  002B0E  0EF4               	movlw	low _start_line1
 26899  002B10  24F3               	addwf	prodl,w,c
 26900  002B12  6EF6               	movwf	tblptrl,c
 26901  002B14  0E8D               	movlw	high _start_line1
 26902  002B16  20F4               	addwfc	prodh,w,c
 26903  002B18  6EF7               	movwf	tblptrh,c
 26904  002B1A                     	if	1	;There are 3 active tblptr bytes
 26905  002B1A  6AF8               	clrf	tblptru,c
 26906  002B1C  0E00               	movlw	low (__mediumconst shr (0+16))
 26907  002B1E  22F8               	addwfc	tblptru,f,c
 26908  002B20                     	endif
 26909  002B20  0008               	tblrd		*
 26910  002B22  50F5               	movf	tablat,w,c
 26911  002B24  0900               	iorlw	0
 26912  002B26  A4D8               	btfss	status,2,c
 26913  002B28  D7D9               	goto	l1563
 26914                           
 26915                           ;display.c: 357: cntr = 0;
 26916  002B2A  0E00               	movlw	0
 26917  002B2C  6E25               	movwf	__display_start@cntr,c
 26918                           
 26919                           ;display.c: 358: while(start_line2[cntr])
 26920  002B2E  D017               	goto	l1565
 26921  002B30                     
 26922                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 26923  002B30  5025               	movf	__display_start@cntr,w,c
 26924  002B32  0D01               	mullw	1
 26925  002B34  0E62               	movlw	low _start_line2
 26926  002B36  24F3               	addwf	prodl,w,c
 26927  002B38  6EF6               	movwf	tblptrl,c
 26928  002B3A  0E8E               	movlw	high _start_line2
 26929  002B3C  20F4               	addwfc	prodh,w,c
 26930  002B3E  6EF7               	movwf	tblptrh,c
 26931  002B40                     	if	1	;There are 3 active tblptr bytes
 26932  002B40  6AF8               	clrf	tblptru,c
 26933  002B42  0E00               	movlw	low (__mediumconst shr (0+16))
 26934  002B44  22F8               	addwfc	tblptru,f,c
 26935  002B46                     	endif
 26936  002B46  5025               	movf	__display_start@cntr,w,c
 26937  002B48  0D01               	mullw	1
 26938  002B4A  0E14               	movlw	low (_display_content+20)
 26939  002B4C  24F3               	addwf	prodl,w,c
 26940  002B4E  6ED9               	movwf	fsr2l,c
 26941  002B50  0E02               	movlw	high (_display_content+20)
 26942  002B52  20F4               	addwfc	prodh,w,c
 26943  002B54  6EDA               	movwf	fsr2h,c
 26944  002B56  0008               	tblrd		*
 26945  002B58  CFF5 FFDF          	movff	tablat,indf2
 26946  002B5C  2A25               	incf	__display_start@cntr,f,c
 26947  002B5E                     l1565:
 26948  002B5E  5025               	movf	__display_start@cntr,w,c
 26949  002B60  0D01               	mullw	1
 26950  002B62  0E62               	movlw	low _start_line2
 26951  002B64  24F3               	addwf	prodl,w,c
 26952  002B66  6EF6               	movwf	tblptrl,c
 26953  002B68  0E8E               	movlw	high _start_line2
 26954  002B6A  20F4               	addwfc	prodh,w,c
 26955  002B6C  6EF7               	movwf	tblptrh,c
 26956  002B6E                     	if	1	;There are 3 active tblptr bytes
 26957  002B6E  6AF8               	clrf	tblptru,c
 26958  002B70  0E00               	movlw	low (__mediumconst shr (0+16))
 26959  002B72  22F8               	addwfc	tblptru,f,c
 26960  002B74                     	endif
 26961  002B74  0008               	tblrd		*
 26962  002B76  50F5               	movf	tablat,w,c
 26963  002B78  0900               	iorlw	0
 26964  002B7A  A4D8               	btfss	status,2,c
 26965  002B7C  D7D9               	goto	l1566
 26966                           
 26967                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 26968  002B7E  0E00               	movlw	0
 26969  002B80  6E1F               	movwf	__display_itoa_u32@value,c
 26970  002B82  0E00               	movlw	0
 26971  002B84  6E20               	movwf	__display_itoa_u32@value+1,c
 26972  002B86  0E00               	movlw	0
 26973  002B88  6E21               	movwf	__display_itoa_u32@value+2,c
 26974  002B8A  0E00               	movlw	0
 26975  002B8C  6E22               	movwf	__display_itoa_u32@value+3,c
 26976  002B8E  5025               	movf	__display_start@cntr,w,c
 26977  002B90  0D01               	mullw	1
 26978  002B92  0E14               	movlw	low (_display_content+20)
 26979  002B94  24F3               	addwf	prodl,w,c
 26980  002B96  6E23               	movwf	__display_itoa_u32@text,c
 26981  002B98  0E02               	movlw	high (_display_content+20)
 26982  002B9A  20F4               	addwfc	prodh,w,c
 26983  002B9C  6E24               	movwf	__display_itoa_u32@text+1,c
 26984  002B9E  EC15  F006         	call	__display_itoa_u32	;wreg free
 26985  002BA2  2625               	addwf	__display_start@cntr,f,c
 26986                           
 26987                           ;display.c: 361: display_content[1][cntr++] = '.';
 26988  002BA4  5025               	movf	__display_start@cntr,w,c
 26989  002BA6  0D01               	mullw	1
 26990  002BA8  0E14               	movlw	low (_display_content+20)
 26991  002BAA  24F3               	addwf	prodl,w,c
 26992  002BAC  6ED9               	movwf	fsr2l,c
 26993  002BAE  0E02               	movlw	high (_display_content+20)
 26994  002BB0  20F4               	addwfc	prodh,w,c
 26995  002BB2  6EDA               	movwf	fsr2h,c
 26996  002BB4  0E2E               	movlw	46
 26997  002BB6  6EDF               	movwf	indf2,c
 26998  002BB8  2A25               	incf	__display_start@cntr,f,c
 26999                           
 27000                           ;display.c: 362: cntr += _display_itoa_u32(0x02, &display_content[1][cntr]);
 27001  002BBA  0E02               	movlw	2
 27002  002BBC  6E1F               	movwf	__display_itoa_u32@value,c
 27003  002BBE  0E00               	movlw	0
 27004  002BC0  6E20               	movwf	__display_itoa_u32@value+1,c
 27005  002BC2  0E00               	movlw	0
 27006  002BC4  6E21               	movwf	__display_itoa_u32@value+2,c
 27007  002BC6  0E00               	movlw	0
 27008  002BC8  6E22               	movwf	__display_itoa_u32@value+3,c
 27009  002BCA  5025               	movf	__display_start@cntr,w,c
 27010  002BCC  0D01               	mullw	1
 27011  002BCE  0E14               	movlw	low (_display_content+20)
 27012  002BD0  24F3               	addwf	prodl,w,c
 27013  002BD2  6E23               	movwf	__display_itoa_u32@text,c
 27014  002BD4  0E02               	movlw	high (_display_content+20)
 27015  002BD6  20F4               	addwfc	prodh,w,c
 27016  002BD8  6E24               	movwf	__display_itoa_u32@text+1,c
 27017  002BDA  EC15  F006         	call	__display_itoa_u32	;wreg free
 27018  002BDE  2625               	addwf	__display_start@cntr,f,c
 27019                           
 27020                           ;display.c: 363: display_content[1][cntr++] = '.';
 27021  002BE0  5025               	movf	__display_start@cntr,w,c
 27022  002BE2  0D01               	mullw	1
 27023  002BE4  0E14               	movlw	low (_display_content+20)
 27024  002BE6  24F3               	addwf	prodl,w,c
 27025  002BE8  6ED9               	movwf	fsr2l,c
 27026  002BEA  0E02               	movlw	high (_display_content+20)
 27027  002BEC  20F4               	addwfc	prodh,w,c
 27028  002BEE  6EDA               	movwf	fsr2h,c
 27029  002BF0  0E2E               	movlw	46
 27030  002BF2  6EDF               	movwf	indf2,c
 27031  002BF4  2A25               	incf	__display_start@cntr,f,c
 27032                           
 27033                           ;display.c: 364: cntr += _display_itoa_u32(0x02, &display_content[1][cntr]);
 27034  002BF6  0E02               	movlw	2
 27035  002BF8  6E1F               	movwf	__display_itoa_u32@value,c
 27036  002BFA  0E00               	movlw	0
 27037  002BFC  6E20               	movwf	__display_itoa_u32@value+1,c
 27038  002BFE  0E00               	movlw	0
 27039  002C00  6E21               	movwf	__display_itoa_u32@value+2,c
 27040  002C02  0E00               	movlw	0
 27041  002C04  6E22               	movwf	__display_itoa_u32@value+3,c
 27042  002C06  5025               	movf	__display_start@cntr,w,c
 27043  002C08  0D01               	mullw	1
 27044  002C0A  0E14               	movlw	low (_display_content+20)
 27045  002C0C  24F3               	addwf	prodl,w,c
 27046  002C0E  6E23               	movwf	__display_itoa_u32@text,c
 27047  002C10  0E02               	movlw	high (_display_content+20)
 27048  002C12  20F4               	addwfc	prodh,w,c
 27049  002C14  6E24               	movwf	__display_itoa_u32@text+1,c
 27050  002C16  EC15  F006         	call	__display_itoa_u32	;wreg free
 27051  002C1A  2625               	addwf	__display_start@cntr,f,c
 27052                           
 27053                           ;display.c: 365: cntr = 0;
 27054  002C1C  0E00               	movlw	0
 27055  002C1E  6E25               	movwf	__display_start@cntr,c
 27056                           
 27057                           ;display.c: 366: while(start_line3[cntr])
 27058  002C20  D017               	goto	l1568
 27059  002C22                     
 27060                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 27061  002C22  5025               	movf	__display_start@cntr,w,c
 27062  002C24  0D01               	mullw	1
 27063  002C26  0EA7               	movlw	low _start_line3
 27064  002C28  24F3               	addwf	prodl,w,c
 27065  002C2A  6EF6               	movwf	tblptrl,c
 27066  002C2C  0E8E               	movlw	high _start_line3
 27067  002C2E  20F4               	addwfc	prodh,w,c
 27068  002C30  6EF7               	movwf	tblptrh,c
 27069  002C32                     	if	1	;There are 3 active tblptr bytes
 27070  002C32  6AF8               	clrf	tblptru,c
 27071  002C34  0E00               	movlw	low (__mediumconst shr (0+16))
 27072  002C36  22F8               	addwfc	tblptru,f,c
 27073  002C38                     	endif
 27074  002C38  5025               	movf	__display_start@cntr,w,c
 27075  002C3A  0D01               	mullw	1
 27076  002C3C  0E28               	movlw	low (_display_content+40)
 27077  002C3E  24F3               	addwf	prodl,w,c
 27078  002C40  6ED9               	movwf	fsr2l,c
 27079  002C42  0E02               	movlw	high (_display_content+40)
 27080  002C44  20F4               	addwfc	prodh,w,c
 27081  002C46  6EDA               	movwf	fsr2h,c
 27082  002C48  0008               	tblrd		*
 27083  002C4A  CFF5 FFDF          	movff	tablat,indf2
 27084  002C4E  2A25               	incf	__display_start@cntr,f,c
 27085  002C50                     l1568:
 27086  002C50  5025               	movf	__display_start@cntr,w,c
 27087  002C52  0D01               	mullw	1
 27088  002C54  0EA7               	movlw	low _start_line3
 27089  002C56  24F3               	addwf	prodl,w,c
 27090  002C58  6EF6               	movwf	tblptrl,c
 27091  002C5A  0E8E               	movlw	high _start_line3
 27092  002C5C  20F4               	addwfc	prodh,w,c
 27093  002C5E  6EF7               	movwf	tblptrh,c
 27094  002C60                     	if	1	;There are 3 active tblptr bytes
 27095  002C60  6AF8               	clrf	tblptru,c
 27096  002C62  0E00               	movlw	low (__mediumconst shr (0+16))
 27097  002C64  22F8               	addwfc	tblptru,f,c
 27098  002C66                     	endif
 27099  002C66  0008               	tblrd		*
 27100  002C68  50F5               	movf	tablat,w,c
 27101  002C6A  0900               	iorlw	0
 27102  002C6C  A4D8               	btfss	status,2,c
 27103  002C6E  D7D9               	goto	l1569
 27104                           
 27105                           ;display.c: 368: cntr = 0;
 27106  002C70  0E00               	movlw	0
 27107  002C72  6E25               	movwf	__display_start@cntr,c
 27108                           
 27109                           ;display.c: 369: while(start_line4[cntr])
 27110  002C74  D017               	goto	l1571
 27111  002C76                     
 27112                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 27113  002C76  5025               	movf	__display_start@cntr,w,c
 27114  002C78  0D01               	mullw	1
 27115  002C7A  0E22               	movlw	low _start_line4
 27116  002C7C  24F3               	addwf	prodl,w,c
 27117  002C7E  6EF6               	movwf	tblptrl,c
 27118  002C80  0E8E               	movlw	high _start_line4
 27119  002C82  20F4               	addwfc	prodh,w,c
 27120  002C84  6EF7               	movwf	tblptrh,c
 27121  002C86                     	if	1	;There are 3 active tblptr bytes
 27122  002C86  6AF8               	clrf	tblptru,c
 27123  002C88  0E00               	movlw	low (__mediumconst shr (0+16))
 27124  002C8A  22F8               	addwfc	tblptru,f,c
 27125  002C8C                     	endif
 27126  002C8C  5025               	movf	__display_start@cntr,w,c
 27127  002C8E  0D01               	mullw	1
 27128  002C90  0E3C               	movlw	low (_display_content+60)
 27129  002C92  24F3               	addwf	prodl,w,c
 27130  002C94  6ED9               	movwf	fsr2l,c
 27131  002C96  0E02               	movlw	high (_display_content+60)
 27132  002C98  20F4               	addwfc	prodh,w,c
 27133  002C9A  6EDA               	movwf	fsr2h,c
 27134  002C9C  0008               	tblrd		*
 27135  002C9E  CFF5 FFDF          	movff	tablat,indf2
 27136  002CA2  2A25               	incf	__display_start@cntr,f,c
 27137  002CA4                     l1571:
 27138  002CA4  5025               	movf	__display_start@cntr,w,c
 27139  002CA6  0D01               	mullw	1
 27140  002CA8  0E22               	movlw	low _start_line4
 27141  002CAA  24F3               	addwf	prodl,w,c
 27142  002CAC  6EF6               	movwf	tblptrl,c
 27143  002CAE  0E8E               	movlw	high _start_line4
 27144  002CB0  20F4               	addwfc	prodh,w,c
 27145  002CB2  6EF7               	movwf	tblptrh,c
 27146  002CB4                     	if	1	;There are 3 active tblptr bytes
 27147  002CB4  6AF8               	clrf	tblptru,c
 27148  002CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 27149  002CB8  22F8               	addwfc	tblptru,f,c
 27150  002CBA                     	endif
 27151  002CBA  0008               	tblrd		*
 27152  002CBC  50F5               	movf	tablat,w,c
 27153  002CBE  0900               	iorlw	0
 27154  002CC0  B4D8               	btfsc	status,2,c
 27155  002CC2  0012               	return	
 27156  002CC4  D7D8               	goto	l1572
 27157  002CC6                     __end_of__display_start:
 27158                           	opt stack 0
 27159                           tosu	equ	0xFFF
 27160                           tosh	equ	0xFFE
 27161                           tosl	equ	0xFFD
 27162                           pclath	equ	0xFFA
 27163                           tblptru	equ	0xFF8
 27164                           tblptrh	equ	0xFF7
 27165                           tblptrl	equ	0xFF6
 27166                           tablat	equ	0xFF5
 27167                           prodh	equ	0xFF4
 27168                           prodl	equ	0xFF3
 27169                           intcon	equ	0xFF2
 27170                           intcon2	equ	0xFF1
 27171                           intcon3	equ	0xFF0
 27172                           indf0	equ	0xFEF
 27173                           postinc0	equ	0xFEE
 27174                           fsr0h	equ	0xFEA
 27175                           fsr0l	equ	0xFE9
 27176                           wreg	equ	0xFE8
 27177                           indf1	equ	0xFE7
 27178                           postdec1	equ	0xFE5
 27179                           plusw1	equ	0xFE3
 27180                           fsr1h	equ	0xFE2
 27181                           fsr1l	equ	0xFE1
 27182                           indf2	equ	0xFDF
 27183                           postinc2	equ	0xFDE
 27184                           postdec2	equ	0xFDD
 27185                           plusw2	equ	0xFDB
 27186                           fsr2h	equ	0xFDA
 27187                           fsr2l	equ	0xFD9
 27188                           status	equ	0xFD8
 27189                           
 27190 ;; *************** function __display_search *****************
 27191 ;; Defined at:
 27192 ;;		line 373 in file "display.c"
 27193 ;; Parameters:    Size  Location     Type
 27194 ;;		None
 27195 ;; Auto vars:     Size  Location     Type
 27196 ;;  cntr            1    0[COMRAM] unsigned char 
 27197 ;; Return value:  Size  Location     Type
 27198 ;;                  1    wreg      void 
 27199 ;; Registers used:
 27200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27201 ;; Tracked objects:
 27202 ;;		On entry : 0/0
 27203 ;;		On exit  : 0/0
 27204 ;;		Unchanged: 0/0
 27205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27210 ;;Total ram usage:        1 bytes
 27211 ;; Hardware stack levels used:    1
 27212 ;; This function calls:
 27213 ;;		Nothing
 27214 ;; This function is called by:
 27215 ;;		_display_prepare
 27216 ;; This function uses a non-reentrant model
 27217 ;;
 27218                           
 27219                           	psect	text131
 27220  003BBC                     __ptext131:
 27221                           	opt stack 0
 27222  003BBC                     __display_search:
 27223                           	opt stack 26
 27224                           
 27225                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 27226                           
 27227                           ;incstack = 0
 27228  003BBC  0E00               	movlw	0
 27229  003BBE  6E01               	movwf	__display_search@cntr,c
 27230                           
 27231                           ;display.c: 377: while(search_line1[cntr])
 27232  003BC0  D017               	goto	l1577
 27233  003BC2                     
 27234                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 27235  003BC2  5001               	movf	__display_search@cntr,w,c
 27236  003BC4  0D01               	mullw	1
 27237  003BC6  0EE4               	movlw	low _search_line1
 27238  003BC8  24F3               	addwf	prodl,w,c
 27239  003BCA  6EF6               	movwf	tblptrl,c
 27240  003BCC  0E8D               	movlw	high _search_line1
 27241  003BCE  20F4               	addwfc	prodh,w,c
 27242  003BD0  6EF7               	movwf	tblptrh,c
 27243  003BD2                     	if	1	;There are 3 active tblptr bytes
 27244  003BD2  6AF8               	clrf	tblptru,c
 27245  003BD4  0E00               	movlw	low (__mediumconst shr (0+16))
 27246  003BD6  22F8               	addwfc	tblptru,f,c
 27247  003BD8                     	endif
 27248  003BD8  5001               	movf	__display_search@cntr,w,c
 27249  003BDA  0D01               	mullw	1
 27250  003BDC  0E00               	movlw	low _display_content
 27251  003BDE  24F3               	addwf	prodl,w,c
 27252  003BE0  6ED9               	movwf	fsr2l,c
 27253  003BE2  0E02               	movlw	high _display_content
 27254  003BE4  20F4               	addwfc	prodh,w,c
 27255  003BE6  6EDA               	movwf	fsr2h,c
 27256  003BE8  0008               	tblrd		*
 27257  003BEA  CFF5 FFDF          	movff	tablat,indf2
 27258  003BEE  2A01               	incf	__display_search@cntr,f,c
 27259  003BF0                     l1577:
 27260  003BF0  5001               	movf	__display_search@cntr,w,c
 27261  003BF2  0D01               	mullw	1
 27262  003BF4  0EE4               	movlw	low _search_line1
 27263  003BF6  24F3               	addwf	prodl,w,c
 27264  003BF8  6EF6               	movwf	tblptrl,c
 27265  003BFA  0E8D               	movlw	high _search_line1
 27266  003BFC  20F4               	addwfc	prodh,w,c
 27267  003BFE  6EF7               	movwf	tblptrh,c
 27268  003C00                     	if	1	;There are 3 active tblptr bytes
 27269  003C00  6AF8               	clrf	tblptru,c
 27270  003C02  0E00               	movlw	low (__mediumconst shr (0+16))
 27271  003C04  22F8               	addwfc	tblptru,f,c
 27272  003C06                     	endif
 27273  003C06  0008               	tblrd		*
 27274  003C08  50F5               	movf	tablat,w,c
 27275  003C0A  0900               	iorlw	0
 27276  003C0C  A4D8               	btfss	status,2,c
 27277  003C0E  D7D9               	goto	l1578
 27278                           
 27279                           ;display.c: 379: cntr = 0;
 27280  003C10  0E00               	movlw	0
 27281  003C12  6E01               	movwf	__display_search@cntr,c
 27282                           
 27283                           ;display.c: 380: while(search_line2[cntr])
 27284  003C14  D017               	goto	l1580
 27285  003C16                     
 27286                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 27287  003C16  5001               	movf	__display_search@cntr,w,c
 27288  003C18  0D01               	mullw	1
 27289  003C1A  0E43               	movlw	low _search_line2
 27290  003C1C  24F3               	addwf	prodl,w,c
 27291  003C1E  6EF6               	movwf	tblptrl,c
 27292  003C20  0E8D               	movlw	high _search_line2
 27293  003C22  20F4               	addwfc	prodh,w,c
 27294  003C24  6EF7               	movwf	tblptrh,c
 27295  003C26                     	if	1	;There are 3 active tblptr bytes
 27296  003C26  6AF8               	clrf	tblptru,c
 27297  003C28  0E00               	movlw	low (__mediumconst shr (0+16))
 27298  003C2A  22F8               	addwfc	tblptru,f,c
 27299  003C2C                     	endif
 27300  003C2C  5001               	movf	__display_search@cntr,w,c
 27301  003C2E  0D01               	mullw	1
 27302  003C30  0E14               	movlw	low (_display_content+20)
 27303  003C32  24F3               	addwf	prodl,w,c
 27304  003C34  6ED9               	movwf	fsr2l,c
 27305  003C36  0E02               	movlw	high (_display_content+20)
 27306  003C38  20F4               	addwfc	prodh,w,c
 27307  003C3A  6EDA               	movwf	fsr2h,c
 27308  003C3C  0008               	tblrd		*
 27309  003C3E  CFF5 FFDF          	movff	tablat,indf2
 27310  003C42  2A01               	incf	__display_search@cntr,f,c
 27311  003C44                     l1580:
 27312  003C44  5001               	movf	__display_search@cntr,w,c
 27313  003C46  0D01               	mullw	1
 27314  003C48  0E43               	movlw	low _search_line2
 27315  003C4A  24F3               	addwf	prodl,w,c
 27316  003C4C  6EF6               	movwf	tblptrl,c
 27317  003C4E  0E8D               	movlw	high _search_line2
 27318  003C50  20F4               	addwfc	prodh,w,c
 27319  003C52  6EF7               	movwf	tblptrh,c
 27320  003C54                     	if	1	;There are 3 active tblptr bytes
 27321  003C54  6AF8               	clrf	tblptru,c
 27322  003C56  0E00               	movlw	low (__mediumconst shr (0+16))
 27323  003C58  22F8               	addwfc	tblptru,f,c
 27324  003C5A                     	endif
 27325  003C5A  0008               	tblrd		*
 27326  003C5C  50F5               	movf	tablat,w,c
 27327  003C5E  0900               	iorlw	0
 27328  003C60  A4D8               	btfss	status,2,c
 27329  003C62  D7D9               	goto	l1581
 27330                           
 27331                           ;display.c: 382: cntr = 0;
 27332  003C64  0E00               	movlw	0
 27333  003C66  6E01               	movwf	__display_search@cntr,c
 27334                           
 27335                           ;display.c: 383: while(search_line3[cntr])
 27336  003C68  D017               	goto	l1583
 27337  003C6A                     
 27338                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 27339  003C6A  5001               	movf	__display_search@cntr,w,c
 27340  003C6C  0D01               	mullw	1
 27341  003C6E  0EC2               	movlw	low _search_line3
 27342  003C70  24F3               	addwf	prodl,w,c
 27343  003C72  6EF6               	movwf	tblptrl,c
 27344  003C74  0E8C               	movlw	high _search_line3
 27345  003C76  20F4               	addwfc	prodh,w,c
 27346  003C78  6EF7               	movwf	tblptrh,c
 27347  003C7A                     	if	1	;There are 3 active tblptr bytes
 27348  003C7A  6AF8               	clrf	tblptru,c
 27349  003C7C  0E00               	movlw	low (__mediumconst shr (0+16))
 27350  003C7E  22F8               	addwfc	tblptru,f,c
 27351  003C80                     	endif
 27352  003C80  5001               	movf	__display_search@cntr,w,c
 27353  003C82  0D01               	mullw	1
 27354  003C84  0E28               	movlw	low (_display_content+40)
 27355  003C86  24F3               	addwf	prodl,w,c
 27356  003C88  6ED9               	movwf	fsr2l,c
 27357  003C8A  0E02               	movlw	high (_display_content+40)
 27358  003C8C  20F4               	addwfc	prodh,w,c
 27359  003C8E  6EDA               	movwf	fsr2h,c
 27360  003C90  0008               	tblrd		*
 27361  003C92  CFF5 FFDF          	movff	tablat,indf2
 27362  003C96  2A01               	incf	__display_search@cntr,f,c
 27363  003C98                     l1583:
 27364  003C98  5001               	movf	__display_search@cntr,w,c
 27365  003C9A  0D01               	mullw	1
 27366  003C9C  0EC2               	movlw	low _search_line3
 27367  003C9E  24F3               	addwf	prodl,w,c
 27368  003CA0  6EF6               	movwf	tblptrl,c
 27369  003CA2  0E8C               	movlw	high _search_line3
 27370  003CA4  20F4               	addwfc	prodh,w,c
 27371  003CA6  6EF7               	movwf	tblptrh,c
 27372  003CA8                     	if	1	;There are 3 active tblptr bytes
 27373  003CA8  6AF8               	clrf	tblptru,c
 27374  003CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 27375  003CAC  22F8               	addwfc	tblptru,f,c
 27376  003CAE                     	endif
 27377  003CAE  0008               	tblrd		*
 27378  003CB0  50F5               	movf	tablat,w,c
 27379  003CB2  0900               	iorlw	0
 27380  003CB4  A4D8               	btfss	status,2,c
 27381  003CB6  D7D9               	goto	l1584
 27382                           
 27383                           ;display.c: 385: cntr = 0;
 27384  003CB8  0E00               	movlw	0
 27385  003CBA  6E01               	movwf	__display_search@cntr,c
 27386                           
 27387                           ;display.c: 386: while(search_line4[cntr])
 27388  003CBC  D017               	goto	l1586
 27389  003CBE                     
 27390                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 27391  003CBE  5001               	movf	__display_search@cntr,w,c
 27392  003CC0  0D01               	mullw	1
 27393  003CC2  0E59               	movlw	low _search_line4
 27394  003CC4  24F3               	addwf	prodl,w,c
 27395  003CC6  6EF6               	movwf	tblptrl,c
 27396  003CC8  0E8E               	movlw	high _search_line4
 27397  003CCA  20F4               	addwfc	prodh,w,c
 27398  003CCC  6EF7               	movwf	tblptrh,c
 27399  003CCE                     	if	1	;There are 3 active tblptr bytes
 27400  003CCE  6AF8               	clrf	tblptru,c
 27401  003CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 27402  003CD2  22F8               	addwfc	tblptru,f,c
 27403  003CD4                     	endif
 27404  003CD4  5001               	movf	__display_search@cntr,w,c
 27405  003CD6  0D01               	mullw	1
 27406  003CD8  0E3C               	movlw	low (_display_content+60)
 27407  003CDA  24F3               	addwf	prodl,w,c
 27408  003CDC  6ED9               	movwf	fsr2l,c
 27409  003CDE  0E02               	movlw	high (_display_content+60)
 27410  003CE0  20F4               	addwfc	prodh,w,c
 27411  003CE2  6EDA               	movwf	fsr2h,c
 27412  003CE4  0008               	tblrd		*
 27413  003CE6  CFF5 FFDF          	movff	tablat,indf2
 27414  003CEA  2A01               	incf	__display_search@cntr,f,c
 27415  003CEC                     l1586:
 27416  003CEC  5001               	movf	__display_search@cntr,w,c
 27417  003CEE  0D01               	mullw	1
 27418  003CF0  0E59               	movlw	low _search_line4
 27419  003CF2  24F3               	addwf	prodl,w,c
 27420  003CF4  6EF6               	movwf	tblptrl,c
 27421  003CF6  0E8E               	movlw	high _search_line4
 27422  003CF8  20F4               	addwfc	prodh,w,c
 27423  003CFA  6EF7               	movwf	tblptrh,c
 27424  003CFC                     	if	1	;There are 3 active tblptr bytes
 27425  003CFC  6AF8               	clrf	tblptru,c
 27426  003CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 27427  003D00  22F8               	addwfc	tblptru,f,c
 27428  003D02                     	endif
 27429  003D02  0008               	tblrd		*
 27430  003D04  50F5               	movf	tablat,w,c
 27431  003D06  0900               	iorlw	0
 27432  003D08  B4D8               	btfsc	status,2,c
 27433  003D0A  0012               	return	
 27434  003D0C  D7D8               	goto	l1587
 27435  003D0E                     __end_of__display_search:
 27436                           	opt stack 0
 27437                           tosu	equ	0xFFF
 27438                           tosh	equ	0xFFE
 27439                           tosl	equ	0xFFD
 27440                           pclath	equ	0xFFA
 27441                           tblptru	equ	0xFF8
 27442                           tblptrh	equ	0xFF7
 27443                           tblptrl	equ	0xFF6
 27444                           tablat	equ	0xFF5
 27445                           prodh	equ	0xFF4
 27446                           prodl	equ	0xFF3
 27447                           intcon	equ	0xFF2
 27448                           intcon2	equ	0xFF1
 27449                           intcon3	equ	0xFF0
 27450                           indf0	equ	0xFEF
 27451                           postinc0	equ	0xFEE
 27452                           fsr0h	equ	0xFEA
 27453                           fsr0l	equ	0xFE9
 27454                           wreg	equ	0xFE8
 27455                           indf1	equ	0xFE7
 27456                           postdec1	equ	0xFE5
 27457                           plusw1	equ	0xFE3
 27458                           fsr1h	equ	0xFE2
 27459                           fsr1l	equ	0xFE1
 27460                           indf2	equ	0xFDF
 27461                           postinc2	equ	0xFDE
 27462                           postdec2	equ	0xFDD
 27463                           plusw2	equ	0xFDB
 27464                           fsr2h	equ	0xFDA
 27465                           fsr2l	equ	0xFD9
 27466                           status	equ	0xFD8
 27467                           
 27468 ;; *************** function __display_rebooting *****************
 27469 ;; Defined at:
 27470 ;;		line 547 in file "display.c"
 27471 ;; Parameters:    Size  Location     Type
 27472 ;;		None
 27473 ;; Auto vars:     Size  Location     Type
 27474 ;;  cntr            1    0[COMRAM] unsigned char 
 27475 ;; Return value:  Size  Location     Type
 27476 ;;                  1    wreg      void 
 27477 ;; Registers used:
 27478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27479 ;; Tracked objects:
 27480 ;;		On entry : 0/0
 27481 ;;		On exit  : 0/0
 27482 ;;		Unchanged: 0/0
 27483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27488 ;;Total ram usage:        1 bytes
 27489 ;; Hardware stack levels used:    1
 27490 ;; This function calls:
 27491 ;;		Nothing
 27492 ;; This function is called by:
 27493 ;;		_display_prepare
 27494 ;; This function uses a non-reentrant model
 27495 ;;
 27496                           
 27497                           	psect	text132
 27498  007AA4                     __ptext132:
 27499                           	opt stack 0
 27500  007AA4                     __display_rebooting:
 27501                           	opt stack 26
 27502                           
 27503                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 27504                           
 27505                           ;incstack = 0
 27506  007AA4  0E00               	movlw	0
 27507  007AA6  6E01               	movwf	__display_rebooting@cntr,c
 27508                           
 27509                           ;display.c: 551: while(reboot_line1[cntr])
 27510  007AA8  D017               	goto	l1701
 27511  007AAA                     
 27512                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 27513  007AAA  5001               	movf	__display_rebooting@cntr,w,c
 27514  007AAC  0D01               	mullw	1
 27515  007AAE  0E3F               	movlw	low _reboot_line1
 27516  007AB0  24F3               	addwf	prodl,w,c
 27517  007AB2  6EF6               	movwf	tblptrl,c
 27518  007AB4  0E8E               	movlw	high _reboot_line1
 27519  007AB6  20F4               	addwfc	prodh,w,c
 27520  007AB8  6EF7               	movwf	tblptrh,c
 27521  007ABA                     	if	1	;There are 3 active tblptr bytes
 27522  007ABA  6AF8               	clrf	tblptru,c
 27523  007ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 27524  007ABE  22F8               	addwfc	tblptru,f,c
 27525  007AC0                     	endif
 27526  007AC0  5001               	movf	__display_rebooting@cntr,w,c
 27527  007AC2  0D01               	mullw	1
 27528  007AC4  0E00               	movlw	low _display_content
 27529  007AC6  24F3               	addwf	prodl,w,c
 27530  007AC8  6ED9               	movwf	fsr2l,c
 27531  007ACA  0E02               	movlw	high _display_content
 27532  007ACC  20F4               	addwfc	prodh,w,c
 27533  007ACE  6EDA               	movwf	fsr2h,c
 27534  007AD0  0008               	tblrd		*
 27535  007AD2  CFF5 FFDF          	movff	tablat,indf2
 27536  007AD6  2A01               	incf	__display_rebooting@cntr,f,c
 27537  007AD8                     l1701:
 27538  007AD8  5001               	movf	__display_rebooting@cntr,w,c
 27539  007ADA  0D01               	mullw	1
 27540  007ADC  0E3F               	movlw	low _reboot_line1
 27541  007ADE  24F3               	addwf	prodl,w,c
 27542  007AE0  6EF6               	movwf	tblptrl,c
 27543  007AE2  0E8E               	movlw	high _reboot_line1
 27544  007AE4  20F4               	addwfc	prodh,w,c
 27545  007AE6  6EF7               	movwf	tblptrh,c
 27546  007AE8                     	if	1	;There are 3 active tblptr bytes
 27547  007AE8  6AF8               	clrf	tblptru,c
 27548  007AEA  0E00               	movlw	low (__mediumconst shr (0+16))
 27549  007AEC  22F8               	addwfc	tblptru,f,c
 27550  007AEE                     	endif
 27551  007AEE  0008               	tblrd		*
 27552  007AF0  50F5               	movf	tablat,w,c
 27553  007AF2  0900               	iorlw	0
 27554  007AF4  B4D8               	btfsc	status,2,c
 27555  007AF6  0012               	return	
 27556  007AF8  D7D8               	goto	l1702
 27557  007AFA                     __end_of__display_rebooting:
 27558                           	opt stack 0
 27559                           tosu	equ	0xFFF
 27560                           tosh	equ	0xFFE
 27561                           tosl	equ	0xFFD
 27562                           pclath	equ	0xFFA
 27563                           tblptru	equ	0xFF8
 27564                           tblptrh	equ	0xFF7
 27565                           tblptrl	equ	0xFF6
 27566                           tablat	equ	0xFF5
 27567                           prodh	equ	0xFF4
 27568                           prodl	equ	0xFF3
 27569                           intcon	equ	0xFF2
 27570                           intcon2	equ	0xFF1
 27571                           intcon3	equ	0xFF0
 27572                           indf0	equ	0xFEF
 27573                           postinc0	equ	0xFEE
 27574                           fsr0h	equ	0xFEA
 27575                           fsr0l	equ	0xFE9
 27576                           wreg	equ	0xFE8
 27577                           indf1	equ	0xFE7
 27578                           postdec1	equ	0xFE5
 27579                           plusw1	equ	0xFE3
 27580                           fsr1h	equ	0xFE2
 27581                           fsr1l	equ	0xFE1
 27582                           indf2	equ	0xFDF
 27583                           postinc2	equ	0xFDE
 27584                           postdec2	equ	0xFDD
 27585                           plusw2	equ	0xFDB
 27586                           fsr2h	equ	0xFDA
 27587                           fsr2l	equ	0xFD9
 27588                           status	equ	0xFD8
 27589                           
 27590 ;; *************** function __display_programming *****************
 27591 ;; Defined at:
 27592 ;;		line 505 in file "display.c"
 27593 ;; Parameters:    Size  Location     Type
 27594 ;;		None
 27595 ;; Auto vars:     Size  Location     Type
 27596 ;;  cntr            1   30[COMRAM] unsigned char 
 27597 ;; Return value:  Size  Location     Type
 27598 ;;                  1    wreg      void 
 27599 ;; Registers used:
 27600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27601 ;; Tracked objects:
 27602 ;;		On entry : 0/0
 27603 ;;		On exit  : 0/0
 27604 ;;		Unchanged: 0/0
 27605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27610 ;;Total ram usage:        1 bytes
 27611 ;; Hardware stack levels used:    1
 27612 ;; Hardware stack levels required when called:    4
 27613 ;; This function calls:
 27614 ;;		__display_itoa_u16
 27615 ;;		_bootloader_get_entries
 27616 ;;		_bootloader_get_flashPagesWritten
 27617 ;;		_bootloader_get_total_entries
 27618 ;; This function is called by:
 27619 ;;		_display_prepare
 27620 ;; This function uses a non-reentrant model
 27621 ;;
 27622                           
 27623                           	psect	text133
 27624  00326C                     __ptext133:
 27625                           	opt stack 0
 27626  00326C                     __display_programming:
 27627                           	opt stack 22
 27628                           
 27629                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 27630                           
 27631                           ;incstack = 0
 27632  00326C  0E00               	movlw	0
 27633  00326E  6E1F               	movwf	__display_programming@cntr,c
 27634                           
 27635                           ;display.c: 509: while(programming_line1[cntr])
 27636  003270  D017               	goto	l1671
 27637  003272                     
 27638                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 27639  003272  501F               	movf	__display_programming@cntr,w,c
 27640  003274  0D01               	mullw	1
 27641  003276  0E94               	movlw	low _programming_line1
 27642  003278  24F3               	addwf	prodl,w,c
 27643  00327A  6EF6               	movwf	tblptrl,c
 27644  00327C  0E8D               	movlw	high _programming_line1
 27645  00327E  20F4               	addwfc	prodh,w,c
 27646  003280  6EF7               	movwf	tblptrh,c
 27647  003282                     	if	1	;There are 3 active tblptr bytes
 27648  003282  6AF8               	clrf	tblptru,c
 27649  003284  0E00               	movlw	low (__mediumconst shr (0+16))
 27650  003286  22F8               	addwfc	tblptru,f,c
 27651  003288                     	endif
 27652  003288  501F               	movf	__display_programming@cntr,w,c
 27653  00328A  0D01               	mullw	1
 27654  00328C  0E00               	movlw	low _display_content
 27655  00328E  24F3               	addwf	prodl,w,c
 27656  003290  6ED9               	movwf	fsr2l,c
 27657  003292  0E02               	movlw	high _display_content
 27658  003294  20F4               	addwfc	prodh,w,c
 27659  003296  6EDA               	movwf	fsr2h,c
 27660  003298  0008               	tblrd		*
 27661  00329A  CFF5 FFDF          	movff	tablat,indf2
 27662  00329E  2A1F               	incf	__display_programming@cntr,f,c
 27663  0032A0                     l1671:
 27664  0032A0  501F               	movf	__display_programming@cntr,w,c
 27665  0032A2  0D01               	mullw	1
 27666  0032A4  0E94               	movlw	low _programming_line1
 27667  0032A6  24F3               	addwf	prodl,w,c
 27668  0032A8  6EF6               	movwf	tblptrl,c
 27669  0032AA  0E8D               	movlw	high _programming_line1
 27670  0032AC  20F4               	addwfc	prodh,w,c
 27671  0032AE  6EF7               	movwf	tblptrh,c
 27672  0032B0                     	if	1	;There are 3 active tblptr bytes
 27673  0032B0  6AF8               	clrf	tblptru,c
 27674  0032B2  0E00               	movlw	low (__mediumconst shr (0+16))
 27675  0032B4  22F8               	addwfc	tblptru,f,c
 27676  0032B6                     	endif
 27677  0032B6  0008               	tblrd		*
 27678  0032B8  50F5               	movf	tablat,w,c
 27679  0032BA  0900               	iorlw	0
 27680  0032BC  A4D8               	btfss	status,2,c
 27681  0032BE  D7D9               	goto	l1672
 27682                           
 27683                           ;display.c: 512: cntr = 0;
 27684  0032C0  0E00               	movlw	0
 27685  0032C2  6E1F               	movwf	__display_programming@cntr,c
 27686                           
 27687                           ;display.c: 513: while(programming_line2[cntr])
 27688  0032C4  D017               	goto	l1674
 27689  0032C6                     
 27690                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 27691  0032C6  501F               	movf	__display_programming@cntr,w,c
 27692  0032C8  0D01               	mullw	1
 27693  0032CA  0EFC               	movlw	low _programming_line2
 27694  0032CC  24F3               	addwf	prodl,w,c
 27695  0032CE  6EF6               	movwf	tblptrl,c
 27696  0032D0  0E8C               	movlw	high _programming_line2
 27697  0032D2  20F4               	addwfc	prodh,w,c
 27698  0032D4  6EF7               	movwf	tblptrh,c
 27699  0032D6                     	if	1	;There are 3 active tblptr bytes
 27700  0032D6  6AF8               	clrf	tblptru,c
 27701  0032D8  0E00               	movlw	low (__mediumconst shr (0+16))
 27702  0032DA  22F8               	addwfc	tblptru,f,c
 27703  0032DC                     	endif
 27704  0032DC  501F               	movf	__display_programming@cntr,w,c
 27705  0032DE  0D01               	mullw	1
 27706  0032E0  0E14               	movlw	low (_display_content+20)
 27707  0032E2  24F3               	addwf	prodl,w,c
 27708  0032E4  6ED9               	movwf	fsr2l,c
 27709  0032E6  0E02               	movlw	high (_display_content+20)
 27710  0032E8  20F4               	addwfc	prodh,w,c
 27711  0032EA  6EDA               	movwf	fsr2h,c
 27712  0032EC  0008               	tblrd		*
 27713  0032EE  CFF5 FFDF          	movff	tablat,indf2
 27714  0032F2  2A1F               	incf	__display_programming@cntr,f,c
 27715  0032F4                     l1674:
 27716  0032F4  501F               	movf	__display_programming@cntr,w,c
 27717  0032F6  0D01               	mullw	1
 27718  0032F8  0EFC               	movlw	low _programming_line2
 27719  0032FA  24F3               	addwf	prodl,w,c
 27720  0032FC  6EF6               	movwf	tblptrl,c
 27721  0032FE  0E8C               	movlw	high _programming_line2
 27722  003300  20F4               	addwfc	prodh,w,c
 27723  003302  6EF7               	movwf	tblptrh,c
 27724  003304                     	if	1	;There are 3 active tblptr bytes
 27725  003304  6AF8               	clrf	tblptru,c
 27726  003306  0E00               	movlw	low (__mediumconst shr (0+16))
 27727  003308  22F8               	addwfc	tblptru,f,c
 27728  00330A                     	endif
 27729  00330A  0008               	tblrd		*
 27730  00330C  50F5               	movf	tablat,w,c
 27731  00330E  0900               	iorlw	0
 27732  003310  A4D8               	btfss	status,2,c
 27733  003312  D7D9               	goto	l1675
 27734                           
 27735                           ;display.c: 516: cntr = 0;
 27736  003314  0E00               	movlw	0
 27737  003316  6E1F               	movwf	__display_programming@cntr,c
 27738                           
 27739                           ;display.c: 517: while(programming_line3[cntr])
 27740  003318  D017               	goto	l1677
 27741  00331A                     
 27742                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 27743  00331A  501F               	movf	__display_programming@cntr,w,c
 27744  00331C  0D01               	mullw	1
 27745  00331E  0E83               	movlw	low _programming_line3
 27746  003320  24F3               	addwf	prodl,w,c
 27747  003322  6EF6               	movwf	tblptrl,c
 27748  003324  0E8E               	movlw	high _programming_line3
 27749  003326  20F4               	addwfc	prodh,w,c
 27750  003328  6EF7               	movwf	tblptrh,c
 27751  00332A                     	if	1	;There are 3 active tblptr bytes
 27752  00332A  6AF8               	clrf	tblptru,c
 27753  00332C  0E00               	movlw	low (__mediumconst shr (0+16))
 27754  00332E  22F8               	addwfc	tblptru,f,c
 27755  003330                     	endif
 27756  003330  501F               	movf	__display_programming@cntr,w,c
 27757  003332  0D01               	mullw	1
 27758  003334  0E28               	movlw	low (_display_content+40)
 27759  003336  24F3               	addwf	prodl,w,c
 27760  003338  6ED9               	movwf	fsr2l,c
 27761  00333A  0E02               	movlw	high (_display_content+40)
 27762  00333C  20F4               	addwfc	prodh,w,c
 27763  00333E  6EDA               	movwf	fsr2h,c
 27764  003340  0008               	tblrd		*
 27765  003342  CFF5 FFDF          	movff	tablat,indf2
 27766  003346  2A1F               	incf	__display_programming@cntr,f,c
 27767  003348                     l1677:
 27768  003348  501F               	movf	__display_programming@cntr,w,c
 27769  00334A  0D01               	mullw	1
 27770  00334C  0E83               	movlw	low _programming_line3
 27771  00334E  24F3               	addwf	prodl,w,c
 27772  003350  6EF6               	movwf	tblptrl,c
 27773  003352  0E8E               	movlw	high _programming_line3
 27774  003354  20F4               	addwfc	prodh,w,c
 27775  003356  6EF7               	movwf	tblptrh,c
 27776  003358                     	if	1	;There are 3 active tblptr bytes
 27777  003358  6AF8               	clrf	tblptru,c
 27778  00335A  0E00               	movlw	low (__mediumconst shr (0+16))
 27779  00335C  22F8               	addwfc	tblptru,f,c
 27780  00335E                     	endif
 27781  00335E  0008               	tblrd		*
 27782  003360  50F5               	movf	tablat,w,c
 27783  003362  0900               	iorlw	0
 27784  003364  A4D8               	btfss	status,2,c
 27785  003366  D7D9               	goto	l1678
 27786                           
 27787                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 27788  003368  EC15  F045         	call	_bootloader_get_entries	;wreg free
 27789  00336C  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27790  003370  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27791  003374  6A1B               	clrf	__display_itoa_u16@value+2,c
 27792  003376  6A1C               	clrf	__display_itoa_u16@value+3,c
 27793  003378  501F               	movf	__display_programming@cntr,w,c
 27794  00337A  0D01               	mullw	1
 27795  00337C  0E28               	movlw	low (_display_content+40)
 27796  00337E  24F3               	addwf	prodl,w,c
 27797  003380  6E1D               	movwf	__display_itoa_u16@text,c
 27798  003382  0E02               	movlw	high (_display_content+40)
 27799  003384  20F4               	addwfc	prodh,w,c
 27800  003386  6E1E               	movwf	__display_itoa_u16@text+1,c
 27801  003388  EC01  F02F         	call	__display_itoa_u16	;wreg free
 27802  00338C  261F               	addwf	__display_programming@cntr,f,c
 27803                           
 27804                           ;display.c: 520: display_content[2][cntr++] = '/';
 27805  00338E  501F               	movf	__display_programming@cntr,w,c
 27806  003390  0D01               	mullw	1
 27807  003392  0E28               	movlw	low (_display_content+40)
 27808  003394  24F3               	addwf	prodl,w,c
 27809  003396  6ED9               	movwf	fsr2l,c
 27810  003398  0E02               	movlw	high (_display_content+40)
 27811  00339A  20F4               	addwfc	prodh,w,c
 27812  00339C  6EDA               	movwf	fsr2h,c
 27813  00339E  0E2F               	movlw	47
 27814  0033A0  6EDF               	movwf	indf2,c
 27815  0033A2  2A1F               	incf	__display_programming@cntr,f,c
 27816                           
 27817                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 27818  0033A4  EC1F  F045         	call	_bootloader_get_total_entries	;wreg free
 27819  0033A8  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 27820  0033AC  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 27821  0033B0  6A1B               	clrf	__display_itoa_u16@value+2,c
 27822  0033B2  6A1C               	clrf	__display_itoa_u16@value+3,c
 27823  0033B4  501F               	movf	__display_programming@cntr,w,c
 27824  0033B6  0D01               	mullw	1
 27825  0033B8  0E28               	movlw	low (_display_content+40)
 27826  0033BA  24F3               	addwf	prodl,w,c
 27827  0033BC  6E1D               	movwf	__display_itoa_u16@text,c
 27828  0033BE  0E02               	movlw	high (_display_content+40)
 27829  0033C0  20F4               	addwfc	prodh,w,c
 27830  0033C2  6E1E               	movwf	__display_itoa_u16@text+1,c
 27831  0033C4  EC01  F02F         	call	__display_itoa_u16	;wreg free
 27832                           
 27833                           ;display.c: 523: cntr = 0;
 27834  0033C8  0E00               	movlw	0
 27835  0033CA  6E1F               	movwf	__display_programming@cntr,c
 27836                           
 27837                           ;display.c: 524: while(programming_line4[cntr])
 27838  0033CC  D017               	goto	l1680
 27839  0033CE                     
 27840                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 27841  0033CE  501F               	movf	__display_programming@cntr,w,c
 27842  0033D0  0D01               	mullw	1
 27843  0033D2  0E84               	movlw	low _programming_line4
 27844  0033D4  24F3               	addwf	prodl,w,c
 27845  0033D6  6EF6               	movwf	tblptrl,c
 27846  0033D8  0E8D               	movlw	high _programming_line4
 27847  0033DA  20F4               	addwfc	prodh,w,c
 27848  0033DC  6EF7               	movwf	tblptrh,c
 27849  0033DE                     	if	1	;There are 3 active tblptr bytes
 27850  0033DE  6AF8               	clrf	tblptru,c
 27851  0033E0  0E00               	movlw	low (__mediumconst shr (0+16))
 27852  0033E2  22F8               	addwfc	tblptru,f,c
 27853  0033E4                     	endif
 27854  0033E4  501F               	movf	__display_programming@cntr,w,c
 27855  0033E6  0D01               	mullw	1
 27856  0033E8  0E3C               	movlw	low (_display_content+60)
 27857  0033EA  24F3               	addwf	prodl,w,c
 27858  0033EC  6ED9               	movwf	fsr2l,c
 27859  0033EE  0E02               	movlw	high (_display_content+60)
 27860  0033F0  20F4               	addwfc	prodh,w,c
 27861  0033F2  6EDA               	movwf	fsr2h,c
 27862  0033F4  0008               	tblrd		*
 27863  0033F6  CFF5 FFDF          	movff	tablat,indf2
 27864  0033FA  2A1F               	incf	__display_programming@cntr,f,c
 27865  0033FC                     l1680:
 27866  0033FC  501F               	movf	__display_programming@cntr,w,c
 27867  0033FE  0D01               	mullw	1
 27868  003400  0E84               	movlw	low _programming_line4
 27869  003402  24F3               	addwf	prodl,w,c
 27870  003404  6EF6               	movwf	tblptrl,c
 27871  003406  0E8D               	movlw	high _programming_line4
 27872  003408  20F4               	addwfc	prodh,w,c
 27873  00340A  6EF7               	movwf	tblptrh,c
 27874  00340C                     	if	1	;There are 3 active tblptr bytes
 27875  00340C  6AF8               	clrf	tblptru,c
 27876  00340E  0E00               	movlw	low (__mediumconst shr (0+16))
 27877  003410  22F8               	addwfc	tblptru,f,c
 27878  003412                     	endif
 27879  003412  0008               	tblrd		*
 27880  003414  50F5               	movf	tablat,w,c
 27881  003416  0900               	iorlw	0
 27882  003418  A4D8               	btfss	status,2,c
 27883  00341A  D7D9               	goto	l1681
 27884                           
 27885                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 27886  00341C  EC1A  F045         	call	_bootloader_get_flashPagesWritten	;wreg free
 27887  003420  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 27888  003424  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 27889  003428  6A1B               	clrf	__display_itoa_u16@value+2,c
 27890  00342A  6A1C               	clrf	__display_itoa_u16@value+3,c
 27891  00342C  501F               	movf	__display_programming@cntr,w,c
 27892  00342E  0D01               	mullw	1
 27893  003430  0E3C               	movlw	low (_display_content+60)
 27894  003432  24F3               	addwf	prodl,w,c
 27895  003434  6E1D               	movwf	__display_itoa_u16@text,c
 27896  003436  0E02               	movlw	high (_display_content+60)
 27897  003438  20F4               	addwfc	prodh,w,c
 27898  00343A  6E1E               	movwf	__display_itoa_u16@text+1,c
 27899  00343C  EC01  F02F         	call	__display_itoa_u16	;wreg free
 27900  003440  0012               	return		;funcret
 27901  003442                     __end_of__display_programming:
 27902                           	opt stack 0
 27903                           tosu	equ	0xFFF
 27904                           tosh	equ	0xFFE
 27905                           tosl	equ	0xFFD
 27906                           pclath	equ	0xFFA
 27907                           tblptru	equ	0xFF8
 27908                           tblptrh	equ	0xFF7
 27909                           tblptrl	equ	0xFF6
 27910                           tablat	equ	0xFF5
 27911                           prodh	equ	0xFF4
 27912                           prodl	equ	0xFF3
 27913                           intcon	equ	0xFF2
 27914                           intcon2	equ	0xFF1
 27915                           intcon3	equ	0xFF0
 27916                           indf0	equ	0xFEF
 27917                           postinc0	equ	0xFEE
 27918                           fsr0h	equ	0xFEA
 27919                           fsr0l	equ	0xFE9
 27920                           wreg	equ	0xFE8
 27921                           indf1	equ	0xFE7
 27922                           postdec1	equ	0xFE5
 27923                           plusw1	equ	0xFE3
 27924                           fsr1h	equ	0xFE2
 27925                           fsr1l	equ	0xFE1
 27926                           indf2	equ	0xFDF
 27927                           postinc2	equ	0xFDE
 27928                           postdec2	equ	0xFDD
 27929                           plusw2	equ	0xFDB
 27930                           fsr2h	equ	0xFDA
 27931                           fsr2l	equ	0xFD9
 27932                           status	equ	0xFD8
 27933                           
 27934 ;; *************** function __display_found *****************
 27935 ;; Defined at:
 27936 ;;		line 390 in file "display.c"
 27937 ;; Parameters:    Size  Location     Type
 27938 ;;		None
 27939 ;; Auto vars:     Size  Location     Type
 27940 ;;  cntr            1   39[COMRAM] unsigned char 
 27941 ;;  start           1   38[COMRAM] unsigned char 
 27942 ;; Return value:  Size  Location     Type
 27943 ;;                  1    wreg      void 
 27944 ;; Registers used:
 27945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27946 ;; Tracked objects:
 27947 ;;		On entry : 0/0
 27948 ;;		On exit  : 0/0
 27949 ;;		Unchanged: 0/0
 27950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27955 ;;Total ram usage:        4 bytes
 27956 ;; Hardware stack levels used:    1
 27957 ;; Hardware stack levels required when called:    5
 27958 ;; This function calls:
 27959 ;;		__display_itoa_u32
 27960 ;;		_bootloader_get_file_size
 27961 ;; This function is called by:
 27962 ;;		_display_prepare
 27963 ;; This function uses a non-reentrant model
 27964 ;;
 27965                           
 27966                           	psect	text134
 27967  002EB4                     __ptext134:
 27968                           	opt stack 0
 27969  002EB4                     __display_found:
 27970                           	opt stack 21
 27971                           
 27972                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 27973                           
 27974                           ;incstack = 0
 27975  002EB4  0E00               	movlw	0
 27976  002EB6  6E28               	movwf	__display_found@cntr,c
 27977                           
 27978                           ;display.c: 396: while(found_line1[cntr])
 27979  002EB8  D017               	goto	l1592
 27980  002EBA                     
 27981                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 27982  002EBA  5028               	movf	__display_found@cntr,w,c
 27983  002EBC  0D01               	mullw	1
 27984  002EBE  0ED4               	movlw	low _found_line1
 27985  002EC0  24F3               	addwf	prodl,w,c
 27986  002EC2  6EF6               	movwf	tblptrl,c
 27987  002EC4  0E8D               	movlw	high _found_line1
 27988  002EC6  20F4               	addwfc	prodh,w,c
 27989  002EC8  6EF7               	movwf	tblptrh,c
 27990  002ECA                     	if	1	;There are 3 active tblptr bytes
 27991  002ECA  6AF8               	clrf	tblptru,c
 27992  002ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 27993  002ECE  22F8               	addwfc	tblptru,f,c
 27994  002ED0                     	endif
 27995  002ED0  5028               	movf	__display_found@cntr,w,c
 27996  002ED2  0D01               	mullw	1
 27997  002ED4  0E00               	movlw	low _display_content
 27998  002ED6  24F3               	addwf	prodl,w,c
 27999  002ED8  6ED9               	movwf	fsr2l,c
 28000  002EDA  0E02               	movlw	high _display_content
 28001  002EDC  20F4               	addwfc	prodh,w,c
 28002  002EDE  6EDA               	movwf	fsr2h,c
 28003  002EE0  0008               	tblrd		*
 28004  002EE2  CFF5 FFDF          	movff	tablat,indf2
 28005  002EE6  2A28               	incf	__display_found@cntr,f,c
 28006  002EE8                     l1592:
 28007  002EE8  5028               	movf	__display_found@cntr,w,c
 28008  002EEA  0D01               	mullw	1
 28009  002EEC  0ED4               	movlw	low _found_line1
 28010  002EEE  24F3               	addwf	prodl,w,c
 28011  002EF0  6EF6               	movwf	tblptrl,c
 28012  002EF2  0E8D               	movlw	high _found_line1
 28013  002EF4  20F4               	addwfc	prodh,w,c
 28014  002EF6  6EF7               	movwf	tblptrh,c
 28015  002EF8                     	if	1	;There are 3 active tblptr bytes
 28016  002EF8  6AF8               	clrf	tblptru,c
 28017  002EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 28018  002EFC  22F8               	addwfc	tblptru,f,c
 28019  002EFE                     	endif
 28020  002EFE  0008               	tblrd		*
 28021  002F00  50F5               	movf	tablat,w,c
 28022  002F02  0900               	iorlw	0
 28023  002F04  A4D8               	btfss	status,2,c
 28024  002F06  D7D9               	goto	l1593
 28025                           
 28026                           ;display.c: 399: cntr = 0;
 28027  002F08  0E00               	movlw	0
 28028  002F0A  6E28               	movwf	__display_found@cntr,c
 28029                           
 28030                           ;display.c: 400: while(found_line2[cntr])
 28031  002F0C  D017               	goto	l1595
 28032  002F0E                     
 28033                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 28034  002F0E  5028               	movf	__display_found@cntr,w,c
 28035  002F10  0D01               	mullw	1
 28036  002F12  0EE9               	movlw	low _found_line2
 28037  002F14  24F3               	addwf	prodl,w,c
 28038  002F16  6EF6               	movwf	tblptrl,c
 28039  002F18  0E8C               	movlw	high _found_line2
 28040  002F1A  20F4               	addwfc	prodh,w,c
 28041  002F1C  6EF7               	movwf	tblptrh,c
 28042  002F1E                     	if	1	;There are 3 active tblptr bytes
 28043  002F1E  6AF8               	clrf	tblptru,c
 28044  002F20  0E00               	movlw	low (__mediumconst shr (0+16))
 28045  002F22  22F8               	addwfc	tblptru,f,c
 28046  002F24                     	endif
 28047  002F24  5028               	movf	__display_found@cntr,w,c
 28048  002F26  0D01               	mullw	1
 28049  002F28  0E14               	movlw	low (_display_content+20)
 28050  002F2A  24F3               	addwf	prodl,w,c
 28051  002F2C  6ED9               	movwf	fsr2l,c
 28052  002F2E  0E02               	movlw	high (_display_content+20)
 28053  002F30  20F4               	addwfc	prodh,w,c
 28054  002F32  6EDA               	movwf	fsr2h,c
 28055  002F34  0008               	tblrd		*
 28056  002F36  CFF5 FFDF          	movff	tablat,indf2
 28057  002F3A  2A28               	incf	__display_found@cntr,f,c
 28058  002F3C                     l1595:
 28059  002F3C  5028               	movf	__display_found@cntr,w,c
 28060  002F3E  0D01               	mullw	1
 28061  002F40  0EE9               	movlw	low _found_line2
 28062  002F42  24F3               	addwf	prodl,w,c
 28063  002F44  6EF6               	movwf	tblptrl,c
 28064  002F46  0E8C               	movlw	high _found_line2
 28065  002F48  20F4               	addwfc	prodh,w,c
 28066  002F4A  6EF7               	movwf	tblptrh,c
 28067  002F4C                     	if	1	;There are 3 active tblptr bytes
 28068  002F4C  6AF8               	clrf	tblptru,c
 28069  002F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 28070  002F50  22F8               	addwfc	tblptru,f,c
 28071  002F52                     	endif
 28072  002F52  0008               	tblrd		*
 28073  002F54  50F5               	movf	tablat,w,c
 28074  002F56  0900               	iorlw	0
 28075  002F58  A4D8               	btfss	status,2,c
 28076  002F5A  D7D9               	goto	l1596
 28077                           
 28078                           ;display.c: 403: cntr = 0;
 28079  002F5C  0E00               	movlw	0
 28080  002F5E  6E28               	movwf	__display_found@cntr,c
 28081                           
 28082                           ;display.c: 404: while(found_line3[cntr])
 28083  002F60  D017               	goto	l1598
 28084  002F62                     
 28085                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 28086  002F62  5028               	movf	__display_found@cntr,w,c
 28087  002F64  0D01               	mullw	1
 28088  002F66  0E98               	movlw	low _found_line3
 28089  002F68  24F3               	addwf	prodl,w,c
 28090  002F6A  6EF6               	movwf	tblptrl,c
 28091  002F6C  0E8E               	movlw	high _found_line3
 28092  002F6E  20F4               	addwfc	prodh,w,c
 28093  002F70  6EF7               	movwf	tblptrh,c
 28094  002F72                     	if	1	;There are 3 active tblptr bytes
 28095  002F72  6AF8               	clrf	tblptru,c
 28096  002F74  0E00               	movlw	low (__mediumconst shr (0+16))
 28097  002F76  22F8               	addwfc	tblptru,f,c
 28098  002F78                     	endif
 28099  002F78  5028               	movf	__display_found@cntr,w,c
 28100  002F7A  0D01               	mullw	1
 28101  002F7C  0E28               	movlw	low (_display_content+40)
 28102  002F7E  24F3               	addwf	prodl,w,c
 28103  002F80  6ED9               	movwf	fsr2l,c
 28104  002F82  0E02               	movlw	high (_display_content+40)
 28105  002F84  20F4               	addwfc	prodh,w,c
 28106  002F86  6EDA               	movwf	fsr2h,c
 28107  002F88  0008               	tblrd		*
 28108  002F8A  CFF5 FFDF          	movff	tablat,indf2
 28109  002F8E  2A28               	incf	__display_found@cntr,f,c
 28110  002F90                     l1598:
 28111  002F90  5028               	movf	__display_found@cntr,w,c
 28112  002F92  0D01               	mullw	1
 28113  002F94  0E98               	movlw	low _found_line3
 28114  002F96  24F3               	addwf	prodl,w,c
 28115  002F98  6EF6               	movwf	tblptrl,c
 28116  002F9A  0E8E               	movlw	high _found_line3
 28117  002F9C  20F4               	addwfc	prodh,w,c
 28118  002F9E  6EF7               	movwf	tblptrh,c
 28119  002FA0                     	if	1	;There are 3 active tblptr bytes
 28120  002FA0  6AF8               	clrf	tblptru,c
 28121  002FA2  0E00               	movlw	low (__mediumconst shr (0+16))
 28122  002FA4  22F8               	addwfc	tblptru,f,c
 28123  002FA6                     	endif
 28124  002FA6  0008               	tblrd		*
 28125  002FA8  50F5               	movf	tablat,w,c
 28126  002FAA  0900               	iorlw	0
 28127  002FAC  A4D8               	btfss	status,2,c
 28128  002FAE  D7D9               	goto	l1599
 28129                           
 28130                           ;display.c: 406: start = cntr;
 28131  002FB0  C028  F027         	movff	__display_found@cntr,__display_found@start
 28132                           
 28133                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28134  002FB4  ECAB  F044         	call	_bootloader_get_file_size	;wreg free
 28135  002FB8  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28136  002FBC  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28137  002FC0  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28138  002FC4  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28139  002FC8  5028               	movf	__display_found@cntr,w,c
 28140  002FCA  0D01               	mullw	1
 28141  002FCC  0E28               	movlw	low (_display_content+40)
 28142  002FCE  24F3               	addwf	prodl,w,c
 28143  002FD0  6E23               	movwf	__display_itoa_u32@text,c
 28144  002FD2  0E02               	movlw	high (_display_content+40)
 28145  002FD4  20F4               	addwfc	prodh,w,c
 28146  002FD6  6E24               	movwf	__display_itoa_u32@text+1,c
 28147  002FD8  EC15  F006         	call	__display_itoa_u32	;wreg free
 28148  002FDC  2627               	addwf	__display_found@start,f,c
 28149                           
 28150                           ;display.c: 408: cntr = 0;
 28151  002FDE  0E00               	movlw	0
 28152  002FE0  6E28               	movwf	__display_found@cntr,c
 28153                           
 28154                           ;display.c: 409: while(found_line3b[cntr])
 28155  002FE2  D01C               	goto	l1601
 28156  002FE4                     
 28157                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 28158  002FE4  5028               	movf	__display_found@cntr,w,c
 28159  002FE6  0D01               	mullw	1
 28160  002FE8  0E91               	movlw	low _found_line3b
 28161  002FEA  24F3               	addwf	prodl,w,c
 28162  002FEC  6EF6               	movwf	tblptrl,c
 28163  002FEE  0E8E               	movlw	high _found_line3b
 28164  002FF0  20F4               	addwfc	prodh,w,c
 28165  002FF2  6EF7               	movwf	tblptrh,c
 28166  002FF4                     	if	1	;There are 3 active tblptr bytes
 28167  002FF4  6AF8               	clrf	tblptru,c
 28168  002FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 28169  002FF8  22F8               	addwfc	tblptru,f,c
 28170  002FFA                     	endif
 28171  002FFA  5028               	movf	__display_found@cntr,w,c
 28172  002FFC  C027  F025         	movff	__display_found@start,??__display_found
 28173  003000  6A26               	clrf	(??__display_found+1)& (0+255),c
 28174  003002  2625               	addwf	??__display_found,f,c
 28175  003004  0E00               	movlw	0
 28176  003006  2226               	addwfc	??__display_found+1,f,c
 28177  003008  0E28               	movlw	low (_display_content+40)
 28178  00300A  2425               	addwf	??__display_found,w,c
 28179  00300C  6ED9               	movwf	fsr2l,c
 28180  00300E  0E02               	movlw	high (_display_content+40)
 28181  003010  2026               	addwfc	??__display_found+1,w,c
 28182  003012  6EDA               	movwf	fsr2h,c
 28183  003014  0008               	tblrd		*
 28184  003016  CFF5 FFDF          	movff	tablat,indf2
 28185  00301A  2A28               	incf	__display_found@cntr,f,c
 28186  00301C                     l1601:
 28187  00301C  5028               	movf	__display_found@cntr,w,c
 28188  00301E  0D01               	mullw	1
 28189  003020  0E91               	movlw	low _found_line3b
 28190  003022  24F3               	addwf	prodl,w,c
 28191  003024  6EF6               	movwf	tblptrl,c
 28192  003026  0E8E               	movlw	high _found_line3b
 28193  003028  20F4               	addwfc	prodh,w,c
 28194  00302A  6EF7               	movwf	tblptrh,c
 28195  00302C                     	if	1	;There are 3 active tblptr bytes
 28196  00302C  6AF8               	clrf	tblptru,c
 28197  00302E  0E00               	movlw	low (__mediumconst shr (0+16))
 28198  003030  22F8               	addwfc	tblptru,f,c
 28199  003032                     	endif
 28200  003032  0008               	tblrd		*
 28201  003034  50F5               	movf	tablat,w,c
 28202  003036  0900               	iorlw	0
 28203  003038  A4D8               	btfss	status,2,c
 28204  00303A  D7D4               	goto	l1602
 28205                           
 28206                           ;display.c: 412: cntr = 0;
 28207  00303C  0E00               	movlw	0
 28208  00303E  6E28               	movwf	__display_found@cntr,c
 28209                           
 28210                           ;display.c: 413: while(found_line4[cntr])
 28211  003040  D017               	goto	l1604
 28212  003042                     
 28213                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 28214  003042  5028               	movf	__display_found@cntr,w,c
 28215  003044  0D01               	mullw	1
 28216  003046  0E20               	movlw	low _found_line4
 28217  003048  24F3               	addwf	prodl,w,c
 28218  00304A  6EF6               	movwf	tblptrl,c
 28219  00304C  0E8D               	movlw	high _found_line4
 28220  00304E  20F4               	addwfc	prodh,w,c
 28221  003050  6EF7               	movwf	tblptrh,c
 28222  003052                     	if	1	;There are 3 active tblptr bytes
 28223  003052  6AF8               	clrf	tblptru,c
 28224  003054  0E00               	movlw	low (__mediumconst shr (0+16))
 28225  003056  22F8               	addwfc	tblptru,f,c
 28226  003058                     	endif
 28227  003058  5028               	movf	__display_found@cntr,w,c
 28228  00305A  0D01               	mullw	1
 28229  00305C  0E3C               	movlw	low (_display_content+60)
 28230  00305E  24F3               	addwf	prodl,w,c
 28231  003060  6ED9               	movwf	fsr2l,c
 28232  003062  0E02               	movlw	high (_display_content+60)
 28233  003064  20F4               	addwfc	prodh,w,c
 28234  003066  6EDA               	movwf	fsr2h,c
 28235  003068  0008               	tblrd		*
 28236  00306A  CFF5 FFDF          	movff	tablat,indf2
 28237  00306E  2A28               	incf	__display_found@cntr,f,c
 28238  003070                     l1604:
 28239  003070  5028               	movf	__display_found@cntr,w,c
 28240  003072  0D01               	mullw	1
 28241  003074  0E20               	movlw	low _found_line4
 28242  003076  24F3               	addwf	prodl,w,c
 28243  003078  6EF6               	movwf	tblptrl,c
 28244  00307A  0E8D               	movlw	high _found_line4
 28245  00307C  20F4               	addwfc	prodh,w,c
 28246  00307E  6EF7               	movwf	tblptrh,c
 28247  003080                     	if	1	;There are 3 active tblptr bytes
 28248  003080  6AF8               	clrf	tblptru,c
 28249  003082  0E00               	movlw	low (__mediumconst shr (0+16))
 28250  003084  22F8               	addwfc	tblptru,f,c
 28251  003086                     	endif
 28252  003086  0008               	tblrd		*
 28253  003088  50F5               	movf	tablat,w,c
 28254  00308A  0900               	iorlw	0
 28255  00308C  B4D8               	btfsc	status,2,c
 28256  00308E  0012               	return	
 28257  003090  D7D8               	goto	l1605
 28258  003092                     __end_of__display_found:
 28259                           	opt stack 0
 28260                           tosu	equ	0xFFF
 28261                           tosh	equ	0xFFE
 28262                           tosl	equ	0xFFD
 28263                           pclath	equ	0xFFA
 28264                           tblptru	equ	0xFF8
 28265                           tblptrh	equ	0xFF7
 28266                           tblptrl	equ	0xFF6
 28267                           tablat	equ	0xFF5
 28268                           prodh	equ	0xFF4
 28269                           prodl	equ	0xFF3
 28270                           intcon	equ	0xFF2
 28271                           intcon2	equ	0xFF1
 28272                           intcon3	equ	0xFF0
 28273                           indf0	equ	0xFEF
 28274                           postinc0	equ	0xFEE
 28275                           fsr0h	equ	0xFEA
 28276                           fsr0l	equ	0xFE9
 28277                           wreg	equ	0xFE8
 28278                           indf1	equ	0xFE7
 28279                           postdec1	equ	0xFE5
 28280                           plusw1	equ	0xFE3
 28281                           fsr1h	equ	0xFE2
 28282                           fsr1l	equ	0xFE1
 28283                           indf2	equ	0xFDF
 28284                           postinc2	equ	0xFDE
 28285                           postdec2	equ	0xFDD
 28286                           plusw2	equ	0xFDB
 28287                           fsr2h	equ	0xFDA
 28288                           fsr2l	equ	0xFD9
 28289                           status	equ	0xFD8
 28290                           
 28291 ;; *************** function _bootloader_get_file_size *****************
 28292 ;; Defined at:
 28293 ;;		line 460 in file "bootloader.c"
 28294 ;; Parameters:    Size  Location     Type
 28295 ;;		None
 28296 ;; Auto vars:     Size  Location     Type
 28297 ;;		None
 28298 ;; Return value:  Size  Location     Type
 28299 ;;                  4    0[COMRAM] unsigned long 
 28300 ;; Registers used:
 28301 ;;		None
 28302 ;; Tracked objects:
 28303 ;;		On entry : 0/0
 28304 ;;		On exit  : 0/0
 28305 ;;		Unchanged: 0/0
 28306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28311 ;;Total ram usage:        4 bytes
 28312 ;; Hardware stack levels used:    1
 28313 ;; This function calls:
 28314 ;;		Nothing
 28315 ;; This function is called by:
 28316 ;;		__display_found
 28317 ;;		__fill_buffer_get_bootloader_details
 28318 ;; This function uses a non-reentrant model
 28319 ;;
 28320                           
 28321                           	psect	text135
 28322  008956                     __ptext135:
 28323                           	opt stack 0
 28324  008956                     _bootloader_get_file_size:
 28325                           	opt stack 25
 28326                           
 28327                           ;bootloader.c: 462: return hex_file_size;
 28328                           
 28329                           ;incstack = 0
 28330  008956  C14A  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28331  00895A  C14B  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28332  00895E  C14C  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28333  008962  C14D  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28334  008966  0012               	return		;funcret
 28335  008968                     __end_of_bootloader_get_file_size:
 28336                           	opt stack 0
 28337                           tosu	equ	0xFFF
 28338                           tosh	equ	0xFFE
 28339                           tosl	equ	0xFFD
 28340                           pclath	equ	0xFFA
 28341                           tblptru	equ	0xFF8
 28342                           tblptrh	equ	0xFF7
 28343                           tblptrl	equ	0xFF6
 28344                           tablat	equ	0xFF5
 28345                           prodh	equ	0xFF4
 28346                           prodl	equ	0xFF3
 28347                           intcon	equ	0xFF2
 28348                           intcon2	equ	0xFF1
 28349                           intcon3	equ	0xFF0
 28350                           indf0	equ	0xFEF
 28351                           postinc0	equ	0xFEE
 28352                           fsr0h	equ	0xFEA
 28353                           fsr0l	equ	0xFE9
 28354                           wreg	equ	0xFE8
 28355                           indf1	equ	0xFE7
 28356                           postdec1	equ	0xFE5
 28357                           plusw1	equ	0xFE3
 28358                           fsr1h	equ	0xFE2
 28359                           fsr1l	equ	0xFE1
 28360                           indf2	equ	0xFDF
 28361                           postinc2	equ	0xFDE
 28362                           postdec2	equ	0xFDD
 28363                           plusw2	equ	0xFDB
 28364                           fsr2h	equ	0xFDA
 28365                           fsr2l	equ	0xFD9
 28366                           status	equ	0xFD8
 28367                           
 28368 ;; *************** function __display_failed *****************
 28369 ;; Defined at:
 28370 ;;		line 455 in file "display.c"
 28371 ;; Parameters:    Size  Location     Type
 28372 ;;		None
 28373 ;; Auto vars:     Size  Location     Type
 28374 ;;  cntr            1   36[COMRAM] unsigned char 
 28375 ;;  start           1    0        unsigned char 
 28376 ;; Return value:  Size  Location     Type
 28377 ;;                  1    wreg      void 
 28378 ;; Registers used:
 28379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28380 ;; Tracked objects:
 28381 ;;		On entry : 0/0
 28382 ;;		On exit  : 0/0
 28383 ;;		Unchanged: 0/0
 28384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28389 ;;Total ram usage:        1 bytes
 28390 ;; Hardware stack levels used:    1
 28391 ;; Hardware stack levels required when called:    5
 28392 ;; This function calls:
 28393 ;;		__display_itoa_u16
 28394 ;;		__display_itoa_u32
 28395 ;;		_bootloader_get_entries
 28396 ;;		_bootloader_get_error
 28397 ;;		_bootloader_get_rec_address
 28398 ;; This function is called by:
 28399 ;;		_display_prepare
 28400 ;; This function uses a non-reentrant model
 28401 ;;
 28402                           
 28403                           	psect	text136
 28404  0012DC                     __ptext136:
 28405                           	opt stack 0
 28406  0012DC                     __display_failed:
 28407                           	opt stack 21
 28408                           
 28409                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 28410                           
 28411                           ;incstack = 0
 28412  0012DC  0E00               	movlw	0
 28413  0012DE  6E25               	movwf	__display_failed@cntr,c
 28414                           
 28415                           ;display.c: 460: while(failed_line1[cntr])
 28416  0012E0  D017               	goto	l1637
 28417  0012E2                     
 28418                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 28419  0012E2  5025               	movf	__display_failed@cntr,w,c
 28420  0012E4  0D01               	mullw	1
 28421  0012E6  0EA4               	movlw	low _failed_line1
 28422  0012E8  24F3               	addwf	prodl,w,c
 28423  0012EA  6EF6               	movwf	tblptrl,c
 28424  0012EC  0E8D               	movlw	high _failed_line1
 28425  0012EE  20F4               	addwfc	prodh,w,c
 28426  0012F0  6EF7               	movwf	tblptrh,c
 28427  0012F2                     	if	1	;There are 3 active tblptr bytes
 28428  0012F2  6AF8               	clrf	tblptru,c
 28429  0012F4  0E00               	movlw	low (__mediumconst shr (0+16))
 28430  0012F6  22F8               	addwfc	tblptru,f,c
 28431  0012F8                     	endif
 28432  0012F8  5025               	movf	__display_failed@cntr,w,c
 28433  0012FA  0D01               	mullw	1
 28434  0012FC  0E00               	movlw	low _display_content
 28435  0012FE  24F3               	addwf	prodl,w,c
 28436  001300  6ED9               	movwf	fsr2l,c
 28437  001302  0E02               	movlw	high _display_content
 28438  001304  20F4               	addwfc	prodh,w,c
 28439  001306  6EDA               	movwf	fsr2h,c
 28440  001308  0008               	tblrd		*
 28441  00130A  CFF5 FFDF          	movff	tablat,indf2
 28442  00130E  2A25               	incf	__display_failed@cntr,f,c
 28443  001310                     l1637:
 28444  001310  5025               	movf	__display_failed@cntr,w,c
 28445  001312  0D01               	mullw	1
 28446  001314  0EA4               	movlw	low _failed_line1
 28447  001316  24F3               	addwf	prodl,w,c
 28448  001318  6EF6               	movwf	tblptrl,c
 28449  00131A  0E8D               	movlw	high _failed_line1
 28450  00131C  20F4               	addwfc	prodh,w,c
 28451  00131E  6EF7               	movwf	tblptrh,c
 28452  001320                     	if	1	;There are 3 active tblptr bytes
 28453  001320  6AF8               	clrf	tblptru,c
 28454  001322  0E00               	movlw	low (__mediumconst shr (0+16))
 28455  001324  22F8               	addwfc	tblptru,f,c
 28456  001326                     	endif
 28457  001326  0008               	tblrd		*
 28458  001328  50F5               	movf	tablat,w,c
 28459  00132A  0900               	iorlw	0
 28460  00132C  A4D8               	btfss	status,2,c
 28461  00132E  D7D9               	goto	l1638
 28462                           
 28463                           ;display.c: 462: cntr = 0;
 28464  001330  0E00               	movlw	0
 28465  001332  6E25               	movwf	__display_failed@cntr,c
 28466                           
 28467                           ;display.c: 463: while(failed_line2[cntr])
 28468  001334  D017               	goto	l1640
 28469  001336                     
 28470                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 28471  001336  5025               	movf	__display_failed@cntr,w,c
 28472  001338  0D01               	mullw	1
 28473  00133A  0E0E               	movlw	low _failed_line2
 28474  00133C  24F3               	addwf	prodl,w,c
 28475  00133E  6EF6               	movwf	tblptrl,c
 28476  001340  0E8D               	movlw	high _failed_line2
 28477  001342  20F4               	addwfc	prodh,w,c
 28478  001344  6EF7               	movwf	tblptrh,c
 28479  001346                     	if	1	;There are 3 active tblptr bytes
 28480  001346  6AF8               	clrf	tblptru,c
 28481  001348  0E00               	movlw	low (__mediumconst shr (0+16))
 28482  00134A  22F8               	addwfc	tblptru,f,c
 28483  00134C                     	endif
 28484  00134C  5025               	movf	__display_failed@cntr,w,c
 28485  00134E  0D01               	mullw	1
 28486  001350  0E14               	movlw	low (_display_content+20)
 28487  001352  24F3               	addwf	prodl,w,c
 28488  001354  6ED9               	movwf	fsr2l,c
 28489  001356  0E02               	movlw	high (_display_content+20)
 28490  001358  20F4               	addwfc	prodh,w,c
 28491  00135A  6EDA               	movwf	fsr2h,c
 28492  00135C  0008               	tblrd		*
 28493  00135E  CFF5 FFDF          	movff	tablat,indf2
 28494  001362  2A25               	incf	__display_failed@cntr,f,c
 28495  001364                     l1640:
 28496  001364  5025               	movf	__display_failed@cntr,w,c
 28497  001366  0D01               	mullw	1
 28498  001368  0E0E               	movlw	low _failed_line2
 28499  00136A  24F3               	addwf	prodl,w,c
 28500  00136C  6EF6               	movwf	tblptrl,c
 28501  00136E  0E8D               	movlw	high _failed_line2
 28502  001370  20F4               	addwfc	prodh,w,c
 28503  001372  6EF7               	movwf	tblptrh,c
 28504  001374                     	if	1	;There are 3 active tblptr bytes
 28505  001374  6AF8               	clrf	tblptru,c
 28506  001376  0E00               	movlw	low (__mediumconst shr (0+16))
 28507  001378  22F8               	addwfc	tblptru,f,c
 28508  00137A                     	endif
 28509  00137A  0008               	tblrd		*
 28510  00137C  50F5               	movf	tablat,w,c
 28511  00137E  0900               	iorlw	0
 28512  001380  A4D8               	btfss	status,2,c
 28513  001382  D7D9               	goto	l1641
 28514                           
 28515                           ;display.c: 466: cntr = 0;
 28516  001384  0E00               	movlw	0
 28517  001386  6E25               	movwf	__display_failed@cntr,c
 28518                           
 28519                           ;display.c: 467: switch(bootloader_get_error())
 28520  001388  D0D6               	goto	l1643
 28521  00138A                     
 28522                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28523  00138A  5025               	movf	__display_failed@cntr,w,c
 28524  00138C  0D01               	mullw	1
 28525  00138E  0ED6               	movlw	low _failed_line3_startCode
 28526  001390  24F3               	addwf	prodl,w,c
 28527  001392  6EF6               	movwf	tblptrl,c
 28528  001394  0E8C               	movlw	high _failed_line3_startCode
 28529  001396  20F4               	addwfc	prodh,w,c
 28530  001398  6EF7               	movwf	tblptrh,c
 28531  00139A                     	if	1	;There are 3 active tblptr bytes
 28532  00139A  6AF8               	clrf	tblptru,c
 28533  00139C  0E00               	movlw	low (__mediumconst shr (0+16))
 28534  00139E  22F8               	addwfc	tblptru,f,c
 28535  0013A0                     	endif
 28536  0013A0  5025               	movf	__display_failed@cntr,w,c
 28537  0013A2  0D01               	mullw	1
 28538  0013A4  0E28               	movlw	low (_display_content+40)
 28539  0013A6  24F3               	addwf	prodl,w,c
 28540  0013A8  6ED9               	movwf	fsr2l,c
 28541  0013AA  0E02               	movlw	high (_display_content+40)
 28542  0013AC  20F4               	addwfc	prodh,w,c
 28543  0013AE  6EDA               	movwf	fsr2h,c
 28544  0013B0  0008               	tblrd		*
 28545  0013B2  CFF5 FFDF          	movff	tablat,indf2
 28546  0013B6  2A25               	incf	__display_failed@cntr,f,c
 28547  0013B8  5025               	movf	__display_failed@cntr,w,c
 28548  0013BA  0D01               	mullw	1
 28549  0013BC  0ED6               	movlw	low _failed_line3_startCode
 28550  0013BE  24F3               	addwf	prodl,w,c
 28551  0013C0  6EF6               	movwf	tblptrl,c
 28552  0013C2  0E8C               	movlw	high _failed_line3_startCode
 28553  0013C4  20F4               	addwfc	prodh,w,c
 28554  0013C6  6EF7               	movwf	tblptrh,c
 28555  0013C8                     	if	1	;There are 3 active tblptr bytes
 28556  0013C8  6AF8               	clrf	tblptru,c
 28557  0013CA  0E00               	movlw	low (__mediumconst shr (0+16))
 28558  0013CC  22F8               	addwfc	tblptru,f,c
 28559  0013CE                     	endif
 28560  0013CE  0008               	tblrd		*
 28561  0013D0  50F5               	movf	tablat,w,c
 28562  0013D2  0900               	iorlw	0
 28563  0013D4  B4D8               	btfsc	status,2,c
 28564  0013D6  D0C0               	goto	l1648
 28565  0013D8  D7D8               	goto	l1646
 28566  0013DA                     
 28567                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 28568  0013DA  5025               	movf	__display_failed@cntr,w,c
 28569  0013DC  0D01               	mullw	1
 28570  0013DE  0E04               	movlw	low _failed_line3_checksum
 28571  0013E0  24F3               	addwf	prodl,w,c
 28572  0013E2  6EF6               	movwf	tblptrl,c
 28573  0013E4  0E8E               	movlw	high _failed_line3_checksum
 28574  0013E6  20F4               	addwfc	prodh,w,c
 28575  0013E8  6EF7               	movwf	tblptrh,c
 28576  0013EA                     	if	1	;There are 3 active tblptr bytes
 28577  0013EA  6AF8               	clrf	tblptru,c
 28578  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
 28579  0013EE  22F8               	addwfc	tblptru,f,c
 28580  0013F0                     	endif
 28581  0013F0  5025               	movf	__display_failed@cntr,w,c
 28582  0013F2  0D01               	mullw	1
 28583  0013F4  0E28               	movlw	low (_display_content+40)
 28584  0013F6  24F3               	addwf	prodl,w,c
 28585  0013F8  6ED9               	movwf	fsr2l,c
 28586  0013FA  0E02               	movlw	high (_display_content+40)
 28587  0013FC  20F4               	addwfc	prodh,w,c
 28588  0013FE  6EDA               	movwf	fsr2h,c
 28589  001400  0008               	tblrd		*
 28590  001402  CFF5 FFDF          	movff	tablat,indf2
 28591  001406  2A25               	incf	__display_failed@cntr,f,c
 28592  001408  5025               	movf	__display_failed@cntr,w,c
 28593  00140A  0D01               	mullw	1
 28594  00140C  0E04               	movlw	low _failed_line3_checksum
 28595  00140E  24F3               	addwf	prodl,w,c
 28596  001410  6EF6               	movwf	tblptrl,c
 28597  001412  0E8E               	movlw	high _failed_line3_checksum
 28598  001414  20F4               	addwfc	prodh,w,c
 28599  001416  6EF7               	movwf	tblptrh,c
 28600  001418                     	if	1	;There are 3 active tblptr bytes
 28601  001418  6AF8               	clrf	tblptru,c
 28602  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 28603  00141C  22F8               	addwfc	tblptru,f,c
 28604  00141E                     	endif
 28605  00141E  0008               	tblrd		*
 28606  001420  50F5               	movf	tablat,w,c
 28607  001422  0900               	iorlw	0
 28608  001424  B4D8               	btfsc	status,2,c
 28609  001426  D098               	goto	l1648
 28610  001428  D7D8               	goto	l1651
 28611  00142A                     
 28612                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 28613  00142A  5025               	movf	__display_failed@cntr,w,c
 28614  00142C  0D01               	mullw	1
 28615  00142E  0E13               	movlw	low _failed_line3_noNextRecord
 28616  001430  24F3               	addwf	prodl,w,c
 28617  001432  6EF6               	movwf	tblptrl,c
 28618  001434  0E8E               	movlw	high _failed_line3_noNextRecord
 28619  001436  20F4               	addwfc	prodh,w,c
 28620  001438  6EF7               	movwf	tblptrh,c
 28621  00143A                     	if	1	;There are 3 active tblptr bytes
 28622  00143A  6AF8               	clrf	tblptru,c
 28623  00143C  0E00               	movlw	low (__mediumconst shr (0+16))
 28624  00143E  22F8               	addwfc	tblptru,f,c
 28625  001440                     	endif
 28626  001440  5025               	movf	__display_failed@cntr,w,c
 28627  001442  0D01               	mullw	1
 28628  001444  0E28               	movlw	low (_display_content+40)
 28629  001446  24F3               	addwf	prodl,w,c
 28630  001448  6ED9               	movwf	fsr2l,c
 28631  00144A  0E02               	movlw	high (_display_content+40)
 28632  00144C  20F4               	addwfc	prodh,w,c
 28633  00144E  6EDA               	movwf	fsr2h,c
 28634  001450  0008               	tblrd		*
 28635  001452  CFF5 FFDF          	movff	tablat,indf2
 28636  001456  2A25               	incf	__display_failed@cntr,f,c
 28637  001458  5025               	movf	__display_failed@cntr,w,c
 28638  00145A  0D01               	mullw	1
 28639  00145C  0E13               	movlw	low _failed_line3_noNextRecord
 28640  00145E  24F3               	addwf	prodl,w,c
 28641  001460  6EF6               	movwf	tblptrl,c
 28642  001462  0E8E               	movlw	high _failed_line3_noNextRecord
 28643  001464  20F4               	addwfc	prodh,w,c
 28644  001466  6EF7               	movwf	tblptrh,c
 28645  001468                     	if	1	;There are 3 active tblptr bytes
 28646  001468  6AF8               	clrf	tblptru,c
 28647  00146A  0E00               	movlw	low (__mediumconst shr (0+16))
 28648  00146C  22F8               	addwfc	tblptru,f,c
 28649  00146E                     	endif
 28650  00146E  0008               	tblrd		*
 28651  001470  50F5               	movf	tablat,w,c
 28652  001472  0900               	iorlw	0
 28653  001474  B4D8               	btfsc	status,2,c
 28654  001476  D070               	goto	l1648
 28655  001478  D7D8               	goto	l1655
 28656  00147A                     
 28657                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 28658  00147A  5025               	movf	__display_failed@cntr,w,c
 28659  00147C  0D01               	mullw	1
 28660  00147E  0E31               	movlw	low _failed_line3_dataTooLong
 28661  001480  24F3               	addwf	prodl,w,c
 28662  001482  6EF6               	movwf	tblptrl,c
 28663  001484  0E8E               	movlw	high _failed_line3_dataTooLong
 28664  001486  20F4               	addwfc	prodh,w,c
 28665  001488  6EF7               	movwf	tblptrh,c
 28666  00148A                     	if	1	;There are 3 active tblptr bytes
 28667  00148A  6AF8               	clrf	tblptru,c
 28668  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
 28669  00148E  22F8               	addwfc	tblptru,f,c
 28670  001490                     	endif
 28671  001490  5025               	movf	__display_failed@cntr,w,c
 28672  001492  0D01               	mullw	1
 28673  001494  0E28               	movlw	low (_display_content+40)
 28674  001496  24F3               	addwf	prodl,w,c
 28675  001498  6ED9               	movwf	fsr2l,c
 28676  00149A  0E02               	movlw	high (_display_content+40)
 28677  00149C  20F4               	addwfc	prodh,w,c
 28678  00149E  6EDA               	movwf	fsr2h,c
 28679  0014A0  0008               	tblrd		*
 28680  0014A2  CFF5 FFDF          	movff	tablat,indf2
 28681  0014A6  2A25               	incf	__display_failed@cntr,f,c
 28682  0014A8  5025               	movf	__display_failed@cntr,w,c
 28683  0014AA  0D01               	mullw	1
 28684  0014AC  0E31               	movlw	low _failed_line3_dataTooLong
 28685  0014AE  24F3               	addwf	prodl,w,c
 28686  0014B0  6EF6               	movwf	tblptrl,c
 28687  0014B2  0E8E               	movlw	high _failed_line3_dataTooLong
 28688  0014B4  20F4               	addwfc	prodh,w,c
 28689  0014B6  6EF7               	movwf	tblptrh,c
 28690  0014B8                     	if	1	;There are 3 active tblptr bytes
 28691  0014B8  6AF8               	clrf	tblptru,c
 28692  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
 28693  0014BC  22F8               	addwfc	tblptru,f,c
 28694  0014BE                     	endif
 28695  0014BE  0008               	tblrd		*
 28696  0014C0  50F5               	movf	tablat,w,c
 28697  0014C2  0900               	iorlw	0
 28698  0014C4  B4D8               	btfsc	status,2,c
 28699  0014C6  D048               	goto	l1648
 28700  0014C8  D7D8               	goto	l1659
 28701  0014CA                     
 28702                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 28703  0014CA  5025               	movf	__display_failed@cntr,w,c
 28704  0014CC  0D01               	mullw	1
 28705  0014CE  0EAE               	movlw	low _failed_line3_addressRange
 28706  0014D0  24F3               	addwf	prodl,w,c
 28707  0014D2  6EF6               	movwf	tblptrl,c
 28708  0014D4  0E8C               	movlw	high _failed_line3_addressRange
 28709  0014D6  20F4               	addwfc	prodh,w,c
 28710  0014D8  6EF7               	movwf	tblptrh,c
 28711  0014DA                     	if	1	;There are 3 active tblptr bytes
 28712  0014DA  6AF8               	clrf	tblptru,c
 28713  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28714  0014DE  22F8               	addwfc	tblptru,f,c
 28715  0014E0                     	endif
 28716  0014E0  5025               	movf	__display_failed@cntr,w,c
 28717  0014E2  0D01               	mullw	1
 28718  0014E4  0E28               	movlw	low (_display_content+40)
 28719  0014E6  24F3               	addwf	prodl,w,c
 28720  0014E8  6ED9               	movwf	fsr2l,c
 28721  0014EA  0E02               	movlw	high (_display_content+40)
 28722  0014EC  20F4               	addwfc	prodh,w,c
 28723  0014EE  6EDA               	movwf	fsr2h,c
 28724  0014F0  0008               	tblrd		*
 28725  0014F2  CFF5 FFDF          	movff	tablat,indf2
 28726  0014F6  2A25               	incf	__display_failed@cntr,f,c
 28727  0014F8  5025               	movf	__display_failed@cntr,w,c
 28728  0014FA  0D01               	mullw	1
 28729  0014FC  0EAE               	movlw	low _failed_line3_addressRange
 28730  0014FE  24F3               	addwf	prodl,w,c
 28731  001500  6EF6               	movwf	tblptrl,c
 28732  001502  0E8C               	movlw	high _failed_line3_addressRange
 28733  001504  20F4               	addwfc	prodh,w,c
 28734  001506  6EF7               	movwf	tblptrh,c
 28735  001508                     	if	1	;There are 3 active tblptr bytes
 28736  001508  6AF8               	clrf	tblptru,c
 28737  00150A  0E00               	movlw	low (__mediumconst shr (0+16))
 28738  00150C  22F8               	addwfc	tblptru,f,c
 28739  00150E                     	endif
 28740  00150E  0008               	tblrd		*
 28741  001510  50F5               	movf	tablat,w,c
 28742  001512  0900               	iorlw	0
 28743  001514  A4D8               	btfss	status,2,c
 28744  001516  D7D9               	goto	l1663
 28745                           
 28746                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 28747  001518  EC10  F045         	call	_bootloader_get_rec_address	;wreg free
 28748  00151C  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 28749  001520  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 28750  001524  6A21               	clrf	__display_itoa_u32@value+2,c
 28751  001526  6A22               	clrf	__display_itoa_u32@value+3,c
 28752  001528  0E4A               	movlw	low (_display_content+74)
 28753  00152A  6E23               	movwf	__display_itoa_u32@text,c
 28754  00152C  0E02               	movlw	high (_display_content+74)
 28755  00152E  6E24               	movwf	__display_itoa_u32@text+1,c
 28756  001530  EC15  F006         	call	__display_itoa_u32	;wreg free
 28757                           
 28758                           ;display.c: 497: }
 28759                           
 28760                           ;display.c: 495: break;
 28761  001534  D011               	goto	l1648
 28762  001536                     l1643:
 28763  001536  EC49  F045         	call	_bootloader_get_error	;wreg free
 28764                           
 28765                           ; Switch size 1, requested type "space"
 28766                           ; Number of cases is 5, Range of values is 11 to 15
 28767                           ; switch strategies available:
 28768                           ; Name         Instructions Cycles
 28769                           ; simple_byte           16     9 (average)
 28770                           ;	Chosen strategy is simple_byte
 28771  00153A  0A0B               	xorlw	11	; case 11
 28772  00153C  B4D8               	btfsc	status,2,c
 28773  00153E  D7DC               	goto	l1662
 28774  001540  0A07               	xorlw	7	; case 12
 28775  001542  B4D8               	btfsc	status,2,c
 28776  001544  D7B1               	goto	l1658
 28777  001546  0A01               	xorlw	1	; case 13
 28778  001548  B4D8               	btfsc	status,2,c
 28779  00154A  D786               	goto	l1654
 28780  00154C  0A03               	xorlw	3	; case 14
 28781  00154E  B4D8               	btfsc	status,2,c
 28782  001550  D75B               	goto	l1650
 28783  001552  0A01               	xorlw	1	; case 15
 28784  001554  B4D8               	btfsc	status,2,c
 28785  001556  D730               	goto	l1645
 28786  001558                     l1648:
 28787                           
 28788                           ;display.c: 499: cntr = 0;
 28789  001558  0E00               	movlw	0
 28790  00155A  6E25               	movwf	__display_failed@cntr,c
 28791                           
 28792                           ;display.c: 500: while(failed_line4[cntr])
 28793  00155C  D017               	goto	l1665
 28794  00155E                     
 28795                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 28796  00155E  5025               	movf	__display_failed@cntr,w,c
 28797  001560  0D01               	mullw	1
 28798  001562  0E6B               	movlw	low _failed_line4
 28799  001564  24F3               	addwf	prodl,w,c
 28800  001566  6EF6               	movwf	tblptrl,c
 28801  001568  0E8E               	movlw	high _failed_line4
 28802  00156A  20F4               	addwfc	prodh,w,c
 28803  00156C  6EF7               	movwf	tblptrh,c
 28804  00156E                     	if	1	;There are 3 active tblptr bytes
 28805  00156E  6AF8               	clrf	tblptru,c
 28806  001570  0E00               	movlw	low (__mediumconst shr (0+16))
 28807  001572  22F8               	addwfc	tblptru,f,c
 28808  001574                     	endif
 28809  001574  5025               	movf	__display_failed@cntr,w,c
 28810  001576  0D01               	mullw	1
 28811  001578  0E3C               	movlw	low (_display_content+60)
 28812  00157A  24F3               	addwf	prodl,w,c
 28813  00157C  6ED9               	movwf	fsr2l,c
 28814  00157E  0E02               	movlw	high (_display_content+60)
 28815  001580  20F4               	addwfc	prodh,w,c
 28816  001582  6EDA               	movwf	fsr2h,c
 28817  001584  0008               	tblrd		*
 28818  001586  CFF5 FFDF          	movff	tablat,indf2
 28819  00158A  2A25               	incf	__display_failed@cntr,f,c
 28820  00158C                     l1665:
 28821  00158C  5025               	movf	__display_failed@cntr,w,c
 28822  00158E  0D01               	mullw	1
 28823  001590  0E6B               	movlw	low _failed_line4
 28824  001592  24F3               	addwf	prodl,w,c
 28825  001594  6EF6               	movwf	tblptrl,c
 28826  001596  0E8E               	movlw	high _failed_line4
 28827  001598  20F4               	addwfc	prodh,w,c
 28828  00159A  6EF7               	movwf	tblptrh,c
 28829  00159C                     	if	1	;There are 3 active tblptr bytes
 28830  00159C  6AF8               	clrf	tblptru,c
 28831  00159E  0E00               	movlw	low (__mediumconst shr (0+16))
 28832  0015A0  22F8               	addwfc	tblptru,f,c
 28833  0015A2                     	endif
 28834  0015A2  0008               	tblrd		*
 28835  0015A4  50F5               	movf	tablat,w,c
 28836  0015A6  0900               	iorlw	0
 28837  0015A8  A4D8               	btfss	status,2,c
 28838  0015AA  D7D9               	goto	l1666
 28839                           
 28840                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 28841  0015AC  EC15  F045         	call	_bootloader_get_entries	;wreg free
 28842  0015B0  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28843  0015B4  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28844  0015B8  6A1B               	clrf	__display_itoa_u16@value+2,c
 28845  0015BA  6A1C               	clrf	__display_itoa_u16@value+3,c
 28846  0015BC  5025               	movf	__display_failed@cntr,w,c
 28847  0015BE  0D01               	mullw	1
 28848  0015C0  0E3C               	movlw	low (_display_content+60)
 28849  0015C2  24F3               	addwf	prodl,w,c
 28850  0015C4  6E1D               	movwf	__display_itoa_u16@text,c
 28851  0015C6  0E02               	movlw	high (_display_content+60)
 28852  0015C8  20F4               	addwfc	prodh,w,c
 28853  0015CA  6E1E               	movwf	__display_itoa_u16@text+1,c
 28854  0015CC  EC01  F02F         	call	__display_itoa_u16	;wreg free
 28855  0015D0  0012               	return		;funcret
 28856  0015D2                     __end_of__display_failed:
 28857                           	opt stack 0
 28858                           tosu	equ	0xFFF
 28859                           tosh	equ	0xFFE
 28860                           tosl	equ	0xFFD
 28861                           pclath	equ	0xFFA
 28862                           tblptru	equ	0xFF8
 28863                           tblptrh	equ	0xFF7
 28864                           tblptrl	equ	0xFF6
 28865                           tablat	equ	0xFF5
 28866                           prodh	equ	0xFF4
 28867                           prodl	equ	0xFF3
 28868                           intcon	equ	0xFF2
 28869                           intcon2	equ	0xFF1
 28870                           intcon3	equ	0xFF0
 28871                           indf0	equ	0xFEF
 28872                           postinc0	equ	0xFEE
 28873                           fsr0h	equ	0xFEA
 28874                           fsr0l	equ	0xFE9
 28875                           wreg	equ	0xFE8
 28876                           indf1	equ	0xFE7
 28877                           postdec1	equ	0xFE5
 28878                           plusw1	equ	0xFE3
 28879                           fsr1h	equ	0xFE2
 28880                           fsr1l	equ	0xFE1
 28881                           indf2	equ	0xFDF
 28882                           postinc2	equ	0xFDE
 28883                           postdec2	equ	0xFDD
 28884                           plusw2	equ	0xFDB
 28885                           fsr2h	equ	0xFDA
 28886                           fsr2l	equ	0xFD9
 28887                           status	equ	0xFD8
 28888                           
 28889 ;; *************** function _bootloader_get_rec_address *****************
 28890 ;; Defined at:
 28891 ;;		line 485 in file "bootloader.c"
 28892 ;; Parameters:    Size  Location     Type
 28893 ;;		None
 28894 ;; Auto vars:     Size  Location     Type
 28895 ;;		None
 28896 ;; Return value:  Size  Location     Type
 28897 ;;                  2    0[COMRAM] unsigned int 
 28898 ;; Registers used:
 28899 ;;		None
 28900 ;; Tracked objects:
 28901 ;;		On entry : 0/0
 28902 ;;		On exit  : 0/0
 28903 ;;		Unchanged: 0/0
 28904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28909 ;;Total ram usage:        2 bytes
 28910 ;; Hardware stack levels used:    1
 28911 ;; This function calls:
 28912 ;;		Nothing
 28913 ;; This function is called by:
 28914 ;;		__display_failed
 28915 ;;		__fill_buffer_get_bootloader_details
 28916 ;; This function uses a non-reentrant model
 28917 ;;
 28918                           
 28919                           	psect	text137
 28920  008A20                     __ptext137:
 28921                           	opt stack 0
 28922  008A20                     _bootloader_get_rec_address:
 28923                           	opt stack 25
 28924                           
 28925                           ;bootloader.c: 488: return hex_file_entry.address;
 28926                           
 28927                           ;incstack = 0
 28928  008A20  C195  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 28929  008A24  C196  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 28930  008A28  0012               	return		;funcret
 28931  008A2A                     __end_of_bootloader_get_rec_address:
 28932                           	opt stack 0
 28933                           tosu	equ	0xFFF
 28934                           tosh	equ	0xFFE
 28935                           tosl	equ	0xFFD
 28936                           pclath	equ	0xFFA
 28937                           tblptru	equ	0xFF8
 28938                           tblptrh	equ	0xFF7
 28939                           tblptrl	equ	0xFF6
 28940                           tablat	equ	0xFF5
 28941                           prodh	equ	0xFF4
 28942                           prodl	equ	0xFF3
 28943                           intcon	equ	0xFF2
 28944                           intcon2	equ	0xFF1
 28945                           intcon3	equ	0xFF0
 28946                           indf0	equ	0xFEF
 28947                           postinc0	equ	0xFEE
 28948                           fsr0h	equ	0xFEA
 28949                           fsr0l	equ	0xFE9
 28950                           wreg	equ	0xFE8
 28951                           indf1	equ	0xFE7
 28952                           postdec1	equ	0xFE5
 28953                           plusw1	equ	0xFE3
 28954                           fsr1h	equ	0xFE2
 28955                           fsr1l	equ	0xFE1
 28956                           indf2	equ	0xFDF
 28957                           postinc2	equ	0xFDE
 28958                           postdec2	equ	0xFDD
 28959                           plusw2	equ	0xFDB
 28960                           fsr2h	equ	0xFDA
 28961                           fsr2l	equ	0xFD9
 28962                           status	equ	0xFD8
 28963                           
 28964 ;; *************** function _bootloader_get_error *****************
 28965 ;; Defined at:
 28966 ;;		line 475 in file "bootloader.c"
 28967 ;; Parameters:    Size  Location     Type
 28968 ;;		None
 28969 ;; Auto vars:     Size  Location     Type
 28970 ;;		None
 28971 ;; Return value:  Size  Location     Type
 28972 ;;                  1    wreg      enum E7014
 28973 ;; Registers used:
 28974 ;;		wreg, status,2
 28975 ;; Tracked objects:
 28976 ;;		On entry : 0/0
 28977 ;;		On exit  : 0/0
 28978 ;;		Unchanged: 0/0
 28979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28984 ;;Total ram usage:        0 bytes
 28985 ;; Hardware stack levels used:    1
 28986 ;; This function calls:
 28987 ;;		Nothing
 28988 ;; This function is called by:
 28989 ;;		__display_failed
 28990 ;;		__fill_buffer_get_bootloader_details
 28991 ;; This function uses a non-reentrant model
 28992 ;;
 28993                           
 28994                           	psect	text138
 28995  008A92                     __ptext138:
 28996                           	opt stack 0
 28997  008A92                     _bootloader_get_error:
 28998                           	opt stack 25
 28999                           
 29000                           ;bootloader.c: 477: return last_error;
 29001                           
 29002                           ;incstack = 0
 29003  008A92  0101               	movlb	1	; () banked
 29004  008A94  518C               	movf	_last_error& (0+255),w,b
 29005  008A96  0012               	return	
 29006  008A98                     __end_of_bootloader_get_error:
 29007                           	opt stack 0
 29008                           tosu	equ	0xFFF
 29009                           tosh	equ	0xFFE
 29010                           tosl	equ	0xFFD
 29011                           pclath	equ	0xFFA
 29012                           tblptru	equ	0xFF8
 29013                           tblptrh	equ	0xFF7
 29014                           tblptrl	equ	0xFF6
 29015                           tablat	equ	0xFF5
 29016                           prodh	equ	0xFF4
 29017                           prodl	equ	0xFF3
 29018                           intcon	equ	0xFF2
 29019                           intcon2	equ	0xFF1
 29020                           intcon3	equ	0xFF0
 29021                           indf0	equ	0xFEF
 29022                           postinc0	equ	0xFEE
 29023                           fsr0h	equ	0xFEA
 29024                           fsr0l	equ	0xFE9
 29025                           wreg	equ	0xFE8
 29026                           indf1	equ	0xFE7
 29027                           postdec1	equ	0xFE5
 29028                           plusw1	equ	0xFE3
 29029                           fsr1h	equ	0xFE2
 29030                           fsr1l	equ	0xFE1
 29031                           indf2	equ	0xFDF
 29032                           postinc2	equ	0xFDE
 29033                           postdec2	equ	0xFDD
 29034                           plusw2	equ	0xFDB
 29035                           fsr2h	equ	0xFDA
 29036                           fsr2l	equ	0xFD9
 29037                           status	equ	0xFD8
 29038                           
 29039 ;; *************** function _bootloader_get_entries *****************
 29040 ;; Defined at:
 29041 ;;		line 465 in file "bootloader.c"
 29042 ;; Parameters:    Size  Location     Type
 29043 ;;		None
 29044 ;; Auto vars:     Size  Location     Type
 29045 ;;		None
 29046 ;; Return value:  Size  Location     Type
 29047 ;;                  2    0[COMRAM] unsigned int 
 29048 ;; Registers used:
 29049 ;;		None
 29050 ;; Tracked objects:
 29051 ;;		On entry : 0/0
 29052 ;;		On exit  : 0/0
 29053 ;;		Unchanged: 0/0
 29054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29059 ;;Total ram usage:        2 bytes
 29060 ;; Hardware stack levels used:    1
 29061 ;; This function calls:
 29062 ;;		Nothing
 29063 ;; This function is called by:
 29064 ;;		__display_verify
 29065 ;;		__display_failed
 29066 ;;		__display_programming
 29067 ;;		__fill_buffer_get_bootloader_details
 29068 ;; This function uses a non-reentrant model
 29069 ;;
 29070                           
 29071                           	psect	text139
 29072  008A2A                     __ptext139:
 29073                           	opt stack 0
 29074  008A2A                     _bootloader_get_entries:
 29075                           	opt stack 25
 29076                           
 29077                           ;bootloader.c: 467: return hex_file_entries;
 29078                           
 29079                           ; BSR set to: 1
 29080                           ;incstack = 0
 29081  008A2A  C178  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29082  008A2E  C179  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29083  008A32  0012               	return		;funcret
 29084  008A34                     __end_of_bootloader_get_entries:
 29085                           	opt stack 0
 29086                           tosu	equ	0xFFF
 29087                           tosh	equ	0xFFE
 29088                           tosl	equ	0xFFD
 29089                           pclath	equ	0xFFA
 29090                           tblptru	equ	0xFF8
 29091                           tblptrh	equ	0xFF7
 29092                           tblptrl	equ	0xFF6
 29093                           tablat	equ	0xFF5
 29094                           prodh	equ	0xFF4
 29095                           prodl	equ	0xFF3
 29096                           intcon	equ	0xFF2
 29097                           intcon2	equ	0xFF1
 29098                           intcon3	equ	0xFF0
 29099                           indf0	equ	0xFEF
 29100                           postinc0	equ	0xFEE
 29101                           fsr0h	equ	0xFEA
 29102                           fsr0l	equ	0xFE9
 29103                           wreg	equ	0xFE8
 29104                           indf1	equ	0xFE7
 29105                           postdec1	equ	0xFE5
 29106                           plusw1	equ	0xFE3
 29107                           fsr1h	equ	0xFE2
 29108                           fsr1l	equ	0xFE1
 29109                           indf2	equ	0xFDF
 29110                           postinc2	equ	0xFDE
 29111                           postdec2	equ	0xFDD
 29112                           plusw2	equ	0xFDB
 29113                           fsr2h	equ	0xFDA
 29114                           fsr2l	equ	0xFD9
 29115                           status	equ	0xFD8
 29116                           
 29117 ;; *************** function __display_itoa_u32 *****************
 29118 ;; Defined at:
 29119 ;;		line 172 in file "display.c"
 29120 ;; Parameters:    Size  Location     Type
 29121 ;;  value           4   30[COMRAM] unsigned long 
 29122 ;;  text            2   34[COMRAM] PTR unsigned char 
 29123 ;;		 -> display_content(80), 
 29124 ;; Auto vars:     Size  Location     Type
 29125 ;;		None
 29126 ;; Return value:  Size  Location     Type
 29127 ;;                  1    wreg      unsigned char 
 29128 ;; Registers used:
 29129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29130 ;; Tracked objects:
 29131 ;;		On entry : 0/0
 29132 ;;		On exit  : 0/0
 29133 ;;		Unchanged: 0/0
 29134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29135 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29138 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29139 ;;Total ram usage:        6 bytes
 29140 ;; Hardware stack levels used:    1
 29141 ;; Hardware stack levels required when called:    4
 29142 ;; This function calls:
 29143 ;;		___lldiv
 29144 ;;		___llmod
 29145 ;;		__display_itoa_u16
 29146 ;;		_itoa
 29147 ;; This function is called by:
 29148 ;;		__display_start
 29149 ;;		__display_found
 29150 ;;		__display_failed
 29151 ;; This function uses a non-reentrant model
 29152 ;;
 29153                           
 29154                           	psect	text140
 29155  000C2A                     __ptext140:
 29156                           	opt stack 0
 29157  000C2A                     __display_itoa_u32:
 29158                           	opt stack 21
 29159                           
 29160                           ;display.c: 175: if(value<=0x7FFF)
 29161                           
 29162                           ;incstack = 0
 29163  000C2A  5022               	movf	__display_itoa_u32@value+3,w,c
 29164  000C2C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 29165  000C2E  E111               	bnz	l10941
 29166  000C30  0E80               	movlw	128
 29167  000C32  5C20               	subwf	__display_itoa_u32@value+1,w,c
 29168  000C34  B0D8               	btfsc	status,0,c
 29169  000C36  D00D               	goto	l1508
 29170                           
 29171                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 29172  000C38  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 29173  000C3C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 29174  000C40  6A1B               	clrf	__display_itoa_u16@value+2,c
 29175  000C42  6A1C               	clrf	__display_itoa_u16@value+3,c
 29176  000C44  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 29177  000C48  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 29178  000C4C  EC01  F02F         	call	__display_itoa_u16	;wreg free
 29179  000C50  0012               	return	
 29180  000C52                     l1508:
 29181  000C52                     l10941:
 29182                           
 29183                           ;display.c: 178: };display.c: 181: if(value>100000000)
 29184  000C52  041F               	decf	__display_itoa_u32@value,w,c
 29185  000C54  0EE1               	movlw	225
 29186  000C56  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29187  000C58  0EF5               	movlw	245
 29188  000C5A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29189  000C5C  0E05               	movlw	5
 29190  000C5E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 29191  000C60  A0D8               	btfss	status,0,c
 29192  000C62  D04C               	goto	l1510
 29193                           
 29194                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 29195  000C64  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29196  000C68  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29197  000C6C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29198  000C70  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29199  000C74  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29200  000C78  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29201  000C7C  0E10               	movlw	16
 29202  000C7E  6E05               	movwf	___lldiv@divisor,c
 29203  000C80  0E27               	movlw	39
 29204  000C82  6E06               	movwf	___lldiv@divisor+1,c
 29205  000C84  0E00               	movlw	0
 29206  000C86  6E07               	movwf	___lldiv@divisor+2,c
 29207  000C88  0E00               	movlw	0
 29208  000C8A  6E08               	movwf	___lldiv@divisor+3,c
 29209  000C8C  EC3B  F037         	call	___lldiv	;wreg free
 29210  000C90  C001  F013         	movff	?___lldiv,itoa@val
 29211  000C94  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29212  000C98  0E00               	movlw	0
 29213  000C9A  6E16               	movwf	itoa@base+1,c
 29214  000C9C  0E0A               	movlw	10
 29215  000C9E  6E15               	movwf	itoa@base,c
 29216  000CA0  EC31  F040         	call	_itoa	;wreg free
 29217                           
 29218                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 29219  000CA4  0E05               	movlw	5
 29220  000CA6  2423               	addwf	__display_itoa_u32@text,w,c
 29221  000CA8  6E11               	movwf	itoa@buf,c
 29222  000CAA  0E00               	movlw	0
 29223  000CAC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29224  000CAE  6E12               	movwf	itoa@buf+1,c
 29225  000CB0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29226  000CB4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29227  000CB8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29228  000CBC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29229  000CC0  0E10               	movlw	16
 29230  000CC2  6E05               	movwf	___llmod@divisor,c
 29231  000CC4  0E27               	movlw	39
 29232  000CC6  6E06               	movwf	___llmod@divisor+1,c
 29233  000CC8  0E00               	movlw	0
 29234  000CCA  6E07               	movwf	___llmod@divisor+2,c
 29235  000CCC  0E00               	movlw	0
 29236  000CCE  6E08               	movwf	___llmod@divisor+3,c
 29237  000CD0  EC69  F03A         	call	___llmod	;wreg free
 29238  000CD4  C001  F013         	movff	?___llmod,itoa@val
 29239  000CD8  C002  F014         	movff	?___llmod+1,itoa@val+1
 29240  000CDC  0E00               	movlw	0
 29241  000CDE  6E16               	movwf	itoa@base+1,c
 29242  000CE0  0E0A               	movlw	10
 29243  000CE2  6E15               	movwf	itoa@base,c
 29244  000CE4  EC31  F040         	call	_itoa	;wreg free
 29245                           
 29246                           ;display.c: 185: *(text+9) = ' ';
 29247  000CE8  EE20 F009          	lfsr	2,9
 29248  000CEC  5023               	movf	__display_itoa_u32@text,w,c
 29249  000CEE  26D9               	addwf	fsr2l,f,c
 29250  000CF0  5024               	movf	__display_itoa_u32@text+1,w,c
 29251  000CF2  22DA               	addwfc	fsr2h,f,c
 29252  000CF4  0E20               	movlw	32
 29253  000CF6  6EDF               	movwf	indf2,c
 29254                           
 29255                           ;display.c: 186: return 9;
 29256  000CF8  0E09               	movlw	9
 29257                           
 29258                           ;display.c: 187: }
 29259  000CFA  0012               	return	
 29260  000CFC                     l1510:
 29261                           
 29262                           ;display.c: 188: else if(value>10000000)
 29263  000CFC  5022               	movf	__display_itoa_u32@value+3,w,c
 29264  000CFE  E108               	bnz	u7750
 29265  000D00  0E81               	movlw	129
 29266  000D02  5C1F               	subwf	__display_itoa_u32@value,w,c
 29267  000D04  0E96               	movlw	150
 29268  000D06  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29269  000D08  0E98               	movlw	152
 29270  000D0A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29271  000D0C  A0D8               	btfss	status,0,c
 29272  000D0E  D04C               	goto	l1512
 29273  000D10                     u7750:
 29274                           
 29275                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 29276  000D10  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29277  000D14  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29278  000D18  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29279  000D1C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29280  000D20  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29281  000D24  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29282  000D28  0E10               	movlw	16
 29283  000D2A  6E05               	movwf	___lldiv@divisor,c
 29284  000D2C  0E27               	movlw	39
 29285  000D2E  6E06               	movwf	___lldiv@divisor+1,c
 29286  000D30  0E00               	movlw	0
 29287  000D32  6E07               	movwf	___lldiv@divisor+2,c
 29288  000D34  0E00               	movlw	0
 29289  000D36  6E08               	movwf	___lldiv@divisor+3,c
 29290  000D38  EC3B  F037         	call	___lldiv	;wreg free
 29291  000D3C  C001  F013         	movff	?___lldiv,itoa@val
 29292  000D40  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29293  000D44  0E00               	movlw	0
 29294  000D46  6E16               	movwf	itoa@base+1,c
 29295  000D48  0E0A               	movlw	10
 29296  000D4A  6E15               	movwf	itoa@base,c
 29297  000D4C  EC31  F040         	call	_itoa	;wreg free
 29298                           
 29299                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 29300  000D50  0E04               	movlw	4
 29301  000D52  2423               	addwf	__display_itoa_u32@text,w,c
 29302  000D54  6E11               	movwf	itoa@buf,c
 29303  000D56  0E00               	movlw	0
 29304  000D58  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29305  000D5A  6E12               	movwf	itoa@buf+1,c
 29306  000D5C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29307  000D60  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29308  000D64  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29309  000D68  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29310  000D6C  0E10               	movlw	16
 29311  000D6E  6E05               	movwf	___llmod@divisor,c
 29312  000D70  0E27               	movlw	39
 29313  000D72  6E06               	movwf	___llmod@divisor+1,c
 29314  000D74  0E00               	movlw	0
 29315  000D76  6E07               	movwf	___llmod@divisor+2,c
 29316  000D78  0E00               	movlw	0
 29317  000D7A  6E08               	movwf	___llmod@divisor+3,c
 29318  000D7C  EC69  F03A         	call	___llmod	;wreg free
 29319  000D80  C001  F013         	movff	?___llmod,itoa@val
 29320  000D84  C002  F014         	movff	?___llmod+1,itoa@val+1
 29321  000D88  0E00               	movlw	0
 29322  000D8A  6E16               	movwf	itoa@base+1,c
 29323  000D8C  0E0A               	movlw	10
 29324  000D8E  6E15               	movwf	itoa@base,c
 29325  000D90  EC31  F040         	call	_itoa	;wreg free
 29326                           
 29327                           ;display.c: 192: *(text+8) = ' ';
 29328  000D94  EE20 F008          	lfsr	2,8
 29329  000D98  5023               	movf	__display_itoa_u32@text,w,c
 29330  000D9A  26D9               	addwf	fsr2l,f,c
 29331  000D9C  5024               	movf	__display_itoa_u32@text+1,w,c
 29332  000D9E  22DA               	addwfc	fsr2h,f,c
 29333  000DA0  0E20               	movlw	32
 29334  000DA2  6EDF               	movwf	indf2,c
 29335                           
 29336                           ;display.c: 193: return 8;
 29337  000DA4  0E08               	movlw	8
 29338                           
 29339                           ;display.c: 194: }
 29340  000DA6  0012               	return	
 29341  000DA8                     l1512:
 29342                           
 29343                           ;display.c: 195: else if(value>1000000)
 29344  000DA8  5022               	movf	__display_itoa_u32@value+3,w,c
 29345  000DAA  E108               	bnz	u7760
 29346  000DAC  0E41               	movlw	65
 29347  000DAE  5C1F               	subwf	__display_itoa_u32@value,w,c
 29348  000DB0  0E42               	movlw	66
 29349  000DB2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29350  000DB4  0E0F               	movlw	15
 29351  000DB6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29352  000DB8  A0D8               	btfss	status,0,c
 29353  000DBA  D04C               	goto	l1514
 29354  000DBC                     u7760:
 29355                           
 29356                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 29357  000DBC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29358  000DC0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29359  000DC4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29360  000DC8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29361  000DCC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29362  000DD0  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29363  000DD4  0E10               	movlw	16
 29364  000DD6  6E05               	movwf	___lldiv@divisor,c
 29365  000DD8  0E27               	movlw	39
 29366  000DDA  6E06               	movwf	___lldiv@divisor+1,c
 29367  000DDC  0E00               	movlw	0
 29368  000DDE  6E07               	movwf	___lldiv@divisor+2,c
 29369  000DE0  0E00               	movlw	0
 29370  000DE2  6E08               	movwf	___lldiv@divisor+3,c
 29371  000DE4  EC3B  F037         	call	___lldiv	;wreg free
 29372  000DE8  C001  F013         	movff	?___lldiv,itoa@val
 29373  000DEC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29374  000DF0  0E00               	movlw	0
 29375  000DF2  6E16               	movwf	itoa@base+1,c
 29376  000DF4  0E0A               	movlw	10
 29377  000DF6  6E15               	movwf	itoa@base,c
 29378  000DF8  EC31  F040         	call	_itoa	;wreg free
 29379                           
 29380                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 29381  000DFC  0E03               	movlw	3
 29382  000DFE  2423               	addwf	__display_itoa_u32@text,w,c
 29383  000E00  6E11               	movwf	itoa@buf,c
 29384  000E02  0E00               	movlw	0
 29385  000E04  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29386  000E06  6E12               	movwf	itoa@buf+1,c
 29387  000E08  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29388  000E0C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29389  000E10  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29390  000E14  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29391  000E18  0E10               	movlw	16
 29392  000E1A  6E05               	movwf	___llmod@divisor,c
 29393  000E1C  0E27               	movlw	39
 29394  000E1E  6E06               	movwf	___llmod@divisor+1,c
 29395  000E20  0E00               	movlw	0
 29396  000E22  6E07               	movwf	___llmod@divisor+2,c
 29397  000E24  0E00               	movlw	0
 29398  000E26  6E08               	movwf	___llmod@divisor+3,c
 29399  000E28  EC69  F03A         	call	___llmod	;wreg free
 29400  000E2C  C001  F013         	movff	?___llmod,itoa@val
 29401  000E30  C002  F014         	movff	?___llmod+1,itoa@val+1
 29402  000E34  0E00               	movlw	0
 29403  000E36  6E16               	movwf	itoa@base+1,c
 29404  000E38  0E0A               	movlw	10
 29405  000E3A  6E15               	movwf	itoa@base,c
 29406  000E3C  EC31  F040         	call	_itoa	;wreg free
 29407                           
 29408                           ;display.c: 199: *(text+7) = ' ';
 29409  000E40  EE20 F007          	lfsr	2,7
 29410  000E44  5023               	movf	__display_itoa_u32@text,w,c
 29411  000E46  26D9               	addwf	fsr2l,f,c
 29412  000E48  5024               	movf	__display_itoa_u32@text+1,w,c
 29413  000E4A  22DA               	addwfc	fsr2h,f,c
 29414  000E4C  0E20               	movlw	32
 29415  000E4E  6EDF               	movwf	indf2,c
 29416                           
 29417                           ;display.c: 200: return 7;
 29418  000E50  0E07               	movlw	7
 29419                           
 29420                           ;display.c: 201: }
 29421  000E52  0012               	return	
 29422  000E54                     l1514:
 29423                           
 29424                           ;display.c: 202: else if(value>100000)
 29425  000E54  5022               	movf	__display_itoa_u32@value+3,w,c
 29426  000E56  E108               	bnz	u7770
 29427  000E58  0EA1               	movlw	161
 29428  000E5A  5C1F               	subwf	__display_itoa_u32@value,w,c
 29429  000E5C  0E86               	movlw	134
 29430  000E5E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29431  000E60  0E01               	movlw	1
 29432  000E62  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29433  000E64  A0D8               	btfss	status,0,c
 29434  000E66  D04C               	goto	l1516
 29435  000E68                     u7770:
 29436                           
 29437                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 29438  000E68  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29439  000E6C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29440  000E70  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29441  000E74  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29442  000E78  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29443  000E7C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29444  000E80  0E10               	movlw	16
 29445  000E82  6E05               	movwf	___lldiv@divisor,c
 29446  000E84  0E27               	movlw	39
 29447  000E86  6E06               	movwf	___lldiv@divisor+1,c
 29448  000E88  0E00               	movlw	0
 29449  000E8A  6E07               	movwf	___lldiv@divisor+2,c
 29450  000E8C  0E00               	movlw	0
 29451  000E8E  6E08               	movwf	___lldiv@divisor+3,c
 29452  000E90  EC3B  F037         	call	___lldiv	;wreg free
 29453  000E94  C001  F013         	movff	?___lldiv,itoa@val
 29454  000E98  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29455  000E9C  0E00               	movlw	0
 29456  000E9E  6E16               	movwf	itoa@base+1,c
 29457  000EA0  0E0A               	movlw	10
 29458  000EA2  6E15               	movwf	itoa@base,c
 29459  000EA4  EC31  F040         	call	_itoa	;wreg free
 29460                           
 29461                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 29462  000EA8  0E02               	movlw	2
 29463  000EAA  2423               	addwf	__display_itoa_u32@text,w,c
 29464  000EAC  6E11               	movwf	itoa@buf,c
 29465  000EAE  0E00               	movlw	0
 29466  000EB0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29467  000EB2  6E12               	movwf	itoa@buf+1,c
 29468  000EB4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29469  000EB8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29470  000EBC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29471  000EC0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29472  000EC4  0E10               	movlw	16
 29473  000EC6  6E05               	movwf	___llmod@divisor,c
 29474  000EC8  0E27               	movlw	39
 29475  000ECA  6E06               	movwf	___llmod@divisor+1,c
 29476  000ECC  0E00               	movlw	0
 29477  000ECE  6E07               	movwf	___llmod@divisor+2,c
 29478  000ED0  0E00               	movlw	0
 29479  000ED2  6E08               	movwf	___llmod@divisor+3,c
 29480  000ED4  EC69  F03A         	call	___llmod	;wreg free
 29481  000ED8  C001  F013         	movff	?___llmod,itoa@val
 29482  000EDC  C002  F014         	movff	?___llmod+1,itoa@val+1
 29483  000EE0  0E00               	movlw	0
 29484  000EE2  6E16               	movwf	itoa@base+1,c
 29485  000EE4  0E0A               	movlw	10
 29486  000EE6  6E15               	movwf	itoa@base,c
 29487  000EE8  EC31  F040         	call	_itoa	;wreg free
 29488                           
 29489                           ;display.c: 206: *(text+6) = ' ';
 29490  000EEC  EE20 F006          	lfsr	2,6
 29491  000EF0  5023               	movf	__display_itoa_u32@text,w,c
 29492  000EF2  26D9               	addwf	fsr2l,f,c
 29493  000EF4  5024               	movf	__display_itoa_u32@text+1,w,c
 29494  000EF6  22DA               	addwfc	fsr2h,f,c
 29495  000EF8  0E20               	movlw	32
 29496  000EFA  6EDF               	movwf	indf2,c
 29497                           
 29498                           ;display.c: 207: return 6;
 29499  000EFC  0E06               	movlw	6
 29500                           
 29501                           ;display.c: 208: }
 29502  000EFE  0012               	return	
 29503  000F00                     l1516:
 29504                           
 29505                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 29506  000F00  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29507  000F04  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29508  000F08  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29509  000F0C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29510  000F10  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29511  000F14  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29512  000F18  0E10               	movlw	16
 29513  000F1A  6E05               	movwf	___lldiv@divisor,c
 29514  000F1C  0E27               	movlw	39
 29515  000F1E  6E06               	movwf	___lldiv@divisor+1,c
 29516  000F20  0E00               	movlw	0
 29517  000F22  6E07               	movwf	___lldiv@divisor+2,c
 29518  000F24  0E00               	movlw	0
 29519  000F26  6E08               	movwf	___lldiv@divisor+3,c
 29520  000F28  EC3B  F037         	call	___lldiv	;wreg free
 29521  000F2C  C001  F013         	movff	?___lldiv,itoa@val
 29522  000F30  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29523  000F34  0E00               	movlw	0
 29524  000F36  6E16               	movwf	itoa@base+1,c
 29525  000F38  0E0A               	movlw	10
 29526  000F3A  6E15               	movwf	itoa@base,c
 29527  000F3C  EC31  F040         	call	_itoa	;wreg free
 29528                           
 29529                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 29530  000F40  0E01               	movlw	1
 29531  000F42  2423               	addwf	__display_itoa_u32@text,w,c
 29532  000F44  6E11               	movwf	itoa@buf,c
 29533  000F46  0E00               	movlw	0
 29534  000F48  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29535  000F4A  6E12               	movwf	itoa@buf+1,c
 29536  000F4C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29537  000F50  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29538  000F54  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29539  000F58  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29540  000F5C  0E10               	movlw	16
 29541  000F5E  6E05               	movwf	___llmod@divisor,c
 29542  000F60  0E27               	movlw	39
 29543  000F62  6E06               	movwf	___llmod@divisor+1,c
 29544  000F64  0E00               	movlw	0
 29545  000F66  6E07               	movwf	___llmod@divisor+2,c
 29546  000F68  0E00               	movlw	0
 29547  000F6A  6E08               	movwf	___llmod@divisor+3,c
 29548  000F6C  EC69  F03A         	call	___llmod	;wreg free
 29549  000F70  C001  F013         	movff	?___llmod,itoa@val
 29550  000F74  C002  F014         	movff	?___llmod+1,itoa@val+1
 29551  000F78  0E00               	movlw	0
 29552  000F7A  6E16               	movwf	itoa@base+1,c
 29553  000F7C  0E0A               	movlw	10
 29554  000F7E  6E15               	movwf	itoa@base,c
 29555  000F80  EC31  F040         	call	_itoa	;wreg free
 29556                           
 29557                           ;display.c: 213: *(text+5) = ' ';
 29558  000F84  EE20 F005          	lfsr	2,5
 29559  000F88  5023               	movf	__display_itoa_u32@text,w,c
 29560  000F8A  26D9               	addwf	fsr2l,f,c
 29561  000F8C  5024               	movf	__display_itoa_u32@text+1,w,c
 29562  000F8E  22DA               	addwfc	fsr2h,f,c
 29563  000F90  0E20               	movlw	32
 29564  000F92  6EDF               	movwf	indf2,c
 29565                           
 29566                           ;display.c: 214: return 5;
 29567  000F94  0E05               	movlw	5
 29568  000F96  0012               	return	
 29569  000F98                     __end_of__display_itoa_u32:
 29570                           	opt stack 0
 29571                           tosu	equ	0xFFF
 29572                           tosh	equ	0xFFE
 29573                           tosl	equ	0xFFD
 29574                           pclath	equ	0xFFA
 29575                           tblptru	equ	0xFF8
 29576                           tblptrh	equ	0xFF7
 29577                           tblptrl	equ	0xFF6
 29578                           tablat	equ	0xFF5
 29579                           prodh	equ	0xFF4
 29580                           prodl	equ	0xFF3
 29581                           intcon	equ	0xFF2
 29582                           intcon2	equ	0xFF1
 29583                           intcon3	equ	0xFF0
 29584                           indf0	equ	0xFEF
 29585                           postinc0	equ	0xFEE
 29586                           fsr0h	equ	0xFEA
 29587                           fsr0l	equ	0xFE9
 29588                           wreg	equ	0xFE8
 29589                           indf1	equ	0xFE7
 29590                           postdec1	equ	0xFE5
 29591                           plusw1	equ	0xFE3
 29592                           fsr1h	equ	0xFE2
 29593                           fsr1l	equ	0xFE1
 29594                           indf2	equ	0xFDF
 29595                           postinc2	equ	0xFDE
 29596                           postdec2	equ	0xFDD
 29597                           plusw2	equ	0xFDB
 29598                           fsr2h	equ	0xFDA
 29599                           fsr2l	equ	0xFD9
 29600                           status	equ	0xFD8
 29601                           
 29602 ;; *************** function ___llmod *****************
 29603 ;; Defined at:
 29604 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 29605 ;; Parameters:    Size  Location     Type
 29606 ;;  dividend        4    0[COMRAM] unsigned long 
 29607 ;;  divisor         4    4[COMRAM] unsigned long 
 29608 ;; Auto vars:     Size  Location     Type
 29609 ;;  counter         1    8[COMRAM] unsigned char 
 29610 ;; Return value:  Size  Location     Type
 29611 ;;                  4    0[COMRAM] unsigned long 
 29612 ;; Registers used:
 29613 ;;		wreg, status,2, status,0
 29614 ;; Tracked objects:
 29615 ;;		On entry : 0/0
 29616 ;;		On exit  : 0/0
 29617 ;;		Unchanged: 0/0
 29618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29622 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29623 ;;Total ram usage:        9 bytes
 29624 ;; Hardware stack levels used:    1
 29625 ;; This function calls:
 29626 ;;		Nothing
 29627 ;; This function is called by:
 29628 ;;		__display_itoa_u32
 29629 ;; This function uses a non-reentrant model
 29630 ;;
 29631                           
 29632                           	psect	text141
 29633  0074D2                     __ptext141:
 29634                           	opt stack 0
 29635  0074D2                     ___llmod:
 29636                           	opt stack 24
 29637                           
 29638                           ;incstack = 0
 29639  0074D2  5005               	movf	___llmod@divisor,w,c
 29640  0074D4  1006               	iorwf	___llmod@divisor+1,w,c
 29641  0074D6  1007               	iorwf	___llmod@divisor+2,w,c
 29642  0074D8  1008               	iorwf	___llmod@divisor+3,w,c
 29643  0074DA  B4D8               	btfsc	status,2,c
 29644  0074DC  D024               	goto	l3345
 29645  0074DE  0E01               	movlw	1
 29646  0074E0  6E09               	movwf	___llmod@counter,c
 29647  0074E2  D006               	goto	l3340
 29648  0074E4  90D8               	bcf	status,0,c
 29649  0074E6  3605               	rlcf	___llmod@divisor,f,c
 29650  0074E8  3606               	rlcf	___llmod@divisor+1,f,c
 29651  0074EA  3607               	rlcf	___llmod@divisor+2,f,c
 29652  0074EC  3608               	rlcf	___llmod@divisor+3,f,c
 29653  0074EE  2A09               	incf	___llmod@counter,f,c
 29654  0074F0                     l3340:
 29655  0074F0  AE08               	btfss	___llmod@divisor+3,7,c
 29656  0074F2  D7F8               	goto	l3341
 29657  0074F4                     u7360:
 29658  0074F4  5005               	movf	___llmod@divisor,w,c
 29659  0074F6  5C01               	subwf	___llmod@dividend,w,c
 29660  0074F8  5006               	movf	___llmod@divisor+1,w,c
 29661  0074FA  5802               	subwfb	___llmod@dividend+1,w,c
 29662  0074FC  5007               	movf	___llmod@divisor+2,w,c
 29663  0074FE  5803               	subwfb	___llmod@dividend+2,w,c
 29664  007500  5008               	movf	___llmod@divisor+3,w,c
 29665  007502  5804               	subwfb	___llmod@dividend+3,w,c
 29666  007504  A0D8               	btfss	status,0,c
 29667  007506  D008               	goto	l3344
 29668  007508  5005               	movf	___llmod@divisor,w,c
 29669  00750A  5E01               	subwf	___llmod@dividend,f,c
 29670  00750C  5006               	movf	___llmod@divisor+1,w,c
 29671  00750E  5A02               	subwfb	___llmod@dividend+1,f,c
 29672  007510  5007               	movf	___llmod@divisor+2,w,c
 29673  007512  5A03               	subwfb	___llmod@dividend+2,f,c
 29674  007514  5008               	movf	___llmod@divisor+3,w,c
 29675  007516  5A04               	subwfb	___llmod@dividend+3,f,c
 29676  007518                     l3344:
 29677  007518  90D8               	bcf	status,0,c
 29678  00751A  3208               	rrcf	___llmod@divisor+3,f,c
 29679  00751C  3207               	rrcf	___llmod@divisor+2,f,c
 29680  00751E  3206               	rrcf	___llmod@divisor+1,f,c
 29681  007520  3205               	rrcf	___llmod@divisor,f,c
 29682  007522  2E09               	decfsz	___llmod@counter,f,c
 29683  007524  D7E7               	goto	u7360
 29684  007526                     l3345:
 29685  007526  C001  F001         	movff	___llmod@dividend,?___llmod
 29686  00752A  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 29687  00752E  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 29688  007532  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 29689  007536  0012               	return		;funcret
 29690  007538                     __end_of___llmod:
 29691                           	opt stack 0
 29692                           tosu	equ	0xFFF
 29693                           tosh	equ	0xFFE
 29694                           tosl	equ	0xFFD
 29695                           pclath	equ	0xFFA
 29696                           tblptru	equ	0xFF8
 29697                           tblptrh	equ	0xFF7
 29698                           tblptrl	equ	0xFF6
 29699                           tablat	equ	0xFF5
 29700                           prodh	equ	0xFF4
 29701                           prodl	equ	0xFF3
 29702                           intcon	equ	0xFF2
 29703                           intcon2	equ	0xFF1
 29704                           intcon3	equ	0xFF0
 29705                           indf0	equ	0xFEF
 29706                           postinc0	equ	0xFEE
 29707                           fsr0h	equ	0xFEA
 29708                           fsr0l	equ	0xFE9
 29709                           wreg	equ	0xFE8
 29710                           indf1	equ	0xFE7
 29711                           postdec1	equ	0xFE5
 29712                           plusw1	equ	0xFE3
 29713                           fsr1h	equ	0xFE2
 29714                           fsr1l	equ	0xFE1
 29715                           indf2	equ	0xFDF
 29716                           postinc2	equ	0xFDE
 29717                           postdec2	equ	0xFDD
 29718                           plusw2	equ	0xFDB
 29719                           fsr2h	equ	0xFDA
 29720                           fsr2l	equ	0xFD9
 29721                           status	equ	0xFD8
 29722                           
 29723 ;; *************** function ___lldiv *****************
 29724 ;; Defined at:
 29725 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 29726 ;; Parameters:    Size  Location     Type
 29727 ;;  dividend        4    0[COMRAM] unsigned long 
 29728 ;;  divisor         4    4[COMRAM] unsigned long 
 29729 ;; Auto vars:     Size  Location     Type
 29730 ;;  quotient        4    8[COMRAM] unsigned long 
 29731 ;;  counter         1   12[COMRAM] unsigned char 
 29732 ;; Return value:  Size  Location     Type
 29733 ;;                  4    0[COMRAM] unsigned long 
 29734 ;; Registers used:
 29735 ;;		wreg, status,2, status,0
 29736 ;; Tracked objects:
 29737 ;;		On entry : 0/0
 29738 ;;		On exit  : 0/0
 29739 ;;		Unchanged: 0/0
 29740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29742 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29744 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29745 ;;Total ram usage:       13 bytes
 29746 ;; Hardware stack levels used:    1
 29747 ;; This function calls:
 29748 ;;		Nothing
 29749 ;; This function is called by:
 29750 ;;		__display_itoa_u32
 29751 ;; This function uses a non-reentrant model
 29752 ;;
 29753                           
 29754                           	psect	text142
 29755  006E76                     __ptext142:
 29756                           	opt stack 0
 29757  006E76                     ___lldiv:
 29758                           	opt stack 24
 29759                           
 29760                           ;incstack = 0
 29761  006E76  0E00               	movlw	0
 29762  006E78  6E09               	movwf	___lldiv@quotient,c
 29763  006E7A  0E00               	movlw	0
 29764  006E7C  6E0A               	movwf	___lldiv@quotient+1,c
 29765  006E7E  0E00               	movlw	0
 29766  006E80  6E0B               	movwf	___lldiv@quotient+2,c
 29767  006E82  0E00               	movlw	0
 29768  006E84  6E0C               	movwf	___lldiv@quotient+3,c
 29769  006E86  5005               	movf	___lldiv@divisor,w,c
 29770  006E88  1006               	iorwf	___lldiv@divisor+1,w,c
 29771  006E8A  1007               	iorwf	___lldiv@divisor+2,w,c
 29772  006E8C  1008               	iorwf	___lldiv@divisor+3,w,c
 29773  006E8E  B4D8               	btfsc	status,2,c
 29774  006E90  D02A               	goto	l2964
 29775  006E92  0E01               	movlw	1
 29776  006E94  6E0D               	movwf	___lldiv@counter,c
 29777  006E96  D006               	goto	l2959
 29778  006E98  90D8               	bcf	status,0,c
 29779  006E9A  3605               	rlcf	___lldiv@divisor,f,c
 29780  006E9C  3606               	rlcf	___lldiv@divisor+1,f,c
 29781  006E9E  3607               	rlcf	___lldiv@divisor+2,f,c
 29782  006EA0  3608               	rlcf	___lldiv@divisor+3,f,c
 29783  006EA2  2A0D               	incf	___lldiv@counter,f,c
 29784  006EA4                     l2959:
 29785  006EA4  AE08               	btfss	___lldiv@divisor+3,7,c
 29786  006EA6  D7F8               	goto	l2960
 29787  006EA8                     u7330:
 29788  006EA8  90D8               	bcf	status,0,c
 29789  006EAA  3609               	rlcf	___lldiv@quotient,f,c
 29790  006EAC  360A               	rlcf	___lldiv@quotient+1,f,c
 29791  006EAE  360B               	rlcf	___lldiv@quotient+2,f,c
 29792  006EB0  360C               	rlcf	___lldiv@quotient+3,f,c
 29793  006EB2  5005               	movf	___lldiv@divisor,w,c
 29794  006EB4  5C01               	subwf	___lldiv@dividend,w,c
 29795  006EB6  5006               	movf	___lldiv@divisor+1,w,c
 29796  006EB8  5802               	subwfb	___lldiv@dividend+1,w,c
 29797  006EBA  5007               	movf	___lldiv@divisor+2,w,c
 29798  006EBC  5803               	subwfb	___lldiv@dividend+2,w,c
 29799  006EBE  5008               	movf	___lldiv@divisor+3,w,c
 29800  006EC0  5804               	subwfb	___lldiv@dividend+3,w,c
 29801  006EC2  A0D8               	btfss	status,0,c
 29802  006EC4  D009               	goto	l2963
 29803  006EC6  5005               	movf	___lldiv@divisor,w,c
 29804  006EC8  5E01               	subwf	___lldiv@dividend,f,c
 29805  006ECA  5006               	movf	___lldiv@divisor+1,w,c
 29806  006ECC  5A02               	subwfb	___lldiv@dividend+1,f,c
 29807  006ECE  5007               	movf	___lldiv@divisor+2,w,c
 29808  006ED0  5A03               	subwfb	___lldiv@dividend+2,f,c
 29809  006ED2  5008               	movf	___lldiv@divisor+3,w,c
 29810  006ED4  5A04               	subwfb	___lldiv@dividend+3,f,c
 29811  006ED6  8009               	bsf	___lldiv@quotient,0,c
 29812  006ED8                     l2963:
 29813  006ED8  90D8               	bcf	status,0,c
 29814  006EDA  3208               	rrcf	___lldiv@divisor+3,f,c
 29815  006EDC  3207               	rrcf	___lldiv@divisor+2,f,c
 29816  006EDE  3206               	rrcf	___lldiv@divisor+1,f,c
 29817  006EE0  3205               	rrcf	___lldiv@divisor,f,c
 29818  006EE2  2E0D               	decfsz	___lldiv@counter,f,c
 29819  006EE4  D7E1               	goto	u7330
 29820  006EE6                     l2964:
 29821  006EE6  C009  F001         	movff	___lldiv@quotient,?___lldiv
 29822  006EEA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 29823  006EEE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 29824  006EF2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 29825  006EF6  0012               	return		;funcret
 29826  006EF8                     __end_of___lldiv:
 29827                           	opt stack 0
 29828                           tosu	equ	0xFFF
 29829                           tosh	equ	0xFFE
 29830                           tosl	equ	0xFFD
 29831                           pclath	equ	0xFFA
 29832                           tblptru	equ	0xFF8
 29833                           tblptrh	equ	0xFF7
 29834                           tblptrl	equ	0xFF6
 29835                           tablat	equ	0xFF5
 29836                           prodh	equ	0xFF4
 29837                           prodl	equ	0xFF3
 29838                           intcon	equ	0xFF2
 29839                           intcon2	equ	0xFF1
 29840                           intcon3	equ	0xFF0
 29841                           indf0	equ	0xFEF
 29842                           postinc0	equ	0xFEE
 29843                           fsr0h	equ	0xFEA
 29844                           fsr0l	equ	0xFE9
 29845                           wreg	equ	0xFE8
 29846                           indf1	equ	0xFE7
 29847                           postdec1	equ	0xFE5
 29848                           plusw1	equ	0xFE3
 29849                           fsr1h	equ	0xFE2
 29850                           fsr1l	equ	0xFE1
 29851                           indf2	equ	0xFDF
 29852                           postinc2	equ	0xFDE
 29853                           postdec2	equ	0xFDD
 29854                           plusw2	equ	0xFDB
 29855                           fsr2h	equ	0xFDA
 29856                           fsr2l	equ	0xFD9
 29857                           status	equ	0xFD8
 29858                           
 29859 ;; *************** function __display_done *****************
 29860 ;; Defined at:
 29861 ;;		line 529 in file "display.c"
 29862 ;; Parameters:    Size  Location     Type
 29863 ;;		None
 29864 ;; Auto vars:     Size  Location     Type
 29865 ;;  cntr            1   30[COMRAM] unsigned char 
 29866 ;; Return value:  Size  Location     Type
 29867 ;;                  1    wreg      void 
 29868 ;; Registers used:
 29869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29870 ;; Tracked objects:
 29871 ;;		On entry : 0/0
 29872 ;;		On exit  : 0/0
 29873 ;;		Unchanged: 0/0
 29874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29879 ;;Total ram usage:        1 bytes
 29880 ;; Hardware stack levels used:    1
 29881 ;; Hardware stack levels required when called:    4
 29882 ;; This function calls:
 29883 ;;		__display_itoa_u16
 29884 ;;		_bootloader_get_flashPagesWritten
 29885 ;; This function is called by:
 29886 ;;		_display_prepare
 29887 ;; This function uses a non-reentrant model
 29888 ;;
 29889                           
 29890                           	psect	text143
 29891  0038D4                     __ptext143:
 29892                           	opt stack 0
 29893  0038D4                     __display_done:
 29894                           	opt stack 22
 29895                           
 29896                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 29897                           
 29898                           ;incstack = 0
 29899  0038D4  0E00               	movlw	0
 29900  0038D6  6E1F               	movwf	__display_done@cntr,c
 29901                           
 29902                           ;display.c: 533: while(done_line1[cntr])
 29903  0038D8  D017               	goto	l1686
 29904  0038DA                     
 29905                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 29906  0038DA  501F               	movf	__display_done@cntr,w,c
 29907  0038DC  0D01               	mullw	1
 29908  0038DE  0E74               	movlw	low _done_line1
 29909  0038E0  24F3               	addwf	prodl,w,c
 29910  0038E2  6EF6               	movwf	tblptrl,c
 29911  0038E4  0E8D               	movlw	high _done_line1
 29912  0038E6  20F4               	addwfc	prodh,w,c
 29913  0038E8  6EF7               	movwf	tblptrh,c
 29914  0038EA                     	if	1	;There are 3 active tblptr bytes
 29915  0038EA  6AF8               	clrf	tblptru,c
 29916  0038EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29917  0038EE  22F8               	addwfc	tblptru,f,c
 29918  0038F0                     	endif
 29919  0038F0  501F               	movf	__display_done@cntr,w,c
 29920  0038F2  0D01               	mullw	1
 29921  0038F4  0E00               	movlw	low _display_content
 29922  0038F6  24F3               	addwf	prodl,w,c
 29923  0038F8  6ED9               	movwf	fsr2l,c
 29924  0038FA  0E02               	movlw	high _display_content
 29925  0038FC  20F4               	addwfc	prodh,w,c
 29926  0038FE  6EDA               	movwf	fsr2h,c
 29927  003900  0008               	tblrd		*
 29928  003902  CFF5 FFDF          	movff	tablat,indf2
 29929  003906  2A1F               	incf	__display_done@cntr,f,c
 29930  003908                     l1686:
 29931  003908  501F               	movf	__display_done@cntr,w,c
 29932  00390A  0D01               	mullw	1
 29933  00390C  0E74               	movlw	low _done_line1
 29934  00390E  24F3               	addwf	prodl,w,c
 29935  003910  6EF6               	movwf	tblptrl,c
 29936  003912  0E8D               	movlw	high _done_line1
 29937  003914  20F4               	addwfc	prodh,w,c
 29938  003916  6EF7               	movwf	tblptrh,c
 29939  003918                     	if	1	;There are 3 active tblptr bytes
 29940  003918  6AF8               	clrf	tblptru,c
 29941  00391A  0E00               	movlw	low (__mediumconst shr (0+16))
 29942  00391C  22F8               	addwfc	tblptru,f,c
 29943  00391E                     	endif
 29944  00391E  0008               	tblrd		*
 29945  003920  50F5               	movf	tablat,w,c
 29946  003922  0900               	iorlw	0
 29947  003924  A4D8               	btfss	status,2,c
 29948  003926  D7D9               	goto	l1687
 29949                           
 29950                           ;display.c: 535: cntr = 0;
 29951  003928  0E00               	movlw	0
 29952  00392A  6E1F               	movwf	__display_done@cntr,c
 29953                           
 29954                           ;display.c: 536: while(done_line2[cntr])
 29955  00392C  D017               	goto	l1689
 29956  00392E                     
 29957                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 29958  00392E  501F               	movf	__display_done@cntr,w,c
 29959  003930  0D01               	mullw	1
 29960  003932  0E9F               	movlw	low _done_line2
 29961  003934  24F3               	addwf	prodl,w,c
 29962  003936  6EF6               	movwf	tblptrl,c
 29963  003938  0E8E               	movlw	high _done_line2
 29964  00393A  20F4               	addwfc	prodh,w,c
 29965  00393C  6EF7               	movwf	tblptrh,c
 29966  00393E                     	if	1	;There are 3 active tblptr bytes
 29967  00393E  6AF8               	clrf	tblptru,c
 29968  003940  0E00               	movlw	low (__mediumconst shr (0+16))
 29969  003942  22F8               	addwfc	tblptru,f,c
 29970  003944                     	endif
 29971  003944  501F               	movf	__display_done@cntr,w,c
 29972  003946  0D01               	mullw	1
 29973  003948  0E14               	movlw	low (_display_content+20)
 29974  00394A  24F3               	addwf	prodl,w,c
 29975  00394C  6ED9               	movwf	fsr2l,c
 29976  00394E  0E02               	movlw	high (_display_content+20)
 29977  003950  20F4               	addwfc	prodh,w,c
 29978  003952  6EDA               	movwf	fsr2h,c
 29979  003954  0008               	tblrd		*
 29980  003956  CFF5 FFDF          	movff	tablat,indf2
 29981  00395A  2A1F               	incf	__display_done@cntr,f,c
 29982  00395C                     l1689:
 29983  00395C  501F               	movf	__display_done@cntr,w,c
 29984  00395E  0D01               	mullw	1
 29985  003960  0E9F               	movlw	low _done_line2
 29986  003962  24F3               	addwf	prodl,w,c
 29987  003964  6EF6               	movwf	tblptrl,c
 29988  003966  0E8E               	movlw	high _done_line2
 29989  003968  20F4               	addwfc	prodh,w,c
 29990  00396A  6EF7               	movwf	tblptrh,c
 29991  00396C                     	if	1	;There are 3 active tblptr bytes
 29992  00396C  6AF8               	clrf	tblptru,c
 29993  00396E  0E00               	movlw	low (__mediumconst shr (0+16))
 29994  003970  22F8               	addwfc	tblptru,f,c
 29995  003972                     	endif
 29996  003972  0008               	tblrd		*
 29997  003974  50F5               	movf	tablat,w,c
 29998  003976  0900               	iorlw	0
 29999  003978  A4D8               	btfss	status,2,c
 30000  00397A  D7D9               	goto	l1690
 30001                           
 30002                           ;display.c: 538: cntr = 0;
 30003  00397C  0E00               	movlw	0
 30004  00397E  6E1F               	movwf	__display_done@cntr,c
 30005                           
 30006                           ;display.c: 539: while(done_line3[cntr])
 30007  003980  D017               	goto	l1692
 30008  003982                     
 30009                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 30010  003982  501F               	movf	__display_done@cntr,w,c
 30011  003984  0D01               	mullw	1
 30012  003986  0E64               	movlw	low _done_line3
 30013  003988  24F3               	addwf	prodl,w,c
 30014  00398A  6EF6               	movwf	tblptrl,c
 30015  00398C  0E8D               	movlw	high _done_line3
 30016  00398E  20F4               	addwfc	prodh,w,c
 30017  003990  6EF7               	movwf	tblptrh,c
 30018  003992                     	if	1	;There are 3 active tblptr bytes
 30019  003992  6AF8               	clrf	tblptru,c
 30020  003994  0E00               	movlw	low (__mediumconst shr (0+16))
 30021  003996  22F8               	addwfc	tblptru,f,c
 30022  003998                     	endif
 30023  003998  501F               	movf	__display_done@cntr,w,c
 30024  00399A  0D01               	mullw	1
 30025  00399C  0E28               	movlw	low (_display_content+40)
 30026  00399E  24F3               	addwf	prodl,w,c
 30027  0039A0  6ED9               	movwf	fsr2l,c
 30028  0039A2  0E02               	movlw	high (_display_content+40)
 30029  0039A4  20F4               	addwfc	prodh,w,c
 30030  0039A6  6EDA               	movwf	fsr2h,c
 30031  0039A8  0008               	tblrd		*
 30032  0039AA  CFF5 FFDF          	movff	tablat,indf2
 30033  0039AE  2A1F               	incf	__display_done@cntr,f,c
 30034  0039B0                     l1692:
 30035  0039B0  501F               	movf	__display_done@cntr,w,c
 30036  0039B2  0D01               	mullw	1
 30037  0039B4  0E64               	movlw	low _done_line3
 30038  0039B6  24F3               	addwf	prodl,w,c
 30039  0039B8  6EF6               	movwf	tblptrl,c
 30040  0039BA  0E8D               	movlw	high _done_line3
 30041  0039BC  20F4               	addwfc	prodh,w,c
 30042  0039BE  6EF7               	movwf	tblptrh,c
 30043  0039C0                     	if	1	;There are 3 active tblptr bytes
 30044  0039C0  6AF8               	clrf	tblptru,c
 30045  0039C2  0E00               	movlw	low (__mediumconst shr (0+16))
 30046  0039C4  22F8               	addwfc	tblptru,f,c
 30047  0039C6                     	endif
 30048  0039C6  0008               	tblrd		*
 30049  0039C8  50F5               	movf	tablat,w,c
 30050  0039CA  0900               	iorlw	0
 30051  0039CC  A4D8               	btfss	status,2,c
 30052  0039CE  D7D9               	goto	l1693
 30053                           
 30054                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30055  0039D0  EC1A  F045         	call	_bootloader_get_flashPagesWritten	;wreg free
 30056  0039D4  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30057  0039D8  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30058  0039DC  6A1B               	clrf	__display_itoa_u16@value+2,c
 30059  0039DE  6A1C               	clrf	__display_itoa_u16@value+3,c
 30060  0039E0  501F               	movf	__display_done@cntr,w,c
 30061  0039E2  0D01               	mullw	1
 30062  0039E4  0E28               	movlw	low (_display_content+40)
 30063  0039E6  24F3               	addwf	prodl,w,c
 30064  0039E8  6E1D               	movwf	__display_itoa_u16@text,c
 30065  0039EA  0E02               	movlw	high (_display_content+40)
 30066  0039EC  20F4               	addwfc	prodh,w,c
 30067  0039EE  6E1E               	movwf	__display_itoa_u16@text+1,c
 30068  0039F0  EC01  F02F         	call	__display_itoa_u16	;wreg free
 30069                           
 30070                           ;display.c: 542: cntr = 0;
 30071  0039F4  0E00               	movlw	0
 30072  0039F6  6E1F               	movwf	__display_done@cntr,c
 30073                           
 30074                           ;display.c: 543: while(done_line4[cntr])
 30075  0039F8  D017               	goto	l1695
 30076  0039FA                     
 30077                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 30078  0039FA  501F               	movf	__display_done@cntr,w,c
 30079  0039FC  0D01               	mullw	1
 30080  0039FE  0E54               	movlw	low _done_line4
 30081  003A00  24F3               	addwf	prodl,w,c
 30082  003A02  6EF6               	movwf	tblptrl,c
 30083  003A04  0E8D               	movlw	high _done_line4
 30084  003A06  20F4               	addwfc	prodh,w,c
 30085  003A08  6EF7               	movwf	tblptrh,c
 30086  003A0A                     	if	1	;There are 3 active tblptr bytes
 30087  003A0A  6AF8               	clrf	tblptru,c
 30088  003A0C  0E00               	movlw	low (__mediumconst shr (0+16))
 30089  003A0E  22F8               	addwfc	tblptru,f,c
 30090  003A10                     	endif
 30091  003A10  501F               	movf	__display_done@cntr,w,c
 30092  003A12  0D01               	mullw	1
 30093  003A14  0E3C               	movlw	low (_display_content+60)
 30094  003A16  24F3               	addwf	prodl,w,c
 30095  003A18  6ED9               	movwf	fsr2l,c
 30096  003A1A  0E02               	movlw	high (_display_content+60)
 30097  003A1C  20F4               	addwfc	prodh,w,c
 30098  003A1E  6EDA               	movwf	fsr2h,c
 30099  003A20  0008               	tblrd		*
 30100  003A22  CFF5 FFDF          	movff	tablat,indf2
 30101  003A26  2A1F               	incf	__display_done@cntr,f,c
 30102  003A28                     l1695:
 30103  003A28  501F               	movf	__display_done@cntr,w,c
 30104  003A2A  0D01               	mullw	1
 30105  003A2C  0E54               	movlw	low _done_line4
 30106  003A2E  24F3               	addwf	prodl,w,c
 30107  003A30  6EF6               	movwf	tblptrl,c
 30108  003A32  0E8D               	movlw	high _done_line4
 30109  003A34  20F4               	addwfc	prodh,w,c
 30110  003A36  6EF7               	movwf	tblptrh,c
 30111  003A38                     	if	1	;There are 3 active tblptr bytes
 30112  003A38  6AF8               	clrf	tblptru,c
 30113  003A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 30114  003A3C  22F8               	addwfc	tblptru,f,c
 30115  003A3E                     	endif
 30116  003A3E  0008               	tblrd		*
 30117  003A40  50F5               	movf	tablat,w,c
 30118  003A42  0900               	iorlw	0
 30119  003A44  B4D8               	btfsc	status,2,c
 30120  003A46  0012               	return	
 30121  003A48  D7D8               	goto	l1696
 30122  003A4A                     __end_of__display_done:
 30123                           	opt stack 0
 30124                           tosu	equ	0xFFF
 30125                           tosh	equ	0xFFE
 30126                           tosl	equ	0xFFD
 30127                           pclath	equ	0xFFA
 30128                           tblptru	equ	0xFF8
 30129                           tblptrh	equ	0xFF7
 30130                           tblptrl	equ	0xFF6
 30131                           tablat	equ	0xFF5
 30132                           prodh	equ	0xFF4
 30133                           prodl	equ	0xFF3
 30134                           intcon	equ	0xFF2
 30135                           intcon2	equ	0xFF1
 30136                           intcon3	equ	0xFF0
 30137                           indf0	equ	0xFEF
 30138                           postinc0	equ	0xFEE
 30139                           fsr0h	equ	0xFEA
 30140                           fsr0l	equ	0xFE9
 30141                           wreg	equ	0xFE8
 30142                           indf1	equ	0xFE7
 30143                           postdec1	equ	0xFE5
 30144                           plusw1	equ	0xFE3
 30145                           fsr1h	equ	0xFE2
 30146                           fsr1l	equ	0xFE1
 30147                           indf2	equ	0xFDF
 30148                           postinc2	equ	0xFDE
 30149                           postdec2	equ	0xFDD
 30150                           plusw2	equ	0xFDB
 30151                           fsr2h	equ	0xFDA
 30152                           fsr2l	equ	0xFD9
 30153                           status	equ	0xFD8
 30154                           
 30155 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30156 ;; Defined at:
 30157 ;;		line 511 in file "bootloader.c"
 30158 ;; Parameters:    Size  Location     Type
 30159 ;;		None
 30160 ;; Auto vars:     Size  Location     Type
 30161 ;;		None
 30162 ;; Return value:  Size  Location     Type
 30163 ;;                  2    0[COMRAM] unsigned int 
 30164 ;; Registers used:
 30165 ;;		None
 30166 ;; Tracked objects:
 30167 ;;		On entry : 0/0
 30168 ;;		On exit  : 0/0
 30169 ;;		Unchanged: 0/0
 30170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30175 ;;Total ram usage:        2 bytes
 30176 ;; Hardware stack levels used:    1
 30177 ;; This function calls:
 30178 ;;		Nothing
 30179 ;; This function is called by:
 30180 ;;		__display_programming
 30181 ;;		__display_done
 30182 ;;		__fill_buffer_get_bootloader_details
 30183 ;; This function uses a non-reentrant model
 30184 ;;
 30185                           
 30186                           	psect	text144
 30187  008A34                     __ptext144:
 30188                           	opt stack 0
 30189  008A34                     _bootloader_get_flashPagesWritten:
 30190                           	opt stack 25
 30191                           
 30192                           ;bootloader.c: 513: return flash_pages_written;
 30193                           
 30194                           ;incstack = 0
 30195  008A34  C174  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30196  008A38  C175  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30197  008A3C  0012               	return		;funcret
 30198  008A3E                     __end_of_bootloader_get_flashPagesWritten:
 30199                           	opt stack 0
 30200                           tosu	equ	0xFFF
 30201                           tosh	equ	0xFFE
 30202                           tosl	equ	0xFFD
 30203                           pclath	equ	0xFFA
 30204                           tblptru	equ	0xFF8
 30205                           tblptrh	equ	0xFF7
 30206                           tblptrl	equ	0xFF6
 30207                           tablat	equ	0xFF5
 30208                           prodh	equ	0xFF4
 30209                           prodl	equ	0xFF3
 30210                           intcon	equ	0xFF2
 30211                           intcon2	equ	0xFF1
 30212                           intcon3	equ	0xFF0
 30213                           indf0	equ	0xFEF
 30214                           postinc0	equ	0xFEE
 30215                           fsr0h	equ	0xFEA
 30216                           fsr0l	equ	0xFE9
 30217                           wreg	equ	0xFE8
 30218                           indf1	equ	0xFE7
 30219                           postdec1	equ	0xFE5
 30220                           plusw1	equ	0xFE3
 30221                           fsr1h	equ	0xFE2
 30222                           fsr1l	equ	0xFE1
 30223                           indf2	equ	0xFDF
 30224                           postinc2	equ	0xFDE
 30225                           postdec2	equ	0xFDD
 30226                           plusw2	equ	0xFDB
 30227                           fsr2h	equ	0xFDA
 30228                           fsr2l	equ	0xFD9
 30229                           status	equ	0xFD8
 30230                           
 30231 ;; *************** function __display_clear *****************
 30232 ;; Defined at:
 30233 ;;		line 75 in file "display.c"
 30234 ;; Parameters:    Size  Location     Type
 30235 ;;		None
 30236 ;; Auto vars:     Size  Location     Type
 30237 ;;  col             1    3[COMRAM] unsigned char 
 30238 ;;  row             1    2[COMRAM] unsigned char 
 30239 ;; Return value:  Size  Location     Type
 30240 ;;                  1    wreg      void 
 30241 ;; Registers used:
 30242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30243 ;; Tracked objects:
 30244 ;;		On entry : 0/0
 30245 ;;		On exit  : 0/0
 30246 ;;		Unchanged: 0/0
 30247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30252 ;;Total ram usage:        4 bytes
 30253 ;; Hardware stack levels used:    1
 30254 ;; This function calls:
 30255 ;;		Nothing
 30256 ;; This function is called by:
 30257 ;;		_display_prepare
 30258 ;; This function uses a non-reentrant model
 30259 ;;
 30260                           
 30261                           	psect	text145
 30262  007E36                     __ptext145:
 30263                           	opt stack 0
 30264  007E36                     __display_clear:
 30265                           	opt stack 26
 30266                           
 30267                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 30268                           
 30269                           ;incstack = 0
 30270  007E36  0E00               	movlw	0
 30271  007E38  6E03               	movwf	__display_clear@row,c
 30272  007E3A                     l11525:
 30273  007E3A  0E03               	movlw	3
 30274  007E3C  6403               	cpfsgt	__display_clear@row,c
 30275  007E3E  D001               	goto	l1464
 30276  007E40  0012               	return	
 30277  007E42                     l1464:
 30278                           
 30279                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 30280  007E42  0E00               	movlw	0
 30281  007E44  6E04               	movwf	__display_clear@col,c
 30282  007E46                     l11531:
 30283  007E46  0E13               	movlw	19
 30284  007E48  6404               	cpfsgt	__display_clear@col,c
 30285  007E4A  D001               	goto	l1466
 30286  007E4C  D016               	goto	u8570
 30287  007E4E                     l1466:
 30288                           
 30289                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 30290  007E4E  5003               	movf	__display_clear@row,w,c
 30291  007E50  0D14               	mullw	20
 30292  007E52  0E00               	movlw	low _display_content
 30293  007E54  6E01               	movwf	??__display_clear& (0+255),c
 30294  007E56  0E02               	movlw	high _display_content
 30295  007E58  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30296  007E5A  50F3               	movf	prodl,w,c
 30297  007E5C  2601               	addwf	??__display_clear,f,c
 30298  007E5E  50F4               	movf	prodh,w,c
 30299  007E60  2202               	addwfc	??__display_clear+1,f,c
 30300  007E62  5004               	movf	__display_clear@col,w,c
 30301  007E64  0D01               	mullw	1
 30302  007E66  50F3               	movf	prodl,w,c
 30303  007E68  2401               	addwf	??__display_clear,w,c
 30304  007E6A  6ED9               	movwf	fsr2l,c
 30305  007E6C  50F4               	movf	prodh,w,c
 30306  007E6E  2002               	addwfc	??__display_clear+1,w,c
 30307  007E70  6EDA               	movwf	fsr2h,c
 30308  007E72  0E20               	movlw	32
 30309  007E74  6EDF               	movwf	indf2,c
 30310  007E76  2A04               	incf	__display_clear@col,f,c
 30311  007E78  D7E6               	goto	l11531
 30312  007E7A                     u8570:
 30313  007E7A  2A03               	incf	__display_clear@row,f,c
 30314  007E7C  D7DE               	goto	l11525
 30315  007E7E                     __end_of__display_clear:
 30316                           	opt stack 0
 30317                           tosu	equ	0xFFF
 30318                           tosh	equ	0xFFE
 30319                           tosl	equ	0xFFD
 30320                           pclath	equ	0xFFA
 30321                           tblptru	equ	0xFF8
 30322                           tblptrh	equ	0xFF7
 30323                           tblptrl	equ	0xFF6
 30324                           tablat	equ	0xFF5
 30325                           prodh	equ	0xFF4
 30326                           prodl	equ	0xFF3
 30327                           intcon	equ	0xFF2
 30328                           intcon2	equ	0xFF1
 30329                           intcon3	equ	0xFF0
 30330                           indf0	equ	0xFEF
 30331                           postinc0	equ	0xFEE
 30332                           fsr0h	equ	0xFEA
 30333                           fsr0l	equ	0xFE9
 30334                           wreg	equ	0xFE8
 30335                           indf1	equ	0xFE7
 30336                           postdec1	equ	0xFE5
 30337                           plusw1	equ	0xFE3
 30338                           fsr1h	equ	0xFE2
 30339                           fsr1l	equ	0xFE1
 30340                           indf2	equ	0xFDF
 30341                           postinc2	equ	0xFDE
 30342                           postdec2	equ	0xFDD
 30343                           plusw2	equ	0xFDB
 30344                           fsr2h	equ	0xFDA
 30345                           fsr2l	equ	0xFD9
 30346                           status	equ	0xFD8
 30347                           
 30348 ;; *************** function __display_checked *****************
 30349 ;; Defined at:
 30350 ;;		line 433 in file "display.c"
 30351 ;; Parameters:    Size  Location     Type
 30352 ;;		None
 30353 ;; Auto vars:     Size  Location     Type
 30354 ;;  cntr            1   33[COMRAM] unsigned char 
 30355 ;;  start           1   32[COMRAM] unsigned char 
 30356 ;; Return value:  Size  Location     Type
 30357 ;;                  1    wreg      void 
 30358 ;; Registers used:
 30359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30360 ;; Tracked objects:
 30361 ;;		On entry : 0/0
 30362 ;;		On exit  : 0/0
 30363 ;;		Unchanged: 0/0
 30364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30369 ;;Total ram usage:        4 bytes
 30370 ;; Hardware stack levels used:    1
 30371 ;; Hardware stack levels required when called:    4
 30372 ;; This function calls:
 30373 ;;		__display_itoa_u16
 30374 ;;		_bootloader_get_total_entries
 30375 ;; This function is called by:
 30376 ;;		_display_prepare
 30377 ;; This function uses a non-reentrant model
 30378 ;;
 30379                           
 30380                           	psect	text146
 30381  003758                     __ptext146:
 30382                           	opt stack 0
 30383  003758                     __display_checked:
 30384                           	opt stack 22
 30385                           
 30386                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 30387                           
 30388                           ;incstack = 0
 30389  003758  0E00               	movlw	0
 30390  00375A  6E22               	movwf	__display_checked@cntr,c
 30391                           
 30392                           ;display.c: 438: while(checked_line1[cntr])
 30393  00375C  D017               	goto	l1622
 30394  00375E                     
 30395                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 30396  00375E  5022               	movf	__display_checked@cntr,w,c
 30397  003760  0D01               	mullw	1
 30398  003762  0EB4               	movlw	low _checked_line1
 30399  003764  24F3               	addwf	prodl,w,c
 30400  003766  6EF6               	movwf	tblptrl,c
 30401  003768  0E8D               	movlw	high _checked_line1
 30402  00376A  20F4               	addwfc	prodh,w,c
 30403  00376C  6EF7               	movwf	tblptrh,c
 30404  00376E                     	if	1	;There are 3 active tblptr bytes
 30405  00376E  6AF8               	clrf	tblptru,c
 30406  003770  0E00               	movlw	low (__mediumconst shr (0+16))
 30407  003772  22F8               	addwfc	tblptru,f,c
 30408  003774                     	endif
 30409  003774  5022               	movf	__display_checked@cntr,w,c
 30410  003776  0D01               	mullw	1
 30411  003778  0E00               	movlw	low _display_content
 30412  00377A  24F3               	addwf	prodl,w,c
 30413  00377C  6ED9               	movwf	fsr2l,c
 30414  00377E  0E02               	movlw	high _display_content
 30415  003780  20F4               	addwfc	prodh,w,c
 30416  003782  6EDA               	movwf	fsr2h,c
 30417  003784  0008               	tblrd		*
 30418  003786  CFF5 FFDF          	movff	tablat,indf2
 30419  00378A  2A22               	incf	__display_checked@cntr,f,c
 30420  00378C                     l1622:
 30421  00378C  5022               	movf	__display_checked@cntr,w,c
 30422  00378E  0D01               	mullw	1
 30423  003790  0EB4               	movlw	low _checked_line1
 30424  003792  24F3               	addwf	prodl,w,c
 30425  003794  6EF6               	movwf	tblptrl,c
 30426  003796  0E8D               	movlw	high _checked_line1
 30427  003798  20F4               	addwfc	prodh,w,c
 30428  00379A  6EF7               	movwf	tblptrh,c
 30429  00379C                     	if	1	;There are 3 active tblptr bytes
 30430  00379C  6AF8               	clrf	tblptru,c
 30431  00379E  0E00               	movlw	low (__mediumconst shr (0+16))
 30432  0037A0  22F8               	addwfc	tblptru,f,c
 30433  0037A2                     	endif
 30434  0037A2  0008               	tblrd		*
 30435  0037A4  50F5               	movf	tablat,w,c
 30436  0037A6  0900               	iorlw	0
 30437  0037A8  A4D8               	btfss	status,2,c
 30438  0037AA  D7D9               	goto	l1623
 30439                           
 30440                           ;display.c: 440: cntr = 0;
 30441  0037AC  0E00               	movlw	0
 30442  0037AE  6E22               	movwf	__display_checked@cntr,c
 30443                           
 30444                           ;display.c: 441: while(checked_line2[cntr])
 30445  0037B0  D017               	goto	l1625
 30446  0037B2                     
 30447                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 30448  0037B2  5022               	movf	__display_checked@cntr,w,c
 30449  0037B4  0D01               	mullw	1
 30450  0037B6  0E99               	movlw	low _checked_line2
 30451  0037B8  24F3               	addwf	prodl,w,c
 30452  0037BA  6EF6               	movwf	tblptrl,c
 30453  0037BC  0E8C               	movlw	high _checked_line2
 30454  0037BE  20F4               	addwfc	prodh,w,c
 30455  0037C0  6EF7               	movwf	tblptrh,c
 30456  0037C2                     	if	1	;There are 3 active tblptr bytes
 30457  0037C2  6AF8               	clrf	tblptru,c
 30458  0037C4  0E00               	movlw	low (__mediumconst shr (0+16))
 30459  0037C6  22F8               	addwfc	tblptru,f,c
 30460  0037C8                     	endif
 30461  0037C8  5022               	movf	__display_checked@cntr,w,c
 30462  0037CA  0D01               	mullw	1
 30463  0037CC  0E14               	movlw	low (_display_content+20)
 30464  0037CE  24F3               	addwf	prodl,w,c
 30465  0037D0  6ED9               	movwf	fsr2l,c
 30466  0037D2  0E02               	movlw	high (_display_content+20)
 30467  0037D4  20F4               	addwfc	prodh,w,c
 30468  0037D6  6EDA               	movwf	fsr2h,c
 30469  0037D8  0008               	tblrd		*
 30470  0037DA  CFF5 FFDF          	movff	tablat,indf2
 30471  0037DE  2A22               	incf	__display_checked@cntr,f,c
 30472  0037E0                     l1625:
 30473  0037E0  5022               	movf	__display_checked@cntr,w,c
 30474  0037E2  0D01               	mullw	1
 30475  0037E4  0E99               	movlw	low _checked_line2
 30476  0037E6  24F3               	addwf	prodl,w,c
 30477  0037E8  6EF6               	movwf	tblptrl,c
 30478  0037EA  0E8C               	movlw	high _checked_line2
 30479  0037EC  20F4               	addwfc	prodh,w,c
 30480  0037EE  6EF7               	movwf	tblptrh,c
 30481  0037F0                     	if	1	;There are 3 active tblptr bytes
 30482  0037F0  6AF8               	clrf	tblptru,c
 30483  0037F2  0E00               	movlw	low (__mediumconst shr (0+16))
 30484  0037F4  22F8               	addwfc	tblptru,f,c
 30485  0037F6                     	endif
 30486  0037F6  0008               	tblrd		*
 30487  0037F8  50F5               	movf	tablat,w,c
 30488  0037FA  0900               	iorlw	0
 30489  0037FC  A4D8               	btfss	status,2,c
 30490  0037FE  D7D9               	goto	l1626
 30491                           
 30492                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30493  003800  EC1F  F045         	call	_bootloader_get_total_entries	;wreg free
 30494  003804  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30495  003808  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30496  00380C  6A1B               	clrf	__display_itoa_u16@value+2,c
 30497  00380E  6A1C               	clrf	__display_itoa_u16@value+3,c
 30498  003810  0E28               	movlw	low (_display_content+40)
 30499  003812  6E1D               	movwf	__display_itoa_u16@text,c
 30500  003814  0E02               	movlw	high (_display_content+40)
 30501  003816  6E1E               	movwf	__display_itoa_u16@text+1,c
 30502  003818  EC01  F02F         	call	__display_itoa_u16	;wreg free
 30503  00381C  6E21               	movwf	__display_checked@start,c
 30504                           
 30505                           ;display.c: 445: start++;
 30506  00381E  2A21               	incf	__display_checked@start,f,c
 30507                           
 30508                           ;display.c: 446: cntr = 0;
 30509  003820  0E00               	movlw	0
 30510  003822  6E22               	movwf	__display_checked@cntr,c
 30511                           
 30512                           ;display.c: 447: while(checked_line3[cntr])
 30513  003824  D01C               	goto	l1628
 30514  003826                     
 30515                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 30516  003826  5022               	movf	__display_checked@cntr,w,c
 30517  003828  0D01               	mullw	1
 30518  00382A  0E73               	movlw	low _checked_line3
 30519  00382C  24F3               	addwf	prodl,w,c
 30520  00382E  6EF6               	movwf	tblptrl,c
 30521  003830  0E8E               	movlw	high _checked_line3
 30522  003832  20F4               	addwfc	prodh,w,c
 30523  003834  6EF7               	movwf	tblptrh,c
 30524  003836                     	if	1	;There are 3 active tblptr bytes
 30525  003836  6AF8               	clrf	tblptru,c
 30526  003838  0E00               	movlw	low (__mediumconst shr (0+16))
 30527  00383A  22F8               	addwfc	tblptru,f,c
 30528  00383C                     	endif
 30529  00383C  5022               	movf	__display_checked@cntr,w,c
 30530  00383E  C021  F01F         	movff	__display_checked@start,??__display_checked
 30531  003842  6A20               	clrf	(??__display_checked+1)& (0+255),c
 30532  003844  261F               	addwf	??__display_checked,f,c
 30533  003846  0E00               	movlw	0
 30534  003848  2220               	addwfc	??__display_checked+1,f,c
 30535  00384A  0E28               	movlw	low (_display_content+40)
 30536  00384C  241F               	addwf	??__display_checked,w,c
 30537  00384E  6ED9               	movwf	fsr2l,c
 30538  003850  0E02               	movlw	high (_display_content+40)
 30539  003852  2020               	addwfc	??__display_checked+1,w,c
 30540  003854  6EDA               	movwf	fsr2h,c
 30541  003856  0008               	tblrd		*
 30542  003858  CFF5 FFDF          	movff	tablat,indf2
 30543  00385C  2A22               	incf	__display_checked@cntr,f,c
 30544  00385E                     l1628:
 30545  00385E  5022               	movf	__display_checked@cntr,w,c
 30546  003860  0D01               	mullw	1
 30547  003862  0E73               	movlw	low _checked_line3
 30548  003864  24F3               	addwf	prodl,w,c
 30549  003866  6EF6               	movwf	tblptrl,c
 30550  003868  0E8E               	movlw	high _checked_line3
 30551  00386A  20F4               	addwfc	prodh,w,c
 30552  00386C  6EF7               	movwf	tblptrh,c
 30553  00386E                     	if	1	;There are 3 active tblptr bytes
 30554  00386E  6AF8               	clrf	tblptru,c
 30555  003870  0E00               	movlw	low (__mediumconst shr (0+16))
 30556  003872  22F8               	addwfc	tblptru,f,c
 30557  003874                     	endif
 30558  003874  0008               	tblrd		*
 30559  003876  50F5               	movf	tablat,w,c
 30560  003878  0900               	iorlw	0
 30561  00387A  A4D8               	btfss	status,2,c
 30562  00387C  D7D4               	goto	l1629
 30563                           
 30564                           ;display.c: 450: cntr = 0;
 30565  00387E  0E00               	movlw	0
 30566  003880  6E22               	movwf	__display_checked@cntr,c
 30567                           
 30568                           ;display.c: 451: while(checked_line4[cntr])
 30569  003882  D017               	goto	l1631
 30570  003884                     
 30571                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 30572  003884  5022               	movf	__display_checked@cntr,w,c
 30573  003886  0D01               	mullw	1
 30574  003888  0E32               	movlw	low _checked_line4
 30575  00388A  24F3               	addwf	prodl,w,c
 30576  00388C  6EF6               	movwf	tblptrl,c
 30577  00388E  0E8D               	movlw	high _checked_line4
 30578  003890  20F4               	addwfc	prodh,w,c
 30579  003892  6EF7               	movwf	tblptrh,c
 30580  003894                     	if	1	;There are 3 active tblptr bytes
 30581  003894  6AF8               	clrf	tblptru,c
 30582  003896  0E00               	movlw	low (__mediumconst shr (0+16))
 30583  003898  22F8               	addwfc	tblptru,f,c
 30584  00389A                     	endif
 30585  00389A  5022               	movf	__display_checked@cntr,w,c
 30586  00389C  0D01               	mullw	1
 30587  00389E  0E3C               	movlw	low (_display_content+60)
 30588  0038A0  24F3               	addwf	prodl,w,c
 30589  0038A2  6ED9               	movwf	fsr2l,c
 30590  0038A4  0E02               	movlw	high (_display_content+60)
 30591  0038A6  20F4               	addwfc	prodh,w,c
 30592  0038A8  6EDA               	movwf	fsr2h,c
 30593  0038AA  0008               	tblrd		*
 30594  0038AC  CFF5 FFDF          	movff	tablat,indf2
 30595  0038B0  2A22               	incf	__display_checked@cntr,f,c
 30596  0038B2                     l1631:
 30597  0038B2  5022               	movf	__display_checked@cntr,w,c
 30598  0038B4  0D01               	mullw	1
 30599  0038B6  0E32               	movlw	low _checked_line4
 30600  0038B8  24F3               	addwf	prodl,w,c
 30601  0038BA  6EF6               	movwf	tblptrl,c
 30602  0038BC  0E8D               	movlw	high _checked_line4
 30603  0038BE  20F4               	addwfc	prodh,w,c
 30604  0038C0  6EF7               	movwf	tblptrh,c
 30605  0038C2                     	if	1	;There are 3 active tblptr bytes
 30606  0038C2  6AF8               	clrf	tblptru,c
 30607  0038C4  0E00               	movlw	low (__mediumconst shr (0+16))
 30608  0038C6  22F8               	addwfc	tblptru,f,c
 30609  0038C8                     	endif
 30610  0038C8  0008               	tblrd		*
 30611  0038CA  50F5               	movf	tablat,w,c
 30612  0038CC  0900               	iorlw	0
 30613  0038CE  B4D8               	btfsc	status,2,c
 30614  0038D0  0012               	return	
 30615  0038D2  D7D8               	goto	l1632
 30616  0038D4                     __end_of__display_checked:
 30617                           	opt stack 0
 30618                           tosu	equ	0xFFF
 30619                           tosh	equ	0xFFE
 30620                           tosl	equ	0xFFD
 30621                           pclath	equ	0xFFA
 30622                           tblptru	equ	0xFF8
 30623                           tblptrh	equ	0xFF7
 30624                           tblptrl	equ	0xFF6
 30625                           tablat	equ	0xFF5
 30626                           prodh	equ	0xFF4
 30627                           prodl	equ	0xFF3
 30628                           intcon	equ	0xFF2
 30629                           intcon2	equ	0xFF1
 30630                           intcon3	equ	0xFF0
 30631                           indf0	equ	0xFEF
 30632                           postinc0	equ	0xFEE
 30633                           fsr0h	equ	0xFEA
 30634                           fsr0l	equ	0xFE9
 30635                           wreg	equ	0xFE8
 30636                           indf1	equ	0xFE7
 30637                           postdec1	equ	0xFE5
 30638                           plusw1	equ	0xFE3
 30639                           fsr1h	equ	0xFE2
 30640                           fsr1l	equ	0xFE1
 30641                           indf2	equ	0xFDF
 30642                           postinc2	equ	0xFDE
 30643                           postdec2	equ	0xFDD
 30644                           plusw2	equ	0xFDB
 30645                           fsr2h	equ	0xFDA
 30646                           fsr2l	equ	0xFD9
 30647                           status	equ	0xFD8
 30648                           
 30649 ;; *************** function _bootloader_get_total_entries *****************
 30650 ;; Defined at:
 30651 ;;		line 470 in file "bootloader.c"
 30652 ;; Parameters:    Size  Location     Type
 30653 ;;		None
 30654 ;; Auto vars:     Size  Location     Type
 30655 ;;		None
 30656 ;; Return value:  Size  Location     Type
 30657 ;;                  2    0[COMRAM] unsigned int 
 30658 ;; Registers used:
 30659 ;;		None
 30660 ;; Tracked objects:
 30661 ;;		On entry : 0/0
 30662 ;;		On exit  : 0/0
 30663 ;;		Unchanged: 0/0
 30664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30669 ;;Total ram usage:        2 bytes
 30670 ;; Hardware stack levels used:    1
 30671 ;; This function calls:
 30672 ;;		Nothing
 30673 ;; This function is called by:
 30674 ;;		__display_checked
 30675 ;;		__display_programming
 30676 ;;		__fill_buffer_get_bootloader_details
 30677 ;; This function uses a non-reentrant model
 30678 ;;
 30679                           
 30680                           	psect	text147
 30681  008A3E                     __ptext147:
 30682                           	opt stack 0
 30683  008A3E                     _bootloader_get_total_entries:
 30684                           	opt stack 25
 30685                           
 30686                           ;bootloader.c: 472: return total_hex_file_entries;
 30687                           
 30688                           ;incstack = 0
 30689  008A3E  C176  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30690  008A42  C177  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30691  008A46  0012               	return		;funcret
 30692  008A48                     __end_of_bootloader_get_total_entries:
 30693                           	opt stack 0
 30694                           tosu	equ	0xFFF
 30695                           tosh	equ	0xFFE
 30696                           tosl	equ	0xFFD
 30697                           pclath	equ	0xFFA
 30698                           tblptru	equ	0xFF8
 30699                           tblptrh	equ	0xFF7
 30700                           tblptrl	equ	0xFF6
 30701                           tablat	equ	0xFF5
 30702                           prodh	equ	0xFF4
 30703                           prodl	equ	0xFF3
 30704                           intcon	equ	0xFF2
 30705                           intcon2	equ	0xFF1
 30706                           intcon3	equ	0xFF0
 30707                           indf0	equ	0xFEF
 30708                           postinc0	equ	0xFEE
 30709                           fsr0h	equ	0xFEA
 30710                           fsr0l	equ	0xFE9
 30711                           wreg	equ	0xFE8
 30712                           indf1	equ	0xFE7
 30713                           postdec1	equ	0xFE5
 30714                           plusw1	equ	0xFE3
 30715                           fsr1h	equ	0xFE2
 30716                           fsr1l	equ	0xFE1
 30717                           indf2	equ	0xFDF
 30718                           postinc2	equ	0xFDE
 30719                           postdec2	equ	0xFDD
 30720                           plusw2	equ	0xFDB
 30721                           fsr2h	equ	0xFDA
 30722                           fsr2l	equ	0xFD9
 30723                           status	equ	0xFD8
 30724                           
 30725 ;; *************** function __display_itoa_u16 *****************
 30726 ;; Defined at:
 30727 ;;		line 88 in file "display.c"
 30728 ;; Parameters:    Size  Location     Type
 30729 ;;  value           4   24[COMRAM] unsigned long 
 30730 ;;  text            2   28[COMRAM] PTR unsigned char 
 30731 ;;		 -> display_content(80), 
 30732 ;; Auto vars:     Size  Location     Type
 30733 ;;		None
 30734 ;; Return value:  Size  Location     Type
 30735 ;;                  1    wreg      unsigned char 
 30736 ;; Registers used:
 30737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30738 ;; Tracked objects:
 30739 ;;		On entry : 0/0
 30740 ;;		On exit  : 0/0
 30741 ;;		Unchanged: 0/0
 30742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30743 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30746 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30747 ;;Total ram usage:        6 bytes
 30748 ;; Hardware stack levels used:    1
 30749 ;; Hardware stack levels required when called:    3
 30750 ;; This function calls:
 30751 ;;		_itoa
 30752 ;; This function is called by:
 30753 ;;		__display_itoa_u32
 30754 ;;		__display_verify
 30755 ;;		__display_checked
 30756 ;;		__display_failed
 30757 ;;		__display_programming
 30758 ;;		__display_done
 30759 ;; This function uses a non-reentrant model
 30760 ;;
 30761                           
 30762                           	psect	text148
 30763  005E02                     __ptext148:
 30764                           	opt stack 0
 30765  005E02                     __display_itoa_u16:
 30766                           	opt stack 22
 30767                           
 30768                           ;display.c: 90: itoa(text, value, 10);
 30769                           
 30770                           ;incstack = 0
 30771  005E02  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 30772  005E06  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 30773  005E0A  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 30774  005E0E  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 30775  005E12  0E00               	movlw	0
 30776  005E14  6E16               	movwf	itoa@base+1,c
 30777  005E16  0E0A               	movlw	10
 30778  005E18  6E15               	movwf	itoa@base,c
 30779  005E1A  EC31  F040         	call	_itoa	;wreg free
 30780                           
 30781                           ;display.c: 91: if(value>9999)
 30782  005E1E  501C               	movf	__display_itoa_u16@value+3,w,c
 30783  005E20  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30784  005E22  E106               	bnz	u7180
 30785  005E24  0E10               	movlw	16
 30786  005E26  5C19               	subwf	__display_itoa_u16@value,w,c
 30787  005E28  0E27               	movlw	39
 30788  005E2A  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30789  005E2C  A0D8               	btfss	status,0,c
 30790  005E2E  D00A               	goto	l1471
 30791  005E30                     u7180:
 30792                           
 30793                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 30794  005E30  EE20 F005          	lfsr	2,5
 30795  005E34  501D               	movf	__display_itoa_u16@text,w,c
 30796  005E36  26D9               	addwf	fsr2l,f,c
 30797  005E38  501E               	movf	__display_itoa_u16@text+1,w,c
 30798  005E3A  22DA               	addwfc	fsr2h,f,c
 30799  005E3C  0E20               	movlw	32
 30800  005E3E  6EDF               	movwf	indf2,c
 30801                           
 30802                           ;display.c: 94: return 5;
 30803  005E40  0E05               	movlw	5
 30804                           
 30805                           ;display.c: 95: }
 30806  005E42  0012               	return	
 30807  005E44                     l1471:
 30808                           
 30809                           ;display.c: 96: else if (value>999)
 30810  005E44  501C               	movf	__display_itoa_u16@value+3,w,c
 30811  005E46  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30812  005E48  E106               	bnz	u7190
 30813  005E4A  0EE8               	movlw	232
 30814  005E4C  5C19               	subwf	__display_itoa_u16@value,w,c
 30815  005E4E  0E03               	movlw	3
 30816  005E50  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30817  005E52  A0D8               	btfss	status,0,c
 30818  005E54  D00A               	goto	l1474
 30819  005E56                     u7190:
 30820                           
 30821                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 30822  005E56  EE20 F004          	lfsr	2,4
 30823  005E5A  501D               	movf	__display_itoa_u16@text,w,c
 30824  005E5C  26D9               	addwf	fsr2l,f,c
 30825  005E5E  501E               	movf	__display_itoa_u16@text+1,w,c
 30826  005E60  22DA               	addwfc	fsr2h,f,c
 30827  005E62  0E20               	movlw	32
 30828  005E64  6EDF               	movwf	indf2,c
 30829                           
 30830                           ;display.c: 99: return 4;
 30831  005E66  0E04               	movlw	4
 30832                           
 30833                           ;display.c: 100: }
 30834  005E68  0012               	return	
 30835  005E6A                     l1474:
 30836                           
 30837                           ;display.c: 101: else if (value>99)
 30838  005E6A  501C               	movf	__display_itoa_u16@value+3,w,c
 30839  005E6C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30840  005E6E  101A               	iorwf	__display_itoa_u16@value+1,w,c
 30841  005E70  E104               	bnz	u7200
 30842  005E72  0E64               	movlw	100
 30843  005E74  5C19               	subwf	__display_itoa_u16@value,w,c
 30844  005E76  A0D8               	btfss	status,0,c
 30845  005E78  D00A               	goto	l1476
 30846  005E7A                     u7200:
 30847                           
 30848                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 30849  005E7A  EE20 F003          	lfsr	2,3
 30850  005E7E  501D               	movf	__display_itoa_u16@text,w,c
 30851  005E80  26D9               	addwf	fsr2l,f,c
 30852  005E82  501E               	movf	__display_itoa_u16@text+1,w,c
 30853  005E84  22DA               	addwfc	fsr2h,f,c
 30854  005E86  0E20               	movlw	32
 30855  005E88  6EDF               	movwf	indf2,c
 30856                           
 30857                           ;display.c: 104: return 3;
 30858  005E8A  0E03               	movlw	3
 30859                           
 30860                           ;display.c: 105: }
 30861  005E8C  0012               	return	
 30862  005E8E                     l1476:
 30863                           
 30864                           ;display.c: 106: else if (value>9)
 30865  005E8E  501C               	movf	__display_itoa_u16@value+3,w,c
 30866  005E90  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30867  005E92  101A               	iorwf	__display_itoa_u16@value+1,w,c
 30868  005E94  E104               	bnz	u7210
 30869  005E96  0E0A               	movlw	10
 30870  005E98  5C19               	subwf	__display_itoa_u16@value,w,c
 30871  005E9A  A0D8               	btfss	status,0,c
 30872  005E9C  D00A               	goto	l1478
 30873  005E9E                     u7210:
 30874                           
 30875                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 30876  005E9E  EE20 F002          	lfsr	2,2
 30877  005EA2  501D               	movf	__display_itoa_u16@text,w,c
 30878  005EA4  26D9               	addwf	fsr2l,f,c
 30879  005EA6  501E               	movf	__display_itoa_u16@text+1,w,c
 30880  005EA8  22DA               	addwfc	fsr2h,f,c
 30881  005EAA  0E20               	movlw	32
 30882  005EAC  6EDF               	movwf	indf2,c
 30883                           
 30884                           ;display.c: 109: return 2;
 30885  005EAE  0E02               	movlw	2
 30886                           
 30887                           ;display.c: 110: }
 30888  005EB0  0012               	return	
 30889  005EB2                     l1478:
 30890                           
 30891                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 30892  005EB2  EE20 F001          	lfsr	2,1
 30893  005EB6  501D               	movf	__display_itoa_u16@text,w,c
 30894  005EB8  26D9               	addwf	fsr2l,f,c
 30895  005EBA  501E               	movf	__display_itoa_u16@text+1,w,c
 30896  005EBC  22DA               	addwfc	fsr2h,f,c
 30897  005EBE  0E20               	movlw	32
 30898  005EC0  6EDF               	movwf	indf2,c
 30899                           
 30900                           ;display.c: 114: return 1;
 30901  005EC2  0E01               	movlw	1
 30902  005EC4  0012               	return	
 30903  005EC6                     __end_of__display_itoa_u16:
 30904                           	opt stack 0
 30905                           tosu	equ	0xFFF
 30906                           tosh	equ	0xFFE
 30907                           tosl	equ	0xFFD
 30908                           pclath	equ	0xFFA
 30909                           tblptru	equ	0xFF8
 30910                           tblptrh	equ	0xFF7
 30911                           tblptrl	equ	0xFF6
 30912                           tablat	equ	0xFF5
 30913                           prodh	equ	0xFF4
 30914                           prodl	equ	0xFF3
 30915                           intcon	equ	0xFF2
 30916                           intcon2	equ	0xFF1
 30917                           intcon3	equ	0xFF0
 30918                           indf0	equ	0xFEF
 30919                           postinc0	equ	0xFEE
 30920                           fsr0h	equ	0xFEA
 30921                           fsr0l	equ	0xFE9
 30922                           wreg	equ	0xFE8
 30923                           indf1	equ	0xFE7
 30924                           postdec1	equ	0xFE5
 30925                           plusw1	equ	0xFE3
 30926                           fsr1h	equ	0xFE2
 30927                           fsr1l	equ	0xFE1
 30928                           indf2	equ	0xFDF
 30929                           postinc2	equ	0xFDE
 30930                           postdec2	equ	0xFDD
 30931                           plusw2	equ	0xFDB
 30932                           fsr2h	equ	0xFDA
 30933                           fsr2l	equ	0xFD9
 30934                           status	equ	0xFD8
 30935                           
 30936 ;; *************** function _itoa *****************
 30937 ;; Defined at:
 30938 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30939 ;; Parameters:    Size  Location     Type
 30940 ;;  buf             2   16[COMRAM] PTR unsigned char 
 30941 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30942 ;;  val             2   18[COMRAM] int 
 30943 ;;  base            2   20[COMRAM] int 
 30944 ;; Auto vars:     Size  Location     Type
 30945 ;;  cp              2   22[COMRAM] PTR unsigned char 
 30946 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30947 ;; Return value:  Size  Location     Type
 30948 ;;                  2   16[COMRAM] PTR unsigned char 
 30949 ;; Registers used:
 30950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30951 ;; Tracked objects:
 30952 ;;		On entry : 0/0
 30953 ;;		On exit  : 0/0
 30954 ;;		Unchanged: 0/0
 30955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30956 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30959 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30960 ;;Total ram usage:        8 bytes
 30961 ;; Hardware stack levels used:    1
 30962 ;; Hardware stack levels required when called:    2
 30963 ;; This function calls:
 30964 ;;		_utoa
 30965 ;; This function is called by:
 30966 ;;		__display_itoa_u16
 30967 ;;		__display_itoa_u32
 30968 ;;		__display_itoa
 30969 ;; This function uses a non-reentrant model
 30970 ;;
 30971                           
 30972                           	psect	text149
 30973  008062                     __ptext149:
 30974                           	opt stack 0
 30975  008062                     _itoa:
 30976                           	opt stack 22
 30977                           
 30978                           ;incstack = 0
 30979  008062  C011  F017         	movff	itoa@buf,itoa@cp
 30980  008066  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 30981  00806A  AE14               	btfss	itoa@val+1,7,c
 30982  00806C  D00C               	goto	l3595
 30983  00806E  C011  FFD9         	movff	itoa@buf,fsr2l
 30984  008072  C012  FFDA         	movff	itoa@buf+1,fsr2h
 30985  008076  0E2D               	movlw	45
 30986  008078  6EDF               	movwf	indf2,c
 30987  00807A  4A11               	infsnz	itoa@buf,f,c
 30988  00807C  2A12               	incf	itoa@buf+1,f,c
 30989  00807E  6C13               	negf	itoa@val,c
 30990  008080  1E14               	comf	itoa@val+1,f,c
 30991  008082  B0D8               	btfsc	status,0,c
 30992  008084  2A14               	incf	itoa@val+1,f,c
 30993  008086                     l3595:
 30994  008086  C011  F008         	movff	itoa@buf,utoa@buf
 30995  00808A  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 30996  00808E  C013  F00A         	movff	itoa@val,utoa@val
 30997  008092  C014  F00B         	movff	itoa@val+1,utoa@val+1
 30998  008096  C015  F00C         	movff	itoa@base,utoa@base
 30999  00809A  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31000  00809E  ECD1  F032         	call	_utoa	;wreg free
 31001  0080A2  0012               	return	
 31002  0080A4                     __end_of_itoa:
 31003                           	opt stack 0
 31004                           tosu	equ	0xFFF
 31005                           tosh	equ	0xFFE
 31006                           tosl	equ	0xFFD
 31007                           pclath	equ	0xFFA
 31008                           tblptru	equ	0xFF8
 31009                           tblptrh	equ	0xFF7
 31010                           tblptrl	equ	0xFF6
 31011                           tablat	equ	0xFF5
 31012                           prodh	equ	0xFF4
 31013                           prodl	equ	0xFF3
 31014                           intcon	equ	0xFF2
 31015                           intcon2	equ	0xFF1
 31016                           intcon3	equ	0xFF0
 31017                           indf0	equ	0xFEF
 31018                           postinc0	equ	0xFEE
 31019                           fsr0h	equ	0xFEA
 31020                           fsr0l	equ	0xFE9
 31021                           wreg	equ	0xFE8
 31022                           indf1	equ	0xFE7
 31023                           postdec1	equ	0xFE5
 31024                           plusw1	equ	0xFE3
 31025                           fsr1h	equ	0xFE2
 31026                           fsr1l	equ	0xFE1
 31027                           indf2	equ	0xFDF
 31028                           postinc2	equ	0xFDE
 31029                           postdec2	equ	0xFDD
 31030                           plusw2	equ	0xFDB
 31031                           fsr2h	equ	0xFDA
 31032                           fsr2l	equ	0xFD9
 31033                           status	equ	0xFD8
 31034                           
 31035 ;; *************** function _utoa *****************
 31036 ;; Defined at:
 31037 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31038 ;; Parameters:    Size  Location     Type
 31039 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31040 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31041 ;;  val             2    9[COMRAM] unsigned int 
 31042 ;;  base            2   11[COMRAM] int 
 31043 ;; Auto vars:     Size  Location     Type
 31044 ;;  v               2   13[COMRAM] unsigned int 
 31045 ;;  c               1   15[COMRAM] unsigned char 
 31046 ;; Return value:  Size  Location     Type
 31047 ;;                  2    7[COMRAM] PTR unsigned char 
 31048 ;; Registers used:
 31049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31050 ;; Tracked objects:
 31051 ;;		On entry : 0/0
 31052 ;;		On exit  : 0/0
 31053 ;;		Unchanged: 0/0
 31054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31055 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31056 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31058 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31059 ;;Total ram usage:        9 bytes
 31060 ;; Hardware stack levels used:    1
 31061 ;; Hardware stack levels required when called:    1
 31062 ;; This function calls:
 31063 ;;		___lwdiv
 31064 ;;		___lwmod
 31065 ;; This function is called by:
 31066 ;;		_itoa
 31067 ;; This function uses a non-reentrant model
 31068 ;;
 31069                           
 31070                           	psect	text150
 31071  0065A2                     __ptext150:
 31072                           	opt stack 0
 31073  0065A2                     _utoa:
 31074                           	opt stack 22
 31075                           
 31076                           ;incstack = 0
 31077  0065A2  C00A  F00E         	movff	utoa@val,utoa@v
 31078  0065A6  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31079  0065AA  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31080  0065AE  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31081  0065B2  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31082  0065B6  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31083  0065BA  EC53  F03E         	call	___lwdiv	;wreg free
 31084  0065BE  C001  F00E         	movff	?___lwdiv,utoa@v
 31085  0065C2  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31086  0065C6  4A08               	infsnz	utoa@buf,f,c
 31087  0065C8  2A09               	incf	utoa@buf+1,f,c
 31088  0065CA  500E               	movf	utoa@v,w,c
 31089  0065CC  100F               	iorwf	utoa@v+1,w,c
 31090  0065CE  A4D8               	btfss	status,2,c
 31091  0065D0  D7EC               	goto	l3599
 31092  0065D2  C008  FFD9         	movff	utoa@buf,fsr2l
 31093  0065D6  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31094  0065DA  0E00               	movlw	0
 31095  0065DC  6EDF               	movwf	indf2,c
 31096  0065DE  0608               	decf	utoa@buf,f,c
 31097  0065E0  A0D8               	btfss	status,0,c
 31098  0065E2  0609               	decf	utoa@buf+1,f,c
 31099  0065E4  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31100  0065E8  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31101  0065EC  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31102  0065F0  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31103  0065F4  EC52  F040         	call	___lwmod	;wreg free
 31104  0065F8  5001               	movf	?___lwmod,w,c
 31105  0065FA  6E10               	movwf	utoa@c,c
 31106  0065FC  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31107  006600  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31108  006604  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31109  006608  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31110  00660C  EC53  F03E         	call	___lwdiv	;wreg free
 31111  006610  C001  F00A         	movff	?___lwdiv,utoa@val
 31112  006614  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31113  006618  0E09               	movlw	9
 31114  00661A  6410               	cpfsgt	utoa@c,c
 31115  00661C  D002               	goto	l3602
 31116  00661E  0E07               	movlw	7
 31117  006620  2610               	addwf	utoa@c,f,c
 31118  006622                     l3602:
 31119  006622  0E30               	movlw	48
 31120  006624  2610               	addwf	utoa@c,f,c
 31121  006626  C008  FFD9         	movff	utoa@buf,fsr2l
 31122  00662A  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31123  00662E  C010  FFDF         	movff	utoa@c,indf2
 31124  006632  0608               	decf	utoa@buf,f,c
 31125  006634  A0D8               	btfss	status,0,c
 31126  006636  0609               	decf	utoa@buf+1,f,c
 31127  006638  500A               	movf	utoa@val,w,c
 31128  00663A  100B               	iorwf	utoa@val+1,w,c
 31129  00663C  A4D8               	btfss	status,2,c
 31130  00663E  D7D2               	goto	l3601
 31131                           
 31132                           ;	Return value of _utoa is never used
 31133  006640  4A08               	infsnz	utoa@buf,f,c
 31134  006642  2A09               	incf	utoa@buf+1,f,c
 31135  006644  0012               	return	
 31136  006646                     __end_of_utoa:
 31137                           	opt stack 0
 31138                           tosu	equ	0xFFF
 31139                           tosh	equ	0xFFE
 31140                           tosl	equ	0xFFD
 31141                           pclath	equ	0xFFA
 31142                           tblptru	equ	0xFF8
 31143                           tblptrh	equ	0xFF7
 31144                           tblptrl	equ	0xFF6
 31145                           tablat	equ	0xFF5
 31146                           prodh	equ	0xFF4
 31147                           prodl	equ	0xFF3
 31148                           intcon	equ	0xFF2
 31149                           intcon2	equ	0xFF1
 31150                           intcon3	equ	0xFF0
 31151                           indf0	equ	0xFEF
 31152                           postinc0	equ	0xFEE
 31153                           fsr0h	equ	0xFEA
 31154                           fsr0l	equ	0xFE9
 31155                           wreg	equ	0xFE8
 31156                           indf1	equ	0xFE7
 31157                           postdec1	equ	0xFE5
 31158                           plusw1	equ	0xFE3
 31159                           fsr1h	equ	0xFE2
 31160                           fsr1l	equ	0xFE1
 31161                           indf2	equ	0xFDF
 31162                           postinc2	equ	0xFDE
 31163                           postdec2	equ	0xFDD
 31164                           plusw2	equ	0xFDB
 31165                           fsr2h	equ	0xFDA
 31166                           fsr2l	equ	0xFD9
 31167                           status	equ	0xFD8
 31168                           
 31169 ;; *************** function ___lwmod *****************
 31170 ;; Defined at:
 31171 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31172 ;; Parameters:    Size  Location     Type
 31173 ;;  dividend        2    0[COMRAM] unsigned int 
 31174 ;;  divisor         2    2[COMRAM] unsigned int 
 31175 ;; Auto vars:     Size  Location     Type
 31176 ;;  counter         1    4[COMRAM] unsigned char 
 31177 ;; Return value:  Size  Location     Type
 31178 ;;                  2    0[COMRAM] unsigned int 
 31179 ;; Registers used:
 31180 ;;		wreg, status,2, status,0
 31181 ;; Tracked objects:
 31182 ;;		On entry : 0/0
 31183 ;;		On exit  : 0/0
 31184 ;;		Unchanged: 0/0
 31185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31189 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31190 ;;Total ram usage:        5 bytes
 31191 ;; Hardware stack levels used:    1
 31192 ;; This function calls:
 31193 ;;		Nothing
 31194 ;; This function is called by:
 31195 ;;		_utoa
 31196 ;; This function uses a non-reentrant model
 31197 ;;
 31198                           
 31199                           	psect	text151
 31200  0080A4                     __ptext151:
 31201                           	opt stack 0
 31202  0080A4                     ___lwmod:
 31203                           	opt stack 22
 31204                           
 31205                           ;incstack = 0
 31206  0080A4  5003               	movf	___lwmod@divisor,w,c
 31207  0080A6  1004               	iorwf	___lwmod@divisor+1,w,c
 31208  0080A8  B4D8               	btfsc	status,2,c
 31209  0080AA  D018               	goto	l3426
 31210  0080AC  0E01               	movlw	1
 31211  0080AE  6E05               	movwf	___lwmod@counter,c
 31212  0080B0  D004               	goto	l3421
 31213  0080B2  90D8               	bcf	status,0,c
 31214  0080B4  3603               	rlcf	___lwmod@divisor,f,c
 31215  0080B6  3604               	rlcf	___lwmod@divisor+1,f,c
 31216  0080B8  2A05               	incf	___lwmod@counter,f,c
 31217  0080BA                     l3421:
 31218  0080BA  AE04               	btfss	___lwmod@divisor+1,7,c
 31219  0080BC  D7FA               	goto	l3422
 31220  0080BE                     u6570:
 31221  0080BE  5003               	movf	___lwmod@divisor,w,c
 31222  0080C0  5C01               	subwf	___lwmod@dividend,w,c
 31223  0080C2  5004               	movf	___lwmod@divisor+1,w,c
 31224  0080C4  5802               	subwfb	___lwmod@dividend+1,w,c
 31225  0080C6  A0D8               	btfss	status,0,c
 31226  0080C8  D004               	goto	l3425
 31227  0080CA  5003               	movf	___lwmod@divisor,w,c
 31228  0080CC  5E01               	subwf	___lwmod@dividend,f,c
 31229  0080CE  5004               	movf	___lwmod@divisor+1,w,c
 31230  0080D0  5A02               	subwfb	___lwmod@dividend+1,f,c
 31231  0080D2                     l3425:
 31232  0080D2  90D8               	bcf	status,0,c
 31233  0080D4  3204               	rrcf	___lwmod@divisor+1,f,c
 31234  0080D6  3203               	rrcf	___lwmod@divisor,f,c
 31235  0080D8  2E05               	decfsz	___lwmod@counter,f,c
 31236  0080DA  D7F1               	goto	u6570
 31237  0080DC                     l3426:
 31238  0080DC  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31239  0080E0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31240  0080E4  0012               	return		;funcret
 31241  0080E6                     __end_of___lwmod:
 31242                           	opt stack 0
 31243                           tosu	equ	0xFFF
 31244                           tosh	equ	0xFFE
 31245                           tosl	equ	0xFFD
 31246                           pclath	equ	0xFFA
 31247                           tblptru	equ	0xFF8
 31248                           tblptrh	equ	0xFF7
 31249                           tblptrl	equ	0xFF6
 31250                           tablat	equ	0xFF5
 31251                           prodh	equ	0xFF4
 31252                           prodl	equ	0xFF3
 31253                           intcon	equ	0xFF2
 31254                           intcon2	equ	0xFF1
 31255                           intcon3	equ	0xFF0
 31256                           indf0	equ	0xFEF
 31257                           postinc0	equ	0xFEE
 31258                           fsr0h	equ	0xFEA
 31259                           fsr0l	equ	0xFE9
 31260                           wreg	equ	0xFE8
 31261                           indf1	equ	0xFE7
 31262                           postdec1	equ	0xFE5
 31263                           plusw1	equ	0xFE3
 31264                           fsr1h	equ	0xFE2
 31265                           fsr1l	equ	0xFE1
 31266                           indf2	equ	0xFDF
 31267                           postinc2	equ	0xFDE
 31268                           postdec2	equ	0xFDD
 31269                           plusw2	equ	0xFDB
 31270                           fsr2h	equ	0xFDA
 31271                           fsr2l	equ	0xFD9
 31272                           status	equ	0xFD8
 31273                           
 31274 ;; *************** function ___lwdiv *****************
 31275 ;; Defined at:
 31276 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31277 ;; Parameters:    Size  Location     Type
 31278 ;;  dividend        2    0[COMRAM] unsigned int 
 31279 ;;  divisor         2    2[COMRAM] unsigned int 
 31280 ;; Auto vars:     Size  Location     Type
 31281 ;;  quotient        2    4[COMRAM] unsigned int 
 31282 ;;  counter         1    6[COMRAM] unsigned char 
 31283 ;; Return value:  Size  Location     Type
 31284 ;;                  2    0[COMRAM] unsigned int 
 31285 ;; Registers used:
 31286 ;;		wreg, status,2, status,0
 31287 ;; Tracked objects:
 31288 ;;		On entry : 0/0
 31289 ;;		On exit  : 0/0
 31290 ;;		Unchanged: 0/0
 31291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31293 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31295 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31296 ;;Total ram usage:        7 bytes
 31297 ;; Hardware stack levels used:    1
 31298 ;; This function calls:
 31299 ;;		Nothing
 31300 ;; This function is called by:
 31301 ;;		_utoa
 31302 ;; This function uses a non-reentrant model
 31303 ;;
 31304                           
 31305                           	psect	text152
 31306  007CA6                     __ptext152:
 31307                           	opt stack 0
 31308  007CA6                     ___lwdiv:
 31309                           	opt stack 22
 31310                           
 31311                           ;incstack = 0
 31312  007CA6  0E00               	movlw	0
 31313  007CA8  6E06               	movwf	___lwdiv@quotient+1,c
 31314  007CAA  0E00               	movlw	0
 31315  007CAC  6E05               	movwf	___lwdiv@quotient,c
 31316  007CAE  5003               	movf	___lwdiv@divisor,w,c
 31317  007CB0  1004               	iorwf	___lwdiv@divisor+1,w,c
 31318  007CB2  B4D8               	btfsc	status,2,c
 31319  007CB4  D01C               	goto	l3416
 31320  007CB6  0E01               	movlw	1
 31321  007CB8  6E07               	movwf	___lwdiv@counter,c
 31322  007CBA  D004               	goto	l3411
 31323  007CBC  90D8               	bcf	status,0,c
 31324  007CBE  3603               	rlcf	___lwdiv@divisor,f,c
 31325  007CC0  3604               	rlcf	___lwdiv@divisor+1,f,c
 31326  007CC2  2A07               	incf	___lwdiv@counter,f,c
 31327  007CC4                     l3411:
 31328  007CC4  AE04               	btfss	___lwdiv@divisor+1,7,c
 31329  007CC6  D7FA               	goto	l3412
 31330  007CC8                     u6540:
 31331  007CC8  90D8               	bcf	status,0,c
 31332  007CCA  3605               	rlcf	___lwdiv@quotient,f,c
 31333  007CCC  3606               	rlcf	___lwdiv@quotient+1,f,c
 31334  007CCE  5003               	movf	___lwdiv@divisor,w,c
 31335  007CD0  5C01               	subwf	___lwdiv@dividend,w,c
 31336  007CD2  5004               	movf	___lwdiv@divisor+1,w,c
 31337  007CD4  5802               	subwfb	___lwdiv@dividend+1,w,c
 31338  007CD6  A0D8               	btfss	status,0,c
 31339  007CD8  D005               	goto	l3415
 31340  007CDA  5003               	movf	___lwdiv@divisor,w,c
 31341  007CDC  5E01               	subwf	___lwdiv@dividend,f,c
 31342  007CDE  5004               	movf	___lwdiv@divisor+1,w,c
 31343  007CE0  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31344  007CE2  8005               	bsf	___lwdiv@quotient,0,c
 31345  007CE4                     l3415:
 31346  007CE4  90D8               	bcf	status,0,c
 31347  007CE6  3204               	rrcf	___lwdiv@divisor+1,f,c
 31348  007CE8  3203               	rrcf	___lwdiv@divisor,f,c
 31349  007CEA  2E07               	decfsz	___lwdiv@counter,f,c
 31350  007CEC  D7ED               	goto	u6540
 31351  007CEE                     l3416:
 31352  007CEE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31353  007CF2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31354  007CF6  0012               	return		;funcret
 31355  007CF8                     __end_of___lwdiv:
 31356                           	opt stack 0
 31357                           tosu	equ	0xFFF
 31358                           tosh	equ	0xFFE
 31359                           tosl	equ	0xFFD
 31360                           pclath	equ	0xFFA
 31361                           tblptru	equ	0xFF8
 31362                           tblptrh	equ	0xFF7
 31363                           tblptrl	equ	0xFF6
 31364                           tablat	equ	0xFF5
 31365                           prodh	equ	0xFF4
 31366                           prodl	equ	0xFF3
 31367                           intcon	equ	0xFF2
 31368                           intcon2	equ	0xFF1
 31369                           intcon3	equ	0xFF0
 31370                           indf0	equ	0xFEF
 31371                           postinc0	equ	0xFEE
 31372                           fsr0h	equ	0xFEA
 31373                           fsr0l	equ	0xFE9
 31374                           wreg	equ	0xFE8
 31375                           indf1	equ	0xFE7
 31376                           postdec1	equ	0xFE5
 31377                           plusw1	equ	0xFE3
 31378                           fsr1h	equ	0xFE2
 31379                           fsr1l	equ	0xFE1
 31380                           indf2	equ	0xFDF
 31381                           postinc2	equ	0xFDE
 31382                           postdec2	equ	0xFDD
 31383                           plusw2	equ	0xFDB
 31384                           fsr2h	equ	0xFDA
 31385                           fsr2l	equ	0xFD9
 31386                           status	equ	0xFD8
 31387                           
 31388 ;; *************** function _i2c_eeprom_writeByte *****************
 31389 ;; Defined at:
 31390 ;;		line 352 in file "i2c.c"
 31391 ;; Parameters:    Size  Location     Type
 31392 ;;  address         2   10[COMRAM] unsigned int 
 31393 ;;  data            1   12[COMRAM] unsigned char 
 31394 ;; Auto vars:     Size  Location     Type
 31395 ;;  dat             2   16[COMRAM] unsigned char [2]
 31396 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31397 ;; Return value:  Size  Location     Type
 31398 ;;                  1    wreg      void 
 31399 ;; Registers used:
 31400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31401 ;; Tracked objects:
 31402 ;;		On entry : 0/0
 31403 ;;		On exit  : 0/0
 31404 ;;		Unchanged: 0/0
 31405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31406 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31407 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31408 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31409 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31410 ;;Total ram usage:        9 bytes
 31411 ;; Hardware stack levels used:    1
 31412 ;; Hardware stack levels required when called:    2
 31413 ;; This function calls:
 31414 ;;		__i2c_write
 31415 ;;		_i2c_set_frequency
 31416 ;; This function is called by:
 31417 ;;		__normal_mode
 31418 ;;		__ui_encoder
 31419 ;;		__parse_command_short
 31420 ;; This function uses a non-reentrant model
 31421 ;;
 31422                           
 31423                           	psect	text153
 31424  0080E6                     __ptext153:
 31425                           	opt stack 0
 31426  0080E6                     _i2c_eeprom_writeByte:
 31427                           	opt stack 26
 31428                           
 31429                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31430                           
 31431                           ;incstack = 0
 31432  0080E6  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31433  0080EA  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31434  0080EE  0E07               	movlw	7
 31435  0080F0  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31436  0080F2                     u10425:
 31437  0080F2  90D8               	bcf	status,0,c
 31438  0080F4  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31439  0080F6  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31440  0080F8  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31441  0080FA  D7FB               	goto	u10425
 31442  0080FC  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31443  0080FE  0B0E               	andlw	14
 31444  008100  09A0               	iorlw	160
 31445  008102  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31446                           
 31447                           ;i2c.c: 358: dat[0] = address & 0xFF;
 31448  008104  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31449                           
 31450                           ;i2c.c: 359: dat[1] = data;
 31451  008108  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31452                           
 31453                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31454  00810C  0E02               	movlw	2
 31455  00810E  ECB5  F042         	call	_i2c_set_frequency
 31456                           
 31457                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 31458  008112  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31459  008114  6E06               	movwf	__i2c_write@data,c
 31460  008116  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31461  008118  6E07               	movwf	__i2c_write@data+1,c
 31462  00811A  0E02               	movlw	2
 31463  00811C  6E08               	movwf	__i2c_write@length,c
 31464  00811E  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31465  008120  EC3F  F03F         	call	__i2c_write
 31466  008124  0012               	return		;funcret
 31467  008126                     __end_of_i2c_eeprom_writeByte:
 31468                           	opt stack 0
 31469                           tosu	equ	0xFFF
 31470                           tosh	equ	0xFFE
 31471                           tosl	equ	0xFFD
 31472                           pclath	equ	0xFFA
 31473                           tblptru	equ	0xFF8
 31474                           tblptrh	equ	0xFF7
 31475                           tblptrl	equ	0xFF6
 31476                           tablat	equ	0xFF5
 31477                           prodh	equ	0xFF4
 31478                           prodl	equ	0xFF3
 31479                           intcon	equ	0xFF2
 31480                           intcon2	equ	0xFF1
 31481                           intcon3	equ	0xFF0
 31482                           indf0	equ	0xFEF
 31483                           postinc0	equ	0xFEE
 31484                           fsr0h	equ	0xFEA
 31485                           fsr0l	equ	0xFE9
 31486                           wreg	equ	0xFE8
 31487                           indf1	equ	0xFE7
 31488                           postdec1	equ	0xFE5
 31489                           plusw1	equ	0xFE3
 31490                           fsr1h	equ	0xFE2
 31491                           fsr1l	equ	0xFE1
 31492                           indf2	equ	0xFDF
 31493                           postinc2	equ	0xFDE
 31494                           postdec2	equ	0xFDD
 31495                           plusw2	equ	0xFDB
 31496                           fsr2h	equ	0xFDA
 31497                           fsr2l	equ	0xFD9
 31498                           status	equ	0xFD8
 31499                           
 31500 ;; *************** function _i2c_set_frequency *****************
 31501 ;; Defined at:
 31502 ;;		line 123 in file "i2c.c"
 31503 ;; Parameters:    Size  Location     Type
 31504 ;;  frequency       1    wreg     enum E6622
 31505 ;; Auto vars:     Size  Location     Type
 31506 ;;  frequency       1    0[COMRAM] enum E6622
 31507 ;; Return value:  Size  Location     Type
 31508 ;;                  1    wreg      void 
 31509 ;; Registers used:
 31510 ;;		wreg, status,2, status,0
 31511 ;; Tracked objects:
 31512 ;;		On entry : 0/0
 31513 ;;		On exit  : 0/0
 31514 ;;		Unchanged: 0/0
 31515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31520 ;;Total ram usage:        1 bytes
 31521 ;; Hardware stack levels used:    1
 31522 ;; This function calls:
 31523 ;;		Nothing
 31524 ;; This function is called by:
 31525 ;;		_i2c_init
 31526 ;;		__ic2_display_set_address
 31527 ;;		_i2c_display_send_init_sequence
 31528 ;;		_i2c_display_cursor
 31529 ;;		_i2c_display_write_fixed
 31530 ;;		_i2c_digipot_reset_on
 31531 ;;		_i2c_digipot_reset_off
 31532 ;;		_i2c_digipot_backlight
 31533 ;;		_i2c_eeprom_writeByte
 31534 ;;		_i2c_eeprom_readByte
 31535 ;;		_i2c_display_write
 31536 ;;		_i2c_eeprom_write
 31537 ;;		_i2c_eeprom_read
 31538 ;; This function uses a non-reentrant model
 31539 ;;
 31540                           
 31541                           	psect	text154
 31542  00856A                     __ptext154:
 31543                           	opt stack 0
 31544  00856A                     _i2c_set_frequency:
 31545                           	opt stack 28
 31546                           
 31547                           ;incstack = 0
 31548                           ;i2c_set_frequency@frequency stored from wreg
 31549  00856A  6E01               	movwf	i2c_set_frequency@frequency,c
 31550                           
 31551                           ;i2c.c: 125: switch(frequency)
 31552  00856C  D007               	goto	l1195
 31553  00856E                     
 31554                           ;i2c.c: 128: SSP1ADD = 119;
 31555  00856E  0E77               	movlw	119
 31556  008570  D003               	goto	L34
 31557  008572                     
 31558                           ;i2c.c: 131: SSP1ADD = 59;
 31559  008572  0E3B               	movlw	59
 31560  008574  D001               	goto	L34
 31561  008576                     
 31562                           ;i2c.c: 134: SSP1ADD = 29;
 31563  008576  0E1D               	movlw	29
 31564  008578                     L34:
 31565  008578  6EC8               	movwf	4040,c	;volatile
 31566                           
 31567                           ;i2c.c: 136: }
 31568                           
 31569                           ;i2c.c: 135: break;
 31570  00857A  D00A               	goto	l1197
 31571  00857C                     l1195:
 31572  00857C  5001               	movf	i2c_set_frequency@frequency,w,c
 31573                           
 31574                           ; Switch size 1, requested type "space"
 31575                           ; Number of cases is 3, Range of values is 0 to 2
 31576                           ; switch strategies available:
 31577                           ; Name         Instructions Cycles
 31578                           ; simple_byte           10     6 (average)
 31579                           ;	Chosen strategy is simple_byte
 31580  00857E  0A00               	xorlw	0	; case 0
 31581  008580  B4D8               	btfsc	status,2,c
 31582  008582  D7F5               	goto	l1196
 31583  008584  0A01               	xorlw	1	; case 1
 31584  008586  B4D8               	btfsc	status,2,c
 31585  008588  D7F4               	goto	l1198
 31586  00858A  0A03               	xorlw	3	; case 2
 31587  00858C  B4D8               	btfsc	status,2,c
 31588  00858E  D7F3               	goto	l1199
 31589  008590                     l1197:
 31590                           
 31591                           ;i2c.c: 138: i2c_frequency = frequency;
 31592  008590  C001  F18D         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31593  008594  0012               	return		;funcret
 31594  008596                     __end_of_i2c_set_frequency:
 31595                           	opt stack 0
 31596                           tosu	equ	0xFFF
 31597                           tosh	equ	0xFFE
 31598                           tosl	equ	0xFFD
 31599                           pclath	equ	0xFFA
 31600                           tblptru	equ	0xFF8
 31601                           tblptrh	equ	0xFF7
 31602                           tblptrl	equ	0xFF6
 31603                           tablat	equ	0xFF5
 31604                           prodh	equ	0xFF4
 31605                           prodl	equ	0xFF3
 31606                           intcon	equ	0xFF2
 31607                           intcon2	equ	0xFF1
 31608                           intcon3	equ	0xFF0
 31609                           indf0	equ	0xFEF
 31610                           postinc0	equ	0xFEE
 31611                           fsr0h	equ	0xFEA
 31612                           fsr0l	equ	0xFE9
 31613                           wreg	equ	0xFE8
 31614                           indf1	equ	0xFE7
 31615                           postdec1	equ	0xFE5
 31616                           plusw1	equ	0xFE3
 31617                           fsr1h	equ	0xFE2
 31618                           fsr1l	equ	0xFE1
 31619                           indf2	equ	0xFDF
 31620                           postinc2	equ	0xFDE
 31621                           postdec2	equ	0xFDD
 31622                           plusw2	equ	0xFDB
 31623                           fsr2h	equ	0xFDA
 31624                           fsr2l	equ	0xFD9
 31625                           status	equ	0xFD8
 31626                           
 31627 ;; *************** function __i2c_write *****************
 31628 ;; Defined at:
 31629 ;;		line 142 in file "i2c.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;  slave_addres    1    wreg     unsigned char 
 31632 ;;  data            2    5[COMRAM] PTR unsigned char 
 31633 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31634 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 31635 ;;		 -> _ic2_display_set_address@data_array(2), 
 31636 ;;  length          1    7[COMRAM] unsigned char 
 31637 ;; Auto vars:     Size  Location     Type
 31638 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31639 ;;  cntr            1    9[COMRAM] unsigned char 
 31640 ;; Return value:  Size  Location     Type
 31641 ;;                  1    wreg      void 
 31642 ;; Registers used:
 31643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31644 ;; Tracked objects:
 31645 ;;		On entry : 0/0
 31646 ;;		On exit  : 0/0
 31647 ;;		Unchanged: 0/0
 31648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31649 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31652 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31653 ;;Total ram usage:        5 bytes
 31654 ;; Hardware stack levels used:    1
 31655 ;; Hardware stack levels required when called:    1
 31656 ;; This function calls:
 31657 ;;		__i2c_send
 31658 ;;		__i2c_start
 31659 ;;		__i2c_stop
 31660 ;;		__i2c_wait_idle
 31661 ;; This function is called by:
 31662 ;;		__ic2_display_set_address
 31663 ;;		_i2c_display_send_init_sequence
 31664 ;;		_i2c_digipot_reset_on
 31665 ;;		_i2c_digipot_reset_off
 31666 ;;		_i2c_digipot_backlight
 31667 ;;		_i2c_eeprom_writeByte
 31668 ;;		_i2c_eeprom_readByte
 31669 ;;		_i2c_eeprom_write
 31670 ;;		_i2c_eeprom_read
 31671 ;; This function uses a non-reentrant model
 31672 ;;
 31673                           
 31674                           	psect	text155
 31675  007E7E                     __ptext155:
 31676                           	opt stack 0
 31677  007E7E                     __i2c_write:
 31678                           	opt stack 27
 31679                           
 31680                           ;incstack = 0
 31681                           ;__i2c_write@slave_address stored from wreg
 31682  007E7E  6E09               	movwf	__i2c_write@slave_address,c
 31683                           
 31684                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 31685  007E80  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 31686                           
 31687                           ;i2c.c: 147: _i2c_start();
 31688  007E84  EC32  F045         	call	__i2c_start	;wreg free
 31689                           
 31690                           ;i2c.c: 148: _i2c_wait_idle();
 31691  007E88  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 31692                           
 31693                           ;i2c.c: 149: _i2c_send(slave_address);
 31694  007E8C  5009               	movf	__i2c_write@slave_address,w,c
 31695  007E8E  EC36  F045         	call	__i2c_send
 31696                           
 31697                           ;i2c.c: 150: _i2c_wait_idle();
 31698  007E92  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 31699                           
 31700                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 31701  007E96  0E00               	movlw	0
 31702  007E98  6E0A               	movwf	__i2c_write@cntr,c
 31703  007E9A  D00E               	goto	l1203
 31704  007E9C                     
 31705                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 31706  007E9C  500A               	movf	__i2c_write@cntr,w,c
 31707  007E9E  0D01               	mullw	1
 31708  007EA0  50F3               	movf	prodl,w,c
 31709  007EA2  2406               	addwf	__i2c_write@data,w,c
 31710  007EA4  6ED9               	movwf	fsr2l,c
 31711  007EA6  50F4               	movf	prodh,w,c
 31712  007EA8  2007               	addwfc	__i2c_write@data+1,w,c
 31713  007EAA  6EDA               	movwf	fsr2h,c
 31714  007EAC  50DF               	movf	indf2,w,c
 31715  007EAE  EC36  F045         	call	__i2c_send
 31716                           
 31717                           ;i2c.c: 155: _i2c_wait_idle();
 31718  007EB2  EC20  F03C         	call	__i2c_wait_idle	;wreg free
 31719  007EB6  2A0A               	incf	__i2c_write@cntr,f,c
 31720  007EB8                     l1203:
 31721  007EB8  5008               	movf	__i2c_write@length,w,c
 31722  007EBA  5C0A               	subwf	__i2c_write@cntr,w,c
 31723  007EBC  A0D8               	btfss	status,0,c
 31724  007EBE  D7EE               	goto	l1204
 31725                           
 31726                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 31727  007EC0  EC2E  F045         	call	__i2c_stop	;wreg free
 31728  007EC4  0012               	return		;funcret
 31729  007EC6                     __end_of__i2c_write:
 31730                           	opt stack 0
 31731                           tosu	equ	0xFFF
 31732                           tosh	equ	0xFFE
 31733                           tosl	equ	0xFFD
 31734                           pclath	equ	0xFFA
 31735                           tblptru	equ	0xFF8
 31736                           tblptrh	equ	0xFF7
 31737                           tblptrl	equ	0xFF6
 31738                           tablat	equ	0xFF5
 31739                           prodh	equ	0xFF4
 31740                           prodl	equ	0xFF3
 31741                           intcon	equ	0xFF2
 31742                           intcon2	equ	0xFF1
 31743                           intcon3	equ	0xFF0
 31744                           indf0	equ	0xFEF
 31745                           postinc0	equ	0xFEE
 31746                           fsr0h	equ	0xFEA
 31747                           fsr0l	equ	0xFE9
 31748                           wreg	equ	0xFE8
 31749                           indf1	equ	0xFE7
 31750                           postdec1	equ	0xFE5
 31751                           plusw1	equ	0xFE3
 31752                           fsr1h	equ	0xFE2
 31753                           fsr1l	equ	0xFE1
 31754                           indf2	equ	0xFDF
 31755                           postinc2	equ	0xFDE
 31756                           postdec2	equ	0xFDD
 31757                           plusw2	equ	0xFDB
 31758                           fsr2h	equ	0xFDA
 31759                           fsr2l	equ	0xFD9
 31760                           status	equ	0xFD8
 31761                           
 31762 ;; *************** function __i2c_wait_idle *****************
 31763 ;; Defined at:
 31764 ;;		line 48 in file "i2c.c"
 31765 ;; Parameters:    Size  Location     Type
 31766 ;;		None
 31767 ;; Auto vars:     Size  Location     Type
 31768 ;;		None
 31769 ;; Return value:  Size  Location     Type
 31770 ;;                  1    wreg      void 
 31771 ;; Registers used:
 31772 ;;		wreg, status,2, status,0
 31773 ;; Tracked objects:
 31774 ;;		On entry : 0/0
 31775 ;;		On exit  : 0/0
 31776 ;;		Unchanged: 0/0
 31777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31780 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31782 ;;Total ram usage:        5 bytes
 31783 ;; Hardware stack levels used:    1
 31784 ;; This function calls:
 31785 ;;		Nothing
 31786 ;; This function is called by:
 31787 ;;		__i2c_write
 31788 ;;		__i2c_read
 31789 ;;		_i2c_display_write_fixed
 31790 ;;		_i2c_display_write
 31791 ;; This function uses a non-reentrant model
 31792 ;;
 31793                           
 31794                           	psect	text156
 31795  007840                     __ptext156:
 31796                           	opt stack 0
 31797  007840                     __i2c_wait_idle:
 31798                           	opt stack 27
 31799                           
 31800                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31801                           
 31802                           ;incstack = 0
 31803  007840  A4C7               	btfss	4039,2,c	;volatile
 31804  007842  D003               	goto	u6720
 31805  007844  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31806  007846  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31807  007848  D001               	goto	u6728
 31808  00784A                     u6720:
 31809  00784A  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31810  00784C                     u6728:
 31811  00784C  A0C5               	btfss	4037,0,c	;volatile
 31812  00784E  D003               	goto	u6730
 31813  007850  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31814  007852  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31815  007854  D001               	goto	u6738
 31816  007856                     u6730:
 31817  007856  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31818  007858                     u6738:
 31819  007858  A2C5               	btfss	4037,1,c	;volatile
 31820  00785A  D003               	goto	u6740
 31821  00785C  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31822  00785E  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31823  007860  D001               	goto	u6748
 31824  007862                     u6740:
 31825  007862  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31826  007864                     u6748:
 31827  007864  A4C5               	btfss	4037,2,c	;volatile
 31828  007866  D003               	goto	u6750
 31829  007868  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31830  00786A  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31831  00786C  D001               	goto	u6758
 31832  00786E                     u6750:
 31833  00786E  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31834  007870                     u6758:
 31835  007870  A6C5               	btfss	4037,3,c	;volatile
 31836  007872  D003               	goto	u6760
 31837  007874  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31838  007876  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31839  007878  D001               	goto	u6768
 31840  00787A                     u6760:
 31841  00787A  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31842  00787C                     u6768:
 31843  00787C  A8C5               	btfss	4037,4,c	;volatile
 31844  00787E  D002               	goto	u6770
 31845  007880  0E01               	movlw	1
 31846  007882  D001               	goto	u6776
 31847  007884                     u6770:
 31848  007884  0E00               	movlw	0
 31849  007886                     u6776:
 31850  007886  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31851  007888  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31852  00788A  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31853  00788C  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31854  00788E  1001               	iorwf	??__i2c_wait_idle,w,c
 31855  007890  0900               	iorlw	0
 31856  007892  B4D8               	btfsc	status,2,c
 31857  007894  0012               	return	
 31858  007896  D7D4               	goto	__i2c_wait_idle
 31859  007898                     __end_of__i2c_wait_idle:
 31860                           	opt stack 0
 31861                           tosu	equ	0xFFF
 31862                           tosh	equ	0xFFE
 31863                           tosl	equ	0xFFD
 31864                           pclath	equ	0xFFA
 31865                           tblptru	equ	0xFF8
 31866                           tblptrh	equ	0xFF7
 31867                           tblptrl	equ	0xFF6
 31868                           tablat	equ	0xFF5
 31869                           prodh	equ	0xFF4
 31870                           prodl	equ	0xFF3
 31871                           intcon	equ	0xFF2
 31872                           intcon2	equ	0xFF1
 31873                           intcon3	equ	0xFF0
 31874                           indf0	equ	0xFEF
 31875                           postinc0	equ	0xFEE
 31876                           fsr0h	equ	0xFEA
 31877                           fsr0l	equ	0xFE9
 31878                           wreg	equ	0xFE8
 31879                           indf1	equ	0xFE7
 31880                           postdec1	equ	0xFE5
 31881                           plusw1	equ	0xFE3
 31882                           fsr1h	equ	0xFE2
 31883                           fsr1l	equ	0xFE1
 31884                           indf2	equ	0xFDF
 31885                           postinc2	equ	0xFDE
 31886                           postdec2	equ	0xFDD
 31887                           plusw2	equ	0xFDB
 31888                           fsr2h	equ	0xFDA
 31889                           fsr2l	equ	0xFD9
 31890                           status	equ	0xFD8
 31891                           
 31892 ;; *************** function __i2c_stop *****************
 31893 ;; Defined at:
 31894 ;;		line 75 in file "i2c.c"
 31895 ;; Parameters:    Size  Location     Type
 31896 ;;		None
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;		None
 31899 ;; Return value:  Size  Location     Type
 31900 ;;                  1    wreg      void 
 31901 ;; Registers used:
 31902 ;;		None
 31903 ;; Tracked objects:
 31904 ;;		On entry : 0/0
 31905 ;;		On exit  : 0/0
 31906 ;;		Unchanged: 0/0
 31907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31912 ;;Total ram usage:        0 bytes
 31913 ;; Hardware stack levels used:    1
 31914 ;; This function calls:
 31915 ;;		Nothing
 31916 ;; This function is called by:
 31917 ;;		__i2c_write
 31918 ;;		__i2c_read
 31919 ;;		_i2c_display_write_fixed
 31920 ;;		_i2c_display_write
 31921 ;; This function uses a non-reentrant model
 31922 ;;
 31923                           
 31924                           	psect	text157
 31925  008A5C                     __ptext157:
 31926                           	opt stack 0
 31927  008A5C                     __i2c_stop:
 31928                           	opt stack 27
 31929                           
 31930                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 31931                           
 31932                           ;incstack = 0
 31933  008A5C  84C5               	bsf	4037,2,c	;volatile
 31934  008A5E  A4C5               	btfss	4037,2,c	;volatile
 31935  008A60  0012               	return	
 31936  008A62  D7FD               	goto	l1169
 31937  008A64                     __end_of__i2c_stop:
 31938                           	opt stack 0
 31939                           tosu	equ	0xFFF
 31940                           tosh	equ	0xFFE
 31941                           tosl	equ	0xFFD
 31942                           pclath	equ	0xFFA
 31943                           tblptru	equ	0xFF8
 31944                           tblptrh	equ	0xFF7
 31945                           tblptrl	equ	0xFF6
 31946                           tablat	equ	0xFF5
 31947                           prodh	equ	0xFF4
 31948                           prodl	equ	0xFF3
 31949                           intcon	equ	0xFF2
 31950                           intcon2	equ	0xFF1
 31951                           intcon3	equ	0xFF0
 31952                           indf0	equ	0xFEF
 31953                           postinc0	equ	0xFEE
 31954                           fsr0h	equ	0xFEA
 31955                           fsr0l	equ	0xFE9
 31956                           wreg	equ	0xFE8
 31957                           indf1	equ	0xFE7
 31958                           postdec1	equ	0xFE5
 31959                           plusw1	equ	0xFE3
 31960                           fsr1h	equ	0xFE2
 31961                           fsr1l	equ	0xFE1
 31962                           indf2	equ	0xFDF
 31963                           postinc2	equ	0xFDE
 31964                           postdec2	equ	0xFDD
 31965                           plusw2	equ	0xFDB
 31966                           fsr2h	equ	0xFDA
 31967                           fsr2l	equ	0xFD9
 31968                           status	equ	0xFD8
 31969                           
 31970 ;; *************** function __i2c_start *****************
 31971 ;; Defined at:
 31972 ;;		line 54 in file "i2c.c"
 31973 ;; Parameters:    Size  Location     Type
 31974 ;;		None
 31975 ;; Auto vars:     Size  Location     Type
 31976 ;;		None
 31977 ;; Return value:  Size  Location     Type
 31978 ;;                  1    wreg      void 
 31979 ;; Registers used:
 31980 ;;		None
 31981 ;; Tracked objects:
 31982 ;;		On entry : 0/0
 31983 ;;		On exit  : 0/0
 31984 ;;		Unchanged: 0/0
 31985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31990 ;;Total ram usage:        0 bytes
 31991 ;; Hardware stack levels used:    1
 31992 ;; This function calls:
 31993 ;;		Nothing
 31994 ;; This function is called by:
 31995 ;;		__i2c_write
 31996 ;;		__i2c_read
 31997 ;;		_i2c_display_write_fixed
 31998 ;;		_i2c_display_write
 31999 ;; This function uses a non-reentrant model
 32000 ;;
 32001                           
 32002                           	psect	text158
 32003  008A64                     __ptext158:
 32004                           	opt stack 0
 32005  008A64                     __i2c_start:
 32006                           	opt stack 27
 32007                           
 32008                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32009                           
 32010                           ;incstack = 0
 32011  008A64  80C5               	bsf	4037,0,c	;volatile
 32012  008A66  A0C5               	btfss	4037,0,c	;volatile
 32013  008A68  0012               	return	
 32014  008A6A  D7FD               	goto	l1154
 32015  008A6C                     __end_of__i2c_start:
 32016                           	opt stack 0
 32017                           tosu	equ	0xFFF
 32018                           tosh	equ	0xFFE
 32019                           tosl	equ	0xFFD
 32020                           pclath	equ	0xFFA
 32021                           tblptru	equ	0xFF8
 32022                           tblptrh	equ	0xFF7
 32023                           tblptrl	equ	0xFF6
 32024                           tablat	equ	0xFF5
 32025                           prodh	equ	0xFF4
 32026                           prodl	equ	0xFF3
 32027                           intcon	equ	0xFF2
 32028                           intcon2	equ	0xFF1
 32029                           intcon3	equ	0xFF0
 32030                           indf0	equ	0xFEF
 32031                           postinc0	equ	0xFEE
 32032                           fsr0h	equ	0xFEA
 32033                           fsr0l	equ	0xFE9
 32034                           wreg	equ	0xFE8
 32035                           indf1	equ	0xFE7
 32036                           postdec1	equ	0xFE5
 32037                           plusw1	equ	0xFE3
 32038                           fsr1h	equ	0xFE2
 32039                           fsr1l	equ	0xFE1
 32040                           indf2	equ	0xFDF
 32041                           postinc2	equ	0xFDE
 32042                           postdec2	equ	0xFDD
 32043                           plusw2	equ	0xFDB
 32044                           fsr2h	equ	0xFDA
 32045                           fsr2l	equ	0xFD9
 32046                           status	equ	0xFD8
 32047                           
 32048 ;; *************** function __i2c_send *****************
 32049 ;; Defined at:
 32050 ;;		line 61 in file "i2c.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;  dat             1    wreg     unsigned char 
 32053 ;; Auto vars:     Size  Location     Type
 32054 ;;  dat             1    0[COMRAM] unsigned char 
 32055 ;; Return value:  Size  Location     Type
 32056 ;;                  1    wreg      void 
 32057 ;; Registers used:
 32058 ;;		wreg
 32059 ;; Tracked objects:
 32060 ;;		On entry : 0/0
 32061 ;;		On exit  : 0/0
 32062 ;;		Unchanged: 0/0
 32063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32068 ;;Total ram usage:        1 bytes
 32069 ;; Hardware stack levels used:    1
 32070 ;; This function calls:
 32071 ;;		Nothing
 32072 ;; This function is called by:
 32073 ;;		__i2c_write
 32074 ;;		__i2c_read
 32075 ;;		_i2c_display_write_fixed
 32076 ;;		_i2c_display_write
 32077 ;; This function uses a non-reentrant model
 32078 ;;
 32079                           
 32080                           	psect	text159
 32081  008A6C                     __ptext159:
 32082                           	opt stack 0
 32083  008A6C                     __i2c_send:
 32084                           	opt stack 27
 32085                           
 32086                           ;incstack = 0
 32087                           ;__i2c_send@dat stored from wreg
 32088  008A6C  6E01               	movwf	__i2c_send@dat,c
 32089                           
 32090                           ;i2c.c: 63: SSP1BUF = dat;
 32091  008A6E  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32092  008A72  0012               	return		;funcret
 32093  008A74                     __end_of__i2c_send:
 32094                           	opt stack 0
 32095                           tosu	equ	0xFFF
 32096                           tosh	equ	0xFFE
 32097                           tosl	equ	0xFFD
 32098                           pclath	equ	0xFFA
 32099                           tblptru	equ	0xFF8
 32100                           tblptrh	equ	0xFF7
 32101                           tblptrl	equ	0xFF6
 32102                           tablat	equ	0xFF5
 32103                           prodh	equ	0xFF4
 32104                           prodl	equ	0xFF3
 32105                           intcon	equ	0xFF2
 32106                           intcon2	equ	0xFF1
 32107                           intcon3	equ	0xFF0
 32108                           indf0	equ	0xFEF
 32109                           postinc0	equ	0xFEE
 32110                           fsr0h	equ	0xFEA
 32111                           fsr0l	equ	0xFE9
 32112                           wreg	equ	0xFE8
 32113                           indf1	equ	0xFE7
 32114                           postdec1	equ	0xFE5
 32115                           plusw1	equ	0xFE3
 32116                           fsr1h	equ	0xFE2
 32117                           fsr1l	equ	0xFE1
 32118                           indf2	equ	0xFDF
 32119                           postinc2	equ	0xFDE
 32120                           postdec2	equ	0xFDD
 32121                           plusw2	equ	0xFDB
 32122                           fsr2h	equ	0xFDA
 32123                           fsr2l	equ	0xFD9
 32124                           status	equ	0xFD8
 32125                           
 32126 ;; *************** function __parse_command_long *****************
 32127 ;; Defined at:
 32128 ;;		line 475 in file "api.c"
 32129 ;; Parameters:    Size  Location     Type
 32130 ;;  data            2   56[BANK0 ] PTR unsigned char 
 32131 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32132 ;; Auto vars:     Size  Location     Type
 32133 ;;  length          1   58[BANK0 ] unsigned char 
 32134 ;; Return value:  Size  Location     Type
 32135 ;;                  1    wreg      unsigned char 
 32136 ;; Registers used:
 32137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32138 ;; Tracked objects:
 32139 ;;		On entry : 0/0
 32140 ;;		On exit  : 0/0
 32141 ;;		Unchanged: 0/0
 32142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32146 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32147 ;;Total ram usage:        3 bytes
 32148 ;; Hardware stack levels used:    1
 32149 ;; Hardware stack levels required when called:   10
 32150 ;; This function calls:
 32151 ;;		__parse_file_append
 32152 ;;		__parse_file_create
 32153 ;;		__parse_file_delete
 32154 ;;		__parse_file_modify
 32155 ;;		__parse_file_rename
 32156 ;;		__parse_file_resize
 32157 ;;		__parse_format_drive
 32158 ;; This function is called by:
 32159 ;;		_api_parse
 32160 ;; This function uses a non-reentrant model
 32161 ;;
 32162                           
 32163                           	psect	text160
 32164  0063B4                     __ptext160:
 32165                           	opt stack 0
 32166  0063B4                     __parse_command_long:
 32167                           	opt stack 19
 32168                           
 32169                           ;api.c: 477: uint8_t length = 65;
 32170                           
 32171                           ;incstack = 0
 32172  0063B4  0E41               	movlw	65
 32173  0063B6  0100               	movlb	0	; () banked
 32174  0063B8  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32175                           
 32176                           ;api.c: 479: switch(data[0])
 32177  0063BA  D033               	goto	l2727
 32178  0063BC                     
 32179                           ; BSR set to: 0
 32180                           ;api.c: 482: length = _parse_file_resize(data);
 32181                           
 32182                           ; BSR set to: 0
 32183  0063BC  C098  F051         	movff	__parse_command_long@data,__parse_file_resize@data
 32184  0063C0  C099  F052         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 32185  0063C4  EC75  F02A         	call	__parse_file_resize	;wreg free
 32186  0063C8  D029               	goto	L40
 32187  0063CA                     
 32188                           ; BSR set to: 0
 32189                           ;api.c: 486: length = _parse_file_delete(data);
 32190                           
 32191                           ; BSR set to: 0
 32192  0063CA  C098  F04C         	movff	__parse_command_long@data,__parse_file_delete@data
 32193  0063CE  C099  F04D         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32194  0063D2  EC7C  F03E         	call	__parse_file_delete	;wreg free
 32195  0063D6  D022               	goto	L40
 32196  0063D8                     
 32197                           ; BSR set to: 0
 32198                           ;api.c: 490: length = _parse_file_create(data);
 32199                           
 32200                           ; BSR set to: 0
 32201  0063D8  C098  F055         	movff	__parse_command_long@data,__parse_file_create@data
 32202  0063DC  C099  F056         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32203  0063E0  ECCA  F027         	call	__parse_file_create	;wreg free
 32204  0063E4  D01B               	goto	L40
 32205  0063E6                     
 32206                           ; BSR set to: 0
 32207                           ;api.c: 494: length = _parse_file_rename(data);
 32208                           
 32209                           ; BSR set to: 0
 32210  0063E6  C098  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 32211  0063EA  C099  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32212  0063EE  EC93  F039         	call	__parse_file_rename	;wreg free
 32213  0063F2  D014               	goto	L40
 32214  0063F4                     
 32215                           ; BSR set to: 0
 32216                           ;api.c: 498: length = _parse_file_append(data);
 32217                           
 32218                           ; BSR set to: 0
 32219  0063F4  C098  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 32220  0063F8  C099  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32221  0063FC  EC7C  F037         	call	__parse_file_append	;wreg free
 32222  006400  D00D               	goto	L40
 32223  006402                     
 32224                           ; BSR set to: 0
 32225                           ;api.c: 502: length = _parse_file_modify(data);
 32226                           
 32227                           ; BSR set to: 0
 32228  006402  C098  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 32229  006406  C099  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32230  00640A  ECBC  F022         	call	__parse_file_modify	;wreg free
 32231  00640E  D006               	goto	L40
 32232  006410                     
 32233                           ; BSR set to: 0
 32234                           ;api.c: 506: length = _parse_format_drive(data);
 32235                           
 32236                           ; BSR set to: 0
 32237  006410  C098  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32238  006414  C099  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32239  006418  ECCC  F03F         	call	__parse_format_drive	;wreg free
 32240  00641C                     L40:
 32241  00641C  0100               	movlb	0	; () banked
 32242  00641E  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32243                           
 32244                           ; BSR set to: 0
 32245                           ;api.c: 508: }
 32246                           
 32247                           ;api.c: 507: break;
 32248  006420  D01A               	goto	l2729
 32249  006422                     l2727:
 32250                           
 32251                           ; BSR set to: 0
 32252                           
 32253                           ; BSR set to: 0
 32254  006422  C098  FFD9         	movff	__parse_command_long@data,fsr2l
 32255  006426  C099  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32256  00642A  50DF               	movf	indf2,w,c
 32257                           
 32258                           ; Switch size 1, requested type "space"
 32259                           ; Number of cases is 7, Range of values is 80 to 86
 32260                           ; switch strategies available:
 32261                           ; Name         Instructions Cycles
 32262                           ; simple_byte           22    12 (average)
 32263                           ;	Chosen strategy is simple_byte
 32264  00642C  0A50               	xorlw	80	; case 80
 32265  00642E  B4D8               	btfsc	status,2,c
 32266  006430  D7C5               	goto	l2728
 32267  006432  0A01               	xorlw	1	; case 81
 32268  006434  B4D8               	btfsc	status,2,c
 32269  006436  D7C9               	goto	l2730
 32270  006438  0A03               	xorlw	3	; case 82
 32271  00643A  B4D8               	btfsc	status,2,c
 32272  00643C  D7CD               	goto	l2731
 32273  00643E  0A01               	xorlw	1	; case 83
 32274  006440  B4D8               	btfsc	status,2,c
 32275  006442  D7D1               	goto	l2732
 32276  006444  0A07               	xorlw	7	; case 84
 32277  006446  B4D8               	btfsc	status,2,c
 32278  006448  D7D5               	goto	l2733
 32279  00644A  0A01               	xorlw	1	; case 85
 32280  00644C  B4D8               	btfsc	status,2,c
 32281  00644E  D7D9               	goto	l2734
 32282  006450  0A03               	xorlw	3	; case 86
 32283  006452  B4D8               	btfsc	status,2,c
 32284  006454  D7DD               	goto	l2735
 32285  006456                     l2729:
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;api.c: 510: return length;
 32289                           
 32290                           ; BSR set to: 0
 32291  006456  519A               	movf	__parse_command_long@length& (0+255),w,b
 32292  006458  0012               	return	
 32293  00645A                     __end_of__parse_command_long:
 32294                           	opt stack 0
 32295                           tosu	equ	0xFFF
 32296                           tosh	equ	0xFFE
 32297                           tosl	equ	0xFFD
 32298                           pclath	equ	0xFFA
 32299                           tblptru	equ	0xFF8
 32300                           tblptrh	equ	0xFF7
 32301                           tblptrl	equ	0xFF6
 32302                           tablat	equ	0xFF5
 32303                           prodh	equ	0xFF4
 32304                           prodl	equ	0xFF3
 32305                           intcon	equ	0xFF2
 32306                           intcon2	equ	0xFF1
 32307                           intcon3	equ	0xFF0
 32308                           indf0	equ	0xFEF
 32309                           postinc0	equ	0xFEE
 32310                           fsr0h	equ	0xFEA
 32311                           fsr0l	equ	0xFE9
 32312                           wreg	equ	0xFE8
 32313                           indf1	equ	0xFE7
 32314                           postdec1	equ	0xFE5
 32315                           plusw1	equ	0xFE3
 32316                           fsr1h	equ	0xFE2
 32317                           fsr1l	equ	0xFE1
 32318                           indf2	equ	0xFDF
 32319                           postinc2	equ	0xFDE
 32320                           postdec2	equ	0xFDD
 32321                           plusw2	equ	0xFDB
 32322                           fsr2h	equ	0xFDA
 32323                           fsr2l	equ	0xFD9
 32324                           status	equ	0xFD8
 32325                           
 32326 ;; *************** function __parse_format_drive *****************
 32327 ;; Defined at:
 32328 ;;		line 629 in file "api.c"
 32329 ;; Parameters:    Size  Location     Type
 32330 ;;  data            2   38[COMRAM] PTR unsigned char 
 32331 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32332 ;; Auto vars:     Size  Location     Type
 32333 ;;		None
 32334 ;; Return value:  Size  Location     Type
 32335 ;;                  1    wreg      unsigned char 
 32336 ;; Registers used:
 32337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32338 ;; Tracked objects:
 32339 ;;		On entry : 0/0
 32340 ;;		On exit  : 0/0
 32341 ;;		Unchanged: 0/0
 32342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32347 ;;Total ram usage:        3 bytes
 32348 ;; Hardware stack levels used:    1
 32349 ;; Hardware stack levels required when called:    6
 32350 ;; This function calls:
 32351 ;;		_fat_format
 32352 ;; This function is called by:
 32353 ;;		__parse_command_long
 32354 ;; This function uses a non-reentrant model
 32355 ;;
 32356                           
 32357                           	psect	text161
 32358  007F98                     __ptext161:
 32359                           	opt stack 0
 32360  007F98                     __parse_format_drive:
 32361                           	opt stack 22
 32362                           
 32363                           ;api.c: 632: if((data[0]!=COMMAND_FORMAT_DRIVE) || (data[1]!=0xDA) || (data[2]!=0x22))
 32364                           
 32365                           ; BSR set to: 0
 32366                           ;incstack = 0
 32367  007F98  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 32368  007F9C  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 32369  007FA0  0E56               	movlw	86
 32370  007FA2  18DE               	xorwf	postinc2,w,c
 32371  007FA4  A4D8               	btfss	status,2,c
 32372  007FA6  D014               	goto	u10760
 32373  007FA8  EE20 F001          	lfsr	2,1
 32374  007FAC  5027               	movf	__parse_format_drive@data,w,c
 32375  007FAE  26D9               	addwf	fsr2l,f,c
 32376  007FB0  5028               	movf	__parse_format_drive@data+1,w,c
 32377  007FB2  22DA               	addwfc	fsr2h,f,c
 32378  007FB4  0EDA               	movlw	218
 32379  007FB6  18DE               	xorwf	postinc2,w,c
 32380  007FB8  A4D8               	btfss	status,2,c
 32381  007FBA  D00A               	goto	u10760
 32382  007FBC  EE20 F002          	lfsr	2,2
 32383  007FC0  5027               	movf	__parse_format_drive@data,w,c
 32384  007FC2  26D9               	addwf	fsr2l,f,c
 32385  007FC4  5028               	movf	__parse_format_drive@data+1,w,c
 32386  007FC6  22DA               	addwfc	fsr2h,f,c
 32387  007FC8  0E22               	movlw	34
 32388  007FCA  18DE               	xorwf	postinc2,w,c
 32389  007FCC  B4D8               	btfsc	status,2,c
 32390  007FCE  D002               	goto	l2775
 32391  007FD0                     u10760:
 32392                           
 32393                           ;api.c: 633: {;api.c: 634: return 3;
 32394  007FD0  0E03               	movlw	3
 32395  007FD2  0012               	return	
 32396  007FD4                     l2775:
 32397                           
 32398                           ;api.c: 635: };api.c: 636: fat_format();
 32399  007FD4  EC6C  F014         	call	_fat_format	;wreg free
 32400                           
 32401                           ;api.c: 637: return 3;
 32402  007FD8  0E03               	movlw	3
 32403  007FDA  0012               	return	
 32404  007FDC                     __end_of__parse_format_drive:
 32405                           	opt stack 0
 32406                           tosu	equ	0xFFF
 32407                           tosh	equ	0xFFE
 32408                           tosl	equ	0xFFD
 32409                           pclath	equ	0xFFA
 32410                           tblptru	equ	0xFF8
 32411                           tblptrh	equ	0xFF7
 32412                           tblptrl	equ	0xFF6
 32413                           tablat	equ	0xFF5
 32414                           prodh	equ	0xFF4
 32415                           prodl	equ	0xFF3
 32416                           intcon	equ	0xFF2
 32417                           intcon2	equ	0xFF1
 32418                           intcon3	equ	0xFF0
 32419                           indf0	equ	0xFEF
 32420                           postinc0	equ	0xFEE
 32421                           fsr0h	equ	0xFEA
 32422                           fsr0l	equ	0xFE9
 32423                           wreg	equ	0xFE8
 32424                           indf1	equ	0xFE7
 32425                           postdec1	equ	0xFE5
 32426                           plusw1	equ	0xFE3
 32427                           fsr1h	equ	0xFE2
 32428                           fsr1l	equ	0xFE1
 32429                           indf2	equ	0xFDF
 32430                           postinc2	equ	0xFDE
 32431                           postdec2	equ	0xFDD
 32432                           plusw2	equ	0xFDB
 32433                           fsr2h	equ	0xFDA
 32434                           fsr2l	equ	0xFD9
 32435                           status	equ	0xFD8
 32436                           
 32437 ;; *************** function _fat_format *****************
 32438 ;; Defined at:
 32439 ;;		line 1245 in file "fat16.c"
 32440 ;; Parameters:    Size  Location     Type
 32441 ;;		None
 32442 ;; Auto vars:     Size  Location     Type
 32443 ;;  cntr            2   36[COMRAM] unsigned int 
 32444 ;; Return value:  Size  Location     Type
 32445 ;;                  1    wreg      void 
 32446 ;; Registers used:
 32447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32448 ;; Tracked objects:
 32449 ;;		On entry : 0/0
 32450 ;;		On exit  : 0/0
 32451 ;;		Unchanged: 0/0
 32452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32457 ;;Total ram usage:        2 bytes
 32458 ;; Hardware stack levels used:    1
 32459 ;; Hardware stack levels required when called:    5
 32460 ;; This function calls:
 32461 ;;		__get_data
 32462 ;;		__get_fat
 32463 ;;		__get_fbr
 32464 ;;		__get_mbr
 32465 ;;		__get_root
 32466 ;;		_flash_sector_write
 32467 ;; This function is called by:
 32468 ;;		_fat_init
 32469 ;;		__parse_format_drive
 32470 ;; This function uses a non-reentrant model
 32471 ;;
 32472                           
 32473                           	psect	text162
 32474  0028D8                     __ptext162:
 32475                           	opt stack 0
 32476  0028D8                     _fat_format:
 32477                           	opt stack 23
 32478                           
 32479                           ;fat16.c: 1247: uint16_t cntr;;fat16.c: 1250: for(cntr=0; cntr<512; ++cntr)
 32480                           
 32481                           ;incstack = 0
 32482  0028D8  0E00               	movlw	0
 32483  0028DA  6E26               	movwf	fat_format@cntr+1,c
 32484  0028DC  0E00               	movlw	0
 32485  0028DE  6E25               	movwf	fat_format@cntr,c
 32486  0028E0                     l13115:
 32487  0028E0  0E02               	movlw	2
 32488  0028E2  5C26               	subwf	fat_format@cntr+1,w,c
 32489  0028E4  B0D8               	btfsc	status,0,c
 32490  0028E6  D010               	goto	u10090
 32491                           
 32492                           ;fat16.c: 1251: {;fat16.c: 1252: buffer[cntr] = _get_mbr(cntr);
 32493  0028E8  0EC0               	movlw	low _buffer
 32494  0028EA  2425               	addwf	fat_format@cntr,w,c
 32495  0028EC  6ED9               	movwf	fsr2l,c
 32496  0028EE  0E03               	movlw	high _buffer
 32497  0028F0  2026               	addwfc	fat_format@cntr+1,w,c
 32498  0028F2  6EDA               	movwf	fsr2h,c
 32499  0028F4  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 32500  0028F8  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 32501  0028FC  EC6E  F02D         	call	__get_mbr	;wreg free
 32502  002900  6EDF               	movwf	indf2,c
 32503  002902  4A25               	infsnz	fat_format@cntr,f,c
 32504  002904  2A26               	incf	fat_format@cntr+1,f,c
 32505  002906  D7EC               	goto	l13115
 32506  002908                     u10090:
 32507                           
 32508                           ;fat16.c: 1253: };fat16.c: 1254: flash_sector_write(0, buffer);
 32509  002908  0E00               	movlw	0
 32510  00290A  6E21               	movwf	flash_sector_write@page+1,c
 32511  00290C  0E00               	movlw	0
 32512  00290E  6E20               	movwf	flash_sector_write@page,c
 32513  002910  0EC0               	movlw	low _buffer
 32514  002912  6E22               	movwf	flash_sector_write@data,c
 32515  002914  0E03               	movlw	high _buffer
 32516  002916  6E23               	movwf	flash_sector_write@data+1,c
 32517  002918  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32518                           
 32519                           ;fat16.c: 1257: for(cntr=0; cntr<512; ++cntr)
 32520  00291C  0E00               	movlw	0
 32521  00291E  6E26               	movwf	fat_format@cntr+1,c
 32522  002920  0E00               	movlw	0
 32523  002922  6E25               	movwf	fat_format@cntr,c
 32524  002924                     l13129:
 32525  002924  0E02               	movlw	2
 32526  002926  5C26               	subwf	fat_format@cntr+1,w,c
 32527  002928  B0D8               	btfsc	status,0,c
 32528  00292A  D010               	goto	u10110
 32529                           
 32530                           ;fat16.c: 1258: {;fat16.c: 1259: buffer[cntr] = _get_fbr(cntr);
 32531  00292C  0EC0               	movlw	low _buffer
 32532  00292E  2425               	addwf	fat_format@cntr,w,c
 32533  002930  6ED9               	movwf	fsr2l,c
 32534  002932  0E03               	movlw	high _buffer
 32535  002934  2026               	addwfc	fat_format@cntr+1,w,c
 32536  002936  6EDA               	movwf	fsr2h,c
 32537  002938  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 32538  00293C  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 32539  002940  ECD1  F00E         	call	__get_fbr	;wreg free
 32540  002944  6EDF               	movwf	indf2,c
 32541  002946  4A25               	infsnz	fat_format@cntr,f,c
 32542  002948  2A26               	incf	fat_format@cntr+1,f,c
 32543  00294A  D7EC               	goto	l13129
 32544  00294C                     u10110:
 32545                           
 32546                           ;fat16.c: 1260: };fat16.c: 1261: flash_sector_write(1, buffer);
 32547  00294C  0E00               	movlw	0
 32548  00294E  6E21               	movwf	flash_sector_write@page+1,c
 32549  002950  0E01               	movlw	1
 32550  002952  6E20               	movwf	flash_sector_write@page,c
 32551  002954  0EC0               	movlw	low _buffer
 32552  002956  6E22               	movwf	flash_sector_write@data,c
 32553  002958  0E03               	movlw	high _buffer
 32554  00295A  6E23               	movwf	flash_sector_write@data+1,c
 32555  00295C  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32556                           
 32557                           ;fat16.c: 1264: for(cntr=0; cntr<512; ++cntr)
 32558  002960  0E00               	movlw	0
 32559  002962  6E26               	movwf	fat_format@cntr+1,c
 32560  002964  0E00               	movlw	0
 32561  002966  6E25               	movwf	fat_format@cntr,c
 32562  002968                     l13143:
 32563  002968  0E02               	movlw	2
 32564  00296A  5C26               	subwf	fat_format@cntr+1,w,c
 32565  00296C  B0D8               	btfsc	status,0,c
 32566  00296E  D010               	goto	u10130
 32567                           
 32568                           ;fat16.c: 1265: {;fat16.c: 1266: buffer[cntr] = _get_fat(cntr);
 32569  002970  0EC0               	movlw	low _buffer
 32570  002972  2425               	addwf	fat_format@cntr,w,c
 32571  002974  6ED9               	movwf	fsr2l,c
 32572  002976  0E03               	movlw	high _buffer
 32573  002978  2026               	addwfc	fat_format@cntr+1,w,c
 32574  00297A  6EDA               	movwf	fsr2h,c
 32575  00297C  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 32576  002980  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 32577  002984  EC7D  F03D         	call	__get_fat	;wreg free
 32578  002988  6EDF               	movwf	indf2,c
 32579  00298A  4A25               	infsnz	fat_format@cntr,f,c
 32580  00298C  2A26               	incf	fat_format@cntr+1,f,c
 32581  00298E  D7EC               	goto	l13143
 32582  002990                     u10130:
 32583                           
 32584                           ;fat16.c: 1267: };fat16.c: 1268: flash_sector_write(2, buffer);
 32585  002990  0E00               	movlw	0
 32586  002992  6E21               	movwf	flash_sector_write@page+1,c
 32587  002994  0E02               	movlw	2
 32588  002996  6E20               	movwf	flash_sector_write@page,c
 32589  002998  0EC0               	movlw	low _buffer
 32590  00299A  6E22               	movwf	flash_sector_write@data,c
 32591  00299C  0E03               	movlw	high _buffer
 32592  00299E  6E23               	movwf	flash_sector_write@data+1,c
 32593  0029A0  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32594                           
 32595                           ;fat16.c: 1271: for(cntr=0; cntr<512; ++cntr)
 32596  0029A4  0E00               	movlw	0
 32597  0029A6  6E26               	movwf	fat_format@cntr+1,c
 32598  0029A8  0E00               	movlw	0
 32599  0029AA  6E25               	movwf	fat_format@cntr,c
 32600  0029AC                     l13157:
 32601  0029AC  0E02               	movlw	2
 32602  0029AE  5C26               	subwf	fat_format@cntr+1,w,c
 32603  0029B0  B0D8               	btfsc	status,0,c
 32604  0029B2  D00B               	goto	u10150
 32605                           
 32606                           ;fat16.c: 1272: {;fat16.c: 1273: buffer[cntr] = 0x00;
 32607  0029B4  0EC0               	movlw	low _buffer
 32608  0029B6  2425               	addwf	fat_format@cntr,w,c
 32609  0029B8  6ED9               	movwf	fsr2l,c
 32610  0029BA  0E03               	movlw	high _buffer
 32611  0029BC  2026               	addwfc	fat_format@cntr+1,w,c
 32612  0029BE  6EDA               	movwf	fsr2h,c
 32613  0029C0  0E00               	movlw	0
 32614  0029C2  6EDF               	movwf	indf2,c
 32615  0029C4  4A25               	infsnz	fat_format@cntr,f,c
 32616  0029C6  2A26               	incf	fat_format@cntr+1,f,c
 32617  0029C8  D7F1               	goto	l13157
 32618  0029CA                     u10150:
 32619                           
 32620                           ;fat16.c: 1274: };fat16.c: 1275: for(cntr=2+1; cntr<=33; ++cntr)
 32621  0029CA  0E00               	movlw	0
 32622  0029CC  6E26               	movwf	fat_format@cntr+1,c
 32623  0029CE  0E03               	movlw	3
 32624  0029D0  6E25               	movwf	fat_format@cntr,c
 32625  0029D2                     l13169:
 32626  0029D2  5026               	movf	fat_format@cntr+1,w,c
 32627  0029D4  E111               	bnz	l13179
 32628  0029D6  0E22               	movlw	34
 32629  0029D8  5C25               	subwf	fat_format@cntr,w,c
 32630  0029DA  B0D8               	btfsc	status,0,c
 32631  0029DC  D00D               	goto	u10170
 32632                           
 32633                           ;fat16.c: 1276: {;fat16.c: 1277: flash_sector_write(cntr, buffer);
 32634  0029DE  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 32635  0029E2  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 32636  0029E6  0EC0               	movlw	low _buffer
 32637  0029E8  6E22               	movwf	flash_sector_write@data,c
 32638  0029EA  0E03               	movlw	high _buffer
 32639  0029EC  6E23               	movwf	flash_sector_write@data+1,c
 32640  0029EE  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32641  0029F2  4A25               	infsnz	fat_format@cntr,f,c
 32642  0029F4  2A26               	incf	fat_format@cntr+1,f,c
 32643  0029F6  D7ED               	goto	l13169
 32644  0029F8                     u10170:
 32645  0029F8                     l13179:
 32646                           
 32647                           ;fat16.c: 1278: };fat16.c: 1281: for(cntr=0; cntr<512; ++cntr)
 32648  0029F8  0E00               	movlw	0
 32649  0029FA  6E26               	movwf	fat_format@cntr+1,c
 32650  0029FC  0E00               	movlw	0
 32651  0029FE  6E25               	movwf	fat_format@cntr,c
 32652  002A00                     l13181:
 32653  002A00  0E02               	movlw	2
 32654  002A02  5C26               	subwf	fat_format@cntr+1,w,c
 32655  002A04  B0D8               	btfsc	status,0,c
 32656  002A06  D010               	goto	u10190
 32657                           
 32658                           ;fat16.c: 1282: {;fat16.c: 1283: buffer[cntr] = _get_root(cntr);
 32659  002A08  0EC0               	movlw	low _buffer
 32660  002A0A  2425               	addwf	fat_format@cntr,w,c
 32661  002A0C  6ED9               	movwf	fsr2l,c
 32662  002A0E  0E03               	movlw	high _buffer
 32663  002A10  2026               	addwfc	fat_format@cntr+1,w,c
 32664  002A12  6EDA               	movwf	fsr2h,c
 32665  002A14  C025  F001         	movff	fat_format@cntr,__get_root@idx
 32666  002A18  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 32667  002A1C  EC21  F01A         	call	__get_root	;wreg free
 32668  002A20  6EDF               	movwf	indf2,c
 32669  002A22  4A25               	infsnz	fat_format@cntr,f,c
 32670  002A24  2A26               	incf	fat_format@cntr+1,f,c
 32671  002A26  D7EC               	goto	l13181
 32672  002A28                     u10190:
 32673                           
 32674                           ;fat16.c: 1284: };fat16.c: 1285: flash_sector_write(34, buffer);
 32675  002A28  0E00               	movlw	0
 32676  002A2A  6E21               	movwf	flash_sector_write@page+1,c
 32677  002A2C  0E22               	movlw	34
 32678  002A2E  6E20               	movwf	flash_sector_write@page,c
 32679  002A30  0EC0               	movlw	low _buffer
 32680  002A32  6E22               	movwf	flash_sector_write@data,c
 32681  002A34  0E03               	movlw	high _buffer
 32682  002A36  6E23               	movwf	flash_sector_write@data+1,c
 32683  002A38  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32684                           
 32685                           ;fat16.c: 1288: for(cntr=0; cntr<512; ++cntr)
 32686  002A3C  0E00               	movlw	0
 32687  002A3E  6E26               	movwf	fat_format@cntr+1,c
 32688  002A40  0E00               	movlw	0
 32689  002A42  6E25               	movwf	fat_format@cntr,c
 32690  002A44                     l13195:
 32691  002A44  0E02               	movlw	2
 32692  002A46  5C26               	subwf	fat_format@cntr+1,w,c
 32693  002A48  B0D8               	btfsc	status,0,c
 32694  002A4A  D00B               	goto	u10210
 32695                           
 32696                           ;fat16.c: 1289: {;fat16.c: 1290: buffer[cntr] = 0x00;
 32697  002A4C  0EC0               	movlw	low _buffer
 32698  002A4E  2425               	addwf	fat_format@cntr,w,c
 32699  002A50  6ED9               	movwf	fsr2l,c
 32700  002A52  0E03               	movlw	high _buffer
 32701  002A54  2026               	addwfc	fat_format@cntr+1,w,c
 32702  002A56  6EDA               	movwf	fsr2h,c
 32703  002A58  0E00               	movlw	0
 32704  002A5A  6EDF               	movwf	indf2,c
 32705  002A5C  4A25               	infsnz	fat_format@cntr,f,c
 32706  002A5E  2A26               	incf	fat_format@cntr+1,f,c
 32707  002A60  D7F1               	goto	l13195
 32708  002A62                     u10210:
 32709                           
 32710                           ;fat16.c: 1291: };fat16.c: 1292: for(cntr=34+1; cntr<=37; ++cntr)
 32711  002A62  0E00               	movlw	0
 32712  002A64  6E26               	movwf	fat_format@cntr+1,c
 32713  002A66  0E23               	movlw	35
 32714  002A68  6E25               	movwf	fat_format@cntr,c
 32715  002A6A                     l13207:
 32716  002A6A  5026               	movf	fat_format@cntr+1,w,c
 32717  002A6C  E111               	bnz	l13217
 32718  002A6E  0E26               	movlw	38
 32719  002A70  5C25               	subwf	fat_format@cntr,w,c
 32720  002A72  B0D8               	btfsc	status,0,c
 32721  002A74  D00D               	goto	u10230
 32722                           
 32723                           ;fat16.c: 1293: {;fat16.c: 1294: flash_sector_write(cntr, buffer);
 32724  002A76  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 32725  002A7A  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 32726  002A7E  0EC0               	movlw	low _buffer
 32727  002A80  6E22               	movwf	flash_sector_write@data,c
 32728  002A82  0E03               	movlw	high _buffer
 32729  002A84  6E23               	movwf	flash_sector_write@data+1,c
 32730  002A86  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32731  002A8A  4A25               	infsnz	fat_format@cntr,f,c
 32732  002A8C  2A26               	incf	fat_format@cntr+1,f,c
 32733  002A8E  D7ED               	goto	l13207
 32734  002A90                     u10230:
 32735  002A90                     l13217:
 32736                           
 32737                           ;fat16.c: 1295: };fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
 32738  002A90  0E00               	movlw	0
 32739  002A92  6E26               	movwf	fat_format@cntr+1,c
 32740  002A94  0E00               	movlw	0
 32741  002A96  6E25               	movwf	fat_format@cntr,c
 32742  002A98                     l13219:
 32743  002A98  0E02               	movlw	2
 32744  002A9A  5C26               	subwf	fat_format@cntr+1,w,c
 32745  002A9C  B0D8               	btfsc	status,0,c
 32746  002A9E  D010               	goto	u10250
 32747                           
 32748                           ;fat16.c: 1299: {;fat16.c: 1300: buffer[cntr] = _get_data(cntr);
 32749  002AA0  0EC0               	movlw	low _buffer
 32750  002AA2  2425               	addwf	fat_format@cntr,w,c
 32751  002AA4  6ED9               	movwf	fsr2l,c
 32752  002AA6  0E03               	movlw	high _buffer
 32753  002AA8  2026               	addwfc	fat_format@cntr+1,w,c
 32754  002AAA  6EDA               	movwf	fsr2h,c
 32755  002AAC  C025  F001         	movff	fat_format@cntr,__get_data@idx
 32756  002AB0  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 32757  002AB4  EC0A  F043         	call	__get_data	;wreg free
 32758  002AB8  6EDF               	movwf	indf2,c
 32759  002ABA  4A25               	infsnz	fat_format@cntr,f,c
 32760  002ABC  2A26               	incf	fat_format@cntr+1,f,c
 32761  002ABE  D7EC               	goto	l13219
 32762  002AC0                     u10250:
 32763                           
 32764                           ;fat16.c: 1301: };fat16.c: 1302: flash_sector_write(38, buffer);
 32765  002AC0  0E00               	movlw	0
 32766  002AC2  6E21               	movwf	flash_sector_write@page+1,c
 32767  002AC4  0E26               	movlw	38
 32768  002AC6  6E20               	movwf	flash_sector_write@page,c
 32769  002AC8  0EC0               	movlw	low _buffer
 32770  002ACA  6E22               	movwf	flash_sector_write@data,c
 32771  002ACC  0E03               	movlw	high _buffer
 32772  002ACE  6E23               	movwf	flash_sector_write@data+1,c
 32773  002AD0  ECA8  F03D         	call	_flash_sector_write	;wreg free
 32774  002AD4  0012               	return		;funcret
 32775  002AD6                     __end_of_fat_format:
 32776                           	opt stack 0
 32777                           tosu	equ	0xFFF
 32778                           tosh	equ	0xFFE
 32779                           tosl	equ	0xFFD
 32780                           pclath	equ	0xFFA
 32781                           tblptru	equ	0xFF8
 32782                           tblptrh	equ	0xFF7
 32783                           tblptrl	equ	0xFF6
 32784                           tablat	equ	0xFF5
 32785                           prodh	equ	0xFF4
 32786                           prodl	equ	0xFF3
 32787                           intcon	equ	0xFF2
 32788                           intcon2	equ	0xFF1
 32789                           intcon3	equ	0xFF0
 32790                           indf0	equ	0xFEF
 32791                           postinc0	equ	0xFEE
 32792                           fsr0h	equ	0xFEA
 32793                           fsr0l	equ	0xFE9
 32794                           wreg	equ	0xFE8
 32795                           indf1	equ	0xFE7
 32796                           postdec1	equ	0xFE5
 32797                           plusw1	equ	0xFE3
 32798                           fsr1h	equ	0xFE2
 32799                           fsr1l	equ	0xFE1
 32800                           indf2	equ	0xFDF
 32801                           postinc2	equ	0xFDE
 32802                           postdec2	equ	0xFDD
 32803                           plusw2	equ	0xFDB
 32804                           fsr2h	equ	0xFDA
 32805                           fsr2l	equ	0xFD9
 32806                           status	equ	0xFD8
 32807                           
 32808 ;; *************** function __get_root *****************
 32809 ;; Defined at:
 32810 ;;		line 1135 in file "fat16.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;  idx             2    0[COMRAM] unsigned int 
 32813 ;; Auto vars:     Size  Location     Type
 32814 ;;		None
 32815 ;; Return value:  Size  Location     Type
 32816 ;;                  1    wreg      unsigned char 
 32817 ;; Registers used:
 32818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32819 ;; Tracked objects:
 32820 ;;		On entry : 0/0
 32821 ;;		On exit  : 0/0
 32822 ;;		Unchanged: 0/0
 32823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32828 ;;Total ram usage:        6 bytes
 32829 ;; Hardware stack levels used:    1
 32830 ;; This function calls:
 32831 ;;		Nothing
 32832 ;; This function is called by:
 32833 ;;		_fat_format
 32834 ;; This function uses a non-reentrant model
 32835 ;;
 32836                           
 32837                           	psect	text163
 32838  003442                     __ptext163:
 32839                           	opt stack 0
 32840  003442                     __get_root:
 32841                           	opt stack 27
 32842                           
 32843                           ;fat16.c: 1137: if(idx < 0x20)
 32844                           
 32845                           ;incstack = 0
 32846  003442  5002               	movf	__get_root@idx+1,w,c
 32847  003444  E11D               	bnz	l12401
 32848  003446  0E20               	movlw	32
 32849  003448  5C01               	subwf	__get_root@idx,w,c
 32850  00344A  B0D8               	btfsc	status,0,c
 32851  00344C  D019               	goto	l2187
 32852                           
 32853                           ;fat16.c: 1138: {;fat16.c: 1139: if(idx < 11)
 32854  00344E  5002               	movf	__get_root@idx+1,w,c
 32855  003450  E110               	bnz	l12395
 32856  003452  0E0B               	movlw	11
 32857  003454  5C01               	subwf	__get_root@idx,w,c
 32858  003456  B0D8               	btfsc	status,0,c
 32859  003458  D00C               	goto	l2185
 32860                           
 32861                           ;fat16.c: 1140: {;fat16.c: 1141: return "SolarChargr"[idx];
 32862  00345A  0EDD               	movlw	low STR_9
 32863  00345C  2401               	addwf	__get_root@idx,w,c
 32864  00345E  6EF6               	movwf	tblptrl,c
 32865  003460  0E8F               	movlw	high STR_9
 32866  003462  2002               	addwfc	__get_root@idx+1,w,c
 32867  003464  6EF7               	movwf	tblptrh,c
 32868  003466                     	if	1	;There are 3 active tblptr bytes
 32869  003466  6AF8               	clrf	tblptru,c
 32870  003468  0E00               	movlw	low (__mediumconst shr (0+16))
 32871  00346A  22F8               	addwfc	tblptru,f,c
 32872  00346C                     	endif
 32873  00346C  0008               	tblrd		*
 32874  00346E  50F5               	movf	tablat,w,c
 32875  003470  0012               	return	
 32876  003472                     l2185:
 32877  003472                     l12395:
 32878                           
 32879                           ;fat16.c: 1142: };fat16.c: 1143: if(idx==11)
 32880  003472  0E0B               	movlw	11
 32881  003474  1801               	xorwf	__get_root@idx,w,c
 32882  003476  1002               	iorwf	__get_root@idx+1,w,c
 32883  003478  A4D8               	btfss	status,2,c
 32884  00347A  D002               	goto	l2187
 32885                           
 32886                           ;fat16.c: 1144: {;fat16.c: 1145: return 0x08;
 32887  00347C  0E08               	movlw	8
 32888  00347E  0012               	return	
 32889  003480                     l2187:
 32890  003480                     l12401:
 32891                           
 32892                           ;fat16.c: 1146: };fat16.c: 1147: };fat16.c: 1148: if(idx < 0x40)
 32893  003480  5002               	movf	__get_root@idx+1,w,c
 32894  003482  E103               	bnz	u9241
 32895  003484  0E40               	movlw	64
 32896  003486  5C01               	subwf	__get_root@idx,w,c
 32897  003488  B0D8               	btfsc	status,0,c
 32898  00348A                     u9241:
 32899  00348A  D0A4               	goto	l2213
 32900                           
 32901                           ;fat16.c: 1149: {;fat16.c: 1150: idx -= 0x20;
 32902  00348C  0E20               	movlw	32
 32903  00348E  5E01               	subwf	__get_root@idx,f,c
 32904  003490  0E00               	movlw	0
 32905  003492  5A02               	subwfb	__get_root@idx+1,f,c
 32906                           
 32907                           ;fat16.c: 1151: if(idx < 0+8)
 32908  003494  5002               	movf	__get_root@idx+1,w,c
 32909  003496  E110               	bnz	l12409
 32910  003498  0E08               	movlw	8
 32911  00349A  5C01               	subwf	__get_root@idx,w,c
 32912  00349C  B0D8               	btfsc	status,0,c
 32913  00349E  D00C               	goto	l2189
 32914                           
 32915                           ;fat16.c: 1152: {;fat16.c: 1153: return "FILE    "[idx];
 32916  0034A0  0EE9               	movlw	low STR_10
 32917  0034A2  2401               	addwf	__get_root@idx,w,c
 32918  0034A4  6EF6               	movwf	tblptrl,c
 32919  0034A6  0E8F               	movlw	high STR_10
 32920  0034A8  2002               	addwfc	__get_root@idx+1,w,c
 32921  0034AA  6EF7               	movwf	tblptrh,c
 32922  0034AC                     	if	1	;There are 3 active tblptr bytes
 32923  0034AC  6AF8               	clrf	tblptru,c
 32924  0034AE  0E00               	movlw	low (__mediumconst shr (0+16))
 32925  0034B0  22F8               	addwfc	tblptru,f,c
 32926  0034B2                     	endif
 32927  0034B2  0008               	tblrd		*
 32928  0034B4  50F5               	movf	tablat,w,c
 32929  0034B6  0012               	return	
 32930  0034B8                     l2189:
 32931  0034B8                     l12409:
 32932                           
 32933                           ;fat16.c: 1154: };fat16.c: 1155: if(idx < 11)
 32934  0034B8  5002               	movf	__get_root@idx+1,w,c
 32935  0034BA  E146               	bnz	l12501
 32936  0034BC  0E0B               	movlw	11
 32937  0034BE  5C01               	subwf	__get_root@idx,w,c
 32938  0034C0  B0D8               	btfsc	status,0,c
 32939  0034C2  D042               	goto	l2191
 32940                           
 32941                           ;fat16.c: 1156: {;fat16.c: 1157: return "TXT"[idx-8];
 32942  0034C4  0EF8               	movlw	248
 32943  0034C6  6E03               	movwf	??__get_root& (0+255),c
 32944  0034C8  0EFF               	movlw	255
 32945  0034CA  6E04               	movwf	(??__get_root+1)& (0+255),c
 32946  0034CC  C001  F005         	movff	__get_root@idx,??__get_root+2
 32947  0034D0  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 32948  0034D4  5003               	movf	??__get_root,w,c
 32949  0034D6  2605               	addwf	??__get_root+2,f,c
 32950  0034D8  5004               	movf	??__get_root+1,w,c
 32951  0034DA  2206               	addwfc	??__get_root+3,f,c
 32952  0034DC  0EFB               	movlw	low STR_11
 32953  0034DE  2405               	addwf	??__get_root+2,w,c
 32954  0034E0  6EF6               	movwf	tblptrl,c
 32955  0034E2  0E8F               	movlw	high STR_11
 32956  0034E4  2006               	addwfc	??__get_root+3,w,c
 32957  0034E6  6EF7               	movwf	tblptrh,c
 32958  0034E8                     	if	1	;There are 3 active tblptr bytes
 32959  0034E8  6AF8               	clrf	tblptru,c
 32960  0034EA  0E00               	movlw	low (__mediumconst shr (0+16))
 32961  0034EC  22F8               	addwfc	tblptru,f,c
 32962  0034EE                     	endif
 32963  0034EE  0008               	tblrd		*
 32964  0034F0  50F5               	movf	tablat,w,c
 32965  0034F2  0012               	return	
 32966  0034F4                     
 32967                           ;fat16.c: 1162: return 0x20;
 32968  0034F4  0E20               	movlw	32
 32969  0034F6  0012               	return	
 32970  0034F8                     
 32971                           ;fat16.c: 1164: return 0x06;
 32972  0034F8  0E06               	movlw	6
 32973  0034FA  0012               	return	
 32974  0034FC                     
 32975                           ;fat16.c: 1166: return 0x28;
 32976  0034FC  0E28               	movlw	40
 32977  0034FE  0012               	return	
 32978  003500                     
 32979                           ;fat16.c: 1168: return 0x78;
 32980  003500  0E78               	movlw	120
 32981  003502  0012               	return	
 32982  003504                     
 32983                           ;fat16.c: 1170: return 0xDE;
 32984  003504  0EDE               	movlw	222
 32985  003506  0012               	return	
 32986  003508                     
 32987                           ;fat16.c: 1172: return 0x38;
 32988  003508  0E38               	movlw	56
 32989  00350A  0012               	return	
 32990  00350C                     
 32991                           ;fat16.c: 1174: return 0x5F;
 32992  00350C  0E5F               	movlw	95
 32993  00350E  0012               	return	
 32994  003510                     
 32995                           ;fat16.c: 1176: return 0x4B;
 32996  003510  0E4B               	movlw	75
 32997  003512  0012               	return	
 32998  003514                     
 32999                           ;fat16.c: 1178: return 0x00;
 33000  003514  0E00               	movlw	0
 33001  003516  0012               	return	
 33002  003518                     
 33003                           ;fat16.c: 1180: return 0x00;
 33004  003518  0E00               	movlw	0
 33005  00351A  0012               	return	
 33006  00351C                     
 33007                           ;fat16.c: 1182: return 0x04;
 33008  00351C  0E04               	movlw	4
 33009  00351E  0012               	return	
 33010  003520                     
 33011                           ;fat16.c: 1184: return 0x77;
 33012  003520  0E77               	movlw	119
 33013  003522  0012               	return	
 33014  003524                     
 33015                           ;fat16.c: 1186: return 0xDE;
 33016  003524  0EDE               	movlw	222
 33017  003526  0012               	return	
 33018  003528                     
 33019                           ;fat16.c: 1188: return 0x38;
 33020  003528  0E38               	movlw	56
 33021  00352A  0012               	return	
 33022  00352C                     
 33023                           ;fat16.c: 1190: return ((unsigned char)((((uint16_t)2))&0xFF));
 33024  00352C  0E02               	movlw	2
 33025  00352E  0012               	return	
 33026  003530                     
 33027                           ;fat16.c: 1192: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 33028  003530  0E00               	movlw	0
 33029  003532  0012               	return	
 33030  003534                     
 33031                           ;fat16.c: 1194: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 33032  003534  0E0C               	movlw	12
 33033  003536  0012               	return	
 33034  003538                     
 33035                           ;fat16.c: 1196: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 33036  003538  0E00               	movlw	0
 33037  00353A  0012               	return	
 33038  00353C                     
 33039                           ;fat16.c: 1198: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 33040  00353C  0E00               	movlw	0
 33041  00353E  0012               	return	
 33042  003540                     
 33043                           ;fat16.c: 1200: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 33044  003540  0E00               	movlw	0
 33045  003542  0012               	return	
 33046  003544                     
 33047                           ;fat16.c: 1202: return 0x00;
 33048  003544  0E00               	movlw	0
 33049  003546  0012               	return	
 33050  003548                     l2191:
 33051  003548                     l12501:
 33052  003548  C001  F003         	movff	__get_root@idx,??__get_root
 33053  00354C  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 33054                           
 33055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33056                           ; Switch size 1, requested type "space"
 33057                           ; Number of cases is 1, Range of values is 0 to 0
 33058                           ; switch strategies available:
 33059                           ; Name         Instructions Cycles
 33060                           ; simple_byte            4     3 (average)
 33061                           ;	Chosen strategy is simple_byte
 33062  003550  5004               	movf	??__get_root+1,w,c
 33063  003552  0A00               	xorlw	0	; case 0
 33064  003554  A4D8               	btfss	status,2,c
 33065  003556  D7F6               	goto	l2212
 33066                           
 33067                           ; Switch size 1, requested type "space"
 33068                           ; Number of cases is 20, Range of values is 11 to 31
 33069                           ; switch strategies available:
 33070                           ; Name         Instructions Cycles
 33071                           ; simple_byte           61    31 (average)
 33072                           ;	Chosen strategy is simple_byte
 33073  003558  5003               	movf	??__get_root,w,c
 33074  00355A  0A0B               	xorlw	11	; case 11
 33075  00355C  B4D8               	btfsc	status,2,c
 33076  00355E  D7CA               	goto	l2192
 33077  003560  0A06               	xorlw	6	; case 13
 33078  003562  B4D8               	btfsc	status,2,c
 33079  003564  D7C9               	goto	l2193
 33080  003566  0A03               	xorlw	3	; case 14
 33081  003568  B4D8               	btfsc	status,2,c
 33082  00356A  D7C8               	goto	l2194
 33083  00356C  0A01               	xorlw	1	; case 15
 33084  00356E  B4D8               	btfsc	status,2,c
 33085  003570  D7C7               	goto	l2195
 33086  003572  0A1F               	xorlw	31	; case 16
 33087  003574  B4D8               	btfsc	status,2,c
 33088  003576  D7C6               	goto	l2196
 33089  003578  0A01               	xorlw	1	; case 17
 33090  00357A  B4D8               	btfsc	status,2,c
 33091  00357C  D7C5               	goto	l2197
 33092  00357E  0A03               	xorlw	3	; case 18
 33093  003580  B4D8               	btfsc	status,2,c
 33094  003582  D7C4               	goto	l2198
 33095  003584  0A01               	xorlw	1	; case 19
 33096  003586  B4D8               	btfsc	status,2,c
 33097  003588  D7C3               	goto	l2199
 33098  00358A  0A07               	xorlw	7	; case 20
 33099  00358C  B4D8               	btfsc	status,2,c
 33100  00358E  D7C2               	goto	l2200
 33101  003590  0A01               	xorlw	1	; case 21
 33102  003592  B4D8               	btfsc	status,2,c
 33103  003594  D7C1               	goto	l2201
 33104  003596  0A03               	xorlw	3	; case 22
 33105  003598  B4D8               	btfsc	status,2,c
 33106  00359A  D7C0               	goto	l2202
 33107  00359C  0A01               	xorlw	1	; case 23
 33108  00359E  B4D8               	btfsc	status,2,c
 33109  0035A0  D7BF               	goto	l2203
 33110  0035A2  0A0F               	xorlw	15	; case 24
 33111  0035A4  B4D8               	btfsc	status,2,c
 33112  0035A6  D7BE               	goto	l2204
 33113  0035A8  0A01               	xorlw	1	; case 25
 33114  0035AA  B4D8               	btfsc	status,2,c
 33115  0035AC  D7BD               	goto	l2205
 33116  0035AE  0A03               	xorlw	3	; case 26
 33117  0035B0  B4D8               	btfsc	status,2,c
 33118  0035B2  D7BC               	goto	l2206
 33119  0035B4  0A01               	xorlw	1	; case 27
 33120  0035B6  B4D8               	btfsc	status,2,c
 33121  0035B8  D7BB               	goto	l2207
 33122  0035BA  0A07               	xorlw	7	; case 28
 33123  0035BC  B4D8               	btfsc	status,2,c
 33124  0035BE  D7BA               	goto	l2208
 33125  0035C0  0A01               	xorlw	1	; case 29
 33126  0035C2  B4D8               	btfsc	status,2,c
 33127  0035C4  D7B9               	goto	l2209
 33128  0035C6  0A03               	xorlw	3	; case 30
 33129  0035C8  B4D8               	btfsc	status,2,c
 33130  0035CA  D7B8               	goto	l2210
 33131  0035CC  0A01               	xorlw	1	; case 31
 33132  0035CE  B4D8               	btfsc	status,2,c
 33133  0035D0  D7B7               	goto	l2211
 33134  0035D2  D7B8               	goto	l2212
 33135  0035D4                     l2213:
 33136                           
 33137                           ;fat16.c: 1204: };fat16.c: 1205: return 0X00;
 33138  0035D4  0E00               	movlw	0
 33139  0035D6  0012               	return	
 33140  0035D8                     __end_of__get_root:
 33141                           	opt stack 0
 33142                           tosu	equ	0xFFF
 33143                           tosh	equ	0xFFE
 33144                           tosl	equ	0xFFD
 33145                           pclath	equ	0xFFA
 33146                           tblptru	equ	0xFF8
 33147                           tblptrh	equ	0xFF7
 33148                           tblptrl	equ	0xFF6
 33149                           tablat	equ	0xFF5
 33150                           prodh	equ	0xFF4
 33151                           prodl	equ	0xFF3
 33152                           intcon	equ	0xFF2
 33153                           intcon2	equ	0xFF1
 33154                           intcon3	equ	0xFF0
 33155                           indf0	equ	0xFEF
 33156                           postinc0	equ	0xFEE
 33157                           fsr0h	equ	0xFEA
 33158                           fsr0l	equ	0xFE9
 33159                           wreg	equ	0xFE8
 33160                           indf1	equ	0xFE7
 33161                           postdec1	equ	0xFE5
 33162                           plusw1	equ	0xFE3
 33163                           fsr1h	equ	0xFE2
 33164                           fsr1l	equ	0xFE1
 33165                           indf2	equ	0xFDF
 33166                           postinc2	equ	0xFDE
 33167                           postdec2	equ	0xFDD
 33168                           plusw2	equ	0xFDB
 33169                           fsr2h	equ	0xFDA
 33170                           fsr2l	equ	0xFD9
 33171                           status	equ	0xFD8
 33172                           
 33173 ;; *************** function __get_mbr *****************
 33174 ;; Defined at:
 33175 ;;		line 962 in file "fat16.c"
 33176 ;; Parameters:    Size  Location     Type
 33177 ;;  idx             2    0[COMRAM] unsigned int 
 33178 ;; Auto vars:     Size  Location     Type
 33179 ;;		None
 33180 ;; Return value:  Size  Location     Type
 33181 ;;                  1    wreg      unsigned char 
 33182 ;; Registers used:
 33183 ;;		wreg, status,2, status,0
 33184 ;; Tracked objects:
 33185 ;;		On entry : 0/0
 33186 ;;		On exit  : 0/0
 33187 ;;		Unchanged: 0/0
 33188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33193 ;;Total ram usage:        4 bytes
 33194 ;; Hardware stack levels used:    1
 33195 ;; This function calls:
 33196 ;;		Nothing
 33197 ;; This function is called by:
 33198 ;;		_fat_get_format_status
 33199 ;;		_fat_format
 33200 ;; This function uses a non-reentrant model
 33201 ;;
 33202                           
 33203                           	psect	text164
 33204  005ADC                     __ptext164:
 33205                           	opt stack 0
 33206  005ADC                     __get_mbr:
 33207                           	opt stack 27
 33208                           
 33209                           ;fat16.c: 964: switch (idx)
 33210                           
 33211                           ;incstack = 0
 33212  005ADC  D026               	goto	l2094
 33213  005ADE                     
 33214                           ;fat16.c: 967: return 0x80;
 33215  005ADE  0E80               	movlw	128
 33216  005AE0  0012               	return	
 33217  005AE2                     
 33218                           ;fat16.c: 969: return 0;
 33219  005AE2  0E00               	movlw	0
 33220  005AE4  0012               	return	
 33221  005AE6                     
 33222                           ;fat16.c: 971: return 2;
 33223  005AE6  0E02               	movlw	2
 33224  005AE8  0012               	return	
 33225  005AEA                     
 33226                           ;fat16.c: 973: return 0;
 33227  005AEA  0E00               	movlw	0
 33228  005AEC  0012               	return	
 33229  005AEE                     
 33230                           ;fat16.c: 975: return 0x04;
 33231  005AEE  0E04               	movlw	4
 33232  005AF0  0012               	return	
 33233  005AF2                     
 33234                           ;fat16.c: 977: return 2;
 33235  005AF2  0E02               	movlw	2
 33236  005AF4  0012               	return	
 33237  005AF6                     
 33238                           ;fat16.c: 979: return 3;
 33239  005AF6  0E03               	movlw	3
 33240  005AF8  0012               	return	
 33241  005AFA                     
 33242                           ;fat16.c: 981: return 8;
 33243  005AFA  0E08               	movlw	8
 33244  005AFC  0012               	return	
 33245  005AFE                     
 33246                           ;fat16.c: 983: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
 33247  005AFE  0E01               	movlw	1
 33248  005B00  0012               	return	
 33249  005B02                     
 33250                           ;fat16.c: 985: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
 33251  005B02  0E00               	movlw	0
 33252  005B04  0012               	return	
 33253  005B06                     
 33254                           ;fat16.c: 987: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
 33255  005B06  0E00               	movlw	0
 33256  005B08  0012               	return	
 33257  005B0A                     
 33258                           ;fat16.c: 989: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
 33259  005B0A  0E00               	movlw	0
 33260  005B0C  0012               	return	
 33261  005B0E                     
 33262                           ;fat16.c: 991: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
 33263  005B0E  0EFF               	movlw	255
 33264  005B10  0012               	return	
 33265  005B12                     
 33266                           ;fat16.c: 993: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
 33267  005B12  0E1F               	movlw	31
 33268  005B14  0012               	return	
 33269  005B16                     
 33270                           ;fat16.c: 995: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
 33271  005B16  0E00               	movlw	0
 33272  005B18  0012               	return	
 33273  005B1A                     
 33274                           ;fat16.c: 997: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
 33275  005B1A  0E00               	movlw	0
 33276  005B1C  0012               	return	
 33277  005B1E                     
 33278                           ;fat16.c: 999: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 33279  005B1E  0E55               	movlw	85
 33280  005B20  0012               	return	
 33281  005B22                     
 33282                           ;fat16.c: 1001: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 33283  005B22  0EAA               	movlw	170
 33284  005B24  0012               	return	
 33285  005B26                     
 33286                           ;fat16.c: 1003: return 0X00;
 33287  005B26  0E00               	movlw	0
 33288                           
 33289                           ;fat16.c: 1004: }
 33290  005B28  0012               	return	
 33291  005B2A                     l2094:
 33292  005B2A  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 33293  005B2E  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 33294                           
 33295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33296                           ; Switch size 1, requested type "space"
 33297                           ; Number of cases is 1, Range of values is 1 to 1
 33298                           ; switch strategies available:
 33299                           ; Name         Instructions Cycles
 33300                           ; simple_byte            4     3 (average)
 33301                           ;	Chosen strategy is simple_byte
 33302  005B32  5004               	movf	??__get_mbr+1,w,c
 33303  005B34  0A01               	xorlw	1	; case 1
 33304  005B36  A4D8               	btfss	status,2,c
 33305  005B38  D7F6               	goto	l2114
 33306                           
 33307                           ; Switch size 1, requested type "space"
 33308                           ; Number of cases is 18, Range of values is 190 to 255
 33309                           ; switch strategies available:
 33310                           ; Name         Instructions Cycles
 33311                           ; simple_byte           55    28 (average)
 33312                           ;	Chosen strategy is simple_byte
 33313  005B3A  5003               	movf	??__get_mbr,w,c
 33314  005B3C  0ABE               	xorlw	190	; case 190
 33315  005B3E  B4D8               	btfsc	status,2,c
 33316  005B40  D7CE               	goto	l2095
 33317  005B42  0A01               	xorlw	1	; case 191
 33318  005B44  B4D8               	btfsc	status,2,c
 33319  005B46  D7CD               	goto	l2097
 33320  005B48  0A7F               	xorlw	127	; case 192
 33321  005B4A  B4D8               	btfsc	status,2,c
 33322  005B4C  D7CC               	goto	l2098
 33323  005B4E  0A01               	xorlw	1	; case 193
 33324  005B50  B4D8               	btfsc	status,2,c
 33325  005B52  D7CB               	goto	l2099
 33326  005B54  0A03               	xorlw	3	; case 194
 33327  005B56  B4D8               	btfsc	status,2,c
 33328  005B58  D7CA               	goto	l2100
 33329  005B5A  0A01               	xorlw	1	; case 195
 33330  005B5C  B4D8               	btfsc	status,2,c
 33331  005B5E  D7C9               	goto	l2101
 33332  005B60  0A07               	xorlw	7	; case 196
 33333  005B62  B4D8               	btfsc	status,2,c
 33334  005B64  D7C8               	goto	l2102
 33335  005B66  0A01               	xorlw	1	; case 197
 33336  005B68  B4D8               	btfsc	status,2,c
 33337  005B6A  D7C7               	goto	l2103
 33338  005B6C  0A03               	xorlw	3	; case 198
 33339  005B6E  B4D8               	btfsc	status,2,c
 33340  005B70  D7C6               	goto	l2104
 33341  005B72  0A01               	xorlw	1	; case 199
 33342  005B74  B4D8               	btfsc	status,2,c
 33343  005B76  D7C5               	goto	l2105
 33344  005B78  0A0F               	xorlw	15	; case 200
 33345  005B7A  B4D8               	btfsc	status,2,c
 33346  005B7C  D7C4               	goto	l2106
 33347  005B7E  0A01               	xorlw	1	; case 201
 33348  005B80  B4D8               	btfsc	status,2,c
 33349  005B82  D7C3               	goto	l2107
 33350  005B84  0A03               	xorlw	3	; case 202
 33351  005B86  B4D8               	btfsc	status,2,c
 33352  005B88  D7C2               	goto	l2108
 33353  005B8A  0A01               	xorlw	1	; case 203
 33354  005B8C  B4D8               	btfsc	status,2,c
 33355  005B8E  D7C1               	goto	l2109
 33356  005B90  0A07               	xorlw	7	; case 204
 33357  005B92  B4D8               	btfsc	status,2,c
 33358  005B94  D7C0               	goto	l2110
 33359  005B96  0A01               	xorlw	1	; case 205
 33360  005B98  B4D8               	btfsc	status,2,c
 33361  005B9A  D7BF               	goto	l2111
 33362  005B9C  0A33               	xorlw	51	; case 254
 33363  005B9E  B4D8               	btfsc	status,2,c
 33364  005BA0  D7BE               	goto	l2112
 33365  005BA2  0A01               	xorlw	1	; case 255
 33366  005BA4  B4D8               	btfsc	status,2,c
 33367  005BA6  D7BD               	goto	l2113
 33368  005BA8  D7BE               	goto	l2114
 33369  005BAA                     __end_of__get_mbr:
 33370                           	opt stack 0
 33371                           tosu	equ	0xFFF
 33372                           tosh	equ	0xFFE
 33373                           tosl	equ	0xFFD
 33374                           pclath	equ	0xFFA
 33375                           tblptru	equ	0xFF8
 33376                           tblptrh	equ	0xFF7
 33377                           tblptrl	equ	0xFF6
 33378                           tablat	equ	0xFF5
 33379                           prodh	equ	0xFF4
 33380                           prodl	equ	0xFF3
 33381                           intcon	equ	0xFF2
 33382                           intcon2	equ	0xFF1
 33383                           intcon3	equ	0xFF0
 33384                           indf0	equ	0xFEF
 33385                           postinc0	equ	0xFEE
 33386                           fsr0h	equ	0xFEA
 33387                           fsr0l	equ	0xFE9
 33388                           wreg	equ	0xFE8
 33389                           indf1	equ	0xFE7
 33390                           postdec1	equ	0xFE5
 33391                           plusw1	equ	0xFE3
 33392                           fsr1h	equ	0xFE2
 33393                           fsr1l	equ	0xFE1
 33394                           indf2	equ	0xFDF
 33395                           postinc2	equ	0xFDE
 33396                           postdec2	equ	0xFDD
 33397                           plusw2	equ	0xFDB
 33398                           fsr2h	equ	0xFDA
 33399                           fsr2l	equ	0xFD9
 33400                           status	equ	0xFD8
 33401                           
 33402 ;; *************** function __get_fbr *****************
 33403 ;; Defined at:
 33404 ;;		line 1007 in file "fat16.c"
 33405 ;; Parameters:    Size  Location     Type
 33406 ;;  idx             2    0[COMRAM] unsigned int 
 33407 ;; Auto vars:     Size  Location     Type
 33408 ;;		None
 33409 ;; Return value:  Size  Location     Type
 33410 ;;                  1    wreg      unsigned char 
 33411 ;; Registers used:
 33412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 33413 ;; Tracked objects:
 33414 ;;		On entry : 0/0
 33415 ;;		On exit  : 0/0
 33416 ;;		Unchanged: 0/0
 33417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33422 ;;Total ram usage:        4 bytes
 33423 ;; Hardware stack levels used:    1
 33424 ;; This function calls:
 33425 ;;		Nothing
 33426 ;; This function is called by:
 33427 ;;		_fat_get_format_status
 33428 ;;		_fat_format
 33429 ;; This function uses a non-reentrant model
 33430 ;;
 33431                           
 33432                           	psect	text165
 33433  001DA2                     __ptext165:
 33434                           	opt stack 0
 33435  001DA2                     __get_fbr:
 33436                           	opt stack 27
 33437                           
 33438                           ;fat16.c: 1009: switch (idx)
 33439                           
 33440                           ;incstack = 0
 33441  001DA2  D091               	goto	l2118
 33442  001DA4                     
 33443                           ;fat16.c: 1012: return 0xEB;
 33444  001DA4  0EEB               	movlw	235
 33445  001DA6  0012               	return	
 33446  001DA8                     
 33447                           ;fat16.c: 1014: return 0x3C;
 33448  001DA8  0E3C               	movlw	60
 33449  001DAA  0012               	return	
 33450  001DAC                     
 33451                           ;fat16.c: 1016: return 0x90;
 33452  001DAC  0E90               	movlw	144
 33453  001DAE  0012               	return	
 33454  001DB0                     
 33455                           ;fat16.c: 1018: return "MSDOS5.0"[0];
 33456  001DB0  0EF2               	movlw	low STR_1
 33457  001DB2  6EF6               	movwf	tblptrl,c
 33458  001DB4                     	if	1	;There is more than 1 active tblptr byte
 33459  001DB4  0E8F               	movlw	high STR_1
 33460  001DB6  6EF7               	movwf	tblptrh,c
 33461  001DB8                     	endif
 33462  001DB8                     	if	1	;There are 3 active tblptr bytes
 33463  001DB8  0E00               	movlw	low (STR_1 shr (0+16))
 33464  001DBA  6EF8               	movwf	tblptru,c
 33465  001DBC                     	endif
 33466  001DBC  0008               	tblrd		*
 33467  001DBE  50F5               	movf	tablat,w,c
 33468  001DC0  0012               	return	
 33469  001DC2                     
 33470                           ;fat16.c: 1020: return "MSDOS5.0"[1];
 33471  001DC2  0EF3               	movlw	low (STR_1+1)
 33472  001DC4  6EF6               	movwf	tblptrl,c
 33473  001DC6  0E8F               	movlw	high (STR_1+1)
 33474  001DC8  6EF7               	movwf	tblptrh,c
 33475  001DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33476  001DCA  6AF8               	clrf	tblptru,c
 33477  001DCC                     	endif
 33478  001DCC                     	if	0	;tblptru may be non-zero
 33479  001DCC                     	endif
 33480  001DCC  0008               	tblrd		*
 33481  001DCE  50F5               	movf	tablat,w,c
 33482  001DD0  0012               	return	
 33483  001DD2                     
 33484                           ;fat16.c: 1022: return "MSDOS5.0"[2];
 33485  001DD2  0EF4               	movlw	low (STR_1+2)
 33486  001DD4  6EF6               	movwf	tblptrl,c
 33487  001DD6  0E8F               	movlw	high (STR_1+2)
 33488  001DD8  6EF7               	movwf	tblptrh,c
 33489  001DDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33490  001DDA  6AF8               	clrf	tblptru,c
 33491  001DDC                     	endif
 33492  001DDC                     	if	0	;tblptru may be non-zero
 33493  001DDC                     	endif
 33494  001DDC  0008               	tblrd		*
 33495  001DDE  50F5               	movf	tablat,w,c
 33496  001DE0  0012               	return	
 33497  001DE2                     
 33498                           ;fat16.c: 1024: return "MSDOS5.0"[3];
 33499  001DE2  0EF5               	movlw	low (STR_1+3)
 33500  001DE4  6EF6               	movwf	tblptrl,c
 33501  001DE6  0E8F               	movlw	high (STR_1+3)
 33502  001DE8  6EF7               	movwf	tblptrh,c
 33503  001DEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33504  001DEA  6AF8               	clrf	tblptru,c
 33505  001DEC                     	endif
 33506  001DEC                     	if	0	;tblptru may be non-zero
 33507  001DEC                     	endif
 33508  001DEC  0008               	tblrd		*
 33509  001DEE  50F5               	movf	tablat,w,c
 33510  001DF0  0012               	return	
 33511  001DF2                     
 33512                           ;fat16.c: 1026: return "MSDOS5.0"[4];
 33513  001DF2  0EF6               	movlw	low (STR_1+4)
 33514  001DF4  6EF6               	movwf	tblptrl,c
 33515  001DF6  0E8F               	movlw	high (STR_1+4)
 33516  001DF8  6EF7               	movwf	tblptrh,c
 33517  001DFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33518  001DFA  6AF8               	clrf	tblptru,c
 33519  001DFC                     	endif
 33520  001DFC                     	if	0	;tblptru may be non-zero
 33521  001DFC                     	endif
 33522  001DFC  0008               	tblrd		*
 33523  001DFE  50F5               	movf	tablat,w,c
 33524  001E00  0012               	return	
 33525  001E02                     
 33526                           ;fat16.c: 1028: return "MSDOS5.0"[5];
 33527  001E02  0EF7               	movlw	low (STR_1+5)
 33528  001E04  6EF6               	movwf	tblptrl,c
 33529  001E06  0E8F               	movlw	high (STR_1+5)
 33530  001E08  6EF7               	movwf	tblptrh,c
 33531  001E0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33532  001E0A  6AF8               	clrf	tblptru,c
 33533  001E0C                     	endif
 33534  001E0C                     	if	0	;tblptru may be non-zero
 33535  001E0C                     	endif
 33536  001E0C  0008               	tblrd		*
 33537  001E0E  50F5               	movf	tablat,w,c
 33538  001E10  0012               	return	
 33539  001E12                     
 33540                           ;fat16.c: 1030: return "MSDOS5.0"[6];
 33541  001E12  0EF8               	movlw	low (STR_1+6)
 33542  001E14  6EF6               	movwf	tblptrl,c
 33543  001E16  0E8F               	movlw	high (STR_1+6)
 33544  001E18  6EF7               	movwf	tblptrh,c
 33545  001E1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33546  001E1A  6AF8               	clrf	tblptru,c
 33547  001E1C                     	endif
 33548  001E1C                     	if	0	;tblptru may be non-zero
 33549  001E1C                     	endif
 33550  001E1C  0008               	tblrd		*
 33551  001E1E  50F5               	movf	tablat,w,c
 33552  001E20  0012               	return	
 33553  001E22                     
 33554                           ;fat16.c: 1032: return "MSDOS5.0"[7];
 33555  001E22  0EF9               	movlw	low (STR_1+7)
 33556  001E24  6EF6               	movwf	tblptrl,c
 33557  001E26  0E8F               	movlw	high (STR_1+7)
 33558  001E28  6EF7               	movwf	tblptrh,c
 33559  001E2A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33560  001E2A  6AF8               	clrf	tblptru,c
 33561  001E2C                     	endif
 33562  001E2C                     	if	0	;tblptru may be non-zero
 33563  001E2C                     	endif
 33564  001E2C  0008               	tblrd		*
 33565  001E2E  50F5               	movf	tablat,w,c
 33566  001E30  0012               	return	
 33567  001E32                     
 33568                           ;fat16.c: 1034: return ((unsigned char)((((uint16_t)512))&0xFF));
 33569  001E32  0E00               	movlw	0
 33570  001E34  0012               	return	
 33571  001E36                     
 33572                           ;fat16.c: 1036: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 33573  001E36  0E02               	movlw	2
 33574  001E38  0012               	return	
 33575  001E3A                     
 33576                           ;fat16.c: 1038: return 1;
 33577  001E3A  0E01               	movlw	1
 33578  001E3C  0012               	return	
 33579  001E3E                     
 33580                           ;fat16.c: 1040: return ((unsigned char)((((uint16_t)1))&0xFF));
 33581  001E3E  0E01               	movlw	1
 33582  001E40  0012               	return	
 33583  001E42                     
 33584                           ;fat16.c: 1042: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 33585  001E42  0E00               	movlw	0
 33586  001E44  0012               	return	
 33587  001E46                     
 33588                           ;fat16.c: 1044: return 1;
 33589  001E46  0E01               	movlw	1
 33590  001E48  0012               	return	
 33591  001E4A                     
 33592                           ;fat16.c: 1046: return ((unsigned char)((((uint16_t)64))&0xFF));
 33593  001E4A  0E40               	movlw	64
 33594  001E4C  0012               	return	
 33595  001E4E                     
 33596                           ;fat16.c: 1048: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 33597  001E4E  0E00               	movlw	0
 33598  001E50  0012               	return	
 33599  001E52                     
 33600                           ;fat16.c: 1050: return ((unsigned char)((((uint16_t)8191))&0xFF));
 33601  001E52  0EFF               	movlw	255
 33602  001E54  0012               	return	
 33603  001E56                     
 33604                           ;fat16.c: 1052: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 33605  001E56  0E1F               	movlw	31
 33606  001E58  0012               	return	
 33607  001E5A                     
 33608                           ;fat16.c: 1054: return 0XF8;
 33609  001E5A  0EF8               	movlw	248
 33610  001E5C  0012               	return	
 33611  001E5E                     
 33612                           ;fat16.c: 1056: return ((unsigned char)((((uint16_t)32))&0xFF));
 33613  001E5E  0E20               	movlw	32
 33614  001E60  0012               	return	
 33615  001E62                     
 33616                           ;fat16.c: 1058: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 33617  001E62  0E00               	movlw	0
 33618  001E64  0012               	return	
 33619  001E66                     
 33620                           ;fat16.c: 1060: return ((unsigned char)((((uint16_t)63))&0xFF));
 33621  001E66  0E3F               	movlw	63
 33622  001E68  0012               	return	
 33623  001E6A                     
 33624                           ;fat16.c: 1062: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 33625  001E6A  0E00               	movlw	0
 33626  001E6C  0012               	return	
 33627  001E6E                     
 33628                           ;fat16.c: 1064: return ((unsigned char)((((uint16_t)16))&0xFF));
 33629  001E6E  0E10               	movlw	16
 33630  001E70  0012               	return	
 33631  001E72                     
 33632                           ;fat16.c: 1066: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 33633  001E72  0E00               	movlw	0
 33634  001E74  0012               	return	
 33635  001E76                     
 33636                           ;fat16.c: 1068: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 33637  001E76  0E00               	movlw	0
 33638  001E78  0012               	return	
 33639  001E7A                     
 33640                           ;fat16.c: 1070: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 33641  001E7A  0E00               	movlw	0
 33642  001E7C  0012               	return	
 33643  001E7E                     
 33644                           ;fat16.c: 1072: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 33645  001E7E  0E00               	movlw	0
 33646  001E80  0012               	return	
 33647  001E82                     
 33648                           ;fat16.c: 1074: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 33649  001E82  0E00               	movlw	0
 33650  001E84  0012               	return	
 33651  001E86                     
 33652                           ;fat16.c: 1076: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 33653  001E86  0E01               	movlw	1
 33654  001E88  0012               	return	
 33655  001E8A                     
 33656                           ;fat16.c: 1078: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 33657  001E8A  0E00               	movlw	0
 33658  001E8C  0012               	return	
 33659  001E8E                     
 33660                           ;fat16.c: 1080: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 33661  001E8E  0E22               	movlw	34
 33662  001E90  0012               	return	
 33663  001E92                     
 33664                           ;fat16.c: 1082: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 33665  001E92  0E00               	movlw	0
 33666  001E94  0012               	return	
 33667  001E96                     
 33668                           ;fat16.c: 1086: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 33669                           
 33670                           ;fat16.c: 1085: case 0x2F:
 33671  001E96  0E00               	movlw	0
 33672  001E98  0012               	return	
 33673  001E9A                     
 33674                           ;fat16.c: 1088: return 'F';
 33675  001E9A  0E46               	movlw	70
 33676  001E9C  0012               	return	
 33677  001E9E                     
 33678                           ;fat16.c: 1090: return 'A';
 33679  001E9E  0E41               	movlw	65
 33680  001EA0  0012               	return	
 33681  001EA2                     
 33682                           ;fat16.c: 1092: return 'T';
 33683  001EA2  0E54               	movlw	84
 33684  001EA4  0012               	return	
 33685  001EA6                     
 33686                           ;fat16.c: 1094: return '1';
 33687  001EA6  0E31               	movlw	49
 33688  001EA8  0012               	return	
 33689  001EAA                     
 33690                           ;fat16.c: 1096: return '6';
 33691  001EAA  0E36               	movlw	54
 33692  001EAC  0012               	return	
 33693  001EAE                     
 33694                           ;fat16.c: 1098: return ' ';
 33695  001EAE  0E20               	movlw	32
 33696  001EB0  0012               	return	
 33697  001EB2                     
 33698                           ;fat16.c: 1100: return ' ';
 33699  001EB2  0E20               	movlw	32
 33700  001EB4  0012               	return	
 33701  001EB6                     
 33702                           ;fat16.c: 1102: return ' ';
 33703  001EB6  0E20               	movlw	32
 33704  001EB8  0012               	return	
 33705  001EBA                     
 33706                           ;fat16.c: 1104: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 33707  001EBA  0E55               	movlw	85
 33708  001EBC  0012               	return	
 33709  001EBE                     
 33710                           ;fat16.c: 1106: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 33711  001EBE  0EAA               	movlw	170
 33712  001EC0  0012               	return	
 33713  001EC2                     
 33714                           ;fat16.c: 1108: return 0X00;
 33715  001EC2  0E00               	movlw	0
 33716                           
 33717                           ;fat16.c: 1109: }
 33718  001EC4  0012               	return	
 33719  001EC6                     l2118:
 33720  001EC6  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 33721  001ECA  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 33722                           
 33723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 33724                           ; Switch size 1, requested type "space"
 33725                           ; Number of cases is 2, Range of values is 0 to 1
 33726                           ; switch strategies available:
 33727                           ; Name         Instructions Cycles
 33728                           ; simple_byte            7     4 (average)
 33729                           ;	Chosen strategy is simple_byte
 33730  001ECE  5004               	movf	??__get_fbr+1,w,c
 33731  001ED0  0A00               	xorlw	0	; case 0
 33732  001ED2  B4D8               	btfsc	status,2,c
 33733  001ED4  D004               	goto	l15879
 33734  001ED6  0A01               	xorlw	1	; case 1
 33735  001ED8  B4D8               	btfsc	status,2,c
 33736  001EDA  D08D               	goto	l15881
 33737  001EDC  D7F2               	goto	l2168
 33738  001EDE                     l15879:
 33739                           
 33740                           ; Switch size 1, requested type "space"
 33741                           ; Number of cases is 46, Range of values is 0 to 61
 33742                           ; switch strategies available:
 33743                           ; Name         Instructions Cycles
 33744                           ; simple_byte          139    70 (average)
 33745                           ;	Chosen strategy is simple_byte
 33746  001EDE  5003               	movf	??__get_fbr,w,c
 33747  001EE0  0A00               	xorlw	0	; case 0
 33748  001EE2  B4D8               	btfsc	status,2,c
 33749  001EE4  D75F               	goto	l2119
 33750  001EE6  0A01               	xorlw	1	; case 1
 33751  001EE8  B4D8               	btfsc	status,2,c
 33752  001EEA  D75E               	goto	l2121
 33753  001EEC  0A03               	xorlw	3	; case 2
 33754  001EEE  B4D8               	btfsc	status,2,c
 33755  001EF0  D75D               	goto	l2122
 33756  001EF2  0A01               	xorlw	1	; case 3
 33757  001EF4  B4D8               	btfsc	status,2,c
 33758  001EF6  D75C               	goto	l2123
 33759  001EF8  0A07               	xorlw	7	; case 4
 33760  001EFA  B4D8               	btfsc	status,2,c
 33761  001EFC  D762               	goto	l2124
 33762  001EFE  0A01               	xorlw	1	; case 5
 33763  001F00  B4D8               	btfsc	status,2,c
 33764  001F02  D767               	goto	l2125
 33765  001F04  0A03               	xorlw	3	; case 6
 33766  001F06  B4D8               	btfsc	status,2,c
 33767  001F08  D76C               	goto	l2126
 33768  001F0A  0A01               	xorlw	1	; case 7
 33769  001F0C  B4D8               	btfsc	status,2,c
 33770  001F0E  D771               	goto	l2127
 33771  001F10  0A0F               	xorlw	15	; case 8
 33772  001F12  B4D8               	btfsc	status,2,c
 33773  001F14  D776               	goto	l2128
 33774  001F16  0A01               	xorlw	1	; case 9
 33775  001F18  B4D8               	btfsc	status,2,c
 33776  001F1A  D77B               	goto	l2129
 33777  001F1C  0A03               	xorlw	3	; case 10
 33778  001F1E  B4D8               	btfsc	status,2,c
 33779  001F20  D780               	goto	l2130
 33780  001F22  0A01               	xorlw	1	; case 11
 33781  001F24  B4D8               	btfsc	status,2,c
 33782  001F26  D785               	goto	l2131
 33783  001F28  0A07               	xorlw	7	; case 12
 33784  001F2A  B4D8               	btfsc	status,2,c
 33785  001F2C  D784               	goto	l2132
 33786  001F2E  0A01               	xorlw	1	; case 13
 33787  001F30  B4D8               	btfsc	status,2,c
 33788  001F32  D783               	goto	l2133
 33789  001F34  0A03               	xorlw	3	; case 14
 33790  001F36  B4D8               	btfsc	status,2,c
 33791  001F38  D782               	goto	l2134
 33792  001F3A  0A01               	xorlw	1	; case 15
 33793  001F3C  B4D8               	btfsc	status,2,c
 33794  001F3E  D781               	goto	l2135
 33795  001F40  0A1F               	xorlw	31	; case 16
 33796  001F42  B4D8               	btfsc	status,2,c
 33797  001F44  D780               	goto	l2136
 33798  001F46  0A01               	xorlw	1	; case 17
 33799  001F48  B4D8               	btfsc	status,2,c
 33800  001F4A  D77F               	goto	l2137
 33801  001F4C  0A03               	xorlw	3	; case 18
 33802  001F4E  B4D8               	btfsc	status,2,c
 33803  001F50  D77E               	goto	l2138
 33804  001F52  0A01               	xorlw	1	; case 19
 33805  001F54  B4D8               	btfsc	status,2,c
 33806  001F56  D77D               	goto	l2139
 33807  001F58  0A07               	xorlw	7	; case 20
 33808  001F5A  B4D8               	btfsc	status,2,c
 33809  001F5C  D77C               	goto	l2140
 33810  001F5E  0A01               	xorlw	1	; case 21
 33811  001F60  B4D8               	btfsc	status,2,c
 33812  001F62  D77B               	goto	l2141
 33813  001F64  0A03               	xorlw	3	; case 22
 33814  001F66  B4D8               	btfsc	status,2,c
 33815  001F68  D77A               	goto	l2142
 33816  001F6A  0A01               	xorlw	1	; case 23
 33817  001F6C  B4D8               	btfsc	status,2,c
 33818  001F6E  D779               	goto	l2143
 33819  001F70  0A0F               	xorlw	15	; case 24
 33820  001F72  B4D8               	btfsc	status,2,c
 33821  001F74  D778               	goto	l2144
 33822  001F76  0A01               	xorlw	1	; case 25
 33823  001F78  B4D8               	btfsc	status,2,c
 33824  001F7A  D777               	goto	l2145
 33825  001F7C  0A03               	xorlw	3	; case 26
 33826  001F7E  B4D8               	btfsc	status,2,c
 33827  001F80  D776               	goto	l2146
 33828  001F82  0A01               	xorlw	1	; case 27
 33829  001F84  B4D8               	btfsc	status,2,c
 33830  001F86  D775               	goto	l2147
 33831  001F88  0A07               	xorlw	7	; case 28
 33832  001F8A  B4D8               	btfsc	status,2,c
 33833  001F8C  D774               	goto	l2148
 33834  001F8E  0A01               	xorlw	1	; case 29
 33835  001F90  B4D8               	btfsc	status,2,c
 33836  001F92  D773               	goto	l2149
 33837  001F94  0A03               	xorlw	3	; case 30
 33838  001F96  B4D8               	btfsc	status,2,c
 33839  001F98  D772               	goto	l2150
 33840  001F9A  0A01               	xorlw	1	; case 31
 33841  001F9C  B4D8               	btfsc	status,2,c
 33842  001F9E  D771               	goto	l2151
 33843  001FA0  0A37               	xorlw	55	; case 40
 33844  001FA2  B4D8               	btfsc	status,2,c
 33845  001FA4  D770               	goto	l2152
 33846  001FA6  0A01               	xorlw	1	; case 41
 33847  001FA8  B4D8               	btfsc	status,2,c
 33848  001FAA  D76F               	goto	l2153
 33849  001FAC  0A05               	xorlw	5	; case 44
 33850  001FAE  B4D8               	btfsc	status,2,c
 33851  001FB0  D76E               	goto	l2154
 33852  001FB2  0A01               	xorlw	1	; case 45
 33853  001FB4  B4D8               	btfsc	status,2,c
 33854  001FB6  D76D               	goto	l2155
 33855  001FB8  0A03               	xorlw	3	; case 46
 33856  001FBA  B4D8               	btfsc	status,2,c
 33857  001FBC  D76C               	goto	l2156
 33858  001FBE  0A01               	xorlw	1	; case 47
 33859  001FC0  B4D8               	btfsc	status,2,c
 33860  001FC2  D769               	goto	l2156
 33861  001FC4  0A19               	xorlw	25	; case 54
 33862  001FC6  B4D8               	btfsc	status,2,c
 33863  001FC8  D768               	goto	l2158
 33864  001FCA  0A01               	xorlw	1	; case 55
 33865  001FCC  B4D8               	btfsc	status,2,c
 33866  001FCE  D767               	goto	l2159
 33867  001FD0  0A0F               	xorlw	15	; case 56
 33868  001FD2  B4D8               	btfsc	status,2,c
 33869  001FD4  D766               	goto	l2160
 33870  001FD6  0A01               	xorlw	1	; case 57
 33871  001FD8  B4D8               	btfsc	status,2,c
 33872  001FDA  D765               	goto	l2161
 33873  001FDC  0A03               	xorlw	3	; case 58
 33874  001FDE  B4D8               	btfsc	status,2,c
 33875  001FE0  D764               	goto	l2162
 33876  001FE2  0A01               	xorlw	1	; case 59
 33877  001FE4  B4D8               	btfsc	status,2,c
 33878  001FE6  D763               	goto	l2163
 33879  001FE8  0A07               	xorlw	7	; case 60
 33880  001FEA  B4D8               	btfsc	status,2,c
 33881  001FEC  D762               	goto	l2164
 33882  001FEE  0A01               	xorlw	1	; case 61
 33883  001FF0  B4D8               	btfsc	status,2,c
 33884  001FF2  D761               	goto	l2165
 33885  001FF4  D766               	goto	l2168
 33886  001FF6                     l15881:
 33887                           
 33888                           ; Switch size 1, requested type "space"
 33889                           ; Number of cases is 2, Range of values is 254 to 255
 33890                           ; switch strategies available:
 33891                           ; Name         Instructions Cycles
 33892                           ; simple_byte            7     4 (average)
 33893                           ;	Chosen strategy is simple_byte
 33894  001FF6  5003               	movf	??__get_fbr,w,c
 33895  001FF8  0AFE               	xorlw	254	; case 254
 33896  001FFA  B4D8               	btfsc	status,2,c
 33897  001FFC  D75E               	goto	l2166
 33898  001FFE  0A01               	xorlw	1	; case 255
 33899  002000  B4D8               	btfsc	status,2,c
 33900  002002  D75D               	goto	l2167
 33901  002004  D75E               	goto	l2168
 33902  002006                     __end_of__get_fbr:
 33903                           	opt stack 0
 33904                           tosu	equ	0xFFF
 33905                           tosh	equ	0xFFE
 33906                           tosl	equ	0xFFD
 33907                           pclath	equ	0xFFA
 33908                           tblptru	equ	0xFF8
 33909                           tblptrh	equ	0xFF7
 33910                           tblptrl	equ	0xFF6
 33911                           tablat	equ	0xFF5
 33912                           prodh	equ	0xFF4
 33913                           prodl	equ	0xFF3
 33914                           intcon	equ	0xFF2
 33915                           intcon2	equ	0xFF1
 33916                           intcon3	equ	0xFF0
 33917                           indf0	equ	0xFEF
 33918                           postinc0	equ	0xFEE
 33919                           fsr0h	equ	0xFEA
 33920                           fsr0l	equ	0xFE9
 33921                           wreg	equ	0xFE8
 33922                           indf1	equ	0xFE7
 33923                           postdec1	equ	0xFE5
 33924                           plusw1	equ	0xFE3
 33925                           fsr1h	equ	0xFE2
 33926                           fsr1l	equ	0xFE1
 33927                           indf2	equ	0xFDF
 33928                           postinc2	equ	0xFDE
 33929                           postdec2	equ	0xFDD
 33930                           plusw2	equ	0xFDB
 33931                           fsr2h	equ	0xFDA
 33932                           fsr2l	equ	0xFD9
 33933                           status	equ	0xFD8
 33934                           
 33935 ;; *************** function __get_fat *****************
 33936 ;; Defined at:
 33937 ;;		line 1112 in file "fat16.c"
 33938 ;; Parameters:    Size  Location     Type
 33939 ;;  idx             2    0[COMRAM] unsigned int 
 33940 ;; Auto vars:     Size  Location     Type
 33941 ;;		None
 33942 ;; Return value:  Size  Location     Type
 33943 ;;                  1    wreg      unsigned char 
 33944 ;; Registers used:
 33945 ;;		wreg, status,2, status,0
 33946 ;; Tracked objects:
 33947 ;;		On entry : 0/0
 33948 ;;		On exit  : 0/0
 33949 ;;		Unchanged: 0/0
 33950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33955 ;;Total ram usage:        4 bytes
 33956 ;; Hardware stack levels used:    1
 33957 ;; This function calls:
 33958 ;;		Nothing
 33959 ;; This function is called by:
 33960 ;;		_fat_format
 33961 ;; This function uses a non-reentrant model
 33962 ;;
 33963                           
 33964                           	psect	text166
 33965  007AFA                     __ptext166:
 33966                           	opt stack 0
 33967  007AFA                     __get_fat:
 33968                           	opt stack 27
 33969                           
 33970                           ;fat16.c: 1114: switch (idx)
 33971                           
 33972                           ;incstack = 0
 33973  007AFA  D00E               	goto	l2172
 33974  007AFC                     
 33975                           ;fat16.c: 1118: return 0xF8;
 33976  007AFC  0EF8               	movlw	248
 33977  007AFE  0012               	return	
 33978  007B00                     
 33979                           ;fat16.c: 1120: return 0xFF;
 33980  007B00  0EFF               	movlw	255
 33981  007B02  0012               	return	
 33982  007B04                     
 33983                           ;fat16.c: 1122: return 0xFF;
 33984  007B04  0EFF               	movlw	255
 33985  007B06  0012               	return	
 33986  007B08                     
 33987                           ;fat16.c: 1124: return 0xFF;
 33988  007B08  0EFF               	movlw	255
 33989  007B0A  0012               	return	
 33990  007B0C                     
 33991                           ;fat16.c: 1127: return 0xFF;
 33992  007B0C  0EFF               	movlw	255
 33993  007B0E  0012               	return	
 33994  007B10                     
 33995                           ;fat16.c: 1129: return 0xFF;
 33996  007B10  0EFF               	movlw	255
 33997  007B12  0012               	return	
 33998  007B14                     
 33999                           ;fat16.c: 1131: return 0X00;
 34000  007B14  0E00               	movlw	0
 34001                           
 34002                           ;fat16.c: 1132: }
 34003  007B16  0012               	return	
 34004  007B18                     l2172:
 34005  007B18  C001  F003         	movff	__get_fat@idx,??__get_fat
 34006  007B1C  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 34007                           
 34008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34009                           ; Switch size 1, requested type "space"
 34010                           ; Number of cases is 1, Range of values is 0 to 0
 34011                           ; switch strategies available:
 34012                           ; Name         Instructions Cycles
 34013                           ; simple_byte            4     3 (average)
 34014                           ;	Chosen strategy is simple_byte
 34015  007B20  5004               	movf	??__get_fat+1,w,c
 34016  007B22  0A00               	xorlw	0	; case 0
 34017  007B24  A4D8               	btfss	status,2,c
 34018  007B26  D7F6               	goto	l2180
 34019                           
 34020                           ; Switch size 1, requested type "space"
 34021                           ; Number of cases is 6, Range of values is 0 to 5
 34022                           ; switch strategies available:
 34023                           ; Name         Instructions Cycles
 34024                           ; simple_byte           19    10 (average)
 34025                           ;	Chosen strategy is simple_byte
 34026  007B28  5003               	movf	??__get_fat,w,c
 34027  007B2A  0A00               	xorlw	0	; case 0
 34028  007B2C  B4D8               	btfsc	status,2,c
 34029  007B2E  D7E6               	goto	l2173
 34030  007B30  0A01               	xorlw	1	; case 1
 34031  007B32  B4D8               	btfsc	status,2,c
 34032  007B34  D7E5               	goto	l2175
 34033  007B36  0A03               	xorlw	3	; case 2
 34034  007B38  B4D8               	btfsc	status,2,c
 34035  007B3A  D7E4               	goto	l2176
 34036  007B3C  0A01               	xorlw	1	; case 3
 34037  007B3E  B4D8               	btfsc	status,2,c
 34038  007B40  D7E3               	goto	l2177
 34039  007B42  0A07               	xorlw	7	; case 4
 34040  007B44  B4D8               	btfsc	status,2,c
 34041  007B46  D7E2               	goto	l2178
 34042  007B48  0A01               	xorlw	1	; case 5
 34043  007B4A  B4D8               	btfsc	status,2,c
 34044  007B4C  D7E1               	goto	l2179
 34045  007B4E  D7E2               	goto	l2180
 34046  007B50                     __end_of__get_fat:
 34047                           	opt stack 0
 34048                           tosu	equ	0xFFF
 34049                           tosh	equ	0xFFE
 34050                           tosl	equ	0xFFD
 34051                           pclath	equ	0xFFA
 34052                           tblptru	equ	0xFF8
 34053                           tblptrh	equ	0xFF7
 34054                           tblptrl	equ	0xFF6
 34055                           tablat	equ	0xFF5
 34056                           prodh	equ	0xFF4
 34057                           prodl	equ	0xFF3
 34058                           intcon	equ	0xFF2
 34059                           intcon2	equ	0xFF1
 34060                           intcon3	equ	0xFF0
 34061                           indf0	equ	0xFEF
 34062                           postinc0	equ	0xFEE
 34063                           fsr0h	equ	0xFEA
 34064                           fsr0l	equ	0xFE9
 34065                           wreg	equ	0xFE8
 34066                           indf1	equ	0xFE7
 34067                           postdec1	equ	0xFE5
 34068                           plusw1	equ	0xFE3
 34069                           fsr1h	equ	0xFE2
 34070                           fsr1l	equ	0xFE1
 34071                           indf2	equ	0xFDF
 34072                           postinc2	equ	0xFDE
 34073                           postdec2	equ	0xFDD
 34074                           plusw2	equ	0xFDB
 34075                           fsr2h	equ	0xFDA
 34076                           fsr2l	equ	0xFD9
 34077                           status	equ	0xFD8
 34078                           
 34079 ;; *************** function __get_data *****************
 34080 ;; Defined at:
 34081 ;;		line 1208 in file "fat16.c"
 34082 ;; Parameters:    Size  Location     Type
 34083 ;;  idx             2    0[COMRAM] unsigned int 
 34084 ;; Auto vars:     Size  Location     Type
 34085 ;;		None
 34086 ;; Return value:  Size  Location     Type
 34087 ;;                  1    wreg      unsigned char 
 34088 ;; Registers used:
 34089 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34090 ;; Tracked objects:
 34091 ;;		On entry : 0/0
 34092 ;;		On exit  : 0/0
 34093 ;;		Unchanged: 0/0
 34094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34099 ;;Total ram usage:        2 bytes
 34100 ;; Hardware stack levels used:    1
 34101 ;; This function calls:
 34102 ;;		Nothing
 34103 ;; This function is called by:
 34104 ;;		_fat_format
 34105 ;; This function uses a non-reentrant model
 34106 ;;
 34107                           
 34108                           	psect	text167
 34109  008614                     __ptext167:
 34110                           	opt stack 0
 34111  008614                     __get_data:
 34112                           	opt stack 27
 34113                           
 34114                           ;fat16.c: 1210: if(idx < 12)
 34115                           
 34116                           ;incstack = 0
 34117  008614  5002               	movf	__get_data@idx+1,w,c
 34118  008616  E110               	bnz	l12517
 34119  008618  0E0C               	movlw	12
 34120  00861A  5C01               	subwf	__get_data@idx,w,c
 34121  00861C  B0D8               	btfsc	status,0,c
 34122  00861E  D00C               	goto	l2216
 34123                           
 34124                           ;fat16.c: 1211: {;fat16.c: 1212: return "hello world!"[idx];
 34125  008620  0ED0               	movlw	low STR_12
 34126  008622  2401               	addwf	__get_data@idx,w,c
 34127  008624  6EF6               	movwf	tblptrl,c
 34128  008626  0E8F               	movlw	high STR_12
 34129  008628  2002               	addwfc	__get_data@idx+1,w,c
 34130  00862A  6EF7               	movwf	tblptrh,c
 34131  00862C                     	if	1	;There are 3 active tblptr bytes
 34132  00862C  6AF8               	clrf	tblptru,c
 34133  00862E  0E00               	movlw	low (__mediumconst shr (0+16))
 34134  008630  22F8               	addwfc	tblptru,f,c
 34135  008632                     	endif
 34136  008632  0008               	tblrd		*
 34137  008634  50F5               	movf	tablat,w,c
 34138  008636  0012               	return	
 34139  008638                     l2216:
 34140  008638                     l12517:
 34141                           
 34142                           ;fat16.c: 1213: };fat16.c: 1214: return 0X00;
 34143  008638  0E00               	movlw	0
 34144  00863A  0012               	return	
 34145  00863C                     __end_of__get_data:
 34146                           	opt stack 0
 34147                           tosu	equ	0xFFF
 34148                           tosh	equ	0xFFE
 34149                           tosl	equ	0xFFD
 34150                           pclath	equ	0xFFA
 34151                           tblptru	equ	0xFF8
 34152                           tblptrh	equ	0xFF7
 34153                           tblptrl	equ	0xFF6
 34154                           tablat	equ	0xFF5
 34155                           prodh	equ	0xFF4
 34156                           prodl	equ	0xFF3
 34157                           intcon	equ	0xFF2
 34158                           intcon2	equ	0xFF1
 34159                           intcon3	equ	0xFF0
 34160                           indf0	equ	0xFEF
 34161                           postinc0	equ	0xFEE
 34162                           fsr0h	equ	0xFEA
 34163                           fsr0l	equ	0xFE9
 34164                           wreg	equ	0xFE8
 34165                           indf1	equ	0xFE7
 34166                           postdec1	equ	0xFE5
 34167                           plusw1	equ	0xFE3
 34168                           fsr1h	equ	0xFE2
 34169                           fsr1l	equ	0xFE1
 34170                           indf2	equ	0xFDF
 34171                           postinc2	equ	0xFDE
 34172                           postdec2	equ	0xFDD
 34173                           plusw2	equ	0xFDB
 34174                           fsr2h	equ	0xFDA
 34175                           fsr2l	equ	0xFD9
 34176                           status	equ	0xFD8
 34177                           
 34178 ;; *************** function __parse_file_resize *****************
 34179 ;; Defined at:
 34180 ;;		line 513 in file "api.c"
 34181 ;; Parameters:    Size  Location     Type
 34182 ;;  data            2   80[COMRAM] PTR unsigned char 
 34183 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34184 ;; Auto vars:     Size  Location     Type
 34185 ;;  file_size       4   83[COMRAM] unsigned long 
 34186 ;; Return value:  Size  Location     Type
 34187 ;;                  1    wreg      unsigned char 
 34188 ;; Registers used:
 34189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34190 ;; Tracked objects:
 34191 ;;		On entry : 0/0
 34192 ;;		On exit  : 0/0
 34193 ;;		Unchanged: 0/0
 34194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34196 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34198 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34199 ;;Total ram usage:        7 bytes
 34200 ;; Hardware stack levels used:    1
 34201 ;; Hardware stack levels required when called:    8
 34202 ;; This function calls:
 34203 ;;		_fat_resize_file
 34204 ;; This function is called by:
 34205 ;;		__parse_command_long
 34206 ;; This function uses a non-reentrant model
 34207 ;;
 34208                           
 34209                           	psect	text168
 34210  0054EA                     __ptext168:
 34211                           	opt stack 0
 34212  0054EA                     __parse_file_resize:
 34213                           	opt stack 20
 34214                           
 34215                           ;api.c: 516: uint32_t file_size;;api.c: 517: if((data[0]!=COMMAND_FILE_RESIZE) || (data[
      +                          6]!=0x4C) || (data[7]!=0xEA))
 34216                           
 34217                           ;incstack = 0
 34218  0054EA  C051  FFD9         	movff	__parse_file_resize@data,fsr2l
 34219  0054EE  C052  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 34220  0054F2  0E50               	movlw	80
 34221  0054F4  18DE               	xorwf	postinc2,w,c
 34222  0054F6  A4D8               	btfss	status,2,c
 34223  0054F8  D014               	goto	u10580
 34224  0054FA  EE20 F006          	lfsr	2,6
 34225  0054FE  5051               	movf	__parse_file_resize@data,w,c
 34226  005500  26D9               	addwf	fsr2l,f,c
 34227  005502  5052               	movf	__parse_file_resize@data+1,w,c
 34228  005504  22DA               	addwfc	fsr2h,f,c
 34229  005506  0E4C               	movlw	76
 34230  005508  18DE               	xorwf	postinc2,w,c
 34231  00550A  A4D8               	btfss	status,2,c
 34232  00550C  D00A               	goto	u10580
 34233  00550E  EE20 F007          	lfsr	2,7
 34234  005512  5051               	movf	__parse_file_resize@data,w,c
 34235  005514  26D9               	addwf	fsr2l,f,c
 34236  005516  5052               	movf	__parse_file_resize@data+1,w,c
 34237  005518  22DA               	addwfc	fsr2h,f,c
 34238  00551A  0EEA               	movlw	234
 34239  00551C  18DE               	xorwf	postinc2,w,c
 34240  00551E  B4D8               	btfsc	status,2,c
 34241  005520  D002               	goto	l2739
 34242  005522                     u10580:
 34243                           
 34244                           ;api.c: 518: {;api.c: 519: return 8;
 34245  005522  0E08               	movlw	8
 34246  005524  0012               	return	
 34247  005526                     l2739:
 34248                           
 34249                           ;api.c: 520: };api.c: 523: file_size = data[2];
 34250  005526  EE20 F002          	lfsr	2,2
 34251  00552A  5051               	movf	__parse_file_resize@data,w,c
 34252  00552C  26D9               	addwf	fsr2l,f,c
 34253  00552E  5052               	movf	__parse_file_resize@data+1,w,c
 34254  005530  22DA               	addwfc	fsr2h,f,c
 34255  005532  50DF               	movf	indf2,w,c
 34256  005534  6E53               	movwf	??__parse_file_resize& (0+255),c
 34257  005536  5053               	movf	??__parse_file_resize,w,c
 34258  005538  6E54               	movwf	__parse_file_resize@file_size,c
 34259  00553A  6A55               	clrf	__parse_file_resize@file_size+1,c
 34260  00553C  6A56               	clrf	__parse_file_resize@file_size+2,c
 34261  00553E  6A57               	clrf	__parse_file_resize@file_size+3,c
 34262                           
 34263                           ;api.c: 524: file_size <<= 8;
 34264  005540  C056  F057         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34265  005544  C055  F056         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34266  005548  C054  F055         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34267  00554C  6A54               	clrf	__parse_file_resize@file_size,c
 34268                           
 34269                           ;api.c: 525: file_size |= data[3];
 34270  00554E  EE20 F003          	lfsr	2,3
 34271  005552  5051               	movf	__parse_file_resize@data,w,c
 34272  005554  26D9               	addwf	fsr2l,f,c
 34273  005556  5052               	movf	__parse_file_resize@data+1,w,c
 34274  005558  22DA               	addwfc	fsr2h,f,c
 34275  00555A  50DF               	movf	indf2,w,c
 34276  00555C  6E53               	movwf	??__parse_file_resize& (0+255),c
 34277  00555E  5053               	movf	??__parse_file_resize,w,c
 34278  005560  1254               	iorwf	__parse_file_resize@file_size,f,c
 34279                           
 34280                           ;api.c: 526: file_size <<= 8;
 34281  005562  C056  F057         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34282  005566  C055  F056         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34283  00556A  C054  F055         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34284  00556E  6A54               	clrf	__parse_file_resize@file_size,c
 34285                           
 34286                           ;api.c: 527: file_size |= data[4];
 34287  005570  EE20 F004          	lfsr	2,4
 34288  005574  5051               	movf	__parse_file_resize@data,w,c
 34289  005576  26D9               	addwf	fsr2l,f,c
 34290  005578  5052               	movf	__parse_file_resize@data+1,w,c
 34291  00557A  22DA               	addwfc	fsr2h,f,c
 34292  00557C  50DF               	movf	indf2,w,c
 34293  00557E  6E53               	movwf	??__parse_file_resize& (0+255),c
 34294  005580  5053               	movf	??__parse_file_resize,w,c
 34295  005582  1254               	iorwf	__parse_file_resize@file_size,f,c
 34296                           
 34297                           ;api.c: 528: file_size <<= 8;
 34298  005584  C056  F057         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34299  005588  C055  F056         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34300  00558C  C054  F055         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34301  005590  6A54               	clrf	__parse_file_resize@file_size,c
 34302                           
 34303                           ;api.c: 529: file_size |= data[5];
 34304  005592  EE20 F005          	lfsr	2,5
 34305  005596  5051               	movf	__parse_file_resize@data,w,c
 34306  005598  26D9               	addwf	fsr2l,f,c
 34307  00559A  5052               	movf	__parse_file_resize@data+1,w,c
 34308  00559C  22DA               	addwfc	fsr2h,f,c
 34309  00559E  50DF               	movf	indf2,w,c
 34310  0055A0  6E53               	movwf	??__parse_file_resize& (0+255),c
 34311  0055A2  5053               	movf	??__parse_file_resize,w,c
 34312  0055A4  1254               	iorwf	__parse_file_resize@file_size,f,c
 34313                           
 34314                           ;api.c: 532: fat_resize_file(data[1], file_size);
 34315  0055A6  C054  F049         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 34316  0055AA  C055  F04A         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 34317  0055AE  C056  F04B         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 34318  0055B2  C057  F04C         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 34319  0055B6  EE20 F001          	lfsr	2,1
 34320  0055BA  5051               	movf	__parse_file_resize@data,w,c
 34321  0055BC  26D9               	addwf	fsr2l,f,c
 34322  0055BE  5052               	movf	__parse_file_resize@data+1,w,c
 34323  0055C0  22DA               	addwfc	fsr2h,f,c
 34324  0055C2  50DF               	movf	indf2,w,c
 34325  0055C4  ECD4  F026         	call	_fat_resize_file
 34326                           
 34327                           ;api.c: 533: return 8;
 34328  0055C8  0E08               	movlw	8
 34329  0055CA  0012               	return	
 34330  0055CC                     __end_of__parse_file_resize:
 34331                           	opt stack 0
 34332                           tosu	equ	0xFFF
 34333                           tosh	equ	0xFFE
 34334                           tosl	equ	0xFFD
 34335                           pclath	equ	0xFFA
 34336                           tblptru	equ	0xFF8
 34337                           tblptrh	equ	0xFF7
 34338                           tblptrl	equ	0xFF6
 34339                           tablat	equ	0xFF5
 34340                           prodh	equ	0xFF4
 34341                           prodl	equ	0xFF3
 34342                           intcon	equ	0xFF2
 34343                           intcon2	equ	0xFF1
 34344                           intcon3	equ	0xFF0
 34345                           indf0	equ	0xFEF
 34346                           postinc0	equ	0xFEE
 34347                           fsr0h	equ	0xFEA
 34348                           fsr0l	equ	0xFE9
 34349                           wreg	equ	0xFE8
 34350                           indf1	equ	0xFE7
 34351                           postdec1	equ	0xFE5
 34352                           plusw1	equ	0xFE3
 34353                           fsr1h	equ	0xFE2
 34354                           fsr1l	equ	0xFE1
 34355                           indf2	equ	0xFDF
 34356                           postinc2	equ	0xFDE
 34357                           postdec2	equ	0xFDD
 34358                           plusw2	equ	0xFDB
 34359                           fsr2h	equ	0xFDA
 34360                           fsr2l	equ	0xFD9
 34361                           status	equ	0xFD8
 34362                           
 34363 ;; *************** function __parse_file_rename *****************
 34364 ;; Defined at:
 34365 ;;		line 574 in file "api.c"
 34366 ;; Parameters:    Size  Location     Type
 34367 ;;  data            2    0[BANK0 ] PTR unsigned char 
 34368 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34369 ;; Auto vars:     Size  Location     Type
 34370 ;;		None
 34371 ;; Return value:  Size  Location     Type
 34372 ;;                  1    wreg      unsigned char 
 34373 ;; Registers used:
 34374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34375 ;; Tracked objects:
 34376 ;;		On entry : 0/0
 34377 ;;		On exit  : 0/0
 34378 ;;		Unchanged: 0/0
 34379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34383 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34384 ;;Total ram usage:        3 bytes
 34385 ;; Hardware stack levels used:    1
 34386 ;; Hardware stack levels required when called:    7
 34387 ;; This function calls:
 34388 ;;		_fat_rename_file
 34389 ;; This function is called by:
 34390 ;;		__parse_command_long
 34391 ;; This function uses a non-reentrant model
 34392 ;;
 34393                           
 34394                           	psect	text169
 34395  007326                     __ptext169:
 34396                           	opt stack 0
 34397  007326                     __parse_file_rename:
 34398                           	opt stack 21
 34399                           
 34400                           ;api.c: 577: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 34401                           
 34402                           ;incstack = 0
 34403  007326  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 34404  00732A  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 34405  00732E  0E53               	movlw	83
 34406  007330  18DE               	xorwf	postinc2,w,c
 34407  007332  A4D8               	btfss	status,2,c
 34408  007334  D015               	goto	u10670
 34409  007336  0100               	movlb	0	; () banked
 34410  007338  EE20 F00D          	lfsr	2,13
 34411  00733C  5160               	movf	__parse_file_rename@data& (0+255),w,b
 34412  00733E  26D9               	addwf	fsr2l,f,c
 34413  007340  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 34414  007342  22DA               	addwfc	fsr2h,f,c
 34415  007344  0E7E               	movlw	126
 34416  007346  18DE               	xorwf	postinc2,w,c
 34417  007348  A4D8               	btfss	status,2,c
 34418  00734A  D00A               	goto	u10670
 34419                           
 34420                           ; BSR set to: 0
 34421  00734C  EE20 F00E          	lfsr	2,14
 34422  007350  5160               	movf	__parse_file_rename@data& (0+255),w,b
 34423  007352  26D9               	addwf	fsr2l,f,c
 34424  007354  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 34425  007356  22DA               	addwfc	fsr2h,f,c
 34426  007358  0E18               	movlw	24
 34427  00735A  18DE               	xorwf	postinc2,w,c
 34428  00735C  B4D8               	btfsc	status,2,c
 34429  00735E  D002               	goto	l2757
 34430  007360                     u10670:
 34431                           
 34432                           ;api.c: 578: {;api.c: 579: return 15;
 34433                           
 34434                           ; BSR set to: 0
 34435  007360  0E0F               	movlw	15
 34436  007362  0012               	return	
 34437  007364                     l2757:
 34438                           
 34439                           ;api.c: 580: };api.c: 583: fat_rename_file(data[1], &data[2], &data[10]);
 34440  007364  0E02               	movlw	2
 34441  007366  0100               	movlb	0	; () banked
 34442  007368  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 34443  00736A  6E38               	movwf	fat_rename_file@name,c
 34444  00736C  0E00               	movlw	0
 34445  00736E  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 34446  007370  6E39               	movwf	fat_rename_file@name+1,c
 34447  007372  0E0A               	movlw	10
 34448  007374  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 34449  007376  6E3A               	movwf	fat_rename_file@extension,c
 34450  007378  0E00               	movlw	0
 34451  00737A  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 34452  00737C  6E3B               	movwf	fat_rename_file@extension+1,c
 34453  00737E  EE20 F001          	lfsr	2,1
 34454  007382  5160               	movf	__parse_file_rename@data& (0+255),w,b
 34455  007384  26D9               	addwf	fsr2l,f,c
 34456  007386  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 34457  007388  22DA               	addwfc	fsr2h,f,c
 34458  00738A  50DF               	movf	indf2,w,c
 34459  00738C  ECAF  F034         	call	_fat_rename_file
 34460                           
 34461                           ;api.c: 584: return 15;
 34462  007390  0E0F               	movlw	15
 34463  007392  0012               	return	
 34464  007394                     __end_of__parse_file_rename:
 34465                           	opt stack 0
 34466                           tosu	equ	0xFFF
 34467                           tosh	equ	0xFFE
 34468                           tosl	equ	0xFFD
 34469                           pclath	equ	0xFFA
 34470                           tblptru	equ	0xFF8
 34471                           tblptrh	equ	0xFF7
 34472                           tblptrl	equ	0xFF6
 34473                           tablat	equ	0xFF5
 34474                           prodh	equ	0xFF4
 34475                           prodl	equ	0xFF3
 34476                           intcon	equ	0xFF2
 34477                           intcon2	equ	0xFF1
 34478                           intcon3	equ	0xFF0
 34479                           indf0	equ	0xFEF
 34480                           postinc0	equ	0xFEE
 34481                           fsr0h	equ	0xFEA
 34482                           fsr0l	equ	0xFE9
 34483                           wreg	equ	0xFE8
 34484                           indf1	equ	0xFE7
 34485                           postdec1	equ	0xFE5
 34486                           plusw1	equ	0xFE3
 34487                           fsr1h	equ	0xFE2
 34488                           fsr1l	equ	0xFE1
 34489                           indf2	equ	0xFDF
 34490                           postinc2	equ	0xFDE
 34491                           postdec2	equ	0xFDD
 34492                           plusw2	equ	0xFDB
 34493                           fsr2h	equ	0xFDA
 34494                           fsr2l	equ	0xFD9
 34495                           status	equ	0xFD8
 34496                           
 34497 ;; *************** function _fat_rename_file *****************
 34498 ;; Defined at:
 34499 ;;		line 702 in file "fat16.c"
 34500 ;; Parameters:    Size  Location     Type
 34501 ;;  file_number     1    wreg     unsigned char 
 34502 ;;  name            2   55[COMRAM] PTR unsigned char 
 34503 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34504 ;;  extension       2   57[COMRAM] PTR unsigned char 
 34505 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34506 ;; Auto vars:     Size  Location     Type
 34507 ;;  file_number     1   60[COMRAM] unsigned char 
 34508 ;;  root           32   61[COMRAM] struct .
 34509 ;;  cntr            1   93[COMRAM] unsigned char 
 34510 ;;  return_code     1   59[COMRAM] unsigned char 
 34511 ;; Return value:  Size  Location     Type
 34512 ;;                  1    wreg      void 
 34513 ;; Registers used:
 34514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34515 ;; Tracked objects:
 34516 ;;		On entry : 0/0
 34517 ;;		On exit  : 0/0
 34518 ;;		Unchanged: 0/0
 34519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34521 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34523 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34524 ;;Total ram usage:       39 bytes
 34525 ;; Hardware stack levels used:    1
 34526 ;; Hardware stack levels required when called:    6
 34527 ;; This function calls:
 34528 ;;		__write_root
 34529 ;;		_fat_get_file_information
 34530 ;; This function is called by:
 34531 ;;		__parse_file_rename
 34532 ;; This function uses a non-reentrant model
 34533 ;;
 34534                           
 34535                           	psect	text170
 34536  00695E                     __ptext170:
 34537                           	opt stack 0
 34538  00695E                     _fat_rename_file:
 34539                           	opt stack 21
 34540                           
 34541                           ;incstack = 0
 34542                           ;fat_rename_file@file_number stored from wreg
 34543  00695E  6E3D               	movwf	fat_rename_file@file_number,c
 34544                           
 34545                           ;fat16.c: 704: rootEntry_t root;;fat16.c: 705: uint8_t cntr;;fat16.c: 706: uint8_t retur
      +                          n_code;;fat16.c: 709: return_code = fat_get_file_information(file_number, &root);
 34546  006960  0E3E               	movlw	low fat_rename_file@root
 34547  006962  6E30               	movwf	fat_get_file_information@data,c
 34548  006964  0E00               	movlw	high fat_rename_file@root
 34549  006966  6E31               	movwf	fat_get_file_information@data+1,c
 34550  006968  503D               	movf	fat_rename_file@file_number,w,c
 34551  00696A  ECEA  F038         	call	_fat_get_file_information
 34552  00696E  6E3C               	movwf	fat_rename_file@return_code,c
 34553                           
 34554                           ;fat16.c: 710: if(return_code!=0x00)
 34555  006970  503C               	movf	fat_rename_file@return_code,w,c
 34556  006972  A4D8               	btfss	status,2,c
 34557  006974  0012               	return	
 34558                           
 34559                           ;fat16.c: 714: };fat16.c: 717: for(cntr=0; cntr<8; ++cntr)
 34560                           
 34561                           ;fat16.c: 711: {;fat16.c: 713: return;
 34562  006976  0E00               	movlw	0
 34563  006978  6E5E               	movwf	fat_rename_file@cntr,c
 34564  00697A                     l13043:
 34565  00697A  0E07               	movlw	7
 34566  00697C  645E               	cpfsgt	fat_rename_file@cntr,c
 34567  00697E  D001               	goto	l2055
 34568  006980  D014               	goto	u9990
 34569  006982                     l2055:
 34570                           
 34571                           ;fat16.c: 718: {;fat16.c: 719: root.fileName[cntr] = name[cntr];
 34572  006982  505E               	movf	fat_rename_file@cntr,w,c
 34573  006984  0D01               	mullw	1
 34574  006986  50F3               	movf	prodl,w,c
 34575  006988  2438               	addwf	fat_rename_file@name,w,c
 34576  00698A  6ED9               	movwf	fsr2l,c
 34577  00698C  50F4               	movf	prodh,w,c
 34578  00698E  2039               	addwfc	fat_rename_file@name+1,w,c
 34579  006990  6EDA               	movwf	fsr2h,c
 34580  006992  505E               	movf	fat_rename_file@cntr,w,c
 34581  006994  0D01               	mullw	1
 34582  006996  0E3E               	movlw	low fat_rename_file@root
 34583  006998  24F3               	addwf	prodl,w,c
 34584  00699A  6EE1               	movwf	fsr1l,c
 34585  00699C  0E00               	movlw	high fat_rename_file@root
 34586  00699E  20F4               	addwfc	prodh,w,c
 34587  0069A0  6EE2               	movwf	fsr1h,c
 34588  0069A2  CFDF FFE7          	movff	indf2,indf1
 34589  0069A6  2A5E               	incf	fat_rename_file@cntr,f,c
 34590  0069A8  D7E8               	goto	l13043
 34591  0069AA                     u9990:
 34592                           
 34593                           ;fat16.c: 720: };fat16.c: 723: for(cntr=0; cntr<3; ++cntr)
 34594  0069AA  0E00               	movlw	0
 34595  0069AC  6E5E               	movwf	fat_rename_file@cntr,c
 34596  0069AE                     l13055:
 34597  0069AE  0E02               	movlw	2
 34598  0069B0  645E               	cpfsgt	fat_rename_file@cntr,c
 34599  0069B2  D001               	goto	l2057
 34600  0069B4  D018               	goto	u10010
 34601  0069B6                     l2057:
 34602                           
 34603                           ;fat16.c: 724: {;fat16.c: 725: root.fileExtension[cntr] = extension[cntr];
 34604  0069B6  505E               	movf	fat_rename_file@cntr,w,c
 34605  0069B8  0D01               	mullw	1
 34606  0069BA  50F3               	movf	prodl,w,c
 34607  0069BC  243A               	addwf	fat_rename_file@extension,w,c
 34608  0069BE  6ED9               	movwf	fsr2l,c
 34609  0069C0  50F4               	movf	prodh,w,c
 34610  0069C2  203B               	addwfc	fat_rename_file@extension+1,w,c
 34611  0069C4  6EDA               	movwf	fsr2h,c
 34612  0069C6  505E               	movf	fat_rename_file@cntr,w,c
 34613  0069C8  0D01               	mullw	1
 34614  0069CA  0E08               	movlw	8
 34615  0069CC  26F3               	addwf	prodl,f,c
 34616  0069CE  0E00               	movlw	0
 34617  0069D0  22F4               	addwfc	prodh,f,c
 34618  0069D2  0E3E               	movlw	low fat_rename_file@root
 34619  0069D4  24F3               	addwf	prodl,w,c
 34620  0069D6  6EE1               	movwf	fsr1l,c
 34621  0069D8  0E00               	movlw	high fat_rename_file@root
 34622  0069DA  20F4               	addwfc	prodh,w,c
 34623  0069DC  6EE2               	movwf	fsr1h,c
 34624  0069DE  CFDF FFE7          	movff	indf2,indf1
 34625  0069E2  2A5E               	incf	fat_rename_file@cntr,f,c
 34626  0069E4  D7E4               	goto	l13055
 34627  0069E6                     u10010:
 34628                           
 34629                           ;fat16.c: 726: };fat16.c: 729: _write_root(file_number, &root);
 34630  0069E6  0E3E               	movlw	low fat_rename_file@root
 34631  0069E8  6E29               	movwf	__write_root@data,c
 34632  0069EA  0E00               	movlw	high fat_rename_file@root
 34633  0069EC  6E2A               	movwf	__write_root@data+1,c
 34634  0069EE  503D               	movf	fat_rename_file@file_number,w,c
 34635  0069F0  ECEE  F03F         	call	__write_root
 34636  0069F4  0012               	return		;funcret
 34637  0069F6                     __end_of_fat_rename_file:
 34638                           	opt stack 0
 34639                           tosu	equ	0xFFF
 34640                           tosh	equ	0xFFE
 34641                           tosl	equ	0xFFD
 34642                           pclath	equ	0xFFA
 34643                           tblptru	equ	0xFF8
 34644                           tblptrh	equ	0xFF7
 34645                           tblptrl	equ	0xFF6
 34646                           tablat	equ	0xFF5
 34647                           prodh	equ	0xFF4
 34648                           prodl	equ	0xFF3
 34649                           intcon	equ	0xFF2
 34650                           intcon2	equ	0xFF1
 34651                           intcon3	equ	0xFF0
 34652                           indf0	equ	0xFEF
 34653                           postinc0	equ	0xFEE
 34654                           fsr0h	equ	0xFEA
 34655                           fsr0l	equ	0xFE9
 34656                           wreg	equ	0xFE8
 34657                           indf1	equ	0xFE7
 34658                           postdec1	equ	0xFE5
 34659                           plusw1	equ	0xFE3
 34660                           fsr1h	equ	0xFE2
 34661                           fsr1l	equ	0xFE1
 34662                           indf2	equ	0xFDF
 34663                           postinc2	equ	0xFDE
 34664                           postdec2	equ	0xFDD
 34665                           plusw2	equ	0xFDB
 34666                           fsr2h	equ	0xFDA
 34667                           fsr2l	equ	0xFD9
 34668                           status	equ	0xFD8
 34669                           
 34670 ;; *************** function __parse_file_modify *****************
 34671 ;; Defined at:
 34672 ;;		line 601 in file "api.c"
 34673 ;; Parameters:    Size  Location     Type
 34674 ;;  data            2   85[COMRAM] PTR unsigned char 
 34675 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34676 ;; Auto vars:     Size  Location     Type
 34677 ;;  start_byte      4   90[COMRAM] unsigned long 
 34678 ;;  number_of_by    2   88[COMRAM] unsigned int 
 34679 ;; Return value:  Size  Location     Type
 34680 ;;                  1    wreg      unsigned char 
 34681 ;; Registers used:
 34682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34683 ;; Tracked objects:
 34684 ;;		On entry : 0/0
 34685 ;;		On exit  : 0/0
 34686 ;;		Unchanged: 0/0
 34687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34689 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34691 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34692 ;;Total ram usage:        9 bytes
 34693 ;; Hardware stack levels used:    1
 34694 ;; Hardware stack levels required when called:    8
 34695 ;; This function calls:
 34696 ;;		_fat_modify_file
 34697 ;; This function is called by:
 34698 ;;		__parse_command_long
 34699 ;; This function uses a non-reentrant model
 34700 ;;
 34701                           
 34702                           	psect	text171
 34703  004578                     __ptext171:
 34704                           	opt stack 0
 34705  004578                     __parse_file_modify:
 34706                           	opt stack 20
 34707                           
 34708                           ;api.c: 603: uint16_t number_of_bytes;;api.c: 604: uint32_t start_byte;;api.c: 607: if((
      +                          data[0]!=COMMAND_FILE_MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 34709                           
 34710                           ;incstack = 0
 34711  004578  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 34712  00457C  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 34713  004580  0E55               	movlw	85
 34714  004582  18DE               	xorwf	postinc2,w,c
 34715  004584  A4D8               	btfss	status,2,c
 34716  004586  D014               	goto	u10730
 34717  004588  EE20 F007          	lfsr	2,7
 34718  00458C  5056               	movf	__parse_file_modify@data,w,c
 34719  00458E  26D9               	addwf	fsr2l,f,c
 34720  004590  5057               	movf	__parse_file_modify@data+1,w,c
 34721  004592  22DA               	addwfc	fsr2h,f,c
 34722  004594  0E0F               	movlw	15
 34723  004596  18DE               	xorwf	postinc2,w,c
 34724  004598  A4D8               	btfss	status,2,c
 34725  00459A  D00A               	goto	u10730
 34726  00459C  EE20 F008          	lfsr	2,8
 34727  0045A0  5056               	movf	__parse_file_modify@data,w,c
 34728  0045A2  26D9               	addwf	fsr2l,f,c
 34729  0045A4  5057               	movf	__parse_file_modify@data+1,w,c
 34730  0045A6  22DA               	addwfc	fsr2h,f,c
 34731  0045A8  0E9B               	movlw	155
 34732  0045AA  18DE               	xorwf	postinc2,w,c
 34733  0045AC  B4D8               	btfsc	status,2,c
 34734  0045AE  D002               	goto	l2769
 34735  0045B0                     u10730:
 34736                           
 34737                           ;api.c: 608: {;api.c: 610: return 65;
 34738  0045B0  0E41               	movlw	65
 34739  0045B2  0012               	return	
 34740  0045B4                     l2769:
 34741                           
 34742                           ;api.c: 611: };api.c: 614: number_of_bytes = data[6];
 34743  0045B4  EE20 F006          	lfsr	2,6
 34744  0045B8  5056               	movf	__parse_file_modify@data,w,c
 34745  0045BA  26D9               	addwf	fsr2l,f,c
 34746  0045BC  5057               	movf	__parse_file_modify@data+1,w,c
 34747  0045BE  22DA               	addwfc	fsr2h,f,c
 34748  0045C0  50DF               	movf	indf2,w,c
 34749  0045C2  6E58               	movwf	??__parse_file_modify& (0+255),c
 34750  0045C4  5058               	movf	??__parse_file_modify,w,c
 34751  0045C6  6E59               	movwf	__parse_file_modify@number_of_bytes,c
 34752  0045C8  6A5A               	clrf	__parse_file_modify@number_of_bytes+1,c
 34753                           
 34754                           ;api.c: 617: start_byte = data[2];
 34755  0045CA  EE20 F002          	lfsr	2,2
 34756  0045CE  5056               	movf	__parse_file_modify@data,w,c
 34757  0045D0  26D9               	addwf	fsr2l,f,c
 34758  0045D2  5057               	movf	__parse_file_modify@data+1,w,c
 34759  0045D4  22DA               	addwfc	fsr2h,f,c
 34760  0045D6  50DF               	movf	indf2,w,c
 34761  0045D8  6E58               	movwf	??__parse_file_modify& (0+255),c
 34762  0045DA  5058               	movf	??__parse_file_modify,w,c
 34763  0045DC  6E5B               	movwf	__parse_file_modify@start_byte,c
 34764  0045DE  6A5C               	clrf	__parse_file_modify@start_byte+1,c
 34765  0045E0  6A5D               	clrf	__parse_file_modify@start_byte+2,c
 34766  0045E2  6A5E               	clrf	__parse_file_modify@start_byte+3,c
 34767                           
 34768                           ;api.c: 618: start_byte <<= 8;
 34769  0045E4  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 34770  0045E8  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 34771  0045EC  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 34772  0045F0  6A5B               	clrf	__parse_file_modify@start_byte,c
 34773                           
 34774                           ;api.c: 619: start_byte |= data[3];
 34775  0045F2  EE20 F003          	lfsr	2,3
 34776  0045F6  5056               	movf	__parse_file_modify@data,w,c
 34777  0045F8  26D9               	addwf	fsr2l,f,c
 34778  0045FA  5057               	movf	__parse_file_modify@data+1,w,c
 34779  0045FC  22DA               	addwfc	fsr2h,f,c
 34780  0045FE  50DF               	movf	indf2,w,c
 34781  004600  6E58               	movwf	??__parse_file_modify& (0+255),c
 34782  004602  5058               	movf	??__parse_file_modify,w,c
 34783  004604  125B               	iorwf	__parse_file_modify@start_byte,f,c
 34784                           
 34785                           ;api.c: 620: start_byte <<= 8;
 34786  004606  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 34787  00460A  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 34788  00460E  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 34789  004612  6A5B               	clrf	__parse_file_modify@start_byte,c
 34790                           
 34791                           ;api.c: 621: start_byte |= data[4];
 34792  004614  EE20 F004          	lfsr	2,4
 34793  004618  5056               	movf	__parse_file_modify@data,w,c
 34794  00461A  26D9               	addwf	fsr2l,f,c
 34795  00461C  5057               	movf	__parse_file_modify@data+1,w,c
 34796  00461E  22DA               	addwfc	fsr2h,f,c
 34797  004620  50DF               	movf	indf2,w,c
 34798  004622  6E58               	movwf	??__parse_file_modify& (0+255),c
 34799  004624  5058               	movf	??__parse_file_modify,w,c
 34800  004626  125B               	iorwf	__parse_file_modify@start_byte,f,c
 34801                           
 34802                           ;api.c: 622: start_byte <<= 8;
 34803  004628  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 34804  00462C  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 34805  004630  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 34806  004634  6A5B               	clrf	__parse_file_modify@start_byte,c
 34807                           
 34808                           ;api.c: 623: start_byte |= data[5];
 34809  004636  EE20 F005          	lfsr	2,5
 34810  00463A  5056               	movf	__parse_file_modify@data,w,c
 34811  00463C  26D9               	addwf	fsr2l,f,c
 34812  00463E  5057               	movf	__parse_file_modify@data+1,w,c
 34813  004640  22DA               	addwfc	fsr2h,f,c
 34814  004642  50DF               	movf	indf2,w,c
 34815  004644  6E58               	movwf	??__parse_file_modify& (0+255),c
 34816  004646  5058               	movf	??__parse_file_modify,w,c
 34817  004648  125B               	iorwf	__parse_file_modify@start_byte,f,c
 34818                           
 34819                           ;api.c: 625: fat_modify_file(data[1], start_byte, number_of_bytes, &data[9]);
 34820  00464A  C05B  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 34821  00464E  C05C  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 34822  004652  C05D  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 34823  004656  C05E  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 34824  00465A  C059  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 34825  00465E  C05A  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 34826  004662  0E09               	movlw	9
 34827  004664  2456               	addwf	__parse_file_modify@data,w,c
 34828  004666  6E48               	movwf	fat_modify_file@data,c
 34829  004668  0E00               	movlw	0
 34830  00466A  2057               	addwfc	__parse_file_modify@data+1,w,c
 34831  00466C  6E49               	movwf	fat_modify_file@data+1,c
 34832  00466E  EE20 F001          	lfsr	2,1
 34833  004672  5056               	movf	__parse_file_modify@data,w,c
 34834  004674  26D9               	addwf	fsr2l,f,c
 34835  004676  5057               	movf	__parse_file_modify@data+1,w,c
 34836  004678  22DA               	addwfc	fsr2h,f,c
 34837  00467A  50DF               	movf	indf2,w,c
 34838  00467C  EC2D  F011         	call	_fat_modify_file
 34839                           
 34840                           ;api.c: 626: return number_of_bytes + 9;
 34841  004680  5059               	movf	__parse_file_modify@number_of_bytes,w,c
 34842  004682  0F09               	addlw	9
 34843  004684  0012               	return	
 34844  004686                     __end_of__parse_file_modify:
 34845                           	opt stack 0
 34846                           tosu	equ	0xFFF
 34847                           tosh	equ	0xFFE
 34848                           tosl	equ	0xFFD
 34849                           pclath	equ	0xFFA
 34850                           tblptru	equ	0xFF8
 34851                           tblptrh	equ	0xFF7
 34852                           tblptrl	equ	0xFF6
 34853                           tablat	equ	0xFF5
 34854                           prodh	equ	0xFF4
 34855                           prodl	equ	0xFF3
 34856                           intcon	equ	0xFF2
 34857                           intcon2	equ	0xFF1
 34858                           intcon3	equ	0xFF0
 34859                           indf0	equ	0xFEF
 34860                           postinc0	equ	0xFEE
 34861                           fsr0h	equ	0xFEA
 34862                           fsr0l	equ	0xFE9
 34863                           wreg	equ	0xFE8
 34864                           indf1	equ	0xFE7
 34865                           postdec1	equ	0xFE5
 34866                           plusw1	equ	0xFE3
 34867                           fsr1h	equ	0xFE2
 34868                           fsr1l	equ	0xFE1
 34869                           indf2	equ	0xFDF
 34870                           postinc2	equ	0xFDE
 34871                           postdec2	equ	0xFDD
 34872                           plusw2	equ	0xFDB
 34873                           fsr2h	equ	0xFDA
 34874                           fsr2l	equ	0xFD9
 34875                           status	equ	0xFD8
 34876                           
 34877 ;; *************** function __parse_file_delete *****************
 34878 ;; Defined at:
 34879 ;;		line 537 in file "api.c"
 34880 ;; Parameters:    Size  Location     Type
 34881 ;;  data            2   75[COMRAM] PTR unsigned char 
 34882 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34883 ;; Auto vars:     Size  Location     Type
 34884 ;;		None
 34885 ;; Return value:  Size  Location     Type
 34886 ;;                  1    wreg      unsigned char 
 34887 ;; Registers used:
 34888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34889 ;; Tracked objects:
 34890 ;;		On entry : 0/0
 34891 ;;		On exit  : 0/0
 34892 ;;		Unchanged: 0/0
 34893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34898 ;;Total ram usage:        3 bytes
 34899 ;; Hardware stack levels used:    1
 34900 ;; Hardware stack levels required when called:    8
 34901 ;; This function calls:
 34902 ;;		_fat_delete_file
 34903 ;; This function is called by:
 34904 ;;		__parse_command_long
 34905 ;; This function uses a non-reentrant model
 34906 ;;
 34907                           
 34908                           	psect	text172
 34909  007CF8                     __ptext172:
 34910                           	opt stack 0
 34911  007CF8                     __parse_file_delete:
 34912                           	opt stack 20
 34913                           
 34914                           ;api.c: 540: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 34915                           
 34916                           ;incstack = 0
 34917  007CF8  C04C  FFD9         	movff	__parse_file_delete@data,fsr2l
 34918  007CFC  C04D  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 34919  007D00  0E51               	movlw	81
 34920  007D02  18DE               	xorwf	postinc2,w,c
 34921  007D04  A4D8               	btfss	status,2,c
 34922  007D06  D014               	goto	u10610
 34923  007D08  EE20 F002          	lfsr	2,2
 34924  007D0C  504C               	movf	__parse_file_delete@data,w,c
 34925  007D0E  26D9               	addwf	fsr2l,f,c
 34926  007D10  504D               	movf	__parse_file_delete@data+1,w,c
 34927  007D12  22DA               	addwfc	fsr2h,f,c
 34928  007D14  0E66               	movlw	102
 34929  007D16  18DE               	xorwf	postinc2,w,c
 34930  007D18  A4D8               	btfss	status,2,c
 34931  007D1A  D00A               	goto	u10610
 34932  007D1C  EE20 F003          	lfsr	2,3
 34933  007D20  504C               	movf	__parse_file_delete@data,w,c
 34934  007D22  26D9               	addwf	fsr2l,f,c
 34935  007D24  504D               	movf	__parse_file_delete@data+1,w,c
 34936  007D26  22DA               	addwfc	fsr2h,f,c
 34937  007D28  0EA0               	movlw	160
 34938  007D2A  18DE               	xorwf	postinc2,w,c
 34939  007D2C  B4D8               	btfsc	status,2,c
 34940  007D2E  D002               	goto	l2745
 34941  007D30                     u10610:
 34942                           
 34943                           ;api.c: 541: {;api.c: 542: return 4;
 34944  007D30  0E04               	movlw	4
 34945  007D32  0012               	return	
 34946  007D34                     l2745:
 34947                           
 34948                           ;api.c: 543: };api.c: 546: fat_delete_file(data[1]);
 34949  007D34  EE20 F001          	lfsr	2,1
 34950  007D38  504C               	movf	__parse_file_delete@data,w,c
 34951  007D3A  26D9               	addwf	fsr2l,f,c
 34952  007D3C  504D               	movf	__parse_file_delete@data+1,w,c
 34953  007D3E  22DA               	addwfc	fsr2h,f,c
 34954  007D40  50DF               	movf	indf2,w,c
 34955  007D42  EC93  F040         	call	_fat_delete_file
 34956                           
 34957                           ;api.c: 547: return 4;
 34958  007D46  0E04               	movlw	4
 34959  007D48  0012               	return	
 34960  007D4A                     __end_of__parse_file_delete:
 34961                           	opt stack 0
 34962                           tosu	equ	0xFFF
 34963                           tosh	equ	0xFFE
 34964                           tosl	equ	0xFFD
 34965                           pclath	equ	0xFFA
 34966                           tblptru	equ	0xFF8
 34967                           tblptrh	equ	0xFF7
 34968                           tblptrl	equ	0xFF6
 34969                           tablat	equ	0xFF5
 34970                           prodh	equ	0xFF4
 34971                           prodl	equ	0xFF3
 34972                           intcon	equ	0xFF2
 34973                           intcon2	equ	0xFF1
 34974                           intcon3	equ	0xFF0
 34975                           indf0	equ	0xFEF
 34976                           postinc0	equ	0xFEE
 34977                           fsr0h	equ	0xFEA
 34978                           fsr0l	equ	0xFE9
 34979                           wreg	equ	0xFE8
 34980                           indf1	equ	0xFE7
 34981                           postdec1	equ	0xFE5
 34982                           plusw1	equ	0xFE3
 34983                           fsr1h	equ	0xFE2
 34984                           fsr1l	equ	0xFE1
 34985                           indf2	equ	0xFDF
 34986                           postinc2	equ	0xFDE
 34987                           postdec2	equ	0xFDD
 34988                           plusw2	equ	0xFDB
 34989                           fsr2h	equ	0xFDA
 34990                           fsr2l	equ	0xFD9
 34991                           status	equ	0xFD8
 34992                           
 34993 ;; *************** function _fat_delete_file *****************
 34994 ;; Defined at:
 34995 ;;		line 632 in file "fat16.c"
 34996 ;; Parameters:    Size  Location     Type
 34997 ;;  file_number     1    wreg     unsigned char 
 34998 ;; Auto vars:     Size  Location     Type
 34999 ;;  file_number     1   74[COMRAM] unsigned char 
 35000 ;;  first_cluste    2   72[COMRAM] unsigned int 
 35001 ;; Return value:  Size  Location     Type
 35002 ;;                  1    wreg      void 
 35003 ;; Registers used:
 35004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35005 ;; Tracked objects:
 35006 ;;		On entry : 0/0
 35007 ;;		On exit  : 0/0
 35008 ;;		Unchanged: 0/0
 35009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35011 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35014 ;;Total ram usage:        3 bytes
 35015 ;; Hardware stack levels used:    1
 35016 ;; Hardware stack levels required when called:    7
 35017 ;; This function calls:
 35018 ;;		__delete_root
 35019 ;;		__get_first_cluster
 35020 ;;		__make_cluster_chain
 35021 ;;		__root_is_available
 35022 ;; This function is called by:
 35023 ;;		__parse_file_delete
 35024 ;; This function uses a non-reentrant model
 35025 ;;
 35026                           
 35027                           	psect	text173
 35028  008126                     __ptext173:
 35029                           	opt stack 0
 35030  008126                     _fat_delete_file:
 35031                           	opt stack 20
 35032                           
 35033                           ;incstack = 0
 35034                           ;fat_delete_file@file_number stored from wreg
 35035  008126  6E4B               	movwf	fat_delete_file@file_number,c
 35036                           
 35037                           ;fat16.c: 634: uint16_t first_cluster;;fat16.c: 637: if(file_number>=64)
 35038  008128  0E3F               	movlw	63
 35039  00812A  644B               	cpfsgt	fat_delete_file@file_number,c
 35040  00812C  D001               	goto	l2042
 35041  00812E  0012               	return	
 35042  008130                     l2042:
 35043                           
 35044                           ;fat16.c: 641: };fat16.c: 644: if(_root_is_available(file_number))
 35045  008130  504B               	movf	fat_delete_file@file_number,w,c
 35046  008132  EC62  F03B         	call	__root_is_available
 35047  008136  0900               	iorlw	0
 35048  008138  A4D8               	btfss	status,2,c
 35049  00813A  0012               	return	
 35050                           
 35051                           ;fat16.c: 648: };fat16.c: 651: first_cluster = _get_first_cluster(file_number);
 35052                           
 35053                           ;fat16.c: 645: {;fat16.c: 647: return;
 35054  00813C  504B               	movf	fat_delete_file@file_number,w,c
 35055  00813E  ECF5  F03E         	call	__get_first_cluster
 35056  008142  C030  F049         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 35057  008146  C031  F04A         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 35058                           
 35059                           ;fat16.c: 654: _make_cluster_chain(first_cluster, 0);
 35060  00814A  C049  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 35061  00814E  C04A  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 35062  008152  0E00               	movlw	0
 35063  008154  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 35064  008156  0E00               	movlw	0
 35065  008158  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 35066  00815A  EC45  F00C         	call	__make_cluster_chain	;wreg free
 35067                           
 35068                           ;fat16.c: 658: _delete_root(file_number);
 35069  00815E  504B               	movf	fat_delete_file@file_number,w,c
 35070  008160  EC63  F03F         	call	__delete_root
 35071  008164  0012               	return		;funcret
 35072  008166                     __end_of_fat_delete_file:
 35073                           	opt stack 0
 35074                           tosu	equ	0xFFF
 35075                           tosh	equ	0xFFE
 35076                           tosl	equ	0xFFD
 35077                           pclath	equ	0xFFA
 35078                           tblptru	equ	0xFF8
 35079                           tblptrh	equ	0xFF7
 35080                           tblptrl	equ	0xFF6
 35081                           tablat	equ	0xFF5
 35082                           prodh	equ	0xFF4
 35083                           prodl	equ	0xFF3
 35084                           intcon	equ	0xFF2
 35085                           intcon2	equ	0xFF1
 35086                           intcon3	equ	0xFF0
 35087                           indf0	equ	0xFEF
 35088                           postinc0	equ	0xFEE
 35089                           fsr0h	equ	0xFEA
 35090                           fsr0l	equ	0xFE9
 35091                           wreg	equ	0xFE8
 35092                           indf1	equ	0xFE7
 35093                           postdec1	equ	0xFE5
 35094                           plusw1	equ	0xFE3
 35095                           fsr1h	equ	0xFE2
 35096                           fsr1l	equ	0xFE1
 35097                           indf2	equ	0xFDF
 35098                           postinc2	equ	0xFDE
 35099                           postdec2	equ	0xFDD
 35100                           plusw2	equ	0xFDB
 35101                           fsr2h	equ	0xFDA
 35102                           fsr2l	equ	0xFD9
 35103                           status	equ	0xFD8
 35104                           
 35105 ;; *************** function __get_first_cluster *****************
 35106 ;; Defined at:
 35107 ;;		line 487 in file "fat16.c"
 35108 ;; Parameters:    Size  Location     Type
 35109 ;;  file_number     1    wreg     unsigned char 
 35110 ;; Auto vars:     Size  Location     Type
 35111 ;;  file_number     1   55[COMRAM] unsigned char 
 35112 ;;  first_cluste    2   53[COMRAM] unsigned int 
 35113 ;;  offset          2   51[COMRAM] unsigned int 
 35114 ;;  sector          2   49[COMRAM] unsigned int 
 35115 ;; Return value:  Size  Location     Type
 35116 ;;                  2   47[COMRAM] unsigned int 
 35117 ;; Registers used:
 35118 ;;		wreg, status,2, status,0, cstack
 35119 ;; Tracked objects:
 35120 ;;		On entry : 0/0
 35121 ;;		On exit  : 0/0
 35122 ;;		Unchanged: 0/0
 35123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35125 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35127 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35128 ;;Total ram usage:        9 bytes
 35129 ;; Hardware stack levels used:    1
 35130 ;; Hardware stack levels required when called:    5
 35131 ;; This function calls:
 35132 ;;		__offset_from_file_number
 35133 ;;		__sector_from_file_number
 35134 ;;		_flash_partial_read
 35135 ;; This function is called by:
 35136 ;;		_fat_delete_file
 35137 ;; This function uses a non-reentrant model
 35138 ;;
 35139                           
 35140                           	psect	text174
 35141  007DEA                     __ptext174:
 35142                           	opt stack 0
 35143  007DEA                     __get_first_cluster:
 35144                           	opt stack 21
 35145                           
 35146                           ;incstack = 0
 35147                           ;__get_first_cluster@file_number stored from wreg
 35148  007DEA  6E38               	movwf	__get_first_cluster@file_number,c
 35149                           
 35150                           ;fat16.c: 489: uint16_t first_cluster;;fat16.c: 490: uint16_t sector;;fat16.c: 491: uint
      +                          16_t offset;;fat16.c: 494: sector = _sector_from_file_number(file_number);
 35151  007DEC  5038               	movf	__get_first_cluster@file_number,w,c
 35152  007DEE  ECCB  F042         	call	__sector_from_file_number
 35153  007DF2  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 35154  007DF6  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 35155                           
 35156                           ;fat16.c: 495: offset = _offset_from_file_number(file_number);
 35157  007DFA  5038               	movf	__get_first_cluster@file_number,w,c
 35158  007DFC  EC57  F043         	call	__offset_from_file_number
 35159  007E00  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 35160  007E04  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 35161                           
 35162                           ;fat16.c: 498: flash_partial_read(sector, offset, 2, &first_cluster);
 35163  007E08  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 35164  007E0C  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 35165  007E10  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 35166  007E14  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 35167  007E18  0E00               	movlw	0
 35168  007E1A  6E2D               	movwf	flash_partial_read@length+1,c
 35169  007E1C  0E02               	movlw	2
 35170  007E1E  6E2C               	movwf	flash_partial_read@length,c
 35171  007E20  0E36               	movlw	low __get_first_cluster@first_cluster
 35172  007E22  6E2E               	movwf	flash_partial_read@data,c
 35173  007E24  0E00               	movlw	high __get_first_cluster@first_cluster
 35174  007E26  6E2F               	movwf	flash_partial_read@data+1,c
 35175  007E28  EC12  F042         	call	_flash_partial_read	;wreg free
 35176                           
 35177                           ;fat16.c: 499: return first_cluster;
 35178  007E2C  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 35179  007E30  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 35180  007E34  0012               	return	
 35181  007E36                     __end_of__get_first_cluster:
 35182                           	opt stack 0
 35183                           tosu	equ	0xFFF
 35184                           tosh	equ	0xFFE
 35185                           tosl	equ	0xFFD
 35186                           pclath	equ	0xFFA
 35187                           tblptru	equ	0xFF8
 35188                           tblptrh	equ	0xFF7
 35189                           tblptrl	equ	0xFF6
 35190                           tablat	equ	0xFF5
 35191                           prodh	equ	0xFF4
 35192                           prodl	equ	0xFF3
 35193                           intcon	equ	0xFF2
 35194                           intcon2	equ	0xFF1
 35195                           intcon3	equ	0xFF0
 35196                           indf0	equ	0xFEF
 35197                           postinc0	equ	0xFEE
 35198                           fsr0h	equ	0xFEA
 35199                           fsr0l	equ	0xFE9
 35200                           wreg	equ	0xFE8
 35201                           indf1	equ	0xFE7
 35202                           postdec1	equ	0xFE5
 35203                           plusw1	equ	0xFE3
 35204                           fsr1h	equ	0xFE2
 35205                           fsr1l	equ	0xFE1
 35206                           indf2	equ	0xFDF
 35207                           postinc2	equ	0xFDE
 35208                           postdec2	equ	0xFDD
 35209                           plusw2	equ	0xFDB
 35210                           fsr2h	equ	0xFDA
 35211                           fsr2l	equ	0xFD9
 35212                           status	equ	0xFD8
 35213                           
 35214 ;; *************** function __delete_root *****************
 35215 ;; Defined at:
 35216 ;;		line 472 in file "fat16.c"
 35217 ;; Parameters:    Size  Location     Type
 35218 ;;  file_number     1    wreg     unsigned char 
 35219 ;; Auto vars:     Size  Location     Type
 35220 ;;  file_number     1   45[COMRAM] unsigned char 
 35221 ;;  offset          2   42[COMRAM] unsigned int 
 35222 ;;  sector          2   40[COMRAM] unsigned int 
 35223 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 35224 ;; Return value:  Size  Location     Type
 35225 ;;                  1    wreg      void 
 35226 ;; Registers used:
 35227 ;;		wreg, status,2, status,0, cstack
 35228 ;; Tracked objects:
 35229 ;;		On entry : 0/0
 35230 ;;		On exit  : 0/0
 35231 ;;		Unchanged: 0/0
 35232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35234 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35237 ;;Total ram usage:        6 bytes
 35238 ;; Hardware stack levels used:    1
 35239 ;; Hardware stack levels required when called:    5
 35240 ;; This function calls:
 35241 ;;		__offset_from_file_number
 35242 ;;		__sector_from_file_number
 35243 ;;		_flash_partial_write
 35244 ;; This function is called by:
 35245 ;;		_fat_delete_file
 35246 ;; This function uses a non-reentrant model
 35247 ;;
 35248                           
 35249                           	psect	text175
 35250  007EC6                     __ptext175:
 35251                           	opt stack 0
 35252  007EC6                     __delete_root:
 35253                           	opt stack 21
 35254                           
 35255                           ;incstack = 0
 35256                           ;__delete_root@file_number stored from wreg
 35257  007EC6  6E2E               	movwf	__delete_root@file_number,c
 35258                           
 35259                           ;fat16.c: 474: uint16_t sector;;fat16.c: 475: uint16_t offset;;fat16.c: 476: uint8_t del
      +                          eted_value;;fat16.c: 479: sector = _sector_from_file_number(file_number);
 35260  007EC8  502E               	movf	__delete_root@file_number,w,c
 35261  007ECA  ECCB  F042         	call	__sector_from_file_number
 35262  007ECE  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 35263  007ED2  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 35264                           
 35265                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 35266  007ED6  502E               	movf	__delete_root@file_number,w,c
 35267  007ED8  EC57  F043         	call	__offset_from_file_number
 35268  007EDC  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 35269  007EE0  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 35270                           
 35271                           ;fat16.c: 483: deleted_value = 0xE5;
 35272  007EE4  0EE5               	movlw	229
 35273  007EE6  6E2D               	movwf	__delete_root@deleted_value,c
 35274                           
 35275                           ;fat16.c: 484: flash_partial_write(sector, offset, 1, &deleted_value);
 35276  007EE8  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 35277  007EEC  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 35278  007EF0  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 35279  007EF4  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 35280  007EF8  0E00               	movlw	0
 35281  007EFA  6E25               	movwf	flash_partial_write@length+1,c
 35282  007EFC  0E01               	movlw	1
 35283  007EFE  6E24               	movwf	flash_partial_write@length,c
 35284  007F00  0E2D               	movlw	low __delete_root@deleted_value
 35285  007F02  6E26               	movwf	flash_partial_write@data,c
 35286  007F04  0E00               	movlw	high __delete_root@deleted_value
 35287  007F06  6E27               	movwf	flash_partial_write@data+1,c
 35288  007F08  EC5B  F039         	call	_flash_partial_write	;wreg free
 35289  007F0C  0012               	return		;funcret
 35290  007F0E                     __end_of__delete_root:
 35291                           	opt stack 0
 35292                           tosu	equ	0xFFF
 35293                           tosh	equ	0xFFE
 35294                           tosl	equ	0xFFD
 35295                           pclath	equ	0xFFA
 35296                           tblptru	equ	0xFF8
 35297                           tblptrh	equ	0xFF7
 35298                           tblptrl	equ	0xFF6
 35299                           tablat	equ	0xFF5
 35300                           prodh	equ	0xFF4
 35301                           prodl	equ	0xFF3
 35302                           intcon	equ	0xFF2
 35303                           intcon2	equ	0xFF1
 35304                           intcon3	equ	0xFF0
 35305                           indf0	equ	0xFEF
 35306                           postinc0	equ	0xFEE
 35307                           fsr0h	equ	0xFEA
 35308                           fsr0l	equ	0xFE9
 35309                           wreg	equ	0xFE8
 35310                           indf1	equ	0xFE7
 35311                           postdec1	equ	0xFE5
 35312                           plusw1	equ	0xFE3
 35313                           fsr1h	equ	0xFE2
 35314                           fsr1l	equ	0xFE1
 35315                           indf2	equ	0xFDF
 35316                           postinc2	equ	0xFDE
 35317                           postdec2	equ	0xFDD
 35318                           plusw2	equ	0xFDB
 35319                           fsr2h	equ	0xFDA
 35320                           fsr2l	equ	0xFD9
 35321                           status	equ	0xFD8
 35322                           
 35323 ;; *************** function __parse_file_create *****************
 35324 ;; Defined at:
 35325 ;;		line 550 in file "api.c"
 35326 ;; Parameters:    Size  Location     Type
 35327 ;;  data            2   84[COMRAM] PTR unsigned char 
 35328 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35329 ;; Auto vars:     Size  Location     Type
 35330 ;;  file_size       4   87[COMRAM] unsigned long 
 35331 ;; Return value:  Size  Location     Type
 35332 ;;                  1    wreg      unsigned char 
 35333 ;; Registers used:
 35334 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35335 ;; Tracked objects:
 35336 ;;		On entry : 0/0
 35337 ;;		On exit  : 0/0
 35338 ;;		Unchanged: 0/0
 35339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35341 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35344 ;;Total ram usage:        7 bytes
 35345 ;; Hardware stack levels used:    1
 35346 ;; Hardware stack levels required when called:    8
 35347 ;; This function calls:
 35348 ;;		_fat_create_file
 35349 ;; This function is called by:
 35350 ;;		__parse_command_long
 35351 ;; This function uses a non-reentrant model
 35352 ;;
 35353                           
 35354                           	psect	text176
 35355  004F94                     __ptext176:
 35356                           	opt stack 0
 35357  004F94                     __parse_file_create:
 35358                           	opt stack 20
 35359                           
 35360                           ;api.c: 553: uint32_t file_size;;api.c: 554: if((data[0]!=COMMAND_FILE_CREATE) || (data[
      +                          16]!=0xBD) || (data[17]!=0x4F))
 35361                           
 35362                           ;incstack = 0
 35363  004F94  C055  FFD9         	movff	__parse_file_create@data,fsr2l
 35364  004F98  C056  FFDA         	movff	__parse_file_create@data+1,fsr2h
 35365  004F9C  0E52               	movlw	82
 35366  004F9E  18DE               	xorwf	postinc2,w,c
 35367  004FA0  A4D8               	btfss	status,2,c
 35368  004FA2  D014               	goto	u10640
 35369  004FA4  EE20 F010          	lfsr	2,16
 35370  004FA8  5055               	movf	__parse_file_create@data,w,c
 35371  004FAA  26D9               	addwf	fsr2l,f,c
 35372  004FAC  5056               	movf	__parse_file_create@data+1,w,c
 35373  004FAE  22DA               	addwfc	fsr2h,f,c
 35374  004FB0  0EBD               	movlw	189
 35375  004FB2  18DE               	xorwf	postinc2,w,c
 35376  004FB4  A4D8               	btfss	status,2,c
 35377  004FB6  D00A               	goto	u10640
 35378  004FB8  EE20 F011          	lfsr	2,17
 35379  004FBC  5055               	movf	__parse_file_create@data,w,c
 35380  004FBE  26D9               	addwf	fsr2l,f,c
 35381  004FC0  5056               	movf	__parse_file_create@data+1,w,c
 35382  004FC2  22DA               	addwfc	fsr2h,f,c
 35383  004FC4  0E4F               	movlw	79
 35384  004FC6  18DE               	xorwf	postinc2,w,c
 35385  004FC8  B4D8               	btfsc	status,2,c
 35386  004FCA  D002               	goto	l2751
 35387  004FCC                     u10640:
 35388                           
 35389                           ;api.c: 555: {;api.c: 556: return 18;
 35390  004FCC  0E12               	movlw	18
 35391  004FCE  0012               	return	
 35392  004FD0                     l2751:
 35393                           
 35394                           ;api.c: 557: };api.c: 560: file_size = data[12];
 35395  004FD0  EE20 F00C          	lfsr	2,12
 35396  004FD4  5055               	movf	__parse_file_create@data,w,c
 35397  004FD6  26D9               	addwf	fsr2l,f,c
 35398  004FD8  5056               	movf	__parse_file_create@data+1,w,c
 35399  004FDA  22DA               	addwfc	fsr2h,f,c
 35400  004FDC  50DF               	movf	indf2,w,c
 35401  004FDE  6E57               	movwf	??__parse_file_create& (0+255),c
 35402  004FE0  5057               	movf	??__parse_file_create,w,c
 35403  004FE2  6E58               	movwf	__parse_file_create@file_size,c
 35404  004FE4  6A59               	clrf	__parse_file_create@file_size+1,c
 35405  004FE6  6A5A               	clrf	__parse_file_create@file_size+2,c
 35406  004FE8  6A5B               	clrf	__parse_file_create@file_size+3,c
 35407                           
 35408                           ;api.c: 561: file_size <<= 8;
 35409  004FEA  C05A  F05B         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 35410  004FEE  C059  F05A         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 35411  004FF2  C058  F059         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 35412  004FF6  6A58               	clrf	__parse_file_create@file_size,c
 35413                           
 35414                           ;api.c: 562: file_size |= data[13];
 35415  004FF8  EE20 F00D          	lfsr	2,13
 35416  004FFC  5055               	movf	__parse_file_create@data,w,c
 35417  004FFE  26D9               	addwf	fsr2l,f,c
 35418  005000  5056               	movf	__parse_file_create@data+1,w,c
 35419  005002  22DA               	addwfc	fsr2h,f,c
 35420  005004  50DF               	movf	indf2,w,c
 35421  005006  6E57               	movwf	??__parse_file_create& (0+255),c
 35422  005008  5057               	movf	??__parse_file_create,w,c
 35423  00500A  1258               	iorwf	__parse_file_create@file_size,f,c
 35424                           
 35425                           ;api.c: 563: file_size <<= 8;
 35426  00500C  C05A  F05B         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 35427  005010  C059  F05A         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 35428  005014  C058  F059         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 35429  005018  6A58               	clrf	__parse_file_create@file_size,c
 35430                           
 35431                           ;api.c: 564: file_size |= data[14];
 35432  00501A  EE20 F00E          	lfsr	2,14
 35433  00501E  5055               	movf	__parse_file_create@data,w,c
 35434  005020  26D9               	addwf	fsr2l,f,c
 35435  005022  5056               	movf	__parse_file_create@data+1,w,c
 35436  005024  22DA               	addwfc	fsr2h,f,c
 35437  005026  50DF               	movf	indf2,w,c
 35438  005028  6E57               	movwf	??__parse_file_create& (0+255),c
 35439  00502A  5057               	movf	??__parse_file_create,w,c
 35440  00502C  1258               	iorwf	__parse_file_create@file_size,f,c
 35441                           
 35442                           ;api.c: 565: file_size <<= 8;
 35443  00502E  C05A  F05B         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 35444  005032  C059  F05A         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 35445  005036  C058  F059         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 35446  00503A  6A58               	clrf	__parse_file_create@file_size,c
 35447                           
 35448                           ;api.c: 566: file_size |= data[15];
 35449  00503C  EE20 F00F          	lfsr	2,15
 35450  005040  5055               	movf	__parse_file_create@data,w,c
 35451  005042  26D9               	addwf	fsr2l,f,c
 35452  005044  5056               	movf	__parse_file_create@data+1,w,c
 35453  005046  22DA               	addwfc	fsr2h,f,c
 35454  005048  50DF               	movf	indf2,w,c
 35455  00504A  6E57               	movwf	??__parse_file_create& (0+255),c
 35456  00504C  5057               	movf	??__parse_file_create,w,c
 35457  00504E  1258               	iorwf	__parse_file_create@file_size,f,c
 35458                           
 35459                           ;api.c: 569: fat_create_file(&data[1], &data[9], file_size);
 35460  005050  0E01               	movlw	1
 35461  005052  2455               	addwf	__parse_file_create@data,w,c
 35462  005054  6E49               	movwf	fat_create_file@name,c
 35463  005056  0E00               	movlw	0
 35464  005058  2056               	addwfc	__parse_file_create@data+1,w,c
 35465  00505A  6E4A               	movwf	fat_create_file@name+1,c
 35466  00505C  0E09               	movlw	9
 35467  00505E  2455               	addwf	__parse_file_create@data,w,c
 35468  005060  6E4B               	movwf	fat_create_file@extension,c
 35469  005062  0E00               	movlw	0
 35470  005064  2056               	addwfc	__parse_file_create@data+1,w,c
 35471  005066  6E4C               	movwf	fat_create_file@extension+1,c
 35472  005068  C058  F04D         	movff	__parse_file_create@file_size,fat_create_file@size
 35473  00506C  C059  F04E         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 35474  005070  C05A  F04F         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 35475  005074  C05B  F050         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 35476  005078  ECD5  F01F         	call	_fat_create_file	;wreg free
 35477                           
 35478                           ;api.c: 571: return 18;
 35479  00507C  0E12               	movlw	18
 35480  00507E  0012               	return	
 35481  005080                     __end_of__parse_file_create:
 35482                           	opt stack 0
 35483                           tosu	equ	0xFFF
 35484                           tosh	equ	0xFFE
 35485                           tosl	equ	0xFFD
 35486                           pclath	equ	0xFFA
 35487                           tblptru	equ	0xFF8
 35488                           tblptrh	equ	0xFF7
 35489                           tblptrl	equ	0xFF6
 35490                           tablat	equ	0xFF5
 35491                           prodh	equ	0xFF4
 35492                           prodl	equ	0xFF3
 35493                           intcon	equ	0xFF2
 35494                           intcon2	equ	0xFF1
 35495                           intcon3	equ	0xFF0
 35496                           indf0	equ	0xFEF
 35497                           postinc0	equ	0xFEE
 35498                           fsr0h	equ	0xFEA
 35499                           fsr0l	equ	0xFE9
 35500                           wreg	equ	0xFE8
 35501                           indf1	equ	0xFE7
 35502                           postdec1	equ	0xFE5
 35503                           plusw1	equ	0xFE3
 35504                           fsr1h	equ	0xFE2
 35505                           fsr1l	equ	0xFE1
 35506                           indf2	equ	0xFDF
 35507                           postinc2	equ	0xFDE
 35508                           postdec2	equ	0xFDD
 35509                           plusw2	equ	0xFDB
 35510                           fsr2h	equ	0xFDA
 35511                           fsr2l	equ	0xFD9
 35512                           status	equ	0xFD8
 35513                           
 35514 ;; *************** function _fat_create_file *****************
 35515 ;; Defined at:
 35516 ;;		line 571 in file "fat16.c"
 35517 ;; Parameters:    Size  Location     Type
 35518 ;;  name            2   72[COMRAM] PTR unsigned char 
 35519 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35520 ;;  extension       2   74[COMRAM] PTR unsigned char 
 35521 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35522 ;;  size            4   76[COMRAM] unsigned long 
 35523 ;; Auto vars:     Size  Location     Type
 35524 ;;  root_entry     32    5[BANK0 ] struct .
 35525 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 35526 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 35527 ;;  file_number     1    4[BANK0 ] unsigned char 
 35528 ;; Return value:  Size  Location     Type
 35529 ;;                  1    wreg      unsigned char 
 35530 ;; Registers used:
 35531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35532 ;; Tracked objects:
 35533 ;;		On entry : 0/0
 35534 ;;		On exit  : 0/0
 35535 ;;		Unchanged: 0/0
 35536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35537 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35538 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35540 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35541 ;;Total ram usage:       49 bytes
 35542 ;; Hardware stack levels used:    1
 35543 ;; Hardware stack levels required when called:    7
 35544 ;; This function calls:
 35545 ;;		__get_available_root_entry
 35546 ;;		__get_date
 35547 ;;		__get_time
 35548 ;;		__make_cluster_chain
 35549 ;;		__write_root
 35550 ;;		_fat_find_file
 35551 ;;		_memcpy
 35552 ;; This function is called by:
 35553 ;;		__parse_file_create
 35554 ;; This function uses a non-reentrant model
 35555 ;;
 35556                           
 35557                           	psect	text177
 35558  003FAA                     __ptext177:
 35559                           	opt stack 0
 35560  003FAA                     _fat_create_file:
 35561                           	opt stack 20
 35562                           
 35563                           ;fat16.c: 573: rootEntry_t root_entry;;fat16.c: 574: uint8_t file_number;;fat16.c: 575: 
      +                          uint16_t number_of_clusters;;fat16.c: 576: uint16_t first_cluster;;fat16.c: 580: if(fat_
      +                          find_file(name, extension) != 0xFF)
 35564                           
 35565                           ;incstack = 0
 35566  003FAA  C049  F02C         	movff	fat_create_file@name,fat_find_file@name
 35567  003FAE  C04A  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 35568  003FB2  C04B  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 35569  003FB6  C04C  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 35570  003FBA  EC56  F02B         	call	_fat_find_file	;wreg free
 35571  003FBE  0AFF               	xorlw	255
 35572  003FC0  A4D8               	btfss	status,2,c
 35573  003FC2  0012               	return	
 35574                           
 35575                           ;fat16.c: 585: };fat16.c: 589: file_number = _get_available_root_entry();
 35576                           
 35577                           ;fat16.c: 581: {;fat16.c: 584: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 35578  003FC4  ECA1  F043         	call	__get_available_root_entry	;wreg free
 35579  003FC8  0100               	movlb	0	; () banked
 35580  003FCA  6F64               	movwf	fat_create_file@file_number& (0+255),b
 35581                           
 35582                           ; BSR set to: 0
 35583                           ;fat16.c: 590: if(file_number == 0xFF)
 35584  003FCC  2964               	incf	fat_create_file@file_number& (0+255),w,b
 35585  003FCE  B4D8               	btfsc	status,2,c
 35586  003FD0  0012               	return	
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;fat16.c: 595: };fat16.c: 598: number_of_clusters = (size + 512 - 1) >> 9;
 35590                           
 35591                           ; BSR set to: 0
 35592                           
 35593                           ; BSR set to: 0
 35594                           ;fat16.c: 591: {;fat16.c: 594: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 35595  003FD2  0EFF               	movlw	255
 35596  003FD4  244D               	addwf	fat_create_file@size,w,c
 35597  003FD6  6E51               	movwf	??_fat_create_file& (0+255),c
 35598  003FD8  0E01               	movlw	1
 35599  003FDA  204E               	addwfc	fat_create_file@size+1,w,c
 35600  003FDC  6E52               	movwf	(??_fat_create_file+1)& (0+255),c
 35601  003FDE  0E00               	movlw	0
 35602  003FE0  204F               	addwfc	fat_create_file@size+2,w,c
 35603  003FE2  6E53               	movwf	(??_fat_create_file+2)& (0+255),c
 35604  003FE4  0E00               	movlw	0
 35605  003FE6  2050               	addwfc	fat_create_file@size+3,w,c
 35606  003FE8  6E54               	movwf	(??_fat_create_file+3)& (0+255),c
 35607  003FEA  0E0A               	movlw	10
 35608  003FEC  D005               	goto	u9900
 35609  003FEE                     u9905:
 35610  003FEE  90D8               	bcf	status,0,c
 35611  003FF0  3254               	rrcf	??_fat_create_file+3,f,c
 35612  003FF2  3253               	rrcf	??_fat_create_file+2,f,c
 35613  003FF4  3252               	rrcf	??_fat_create_file+1,f,c
 35614  003FF6  3251               	rrcf	??_fat_create_file,f,c
 35615  003FF8                     u9900:
 35616  003FF8  2EE8               	decfsz	wreg,f,c
 35617  003FFA  D7F9               	goto	u9905
 35618  003FFC  C051  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 35619  004000  C052  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 35620                           
 35621                           ; BSR set to: 0
 35622                           ;fat16.c: 601: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 35623  004004  0E00               	movlw	0
 35624  004006  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 35625  004008  0E00               	movlw	0
 35626  00400A  6E36               	movwf	__make_cluster_chain@first_cluster,c
 35627  00400C  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 35628  004010  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 35629  004014  EC45  F00C         	call	__make_cluster_chain	;wreg free
 35630  004018  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 35631  00401C  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 35632                           
 35633                           ;fat16.c: 604: if(first_cluster == 0xFFFF)
 35634  004020  0100               	movlb	0	; () banked
 35635  004022  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 35636  004024  E103               	bnz	l12971
 35637  004026  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 35638  004028  B4D8               	btfsc	status,2,c
 35639  00402A  0012               	return	
 35640  00402C                     l12971:
 35641                           
 35642                           ; BSR set to: 0
 35643                           ;fat16.c: 609: };fat16.c: 612: memcpy(root_entry.fileName, name, 8);
 35644  00402C  0E65               	movlw	low fat_create_file@root_entry
 35645  00402E  6E01               	movwf	memcpy@d1,c
 35646  004030  0E00               	movlw	high fat_create_file@root_entry
 35647  004032  6E02               	movwf	memcpy@d1+1,c
 35648  004034  C049  F003         	movff	fat_create_file@name,memcpy@s1
 35649  004038  C04A  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 35650  00403C  5003               	movf	memcpy@s1,w,c
 35651  00403E  1004               	iorwf	memcpy@s1+1,w,c
 35652  004040  A4D8               	btfss	status,2,c
 35653  004042  0E20               	movlw	32
 35654  004044  6E05               	movwf	memcpy@s1+2,c
 35655  004046  0E00               	movlw	0
 35656  004048  6E07               	movwf	memcpy@n+1,c
 35657  00404A  0E08               	movlw	8
 35658  00404C  6E06               	movwf	memcpy@n,c
 35659  00404E  EC9C  F03A         	call	_memcpy	;wreg free
 35660                           
 35661                           ;fat16.c: 613: memcpy(root_entry.fileExtension, extension, 3);
 35662  004052  0E6D               	movlw	low (fat_create_file@root_entry+8)
 35663  004054  6E01               	movwf	memcpy@d1,c
 35664  004056  0E00               	movlw	high (fat_create_file@root_entry+8)
 35665  004058  6E02               	movwf	memcpy@d1+1,c
 35666  00405A  C04B  F003         	movff	fat_create_file@extension,memcpy@s1
 35667  00405E  C04C  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 35668  004062  5003               	movf	memcpy@s1,w,c
 35669  004064  1004               	iorwf	memcpy@s1+1,w,c
 35670  004066  A4D8               	btfss	status,2,c
 35671  004068  0E20               	movlw	32
 35672  00406A  6E05               	movwf	memcpy@s1+2,c
 35673  00406C  0E00               	movlw	0
 35674  00406E  6E07               	movwf	memcpy@n+1,c
 35675  004070  0E03               	movlw	3
 35676  004072  6E06               	movwf	memcpy@n,c
 35677  004074  EC9C  F03A         	call	_memcpy	;wreg free
 35678                           
 35679                           ;fat16.c: 614: root_entry.attributes = 0x00;
 35680  004078  0E00               	movlw	0
 35681  00407A  0100               	movlb	0	; () banked
 35682  00407C  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 35683                           
 35684                           ; BSR set to: 0
 35685                           ;fat16.c: 615: root_entry.reserved1 = 0x00;
 35686  00407E  0E00               	movlw	0
 35687  004080  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 35688                           
 35689                           ; BSR set to: 0
 35690                           ;fat16.c: 616: root_entry.secondFractions = 0x00;
 35691  004082  0E00               	movlw	0
 35692  004084  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 35693                           
 35694                           ; BSR set to: 0
 35695                           ;fat16.c: 617: root_entry.createdTime = _get_time();
 35696  004086  EC24  F045         	call	__get_time	;wreg free
 35697  00408A  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 35698  00408E  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 35699                           
 35700                           ;fat16.c: 618: root_entry.createdDate = _get_date();
 35701  004092  EC29  F045         	call	__get_date	;wreg free
 35702  004096  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 35703  00409A  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 35704                           
 35705                           ;fat16.c: 619: root_entry.lastAccessDate = root_entry.createdDate;
 35706  00409E  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 35707  0040A2  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 35708                           
 35709                           ;fat16.c: 620: root_entry.reserved2 = 0x00;
 35710  0040A6  0E00               	movlw	0
 35711  0040A8  0100               	movlb	0	; () banked
 35712  0040AA  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 35713  0040AC  0E00               	movlw	0
 35714  0040AE  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 35715                           
 35716                           ; BSR set to: 0
 35717                           ;fat16.c: 621: root_entry.modifiedTime = root_entry.createdTime;
 35718  0040B0  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 35719  0040B4  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 35720                           
 35721                           ; BSR set to: 0
 35722                           ;fat16.c: 622: root_entry.modifiedDate = root_entry.createdDate;
 35723  0040B8  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 35724  0040BC  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 35725                           
 35726                           ; BSR set to: 0
 35727                           ;fat16.c: 623: root_entry.firstCluster = first_cluster;
 35728  0040C0  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 35729  0040C4  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 35730                           
 35731                           ; BSR set to: 0
 35732                           ;fat16.c: 624: root_entry.fileSize = size;
 35733  0040C8  C04D  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 35734  0040CC  C04E  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 35735  0040D0  C04F  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 35736  0040D4  C050  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 35737                           
 35738                           ; BSR set to: 0
 35739                           ;fat16.c: 627: _write_root(file_number, &root_entry);
 35740  0040D8  0E65               	movlw	low fat_create_file@root_entry
 35741  0040DA  6E29               	movwf	__write_root@data,c
 35742  0040DC  0E00               	movlw	high fat_create_file@root_entry
 35743  0040DE  6E2A               	movwf	__write_root@data+1,c
 35744  0040E0  5164               	movf	fat_create_file@file_number& (0+255),w,b
 35745  0040E2  ECEE  F03F         	call	__write_root
 35746  0040E6  0012               	return	
 35747  0040E8                     __end_of_fat_create_file:
 35748                           	opt stack 0
 35749                           tosu	equ	0xFFF
 35750                           tosh	equ	0xFFE
 35751                           tosl	equ	0xFFD
 35752                           pclath	equ	0xFFA
 35753                           tblptru	equ	0xFF8
 35754                           tblptrh	equ	0xFF7
 35755                           tblptrl	equ	0xFF6
 35756                           tablat	equ	0xFF5
 35757                           prodh	equ	0xFF4
 35758                           prodl	equ	0xFF3
 35759                           intcon	equ	0xFF2
 35760                           intcon2	equ	0xFF1
 35761                           intcon3	equ	0xFF0
 35762                           indf0	equ	0xFEF
 35763                           postinc0	equ	0xFEE
 35764                           fsr0h	equ	0xFEA
 35765                           fsr0l	equ	0xFE9
 35766                           wreg	equ	0xFE8
 35767                           indf1	equ	0xFE7
 35768                           postdec1	equ	0xFE5
 35769                           plusw1	equ	0xFE3
 35770                           fsr1h	equ	0xFE2
 35771                           fsr1l	equ	0xFE1
 35772                           indf2	equ	0xFDF
 35773                           postinc2	equ	0xFDE
 35774                           postdec2	equ	0xFDD
 35775                           plusw2	equ	0xFDB
 35776                           fsr2h	equ	0xFDA
 35777                           fsr2l	equ	0xFD9
 35778                           status	equ	0xFD8
 35779                           
 35780 ;; *************** function _memcpy *****************
 35781 ;; Defined at:
 35782 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 35783 ;; Parameters:    Size  Location     Type
 35784 ;;  d1              2    0[COMRAM] PTR void 
 35785 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35786 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35787 ;;  s1              3    2[COMRAM] PTR const void 
 35788 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35789 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 35790 ;;		 -> SetupPkt(8), 
 35791 ;;  n               2    5[COMRAM] unsigned int 
 35792 ;; Auto vars:     Size  Location     Type
 35793 ;;  s               3    7[COMRAM] PTR const unsigned char 
 35794 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35795 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 35796 ;;		 -> SetupPkt(8), 
 35797 ;;  d               2   10[COMRAM] PTR unsigned char 
 35798 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35799 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35800 ;;  tmp             1   12[COMRAM] unsigned char 
 35801 ;; Return value:  Size  Location     Type
 35802 ;;                  2    0[COMRAM] PTR void 
 35803 ;; Registers used:
 35804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35805 ;; Tracked objects:
 35806 ;;		On entry : 0/0
 35807 ;;		On exit  : 0/0
 35808 ;;		Unchanged: 0/0
 35809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35810 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35811 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35813 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35814 ;;Total ram usage:       13 bytes
 35815 ;; Hardware stack levels used:    1
 35816 ;; This function calls:
 35817 ;;		Nothing
 35818 ;; This function is called by:
 35819 ;;		_USBCtrlEPService
 35820 ;;		_MSDProcessCommandMediaPresent
 35821 ;;		__flash_set_page_size
 35822 ;;		_fat_create_file
 35823 ;;		_internalFlash_read
 35824 ;;		_api_prepare
 35825 ;; This function uses a non-reentrant model
 35826 ;;
 35827                           
 35828                           	psect	text178
 35829  007538                     __ptext178:
 35830                           	opt stack 0
 35831  007538                     _memcpy:
 35832                           	opt stack 27
 35833                           
 35834                           ;incstack = 0
 35835  007538  C003  F008         	movff	memcpy@s1,memcpy@s
 35836  00753C  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 35837  007540  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 35838  007544  C001  F00B         	movff	memcpy@d1,memcpy@d
 35839  007548  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 35840  00754C  D01F               	goto	l3607
 35841  00754E                     l11303:
 35842  00754E  C008  FFF6         	movff	memcpy@s,tblptrl
 35843  007552  C009  FFF7         	movff	memcpy@s+1,tblptrh
 35844  007556  C00A  FFF8         	movff	memcpy@s+2,tblptru
 35845  00755A  BAF8               	btfsc	tblptru,5,c
 35846  00755C  D003               	bra	u8217
 35847  00755E  0008               	tblrd		*
 35848  007560  50F5               	movf	tablat,w,c
 35849  007562  D005               	bra	u8210
 35850  007564                     u8217:
 35851  007564  CFF6 FFE9          	movff	tblptrl,fsr0l
 35852  007568  CFF7 FFEA          	movff	tblptrh,fsr0h
 35853  00756C  50EF               	movf	indf0,w,c
 35854  00756E                     u8210:
 35855  00756E  6E0D               	movwf	memcpy@tmp,c
 35856  007570  0E01               	movlw	1
 35857  007572  2608               	addwf	memcpy@s,f,c
 35858  007574  0E00               	movlw	0
 35859  007576  2209               	addwfc	memcpy@s+1,f,c
 35860  007578  0E00               	movlw	0
 35861  00757A  220A               	addwfc	memcpy@s+2,f,c
 35862  00757C  C00B  FFD9         	movff	memcpy@d,fsr2l
 35863  007580  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 35864  007584  C00D  FFDF         	movff	memcpy@tmp,indf2
 35865  007588  4A0B               	infsnz	memcpy@d,f,c
 35866  00758A  2A0C               	incf	memcpy@d+1,f,c
 35867  00758C                     l3607:
 35868  00758C  0606               	decf	memcpy@n,f,c
 35869  00758E  A0D8               	btfss	status,0,c
 35870  007590  0607               	decf	memcpy@n+1,f,c
 35871  007592  2806               	incf	memcpy@n,w,c
 35872  007594  E1DC               	bnz	l11303
 35873  007596  2807               	incf	memcpy@n+1,w,c
 35874  007598  B4D8               	btfsc	status,2,c
 35875  00759A  0012               	return	
 35876  00759C  D7D8               	goto	l3608
 35877  00759E                     __end_of_memcpy:
 35878                           	opt stack 0
 35879                           tosu	equ	0xFFF
 35880                           tosh	equ	0xFFE
 35881                           tosl	equ	0xFFD
 35882                           pclath	equ	0xFFA
 35883                           tblptru	equ	0xFF8
 35884                           tblptrh	equ	0xFF7
 35885                           tblptrl	equ	0xFF6
 35886                           tablat	equ	0xFF5
 35887                           prodh	equ	0xFF4
 35888                           prodl	equ	0xFF3
 35889                           intcon	equ	0xFF2
 35890                           intcon2	equ	0xFF1
 35891                           intcon3	equ	0xFF0
 35892                           indf0	equ	0xFEF
 35893                           postinc0	equ	0xFEE
 35894                           fsr0h	equ	0xFEA
 35895                           fsr0l	equ	0xFE9
 35896                           wreg	equ	0xFE8
 35897                           indf1	equ	0xFE7
 35898                           postdec1	equ	0xFE5
 35899                           plusw1	equ	0xFE3
 35900                           fsr1h	equ	0xFE2
 35901                           fsr1l	equ	0xFE1
 35902                           indf2	equ	0xFDF
 35903                           postinc2	equ	0xFDE
 35904                           postdec2	equ	0xFDD
 35905                           plusw2	equ	0xFDB
 35906                           fsr2h	equ	0xFDA
 35907                           fsr2l	equ	0xFD9
 35908                           status	equ	0xFD8
 35909                           
 35910 ;; *************** function _fat_find_file *****************
 35911 ;; Defined at:
 35912 ;;		line 502 in file "fat16.c"
 35913 ;; Parameters:    Size  Location     Type
 35914 ;;  name            2   43[COMRAM] PTR unsigned char 
 35915 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 35916 ;;  extension       2   45[COMRAM] PTR unsigned char 
 35917 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 35918 ;; Auto vars:     Size  Location     Type
 35919 ;;  offset          2   52[COMRAM] unsigned int 
 35920 ;;  sector          2   50[COMRAM] unsigned int 
 35921 ;;  file_number     1   49[COMRAM] unsigned char 
 35922 ;; Return value:  Size  Location     Type
 35923 ;;                  1    wreg      unsigned char 
 35924 ;; Registers used:
 35925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35926 ;; Tracked objects:
 35927 ;;		On entry : 0/0
 35928 ;;		On exit  : 0/0
 35929 ;;		Unchanged: 0/0
 35930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35932 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35934 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35935 ;;Total ram usage:       11 bytes
 35936 ;; Hardware stack levels used:    1
 35937 ;; Hardware stack levels required when called:    5
 35938 ;; This function calls:
 35939 ;;		_flash_sector_read
 35940 ;;		_strncmp
 35941 ;; This function is called by:
 35942 ;;		_fat_create_file
 35943 ;;		__bootloader_find_file
 35944 ;;		__fill_buffer_find_file
 35945 ;; This function uses a non-reentrant model
 35946 ;;
 35947                           
 35948                           	psect	text179
 35949  0056AC                     __ptext179:
 35950                           	opt stack 0
 35951  0056AC                     _fat_find_file:
 35952                           	opt stack 23
 35953                           
 35954                           ;fat16.c: 504: uint8_t file_number = 0;
 35955                           
 35956                           ;incstack = 0
 35957  0056AC  0E00               	movlw	0
 35958  0056AE  6E32               	movwf	fat_find_file@file_number,c
 35959                           
 35960                           ;fat16.c: 505: uint16_t sector;;fat16.c: 506: uint16_t offset;;fat16.c: 508: for(sector 
      +                          = 34; sector <= 37; ++sector)
 35961  0056B0  0E00               	movlw	0
 35962  0056B2  6E34               	movwf	fat_find_file@sector+1,c
 35963  0056B4  0E22               	movlw	34
 35964  0056B6  6E33               	movwf	fat_find_file@sector,c
 35965  0056B8  5034               	movf	fat_find_file@sector+1,w,c
 35966  0056BA  E166               	bnz	l2020
 35967  0056BC  0E26               	movlw	38
 35968  0056BE  5C33               	subwf	fat_find_file@sector,w,c
 35969  0056C0  B0D8               	btfsc	status,0,c
 35970  0056C2  D062               	goto	u9060
 35971                           
 35972                           ;fat16.c: 509: {;fat16.c: 511: flash_sector_read(sector, buffer);
 35973  0056C4  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 35974  0056C8  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 35975  0056CC  0EC0               	movlw	low _buffer
 35976  0056CE  6E2A               	movwf	flash_sector_read@data,c
 35977  0056D0  0E03               	movlw	high _buffer
 35978  0056D2  6E2B               	movwf	flash_sector_read@data+1,c
 35979  0056D4  ECF9  F041         	call	_flash_sector_read	;wreg free
 35980                           
 35981                           ;fat16.c: 513: for(offset = 0; offset<512; offset += 32)
 35982  0056D8  0E00               	movlw	0
 35983  0056DA  6E36               	movwf	fat_find_file@offset+1,c
 35984  0056DC  0E00               	movlw	0
 35985  0056DE  6E35               	movwf	fat_find_file@offset,c
 35986  0056E0                     l11931:
 35987  0056E0  0E02               	movlw	2
 35988  0056E2  5C36               	subwf	fat_find_file@offset+1,w,c
 35989  0056E4  B0D8               	btfsc	status,0,c
 35990  0056E6  D04B               	goto	u9050
 35991                           
 35992                           ;fat16.c: 514: {;fat16.c: 515: if(buffer[offset]==0x00)
 35993  0056E8  0EC0               	movlw	low _buffer
 35994  0056EA  2435               	addwf	fat_find_file@offset,w,c
 35995  0056EC  6ED9               	movwf	fsr2l,c
 35996  0056EE  0E03               	movlw	high _buffer
 35997  0056F0  2036               	addwfc	fat_find_file@offset+1,w,c
 35998  0056F2  6EDA               	movwf	fsr2h,c
 35999  0056F4  50DF               	movf	indf2,w,c
 36000  0056F6  A4D8               	btfss	status,2,c
 36001  0056F8  D002               	goto	l2023
 36002                           
 36003                           ;fat16.c: 516: {;fat16.c: 519: return 0xFF;
 36004  0056FA  0EFF               	movlw	255
 36005  0056FC  0012               	return	
 36006  0056FE                     l2023:
 36007                           
 36008                           ;fat16.c: 521: else if(buffer[offset]==0xE5)
 36009  0056FE  0EC0               	movlw	low _buffer
 36010  005700  2435               	addwf	fat_find_file@offset,w,c
 36011  005702  6ED9               	movwf	fsr2l,c
 36012  005704  0E03               	movlw	high _buffer
 36013  005706  2036               	addwfc	fat_find_file@offset+1,w,c
 36014  005708  6EDA               	movwf	fsr2h,c
 36015  00570A  0EE5               	movlw	229
 36016  00570C  18DE               	xorwf	postinc2,w,c
 36017  00570E  B4D8               	btfsc	status,2,c
 36018  005710  D030               	goto	l2029
 36019                           
 36020                           ;fat16.c: 527: else;fat16.c: 528: {;fat16.c: 530: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 36021                           
 36022                           ;fat16.c: 522: {;fat16.c: 526: }
 36023  005712  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 36024  005716  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 36025  00571A  0EC0               	movlw	low _buffer
 36026  00571C  2435               	addwf	fat_find_file@offset,w,c
 36027  00571E  6E03               	movwf	strncmp@s2,c
 36028  005720  0E03               	movlw	high _buffer
 36029  005722  2036               	addwfc	fat_find_file@offset+1,w,c
 36030  005724  6E04               	movwf	strncmp@s2+1,c
 36031  005726  0E00               	movlw	0
 36032  005728  6E06               	movwf	strncmp@len+1,c
 36033  00572A  0E08               	movlw	8
 36034  00572C  6E05               	movwf	strncmp@len,c
 36035  00572E  ECC5  F02F         	call	_strncmp	;wreg free
 36036  005732  5001               	movf	?_strncmp,w,c
 36037  005734  1002               	iorwf	?_strncmp+1,w,c
 36038  005736  A4D8               	btfss	status,2,c
 36039  005738  D01C               	goto	l2029
 36040                           
 36041                           ;fat16.c: 531: {;fat16.c: 533: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 36042  00573A  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 36043  00573E  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 36044  005742  0E08               	movlw	8
 36045  005744  2435               	addwf	fat_find_file@offset,w,c
 36046  005746  6E30               	movwf	??_fat_find_file& (0+255),c
 36047  005748  0E00               	movlw	0
 36048  00574A  2036               	addwfc	fat_find_file@offset+1,w,c
 36049  00574C  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 36050  00574E  0EC0               	movlw	low _buffer
 36051  005750  2430               	addwf	??_fat_find_file,w,c
 36052  005752  6E03               	movwf	strncmp@s2,c
 36053  005754  0E03               	movlw	high _buffer
 36054  005756  2031               	addwfc	??_fat_find_file+1,w,c
 36055  005758  6E04               	movwf	strncmp@s2+1,c
 36056  00575A  0E00               	movlw	0
 36057  00575C  6E06               	movwf	strncmp@len+1,c
 36058  00575E  0E03               	movlw	3
 36059  005760  6E05               	movwf	strncmp@len,c
 36060  005762  ECC5  F02F         	call	_strncmp	;wreg free
 36061  005766  5001               	movf	?_strncmp,w,c
 36062  005768  1002               	iorwf	?_strncmp+1,w,c
 36063  00576A  A4D8               	btfss	status,2,c
 36064  00576C  D002               	goto	l2029
 36065                           
 36066                           ;fat16.c: 534: {;fat16.c: 537: return file_number;
 36067  00576E  5032               	movf	fat_find_file@file_number,w,c
 36068  005770  0012               	return	
 36069  005772                     l2029:
 36070                           
 36071                           ;fat16.c: 538: };fat16.c: 539: };fat16.c: 540: };fat16.c: 541: ++file_number;
 36072  005772  2A32               	incf	fat_find_file@file_number,f,c
 36073  005774  0E20               	movlw	32
 36074  005776  2635               	addwf	fat_find_file@offset,f,c
 36075  005778  0E00               	movlw	0
 36076  00577A  2236               	addwfc	fat_find_file@offset+1,f,c
 36077  00577C  D7B1               	goto	l11931
 36078  00577E                     u9050:
 36079  00577E  4A33               	infsnz	fat_find_file@sector,f,c
 36080  005780  2A34               	incf	fat_find_file@sector+1,f,c
 36081  005782  5034               	movf	fat_find_file@sector+1,w,c
 36082  005784  E101               	bnz	l11965
 36083  005786  D79A               	goto	L41
 36084  005788                     u9060:
 36085  005788                     l2020:
 36086  005788                     l11965:
 36087                           
 36088                           ;fat16.c: 542: };fat16.c: 543: };fat16.c: 544: return 0xFF;
 36089  005788  0EFF               	movlw	255
 36090  00578A  0012               	return	
 36091  00578C                     __end_of_fat_find_file:
 36092                           	opt stack 0
 36093                           tosu	equ	0xFFF
 36094                           tosh	equ	0xFFE
 36095                           tosl	equ	0xFFD
 36096                           pclath	equ	0xFFA
 36097                           tblptru	equ	0xFF8
 36098                           tblptrh	equ	0xFF7
 36099                           tblptrl	equ	0xFF6
 36100                           tablat	equ	0xFF5
 36101                           prodh	equ	0xFF4
 36102                           prodl	equ	0xFF3
 36103                           intcon	equ	0xFF2
 36104                           intcon2	equ	0xFF1
 36105                           intcon3	equ	0xFF0
 36106                           indf0	equ	0xFEF
 36107                           postinc0	equ	0xFEE
 36108                           fsr0h	equ	0xFEA
 36109                           fsr0l	equ	0xFE9
 36110                           wreg	equ	0xFE8
 36111                           indf1	equ	0xFE7
 36112                           postdec1	equ	0xFE5
 36113                           plusw1	equ	0xFE3
 36114                           fsr1h	equ	0xFE2
 36115                           fsr1l	equ	0xFE1
 36116                           indf2	equ	0xFDF
 36117                           postinc2	equ	0xFDE
 36118                           postdec2	equ	0xFDD
 36119                           plusw2	equ	0xFDB
 36120                           fsr2h	equ	0xFDA
 36121                           fsr2l	equ	0xFD9
 36122                           status	equ	0xFD8
 36123                           
 36124 ;; *************** function _strncmp *****************
 36125 ;; Defined at:
 36126 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 36127 ;; Parameters:    Size  Location     Type
 36128 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 36129 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 36130 ;;		 -> RAM(3759), 
 36131 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 36132 ;;		 -> buffer(512), 
 36133 ;;  len             2    4[COMRAM] unsigned int 
 36134 ;; Auto vars:     Size  Location     Type
 36135 ;;		None
 36136 ;; Return value:  Size  Location     Type
 36137 ;;                  2    0[COMRAM] int 
 36138 ;; Registers used:
 36139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36140 ;; Tracked objects:
 36141 ;;		On entry : 0/0
 36142 ;;		On exit  : 0/0
 36143 ;;		Unchanged: 0/0
 36144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36145 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36148 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36149 ;;Total ram usage:        9 bytes
 36150 ;; Hardware stack levels used:    1
 36151 ;; This function calls:
 36152 ;;		Nothing
 36153 ;; This function is called by:
 36154 ;;		_fat_find_file
 36155 ;; This function uses a non-reentrant model
 36156 ;;
 36157                           
 36158                           	psect	text180
 36159  005F8A                     __ptext180:
 36160                           	opt stack 0
 36161  005F8A                     _strncmp:
 36162                           	opt stack 27
 36163                           
 36164                           ;incstack = 0
 36165  005F8A  D053               	goto	l3625
 36166  005F8C                     l11185:
 36167  005F8C  C001  FFF6         	movff	strncmp@s1,tblptrl
 36168  005F90  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 36169  005F94  6AF8               	clrf	tblptru,c
 36170  005F96  0E0E               	movlw	(high __ramtop+-1)
 36171  005F98  64F7               	cpfsgt	tblptrh,c
 36172  005F9A  D003               	bra	u8047
 36173  005F9C  0008               	tblrd		*
 36174  005F9E  50F5               	movf	tablat,w,c
 36175  005FA0  D005               	bra	u8040
 36176  005FA2                     u8047:
 36177  005FA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 36178  005FA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 36179  005FAA  50EF               	movf	indf0,w,c
 36180  005FAC                     u8040:
 36181  005FAC  0900               	iorlw	0
 36182  005FAE  B4D8               	btfsc	status,2,c
 36183  005FB0  D019               	goto	u8060
 36184  005FB2  C003  FFD9         	movff	strncmp@s2,fsr2l
 36185  005FB6  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 36186  005FBA  50DF               	movf	indf2,w,c
 36187  005FBC  6E07               	movwf	??_strncmp& (0+255),c
 36188  005FBE  C001  FFF6         	movff	strncmp@s1,tblptrl
 36189  005FC2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 36190  005FC6  6AF8               	clrf	tblptru,c
 36191  005FC8  0E0E               	movlw	(high __ramtop+-1)
 36192  005FCA  64F7               	cpfsgt	tblptrh,c
 36193  005FCC  D003               	bra	u8067
 36194  005FCE  0008               	tblrd		*
 36195  005FD0  50F5               	movf	tablat,w,c
 36196  005FD2  D005               	bra	u8065
 36197  005FD4                     u8067:
 36198  005FD4  CFF6 FFE9          	movff	tblptrl,fsr0l
 36199  005FD8  CFF7 FFEA          	movff	tblptrh,fsr0h
 36200  005FDC  50EF               	movf	indf0,w,c
 36201  005FDE                     u8065:
 36202  005FDE  1807               	xorwf	??_strncmp,w,c
 36203  005FE0  B4D8               	btfsc	status,2,c
 36204  005FE2  D023               	goto	l3627
 36205  005FE4                     u8060:
 36206  005FE4  C003  FFD9         	movff	strncmp@s2,fsr2l
 36207  005FE8  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 36208  005FEC  50DF               	movf	indf2,w,c
 36209  005FEE  6E07               	movwf	??_strncmp& (0+255),c
 36210  005FF0  6A08               	clrf	(??_strncmp+1)& (0+255),c
 36211  005FF2  1E07               	comf	??_strncmp,f,c
 36212  005FF4  1E08               	comf	??_strncmp+1,f,c
 36213  005FF6  4A07               	infsnz	??_strncmp,f,c
 36214  005FF8  2A08               	incf	??_strncmp+1,f,c
 36215  005FFA  C001  FFF6         	movff	strncmp@s1,tblptrl
 36216  005FFE  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 36217  006002  6AF8               	clrf	tblptru,c
 36218  006004  0E0E               	movlw	(high __ramtop+-1)
 36219  006006  64F7               	cpfsgt	tblptrh,c
 36220  006008  D003               	bra	u8077
 36221  00600A  0008               	tblrd		*
 36222  00600C  50F5               	movf	tablat,w,c
 36223  00600E  D005               	bra	u8070
 36224  006010                     u8077:
 36225  006010  CFF6 FFE9          	movff	tblptrl,fsr0l
 36226  006014  CFF7 FFEA          	movff	tblptrh,fsr0h
 36227  006018  50EF               	movf	indf0,w,c
 36228  00601A                     u8070:
 36229  00601A  6E09               	movwf	(??_strncmp+2)& (0+255),c
 36230  00601C  5009               	movf	??_strncmp+2,w,c
 36231  00601E  2407               	addwf	??_strncmp,w,c
 36232  006020  6E01               	movwf	?_strncmp,c
 36233  006022  0E00               	movlw	0
 36234  006024  2008               	addwfc	??_strncmp+1,w,c
 36235  006026  6E02               	movwf	?_strncmp+1,c
 36236  006028  0012               	return	
 36237  00602A                     l3627:
 36238  00602A  4A01               	infsnz	strncmp@s1,f,c
 36239  00602C  2A02               	incf	strncmp@s1+1,f,c
 36240  00602E  4A03               	infsnz	strncmp@s2,f,c
 36241  006030  2A04               	incf	strncmp@s2+1,f,c
 36242  006032                     l3625:
 36243  006032  0605               	decf	strncmp@len,f,c
 36244  006034  A0D8               	btfss	status,0,c
 36245  006036  0606               	decf	strncmp@len+1,f,c
 36246  006038  2805               	incf	strncmp@len,w,c
 36247  00603A  E1A8               	bnz	l11185
 36248  00603C  2806               	incf	strncmp@len+1,w,c
 36249  00603E  A4D8               	btfss	status,2,c
 36250  006040  D7A5               	goto	l3626
 36251  006042  0E00               	movlw	0
 36252  006044  6E02               	movwf	?_strncmp+1,c
 36253  006046  0E00               	movlw	0
 36254  006048  6E01               	movwf	?_strncmp,c
 36255  00604A  0012               	return	
 36256  00604C                     __end_of_strncmp:
 36257                           	opt stack 0
 36258                           tosu	equ	0xFFF
 36259                           tosh	equ	0xFFE
 36260                           tosl	equ	0xFFD
 36261                           pclath	equ	0xFFA
 36262                           tblptru	equ	0xFF8
 36263                           tblptrh	equ	0xFF7
 36264                           tblptrl	equ	0xFF6
 36265                           tablat	equ	0xFF5
 36266                           prodh	equ	0xFF4
 36267                           prodl	equ	0xFF3
 36268                           intcon	equ	0xFF2
 36269                           intcon2	equ	0xFF1
 36270                           intcon3	equ	0xFF0
 36271                           indf0	equ	0xFEF
 36272                           postinc0	equ	0xFEE
 36273                           fsr0h	equ	0xFEA
 36274                           fsr0l	equ	0xFE9
 36275                           wreg	equ	0xFE8
 36276                           indf1	equ	0xFE7
 36277                           postdec1	equ	0xFE5
 36278                           plusw1	equ	0xFE3
 36279                           fsr1h	equ	0xFE2
 36280                           fsr1l	equ	0xFE1
 36281                           indf2	equ	0xFDF
 36282                           postinc2	equ	0xFDE
 36283                           postdec2	equ	0xFDD
 36284                           plusw2	equ	0xFDB
 36285                           fsr2h	equ	0xFDA
 36286                           fsr2l	equ	0xFD9
 36287                           status	equ	0xFD8
 36288                           
 36289 ;; *************** function __get_time *****************
 36290 ;; Defined at:
 36291 ;;		line 362 in file "fat16.c"
 36292 ;; Parameters:    Size  Location     Type
 36293 ;;		None
 36294 ;; Auto vars:     Size  Location     Type
 36295 ;;		None
 36296 ;; Return value:  Size  Location     Type
 36297 ;;                  2    0[COMRAM] unsigned int 
 36298 ;; Registers used:
 36299 ;;		wreg, status,2
 36300 ;; Tracked objects:
 36301 ;;		On entry : 0/0
 36302 ;;		On exit  : 0/0
 36303 ;;		Unchanged: 0/0
 36304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36309 ;;Total ram usage:        2 bytes
 36310 ;; Hardware stack levels used:    1
 36311 ;; This function calls:
 36312 ;;		Nothing
 36313 ;; This function is called by:
 36314 ;;		_fat_create_file
 36315 ;; This function uses a non-reentrant model
 36316 ;;
 36317                           
 36318                           	psect	text181
 36319  008A48                     __ptext181:
 36320                           	opt stack 0
 36321  008A48                     __get_time:
 36322                           	opt stack 26
 36323                           
 36324                           ;fat16.c: 374: return 0x0000;
 36325                           
 36326                           ;incstack = 0
 36327  008A48  0E00               	movlw	0
 36328  008A4A  6E02               	movwf	?__get_time+1,c
 36329  008A4C  0E00               	movlw	0
 36330  008A4E  6E01               	movwf	?__get_time,c
 36331  008A50  0012               	return	
 36332  008A52                     __end_of__get_time:
 36333                           	opt stack 0
 36334                           tosu	equ	0xFFF
 36335                           tosh	equ	0xFFE
 36336                           tosl	equ	0xFFD
 36337                           pclath	equ	0xFFA
 36338                           tblptru	equ	0xFF8
 36339                           tblptrh	equ	0xFF7
 36340                           tblptrl	equ	0xFF6
 36341                           tablat	equ	0xFF5
 36342                           prodh	equ	0xFF4
 36343                           prodl	equ	0xFF3
 36344                           intcon	equ	0xFF2
 36345                           intcon2	equ	0xFF1
 36346                           intcon3	equ	0xFF0
 36347                           indf0	equ	0xFEF
 36348                           postinc0	equ	0xFEE
 36349                           fsr0h	equ	0xFEA
 36350                           fsr0l	equ	0xFE9
 36351                           wreg	equ	0xFE8
 36352                           indf1	equ	0xFE7
 36353                           postdec1	equ	0xFE5
 36354                           plusw1	equ	0xFE3
 36355                           fsr1h	equ	0xFE2
 36356                           fsr1l	equ	0xFE1
 36357                           indf2	equ	0xFDF
 36358                           postinc2	equ	0xFDE
 36359                           postdec2	equ	0xFDD
 36360                           plusw2	equ	0xFDB
 36361                           fsr2h	equ	0xFDA
 36362                           fsr2l	equ	0xFD9
 36363                           status	equ	0xFD8
 36364                           
 36365 ;; *************** function __get_date *****************
 36366 ;; Defined at:
 36367 ;;		line 378 in file "fat16.c"
 36368 ;; Parameters:    Size  Location     Type
 36369 ;;		None
 36370 ;; Auto vars:     Size  Location     Type
 36371 ;;		None
 36372 ;; Return value:  Size  Location     Type
 36373 ;;                  2    0[COMRAM] unsigned int 
 36374 ;; Registers used:
 36375 ;;		wreg, status,2
 36376 ;; Tracked objects:
 36377 ;;		On entry : 0/0
 36378 ;;		On exit  : 0/0
 36379 ;;		Unchanged: 0/0
 36380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36385 ;;Total ram usage:        2 bytes
 36386 ;; Hardware stack levels used:    1
 36387 ;; This function calls:
 36388 ;;		Nothing
 36389 ;; This function is called by:
 36390 ;;		_fat_create_file
 36391 ;; This function uses a non-reentrant model
 36392 ;;
 36393                           
 36394                           	psect	text182
 36395  008A52                     __ptext182:
 36396                           	opt stack 0
 36397  008A52                     __get_date:
 36398                           	opt stack 26
 36399                           
 36400                           ;fat16.c: 390: return 0x0000;
 36401                           
 36402                           ;incstack = 0
 36403  008A52  0E00               	movlw	0
 36404  008A54  6E02               	movwf	?__get_date+1,c
 36405  008A56  0E00               	movlw	0
 36406  008A58  6E01               	movwf	?__get_date,c
 36407  008A5A  0012               	return	
 36408  008A5C                     __end_of__get_date:
 36409                           	opt stack 0
 36410                           tosu	equ	0xFFF
 36411                           tosh	equ	0xFFE
 36412                           tosl	equ	0xFFD
 36413                           pclath	equ	0xFFA
 36414                           tblptru	equ	0xFF8
 36415                           tblptrh	equ	0xFF7
 36416                           tblptrl	equ	0xFF6
 36417                           tablat	equ	0xFF5
 36418                           prodh	equ	0xFF4
 36419                           prodl	equ	0xFF3
 36420                           intcon	equ	0xFF2
 36421                           intcon2	equ	0xFF1
 36422                           intcon3	equ	0xFF0
 36423                           indf0	equ	0xFEF
 36424                           postinc0	equ	0xFEE
 36425                           fsr0h	equ	0xFEA
 36426                           fsr0l	equ	0xFE9
 36427                           wreg	equ	0xFE8
 36428                           indf1	equ	0xFE7
 36429                           postdec1	equ	0xFE5
 36430                           plusw1	equ	0xFE3
 36431                           fsr1h	equ	0xFE2
 36432                           fsr1l	equ	0xFE1
 36433                           indf2	equ	0xFDF
 36434                           postinc2	equ	0xFDE
 36435                           postdec2	equ	0xFDD
 36436                           plusw2	equ	0xFDB
 36437                           fsr2h	equ	0xFDA
 36438                           fsr2l	equ	0xFD9
 36439                           status	equ	0xFD8
 36440                           
 36441 ;; *************** function __get_available_root_entry *****************
 36442 ;; Defined at:
 36443 ;;		line 428 in file "fat16.c"
 36444 ;; Parameters:    Size  Location     Type
 36445 ;;		None
 36446 ;; Auto vars:     Size  Location     Type
 36447 ;;  file_number     1   53[COMRAM] unsigned char 
 36448 ;; Return value:  Size  Location     Type
 36449 ;;                  1    wreg      unsigned char 
 36450 ;; Registers used:
 36451 ;;		wreg, status,2, status,0, cstack
 36452 ;; Tracked objects:
 36453 ;;		On entry : 0/0
 36454 ;;		On exit  : 0/0
 36455 ;;		Unchanged: 0/0
 36456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36461 ;;Total ram usage:        1 bytes
 36462 ;; Hardware stack levels used:    1
 36463 ;; Hardware stack levels required when called:    6
 36464 ;; This function calls:
 36465 ;;		__root_is_available
 36466 ;; This function is called by:
 36467 ;;		_fat_create_file
 36468 ;; This function uses a non-reentrant model
 36469 ;;
 36470                           
 36471                           	psect	text183
 36472  008742                     __ptext183:
 36473                           	opt stack 0
 36474  008742                     __get_available_root_entry:
 36475                           	opt stack 20
 36476                           
 36477                           ;fat16.c: 430: uint8_t file_number;;fat16.c: 432: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 36478                           
 36479                           ;incstack = 0
 36480  008742  0E00               	movlw	0
 36481  008744  6E36               	movwf	__get_available_root_entry@file_number,c
 36482  008746                     l11891:
 36483  008746  0E3F               	movlw	63
 36484  008748  6436               	cpfsgt	__get_available_root_entry@file_number,c
 36485  00874A  D001               	goto	l2001
 36486  00874C  D00A               	goto	u8980
 36487  00874E                     l2001:
 36488                           
 36489                           ;fat16.c: 433: {;fat16.c: 434: if(_root_is_available(file_number))
 36490  00874E  5036               	movf	__get_available_root_entry@file_number,w,c
 36491  008750  EC62  F03B         	call	__root_is_available
 36492  008754  0900               	iorlw	0
 36493  008756  B4D8               	btfsc	status,2,c
 36494  008758  D002               	goto	l2003
 36495                           
 36496                           ;fat16.c: 435: {;fat16.c: 436: return file_number;
 36497  00875A  5036               	movf	__get_available_root_entry@file_number,w,c
 36498  00875C  0012               	return	
 36499  00875E                     l2003:
 36500  00875E  2A36               	incf	__get_available_root_entry@file_number,f,c
 36501  008760  D7F2               	goto	l11891
 36502  008762                     u8980:
 36503                           
 36504                           ;fat16.c: 437: };fat16.c: 438: };fat16.c: 439: return 0xFF;
 36505  008762  0EFF               	movlw	255
 36506  008764  0012               	return	
 36507  008766                     __end_of__get_available_root_entry:
 36508                           	opt stack 0
 36509                           tosu	equ	0xFFF
 36510                           tosh	equ	0xFFE
 36511                           tosl	equ	0xFFD
 36512                           pclath	equ	0xFFA
 36513                           tblptru	equ	0xFF8
 36514                           tblptrh	equ	0xFF7
 36515                           tblptrl	equ	0xFF6
 36516                           tablat	equ	0xFF5
 36517                           prodh	equ	0xFF4
 36518                           prodl	equ	0xFF3
 36519                           intcon	equ	0xFF2
 36520                           intcon2	equ	0xFF1
 36521                           intcon3	equ	0xFF0
 36522                           indf0	equ	0xFEF
 36523                           postinc0	equ	0xFEE
 36524                           fsr0h	equ	0xFEA
 36525                           fsr0l	equ	0xFE9
 36526                           wreg	equ	0xFE8
 36527                           indf1	equ	0xFE7
 36528                           postdec1	equ	0xFE5
 36529                           plusw1	equ	0xFE3
 36530                           fsr1h	equ	0xFE2
 36531                           fsr1l	equ	0xFE1
 36532                           indf2	equ	0xFDF
 36533                           postinc2	equ	0xFDE
 36534                           postdec2	equ	0xFDD
 36535                           plusw2	equ	0xFDB
 36536                           fsr2h	equ	0xFDA
 36537                           fsr2l	equ	0xFD9
 36538                           status	equ	0xFD8
 36539                           
 36540 ;; *************** function __parse_file_append *****************
 36541 ;; Defined at:
 36542 ;;		line 587 in file "api.c"
 36543 ;; Parameters:    Size  Location     Type
 36544 ;;  data            2   89[COMRAM] PTR unsigned char 
 36545 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36546 ;; Auto vars:     Size  Location     Type
 36547 ;;		None
 36548 ;; Return value:  Size  Location     Type
 36549 ;;                  1    wreg      unsigned char 
 36550 ;; Registers used:
 36551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36552 ;; Tracked objects:
 36553 ;;		On entry : 0/0
 36554 ;;		On exit  : 0/0
 36555 ;;		Unchanged: 0/0
 36556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36561 ;;Total ram usage:        3 bytes
 36562 ;; Hardware stack levels used:    1
 36563 ;; Hardware stack levels required when called:    9
 36564 ;; This function calls:
 36565 ;;		_fat_append_to_file
 36566 ;; This function is called by:
 36567 ;;		__parse_command_long
 36568 ;; This function uses a non-reentrant model
 36569 ;;
 36570                           
 36571                           	psect	text184
 36572  006EF8                     __ptext184:
 36573                           	opt stack 0
 36574  006EF8                     __parse_file_append:
 36575                           	opt stack 19
 36576                           
 36577                           ;api.c: 590: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 36578                           
 36579                           ;incstack = 0
 36580  006EF8  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 36581  006EFC  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 36582  006F00  0E54               	movlw	84
 36583  006F02  18DE               	xorwf	postinc2,w,c
 36584  006F04  A4D8               	btfss	status,2,c
 36585  006F06  D014               	goto	u10700
 36586  006F08  EE20 F003          	lfsr	2,3
 36587  006F0C  505A               	movf	__parse_file_append@data,w,c
 36588  006F0E  26D9               	addwf	fsr2l,f,c
 36589  006F10  505B               	movf	__parse_file_append@data+1,w,c
 36590  006F12  22DA               	addwfc	fsr2h,f,c
 36591  006F14  0EFE               	movlw	254
 36592  006F16  18DE               	xorwf	postinc2,w,c
 36593  006F18  A4D8               	btfss	status,2,c
 36594  006F1A  D00A               	goto	u10700
 36595  006F1C  EE20 F004          	lfsr	2,4
 36596  006F20  505A               	movf	__parse_file_append@data,w,c
 36597  006F22  26D9               	addwf	fsr2l,f,c
 36598  006F24  505B               	movf	__parse_file_append@data+1,w,c
 36599  006F26  22DA               	addwfc	fsr2h,f,c
 36600  006F28  0E4B               	movlw	75
 36601  006F2A  18DE               	xorwf	postinc2,w,c
 36602  006F2C  B4D8               	btfsc	status,2,c
 36603  006F2E  D002               	goto	l2763
 36604  006F30                     u10700:
 36605                           
 36606                           ;api.c: 591: {;api.c: 593: return 65;
 36607  006F30  0E41               	movlw	65
 36608  006F32  0012               	return	
 36609  006F34                     l2763:
 36610                           
 36611                           ;api.c: 594: };api.c: 597: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 36612  006F34  EE20 F002          	lfsr	2,2
 36613  006F38  505A               	movf	__parse_file_append@data,w,c
 36614  006F3A  26D9               	addwf	fsr2l,f,c
 36615  006F3C  505B               	movf	__parse_file_append@data+1,w,c
 36616  006F3E  22DA               	addwfc	fsr2h,f,c
 36617  006F40  50DF               	movf	indf2,w,c
 36618  006F42  6E5C               	movwf	??__parse_file_append& (0+255),c
 36619  006F44  505C               	movf	??__parse_file_append,w,c
 36620  006F46  6E56               	movwf	fat_append_to_file@number_of_bytes,c
 36621  006F48  6A57               	clrf	fat_append_to_file@number_of_bytes+1,c
 36622  006F4A  0E05               	movlw	5
 36623  006F4C  245A               	addwf	__parse_file_append@data,w,c
 36624  006F4E  6E58               	movwf	fat_append_to_file@data,c
 36625  006F50  0E00               	movlw	0
 36626  006F52  205B               	addwfc	__parse_file_append@data+1,w,c
 36627  006F54  6E59               	movwf	fat_append_to_file@data+1,c
 36628  006F56  EE20 F001          	lfsr	2,1
 36629  006F5A  505A               	movf	__parse_file_append@data,w,c
 36630  006F5C  26D9               	addwf	fsr2l,f,c
 36631  006F5E  505B               	movf	__parse_file_append@data+1,w,c
 36632  006F60  22DA               	addwfc	fsr2h,f,c
 36633  006F62  50DF               	movf	indf2,w,c
 36634  006F64  EC90  F035         	call	_fat_append_to_file
 36635                           
 36636                           ;api.c: 598: return data[2] + 5;
 36637  006F68  EE20 F002          	lfsr	2,2
 36638  006F6C  505A               	movf	__parse_file_append@data,w,c
 36639  006F6E  26D9               	addwf	fsr2l,f,c
 36640  006F70  505B               	movf	__parse_file_append@data+1,w,c
 36641  006F72  22DA               	addwfc	fsr2h,f,c
 36642  006F74  50DF               	movf	indf2,w,c
 36643  006F76  0F05               	addlw	5
 36644  006F78  0012               	return	
 36645  006F7A                     __end_of__parse_file_append:
 36646                           	opt stack 0
 36647                           tosu	equ	0xFFF
 36648                           tosh	equ	0xFFE
 36649                           tosl	equ	0xFFD
 36650                           pclath	equ	0xFFA
 36651                           tblptru	equ	0xFF8
 36652                           tblptrh	equ	0xFF7
 36653                           tblptrl	equ	0xFF6
 36654                           tablat	equ	0xFF5
 36655                           prodh	equ	0xFF4
 36656                           prodl	equ	0xFF3
 36657                           intcon	equ	0xFF2
 36658                           intcon2	equ	0xFF1
 36659                           intcon3	equ	0xFF0
 36660                           indf0	equ	0xFEF
 36661                           postinc0	equ	0xFEE
 36662                           fsr0h	equ	0xFEA
 36663                           fsr0l	equ	0xFE9
 36664                           wreg	equ	0xFE8
 36665                           indf1	equ	0xFE7
 36666                           postdec1	equ	0xFE5
 36667                           plusw1	equ	0xFE3
 36668                           fsr1h	equ	0xFE2
 36669                           fsr1l	equ	0xFE1
 36670                           indf2	equ	0xFDF
 36671                           postinc2	equ	0xFDE
 36672                           postdec2	equ	0xFDD
 36673                           plusw2	equ	0xFDB
 36674                           fsr2h	equ	0xFDA
 36675                           fsr2l	equ	0xFD9
 36676                           status	equ	0xFD8
 36677                           
 36678 ;; *************** function _fat_append_to_file *****************
 36679 ;; Defined at:
 36680 ;;		line 661 in file "fat16.c"
 36681 ;; Parameters:    Size  Location     Type
 36682 ;;  file_number     1    wreg     unsigned char 
 36683 ;;  number_of_by    2   85[COMRAM] unsigned int 
 36684 ;;  data            2   87[COMRAM] PTR unsigned char 
 36685 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36686 ;; Auto vars:     Size  Location     Type
 36687 ;;  file_number     1   55[BANK0 ] unsigned char 
 36688 ;;  old_file_siz    4   51[BANK0 ] unsigned long 
 36689 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 36690 ;;  return_code     1   50[BANK0 ] unsigned char 
 36691 ;; Return value:  Size  Location     Type
 36692 ;;                  1    wreg      unsigned char 
 36693 ;; Registers used:
 36694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36695 ;; Tracked objects:
 36696 ;;		On entry : 0/0
 36697 ;;		On exit  : 0/0
 36698 ;;		Unchanged: 0/0
 36699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36701 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36703 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36704 ;;Total ram usage:       14 bytes
 36705 ;; Hardware stack levels used:    1
 36706 ;; Hardware stack levels required when called:    8
 36707 ;; This function calls:
 36708 ;;		__root_is_available
 36709 ;;		_fat_get_file_size
 36710 ;;		_fat_modify_file
 36711 ;;		_fat_resize_file
 36712 ;; This function is called by:
 36713 ;;		__parse_file_append
 36714 ;; This function uses a non-reentrant model
 36715 ;;
 36716                           
 36717                           	psect	text185
 36718  006B20                     __ptext185:
 36719                           	opt stack 0
 36720  006B20                     _fat_append_to_file:
 36721                           	opt stack 19
 36722                           
 36723                           ;incstack = 0
 36724                           ;fat_append_to_file@file_number stored from wreg
 36725  006B20  0100               	movlb	0	; () banked
 36726  006B22  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 36727                           
 36728                           ;fat16.c: 663: uint32_t old_file_size;;fat16.c: 664: uint32_t new_file_size;;fat16.c: 66
      +                          5: uint8_t return_code;;fat16.c: 668: if(file_number>=64)
 36729  006B24  0E3F               	movlw	63
 36730  006B26  0100               	movlb	0	; () banked
 36731  006B28  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 36732  006B2A  D001               	goto	l2047
 36733  006B2C  0012               	return	
 36734  006B2E                     l2047:
 36735                           
 36736                           ; BSR set to: 0
 36737                           ;fat16.c: 672: };fat16.c: 675: if(_root_is_available(file_number))
 36738                           
 36739                           ; BSR set to: 0
 36740  006B2E  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 36741  006B30  EC62  F03B         	call	__root_is_available
 36742  006B34  0900               	iorlw	0
 36743  006B36  A4D8               	btfss	status,2,c
 36744  006B38  0012               	return	
 36745                           
 36746                           ;fat16.c: 679: };fat16.c: 682: old_file_size = fat_get_file_size(file_number);
 36747                           
 36748                           ;fat16.c: 676: {;fat16.c: 678: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 36749  006B3A  0100               	movlb	0	; () banked
 36750  006B3C  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 36751  006B3E  ECCA  F039         	call	_fat_get_file_size
 36752  006B42  C036  F093         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 36753  006B46  C037  F094         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 36754  006B4A  C038  F095         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 36755  006B4E  C039  F096         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 36756                           
 36757                           ;fat16.c: 685: new_file_size = old_file_size + number_of_bytes;
 36758  006B52  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 36759  006B54  0100               	movlb	0	; () banked
 36760  006B56  2593               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 36761  006B58  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 36762  006B5A  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36763  006B5C  2194               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 36764  006B5E  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 36765  006B60  0E00               	movlw	0
 36766  006B62  2195               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 36767  006B64  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 36768  006B66  0E00               	movlw	0
 36769  006B68  2196               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 36770  006B6A  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 36771                           
 36772                           ; BSR set to: 0
 36773                           ;fat16.c: 688: return_code = fat_resize_file(file_number, new_file_size);
 36774  006B6C  C08E  F049         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 36775  006B70  C08F  F04A         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 36776  006B74  C090  F04B         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 36777  006B78  C091  F04C         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 36778  006B7C  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 36779  006B7E  ECD4  F026         	call	_fat_resize_file
 36780  006B82  0100               	movlb	0	; () banked
 36781  006B84  6F92               	movwf	fat_append_to_file@return_code& (0+255),b
 36782                           
 36783                           ; BSR set to: 0
 36784                           ;fat16.c: 689: if(return_code!=0x00)
 36785  006B86  5192               	movf	fat_append_to_file@return_code& (0+255),w,b
 36786  006B88  A4D8               	btfss	status,2,c
 36787  006B8A  0012               	return	
 36788                           
 36789                           ; BSR set to: 0
 36790                           ;fat16.c: 693: };fat16.c: 696: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 36791                           
 36792                           ; BSR set to: 0
 36793                           
 36794                           ; BSR set to: 0
 36795                           ;fat16.c: 690: {;fat16.c: 692: return return_code - 0x0F;;	Return value of _fat_append_t
      +                          o_file is never used
 36796  006B8C  C093  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 36797  006B90  C094  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 36798  006B94  C095  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 36799  006B98  C096  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 36800  006B9C  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 36801  006BA0  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 36802  006BA4  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 36803  006BA8  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 36804  006BAC  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 36805  006BAE  EC2D  F011         	call	_fat_modify_file
 36806  006BB2  0012               	return	
 36807  006BB4                     __end_of_fat_append_to_file:
 36808                           	opt stack 0
 36809                           tosu	equ	0xFFF
 36810                           tosh	equ	0xFFE
 36811                           tosl	equ	0xFFD
 36812                           pclath	equ	0xFFA
 36813                           tblptru	equ	0xFF8
 36814                           tblptrh	equ	0xFF7
 36815                           tblptrl	equ	0xFF6
 36816                           tablat	equ	0xFF5
 36817                           prodh	equ	0xFF4
 36818                           prodl	equ	0xFF3
 36819                           intcon	equ	0xFF2
 36820                           intcon2	equ	0xFF1
 36821                           intcon3	equ	0xFF0
 36822                           indf0	equ	0xFEF
 36823                           postinc0	equ	0xFEE
 36824                           fsr0h	equ	0xFEA
 36825                           fsr0l	equ	0xFE9
 36826                           wreg	equ	0xFE8
 36827                           indf1	equ	0xFE7
 36828                           postdec1	equ	0xFE5
 36829                           plusw1	equ	0xFE3
 36830                           fsr1h	equ	0xFE2
 36831                           fsr1l	equ	0xFE1
 36832                           indf2	equ	0xFDF
 36833                           postinc2	equ	0xFDE
 36834                           postdec2	equ	0xFDD
 36835                           plusw2	equ	0xFDB
 36836                           fsr2h	equ	0xFDA
 36837                           fsr2l	equ	0xFD9
 36838                           status	equ	0xFD8
 36839                           
 36840 ;; *************** function _fat_resize_file *****************
 36841 ;; Defined at:
 36842 ;;		line 835 in file "fat16.c"
 36843 ;; Parameters:    Size  Location     Type
 36844 ;;  file_number     1    wreg     unsigned char 
 36845 ;;  new_file_siz    4   72[COMRAM] unsigned long 
 36846 ;; Auto vars:     Size  Location     Type
 36847 ;;  file_number     1    6[BANK0 ] unsigned char 
 36848 ;;  root           32    7[BANK0 ] struct .
 36849 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 36850 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 36851 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 36852 ;; Return value:  Size  Location     Type
 36853 ;;                  1    wreg      unsigned char 
 36854 ;; Registers used:
 36855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36856 ;; Tracked objects:
 36857 ;;		On entry : 0/0
 36858 ;;		On exit  : 0/0
 36859 ;;		Unchanged: 0/0
 36860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36862 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36863 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36864 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36865 ;;Total ram usage:       47 bytes
 36866 ;; Hardware stack levels used:    1
 36867 ;; Hardware stack levels required when called:    7
 36868 ;; This function calls:
 36869 ;;		__make_cluster_chain
 36870 ;;		__root_is_available
 36871 ;;		__write_root
 36872 ;;		_fat_get_file_information
 36873 ;; This function is called by:
 36874 ;;		_fat_append_to_file
 36875 ;;		__parse_file_resize
 36876 ;; This function uses a non-reentrant model
 36877 ;;
 36878                           
 36879                           	psect	text186
 36880  004DA8                     __ptext186:
 36881                           	opt stack 0
 36882  004DA8                     _fat_resize_file:
 36883                           	opt stack 20
 36884                           
 36885                           ;incstack = 0
 36886                           ;fat_resize_file@file_number stored from wreg
 36887  004DA8  0100               	movlb	0	; () banked
 36888  004DAA  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 36889                           
 36890                           ;fat16.c: 837: rootEntry_t root;;fat16.c: 838: uint16_t old_number_of_clusters;;fat16.c:
      +                           839: uint16_t new_number_of_clusters;;fat16.c: 840: uint16_t first_cluster;;fat16.c: 84
      +                          3: if(file_number>=64)
 36891  004DAC  0E3F               	movlw	63
 36892  004DAE  0100               	movlb	0	; () banked
 36893  004DB0  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 36894  004DB2  D002               	goto	l2076
 36895                           
 36896                           ; BSR set to: 0
 36897                           ;fat16.c: 844: {;fat16.c: 846: return 0xFF;
 36898  004DB4  0EFF               	movlw	255
 36899                           
 36900                           ; BSR set to: 0
 36901  004DB6  0012               	return	
 36902  004DB8                     l2076:
 36903                           
 36904                           ; BSR set to: 0
 36905                           ;fat16.c: 847: };fat16.c: 850: if(_root_is_available(file_number))
 36906                           
 36907                           ; BSR set to: 0
 36908  004DB8  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 36909  004DBA  EC62  F03B         	call	__root_is_available
 36910  004DBE  0900               	iorlw	0
 36911  004DC0  B4D8               	btfsc	status,2,c
 36912  004DC2  D002               	goto	l2078
 36913                           
 36914                           ;fat16.c: 851: {;fat16.c: 853: return 0xFE;
 36915  004DC4  0EFE               	movlw	254
 36916  004DC6  0012               	return	
 36917  004DC8                     l2078:
 36918                           
 36919                           ;fat16.c: 854: };fat16.c: 857: fat_get_file_information(file_number, &root);
 36920  004DC8  0E67               	movlw	low fat_resize_file@root
 36921  004DCA  6E30               	movwf	fat_get_file_information@data,c
 36922  004DCC  0E00               	movlw	high fat_resize_file@root
 36923  004DCE  6E31               	movwf	fat_get_file_information@data+1,c
 36924  004DD0  0100               	movlb	0	; () banked
 36925  004DD2  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 36926  004DD4  ECEA  F038         	call	_fat_get_file_information
 36927                           
 36928                           ;fat16.c: 860: old_number_of_clusters = (root.fileSize+512-1)>>9;
 36929  004DD8  EE20  F083         	lfsr	2,fat_resize_file@root+28
 36930  004DDC  0EFF               	movlw	255
 36931  004DDE  24DE               	addwf	postinc2,w,c
 36932  004DE0  6E4D               	movwf	??_fat_resize_file& (0+255),c
 36933  004DE2  0E01               	movlw	1
 36934  004DE4  20DE               	addwfc	postinc2,w,c
 36935  004DE6  6E4E               	movwf	(??_fat_resize_file+1)& (0+255),c
 36936  004DE8  0E00               	movlw	0
 36937  004DEA  20DE               	addwfc	postinc2,w,c
 36938  004DEC  6E4F               	movwf	(??_fat_resize_file+2)& (0+255),c
 36939  004DEE  0E00               	movlw	0
 36940  004DF0  20DE               	addwfc	postinc2,w,c
 36941  004DF2  6E50               	movwf	(??_fat_resize_file+3)& (0+255),c
 36942  004DF4  0E0A               	movlw	10
 36943  004DF6  D005               	goto	u9100
 36944  004DF8                     u9105:
 36945  004DF8  90D8               	bcf	status,0,c
 36946  004DFA  3250               	rrcf	??_fat_resize_file+3,f,c
 36947  004DFC  324F               	rrcf	??_fat_resize_file+2,f,c
 36948  004DFE  324E               	rrcf	??_fat_resize_file+1,f,c
 36949  004E00  324D               	rrcf	??_fat_resize_file,f,c
 36950  004E02                     u9100:
 36951  004E02  2EE8               	decfsz	wreg,f,c
 36952  004E04  D7F9               	goto	u9105
 36953  004E06  C04D  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 36954  004E0A  C04E  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 36955                           
 36956                           ;fat16.c: 861: new_number_of_clusters = (new_file_size+512-1)>>9;
 36957  004E0E  0EFF               	movlw	255
 36958  004E10  2449               	addwf	fat_resize_file@new_file_size,w,c
 36959  004E12  6E4D               	movwf	??_fat_resize_file& (0+255),c
 36960  004E14  0E01               	movlw	1
 36961  004E16  204A               	addwfc	fat_resize_file@new_file_size+1,w,c
 36962  004E18  6E4E               	movwf	(??_fat_resize_file+1)& (0+255),c
 36963  004E1A  0E00               	movlw	0
 36964  004E1C  204B               	addwfc	fat_resize_file@new_file_size+2,w,c
 36965  004E1E  6E4F               	movwf	(??_fat_resize_file+2)& (0+255),c
 36966  004E20  0E00               	movlw	0
 36967  004E22  204C               	addwfc	fat_resize_file@new_file_size+3,w,c
 36968  004E24  6E50               	movwf	(??_fat_resize_file+3)& (0+255),c
 36969  004E26  0E0A               	movlw	10
 36970  004E28  D005               	goto	u9110
 36971  004E2A                     u9115:
 36972  004E2A  90D8               	bcf	status,0,c
 36973  004E2C  3250               	rrcf	??_fat_resize_file+3,f,c
 36974  004E2E  324F               	rrcf	??_fat_resize_file+2,f,c
 36975  004E30  324E               	rrcf	??_fat_resize_file+1,f,c
 36976  004E32  324D               	rrcf	??_fat_resize_file,f,c
 36977  004E34                     u9110:
 36978  004E34  2EE8               	decfsz	wreg,f,c
 36979  004E36  D7F9               	goto	u9115
 36980  004E38  C04D  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 36981  004E3C  C04E  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 36982                           
 36983                           ;fat16.c: 864: if(old_number_of_clusters!=new_number_of_clusters)
 36984  004E40  0100               	movlb	0	; () banked
 36985  004E42  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 36986  004E44  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 36987  004E46  E104               	bnz	u9120
 36988  004E48  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 36989  004E4A  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 36990  004E4C  B4D8               	btfsc	status,2,c
 36991  004E4E  D01A               	goto	l2079
 36992  004E50                     u9120:
 36993                           
 36994                           ; BSR set to: 0
 36995                           ;fat16.c: 865: {;fat16.c: 866: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 36996  004E50  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 36997  004E54  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 36998  004E58  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 36999  004E5C  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 37000  004E60  EC45  F00C         	call	__make_cluster_chain	;wreg free
 37001  004E64  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 37002  004E68  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 37003                           
 37004                           ;fat16.c: 867: if(first_cluster==0xFFFF)
 37005  004E6C  0100               	movlb	0	; () banked
 37006  004E6E  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 37007  004E70  E105               	bnz	l2080
 37008  004E72  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 37009  004E74  A4D8               	btfss	status,2,c
 37010  004E76  D002               	goto	l2080
 37011                           
 37012                           ; BSR set to: 0
 37013                           ;fat16.c: 868: {;fat16.c: 870: return 0xFD;
 37014  004E78  0EFD               	movlw	253
 37015                           
 37016                           ; BSR set to: 0
 37017  004E7A  0012               	return	
 37018  004E7C                     l2080:
 37019                           
 37020                           ; BSR set to: 0
 37021                           ;fat16.c: 871: };fat16.c: 876: root.firstCluster = first_cluster;
 37022  004E7C  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 37023  004E80  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 37024  004E84                     l2079:
 37025                           
 37026                           ; BSR set to: 0
 37027                           ;fat16.c: 877: };fat16.c: 880: root.fileSize = new_file_size;
 37028  004E84  C049  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 37029  004E88  C04A  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 37030  004E8C  C04B  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 37031  004E90  C04C  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 37032                           
 37033                           ; BSR set to: 0
 37034                           ;fat16.c: 883: _write_root(file_number, &root);
 37035  004E94  0E67               	movlw	low fat_resize_file@root
 37036  004E96  6E29               	movwf	__write_root@data,c
 37037  004E98  0E00               	movlw	high fat_resize_file@root
 37038  004E9A  6E2A               	movwf	__write_root@data+1,c
 37039  004E9C  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 37040  004E9E  ECEE  F03F         	call	__write_root
 37041                           
 37042                           ;fat16.c: 886: return 0x00;
 37043  004EA2  0E00               	movlw	0
 37044  004EA4  0012               	return	
 37045  004EA6                     __end_of_fat_resize_file:
 37046                           	opt stack 0
 37047                           tosu	equ	0xFFF
 37048                           tosh	equ	0xFFE
 37049                           tosl	equ	0xFFD
 37050                           pclath	equ	0xFFA
 37051                           tblptru	equ	0xFF8
 37052                           tblptrh	equ	0xFF7
 37053                           tblptrl	equ	0xFF6
 37054                           tablat	equ	0xFF5
 37055                           prodh	equ	0xFF4
 37056                           prodl	equ	0xFF3
 37057                           intcon	equ	0xFF2
 37058                           intcon2	equ	0xFF1
 37059                           intcon3	equ	0xFF0
 37060                           indf0	equ	0xFEF
 37061                           postinc0	equ	0xFEE
 37062                           fsr0h	equ	0xFEA
 37063                           fsr0l	equ	0xFE9
 37064                           wreg	equ	0xFE8
 37065                           indf1	equ	0xFE7
 37066                           postdec1	equ	0xFE5
 37067                           plusw1	equ	0xFE3
 37068                           fsr1h	equ	0xFE2
 37069                           fsr1l	equ	0xFE1
 37070                           indf2	equ	0xFDF
 37071                           postinc2	equ	0xFDE
 37072                           postdec2	equ	0xFDD
 37073                           plusw2	equ	0xFDB
 37074                           fsr2h	equ	0xFDA
 37075                           fsr2l	equ	0xFD9
 37076                           status	equ	0xFD8
 37077                           
 37078 ;; *************** function __write_root *****************
 37079 ;; Defined at:
 37080 ;;		line 459 in file "fat16.c"
 37081 ;; Parameters:    Size  Location     Type
 37082 ;;  file_number     1    wreg     unsigned char 
 37083 ;;  data            2   40[COMRAM] PTR struct .
 37084 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 37085 ;; Auto vars:     Size  Location     Type
 37086 ;;  file_number     1   46[COMRAM] unsigned char 
 37087 ;;  offset          2   44[COMRAM] unsigned int 
 37088 ;;  sector          2   42[COMRAM] unsigned int 
 37089 ;; Return value:  Size  Location     Type
 37090 ;;                  1    wreg      void 
 37091 ;; Registers used:
 37092 ;;		wreg, status,2, status,0, cstack
 37093 ;; Tracked objects:
 37094 ;;		On entry : 0/0
 37095 ;;		On exit  : 0/0
 37096 ;;		Unchanged: 0/0
 37097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37099 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37101 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37102 ;;Total ram usage:        7 bytes
 37103 ;; Hardware stack levels used:    1
 37104 ;; Hardware stack levels required when called:    5
 37105 ;; This function calls:
 37106 ;;		__offset_from_file_number
 37107 ;;		__sector_from_file_number
 37108 ;;		_flash_partial_write
 37109 ;; This function is called by:
 37110 ;;		_fat_create_file
 37111 ;;		_fat_rename_file
 37112 ;;		_fat_resize_file
 37113 ;; This function uses a non-reentrant model
 37114 ;;
 37115                           
 37116                           	psect	text187
 37117  007FDC                     __ptext187:
 37118                           	opt stack 0
 37119  007FDC                     __write_root:
 37120                           	opt stack 21
 37121                           
 37122                           ;incstack = 0
 37123                           ;__write_root@file_number stored from wreg
 37124  007FDC  6E2F               	movwf	__write_root@file_number,c
 37125                           
 37126                           ;fat16.c: 461: uint16_t sector;;fat16.c: 462: uint16_t offset;;fat16.c: 465: sector = _s
      +                          ector_from_file_number(file_number);
 37127  007FDE  502F               	movf	__write_root@file_number,w,c
 37128  007FE0  ECCB  F042         	call	__sector_from_file_number
 37129  007FE4  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 37130  007FE8  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 37131                           
 37132                           ;fat16.c: 466: offset = _offset_from_file_number(file_number);
 37133  007FEC  502F               	movf	__write_root@file_number,w,c
 37134  007FEE  EC57  F043         	call	__offset_from_file_number
 37135  007FF2  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 37136  007FF6  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 37137                           
 37138                           ;fat16.c: 469: flash_partial_write(sector, offset, 32, data);
 37139  007FFA  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 37140  007FFE  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 37141  008002  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 37142  008006  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 37143  00800A  0E00               	movlw	0
 37144  00800C  6E25               	movwf	flash_partial_write@length+1,c
 37145  00800E  0E20               	movlw	32
 37146  008010  6E24               	movwf	flash_partial_write@length,c
 37147  008012  C029  F026         	movff	__write_root@data,flash_partial_write@data
 37148  008016  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 37149  00801A  EC5B  F039         	call	_flash_partial_write	;wreg free
 37150  00801E  0012               	return		;funcret
 37151  008020                     __end_of__write_root:
 37152                           	opt stack 0
 37153                           tosu	equ	0xFFF
 37154                           tosh	equ	0xFFE
 37155                           tosl	equ	0xFFD
 37156                           pclath	equ	0xFFA
 37157                           tblptru	equ	0xFF8
 37158                           tblptrh	equ	0xFF7
 37159                           tblptrl	equ	0xFF6
 37160                           tablat	equ	0xFF5
 37161                           prodh	equ	0xFF4
 37162                           prodl	equ	0xFF3
 37163                           intcon	equ	0xFF2
 37164                           intcon2	equ	0xFF1
 37165                           intcon3	equ	0xFF0
 37166                           indf0	equ	0xFEF
 37167                           postinc0	equ	0xFEE
 37168                           fsr0h	equ	0xFEA
 37169                           fsr0l	equ	0xFE9
 37170                           wreg	equ	0xFE8
 37171                           indf1	equ	0xFE7
 37172                           postdec1	equ	0xFE5
 37173                           plusw1	equ	0xFE3
 37174                           fsr1h	equ	0xFE2
 37175                           fsr1l	equ	0xFE1
 37176                           indf2	equ	0xFDF
 37177                           postinc2	equ	0xFDE
 37178                           postdec2	equ	0xFDD
 37179                           plusw2	equ	0xFDB
 37180                           fsr2h	equ	0xFDA
 37181                           fsr2l	equ	0xFD9
 37182                           status	equ	0xFD8
 37183                           
 37184 ;; *************** function __make_cluster_chain *****************
 37185 ;; Defined at:
 37186 ;;		line 213 in file "fat16.c"
 37187 ;; Parameters:    Size  Location     Type
 37188 ;;  first_cluste    2   53[COMRAM] unsigned int 
 37189 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 37190 ;; Auto vars:     Size  Location     Type
 37191 ;;  next_cluster    2   70[COMRAM] unsigned int 
 37192 ;;  offset          2   68[COMRAM] unsigned int 
 37193 ;;  sector          2   66[COMRAM] unsigned int 
 37194 ;;  remaining_cl    2   64[COMRAM] unsigned int 
 37195 ;;  different_se    2   61[COMRAM] unsigned int 
 37196 ;;  sector_in_bu    2   59[COMRAM] unsigned int 
 37197 ;;  minimum_sect    2   57[COMRAM] unsigned int 
 37198 ;;  data_changed    1   63[COMRAM] unsigned char 
 37199 ;; Return value:  Size  Location     Type
 37200 ;;                  2   53[COMRAM] unsigned int 
 37201 ;; Registers used:
 37202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37203 ;; Tracked objects:
 37204 ;;		On entry : 0/0
 37205 ;;		On exit  : 0/0
 37206 ;;		Unchanged: 0/0
 37207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37209 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37211 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37212 ;;Total ram usage:       19 bytes
 37213 ;; Hardware stack levels used:    1
 37214 ;; Hardware stack levels required when called:    6
 37215 ;; This function calls:
 37216 ;;		__fat_offset_from_cluster
 37217 ;;		__fat_sector_from_cluster
 37218 ;;		__get_available_cluster
 37219 ;;		__get_available_offset_from_buffer
 37220 ;;		__read_value_from_offset
 37221 ;;		__write_value_to_offset
 37222 ;;		_flash_sector_read
 37223 ;;		_flash_sector_write
 37224 ;; This function is called by:
 37225 ;;		_fat_create_file
 37226 ;;		_fat_delete_file
 37227 ;;		_fat_resize_file
 37228 ;; This function uses a non-reentrant model
 37229 ;;
 37230                           
 37231                           	psect	text188
 37232  00188A                     __ptext188:
 37233                           	opt stack 0
 37234  00188A                     __make_cluster_chain:
 37235                           	opt stack 20
 37236                           
 37237                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t sector_i
      +                          n_buffer;;fat16.c: 220: uint16_t next_cluster;;fat16.c: 221: uint16_t different_sector_c
      +                          luster;;fat16.c: 222: uint8_t data_changed;;fat16.c: 227: if((first_cluster==0) && (numb
      +                          er_of_clusters==0))
 37238                           
 37239                           ;incstack = 0
 37240  00188A  5036               	movf	__make_cluster_chain@first_cluster,w,c
 37241  00188C  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 37242  00188E  A4D8               	btfss	status,2,c
 37243  001890  D009               	goto	l1962
 37244  001892  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 37245  001894  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 37246  001896  A4D8               	btfss	status,2,c
 37247  001898  D005               	goto	l1962
 37248                           
 37249                           ;fat16.c: 228: {;fat16.c: 230: return 0x0000;
 37250  00189A  0E00               	movlw	0
 37251  00189C  6E37               	movwf	?__make_cluster_chain+1,c
 37252  00189E  0E00               	movlw	0
 37253  0018A0  6E36               	movwf	?__make_cluster_chain,c
 37254  0018A2  0012               	return	
 37255  0018A4                     l1962:
 37256                           
 37257                           ;fat16.c: 231: };fat16.c: 234: remaining_clusters = number_of_clusters;
 37258  0018A4  C038  F041         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 37259  0018A8  C039  F042         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 37260                           
 37261                           ;fat16.c: 235: minimum_sector = 2;
 37262  0018AC  0E00               	movlw	0
 37263  0018AE  6E3B               	movwf	__make_cluster_chain@minimum_sector+1,c
 37264  0018B0  0E02               	movlw	2
 37265  0018B2  6E3A               	movwf	__make_cluster_chain@minimum_sector,c
 37266                           
 37267                           ;fat16.c: 236: data_changed = 0;
 37268  0018B4  0E00               	movlw	0
 37269  0018B6  6E40               	movwf	__make_cluster_chain@data_changed,c
 37270                           
 37271                           ;fat16.c: 239: if((first_cluster==0) && (number_of_clusters>0))
 37272  0018B8  5036               	movf	__make_cluster_chain@first_cluster,w,c
 37273  0018BA  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 37274  0018BC  A4D8               	btfss	status,2,c
 37275  0018BE  D023               	goto	l1965
 37276  0018C0  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 37277  0018C2  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 37278  0018C4  B4D8               	btfsc	status,2,c
 37279  0018C6  D01F               	goto	l1965
 37280                           
 37281                           ;fat16.c: 240: {;fat16.c: 241: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 37282  0018C8  C03A  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 37283  0018CC  C03B  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 37284  0018D0  0E00               	movlw	0
 37285  0018D2  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 37286  0018D4  0E00               	movlw	0
 37287  0018D6  6E2E               	movwf	__get_available_cluster@skip_sector,c
 37288  0018D8  EC63  F02F         	call	__get_available_cluster	;wreg free
 37289  0018DC  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 37290  0018E0  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 37291                           
 37292                           ;fat16.c: 243: minimum_sector = _fat_sector_from_cluster(first_cluster);
 37293  0018E4  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 37294  0018E8  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 37295  0018EC  EC55  F044         	call	__fat_sector_from_cluster	;wreg free
 37296  0018F0  C001  F03A         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 37297  0018F4  C002  F03B         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 37298                           
 37299                           ;fat16.c: 244: if(first_cluster == 0)
 37300  0018F8  5036               	movf	__make_cluster_chain@first_cluster,w,c
 37301  0018FA  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 37302  0018FC  A4D8               	btfss	status,2,c
 37303  0018FE  D003               	goto	l1965
 37304                           
 37305                           ;fat16.c: 245: {;fat16.c: 246: return 0xFFFF;
 37306  001900  6836               	setf	?__make_cluster_chain,c
 37307  001902  6837               	setf	?__make_cluster_chain+1,c
 37308  001904  0012               	return	
 37309  001906                     l1965:
 37310                           
 37311                           ;fat16.c: 247: };fat16.c: 248: };fat16.c: 249: next_cluster = first_cluster;
 37312  001906  C036  F047         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 37313  00190A  C037  F048         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 37314                           
 37315                           ;fat16.c: 251: while ((remaining_clusters > 0) || next_cluster < 0xFFF0)
 37316  00190E  D0E2               	goto	l1980
 37317  001910                     
 37318                           ;fat16.c: 252: {;fat16.c: 253: sector = _fat_sector_from_cluster(next_cluster);
 37319  001910  C047  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 37320  001914  C048  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 37321  001918  EC55  F044         	call	__fat_sector_from_cluster	;wreg free
 37322  00191C  C001  F043         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 37323  001920  C002  F044         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 37324                           
 37325                           ;fat16.c: 254: offset = _fat_offset_from_cluster(next_cluster);
 37326  001924  C047  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 37327  001928  C048  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 37328  00192C  EC61  F044         	call	__fat_offset_from_cluster	;wreg free
 37329  001930  C001  F045         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 37330  001934  C002  F046         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 37331                           
 37332                           ;fat16.c: 257: if(sector != sector_in_buffer)
 37333  001938  503C               	movf	__make_cluster_chain@sector_in_buffer,w,c
 37334  00193A  1843               	xorwf	__make_cluster_chain@sector,w,c
 37335  00193C  E104               	bnz	u7880
 37336  00193E  503D               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 37337  001940  1844               	xorwf	__make_cluster_chain@sector+1,w,c
 37338  001942  B4D8               	btfsc	status,2,c
 37339  001944  D035               	goto	l1968
 37340  001946                     u7880:
 37341                           
 37342                           ;fat16.c: 258: {;fat16.c: 260: if(data_changed)
 37343  001946  5040               	movf	__make_cluster_chain@data_changed,w,c
 37344  001948  B4D8               	btfsc	status,2,c
 37345  00194A  D00A               	goto	l1969
 37346                           
 37347                           ;fat16.c: 261: {;fat16.c: 262: flash_sector_write(sector_in_buffer, buffer);
 37348  00194C  C03C  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 37349  001950  C03D  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 37350  001954  0EC0               	movlw	low _buffer
 37351  001956  6E22               	movwf	flash_sector_write@data,c
 37352  001958  0E03               	movlw	high _buffer
 37353  00195A  6E23               	movwf	flash_sector_write@data+1,c
 37354  00195C  ECA8  F03D         	call	_flash_sector_write	;wreg free
 37355  001960                     l1969:
 37356                           
 37357                           ;fat16.c: 263: };fat16.c: 266: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 37358  001960  C03A  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 37359  001964  C03B  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 37360  001968  C043  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 37361  00196C  C044  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 37362  001970  EC63  F02F         	call	__get_available_cluster	;wreg free
 37363  001974  C02C  F03E         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 37364  001978  C02D  F03F         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 37365                           
 37366                           ;fat16.c: 269: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 37367  00197C  C03E  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 37368  001980  C03F  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 37369  001984  EC55  F044         	call	__fat_sector_from_cluster	;wreg free
 37370  001988  C001  F03A         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 37371  00198C  C002  F03B         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 37372                           
 37373                           ;fat16.c: 272: flash_sector_read(sector, buffer);
 37374  001990  C043  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 37375  001994  C044  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 37376  001998  0EC0               	movlw	low _buffer
 37377  00199A  6E2A               	movwf	flash_sector_read@data,c
 37378  00199C  0E03               	movlw	high _buffer
 37379  00199E  6E2B               	movwf	flash_sector_read@data+1,c
 37380  0019A0  ECF9  F041         	call	_flash_sector_read	;wreg free
 37381                           
 37382                           ;fat16.c: 273: sector_in_buffer = sector;
 37383  0019A4  C043  F03C         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 37384  0019A8  C044  F03D         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 37385                           
 37386                           ;fat16.c: 274: data_changed = 0;
 37387  0019AC  0E00               	movlw	0
 37388  0019AE  6E40               	movwf	__make_cluster_chain@data_changed,c
 37389  0019B0                     l1968:
 37390                           
 37391                           ;fat16.c: 275: };fat16.c: 278: if(remaining_clusters > 1)
 37392  0019B0  5042               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 37393  0019B2  E104               	bnz	u7900
 37394  0019B4  0E02               	movlw	2
 37395  0019B6  5C41               	subwf	__make_cluster_chain@remaining_clusters,w,c
 37396  0019B8  A0D8               	btfss	status,0,c
 37397  0019BA  D044               	goto	l1970
 37398  0019BC                     u7900:
 37399                           
 37400                           ;fat16.c: 279: {;fat16.c: 281: next_cluster = _read_value_from_offset(offset, buffer);
 37401  0019BC  C045  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 37402  0019C0  C046  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 37403  0019C4  0EC0               	movlw	low _buffer
 37404  0019C6  6E03               	movwf	__read_value_from_offset@buffer,c
 37405  0019C8  0E03               	movlw	high _buffer
 37406  0019CA  6E04               	movwf	__read_value_from_offset@buffer+1,c
 37407  0019CC  EC87  F03F         	call	__read_value_from_offset	;wreg free
 37408  0019D0  C001  F047         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 37409  0019D4  C002  F048         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 37410                           
 37411                           ;fat16.c: 284: if((next_cluster < 38) || (next_cluster > 8191))
 37412  0019D8  5048               	movf	__make_cluster_chain@next_cluster+1,w,c
 37413  0019DA  E104               	bnz	u7910
 37414  0019DC  0E26               	movlw	38
 37415  0019DE  5C47               	subwf	__make_cluster_chain@next_cluster,w,c
 37416  0019E0  A0D8               	btfss	status,0,c
 37417  0019E2  D004               	goto	u7920
 37418  0019E4                     u7910:
 37419  0019E4  0E20               	movlw	32
 37420  0019E6  5C48               	subwf	__make_cluster_chain@next_cluster+1,w,c
 37421  0019E8  A0D8               	btfss	status,0,c
 37422  0019EA  D052               	goto	l1979
 37423  0019EC                     u7920:
 37424                           
 37425                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _get_available_offset_from_buffer(offset, 
      +                          buffer);
 37426  0019EC  C045  F001         	movff	__make_cluster_chain@offset,__get_available_offset_from_buffer@minimum_offset
 37427  0019F0  C046  F002         	movff	__make_cluster_chain@offset+1,__get_available_offset_from_buffer@minimum_offset+1
 37428  0019F4  0EC0               	movlw	low _buffer
 37429  0019F6  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 37430  0019F8  0E03               	movlw	high _buffer
 37431  0019FA  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 37432  0019FC  EC4C  F03C         	call	__get_available_offset_from_buffer	;wreg free
 37433  001A00  C001  F047         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_cluster
 37434  001A04  C002  F048         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_cluster+1
 37435                           
 37436                           ;fat16.c: 288: if(next_cluster == 0x0000)
 37437  001A08  5047               	movf	__make_cluster_chain@next_cluster,w,c
 37438  001A0A  1048               	iorwf	__make_cluster_chain@next_cluster+1,w,c
 37439  001A0C  A4D8               	btfss	status,2,c
 37440  001A0E  D00B               	goto	l1976
 37441                           
 37442                           ;fat16.c: 289: {;fat16.c: 290: if(different_sector_cluster == 0x0000)
 37443  001A10  503E               	movf	__make_cluster_chain@different_sector_cluster,w,c
 37444  001A12  103F               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 37445  001A14  A4D8               	btfss	status,2,c
 37446  001A16  D003               	goto	l1975
 37447                           
 37448                           ;fat16.c: 291: {;fat16.c: 293: return 0xFFFF;
 37449  001A18  6836               	setf	?__make_cluster_chain,c
 37450  001A1A  6837               	setf	?__make_cluster_chain+1,c
 37451  001A1C  0012               	return	
 37452  001A1E                     l1975:
 37453                           
 37454                           ;fat16.c: 295: else;fat16.c: 296: {;fat16.c: 298: next_cluster = different_sector_cluste
      +                          r;
 37455  001A1E  C03E  F047         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 37456  001A22  C03F  F048         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 37457  001A26                     l1976:
 37458                           
 37459                           ;fat16.c: 299: };fat16.c: 300: };fat16.c: 302: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 37460  001A26  C045  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 37461  001A2A  C046  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 37462  001A2E  0EC0               	movlw	low _buffer
 37463  001A30  6E03               	movwf	__write_value_to_offset@buffer,c
 37464  001A32  0E03               	movlw	high _buffer
 37465  001A34  6E04               	movwf	__write_value_to_offset@buffer+1,c
 37466  001A36  C047  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 37467  001A3A  C048  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 37468  001A3E  ECAD  F041         	call	__write_value_to_offset	;wreg free
 37469  001A42  D024               	goto	L46
 37470  001A44                     l1970:
 37471                           
 37472                           ;fat16.c: 312: else if(remaining_clusters == 1)
 37473  001A44  0441               	decf	__make_cluster_chain@remaining_clusters,w,c
 37474  001A46  1042               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 37475  001A48  A4D8               	btfss	status,2,c
 37476  001A4A  D026               	goto	l1978
 37477                           
 37478                           ;fat16.c: 313: {;fat16.c: 315: next_cluster = _read_value_from_offset(offset, buffer);
 37479  001A4C  C045  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 37480  001A50  C046  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 37481  001A54  0EC0               	movlw	low _buffer
 37482  001A56  6E03               	movwf	__read_value_from_offset@buffer,c
 37483  001A58  0E03               	movlw	high _buffer
 37484  001A5A  6E04               	movwf	__read_value_from_offset@buffer+1,c
 37485  001A5C  EC87  F03F         	call	__read_value_from_offset	;wreg free
 37486  001A60  C001  F047         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 37487  001A64  C002  F048         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 37488                           
 37489                           ;fat16.c: 317: if(next_cluster != 0xFFFF)
 37490  001A68  2847               	incf	__make_cluster_chain@next_cluster,w,c
 37491  001A6A  E103               	bnz	u7960
 37492  001A6C  2848               	incf	__make_cluster_chain@next_cluster+1,w,c
 37493  001A6E  B4D8               	btfsc	status,2,c
 37494  001A70  D00F               	goto	l1979
 37495  001A72                     u7960:
 37496                           
 37497                           ;fat16.c: 318: {;fat16.c: 320: _write_value_to_offset(offset, buffer, 0xFFFF);
 37498  001A72  C045  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 37499  001A76  C046  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 37500  001A7A  0EC0               	movlw	low _buffer
 37501  001A7C  6E03               	movwf	__write_value_to_offset@buffer,c
 37502  001A7E  0E03               	movlw	high _buffer
 37503  001A80  6E04               	movwf	__write_value_to_offset@buffer+1,c
 37504  001A82  0EFF               	movlw	255
 37505  001A84  6E06               	movwf	__write_value_to_offset@value+1,c
 37506  001A86  6805               	setf	__write_value_to_offset@value,c
 37507  001A88  ECAD  F041         	call	__write_value_to_offset	;wreg free
 37508  001A8C                     L46:
 37509                           
 37510                           ;fat16.c: 322: data_changed = 1;
 37511  001A8C  0E01               	movlw	1
 37512  001A8E  6E40               	movwf	__make_cluster_chain@data_changed,c
 37513  001A90                     l1979:
 37514                           
 37515                           ;fat16.c: 323: };fat16.c: 326: --remaining_clusters;
 37516  001A90  0641               	decf	__make_cluster_chain@remaining_clusters,f,c
 37517  001A92  A0D8               	btfss	status,0,c
 37518  001A94  0642               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 37519                           
 37520                           ;fat16.c: 327: }
 37521  001A96  D01E               	goto	l1980
 37522  001A98                     l1978:
 37523                           
 37524                           ;fat16.c: 330: else;fat16.c: 331: {;fat16.c: 333: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 37525  001A98  C045  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 37526  001A9C  C046  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 37527  001AA0  0EC0               	movlw	low _buffer
 37528  001AA2  6E03               	movwf	__read_value_from_offset@buffer,c
 37529  001AA4  0E03               	movlw	high _buffer
 37530  001AA6  6E04               	movwf	__read_value_from_offset@buffer+1,c
 37531  001AA8  EC87  F03F         	call	__read_value_from_offset	;wreg free
 37532  001AAC  C001  F047         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 37533  001AB0  C002  F048         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 37534                           
 37535                           ;fat16.c: 336: _write_value_to_offset(offset, buffer, 0x0000);
 37536  001AB4  C045  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 37537  001AB8  C046  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 37538  001ABC  0EC0               	movlw	low _buffer
 37539  001ABE  6E03               	movwf	__write_value_to_offset@buffer,c
 37540  001AC0  0E03               	movlw	high _buffer
 37541  001AC2  6E04               	movwf	__write_value_to_offset@buffer+1,c
 37542  001AC4  0E00               	movlw	0
 37543  001AC6  6E06               	movwf	__write_value_to_offset@value+1,c
 37544  001AC8  0E00               	movlw	0
 37545  001ACA  6E05               	movwf	__write_value_to_offset@value,c
 37546  001ACC  ECAD  F041         	call	__write_value_to_offset	;wreg free
 37547                           
 37548                           ;fat16.c: 338: data_changed = 1;
 37549  001AD0  0E01               	movlw	1
 37550  001AD2  6E40               	movwf	__make_cluster_chain@data_changed,c
 37551  001AD4                     l1980:
 37552  001AD4  5041               	movf	__make_cluster_chain@remaining_clusters,w,c
 37553  001AD6  1042               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 37554  001AD8  A4D8               	btfss	status,2,c
 37555  001ADA  D71A               	goto	l1967
 37556  001ADC  0EF0               	movlw	240
 37557  001ADE  5C47               	subwf	__make_cluster_chain@next_cluster,w,c
 37558  001AE0  0EFF               	movlw	255
 37559  001AE2  5848               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 37560  001AE4  A0D8               	btfss	status,0,c
 37561  001AE6  D714               	goto	l1967
 37562                           
 37563                           ;fat16.c: 339: };fat16.c: 341: };fat16.c: 344: if(data_changed)
 37564  001AE8  5040               	movf	__make_cluster_chain@data_changed,w,c
 37565  001AEA  B4D8               	btfsc	status,2,c
 37566  001AEC  D00A               	goto	l1982
 37567                           
 37568                           ;fat16.c: 345: {;fat16.c: 346: flash_sector_write(sector_in_buffer, buffer);
 37569  001AEE  C03C  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 37570  001AF2  C03D  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 37571  001AF6  0EC0               	movlw	low _buffer
 37572  001AF8  6E22               	movwf	flash_sector_write@data,c
 37573  001AFA  0E03               	movlw	high _buffer
 37574  001AFC  6E23               	movwf	flash_sector_write@data+1,c
 37575  001AFE  ECA8  F03D         	call	_flash_sector_write	;wreg free
 37576  001B02                     l1982:
 37577                           
 37578                           ;fat16.c: 347: };fat16.c: 350: if(number_of_clusters>0)
 37579  001B02  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 37580  001B04  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 37581  001B06  B4D8               	btfsc	status,2,c
 37582  001B08  D005               	goto	l1983
 37583                           
 37584                           ;fat16.c: 351: {;fat16.c: 352: return first_cluster;
 37585  001B0A  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 37586  001B0E  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 37587                           
 37588                           ;fat16.c: 353: }
 37589  001B12  0012               	return	
 37590  001B14                     l1983:
 37591                           
 37592                           ;fat16.c: 354: else;fat16.c: 355: {;fat16.c: 356: return 0x0000;
 37593  001B14  0E00               	movlw	0
 37594  001B16  6E37               	movwf	?__make_cluster_chain+1,c
 37595  001B18  0E00               	movlw	0
 37596  001B1A  6E36               	movwf	?__make_cluster_chain,c
 37597  001B1C  0012               	return	
 37598  001B1E                     __end_of__make_cluster_chain:
 37599                           	opt stack 0
 37600                           tosu	equ	0xFFF
 37601                           tosh	equ	0xFFE
 37602                           tosl	equ	0xFFD
 37603                           pclath	equ	0xFFA
 37604                           tblptru	equ	0xFF8
 37605                           tblptrh	equ	0xFF7
 37606                           tblptrl	equ	0xFF6
 37607                           tablat	equ	0xFF5
 37608                           prodh	equ	0xFF4
 37609                           prodl	equ	0xFF3
 37610                           intcon	equ	0xFF2
 37611                           intcon2	equ	0xFF1
 37612                           intcon3	equ	0xFF0
 37613                           indf0	equ	0xFEF
 37614                           postinc0	equ	0xFEE
 37615                           fsr0h	equ	0xFEA
 37616                           fsr0l	equ	0xFE9
 37617                           wreg	equ	0xFE8
 37618                           indf1	equ	0xFE7
 37619                           postdec1	equ	0xFE5
 37620                           plusw1	equ	0xFE3
 37621                           fsr1h	equ	0xFE2
 37622                           fsr1l	equ	0xFE1
 37623                           indf2	equ	0xFDF
 37624                           postinc2	equ	0xFDE
 37625                           postdec2	equ	0xFDD
 37626                           plusw2	equ	0xFDB
 37627                           fsr2h	equ	0xFDA
 37628                           fsr2l	equ	0xFD9
 37629                           status	equ	0xFD8
 37630                           
 37631 ;; *************** function _flash_sector_write *****************
 37632 ;; Defined at:
 37633 ;;		line 433 in file "flash.c"
 37634 ;; Parameters:    Size  Location     Type
 37635 ;;  page            2   31[COMRAM] unsigned int 
 37636 ;;  data            2   33[COMRAM] PTR unsigned char 
 37637 ;;		 -> buffer(512), msd_buffer(512), 
 37638 ;; Auto vars:     Size  Location     Type
 37639 ;;  match           1   35[COMRAM] enum E6894
 37640 ;; Return value:  Size  Location     Type
 37641 ;;                  1    wreg      void 
 37642 ;; Registers used:
 37643 ;;		wreg, status,2, status,0, cstack
 37644 ;; Tracked objects:
 37645 ;;		On entry : 0/0
 37646 ;;		On exit  : 0/0
 37647 ;;		Unchanged: 0/0
 37648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37652 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37653 ;;Total ram usage:        5 bytes
 37654 ;; Hardware stack levels used:    1
 37655 ;; Hardware stack levels required when called:    4
 37656 ;; This function calls:
 37657 ;;		__flash_compare_page_to_buffer
 37658 ;;		__flash_write_page_from_buffer
 37659 ;;		__flash_write_to_buffer
 37660 ;;		_spi_set_configuration
 37661 ;; This function is called by:
 37662 ;;		_ExternalFlash_SectorWrite
 37663 ;;		__make_cluster_chain
 37664 ;;		_fat_format
 37665 ;; This function uses a non-reentrant model
 37666 ;;
 37667                           
 37668                           	psect	text189
 37669  007B50                     __ptext189:
 37670                           	opt stack 0
 37671  007B50                     _flash_sector_write:
 37672                           	opt stack 23
 37673                           
 37674                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 37675                           
 37676                           ;incstack = 0
 37677  007B50  0E00               	movlw	0
 37678  007B52  EC43  F023         	call	_spi_set_configuration
 37679                           
 37680                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 37681  007B56  0E00               	movlw	0
 37682  007B58  6E15               	movwf	__flash_write_to_buffer@start+1,c
 37683  007B5A  0E00               	movlw	0
 37684  007B5C  6E14               	movwf	__flash_write_to_buffer@start,c
 37685  007B5E  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 37686  007B62  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 37687  007B66  0E02               	movlw	2
 37688  007B68  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 37689  007B6A  0E00               	movlw	0
 37690  007B6C  6E18               	movwf	__flash_write_to_buffer@data_length,c
 37691  007B6E  0E00               	movlw	0
 37692  007B70  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 37693  007B72  ECCD  F03E         	call	__flash_write_to_buffer	;wreg free
 37694                           
 37695                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 37696  007B76  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 37697  007B7A  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 37698  007B7E  0E00               	movlw	0
 37699  007B80  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 37700  007B82  EC39  F038         	call	__flash_compare_page_to_buffer	;wreg free
 37701  007B86  6E24               	movwf	flash_sector_write@match,c
 37702                           
 37703                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 37704  007B88  0424               	decf	flash_sector_write@match,w,c
 37705  007B8A  A4D8               	btfss	status,2,c
 37706  007B8C  D008               	goto	l1837
 37707                           
 37708                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 37709  007B8E  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 37710  007B92  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 37711  007B96  0E00               	movlw	0
 37712  007B98  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 37713  007B9A  EC78  F03C         	call	__flash_write_page_from_buffer	;wreg free
 37714  007B9E                     l1837:
 37715                           
 37716                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37717  007B9E  0E01               	movlw	1
 37718  007BA0  EC43  F023         	call	_spi_set_configuration
 37719  007BA4  0012               	return		;funcret
 37720  007BA6                     __end_of_flash_sector_write:
 37721                           	opt stack 0
 37722                           tosu	equ	0xFFF
 37723                           tosh	equ	0xFFE
 37724                           tosl	equ	0xFFD
 37725                           pclath	equ	0xFFA
 37726                           tblptru	equ	0xFF8
 37727                           tblptrh	equ	0xFF7
 37728                           tblptrl	equ	0xFF6
 37729                           tablat	equ	0xFF5
 37730                           prodh	equ	0xFF4
 37731                           prodl	equ	0xFF3
 37732                           intcon	equ	0xFF2
 37733                           intcon2	equ	0xFF1
 37734                           intcon3	equ	0xFF0
 37735                           indf0	equ	0xFEF
 37736                           postinc0	equ	0xFEE
 37737                           fsr0h	equ	0xFEA
 37738                           fsr0l	equ	0xFE9
 37739                           wreg	equ	0xFE8
 37740                           indf1	equ	0xFE7
 37741                           postdec1	equ	0xFE5
 37742                           plusw1	equ	0xFE3
 37743                           fsr1h	equ	0xFE2
 37744                           fsr1l	equ	0xFE1
 37745                           indf2	equ	0xFDF
 37746                           postinc2	equ	0xFDE
 37747                           postdec2	equ	0xFDD
 37748                           plusw2	equ	0xFDB
 37749                           fsr2h	equ	0xFDA
 37750                           fsr2l	equ	0xFD9
 37751                           status	equ	0xFD8
 37752                           
 37753 ;; *************** function __write_value_to_offset *****************
 37754 ;; Defined at:
 37755 ;;		line 123 in file "fat16.c"
 37756 ;; Parameters:    Size  Location     Type
 37757 ;;  offset          2    0[COMRAM] unsigned int 
 37758 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 37759 ;;		 -> buffer(512), 
 37760 ;;  value           2    4[COMRAM] unsigned int 
 37761 ;; Auto vars:     Size  Location     Type
 37762 ;;		None
 37763 ;; Return value:  Size  Location     Type
 37764 ;;                  1    wreg      void 
 37765 ;; Registers used:
 37766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37767 ;; Tracked objects:
 37768 ;;		On entry : 0/0
 37769 ;;		On exit  : 0/0
 37770 ;;		Unchanged: 0/0
 37771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37772 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37775 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37776 ;;Total ram usage:        8 bytes
 37777 ;; Hardware stack levels used:    1
 37778 ;; This function calls:
 37779 ;;		Nothing
 37780 ;; This function is called by:
 37781 ;;		__make_cluster_chain
 37782 ;; This function uses a non-reentrant model
 37783 ;;
 37784                           
 37785                           	psect	text190
 37786  00835A                     __ptext190:
 37787                           	opt stack 0
 37788  00835A                     __write_value_to_offset:
 37789                           	opt stack 25
 37790                           
 37791                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 37792                           
 37793                           ;incstack = 0
 37794  00835A  5001               	movf	__write_value_to_offset@offset,w,c
 37795  00835C  2403               	addwf	__write_value_to_offset@buffer,w,c
 37796  00835E  6ED9               	movwf	fsr2l,c
 37797  008360  5002               	movf	__write_value_to_offset@offset+1,w,c
 37798  008362  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 37799  008364  6EDA               	movwf	fsr2h,c
 37800  008366  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 37801                           
 37802                           ;fat16.c: 126: value >>= 8;
 37803  00836A  5006               	movf	__write_value_to_offset@value+1,w,c
 37804  00836C  6E05               	movwf	__write_value_to_offset@value,c
 37805  00836E  6A06               	clrf	__write_value_to_offset@value+1,c
 37806                           
 37807                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 37808  008370  0E01               	movlw	1
 37809  008372  2401               	addwf	__write_value_to_offset@offset,w,c
 37810  008374  6E07               	movwf	??__write_value_to_offset& (0+255),c
 37811  008376  0E00               	movlw	0
 37812  008378  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 37813  00837A  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 37814  00837C  5007               	movf	??__write_value_to_offset,w,c
 37815  00837E  2403               	addwf	__write_value_to_offset@buffer,w,c
 37816  008380  6ED9               	movwf	fsr2l,c
 37817  008382  5008               	movf	??__write_value_to_offset+1,w,c
 37818  008384  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 37819  008386  6EDA               	movwf	fsr2h,c
 37820  008388  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 37821  00838C  0012               	return		;funcret
 37822  00838E                     __end_of__write_value_to_offset:
 37823                           	opt stack 0
 37824                           tosu	equ	0xFFF
 37825                           tosh	equ	0xFFE
 37826                           tosl	equ	0xFFD
 37827                           pclath	equ	0xFFA
 37828                           tblptru	equ	0xFF8
 37829                           tblptrh	equ	0xFF7
 37830                           tblptrl	equ	0xFF6
 37831                           tablat	equ	0xFF5
 37832                           prodh	equ	0xFF4
 37833                           prodl	equ	0xFF3
 37834                           intcon	equ	0xFF2
 37835                           intcon2	equ	0xFF1
 37836                           intcon3	equ	0xFF0
 37837                           indf0	equ	0xFEF
 37838                           postinc0	equ	0xFEE
 37839                           fsr0h	equ	0xFEA
 37840                           fsr0l	equ	0xFE9
 37841                           wreg	equ	0xFE8
 37842                           indf1	equ	0xFE7
 37843                           postdec1	equ	0xFE5
 37844                           plusw1	equ	0xFE3
 37845                           fsr1h	equ	0xFE2
 37846                           fsr1l	equ	0xFE1
 37847                           indf2	equ	0xFDF
 37848                           postinc2	equ	0xFDE
 37849                           postdec2	equ	0xFDD
 37850                           plusw2	equ	0xFDB
 37851                           fsr2h	equ	0xFDA
 37852                           fsr2l	equ	0xFD9
 37853                           status	equ	0xFD8
 37854                           
 37855 ;; *************** function __get_available_cluster *****************
 37856 ;; Defined at:
 37857 ;;		line 130 in file "fat16.c"
 37858 ;; Parameters:    Size  Location     Type
 37859 ;;  first_sector    2   43[COMRAM] unsigned int 
 37860 ;;  skip_sector     2   45[COMRAM] unsigned int 
 37861 ;; Auto vars:     Size  Location     Type
 37862 ;;  sector          2   51[COMRAM] unsigned int 
 37863 ;;  offset          2   49[COMRAM] unsigned int 
 37864 ;;  cluster         2   47[COMRAM] unsigned int 
 37865 ;; Return value:  Size  Location     Type
 37866 ;;                  2   43[COMRAM] unsigned int 
 37867 ;; Registers used:
 37868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37869 ;; Tracked objects:
 37870 ;;		On entry : 0/0
 37871 ;;		On exit  : 0/0
 37872 ;;		Unchanged: 0/0
 37873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37875 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37877 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37878 ;;Total ram usage:       10 bytes
 37879 ;; Hardware stack levels used:    1
 37880 ;; Hardware stack levels required when called:    5
 37881 ;; This function calls:
 37882 ;;		__cluster_from_sector_and_offset
 37883 ;;		__get_available_offset_from_buffer
 37884 ;;		_flash_sector_read
 37885 ;; This function is called by:
 37886 ;;		__make_cluster_chain
 37887 ;; This function uses a non-reentrant model
 37888 ;;
 37889                           
 37890                           	psect	text191
 37891  005EC6                     __ptext191:
 37892                           	opt stack 0
 37893  005EC6                     __get_available_cluster:
 37894                           	opt stack 20
 37895                           
 37896                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector = first_sector; sector <= 33; ++sector)
 37897                           
 37898                           ;incstack = 0
 37899  005EC6  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 37900  005ECA  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 37901  005ECE                     l10623:
 37902  005ECE  5035               	movf	__get_available_cluster@sector+1,w,c
 37903  005ED0  E157               	bnz	l10655
 37904  005ED2  0E22               	movlw	34
 37905  005ED4  5C34               	subwf	__get_available_cluster@sector,w,c
 37906  005ED6  B0D8               	btfsc	status,0,c
 37907  005ED8  D053               	goto	u7310
 37908                           
 37909                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 37910  005EDA  502E               	movf	__get_available_cluster@skip_sector,w,c
 37911  005EDC  1834               	xorwf	__get_available_cluster@sector,w,c
 37912  005EDE  E104               	bnz	l10631
 37913  005EE0  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 37914  005EE2  1835               	xorwf	__get_available_cluster@sector+1,w,c
 37915  005EE4  B4D8               	btfsc	status,2,c
 37916  005EE6  D049               	goto	l1951
 37917  005EE8                     l10631:
 37918                           
 37919                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 37920  005EE8  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 37921  005EEC  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 37922  005EF0  0EC0               	movlw	low _buffer
 37923  005EF2  6E2A               	movwf	flash_sector_read@data,c
 37924  005EF4  0E03               	movlw	high _buffer
 37925  005EF6  6E2B               	movwf	flash_sector_read@data+1,c
 37926  005EF8  ECF9  F041         	call	_flash_sector_read	;wreg free
 37927                           
 37928                           ;fat16.c: 149: if(sector == 2)
 37929  005EFC  0E02               	movlw	2
 37930  005EFE  1834               	xorwf	__get_available_cluster@sector,w,c
 37931  005F00  1035               	iorwf	__get_available_cluster@sector+1,w,c
 37932  005F02  A4D8               	btfss	status,2,c
 37933  005F04  D00B               	goto	l1946
 37934                           
 37935                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 37936  005F06  0E00               	movlw	0
 37937  005F08  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 37938  005F0A  0E04               	movlw	4
 37939  005F0C  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 37940  005F0E  0EC0               	movlw	low _buffer
 37941  005F10  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 37942  005F12  0E03               	movlw	high _buffer
 37943  005F14  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 37944  005F16  EC4C  F03C         	call	__get_available_offset_from_buffer	;wreg free
 37945  005F1A  D00A               	goto	L42
 37946  005F1C                     l1946:
 37947                           
 37948                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 37949  005F1C  0E00               	movlw	0
 37950  005F1E  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 37951  005F20  0E00               	movlw	0
 37952  005F22  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 37953  005F24  0EC0               	movlw	low _buffer
 37954  005F26  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 37955  005F28  0E03               	movlw	high _buffer
 37956  005F2A  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 37957  005F2C  EC4C  F03C         	call	__get_available_offset_from_buffer	;wreg free
 37958  005F30                     L42:
 37959  005F30  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 37960  005F34  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 37961                           
 37962                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 37963  005F38  2832               	incf	__get_available_cluster@offset,w,c
 37964  005F3A  E103               	bnz	u7290
 37965  005F3C  2833               	incf	__get_available_cluster@offset+1,w,c
 37966  005F3E  B4D8               	btfsc	status,2,c
 37967  005F40  D01C               	goto	l1951
 37968  005F42                     u7290:
 37969                           
 37970                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 37971  005F42  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 37972  005F46  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 37973  005F4A  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 37974  005F4E  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 37975  005F52  EC44  F043         	call	__cluster_from_sector_and_offset	;wreg free
 37976  005F56  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 37977  005F5A  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 37978                           
 37979                           ;fat16.c: 165: if(cluster > 8191)
 37980  005F5E  0E20               	movlw	32
 37981  005F60  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 37982  005F62  A0D8               	btfss	status,0,c
 37983  005F64  D005               	goto	l1949
 37984                           
 37985                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 37986  005F66  0E00               	movlw	0
 37987  005F68  6E2D               	movwf	?__get_available_cluster+1,c
 37988  005F6A  0E00               	movlw	0
 37989  005F6C  6E2C               	movwf	?__get_available_cluster,c
 37990  005F6E  0012               	return	
 37991  005F70                     l1949:
 37992                           
 37993                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 37994  005F70  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 37995  005F74  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 37996  005F78  0012               	return	
 37997  005F7A                     l1951:
 37998  005F7A  4A34               	infsnz	__get_available_cluster@sector,f,c
 37999  005F7C  2A35               	incf	__get_available_cluster@sector+1,f,c
 38000  005F7E  D7A7               	goto	l10623
 38001  005F80                     u7310:
 38002  005F80                     l10655:
 38003                           
 38004                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 38005  005F80  0E00               	movlw	0
 38006  005F82  6E2D               	movwf	?__get_available_cluster+1,c
 38007  005F84  0E00               	movlw	0
 38008  005F86  6E2C               	movwf	?__get_available_cluster,c
 38009  005F88  0012               	return	
 38010  005F8A                     __end_of__get_available_cluster:
 38011                           	opt stack 0
 38012                           tosu	equ	0xFFF
 38013                           tosh	equ	0xFFE
 38014                           tosl	equ	0xFFD
 38015                           pclath	equ	0xFFA
 38016                           tblptru	equ	0xFF8
 38017                           tblptrh	equ	0xFF7
 38018                           tblptrl	equ	0xFF6
 38019                           tablat	equ	0xFF5
 38020                           prodh	equ	0xFF4
 38021                           prodl	equ	0xFF3
 38022                           intcon	equ	0xFF2
 38023                           intcon2	equ	0xFF1
 38024                           intcon3	equ	0xFF0
 38025                           indf0	equ	0xFEF
 38026                           postinc0	equ	0xFEE
 38027                           fsr0h	equ	0xFEA
 38028                           fsr0l	equ	0xFE9
 38029                           wreg	equ	0xFE8
 38030                           indf1	equ	0xFE7
 38031                           postdec1	equ	0xFE5
 38032                           plusw1	equ	0xFE3
 38033                           fsr1h	equ	0xFE2
 38034                           fsr1l	equ	0xFE1
 38035                           indf2	equ	0xFDF
 38036                           postinc2	equ	0xFDE
 38037                           postdec2	equ	0xFDD
 38038                           plusw2	equ	0xFDB
 38039                           fsr2h	equ	0xFDA
 38040                           fsr2l	equ	0xFD9
 38041                           status	equ	0xFD8
 38042                           
 38043 ;; *************** function __get_available_offset_from_buffer *****************
 38044 ;; Defined at:
 38045 ;;		line 98 in file "fat16.c"
 38046 ;; Parameters:    Size  Location     Type
 38047 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 38048 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 38049 ;;		 -> buffer(512), 
 38050 ;; Auto vars:     Size  Location     Type
 38051 ;;  offset          2    6[COMRAM] unsigned int 
 38052 ;; Return value:  Size  Location     Type
 38053 ;;                  2    0[COMRAM] unsigned int 
 38054 ;; Registers used:
 38055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38056 ;; Tracked objects:
 38057 ;;		On entry : 0/0
 38058 ;;		On exit  : 0/0
 38059 ;;		Unchanged: 0/0
 38060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38064 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38065 ;;Total ram usage:        8 bytes
 38066 ;; Hardware stack levels used:    1
 38067 ;; This function calls:
 38068 ;;		Nothing
 38069 ;; This function is called by:
 38070 ;;		__get_available_cluster
 38071 ;;		__make_cluster_chain
 38072 ;; This function uses a non-reentrant model
 38073 ;;
 38074                           
 38075                           	psect	text192
 38076  007898                     __ptext192:
 38077                           	opt stack 0
 38078  007898                     __get_available_offset_from_buffer:
 38079                           	opt stack 25
 38080                           
 38081                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<256; o
      +                          ffset += 2)
 38082                           
 38083                           ;incstack = 0
 38084  007898  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 38085  00789C  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 38086  0078A0  D021               	goto	L43
 38087  0078A2                     
 38088                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 38089  0078A2  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 38090  0078A4  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 38091  0078A6  6ED9               	movwf	fsr2l,c
 38092  0078A8  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 38093  0078AA  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 38094  0078AC  6EDA               	movwf	fsr2h,c
 38095  0078AE  50DF               	movf	indf2,w,c
 38096  0078B0  A4D8               	btfss	status,2,c
 38097  0078B2  D014               	goto	l1932
 38098  0078B4  0E01               	movlw	1
 38099  0078B6  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 38100  0078B8  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 38101  0078BA  0E00               	movlw	0
 38102  0078BC  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 38103  0078BE  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 38104  0078C0  5005               	movf	??__get_available_offset_from_buffer,w,c
 38105  0078C2  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 38106  0078C4  6ED9               	movwf	fsr2l,c
 38107  0078C6  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 38108  0078C8  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 38109  0078CA  6EDA               	movwf	fsr2h,c
 38110  0078CC  50DF               	movf	indf2,w,c
 38111  0078CE  A4D8               	btfss	status,2,c
 38112  0078D0  D005               	goto	l1932
 38113                           
 38114                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 38115  0078D2  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 38116  0078D6  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 38117  0078DA  0012               	return	
 38118  0078DC                     l1932:
 38119  0078DC  0E02               	movlw	2
 38120  0078DE  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 38121  0078E0  0E00               	movlw	0
 38122  0078E2  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 38123  0078E4                     L43:
 38124  0078E4  0408               	decf	__get_available_offset_from_buffer@offset+1,w,c
 38125  0078E6  A0D8               	btfss	status,0,c
 38126  0078E8  D7DC               	goto	l1930
 38127                           
 38128                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 38129  0078EA  6801               	setf	?__get_available_offset_from_buffer,c
 38130  0078EC  6802               	setf	?__get_available_offset_from_buffer+1,c
 38131  0078EE  0012               	return		;funcret
 38132  0078F0                     __end_of__get_available_offset_from_buffer:
 38133                           	opt stack 0
 38134                           tosu	equ	0xFFF
 38135                           tosh	equ	0xFFE
 38136                           tosl	equ	0xFFD
 38137                           pclath	equ	0xFFA
 38138                           tblptru	equ	0xFF8
 38139                           tblptrh	equ	0xFF7
 38140                           tblptrl	equ	0xFF6
 38141                           tablat	equ	0xFF5
 38142                           prodh	equ	0xFF4
 38143                           prodl	equ	0xFF3
 38144                           intcon	equ	0xFF2
 38145                           intcon2	equ	0xFF1
 38146                           intcon3	equ	0xFF0
 38147                           indf0	equ	0xFEF
 38148                           postinc0	equ	0xFEE
 38149                           fsr0h	equ	0xFEA
 38150                           fsr0l	equ	0xFE9
 38151                           wreg	equ	0xFE8
 38152                           indf1	equ	0xFE7
 38153                           postdec1	equ	0xFE5
 38154                           plusw1	equ	0xFE3
 38155                           fsr1h	equ	0xFE2
 38156                           fsr1l	equ	0xFE1
 38157                           indf2	equ	0xFDF
 38158                           postinc2	equ	0xFDE
 38159                           postdec2	equ	0xFDD
 38160                           plusw2	equ	0xFDB
 38161                           fsr2h	equ	0xFDA
 38162                           fsr2l	equ	0xFD9
 38163                           status	equ	0xFD8
 38164                           
 38165 ;; *************** function __cluster_from_sector_and_offset *****************
 38166 ;; Defined at:
 38167 ;;		line 89 in file "fat16.c"
 38168 ;; Parameters:    Size  Location     Type
 38169 ;;  sector          2    0[COMRAM] unsigned int 
 38170 ;;  offset          2    2[COMRAM] unsigned int 
 38171 ;; Auto vars:     Size  Location     Type
 38172 ;;		None
 38173 ;; Return value:  Size  Location     Type
 38174 ;;                  2    0[COMRAM] unsigned int 
 38175 ;; Registers used:
 38176 ;;		wreg, status,2, status,0
 38177 ;; Tracked objects:
 38178 ;;		On entry : 0/0
 38179 ;;		On exit  : 0/0
 38180 ;;		Unchanged: 0/0
 38181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38185 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38186 ;;Total ram usage:        4 bytes
 38187 ;; Hardware stack levels used:    1
 38188 ;; This function calls:
 38189 ;;		Nothing
 38190 ;; This function is called by:
 38191 ;;		__get_available_cluster
 38192 ;; This function uses a non-reentrant model
 38193 ;;
 38194                           
 38195                           	psect	text193
 38196  008688                     __ptext193:
 38197                           	opt stack 0
 38198  008688                     __cluster_from_sector_and_offset:
 38199                           	opt stack 24
 38200                           
 38201                           ;fat16.c: 91: offset >>= 1;
 38202                           
 38203                           ;incstack = 0
 38204  008688  90D8               	bcf	status,0,c
 38205  00868A  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 38206  00868C  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 38207                           
 38208                           ;fat16.c: 92: sector -= 2;
 38209  00868E  0E02               	movlw	2
 38210  008690  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 38211  008692  0E00               	movlw	0
 38212  008694  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 38213                           
 38214                           ;fat16.c: 93: sector <<= 8;
 38215  008696  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 38216  008698  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 38217  00869A  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 38218                           
 38219                           ;fat16.c: 94: sector |= offset;
 38220  00869C  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 38221  00869E  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 38222  0086A0  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 38223  0086A2  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 38224                           
 38225                           ;fat16.c: 95: return sector;
 38226  0086A4  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 38227  0086A8  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 38228  0086AC  0012               	return	
 38229  0086AE                     __end_of__cluster_from_sector_and_offset:
 38230                           	opt stack 0
 38231                           tosu	equ	0xFFF
 38232                           tosh	equ	0xFFE
 38233                           tosl	equ	0xFFD
 38234                           pclath	equ	0xFFA
 38235                           tblptru	equ	0xFF8
 38236                           tblptrh	equ	0xFF7
 38237                           tblptrl	equ	0xFF6
 38238                           tablat	equ	0xFF5
 38239                           prodh	equ	0xFF4
 38240                           prodl	equ	0xFF3
 38241                           intcon	equ	0xFF2
 38242                           intcon2	equ	0xFF1
 38243                           intcon3	equ	0xFF0
 38244                           indf0	equ	0xFEF
 38245                           postinc0	equ	0xFEE
 38246                           fsr0h	equ	0xFEA
 38247                           fsr0l	equ	0xFE9
 38248                           wreg	equ	0xFE8
 38249                           indf1	equ	0xFE7
 38250                           postdec1	equ	0xFE5
 38251                           plusw1	equ	0xFE3
 38252                           fsr1h	equ	0xFE2
 38253                           fsr1l	equ	0xFE1
 38254                           indf2	equ	0xFDF
 38255                           postinc2	equ	0xFDE
 38256                           postdec2	equ	0xFDD
 38257                           plusw2	equ	0xFDB
 38258                           fsr2h	equ	0xFDA
 38259                           fsr2l	equ	0xFD9
 38260                           status	equ	0xFD8
 38261                           
 38262 ;; *************** function _fat_modify_file *****************
 38263 ;; Defined at:
 38264 ;;		line 889 in file "fat16.c"
 38265 ;; Parameters:    Size  Location     Type
 38266 ;;  file_number     1    wreg     unsigned char 
 38267 ;;  start_byte      4   65[COMRAM] unsigned long 
 38268 ;;  length          2   69[COMRAM] unsigned int 
 38269 ;;  data            2   71[COMRAM] PTR unsigned char 
 38270 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38271 ;; Auto vars:     Size  Location     Type
 38272 ;;  file_number     1    2[BANK0 ] unsigned char 
 38273 ;;  root           32   14[BANK0 ] struct .
 38274 ;;  position        4   10[BANK0 ] unsigned long 
 38275 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 38276 ;;  offset          2    6[BANK0 ] unsigned int 
 38277 ;;  cluster         2    4[BANK0 ] unsigned int 
 38278 ;;  sector          2    0[BANK0 ] unsigned int 
 38279 ;;  return_code     1    3[BANK0 ] unsigned char 
 38280 ;; Return value:  Size  Location     Type
 38281 ;;                  1    wreg      void 
 38282 ;; Registers used:
 38283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38284 ;; Tracked objects:
 38285 ;;		On entry : 0/0
 38286 ;;		On exit  : 0/0
 38287 ;;		Unchanged: 0/0
 38288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38289 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38290 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38291 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38292 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38293 ;;Total ram usage:       66 bytes
 38294 ;; Hardware stack levels used:    1
 38295 ;; Hardware stack levels required when called:    7
 38296 ;; This function calls:
 38297 ;;		__data_sector_from_cluster
 38298 ;;		__find_nth_cluster
 38299 ;;		__read_fat
 38300 ;;		_fat_get_file_information
 38301 ;;		_flash_partial_write
 38302 ;; This function is called by:
 38303 ;;		_fat_append_to_file
 38304 ;;		__parse_file_modify
 38305 ;; This function uses a non-reentrant model
 38306 ;;
 38307                           
 38308                           	psect	text194
 38309  00225A                     __ptext194:
 38310                           	opt stack 0
 38311  00225A                     _fat_modify_file:
 38312                           	opt stack 20
 38313                           
 38314                           ;incstack = 0
 38315                           ;fat_modify_file@file_number stored from wreg
 38316  00225A  0100               	movlb	0	; () banked
 38317  00225C  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 38318                           
 38319                           ;fat16.c: 891: rootEntry_t root;;fat16.c: 892: uint16_t cluster;;fat16.c: 893: uint32_t 
      +                          position;;fat16.c: 894: uint16_t offset;;fat16.c: 895: uint16_t sector;;fat16.c: 896: ui
      +                          nt16_t number_of_bytes;;fat16.c: 897: uint8_t return_code;;fat16.c: 900: return_code = f
      +                          at_get_file_information(file_number, &root);
 38320  00225E  0E6E               	movlw	low fat_modify_file@root
 38321  002260  6E30               	movwf	fat_get_file_information@data,c
 38322  002262  0E00               	movlw	high fat_modify_file@root
 38323  002264  6E31               	movwf	fat_get_file_information@data+1,c
 38324  002266  0100               	movlb	0	; () banked
 38325  002268  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 38326  00226A  ECEA  F038         	call	_fat_get_file_information
 38327  00226E  0100               	movlb	0	; () banked
 38328  002270  6F63               	movwf	fat_modify_file@return_code& (0+255),b
 38329                           
 38330                           ; BSR set to: 0
 38331                           ;fat16.c: 901: if(return_code!=0x00)
 38332  002272  5163               	movf	fat_modify_file@return_code& (0+255),w,b
 38333  002274  A4D8               	btfss	status,2,c
 38334  002276  0012               	return	
 38335                           
 38336                           ; BSR set to: 0
 38337                           ;fat16.c: 905: };fat16.c: 908: if(start_byte>root.fileSize)
 38338                           
 38339                           ; BSR set to: 0
 38340                           
 38341                           ; BSR set to: 0
 38342                           ;fat16.c: 902: {;fat16.c: 904: return;
 38343  002278  5042               	movf	fat_modify_file@start_byte,w,c
 38344  00227A  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 38345  00227C  5043               	movf	fat_modify_file@start_byte+1,w,c
 38346  00227E  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 38347  002280  5044               	movf	fat_modify_file@start_byte+2,w,c
 38348  002282  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 38349  002284  5045               	movf	fat_modify_file@start_byte+3,w,c
 38350  002286  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 38351  002288  A0D8               	btfss	status,0,c
 38352  00228A  0012               	return	
 38353                           
 38354                           ; BSR set to: 0
 38355                           ;fat16.c: 912: };fat16.c: 914: if((start_byte+length) > root.fileSize)
 38356                           
 38357                           ; BSR set to: 0
 38358                           
 38359                           ; BSR set to: 0
 38360                           ;fat16.c: 909: {;fat16.c: 911: return;
 38361  00228C  5046               	movf	fat_modify_file@length,w,c
 38362  00228E  2442               	addwf	fat_modify_file@start_byte,w,c
 38363  002290  6E4A               	movwf	??_fat_modify_file& (0+255),c
 38364  002292  5047               	movf	fat_modify_file@length+1,w,c
 38365  002294  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 38366  002296  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 38367  002298  0E00               	movlw	0
 38368  00229A  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 38369  00229C  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 38370  00229E  0E00               	movlw	0
 38371  0022A0  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 38372  0022A2  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 38373  0022A4  504A               	movf	??_fat_modify_file,w,c
 38374  0022A6  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 38375  0022A8  504B               	movf	??_fat_modify_file+1,w,c
 38376  0022AA  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 38377  0022AC  504C               	movf	??_fat_modify_file+2,w,c
 38378  0022AE  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 38379  0022B0  504D               	movf	??_fat_modify_file+3,w,c
 38380  0022B2  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 38381  0022B4  B0D8               	btfsc	status,0,c
 38382  0022B6  D00E               	goto	l2086
 38383                           
 38384                           ; BSR set to: 0
 38385                           ;fat16.c: 915: {;fat16.c: 917: length = root.fileSize - start_byte;
 38386  0022B8  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 38387  0022BC  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 38388  0022C0  1E4A               	comf	??_fat_modify_file,f,c
 38389  0022C2  1E4B               	comf	??_fat_modify_file+1,f,c
 38390  0022C4  4A4A               	infsnz	??_fat_modify_file,f,c
 38391  0022C6  2A4B               	incf	??_fat_modify_file+1,f,c
 38392  0022C8  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 38393  0022CA  244A               	addwf	??_fat_modify_file,w,c
 38394  0022CC  6E46               	movwf	fat_modify_file@length,c
 38395  0022CE  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 38396  0022D0  204B               	addwfc	??_fat_modify_file+1,w,c
 38397  0022D2  6E47               	movwf	fat_modify_file@length+1,c
 38398  0022D4                     l2086:
 38399                           
 38400                           ; BSR set to: 0
 38401                           ;fat16.c: 918: };fat16.c: 921: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 38402                           
 38403                           ; BSR set to: 0
 38404  0022D4  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 38405  0022D8  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 38406  0022DC  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 38407  0022E0  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 38408  0022E4  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 38409  0022E8  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 38410  0022EC  0E0A               	movlw	10
 38411  0022EE  D005               	goto	u9170
 38412  0022F0                     u9175:
 38413  0022F0  90D8               	bcf	status,0,c
 38414  0022F2  324D               	rrcf	??_fat_modify_file+3,f,c
 38415  0022F4  324C               	rrcf	??_fat_modify_file+2,f,c
 38416  0022F6  324B               	rrcf	??_fat_modify_file+1,f,c
 38417  0022F8  324A               	rrcf	??_fat_modify_file,f,c
 38418  0022FA                     u9170:
 38419  0022FA  2EE8               	decfsz	wreg,f,c
 38420  0022FC  D7F9               	goto	u9175
 38421  0022FE  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 38422  002302  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 38423  002306  EC12  F034         	call	__find_nth_cluster	;wreg free
 38424  00230A  C038  F064         	movff	?__find_nth_cluster,fat_modify_file@cluster
 38425  00230E  C039  F065         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 38426                           
 38427                           ;fat16.c: 924: position = start_byte &= 0xFFFFFE00;
 38428  002312  0E00               	movlw	0
 38429  002314  1642               	andwf	fat_modify_file@start_byte,f,c
 38430  002316  0EFE               	movlw	254
 38431  002318  1643               	andwf	fat_modify_file@start_byte+1,f,c
 38432  00231A  0EFF               	movlw	255
 38433  00231C  1644               	andwf	fat_modify_file@start_byte+2,f,c
 38434  00231E  0EFF               	movlw	255
 38435  002320  1645               	andwf	fat_modify_file@start_byte+3,f,c
 38436  002322  C042  F06A         	movff	fat_modify_file@start_byte,fat_modify_file@position
 38437  002326  C043  F06B         	movff	fat_modify_file@start_byte+1,fat_modify_file@position+1
 38438  00232A  C044  F06C         	movff	fat_modify_file@start_byte+2,fat_modify_file@position+2
 38439  00232E  C045  F06D         	movff	fat_modify_file@start_byte+3,fat_modify_file@position+3
 38440                           
 38441                           ;fat16.c: 927: offset = (uint16_t) (start_byte-position);
 38442  002332  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 38443  002336  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 38444  00233A  1E4A               	comf	??_fat_modify_file,f,c
 38445  00233C  1E4B               	comf	??_fat_modify_file+1,f,c
 38446  00233E  4A4A               	infsnz	??_fat_modify_file,f,c
 38447  002340  2A4B               	incf	??_fat_modify_file+1,f,c
 38448  002342  5042               	movf	fat_modify_file@start_byte,w,c
 38449  002344  244A               	addwf	??_fat_modify_file,w,c
 38450  002346  0100               	movlb	0	; () banked
 38451  002348  6F66               	movwf	fat_modify_file@offset& (0+255),b
 38452  00234A  5043               	movf	fat_modify_file@start_byte+1,w,c
 38453  00234C  204B               	addwfc	??_fat_modify_file+1,w,c
 38454  00234E  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 38455                           
 38456                           ; BSR set to: 0
 38457                           ;fat16.c: 930: position = 0;
 38458  002350  0E00               	movlw	0
 38459  002352  6F6A               	movwf	fat_modify_file@position& (0+255),b
 38460  002354  0E00               	movlw	0
 38461  002356  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 38462  002358  0E00               	movlw	0
 38463  00235A  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 38464  00235C  0E00               	movlw	0
 38465  00235E  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 38466                           
 38467                           ;fat16.c: 931: while(position < length)
 38468  002360  D089               	goto	l2087
 38469  002362                     
 38470                           ; BSR set to: 0
 38471                           ;fat16.c: 932: {;fat16.c: 934: if(offset==512)
 38472                           
 38473                           ; BSR set to: 0
 38474  002362  0E02               	movlw	2
 38475  002364  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 38476  002366  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 38477  002368  A4D8               	btfss	status,2,c
 38478  00236A  D00F               	goto	l2089
 38479                           
 38480                           ; BSR set to: 0
 38481                           ;fat16.c: 935: {;fat16.c: 937: cluster = _read_fat(cluster);
 38482  00236C  C064  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 38483  002370  C065  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 38484  002374  ECD3  F03D         	call	__read_fat	;wreg free
 38485  002378  C030  F064         	movff	?__read_fat,fat_modify_file@cluster
 38486  00237C  C031  F065         	movff	?__read_fat+1,fat_modify_file@cluster+1
 38487                           
 38488                           ;fat16.c: 939: offset = 0;
 38489  002380  0E00               	movlw	0
 38490  002382  0100               	movlb	0	; () banked
 38491  002384  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 38492  002386  0E00               	movlw	0
 38493  002388  6F66               	movwf	fat_modify_file@offset& (0+255),b
 38494  00238A                     l2089:
 38495                           
 38496                           ; BSR set to: 0
 38497                           ;fat16.c: 940: };fat16.c: 943: sector = _data_sector_from_cluster(cluster);
 38498                           
 38499                           ; BSR set to: 0
 38500  00238A  C064  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 38501  00238E  C065  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 38502  002392  ECDB  F044         	call	__data_sector_from_cluster	;wreg free
 38503  002396  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 38504  00239A  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 38505                           
 38506                           ;fat16.c: 946: number_of_bytes = 512 - offset;
 38507  00239E  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 38508  0023A2  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 38509  0023A6  1E4A               	comf	??_fat_modify_file,f,c
 38510  0023A8  1E4B               	comf	??_fat_modify_file+1,f,c
 38511  0023AA  4A4A               	infsnz	??_fat_modify_file,f,c
 38512  0023AC  2A4B               	incf	??_fat_modify_file+1,f,c
 38513  0023AE  0E00               	movlw	0
 38514  0023B0  244A               	addwf	??_fat_modify_file,w,c
 38515  0023B2  0100               	movlb	0	; () banked
 38516  0023B4  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 38517  0023B6  0E02               	movlw	2
 38518  0023B8  204B               	addwfc	??_fat_modify_file+1,w,c
 38519  0023BA  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 38520                           
 38521                           ; BSR set to: 0
 38522                           ;fat16.c: 947: if(number_of_bytes > (length-position))
 38523  0023BC  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 38524  0023BE  6E4A               	movwf	??_fat_modify_file& (0+255),c
 38525  0023C0  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 38526  0023C2  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 38527  0023C4  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 38528  0023C6  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 38529  0023C8  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 38530  0023CC  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 38531  0023D0  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 38532  0023D4  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 38533  0023D8  1E4E               	comf	??_fat_modify_file+4,f,c
 38534  0023DA  1E4F               	comf	??_fat_modify_file+5,f,c
 38535  0023DC  1E50               	comf	??_fat_modify_file+6,f,c
 38536  0023DE  1E51               	comf	??_fat_modify_file+7,f,c
 38537  0023E0  2A4E               	incf	??_fat_modify_file+4,f,c
 38538  0023E2  0E00               	movlw	0
 38539  0023E4  224F               	addwfc	??_fat_modify_file+5,f,c
 38540  0023E6  2250               	addwfc	??_fat_modify_file+6,f,c
 38541  0023E8  2251               	addwfc	??_fat_modify_file+7,f,c
 38542  0023EA  5046               	movf	fat_modify_file@length,w,c
 38543  0023EC  244E               	addwf	??_fat_modify_file+4,w,c
 38544  0023EE  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 38545  0023F0  5047               	movf	fat_modify_file@length+1,w,c
 38546  0023F2  204F               	addwfc	??_fat_modify_file+5,w,c
 38547  0023F4  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 38548  0023F6  0E00               	movlw	0
 38549  0023F8  2050               	addwfc	??_fat_modify_file+6,w,c
 38550  0023FA  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 38551  0023FC  0E00               	movlw	0
 38552  0023FE  2051               	addwfc	??_fat_modify_file+7,w,c
 38553  002400  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 38554  002402  504A               	movf	??_fat_modify_file,w,c
 38555  002404  5C52               	subwf	??_fat_modify_file+8,w,c
 38556  002406  504B               	movf	??_fat_modify_file+1,w,c
 38557  002408  5853               	subwfb	??_fat_modify_file+9,w,c
 38558  00240A  504C               	movf	??_fat_modify_file+2,w,c
 38559  00240C  5854               	subwfb	??_fat_modify_file+10,w,c
 38560  00240E  504D               	movf	??_fat_modify_file+3,w,c
 38561  002410  5855               	subwfb	??_fat_modify_file+11,w,c
 38562  002412  B0D8               	btfsc	status,0,c
 38563  002414  D00E               	goto	l2090
 38564                           
 38565                           ; BSR set to: 0
 38566                           ;fat16.c: 948: {;fat16.c: 949: number_of_bytes = length - position;
 38567  002416  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 38568  00241A  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 38569  00241E  1E4A               	comf	??_fat_modify_file,f,c
 38570  002420  1E4B               	comf	??_fat_modify_file+1,f,c
 38571  002422  4A4A               	infsnz	??_fat_modify_file,f,c
 38572  002424  2A4B               	incf	??_fat_modify_file+1,f,c
 38573  002426  5046               	movf	fat_modify_file@length,w,c
 38574  002428  244A               	addwf	??_fat_modify_file,w,c
 38575  00242A  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 38576  00242C  5047               	movf	fat_modify_file@length+1,w,c
 38577  00242E  204B               	addwfc	??_fat_modify_file+1,w,c
 38578  002430  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 38579  002432                     l2090:
 38580                           
 38581                           ; BSR set to: 0
 38582                           ;fat16.c: 950: };fat16.c: 953: flash_partial_write(sector, offset, number_of_bytes, &dat
      +                          a[position]);
 38583                           
 38584                           ; BSR set to: 0
 38585  002432  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 38586  002436  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 38587  00243A  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 38588  00243E  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 38589  002442  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 38590  002446  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 38591  00244A  516A               	movf	fat_modify_file@position& (0+255),w,b
 38592  00244C  2448               	addwf	fat_modify_file@data,w,c
 38593  00244E  6E26               	movwf	flash_partial_write@data,c
 38594  002450  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 38595  002452  2049               	addwfc	fat_modify_file@data+1,w,c
 38596  002454  6E27               	movwf	flash_partial_write@data+1,c
 38597  002456  EC5B  F039         	call	_flash_partial_write	;wreg free
 38598                           
 38599                           ;fat16.c: 956: position += number_of_bytes;
 38600  00245A  0100               	movlb	0	; () banked
 38601  00245C  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 38602  00245E  276A               	addwf	fat_modify_file@position& (0+255),f,b
 38603  002460  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 38604  002462  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 38605  002464  0E00               	movlw	0
 38606  002466  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 38607  002468  0E00               	movlw	0
 38608  00246A  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 38609                           
 38610                           ; BSR set to: 0
 38611                           ;fat16.c: 957: offset += number_of_bytes;
 38612  00246C  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 38613  00246E  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 38614  002470  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 38615  002472  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 38616  002474                     l2087:
 38617                           
 38618                           ; BSR set to: 0
 38619                           
 38620                           ; BSR set to: 0
 38621  002474  5046               	movf	fat_modify_file@length,w,c
 38622  002476  6E4A               	movwf	??_fat_modify_file& (0+255),c
 38623  002478  5047               	movf	fat_modify_file@length+1,w,c
 38624  00247A  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 38625  00247C  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 38626  00247E  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 38627  002480  504A               	movf	??_fat_modify_file,w,c
 38628  002482  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 38629  002484  504B               	movf	??_fat_modify_file+1,w,c
 38630  002486  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 38631  002488  504C               	movf	??_fat_modify_file+2,w,c
 38632  00248A  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 38633  00248C  504D               	movf	??_fat_modify_file+3,w,c
 38634  00248E  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 38635  002490  B0D8               	btfsc	status,0,c
 38636  002492  0012               	return	
 38637  002494  D766               	goto	l2088
 38638  002496                     __end_of_fat_modify_file:
 38639                           	opt stack 0
 38640                           tosu	equ	0xFFF
 38641                           tosh	equ	0xFFE
 38642                           tosl	equ	0xFFD
 38643                           pclath	equ	0xFFA
 38644                           tblptru	equ	0xFF8
 38645                           tblptrh	equ	0xFF7
 38646                           tblptrl	equ	0xFF6
 38647                           tablat	equ	0xFF5
 38648                           prodh	equ	0xFF4
 38649                           prodl	equ	0xFF3
 38650                           intcon	equ	0xFF2
 38651                           intcon2	equ	0xFF1
 38652                           intcon3	equ	0xFF0
 38653                           indf0	equ	0xFEF
 38654                           postinc0	equ	0xFEE
 38655                           fsr0h	equ	0xFEA
 38656                           fsr0l	equ	0xFE9
 38657                           wreg	equ	0xFE8
 38658                           indf1	equ	0xFE7
 38659                           postdec1	equ	0xFE5
 38660                           plusw1	equ	0xFE3
 38661                           fsr1h	equ	0xFE2
 38662                           fsr1l	equ	0xFE1
 38663                           indf2	equ	0xFDF
 38664                           postinc2	equ	0xFDE
 38665                           postdec2	equ	0xFDD
 38666                           plusw2	equ	0xFDB
 38667                           fsr2h	equ	0xFDA
 38668                           fsr2l	equ	0xFD9
 38669                           status	equ	0xFD8
 38670                           
 38671 ;; *************** function _flash_partial_write *****************
 38672 ;; Defined at:
 38673 ;;		line 471 in file "flash.c"
 38674 ;; Parameters:    Size  Location     Type
 38675 ;;  page            2   31[COMRAM] unsigned int 
 38676 ;;  start           2   33[COMRAM] unsigned int 
 38677 ;;  length          2   35[COMRAM] unsigned int 
 38678 ;;  data            2   37[COMRAM] PTR unsigned char 
 38679 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 38680 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 38681 ;; Auto vars:     Size  Location     Type
 38682 ;;  match           1   39[COMRAM] enum E6894
 38683 ;; Return value:  Size  Location     Type
 38684 ;;                  1    wreg      void 
 38685 ;; Registers used:
 38686 ;;		wreg, status,2, status,0, cstack
 38687 ;; Tracked objects:
 38688 ;;		On entry : 0/0
 38689 ;;		On exit  : 0/0
 38690 ;;		Unchanged: 0/0
 38691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38692 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38695 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38696 ;;Total ram usage:        9 bytes
 38697 ;; Hardware stack levels used:    1
 38698 ;; Hardware stack levels required when called:    4
 38699 ;; This function calls:
 38700 ;;		__flash_compare_page_to_buffer
 38701 ;;		__flash_copy_page_to_buffer
 38702 ;;		__flash_is_busy
 38703 ;;		__flash_write_page_from_buffer
 38704 ;;		__flash_write_to_buffer
 38705 ;;		_spi_set_configuration
 38706 ;; This function is called by:
 38707 ;;		__write_root
 38708 ;;		__delete_root
 38709 ;;		_fat_modify_file
 38710 ;; This function uses a non-reentrant model
 38711 ;;
 38712                           
 38713                           	psect	text195
 38714  0072B6                     __ptext195:
 38715                           	opt stack 0
 38716  0072B6                     _flash_partial_write:
 38717                           	opt stack 21
 38718                           
 38719                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 38720                           
 38721                           ; BSR set to: 0
 38722                           ;incstack = 0
 38723  0072B6  0E00               	movlw	0
 38724  0072B8  EC43  F023         	call	_spi_set_configuration
 38725  0072BC  ECD5  F043         	call	__flash_is_busy	;wreg free
 38726  0072C0  0900               	iorlw	0
 38727  0072C2  A4D8               	btfss	status,2,c
 38728  0072C4  D7FB               	goto	l1845
 38729                           
 38730                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 38731  0072C6  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 38732  0072CA  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 38733  0072CE  0E00               	movlw	0
 38734  0072D0  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 38735  0072D2  ECA4  F03C         	call	__flash_copy_page_to_buffer	;wreg free
 38736                           
 38737                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 38738  0072D6  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 38739  0072DA  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 38740  0072DE  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 38741  0072E2  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 38742  0072E6  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 38743  0072EA  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 38744  0072EE  0E00               	movlw	0
 38745  0072F0  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 38746  0072F2  ECCD  F03E         	call	__flash_write_to_buffer	;wreg free
 38747                           
 38748                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 38749  0072F6  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 38750  0072FA  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 38751  0072FE  0E00               	movlw	0
 38752  007300  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 38753  007302  EC39  F038         	call	__flash_compare_page_to_buffer	;wreg free
 38754  007306  6E28               	movwf	flash_partial_write@match,c
 38755                           
 38756                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 38757  007308  0428               	decf	flash_partial_write@match,w,c
 38758  00730A  A4D8               	btfss	status,2,c
 38759  00730C  D008               	goto	l1847
 38760                           
 38761                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 38762  00730E  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 38763  007312  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 38764  007316  0E00               	movlw	0
 38765  007318  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 38766  00731A  EC78  F03C         	call	__flash_write_page_from_buffer	;wreg free
 38767  00731E                     l1847:
 38768                           
 38769                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38770  00731E  0E01               	movlw	1
 38771  007320  EC43  F023         	call	_spi_set_configuration
 38772  007324  0012               	return		;funcret
 38773  007326                     __end_of_flash_partial_write:
 38774                           	opt stack 0
 38775                           tosu	equ	0xFFF
 38776                           tosh	equ	0xFFE
 38777                           tosl	equ	0xFFD
 38778                           pclath	equ	0xFFA
 38779                           tblptru	equ	0xFF8
 38780                           tblptrh	equ	0xFF7
 38781                           tblptrl	equ	0xFF6
 38782                           tablat	equ	0xFF5
 38783                           prodh	equ	0xFF4
 38784                           prodl	equ	0xFF3
 38785                           intcon	equ	0xFF2
 38786                           intcon2	equ	0xFF1
 38787                           intcon3	equ	0xFF0
 38788                           indf0	equ	0xFEF
 38789                           postinc0	equ	0xFEE
 38790                           fsr0h	equ	0xFEA
 38791                           fsr0l	equ	0xFE9
 38792                           wreg	equ	0xFE8
 38793                           indf1	equ	0xFE7
 38794                           postdec1	equ	0xFE5
 38795                           plusw1	equ	0xFE3
 38796                           fsr1h	equ	0xFE2
 38797                           fsr1l	equ	0xFE1
 38798                           indf2	equ	0xFDF
 38799                           postinc2	equ	0xFDE
 38800                           postdec2	equ	0xFDD
 38801                           plusw2	equ	0xFDB
 38802                           fsr2h	equ	0xFDA
 38803                           fsr2l	equ	0xFD9
 38804                           status	equ	0xFD8
 38805                           
 38806 ;; *************** function __flash_write_to_buffer *****************
 38807 ;; Defined at:
 38808 ;;		line 232 in file "flash.c"
 38809 ;; Parameters:    Size  Location     Type
 38810 ;;  start           2   19[COMRAM] unsigned int 
 38811 ;;  data            2   21[COMRAM] PTR unsigned char 
 38812 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 38813 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 38814 ;;  data_length     2   23[COMRAM] unsigned int 
 38815 ;;  buffer          1   25[COMRAM] enum E6890
 38816 ;; Auto vars:     Size  Location     Type
 38817 ;;  command         4   26[COMRAM] unsigned char [4]
 38818 ;; Return value:  Size  Location     Type
 38819 ;;                  1    wreg      void 
 38820 ;; Registers used:
 38821 ;;		wreg, status,2, status,0, cstack
 38822 ;; Tracked objects:
 38823 ;;		On entry : 0/0
 38824 ;;		On exit  : 0/0
 38825 ;;		Unchanged: 0/0
 38826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38827 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38828 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38830 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38831 ;;Total ram usage:       11 bytes
 38832 ;; Hardware stack levels used:    1
 38833 ;; Hardware stack levels required when called:    3
 38834 ;; This function calls:
 38835 ;;		__flash_is_busy
 38836 ;;		_spi_tx_tx
 38837 ;; This function is called by:
 38838 ;;		_flash_sector_write
 38839 ;;		_flash_partial_write
 38840 ;; This function uses a non-reentrant model
 38841 ;;
 38842                           
 38843                           	psect	text196
 38844  007D9A                     __ptext196:
 38845                           	opt stack 0
 38846  007D9A                     __flash_write_to_buffer:
 38847                           	opt stack 23
 38848                           
 38849                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 38850                           
 38851                           ;incstack = 0
 38852  007D9A  ECD5  F043         	call	__flash_is_busy	;wreg free
 38853  007D9E  0900               	iorlw	0
 38854  007DA0  A4D8               	btfss	status,2,c
 38855  007DA2  D7FB               	goto	__flash_write_to_buffer
 38856                           
 38857                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 38858  007DA4  501A               	movf	__flash_write_to_buffer@buffer,w,c
 38859  007DA6  A4D8               	btfss	status,2,c
 38860  007DA8  D002               	goto	l1786
 38861                           
 38862                           ;flash.c: 241: command[0] = 0x84;
 38863  007DAA  0E84               	movlw	132
 38864  007DAC  6E1B               	movwf	__flash_write_to_buffer@command,c
 38865  007DAE                     l1786:
 38866                           
 38867                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 38868  007DAE  041A               	decf	__flash_write_to_buffer@buffer,w,c
 38869  007DB0  A4D8               	btfss	status,2,c
 38870  007DB2  D002               	goto	l1787
 38871                           
 38872                           ;flash.c: 243: command[0] = 0x87;
 38873  007DB4  0E87               	movlw	135
 38874  007DB6  6E1B               	movwf	__flash_write_to_buffer@command,c
 38875  007DB8                     l1787:
 38876                           
 38877                           ;flash.c: 245: command[1] = 0x00;
 38878  007DB8  0E00               	movlw	0
 38879  007DBA  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 38880                           
 38881                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 38882  007DBC  5015               	movf	__flash_write_to_buffer@start+1,w,c
 38883  007DBE  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 38884                           
 38885                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 38886  007DC0  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 38887                           
 38888                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 38889  007DC4  0E1B               	movlw	low __flash_write_to_buffer@command
 38890  007DC6  6E01               	movwf	spi_tx_tx@command,c
 38891  007DC8  0E00               	movlw	high __flash_write_to_buffer@command
 38892  007DCA  6E02               	movwf	spi_tx_tx@command+1,c
 38893  007DCC  0E00               	movlw	0
 38894  007DCE  6E04               	movwf	spi_tx_tx@command_length+1,c
 38895  007DD0  0E04               	movlw	4
 38896  007DD2  6E03               	movwf	spi_tx_tx@command_length,c
 38897  007DD4  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 38898  007DD8  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 38899  007DDC  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 38900  007DE0  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 38901  007DE4  ECB2  F036         	call	_spi_tx_tx	;wreg free
 38902  007DE8  0012               	return		;funcret
 38903  007DEA                     __end_of__flash_write_to_buffer:
 38904                           	opt stack 0
 38905                           tosu	equ	0xFFF
 38906                           tosh	equ	0xFFE
 38907                           tosl	equ	0xFFD
 38908                           pclath	equ	0xFFA
 38909                           tblptru	equ	0xFF8
 38910                           tblptrh	equ	0xFF7
 38911                           tblptrl	equ	0xFF6
 38912                           tablat	equ	0xFF5
 38913                           prodh	equ	0xFF4
 38914                           prodl	equ	0xFF3
 38915                           intcon	equ	0xFF2
 38916                           intcon2	equ	0xFF1
 38917                           intcon3	equ	0xFF0
 38918                           indf0	equ	0xFEF
 38919                           postinc0	equ	0xFEE
 38920                           fsr0h	equ	0xFEA
 38921                           fsr0l	equ	0xFE9
 38922                           wreg	equ	0xFE8
 38923                           indf1	equ	0xFE7
 38924                           postdec1	equ	0xFE5
 38925                           plusw1	equ	0xFE3
 38926                           fsr1h	equ	0xFE2
 38927                           fsr1l	equ	0xFE1
 38928                           indf2	equ	0xFDF
 38929                           postinc2	equ	0xFDE
 38930                           postdec2	equ	0xFDD
 38931                           plusw2	equ	0xFDB
 38932                           fsr2h	equ	0xFDA
 38933                           fsr2l	equ	0xFD9
 38934                           status	equ	0xFD8
 38935                           
 38936 ;; *************** function _spi_tx_tx *****************
 38937 ;; Defined at:
 38938 ;;		line 386 in file "spi.c"
 38939 ;; Parameters:    Size  Location     Type
 38940 ;;  command         2    0[COMRAM] PTR unsigned char 
 38941 ;;		 -> _flash_write_to_buffer@command(4), 
 38942 ;;  command_leng    2    2[COMRAM] unsigned int 
 38943 ;;  data            2    4[COMRAM] PTR unsigned char 
 38944 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 38945 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 38946 ;;  data_length     2    6[COMRAM] unsigned int 
 38947 ;; Auto vars:     Size  Location     Type
 38948 ;;		None
 38949 ;; Return value:  Size  Location     Type
 38950 ;;                  1    wreg      void 
 38951 ;; Registers used:
 38952 ;;		wreg, status,2, status,0
 38953 ;; Tracked objects:
 38954 ;;		On entry : 0/0
 38955 ;;		On exit  : 0/0
 38956 ;;		Unchanged: 0/0
 38957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38958 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38961 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38962 ;;Total ram usage:       12 bytes
 38963 ;; Hardware stack levels used:    1
 38964 ;; This function calls:
 38965 ;;		Nothing
 38966 ;; This function is called by:
 38967 ;;		__flash_write_to_buffer
 38968 ;; This function uses a non-reentrant model
 38969 ;;
 38970                           
 38971                           	psect	text197
 38972  006D64                     __ptext197:
 38973                           	opt stack 0
 38974  006D64                     _spi_tx_tx:
 38975                           	opt stack 25
 38976                           
 38977                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 38978                           
 38979                           ;incstack = 0
 38980  006D64  9E88               	bcf	3976,7,c	;volatile
 38981                           
 38982                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 38983  006D66  9C88               	bcf	3976,6,c	;volatile
 38984                           
 38985                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 38986  006D68  8A88               	bsf	3976,5,c	;volatile
 38987                           
 38988                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 38989  006D6A  9888               	bcf	3976,4,c	;volatile
 38990                           
 38991                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 38992  006D6C  9688               	bcf	3976,3,c	;volatile
 38993                           
 38994                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 38995  006D6E  8488               	bsf	3976,2,c	;volatile
 38996                           
 38997                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 38998  006D70  9288               	bcf	3976,1,c	;volatile
 38999                           
 39000                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 39001  006D72  9886               	bcf	3974,4,c	;volatile
 39002  006D74  9A86               	bcf	3974,5,c	;volatile
 39003  006D76  9C86               	bcf	3974,6,c	;volatile
 39004  006D78  9E86               	bcf	3974,7,c	;volatile
 39005                           
 39006                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 39007  006D7A  9086               	bcf	3974,0,c	;volatile
 39008  006D7C  9286               	bcf	3974,1,c	;volatile
 39009  006D7E  9486               	bcf	3974,2,c	;volatile
 39010  006D80  9686               	bcf	3974,3,c	;volatile
 39011                           
 39012                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39013  006D82  5002               	movf	spi_tx_tx@command+1,w,c
 39014  006D84  6E6A               	movwf	3946,c	;volatile
 39015                           
 39016                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39017  006D86  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 39018                           
 39019                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39020  006D8A  0EFF               	movlw	255
 39021  006D8C  6E09               	movwf	??_spi_tx_tx& (0+255),c
 39022  006D8E  0EFF               	movlw	255
 39023  006D90  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 39024  006D92  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 39025  006D96  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 39026  006D9A  5009               	movf	??_spi_tx_tx,w,c
 39027  006D9C  260B               	addwf	??_spi_tx_tx+2,f,c
 39028  006D9E  500A               	movf	??_spi_tx_tx+1,w,c
 39029  006DA0  220C               	addwfc	??_spi_tx_tx+3,f,c
 39030  006DA2  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 39031  006DA6  6A0C               	clrf	??_spi_tx_tx+3,c
 39032  006DA8  500B               	movf	??_spi_tx_tx+2,w,c
 39033  006DAA  6E66               	movwf	3942,c	;volatile
 39034                           
 39035                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39036  006DAC  0403               	decf	spi_tx_tx@command_length,w,c
 39037  006DAE  6E67               	movwf	3943,c	;volatile
 39038                           
 39039                           ;spi.c: 414: LATDbits.LD7 = 0;
 39040  006DB0  9E8C               	bcf	3980,7,c	;volatile
 39041                           
 39042                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 39043  006DB2  8088               	bsf	3976,0,c	;volatile
 39044  006DB4  B088               	btfsc	3976,0,c	;volatile
 39045  006DB6  D7FE               	goto	l2914
 39046                           
 39047                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39048  006DB8  5006               	movf	spi_tx_tx@data+1,w,c
 39049  006DBA  6E6A               	movwf	3946,c	;volatile
 39050                           
 39051                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39052  006DBC  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 39053                           
 39054                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39055  006DC0  0EFF               	movlw	255
 39056  006DC2  6E09               	movwf	??_spi_tx_tx& (0+255),c
 39057  006DC4  0EFF               	movlw	255
 39058  006DC6  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 39059  006DC8  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 39060  006DCC  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 39061  006DD0  5009               	movf	??_spi_tx_tx,w,c
 39062  006DD2  260B               	addwf	??_spi_tx_tx+2,f,c
 39063  006DD4  500A               	movf	??_spi_tx_tx+1,w,c
 39064  006DD6  220C               	addwfc	??_spi_tx_tx+3,f,c
 39065  006DD8  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 39066  006DDC  6A0C               	clrf	??_spi_tx_tx+3,c
 39067  006DDE  500B               	movf	??_spi_tx_tx+2,w,c
 39068  006DE0  6E66               	movwf	3942,c	;volatile
 39069                           
 39070                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39071  006DE2  0407               	decf	spi_tx_tx@data_length,w,c
 39072  006DE4  6E67               	movwf	3943,c	;volatile
 39073                           
 39074                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 39075  006DE6  8088               	bsf	3976,0,c	;volatile
 39076  006DE8  B088               	btfsc	3976,0,c	;volatile
 39077  006DEA  D7FE               	goto	l2917
 39078                           
 39079                           ;spi.c: 433: LATDbits.LD7 = 1;
 39080  006DEC  8E8C               	bsf	3980,7,c	;volatile
 39081  006DEE  0012               	return		;funcret
 39082  006DF0                     __end_of_spi_tx_tx:
 39083                           	opt stack 0
 39084                           tosu	equ	0xFFF
 39085                           tosh	equ	0xFFE
 39086                           tosl	equ	0xFFD
 39087                           pclath	equ	0xFFA
 39088                           tblptru	equ	0xFF8
 39089                           tblptrh	equ	0xFF7
 39090                           tblptrl	equ	0xFF6
 39091                           tablat	equ	0xFF5
 39092                           prodh	equ	0xFF4
 39093                           prodl	equ	0xFF3
 39094                           intcon	equ	0xFF2
 39095                           intcon2	equ	0xFF1
 39096                           intcon3	equ	0xFF0
 39097                           indf0	equ	0xFEF
 39098                           postinc0	equ	0xFEE
 39099                           fsr0h	equ	0xFEA
 39100                           fsr0l	equ	0xFE9
 39101                           wreg	equ	0xFE8
 39102                           indf1	equ	0xFE7
 39103                           postdec1	equ	0xFE5
 39104                           plusw1	equ	0xFE3
 39105                           fsr1h	equ	0xFE2
 39106                           fsr1l	equ	0xFE1
 39107                           indf2	equ	0xFDF
 39108                           postinc2	equ	0xFDE
 39109                           postdec2	equ	0xFDD
 39110                           plusw2	equ	0xFDB
 39111                           fsr2h	equ	0xFDA
 39112                           fsr2l	equ	0xFD9
 39113                           status	equ	0xFD8
 39114                           
 39115 ;; *************** function __flash_write_page_from_buffer *****************
 39116 ;; Defined at:
 39117 ;;		line 254 in file "flash.c"
 39118 ;; Parameters:    Size  Location     Type
 39119 ;;  page            2   19[COMRAM] unsigned int 
 39120 ;;  buffer          1   21[COMRAM] enum E6890
 39121 ;; Auto vars:     Size  Location     Type
 39122 ;;  command         4   25[COMRAM] unsigned char [4]
 39123 ;; Return value:  Size  Location     Type
 39124 ;;                  1    wreg      void 
 39125 ;; Registers used:
 39126 ;;		wreg, status,2, status,0, cstack
 39127 ;; Tracked objects:
 39128 ;;		On entry : 0/0
 39129 ;;		On exit  : 0/0
 39130 ;;		Unchanged: 0/0
 39131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39132 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39135 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39136 ;;Total ram usage:       10 bytes
 39137 ;; Hardware stack levels used:    1
 39138 ;; Hardware stack levels required when called:    3
 39139 ;; This function calls:
 39140 ;;		__flash_is_busy
 39141 ;;		_spi_tx
 39142 ;; This function is called by:
 39143 ;;		_flash_sector_write
 39144 ;;		_flash_partial_write
 39145 ;; This function uses a non-reentrant model
 39146 ;;
 39147                           
 39148                           	psect	text198
 39149  0078F0                     __ptext198:
 39150                           	opt stack 0
 39151  0078F0                     __flash_write_page_from_buffer:
 39152                           	opt stack 23
 39153                           
 39154                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 39155                           
 39156                           ;incstack = 0
 39157  0078F0  ECD5  F043         	call	__flash_is_busy	;wreg free
 39158  0078F4  0900               	iorlw	0
 39159  0078F6  A4D8               	btfss	status,2,c
 39160  0078F8  D7FB               	goto	__flash_write_page_from_buffer
 39161                           
 39162                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 39163  0078FA  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 39164  0078FC  A4D8               	btfss	status,2,c
 39165  0078FE  D002               	goto	l1794
 39166                           
 39167                           ;flash.c: 263: command[0] = 0x83;
 39168  007900  0E83               	movlw	131
 39169  007902  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 39170  007904                     l1794:
 39171                           
 39172                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 39173  007904  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 39174  007906  A4D8               	btfss	status,2,c
 39175  007908  D002               	goto	l1795
 39176                           
 39177                           ;flash.c: 265: command[0] = 0x86;
 39178  00790A  0E86               	movlw	134
 39179  00790C  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 39180  00790E                     l1795:
 39181                           
 39182                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39183  00790E  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 39184  007912  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 39185  007916  0E07               	movlw	7
 39186  007918  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 39187  00791A                     u6985:
 39188  00791A  90D8               	bcf	status,0,c
 39189  00791C  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 39190  00791E  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 39191  007920  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 39192  007922  D7FB               	goto	u6985
 39193  007924  5017               	movf	??__flash_write_page_from_buffer,w,c
 39194  007926  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 39195                           
 39196                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 39197  007928  5014               	movf	__flash_write_page_from_buffer@page,w,c
 39198  00792A  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 39199  00792C  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 39200                           
 39201                           ;flash.c: 269: command[3] = 0x00;
 39202  00792E  0E00               	movlw	0
 39203  007930  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 39204                           
 39205                           ;flash.c: 272: spi_tx(command, 4);
 39206  007932  0E1A               	movlw	low __flash_write_page_from_buffer@command
 39207  007934  6E01               	movwf	spi_tx@data,c
 39208  007936  0E00               	movlw	high __flash_write_page_from_buffer@command
 39209  007938  6E02               	movwf	spi_tx@data+1,c
 39210  00793A  0E00               	movlw	0
 39211  00793C  6E04               	movwf	spi_tx@length+1,c
 39212  00793E  0E04               	movlw	4
 39213  007940  6E03               	movwf	spi_tx@length,c
 39214  007942  ECD0  F03C         	call	_spi_tx	;wreg free
 39215  007946  0012               	return		;funcret
 39216  007948                     __end_of__flash_write_page_from_buffer:
 39217                           	opt stack 0
 39218                           tosu	equ	0xFFF
 39219                           tosh	equ	0xFFE
 39220                           tosl	equ	0xFFD
 39221                           pclath	equ	0xFFA
 39222                           tblptru	equ	0xFF8
 39223                           tblptrh	equ	0xFF7
 39224                           tblptrl	equ	0xFF6
 39225                           tablat	equ	0xFF5
 39226                           prodh	equ	0xFF4
 39227                           prodl	equ	0xFF3
 39228                           intcon	equ	0xFF2
 39229                           intcon2	equ	0xFF1
 39230                           intcon3	equ	0xFF0
 39231                           indf0	equ	0xFEF
 39232                           postinc0	equ	0xFEE
 39233                           fsr0h	equ	0xFEA
 39234                           fsr0l	equ	0xFE9
 39235                           wreg	equ	0xFE8
 39236                           indf1	equ	0xFE7
 39237                           postdec1	equ	0xFE5
 39238                           plusw1	equ	0xFE3
 39239                           fsr1h	equ	0xFE2
 39240                           fsr1l	equ	0xFE1
 39241                           indf2	equ	0xFDF
 39242                           postinc2	equ	0xFDE
 39243                           postdec2	equ	0xFDD
 39244                           plusw2	equ	0xFDB
 39245                           fsr2h	equ	0xFDA
 39246                           fsr2l	equ	0xFD9
 39247                           status	equ	0xFD8
 39248                           
 39249 ;; *************** function __flash_copy_page_to_buffer *****************
 39250 ;; Defined at:
 39251 ;;		line 150 in file "flash.c"
 39252 ;; Parameters:    Size  Location     Type
 39253 ;;  page            2   19[COMRAM] unsigned int 
 39254 ;;  buffer          1   21[COMRAM] enum E6890
 39255 ;; Auto vars:     Size  Location     Type
 39256 ;;  command         4   25[COMRAM] unsigned char [4]
 39257 ;; Return value:  Size  Location     Type
 39258 ;;                  1    wreg      void 
 39259 ;; Registers used:
 39260 ;;		wreg, status,2, status,0, cstack
 39261 ;; Tracked objects:
 39262 ;;		On entry : 0/0
 39263 ;;		On exit  : 0/0
 39264 ;;		Unchanged: 0/0
 39265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39266 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39267 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39268 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39269 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39270 ;;Total ram usage:       10 bytes
 39271 ;; Hardware stack levels used:    1
 39272 ;; Hardware stack levels required when called:    3
 39273 ;; This function calls:
 39274 ;;		__flash_is_busy
 39275 ;;		_spi_tx
 39276 ;; This function is called by:
 39277 ;;		_flash_partial_write
 39278 ;; This function uses a non-reentrant model
 39279 ;;
 39280                           
 39281                           	psect	text199
 39282  007948                     __ptext199:
 39283                           	opt stack 0
 39284  007948                     __flash_copy_page_to_buffer:
 39285                           	opt stack 21
 39286                           
 39287                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 39288                           
 39289                           ;incstack = 0
 39290  007948  ECD5  F043         	call	__flash_is_busy	;wreg free
 39291  00794C  0900               	iorlw	0
 39292  00794E  A4D8               	btfss	status,2,c
 39293  007950  D7FB               	goto	__flash_copy_page_to_buffer
 39294                           
 39295                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 39296  007952  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 39297  007954  A4D8               	btfss	status,2,c
 39298  007956  D002               	goto	l1759
 39299                           
 39300                           ;flash.c: 159: command[0] = 0x53;
 39301  007958  0E53               	movlw	83
 39302  00795A  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 39303  00795C                     l1759:
 39304                           
 39305                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 39306  00795C  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 39307  00795E  A4D8               	btfss	status,2,c
 39308  007960  D002               	goto	l1760
 39309                           
 39310                           ;flash.c: 161: command[0] = 0x55;
 39311  007962  0E55               	movlw	85
 39312  007964  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 39313  007966                     l1760:
 39314                           
 39315                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39316  007966  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 39317  00796A  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 39318  00796E  0E07               	movlw	7
 39319  007970  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 39320  007972                     u6855:
 39321  007972  90D8               	bcf	status,0,c
 39322  007974  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 39323  007976  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 39324  007978  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 39325  00797A  D7FB               	goto	u6855
 39326  00797C  5017               	movf	??__flash_copy_page_to_buffer,w,c
 39327  00797E  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 39328                           
 39329                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 39330  007980  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 39331  007982  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 39332  007984  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 39333                           
 39334                           ;flash.c: 165: command[3] = 0x00;
 39335  007986  0E00               	movlw	0
 39336  007988  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 39337                           
 39338                           ;flash.c: 168: spi_tx(command, 4);
 39339  00798A  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 39340  00798C  6E01               	movwf	spi_tx@data,c
 39341  00798E  0E00               	movlw	high __flash_copy_page_to_buffer@command
 39342  007990  6E02               	movwf	spi_tx@data+1,c
 39343  007992  0E00               	movlw	0
 39344  007994  6E04               	movwf	spi_tx@length+1,c
 39345  007996  0E04               	movlw	4
 39346  007998  6E03               	movwf	spi_tx@length,c
 39347  00799A  ECD0  F03C         	call	_spi_tx	;wreg free
 39348  00799E  0012               	return		;funcret
 39349  0079A0                     __end_of__flash_copy_page_to_buffer:
 39350                           	opt stack 0
 39351                           tosu	equ	0xFFF
 39352                           tosh	equ	0xFFE
 39353                           tosl	equ	0xFFD
 39354                           pclath	equ	0xFFA
 39355                           tblptru	equ	0xFF8
 39356                           tblptrh	equ	0xFF7
 39357                           tblptrl	equ	0xFF6
 39358                           tablat	equ	0xFF5
 39359                           prodh	equ	0xFF4
 39360                           prodl	equ	0xFF3
 39361                           intcon	equ	0xFF2
 39362                           intcon2	equ	0xFF1
 39363                           intcon3	equ	0xFF0
 39364                           indf0	equ	0xFEF
 39365                           postinc0	equ	0xFEE
 39366                           fsr0h	equ	0xFEA
 39367                           fsr0l	equ	0xFE9
 39368                           wreg	equ	0xFE8
 39369                           indf1	equ	0xFE7
 39370                           postdec1	equ	0xFE5
 39371                           plusw1	equ	0xFE3
 39372                           fsr1h	equ	0xFE2
 39373                           fsr1l	equ	0xFE1
 39374                           indf2	equ	0xFDF
 39375                           postinc2	equ	0xFDE
 39376                           postdec2	equ	0xFDD
 39377                           plusw2	equ	0xFDB
 39378                           fsr2h	equ	0xFDA
 39379                           fsr2l	equ	0xFD9
 39380                           status	equ	0xFD8
 39381                           
 39382 ;; *************** function __flash_compare_page_to_buffer *****************
 39383 ;; Defined at:
 39384 ;;		line 172 in file "flash.c"
 39385 ;; Parameters:    Size  Location     Type
 39386 ;;  page            2   19[COMRAM] unsigned int 
 39387 ;;  buffer          1   21[COMRAM] enum E6890
 39388 ;; Auto vars:     Size  Location     Type
 39389 ;;  command         4   27[COMRAM] unsigned char [4]
 39390 ;;  status          2   25[COMRAM] unsigned int 
 39391 ;; Return value:  Size  Location     Type
 39392 ;;                  1    wreg      enum E6894
 39393 ;; Registers used:
 39394 ;;		wreg, status,2, status,0, cstack
 39395 ;; Tracked objects:
 39396 ;;		On entry : 0/0
 39397 ;;		On exit  : 0/0
 39398 ;;		Unchanged: 0/0
 39399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39400 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39401 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39402 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39403 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39404 ;;Total ram usage:       12 bytes
 39405 ;; Hardware stack levels used:    1
 39406 ;; Hardware stack levels required when called:    3
 39407 ;; This function calls:
 39408 ;;		__flash_get_status
 39409 ;;		__flash_is_busy
 39410 ;;		_spi_tx
 39411 ;; This function is called by:
 39412 ;;		_flash_sector_write
 39413 ;;		_flash_partial_write
 39414 ;; This function uses a non-reentrant model
 39415 ;;
 39416                           
 39417                           	psect	text200
 39418  007072                     __ptext200:
 39419                           	opt stack 0
 39420  007072                     __flash_compare_page_to_buffer:
 39421                           	opt stack 23
 39422                           
 39423                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 39424                           
 39425                           ;incstack = 0
 39426  007072  ECD5  F043         	call	__flash_is_busy	;wreg free
 39427  007076  0900               	iorlw	0
 39428  007078  A4D8               	btfss	status,2,c
 39429  00707A  D7FB               	goto	__flash_compare_page_to_buffer
 39430                           
 39431                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 39432  00707C  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 39433  00707E  A4D8               	btfss	status,2,c
 39434  007080  D002               	goto	l1767
 39435                           
 39436                           ;flash.c: 182: command[0] = 0x60;
 39437  007082  0E60               	movlw	96
 39438  007084  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 39439  007086                     l1767:
 39440                           
 39441                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 39442  007086  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 39443  007088  A4D8               	btfss	status,2,c
 39444  00708A  D002               	goto	l1768
 39445                           
 39446                           ;flash.c: 184: command[0] = 0x60;
 39447  00708C  0E60               	movlw	96
 39448  00708E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 39449  007090                     l1768:
 39450                           
 39451                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39452  007090  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 39453  007094  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 39454  007098  0E07               	movlw	7
 39455  00709A  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 39456  00709C                     u6895:
 39457  00709C  90D8               	bcf	status,0,c
 39458  00709E  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 39459  0070A0  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 39460  0070A2  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 39461  0070A4  D7FB               	goto	u6895
 39462  0070A6  5017               	movf	??__flash_compare_page_to_buffer,w,c
 39463  0070A8  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 39464                           
 39465                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 39466  0070AA  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 39467  0070AC  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 39468  0070AE  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 39469                           
 39470                           ;flash.c: 188: command[3] = 0x00;
 39471  0070B0  0E00               	movlw	0
 39472  0070B2  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 39473                           
 39474                           ;flash.c: 191: spi_tx(command, 4);
 39475  0070B4  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 39476  0070B6  6E01               	movwf	spi_tx@data,c
 39477  0070B8  0E00               	movlw	high __flash_compare_page_to_buffer@command
 39478  0070BA  6E02               	movwf	spi_tx@data+1,c
 39479  0070BC  0E00               	movlw	0
 39480  0070BE  6E04               	movwf	spi_tx@length+1,c
 39481  0070C0  0E04               	movlw	4
 39482  0070C2  6E03               	movwf	spi_tx@length,c
 39483  0070C4  ECD0  F03C         	call	_spi_tx	;wreg free
 39484  0070C8  ECD5  F043         	call	__flash_is_busy	;wreg free
 39485  0070CC  0900               	iorlw	0
 39486  0070CE  A4D8               	btfss	status,2,c
 39487  0070D0  D7FB               	goto	l1770
 39488                           
 39489                           ;flash.c: 197: status = _flash_get_status();
 39490  0070D2  EC2B  F042         	call	__flash_get_status	;wreg free
 39491  0070D6  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 39492  0070DA  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 39493                           
 39494                           ;flash.c: 200: if(status & 0b0000000001000000)
 39495  0070DE  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 39496  0070E0  D002               	goto	l1772
 39497                           
 39498                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 39499  0070E2  0E01               	movlw	1
 39500                           
 39501                           ;flash.c: 204: }
 39502  0070E4  0012               	return	
 39503  0070E6                     l1772:
 39504                           
 39505                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 39506  0070E6  0E00               	movlw	0
 39507  0070E8  0012               	return	
 39508  0070EA                     __end_of__flash_compare_page_to_buffer:
 39509                           	opt stack 0
 39510                           tosu	equ	0xFFF
 39511                           tosh	equ	0xFFE
 39512                           tosl	equ	0xFFD
 39513                           pclath	equ	0xFFA
 39514                           tblptru	equ	0xFF8
 39515                           tblptrh	equ	0xFF7
 39516                           tblptrl	equ	0xFF6
 39517                           tablat	equ	0xFF5
 39518                           prodh	equ	0xFF4
 39519                           prodl	equ	0xFF3
 39520                           intcon	equ	0xFF2
 39521                           intcon2	equ	0xFF1
 39522                           intcon3	equ	0xFF0
 39523                           indf0	equ	0xFEF
 39524                           postinc0	equ	0xFEE
 39525                           fsr0h	equ	0xFEA
 39526                           fsr0l	equ	0xFE9
 39527                           wreg	equ	0xFE8
 39528                           indf1	equ	0xFE7
 39529                           postdec1	equ	0xFE5
 39530                           plusw1	equ	0xFE3
 39531                           fsr1h	equ	0xFE2
 39532                           fsr1l	equ	0xFE1
 39533                           indf2	equ	0xFDF
 39534                           postinc2	equ	0xFDE
 39535                           postdec2	equ	0xFDD
 39536                           plusw2	equ	0xFDB
 39537                           fsr2h	equ	0xFDA
 39538                           fsr2l	equ	0xFD9
 39539                           status	equ	0xFD8
 39540                           
 39541 ;; *************** function _fat_get_file_information *****************
 39542 ;; Defined at:
 39543 ;;		line 1314 in file "fat16.c"
 39544 ;; Parameters:    Size  Location     Type
 39545 ;;  file_number     1    wreg     unsigned char 
 39546 ;;  data            2   47[COMRAM] PTR struct .
 39547 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 39548 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), RAM(3759), 
 39549 ;; Auto vars:     Size  Location     Type
 39550 ;;  file_number     1   54[COMRAM] unsigned char 
 39551 ;;  offset          2   52[COMRAM] unsigned int 
 39552 ;;  root_sector     2   50[COMRAM] unsigned int 
 39553 ;; Return value:  Size  Location     Type
 39554 ;;                  1    wreg      unsigned char 
 39555 ;; Registers used:
 39556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39557 ;; Tracked objects:
 39558 ;;		On entry : 0/0
 39559 ;;		On exit  : 0/0
 39560 ;;		Unchanged: 0/0
 39561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39563 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39565 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39566 ;;Total ram usage:        8 bytes
 39567 ;; Hardware stack levels used:    1
 39568 ;; Hardware stack levels required when called:    5
 39569 ;; This function calls:
 39570 ;;		__offset_from_file_number
 39571 ;;		__sector_from_file_number
 39572 ;;		_flash_partial_read
 39573 ;; This function is called by:
 39574 ;;		_fat_rename_file
 39575 ;;		_fat_read_from_file
 39576 ;;		_fat_resize_file
 39577 ;;		_fat_modify_file
 39578 ;;		__bootloader_verify_file
 39579 ;;		__bootloader_program
 39580 ;;		__fill_buffer_get_file_details
 39581 ;; This function uses a non-reentrant model
 39582 ;;
 39583                           
 39584                           	psect	text201
 39585  0071D4                     __ptext201:
 39586                           	opt stack 0
 39587  0071D4                     _fat_get_file_information:
 39588                           	opt stack 23
 39589                           
 39590                           ;incstack = 0
 39591                           ;fat_get_file_information@file_number stored from wreg
 39592  0071D4  6E37               	movwf	fat_get_file_information@file_number,c
 39593                           
 39594                           ;fat16.c: 1316: uint16_t root_sector;;fat16.c: 1317: uint16_t offset;;fat16.c: 1319: if(
      +                          file_number>=64)
 39595  0071D6  0E3F               	movlw	63
 39596  0071D8  6437               	cpfsgt	fat_get_file_information@file_number,c
 39597  0071DA  D002               	goto	l2254
 39598                           
 39599                           ;fat16.c: 1320: {;fat16.c: 1322: return 0x01;
 39600  0071DC  0E01               	movlw	1
 39601  0071DE  0012               	return	
 39602  0071E0                     l2254:
 39603                           
 39604                           ;fat16.c: 1323: };fat16.c: 1326: root_sector = _sector_from_file_number(file_number);
 39605  0071E0  5037               	movf	fat_get_file_information@file_number,w,c
 39606  0071E2  ECCB  F042         	call	__sector_from_file_number
 39607  0071E6  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 39608  0071EA  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 39609                           
 39610                           ;fat16.c: 1327: offset = _offset_from_file_number(file_number);
 39611  0071EE  5037               	movf	fat_get_file_information@file_number,w,c
 39612  0071F0  EC57  F043         	call	__offset_from_file_number
 39613  0071F4  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 39614  0071F8  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 39615                           
 39616                           ;fat16.c: 1330: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 39617  0071FC  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 39618  007200  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 39619  007204  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 39620  007208  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 39621  00720C  0E00               	movlw	0
 39622  00720E  6E2D               	movwf	flash_partial_read@length+1,c
 39623  007210  0E20               	movlw	32
 39624  007212  6E2C               	movwf	flash_partial_read@length,c
 39625  007214  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 39626  007218  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 39627  00721C  EC12  F042         	call	_flash_partial_read	;wreg free
 39628                           
 39629                           ;fat16.c: 1333: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 39630  007220  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 39631  007224  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 39632  007228  50DF               	movf	indf2,w,c
 39633  00722A  B4D8               	btfsc	status,2,c
 39634  00722C  D008               	goto	u8110
 39635  00722E  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 39636  007232  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 39637  007236  0EE5               	movlw	229
 39638  007238  18DE               	xorwf	postinc2,w,c
 39639  00723A  A4D8               	btfss	status,2,c
 39640  00723C  D002               	goto	l2256
 39641  00723E                     u8110:
 39642                           
 39643                           ;fat16.c: 1334: {;fat16.c: 1336: return 0x02;
 39644  00723E  0E02               	movlw	2
 39645  007240  0012               	return	
 39646  007242                     l2256:
 39647                           
 39648                           ;fat16.c: 1337: };fat16.c: 1340: return 0x00;
 39649  007242  0E00               	movlw	0
 39650  007244  0012               	return	
 39651  007246                     __end_of_fat_get_file_information:
 39652                           	opt stack 0
 39653                           tosu	equ	0xFFF
 39654                           tosh	equ	0xFFE
 39655                           tosl	equ	0xFFD
 39656                           pclath	equ	0xFFA
 39657                           tblptru	equ	0xFF8
 39658                           tblptrh	equ	0xFF7
 39659                           tblptrl	equ	0xFF6
 39660                           tablat	equ	0xFF5
 39661                           prodh	equ	0xFF4
 39662                           prodl	equ	0xFF3
 39663                           intcon	equ	0xFF2
 39664                           intcon2	equ	0xFF1
 39665                           intcon3	equ	0xFF0
 39666                           indf0	equ	0xFEF
 39667                           postinc0	equ	0xFEE
 39668                           fsr0h	equ	0xFEA
 39669                           fsr0l	equ	0xFE9
 39670                           wreg	equ	0xFE8
 39671                           indf1	equ	0xFE7
 39672                           postdec1	equ	0xFE5
 39673                           plusw1	equ	0xFE3
 39674                           fsr1h	equ	0xFE2
 39675                           fsr1l	equ	0xFE1
 39676                           indf2	equ	0xFDF
 39677                           postinc2	equ	0xFDE
 39678                           postdec2	equ	0xFDD
 39679                           plusw2	equ	0xFDB
 39680                           fsr2h	equ	0xFDA
 39681                           fsr2l	equ	0xFD9
 39682                           status	equ	0xFD8
 39683                           
 39684 ;; *************** function __find_nth_cluster *****************
 39685 ;; Defined at:
 39686 ;;		line 182 in file "fat16.c"
 39687 ;; Parameters:    Size  Location     Type
 39688 ;;  cluster         2   55[COMRAM] unsigned int 
 39689 ;;  n               2   57[COMRAM] unsigned int 
 39690 ;; Auto vars:     Size  Location     Type
 39691 ;;  sector          2   63[COMRAM] unsigned int 
 39692 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 39693 ;;  offset          2   59[COMRAM] unsigned int 
 39694 ;; Return value:  Size  Location     Type
 39695 ;;                  2   55[COMRAM] unsigned int 
 39696 ;; Registers used:
 39697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39698 ;; Tracked objects:
 39699 ;;		On entry : 0/0
 39700 ;;		On exit  : 0/0
 39701 ;;		Unchanged: 0/0
 39702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39704 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39706 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39707 ;;Total ram usage:       10 bytes
 39708 ;; Hardware stack levels used:    1
 39709 ;; Hardware stack levels required when called:    6
 39710 ;; This function calls:
 39711 ;;		__data_sector_from_cluster
 39712 ;;		__fat_offset_from_cluster
 39713 ;;		__read_fat
 39714 ;;		__read_value_from_offset
 39715 ;;		_flash_sector_read
 39716 ;; This function is called by:
 39717 ;;		_fat_read_from_file_fast
 39718 ;;		_fat_modify_file
 39719 ;; This function uses a non-reentrant model
 39720 ;;
 39721                           
 39722                           	psect	text202
 39723  006824                     __ptext202:
 39724                           	opt stack 0
 39725  006824                     __find_nth_cluster:
 39726                           	opt stack 21
 39727                           
 39728                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 39729                           
 39730                           ;incstack = 0
 39731  006824  0E00               	movlw	0
 39732  006826  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 39733  006828  0E00               	movlw	0
 39734  00682A  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 39735                           
 39736                           ;fat16.c: 189: if(n==1)
 39737  00682C  043A               	decf	__find_nth_cluster@n,w,c
 39738  00682E  103B               	iorwf	__find_nth_cluster@n+1,w,c
 39739  006830  A4D8               	btfss	status,2,c
 39740  006832  D03E               	goto	l1956
 39741                           
 39742                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 39743  006834  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 39744  006838  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 39745  00683C  ECD3  F03D         	call	__read_fat	;wreg free
 39746  006840  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 39747  006844  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 39748  006848  0012               	return	
 39749  00684A                     
 39750                           ;fat16.c: 195: {;fat16.c: 197: sector = _data_sector_from_cluster(cluster);
 39751  00684A  C038  F001         	movff	__find_nth_cluster@cluster,__data_sector_from_cluster@fat_cluster
 39752  00684E  C039  F002         	movff	__find_nth_cluster@cluster+1,__data_sector_from_cluster@fat_cluster+1
 39753  006852  ECDB  F044         	call	__data_sector_from_cluster	;wreg free
 39754  006856  C001  F040         	movff	?__data_sector_from_cluster,__find_nth_cluster@sector
 39755  00685A  C002  F041         	movff	?__data_sector_from_cluster+1,__find_nth_cluster@sector+1
 39756                           
 39757                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 39758  00685E  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 39759  006862  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 39760  006866  EC61  F044         	call	__fat_offset_from_cluster	;wreg free
 39761  00686A  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 39762  00686E  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 39763                           
 39764                           ;fat16.c: 201: if(sector != sector_in_buffer)
 39765  006872  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 39766  006874  1840               	xorwf	__find_nth_cluster@sector,w,c
 39767  006876  E104               	bnz	u7810
 39768  006878  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 39769  00687A  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 39770  00687C  B4D8               	btfsc	status,2,c
 39771  00687E  D00A               	goto	l1958
 39772  006880                     u7810:
 39773                           
 39774                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 39775  006880  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 39776  006884  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 39777  006888  0EC0               	movlw	low _buffer
 39778  00688A  6E2A               	movwf	flash_sector_read@data,c
 39779  00688C  0E03               	movlw	high _buffer
 39780  00688E  6E2B               	movwf	flash_sector_read@data+1,c
 39781  006890  ECF9  F041         	call	_flash_sector_read	;wreg free
 39782  006894                     l1958:
 39783                           
 39784                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 39785  006894  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 39786  006898  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 39787  00689C  0EC0               	movlw	low _buffer
 39788  00689E  6E03               	movwf	__read_value_from_offset@buffer,c
 39789  0068A0  0E03               	movlw	high _buffer
 39790  0068A2  6E04               	movwf	__read_value_from_offset@buffer+1,c
 39791  0068A4  EC87  F03F         	call	__read_value_from_offset	;wreg free
 39792  0068A8  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 39793  0068AC  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 39794  0068B0                     l1956:
 39795  0068B0  503A               	movf	__find_nth_cluster@n,w,c
 39796  0068B2  103B               	iorwf	__find_nth_cluster@n+1,w,c
 39797  0068B4  A4D8               	btfss	status,2,c
 39798  0068B6  D7C9               	goto	l1957
 39799                           
 39800                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 39801  0068B8  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 39802  0068BC  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 39803  0068C0  0012               	return		;funcret
 39804  0068C2                     __end_of__find_nth_cluster:
 39805                           	opt stack 0
 39806                           tosu	equ	0xFFF
 39807                           tosh	equ	0xFFE
 39808                           tosl	equ	0xFFD
 39809                           pclath	equ	0xFFA
 39810                           tblptru	equ	0xFF8
 39811                           tblptrh	equ	0xFF7
 39812                           tblptrl	equ	0xFF6
 39813                           tablat	equ	0xFF5
 39814                           prodh	equ	0xFF4
 39815                           prodl	equ	0xFF3
 39816                           intcon	equ	0xFF2
 39817                           intcon2	equ	0xFF1
 39818                           intcon3	equ	0xFF0
 39819                           indf0	equ	0xFEF
 39820                           postinc0	equ	0xFEE
 39821                           fsr0h	equ	0xFEA
 39822                           fsr0l	equ	0xFE9
 39823                           wreg	equ	0xFE8
 39824                           indf1	equ	0xFE7
 39825                           postdec1	equ	0xFE5
 39826                           plusw1	equ	0xFE3
 39827                           fsr1h	equ	0xFE2
 39828                           fsr1l	equ	0xFE1
 39829                           indf2	equ	0xFDF
 39830                           postinc2	equ	0xFDE
 39831                           postdec2	equ	0xFDD
 39832                           plusw2	equ	0xFDB
 39833                           fsr2h	equ	0xFDA
 39834                           fsr2l	equ	0xFD9
 39835                           status	equ	0xFD8
 39836                           
 39837 ;; *************** function _flash_sector_read *****************
 39838 ;; Defined at:
 39839 ;;		line 419 in file "flash.c"
 39840 ;; Parameters:    Size  Location     Type
 39841 ;;  page            2   39[COMRAM] unsigned int 
 39842 ;;  data            2   41[COMRAM] PTR unsigned char 
 39843 ;;		 -> buffer(512), msd_buffer(512), 
 39844 ;; Auto vars:     Size  Location     Type
 39845 ;;		None
 39846 ;; Return value:  Size  Location     Type
 39847 ;;                  1    wreg      void 
 39848 ;; Registers used:
 39849 ;;		wreg, status,2, status,0, cstack
 39850 ;; Tracked objects:
 39851 ;;		On entry : 0/0
 39852 ;;		On exit  : 0/0
 39853 ;;		Unchanged: 0/0
 39854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39859 ;;Total ram usage:        4 bytes
 39860 ;; Hardware stack levels used:    1
 39861 ;; Hardware stack levels required when called:    4
 39862 ;; This function calls:
 39863 ;;		__flash_partial_read
 39864 ;;		_spi_set_configuration
 39865 ;; This function is called by:
 39866 ;;		_ExternalFlash_SectorRead
 39867 ;;		__get_available_cluster
 39868 ;;		__find_nth_cluster
 39869 ;;		__make_cluster_chain
 39870 ;;		_fat_find_file
 39871 ;;		_fat_get_format_status
 39872 ;; This function uses a non-reentrant model
 39873 ;;
 39874                           
 39875                           	psect	text203
 39876  0083F2                     __ptext203:
 39877                           	opt stack 0
 39878  0083F2                     _flash_sector_read:
 39879                           	opt stack 23
 39880                           
 39881                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 39882                           
 39883                           ;incstack = 0
 39884  0083F2  0E00               	movlw	0
 39885  0083F4  EC43  F023         	call	_spi_set_configuration
 39886                           
 39887                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 39888  0083F8  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 39889  0083FC  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 39890  008400  0E00               	movlw	0
 39891  008402  6E17               	movwf	__flash_partial_read@start+1,c
 39892  008404  0E00               	movlw	0
 39893  008406  6E16               	movwf	__flash_partial_read@start,c
 39894  008408  0E02               	movlw	2
 39895  00840A  6E19               	movwf	__flash_partial_read@length+1,c
 39896  00840C  0E00               	movlw	0
 39897  00840E  6E18               	movwf	__flash_partial_read@length,c
 39898  008410  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 39899  008414  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 39900  008418  EC75  F038         	call	__flash_partial_read	;wreg free
 39901                           
 39902                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 39903  00841C  0E01               	movlw	1
 39904  00841E  EC43  F023         	call	_spi_set_configuration
 39905  008422  0012               	return		;funcret
 39906  008424                     __end_of_flash_sector_read:
 39907                           	opt stack 0
 39908                           tosu	equ	0xFFF
 39909                           tosh	equ	0xFFE
 39910                           tosl	equ	0xFFD
 39911                           pclath	equ	0xFFA
 39912                           tblptru	equ	0xFF8
 39913                           tblptrh	equ	0xFF7
 39914                           tblptrl	equ	0xFF6
 39915                           tablat	equ	0xFF5
 39916                           prodh	equ	0xFF4
 39917                           prodl	equ	0xFF3
 39918                           intcon	equ	0xFF2
 39919                           intcon2	equ	0xFF1
 39920                           intcon3	equ	0xFF0
 39921                           indf0	equ	0xFEF
 39922                           postinc0	equ	0xFEE
 39923                           fsr0h	equ	0xFEA
 39924                           fsr0l	equ	0xFE9
 39925                           wreg	equ	0xFE8
 39926                           indf1	equ	0xFE7
 39927                           postdec1	equ	0xFE5
 39928                           plusw1	equ	0xFE3
 39929                           fsr1h	equ	0xFE2
 39930                           fsr1l	equ	0xFE1
 39931                           indf2	equ	0xFDF
 39932                           postinc2	equ	0xFDE
 39933                           postdec2	equ	0xFDD
 39934                           plusw2	equ	0xFDB
 39935                           fsr2h	equ	0xFDA
 39936                           fsr2l	equ	0xFD9
 39937                           status	equ	0xFD8
 39938                           
 39939 ;; *************** function __read_value_from_offset *****************
 39940 ;; Defined at:
 39941 ;;		line 114 in file "fat16.c"
 39942 ;; Parameters:    Size  Location     Type
 39943 ;;  offset          2    0[COMRAM] unsigned int 
 39944 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 39945 ;;		 -> buffer(512), 
 39946 ;; Auto vars:     Size  Location     Type
 39947 ;;  value           2    7[COMRAM] unsigned int 
 39948 ;; Return value:  Size  Location     Type
 39949 ;;                  2    0[COMRAM] unsigned int 
 39950 ;; Registers used:
 39951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39952 ;; Tracked objects:
 39953 ;;		On entry : 0/0
 39954 ;;		On exit  : 0/0
 39955 ;;		Unchanged: 0/0
 39956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39960 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39961 ;;Total ram usage:        9 bytes
 39962 ;; Hardware stack levels used:    1
 39963 ;; This function calls:
 39964 ;;		Nothing
 39965 ;; This function is called by:
 39966 ;;		__find_nth_cluster
 39967 ;;		__make_cluster_chain
 39968 ;; This function uses a non-reentrant model
 39969 ;;
 39970                           
 39971                           	psect	text204
 39972  007F0E                     __ptext204:
 39973                           	opt stack 0
 39974  007F0E                     __read_value_from_offset:
 39975                           	opt stack 26
 39976                           
 39977                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset + 1];
 39978                           
 39979                           ;incstack = 0
 39980  007F0E  0E01               	movlw	1
 39981  007F10  2401               	addwf	__read_value_from_offset@offset,w,c
 39982  007F12  6E05               	movwf	??__read_value_from_offset& (0+255),c
 39983  007F14  0E00               	movlw	0
 39984  007F16  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 39985  007F18  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 39986  007F1A  5005               	movf	??__read_value_from_offset,w,c
 39987  007F1C  2403               	addwf	__read_value_from_offset@buffer,w,c
 39988  007F1E  6ED9               	movwf	fsr2l,c
 39989  007F20  5006               	movf	??__read_value_from_offset+1,w,c
 39990  007F22  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 39991  007F24  6EDA               	movwf	fsr2h,c
 39992  007F26  50DF               	movf	indf2,w,c
 39993  007F28  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 39994  007F2A  5007               	movf	??__read_value_from_offset+2,w,c
 39995  007F2C  6E08               	movwf	__read_value_from_offset@value,c
 39996  007F2E  6A09               	clrf	__read_value_from_offset@value+1,c
 39997                           
 39998                           ;fat16.c: 118: value <<= 8;
 39999  007F30  5008               	movf	__read_value_from_offset@value,w,c
 40000  007F32  6E09               	movwf	__read_value_from_offset@value+1,c
 40001  007F34  6A08               	clrf	__read_value_from_offset@value,c
 40002                           
 40003                           ;fat16.c: 119: value |= buffer[offset];
 40004  007F36  5001               	movf	__read_value_from_offset@offset,w,c
 40005  007F38  2403               	addwf	__read_value_from_offset@buffer,w,c
 40006  007F3A  6ED9               	movwf	fsr2l,c
 40007  007F3C  5002               	movf	__read_value_from_offset@offset+1,w,c
 40008  007F3E  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 40009  007F40  6EDA               	movwf	fsr2h,c
 40010  007F42  50DF               	movf	indf2,w,c
 40011  007F44  6E05               	movwf	??__read_value_from_offset& (0+255),c
 40012  007F46  5005               	movf	??__read_value_from_offset,w,c
 40013  007F48  1208               	iorwf	__read_value_from_offset@value,f,c
 40014                           
 40015                           ;fat16.c: 120: return value;
 40016  007F4A  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 40017  007F4E  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 40018  007F52  0012               	return	
 40019  007F54                     __end_of__read_value_from_offset:
 40020                           	opt stack 0
 40021                           tosu	equ	0xFFF
 40022                           tosh	equ	0xFFE
 40023                           tosl	equ	0xFFD
 40024                           pclath	equ	0xFFA
 40025                           tblptru	equ	0xFF8
 40026                           tblptrh	equ	0xFF7
 40027                           tblptrl	equ	0xFF6
 40028                           tablat	equ	0xFF5
 40029                           prodh	equ	0xFF4
 40030                           prodl	equ	0xFF3
 40031                           intcon	equ	0xFF2
 40032                           intcon2	equ	0xFF1
 40033                           intcon3	equ	0xFF0
 40034                           indf0	equ	0xFEF
 40035                           postinc0	equ	0xFEE
 40036                           fsr0h	equ	0xFEA
 40037                           fsr0l	equ	0xFE9
 40038                           wreg	equ	0xFE8
 40039                           indf1	equ	0xFE7
 40040                           postdec1	equ	0xFE5
 40041                           plusw1	equ	0xFE3
 40042                           fsr1h	equ	0xFE2
 40043                           fsr1l	equ	0xFE1
 40044                           indf2	equ	0xFDF
 40045                           postinc2	equ	0xFDE
 40046                           postdec2	equ	0xFDD
 40047                           plusw2	equ	0xFDB
 40048                           fsr2h	equ	0xFDA
 40049                           fsr2l	equ	0xFD9
 40050                           status	equ	0xFD8
 40051                           
 40052 ;; *************** function __read_fat *****************
 40053 ;; Defined at:
 40054 ;;		line 442 in file "fat16.c"
 40055 ;; Parameters:    Size  Location     Type
 40056 ;;  cluster         2   47[COMRAM] unsigned int 
 40057 ;; Auto vars:     Size  Location     Type
 40058 ;;  value           2   53[COMRAM] unsigned int 
 40059 ;;  offset          2   51[COMRAM] unsigned int 
 40060 ;;  sector          2   49[COMRAM] unsigned int 
 40061 ;; Return value:  Size  Location     Type
 40062 ;;                  2   47[COMRAM] unsigned int 
 40063 ;; Registers used:
 40064 ;;		wreg, status,2, status,0, cstack
 40065 ;; Tracked objects:
 40066 ;;		On entry : 0/0
 40067 ;;		On exit  : 0/0
 40068 ;;		Unchanged: 0/0
 40069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40071 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40073 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40074 ;;Total ram usage:        8 bytes
 40075 ;; Hardware stack levels used:    1
 40076 ;; Hardware stack levels required when called:    5
 40077 ;; This function calls:
 40078 ;;		__fat_offset_from_cluster
 40079 ;;		__fat_sector_from_cluster
 40080 ;;		_flash_partial_read
 40081 ;; This function is called by:
 40082 ;;		__find_nth_cluster
 40083 ;;		_fat_read_from_file_fast
 40084 ;;		_fat_modify_file
 40085 ;; This function uses a non-reentrant model
 40086 ;;
 40087                           
 40088                           	psect	text205
 40089  007BA6                     __ptext205:
 40090                           	opt stack 0
 40091  007BA6                     __read_fat:
 40092                           	opt stack 22
 40093                           
 40094                           ;fat16.c: 444: uint16_t sector;;fat16.c: 445: uint16_t offset;;fat16.c: 446: uint16_t va
      +                          lue;;fat16.c: 449: sector = _fat_sector_from_cluster(cluster);
 40095                           
 40096                           ;incstack = 0
 40097  007BA6  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 40098  007BAA  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 40099  007BAE  EC55  F044         	call	__fat_sector_from_cluster	;wreg free
 40100  007BB2  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 40101  007BB6  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 40102                           
 40103                           ;fat16.c: 450: offset = _fat_offset_from_cluster(cluster);
 40104  007BBA  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 40105  007BBE  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 40106  007BC2  EC61  F044         	call	__fat_offset_from_cluster	;wreg free
 40107  007BC6  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 40108  007BCA  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 40109                           
 40110                           ;fat16.c: 453: flash_partial_read(sector, offset, 2, &value);
 40111  007BCE  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 40112  007BD2  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 40113  007BD6  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 40114  007BDA  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 40115  007BDE  0E00               	movlw	0
 40116  007BE0  6E2D               	movwf	flash_partial_read@length+1,c
 40117  007BE2  0E02               	movlw	2
 40118  007BE4  6E2C               	movwf	flash_partial_read@length,c
 40119  007BE6  0E36               	movlw	low __read_fat@value
 40120  007BE8  6E2E               	movwf	flash_partial_read@data,c
 40121  007BEA  0E00               	movlw	high __read_fat@value
 40122  007BEC  6E2F               	movwf	flash_partial_read@data+1,c
 40123  007BEE  EC12  F042         	call	_flash_partial_read	;wreg free
 40124                           
 40125                           ;fat16.c: 456: return value;
 40126  007BF2  C036  F030         	movff	__read_fat@value,?__read_fat
 40127  007BF6  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 40128  007BFA  0012               	return	
 40129  007BFC                     __end_of__read_fat:
 40130                           	opt stack 0
 40131                           tosu	equ	0xFFF
 40132                           tosh	equ	0xFFE
 40133                           tosl	equ	0xFFD
 40134                           pclath	equ	0xFFA
 40135                           tblptru	equ	0xFF8
 40136                           tblptrh	equ	0xFF7
 40137                           tblptrl	equ	0xFF6
 40138                           tablat	equ	0xFF5
 40139                           prodh	equ	0xFF4
 40140                           prodl	equ	0xFF3
 40141                           intcon	equ	0xFF2
 40142                           intcon2	equ	0xFF1
 40143                           intcon3	equ	0xFF0
 40144                           indf0	equ	0xFEF
 40145                           postinc0	equ	0xFEE
 40146                           fsr0h	equ	0xFEA
 40147                           fsr0l	equ	0xFE9
 40148                           wreg	equ	0xFE8
 40149                           indf1	equ	0xFE7
 40150                           postdec1	equ	0xFE5
 40151                           plusw1	equ	0xFE3
 40152                           fsr1h	equ	0xFE2
 40153                           fsr1l	equ	0xFE1
 40154                           indf2	equ	0xFDF
 40155                           postinc2	equ	0xFDE
 40156                           postdec2	equ	0xFDD
 40157                           plusw2	equ	0xFDB
 40158                           fsr2h	equ	0xFDA
 40159                           fsr2l	equ	0xFD9
 40160                           status	equ	0xFD8
 40161                           
 40162 ;; *************** function __fat_sector_from_cluster *****************
 40163 ;; Defined at:
 40164 ;;		line 75 in file "fat16.c"
 40165 ;; Parameters:    Size  Location     Type
 40166 ;;  cluster         2    0[COMRAM] unsigned int 
 40167 ;; Auto vars:     Size  Location     Type
 40168 ;;		None
 40169 ;; Return value:  Size  Location     Type
 40170 ;;                  2    0[COMRAM] unsigned int 
 40171 ;; Registers used:
 40172 ;;		wreg, status,2, status,0
 40173 ;; Tracked objects:
 40174 ;;		On entry : 0/0
 40175 ;;		On exit  : 0/0
 40176 ;;		Unchanged: 0/0
 40177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40182 ;;Total ram usage:        2 bytes
 40183 ;; Hardware stack levels used:    1
 40184 ;; This function calls:
 40185 ;;		Nothing
 40186 ;; This function is called by:
 40187 ;;		__make_cluster_chain
 40188 ;;		__read_fat
 40189 ;; This function uses a non-reentrant model
 40190 ;;
 40191                           
 40192                           	psect	text206
 40193  0088AA                     __ptext206:
 40194                           	opt stack 0
 40195  0088AA                     __fat_sector_from_cluster:
 40196                           	opt stack 26
 40197                           
 40198                           ;fat16.c: 77: cluster >>= 8;
 40199                           
 40200                           ;incstack = 0
 40201  0088AA  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 40202  0088AC  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 40203  0088AE  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 40204                           
 40205                           ;fat16.c: 78: cluster += 2;
 40206  0088B0  0E02               	movlw	2
 40207  0088B2  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 40208  0088B4  0E00               	movlw	0
 40209  0088B6  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 40210                           
 40211                           ;fat16.c: 79: return cluster;
 40212  0088B8  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 40213  0088BC  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 40214  0088C0  0012               	return	
 40215  0088C2                     __end_of__fat_sector_from_cluster:
 40216                           	opt stack 0
 40217                           tosu	equ	0xFFF
 40218                           tosh	equ	0xFFE
 40219                           tosl	equ	0xFFD
 40220                           pclath	equ	0xFFA
 40221                           tblptru	equ	0xFF8
 40222                           tblptrh	equ	0xFF7
 40223                           tblptrl	equ	0xFF6
 40224                           tablat	equ	0xFF5
 40225                           prodh	equ	0xFF4
 40226                           prodl	equ	0xFF3
 40227                           intcon	equ	0xFF2
 40228                           intcon2	equ	0xFF1
 40229                           intcon3	equ	0xFF0
 40230                           indf0	equ	0xFEF
 40231                           postinc0	equ	0xFEE
 40232                           fsr0h	equ	0xFEA
 40233                           fsr0l	equ	0xFE9
 40234                           wreg	equ	0xFE8
 40235                           indf1	equ	0xFE7
 40236                           postdec1	equ	0xFE5
 40237                           plusw1	equ	0xFE3
 40238                           fsr1h	equ	0xFE2
 40239                           fsr1l	equ	0xFE1
 40240                           indf2	equ	0xFDF
 40241                           postinc2	equ	0xFDE
 40242                           postdec2	equ	0xFDD
 40243                           plusw2	equ	0xFDB
 40244                           fsr2h	equ	0xFDA
 40245                           fsr2l	equ	0xFD9
 40246                           status	equ	0xFD8
 40247                           
 40248 ;; *************** function __fat_offset_from_cluster *****************
 40249 ;; Defined at:
 40250 ;;		line 82 in file "fat16.c"
 40251 ;; Parameters:    Size  Location     Type
 40252 ;;  cluster         2    0[COMRAM] unsigned int 
 40253 ;; Auto vars:     Size  Location     Type
 40254 ;;		None
 40255 ;; Return value:  Size  Location     Type
 40256 ;;                  2    0[COMRAM] unsigned int 
 40257 ;; Registers used:
 40258 ;;		wreg, status,2, status,0
 40259 ;; Tracked objects:
 40260 ;;		On entry : 0/0
 40261 ;;		On exit  : 0/0
 40262 ;;		Unchanged: 0/0
 40263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40268 ;;Total ram usage:        2 bytes
 40269 ;; Hardware stack levels used:    1
 40270 ;; This function calls:
 40271 ;;		Nothing
 40272 ;; This function is called by:
 40273 ;;		__find_nth_cluster
 40274 ;;		__make_cluster_chain
 40275 ;;		__read_fat
 40276 ;; This function uses a non-reentrant model
 40277 ;;
 40278                           
 40279                           	psect	text207
 40280  0088C2                     __ptext207:
 40281                           	opt stack 0
 40282  0088C2                     __fat_offset_from_cluster:
 40283                           	opt stack 26
 40284                           
 40285                           ;fat16.c: 84: cluster &= 0xFF;
 40286                           
 40287                           ;incstack = 0
 40288  0088C2  0EFF               	movlw	255
 40289  0088C4  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 40290  0088C6  0E00               	movlw	0
 40291  0088C8  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 40292                           
 40293                           ;fat16.c: 85: cluster <<= 1;
 40294  0088CA  90D8               	bcf	status,0,c
 40295  0088CC  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 40296  0088CE  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 40297                           
 40298                           ;fat16.c: 86: return cluster;
 40299  0088D0  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 40300  0088D4  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 40301  0088D8  0012               	return	
 40302  0088DA                     __end_of__fat_offset_from_cluster:
 40303                           	opt stack 0
 40304                           tosu	equ	0xFFF
 40305                           tosh	equ	0xFFE
 40306                           tosl	equ	0xFFD
 40307                           pclath	equ	0xFFA
 40308                           tblptru	equ	0xFF8
 40309                           tblptrh	equ	0xFF7
 40310                           tblptrl	equ	0xFF6
 40311                           tablat	equ	0xFF5
 40312                           prodh	equ	0xFF4
 40313                           prodl	equ	0xFF3
 40314                           intcon	equ	0xFF2
 40315                           intcon2	equ	0xFF1
 40316                           intcon3	equ	0xFF0
 40317                           indf0	equ	0xFEF
 40318                           postinc0	equ	0xFEE
 40319                           fsr0h	equ	0xFEA
 40320                           fsr0l	equ	0xFE9
 40321                           wreg	equ	0xFE8
 40322                           indf1	equ	0xFE7
 40323                           postdec1	equ	0xFE5
 40324                           plusw1	equ	0xFE3
 40325                           fsr1h	equ	0xFE2
 40326                           fsr1l	equ	0xFE1
 40327                           indf2	equ	0xFDF
 40328                           postinc2	equ	0xFDE
 40329                           postdec2	equ	0xFDD
 40330                           plusw2	equ	0xFDB
 40331                           fsr2h	equ	0xFDA
 40332                           fsr2l	equ	0xFD9
 40333                           status	equ	0xFD8
 40334                           
 40335 ;; *************** function __data_sector_from_cluster *****************
 40336 ;; Defined at:
 40337 ;;		line 70 in file "fat16.c"
 40338 ;; Parameters:    Size  Location     Type
 40339 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 40340 ;; Auto vars:     Size  Location     Type
 40341 ;;		None
 40342 ;; Return value:  Size  Location     Type
 40343 ;;                  2    0[COMRAM] unsigned int 
 40344 ;; Registers used:
 40345 ;;		wreg, status,2, status,0
 40346 ;; Tracked objects:
 40347 ;;		On entry : 0/0
 40348 ;;		On exit  : 0/0
 40349 ;;		Unchanged: 0/0
 40350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40355 ;;Total ram usage:        2 bytes
 40356 ;; Hardware stack levels used:    1
 40357 ;; This function calls:
 40358 ;;		Nothing
 40359 ;; This function is called by:
 40360 ;;		__find_nth_cluster
 40361 ;;		_fat_read_from_file_fast
 40362 ;;		_fat_modify_file
 40363 ;; This function uses a non-reentrant model
 40364 ;;
 40365                           
 40366                           	psect	text208
 40367  0089B6                     __ptext208:
 40368                           	opt stack 0
 40369  0089B6                     __data_sector_from_cluster:
 40370                           	opt stack 26
 40371                           
 40372                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 40373                           
 40374                           ;incstack = 0
 40375  0089B6  0E24               	movlw	36
 40376  0089B8  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 40377  0089BA  6E01               	movwf	?__data_sector_from_cluster,c
 40378  0089BC  0E00               	movlw	0
 40379  0089BE  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 40380  0089C0  6E02               	movwf	?__data_sector_from_cluster+1,c
 40381  0089C2  0012               	return	
 40382  0089C4                     __end_of__data_sector_from_cluster:
 40383                           	opt stack 0
 40384                           tosu	equ	0xFFF
 40385                           tosh	equ	0xFFE
 40386                           tosl	equ	0xFFD
 40387                           pclath	equ	0xFFA
 40388                           tblptru	equ	0xFF8
 40389                           tblptrh	equ	0xFF7
 40390                           tblptrl	equ	0xFF6
 40391                           tablat	equ	0xFF5
 40392                           prodh	equ	0xFF4
 40393                           prodl	equ	0xFF3
 40394                           intcon	equ	0xFF2
 40395                           intcon2	equ	0xFF1
 40396                           intcon3	equ	0xFF0
 40397                           indf0	equ	0xFEF
 40398                           postinc0	equ	0xFEE
 40399                           fsr0h	equ	0xFEA
 40400                           fsr0l	equ	0xFE9
 40401                           wreg	equ	0xFE8
 40402                           indf1	equ	0xFE7
 40403                           postdec1	equ	0xFE5
 40404                           plusw1	equ	0xFE3
 40405                           fsr1h	equ	0xFE2
 40406                           fsr1l	equ	0xFE1
 40407                           indf2	equ	0xFDF
 40408                           postinc2	equ	0xFDE
 40409                           postdec2	equ	0xFDD
 40410                           plusw2	equ	0xFDB
 40411                           fsr2h	equ	0xFDA
 40412                           fsr2l	equ	0xFD9
 40413                           status	equ	0xFD8
 40414                           
 40415 ;; *************** function _fat_get_file_size *****************
 40416 ;; Defined at:
 40417 ;;		line 547 in file "fat16.c"
 40418 ;; Parameters:    Size  Location     Type
 40419 ;;  file_number     1    wreg     unsigned char 
 40420 ;; Auto vars:     Size  Location     Type
 40421 ;;  file_number     1   65[COMRAM] unsigned char 
 40422 ;;  file_size       4   61[COMRAM] unsigned long 
 40423 ;;  offset          2   59[COMRAM] unsigned int 
 40424 ;;  sector          2   57[COMRAM] unsigned int 
 40425 ;; Return value:  Size  Location     Type
 40426 ;;                  4   53[COMRAM] unsigned long 
 40427 ;; Registers used:
 40428 ;;		wreg, status,2, status,0, cstack
 40429 ;; Tracked objects:
 40430 ;;		On entry : 0/0
 40431 ;;		On exit  : 0/0
 40432 ;;		Unchanged: 0/0
 40433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40435 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40437 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40438 ;;Total ram usage:       13 bytes
 40439 ;; Hardware stack levels used:    1
 40440 ;; Hardware stack levels required when called:    6
 40441 ;; This function calls:
 40442 ;;		__offset_from_file_number
 40443 ;;		__root_is_available
 40444 ;;		__sector_from_file_number
 40445 ;;		_flash_partial_read
 40446 ;; This function is called by:
 40447 ;;		_fat_append_to_file
 40448 ;;		__bootloader_find_file
 40449 ;;		__bootloader_verify_file
 40450 ;;		__fill_buffer_read_file
 40451 ;; This function uses a non-reentrant model
 40452 ;;
 40453                           
 40454                           	psect	text209
 40455  007394                     __ptext209:
 40456                           	opt stack 0
 40457  007394                     _fat_get_file_size:
 40458                           	opt stack 22
 40459                           
 40460                           ;incstack = 0
 40461                           ;fat_get_file_size@file_number stored from wreg
 40462  007394  6E42               	movwf	fat_get_file_size@file_number,c
 40463                           
 40464                           ;fat16.c: 549: uint32_t file_size;;fat16.c: 550: uint16_t sector;;fat16.c: 551: uint16_t
      +                           offset;;fat16.c: 554: if(_root_is_available(file_number))
 40465  007396  5042               	movf	fat_get_file_size@file_number,w,c
 40466  007398  EC62  F03B         	call	__root_is_available
 40467  00739C  0900               	iorlw	0
 40468  00739E  B4D8               	btfsc	status,2,c
 40469  0073A0  D005               	goto	l2032
 40470                           
 40471                           ;fat16.c: 555: {;fat16.c: 557: return 0xFFFFFFFF;
 40472  0073A2  6836               	setf	?_fat_get_file_size,c
 40473  0073A4  6837               	setf	?_fat_get_file_size+1,c
 40474  0073A6  6838               	setf	?_fat_get_file_size+2,c
 40475  0073A8  6839               	setf	?_fat_get_file_size+3,c
 40476  0073AA  0012               	return	
 40477  0073AC                     l2032:
 40478                           
 40479                           ;fat16.c: 558: };fat16.c: 561: sector = _sector_from_file_number(file_number);
 40480  0073AC  5042               	movf	fat_get_file_size@file_number,w,c
 40481  0073AE  ECCB  F042         	call	__sector_from_file_number
 40482  0073B2  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 40483  0073B6  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 40484                           
 40485                           ;fat16.c: 562: offset = _offset_from_file_number(file_number);
 40486  0073BA  5042               	movf	fat_get_file_size@file_number,w,c
 40487  0073BC  EC57  F043         	call	__offset_from_file_number
 40488  0073C0  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 40489  0073C4  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 40490                           
 40491                           ;fat16.c: 565: flash_partial_read(sector, offset+28, 4, &file_size);
 40492  0073C8  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 40493  0073CC  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 40494  0073D0  0E1C               	movlw	28
 40495  0073D2  243C               	addwf	fat_get_file_size@offset,w,c
 40496  0073D4  6E2A               	movwf	flash_partial_read@start,c
 40497  0073D6  0E00               	movlw	0
 40498  0073D8  203D               	addwfc	fat_get_file_size@offset+1,w,c
 40499  0073DA  6E2B               	movwf	flash_partial_read@start+1,c
 40500  0073DC  0E00               	movlw	0
 40501  0073DE  6E2D               	movwf	flash_partial_read@length+1,c
 40502  0073E0  0E04               	movlw	4
 40503  0073E2  6E2C               	movwf	flash_partial_read@length,c
 40504  0073E4  0E3E               	movlw	low fat_get_file_size@file_size
 40505  0073E6  6E2E               	movwf	flash_partial_read@data,c
 40506  0073E8  0E00               	movlw	high fat_get_file_size@file_size
 40507  0073EA  6E2F               	movwf	flash_partial_read@data+1,c
 40508  0073EC  EC12  F042         	call	_flash_partial_read	;wreg free
 40509                           
 40510                           ;fat16.c: 568: return file_size;
 40511  0073F0  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 40512  0073F4  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 40513  0073F8  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 40514  0073FC  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 40515  007400  0012               	return	
 40516  007402                     __end_of_fat_get_file_size:
 40517                           	opt stack 0
 40518                           tosu	equ	0xFFF
 40519                           tosh	equ	0xFFE
 40520                           tosl	equ	0xFFD
 40521                           pclath	equ	0xFFA
 40522                           tblptru	equ	0xFF8
 40523                           tblptrh	equ	0xFF7
 40524                           tblptrl	equ	0xFF6
 40525                           tablat	equ	0xFF5
 40526                           prodh	equ	0xFF4
 40527                           prodl	equ	0xFF3
 40528                           intcon	equ	0xFF2
 40529                           intcon2	equ	0xFF1
 40530                           intcon3	equ	0xFF0
 40531                           indf0	equ	0xFEF
 40532                           postinc0	equ	0xFEE
 40533                           fsr0h	equ	0xFEA
 40534                           fsr0l	equ	0xFE9
 40535                           wreg	equ	0xFE8
 40536                           indf1	equ	0xFE7
 40537                           postdec1	equ	0xFE5
 40538                           plusw1	equ	0xFE3
 40539                           fsr1h	equ	0xFE2
 40540                           fsr1l	equ	0xFE1
 40541                           indf2	equ	0xFDF
 40542                           postinc2	equ	0xFDE
 40543                           postdec2	equ	0xFDD
 40544                           plusw2	equ	0xFDB
 40545                           fsr2h	equ	0xFDA
 40546                           fsr2l	equ	0xFD9
 40547                           status	equ	0xFD8
 40548                           
 40549 ;; *************** function __root_is_available *****************
 40550 ;; Defined at:
 40551 ;;		line 394 in file "fat16.c"
 40552 ;; Parameters:    Size  Location     Type
 40553 ;;  file_number     1    wreg     unsigned char 
 40554 ;; Auto vars:     Size  Location     Type
 40555 ;;  file_number     1   51[COMRAM] unsigned char 
 40556 ;;  offset          2   49[COMRAM] unsigned int 
 40557 ;;  root_sector     2   47[COMRAM] unsigned int 
 40558 ;;  first_byte      1   52[COMRAM] unsigned char 
 40559 ;; Return value:  Size  Location     Type
 40560 ;;                  1    wreg      unsigned char 
 40561 ;; Registers used:
 40562 ;;		wreg, status,2, status,0, cstack
 40563 ;; Tracked objects:
 40564 ;;		On entry : 0/0
 40565 ;;		On exit  : 0/0
 40566 ;;		Unchanged: 0/0
 40567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40569 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40571 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40572 ;;Total ram usage:        6 bytes
 40573 ;; Hardware stack levels used:    1
 40574 ;; Hardware stack levels required when called:    5
 40575 ;; This function calls:
 40576 ;;		__offset_from_file_number
 40577 ;;		__sector_from_file_number
 40578 ;;		_flash_partial_read
 40579 ;; This function is called by:
 40580 ;;		__get_available_root_entry
 40581 ;;		_fat_get_file_size
 40582 ;;		_fat_delete_file
 40583 ;;		_fat_append_to_file
 40584 ;;		_fat_resize_file
 40585 ;; This function uses a non-reentrant model
 40586 ;;
 40587                           
 40588                           	psect	text210
 40589  0076C4                     __ptext210:
 40590                           	opt stack 0
 40591  0076C4                     __root_is_available:
 40592                           	opt stack 22
 40593                           
 40594                           ;incstack = 0
 40595                           ;__root_is_available@file_number stored from wreg
 40596  0076C4  6E34               	movwf	__root_is_available@file_number,c
 40597                           
 40598                           ;fat16.c: 396: uint16_t root_sector;;fat16.c: 397: uint16_t offset;;fat16.c: 398: uint8_
      +                          t first_byte;;fat16.c: 402: if(file_number>=64)
 40599  0076C6  0E3F               	movlw	63
 40600  0076C8  6434               	cpfsgt	__root_is_available@file_number,c
 40601  0076CA  D002               	goto	l1993
 40602                           
 40603                           ;fat16.c: 403: {;fat16.c: 405: return 0;
 40604  0076CC  0E00               	movlw	0
 40605  0076CE  0012               	return	
 40606  0076D0                     l1993:
 40607                           
 40608                           ;fat16.c: 406: };fat16.c: 409: root_sector = _sector_from_file_number(file_number);
 40609  0076D0  5034               	movf	__root_is_available@file_number,w,c
 40610  0076D2  ECCB  F042         	call	__sector_from_file_number
 40611  0076D6  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 40612  0076DA  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 40613                           
 40614                           ;fat16.c: 410: offset = _offset_from_file_number(file_number);
 40615  0076DE  5034               	movf	__root_is_available@file_number,w,c
 40616  0076E0  EC57  F043         	call	__offset_from_file_number
 40617  0076E4  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 40618  0076E8  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 40619                           
 40620                           ;fat16.c: 413: flash_partial_read(root_sector, offset, 1, &first_byte);
 40621  0076EC  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 40622  0076F0  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 40623  0076F4  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 40624  0076F8  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 40625  0076FC  0E00               	movlw	0
 40626  0076FE  6E2D               	movwf	flash_partial_read@length+1,c
 40627  007700  0E01               	movlw	1
 40628  007702  6E2C               	movwf	flash_partial_read@length,c
 40629  007704  0E35               	movlw	low __root_is_available@first_byte
 40630  007706  6E2E               	movwf	flash_partial_read@data,c
 40631  007708  0E00               	movlw	high __root_is_available@first_byte
 40632  00770A  6E2F               	movwf	flash_partial_read@data+1,c
 40633  00770C  EC12  F042         	call	_flash_partial_read	;wreg free
 40634                           
 40635                           ;fat16.c: 416: if((first_byte==0x00) || (first_byte==0xE5))
 40636  007710  5035               	movf	__root_is_available@first_byte,w,c
 40637  007712  B4D8               	btfsc	status,2,c
 40638  007714  D004               	goto	u8030
 40639  007716  0EE5               	movlw	229
 40640  007718  1835               	xorwf	__root_is_available@first_byte,w,c
 40641  00771A  A4D8               	btfss	status,2,c
 40642  00771C  D002               	goto	l1995
 40643  00771E                     u8030:
 40644                           
 40645                           ;fat16.c: 417: {;fat16.c: 419: return 1;
 40646  00771E  0E01               	movlw	1
 40647                           
 40648                           ;fat16.c: 420: }
 40649  007720  0012               	return	
 40650  007722                     l1995:
 40651                           
 40652                           ;fat16.c: 421: else;fat16.c: 422: {;fat16.c: 424: return 0;
 40653  007722  0E00               	movlw	0
 40654  007724  0012               	return	
 40655  007726                     __end_of__root_is_available:
 40656                           	opt stack 0
 40657                           tosu	equ	0xFFF
 40658                           tosh	equ	0xFFE
 40659                           tosl	equ	0xFFD
 40660                           pclath	equ	0xFFA
 40661                           tblptru	equ	0xFF8
 40662                           tblptrh	equ	0xFF7
 40663                           tblptrl	equ	0xFF6
 40664                           tablat	equ	0xFF5
 40665                           prodh	equ	0xFF4
 40666                           prodl	equ	0xFF3
 40667                           intcon	equ	0xFF2
 40668                           intcon2	equ	0xFF1
 40669                           intcon3	equ	0xFF0
 40670                           indf0	equ	0xFEF
 40671                           postinc0	equ	0xFEE
 40672                           fsr0h	equ	0xFEA
 40673                           fsr0l	equ	0xFE9
 40674                           wreg	equ	0xFE8
 40675                           indf1	equ	0xFE7
 40676                           postdec1	equ	0xFE5
 40677                           plusw1	equ	0xFE3
 40678                           fsr1h	equ	0xFE2
 40679                           fsr1l	equ	0xFE1
 40680                           indf2	equ	0xFDF
 40681                           postinc2	equ	0xFDE
 40682                           postdec2	equ	0xFDD
 40683                           plusw2	equ	0xFDB
 40684                           fsr2h	equ	0xFDA
 40685                           fsr2l	equ	0xFD9
 40686                           status	equ	0xFD8
 40687                           
 40688 ;; *************** function _flash_partial_read *****************
 40689 ;; Defined at:
 40690 ;;		line 457 in file "flash.c"
 40691 ;; Parameters:    Size  Location     Type
 40692 ;;  page            2   39[COMRAM] unsigned int 
 40693 ;;  start           2   41[COMRAM] unsigned int 
 40694 ;;  length          2   43[COMRAM] unsigned int 
 40695 ;;  data            2   45[COMRAM] PTR unsigned char 
 40696 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 40697 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 40698 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 40699 ;;		 -> RAM(3759), 
 40700 ;; Auto vars:     Size  Location     Type
 40701 ;;		None
 40702 ;; Return value:  Size  Location     Type
 40703 ;;                  1    wreg      void 
 40704 ;; Registers used:
 40705 ;;		wreg, status,2, status,0, cstack
 40706 ;; Tracked objects:
 40707 ;;		On entry : 0/0
 40708 ;;		On exit  : 0/0
 40709 ;;		Unchanged: 0/0
 40710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40714 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40715 ;;Total ram usage:        8 bytes
 40716 ;; Hardware stack levels used:    1
 40717 ;; Hardware stack levels required when called:    4
 40718 ;; This function calls:
 40719 ;;		__flash_partial_read
 40720 ;;		_spi_set_configuration
 40721 ;; This function is called by:
 40722 ;;		__root_is_available
 40723 ;;		__read_fat
 40724 ;;		__get_first_cluster
 40725 ;;		_fat_get_file_size
 40726 ;;		_fat_read_from_file_fast
 40727 ;;		_fat_get_file_information
 40728 ;; This function uses a non-reentrant model
 40729 ;;
 40730                           
 40731                           	psect	text211
 40732  008424                     __ptext211:
 40733                           	opt stack 0
 40734  008424                     _flash_partial_read:
 40735                           	opt stack 23
 40736                           
 40737                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 40738                           
 40739                           ;incstack = 0
 40740  008424  0E00               	movlw	0
 40741  008426  EC43  F023         	call	_spi_set_configuration
 40742                           
 40743                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 40744  00842A  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 40745  00842E  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 40746  008432  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 40747  008436  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 40748  00843A  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 40749  00843E  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 40750  008442  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 40751  008446  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 40752  00844A  EC75  F038         	call	__flash_partial_read	;wreg free
 40753                           
 40754                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 40755  00844E  0E01               	movlw	1
 40756  008450  EC43  F023         	call	_spi_set_configuration
 40757  008454  0012               	return		;funcret
 40758  008456                     __end_of_flash_partial_read:
 40759                           	opt stack 0
 40760                           tosu	equ	0xFFF
 40761                           tosh	equ	0xFFE
 40762                           tosl	equ	0xFFD
 40763                           pclath	equ	0xFFA
 40764                           tblptru	equ	0xFF8
 40765                           tblptrh	equ	0xFF7
 40766                           tblptrl	equ	0xFF6
 40767                           tablat	equ	0xFF5
 40768                           prodh	equ	0xFF4
 40769                           prodl	equ	0xFF3
 40770                           intcon	equ	0xFF2
 40771                           intcon2	equ	0xFF1
 40772                           intcon3	equ	0xFF0
 40773                           indf0	equ	0xFEF
 40774                           postinc0	equ	0xFEE
 40775                           fsr0h	equ	0xFEA
 40776                           fsr0l	equ	0xFE9
 40777                           wreg	equ	0xFE8
 40778                           indf1	equ	0xFE7
 40779                           postdec1	equ	0xFE5
 40780                           plusw1	equ	0xFE3
 40781                           fsr1h	equ	0xFE2
 40782                           fsr1l	equ	0xFE1
 40783                           indf2	equ	0xFDF
 40784                           postinc2	equ	0xFDE
 40785                           postdec2	equ	0xFDD
 40786                           plusw2	equ	0xFDB
 40787                           fsr2h	equ	0xFDA
 40788                           fsr2l	equ	0xFD9
 40789                           status	equ	0xFD8
 40790                           
 40791 ;; *************** function _spi_set_configuration *****************
 40792 ;; Defined at:
 40793 ;;		line 139 in file "spi.c"
 40794 ;; Parameters:    Size  Location     Type
 40795 ;;  configuratio    1    wreg     enum E6749
 40796 ;; Auto vars:     Size  Location     Type
 40797 ;;  configuratio    1    0[COMRAM] enum E6749
 40798 ;;  cntr            1    0        unsigned char 
 40799 ;; Return value:  Size  Location     Type
 40800 ;;                  1    wreg      void 
 40801 ;; Registers used:
 40802 ;;		wreg, status,2, status,0
 40803 ;; Tracked objects:
 40804 ;;		On entry : 0/0
 40805 ;;		On exit  : 0/0
 40806 ;;		Unchanged: 0/0
 40807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40812 ;;Total ram usage:        1 bytes
 40813 ;; Hardware stack levels used:    1
 40814 ;; This function calls:
 40815 ;;		Nothing
 40816 ;; This function is called by:
 40817 ;;		_flash_init
 40818 ;;		_flash_is_busy
 40819 ;;		_flash_sector_read
 40820 ;;		_flash_sector_write
 40821 ;;		_flash_partial_read
 40822 ;;		_flash_partial_write
 40823 ;;		_flash_set_power_state
 40824 ;; This function uses a non-reentrant model
 40825 ;;
 40826                           
 40827                           	psect	text212
 40828  004686                     __ptext212:
 40829                           	opt stack 0
 40830  004686                     _spi_set_configuration:
 40831                           	opt stack 28
 40832                           
 40833                           ;incstack = 0
 40834                           ;spi_set_configuration@configuration stored from wreg
 40835  004686  6E01               	movwf	spi_set_configuration@configuration,c
 40836                           
 40837                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 40838  004688  D07B               	goto	l2894
 40839  00468A                     l2895:
 40840                           
 40841                           ;spi.c: 152: LATDbits.LD2 = 1;
 40842  00468A  848C               	bsf	3980,2,c	;volatile
 40843                           
 40844                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 40845  00468C  9495               	bcf	3989,2,c	;volatile
 40846                           
 40847                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 40848  00468E  8495               	bsf	3989,2,c	;volatile
 40849  004690  A483               	btfss	3971,2,c	;volatile
 40850  004692  D7FE               	goto	l2897
 40851                           
 40852                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 40853  004694  9088               	bcf	3976,0,c	;volatile
 40854                           
 40855                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 40856  004696  9A72               	bcf	3954,5,c	;volatile
 40857                           
 40858                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 40859  004698  8C95               	bsf	3989,6,c	;volatile
 40860                           
 40861                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 40862  00469A  9895               	bcf	3989,4,c	;volatile
 40863                           
 40864                           ;spi.c: 165: LATDbits.LD4 = 0;
 40865  00469C  988C               	bcf	3980,4,c	;volatile
 40866                           
 40867                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 40868  00469E  9A95               	bcf	3989,5,c	;volatile
 40869                           
 40870                           ;spi.c: 167: LATDbits.LD5 = 0;
 40871  0046A0  9A8C               	bcf	3980,5,c	;volatile
 40872                           
 40873                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 40874  0046A2  9E95               	bcf	3989,7,c	;volatile
 40875                           
 40876                           ;spi.c: 169: LATDbits.LD7 = 1;
 40877  0046A4  8E8C               	bsf	3980,7,c	;volatile
 40878                           
 40879                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 40880  0046A6  0E55               	movlw	85
 40881  0046A8  6EA7               	movwf	4007,c	;volsfr
 40882  0046AA  0EAA               	movlw	170
 40883  0046AC  6EA7               	movwf	4007,c	;volsfr
 40884  0046AE  010E               	movlb	14	; () banked
 40885  0046B0  91BF               	bcf	191,0,b	;volatile
 40886                           
 40887                           ;spi.c: 174: RPOR23 = 0b00000;
 40888  0046B2  0E00               	movlw	0
 40889  0046B4  6FD7               	movwf	215,b	;volatile
 40890                           
 40891                           ;spi.c: 175: RPINR21 = 0b11111;
 40892  0046B6  0E1F               	movlw	31
 40893  0046B8  6FFC               	movwf	252,b	;volatile
 40894                           
 40895                           ;spi.c: 176: RPINR23 = 0b11111;
 40896  0046BA  0E1F               	movlw	31
 40897  0046BC  6FFE               	movwf	254,b	;volatile
 40898                           
 40899                           ;spi.c: 178: RPINR21 = 23;
 40900  0046BE  0E17               	movlw	23
 40901  0046C0  6FFC               	movwf	252,b	;volatile
 40902                           
 40903                           ;spi.c: 179: RPOR21 = 10;
 40904  0046C2  0E0A               	movlw	10
 40905  0046C4  6FD5               	movwf	213,b	;volatile
 40906                           
 40907                           ;spi.c: 181: RPOR22 = 11;
 40908  0046C6  0E0B               	movlw	11
 40909  0046C8  6FD6               	movwf	214,b	;volatile
 40910                           
 40911                           ;spi.c: 182: RPINR22 = 22;
 40912  0046CA  0E16               	movlw	22
 40913  0046CC  6FFD               	movwf	253,b	;volatile
 40914                           
 40915                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 40916  0046CE  0E55               	movlw	85
 40917  0046D0  6EA7               	movwf	4007,c	;volsfr
 40918  0046D2  0EAA               	movlw	170
 40919  0046D4  6EA7               	movwf	4007,c	;volsfr
 40920                           
 40921                           ; BSR set to: 14
 40922  0046D6  81BF               	bsf	191,0,b	;volatile
 40923                           
 40924                           ; BSR set to: 14
 40925                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 40926  0046D8  8E73               	bsf	3955,7,c	;volatile
 40927                           
 40928                           ; BSR set to: 14
 40929                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 40930  0046DA  8C73               	bsf	3955,6,c	;volatile
 40931                           
 40932                           ; BSR set to: 14
 40933                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 40934  0046DC  9E72               	bcf	3954,7,c	;volatile
 40935                           
 40936                           ; BSR set to: 14
 40937                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 40938  0046DE  9C72               	bcf	3954,6,c	;volatile
 40939                           
 40940                           ; BSR set to: 14
 40941                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 40942  0046E0  9872               	bcf	3954,4,c	;volatile
 40943                           
 40944                           ; BSR set to: 14
 40945                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 40946  0046E2  9072               	bcf	3954,0,c	;volatile
 40947  0046E4  9272               	bcf	3954,1,c	;volatile
 40948  0046E6  9472               	bcf	3954,2,c	;volatile
 40949  0046E8  9672               	bcf	3954,3,c	;volatile
 40950                           
 40951                           ; BSR set to: 14
 40952                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 40953  0046EA  8A72               	bsf	3954,5,c	;volatile
 40954                           
 40955                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 40956  0046EC  0E00               	movlw	0
 40957  0046EE  0101               	movlb	1	; () banked
 40958  0046F0  6F8A               	movwf	_active_configuration& (0+255),b
 40959                           
 40960                           ;spi.c: 196: break;
 40961  0046F2  0012               	return	
 40962  0046F4                     l2900:
 40963                           
 40964                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 40965  0046F4  9088               	bcf	3976,0,c	;volatile
 40966                           
 40967                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 40968  0046F6  9A72               	bcf	3954,5,c	;volatile
 40969                           
 40970                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 40971  0046F8  010F               	movlb	15	; () banked
 40972  0046FA  9340               	bcf	64,1,b	;volatile
 40973                           
 40974                           ; BSR set to: 15
 40975                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 40976  0046FC  0E55               	movlw	85
 40977  0046FE  6EA7               	movwf	4007,c	;volsfr
 40978  004700  0EAA               	movlw	170
 40979  004702  6EA7               	movwf	4007,c	;volsfr
 40980                           
 40981                           ; BSR set to: 15
 40982  004704  010E               	movlb	14	; () banked
 40983  004706  91BF               	bcf	191,0,b	;volatile
 40984                           
 40985                           ;spi.c: 208: RPOR23 = 10;
 40986  004708  0E0A               	movlw	10
 40987  00470A  6FD7               	movwf	215,b	;volatile
 40988                           
 40989                           ;spi.c: 209: RPINR21 = 21;
 40990  00470C  0E15               	movlw	21
 40991  00470E  6FFC               	movwf	252,b	;volatile
 40992                           
 40993                           ;spi.c: 210: RPINR22 = 22;
 40994  004710  0E16               	movlw	22
 40995  004712  6FFD               	movwf	253,b	;volatile
 40996                           
 40997                           ;spi.c: 211: RPINR23 = 19;
 40998  004714  0E13               	movlw	19
 40999  004716  6FFE               	movwf	254,b	;volatile
 41000                           
 41001                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 41002  004718  0E55               	movlw	85
 41003  00471A  6EA7               	movwf	4007,c	;volsfr
 41004  00471C  0EAA               	movlw	170
 41005  00471E  6EA7               	movwf	4007,c	;volsfr
 41006                           
 41007                           ; BSR set to: 14
 41008  004720  81BF               	bsf	191,0,b	;volatile
 41009                           
 41010                           ; BSR set to: 14
 41011                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 41012  004722  9A72               	bcf	3954,5,c	;volatile
 41013                           
 41014                           ; BSR set to: 14
 41015                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 41016  004724  8A95               	bsf	3989,5,c	;volatile
 41017                           
 41018                           ; BSR set to: 14
 41019                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 41020  004726  8895               	bsf	3989,4,c	;volatile
 41021                           
 41022                           ; BSR set to: 14
 41023                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 41024  004728  9C95               	bcf	3989,6,c	;volatile
 41025                           
 41026                           ; BSR set to: 14
 41027                           ;spi.c: 227: LATDbits.LD6 = 1;
 41028  00472A  8C8C               	bsf	3980,6,c	;volatile
 41029                           
 41030                           ; BSR set to: 14
 41031                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 41032  00472C  8495               	bsf	3989,2,c	;volatile
 41033                           
 41034                           ; BSR set to: 14
 41035                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 41036  00472E  9E73               	bcf	3955,7,c	;volatile
 41037                           
 41038                           ; BSR set to: 14
 41039                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 41040  004730  8C73               	bsf	3955,6,c	;volatile
 41041                           
 41042                           ; BSR set to: 14
 41043                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 41044  004732  9E72               	bcf	3954,7,c	;volatile
 41045                           
 41046                           ; BSR set to: 14
 41047                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 41048  004734  9C72               	bcf	3954,6,c	;volatile
 41049                           
 41050                           ; BSR set to: 14
 41051                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 41052  004736  9872               	bcf	3954,4,c	;volatile
 41053                           
 41054                           ; BSR set to: 14
 41055                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 41056  004738  5072               	movf	3954,w,c	;volatile
 41057  00473A  0BF0               	andlw	-16
 41058  00473C  0904               	iorlw	4
 41059  00473E  6E72               	movwf	3954,c	;volatile
 41060                           
 41061                           ; BSR set to: 14
 41062                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 41063  004740  9EA4               	bcf	4004,7,c	;volatile
 41064                           
 41065                           ; BSR set to: 14
 41066                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 41067  004742  8A72               	bsf	3954,5,c	;volatile
 41068                           
 41069                           ; BSR set to: 14
 41070                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 41071  004744  8A88               	bsf	3976,5,c	;volatile
 41072                           
 41073                           ; BSR set to: 14
 41074                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 41075  004746  8888               	bsf	3976,4,c	;volatile
 41076                           
 41077                           ; BSR set to: 14
 41078                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 41079  004748  8688               	bsf	3976,3,c	;volatile
 41080                           
 41081                           ; BSR set to: 14
 41082                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 41083  00474A  9488               	bcf	3976,2,c	;volatile
 41084                           
 41085                           ; BSR set to: 14
 41086                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 41087  00474C  9288               	bcf	3976,1,c	;volatile
 41088                           
 41089                           ; BSR set to: 14
 41090                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 41091  00474E  9886               	bcf	3974,4,c	;volatile
 41092  004750  9A86               	bcf	3974,5,c	;volatile
 41093  004752  9C86               	bcf	3974,6,c	;volatile
 41094  004754  9E86               	bcf	3974,7,c	;volatile
 41095                           
 41096                           ; BSR set to: 14
 41097                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 41098  004756  9086               	bcf	3974,0,c	;volatile
 41099  004758  9286               	bcf	3974,1,c	;volatile
 41100  00475A  9486               	bcf	3974,2,c	;volatile
 41101  00475C  9686               	bcf	3974,3,c	;volatile
 41102                           
 41103                           ; BSR set to: 14
 41104                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 41105  00475E  0E00               	movlw	0
 41106  004760  6E66               	movwf	3942,c	;volatile
 41107                           
 41108                           ; BSR set to: 14
 41109                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 41110  004762  0E3F               	movlw	63
 41111  004764  6E67               	movwf	3943,c	;volatile
 41112                           
 41113                           ; BSR set to: 14
 41114                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 41115  004766  0E03               	movlw	high __spi_external_tx_buffer
 41116  004768  6E6A               	movwf	3946,c	;volatile
 41117                           
 41118                           ; BSR set to: 14
 41119                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 41120  00476A  0E40               	movlw	low (low __spi_external_tx_buffer)
 41121  00476C  6E6B               	movwf	3947,c	;volatile
 41122                           
 41123                           ; BSR set to: 14
 41124                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 41125  00476E  0E03               	movlw	high __spi_external_rx_buffer
 41126  004770  6E68               	movwf	3944,c	;volatile
 41127                           
 41128                           ; BSR set to: 14
 41129                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 41130  004772  0E00               	movlw	low (low __spi_external_rx_buffer)
 41131  004774  6E69               	movwf	3945,c	;volatile
 41132                           
 41133                           ; BSR set to: 14
 41134                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 41135  004776  8088               	bsf	3976,0,c	;volatile
 41136                           
 41137                           ; BSR set to: 14
 41138                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 41139  004778  0E01               	movlw	1
 41140  00477A  0101               	movlb	1	; () banked
 41141  00477C  6F8A               	movwf	_active_configuration& (0+255),b
 41142                           
 41143                           ; BSR set to: 1
 41144                           ;spi.c: 337: }
 41145                           
 41146                           ;spi.c: 336: break;
 41147  00477E  0012               	return	
 41148  004780                     l2894:
 41149                           
 41150                           ; BSR set to: 1
 41151  004780  5001               	movf	spi_set_configuration@configuration,w,c
 41152                           
 41153                           ; Switch size 1, requested type "space"
 41154                           ; Number of cases is 2, Range of values is 0 to 1
 41155                           ; switch strategies available:
 41156                           ; Name         Instructions Cycles
 41157                           ; simple_byte            7     4 (average)
 41158                           ;	Chosen strategy is simple_byte
 41159  004782  0A00               	xorlw	0	; case 0
 41160  004784  B4D8               	btfsc	status,2,c
 41161  004786  D781               	goto	l2895
 41162  004788  0A01               	xorlw	1	; case 1
 41163  00478A  A4D8               	btfss	status,2,c
 41164  00478C  0012               	return	
 41165  00478E  D7B2               	goto	l2900
 41166  004790                     __end_of_spi_set_configuration:
 41167                           	opt stack 0
 41168                           tosu	equ	0xFFF
 41169                           tosh	equ	0xFFE
 41170                           tosl	equ	0xFFD
 41171                           pclath	equ	0xFFA
 41172                           tblptru	equ	0xFF8
 41173                           tblptrh	equ	0xFF7
 41174                           tblptrl	equ	0xFF6
 41175                           tablat	equ	0xFF5
 41176                           prodh	equ	0xFF4
 41177                           prodl	equ	0xFF3
 41178                           intcon	equ	0xFF2
 41179                           intcon2	equ	0xFF1
 41180                           intcon3	equ	0xFF0
 41181                           indf0	equ	0xFEF
 41182                           postinc0	equ	0xFEE
 41183                           fsr0h	equ	0xFEA
 41184                           fsr0l	equ	0xFE9
 41185                           wreg	equ	0xFE8
 41186                           indf1	equ	0xFE7
 41187                           postdec1	equ	0xFE5
 41188                           plusw1	equ	0xFE3
 41189                           fsr1h	equ	0xFE2
 41190                           fsr1l	equ	0xFE1
 41191                           indf2	equ	0xFDF
 41192                           postinc2	equ	0xFDE
 41193                           postdec2	equ	0xFDD
 41194                           plusw2	equ	0xFDB
 41195                           fsr2h	equ	0xFDA
 41196                           fsr2l	equ	0xFD9
 41197                           status	equ	0xFD8
 41198                           
 41199 ;; *************** function __flash_partial_read *****************
 41200 ;; Defined at:
 41201 ;;		line 305 in file "flash.c"
 41202 ;; Parameters:    Size  Location     Type
 41203 ;;  page            2   19[COMRAM] unsigned int 
 41204 ;;  start           2   21[COMRAM] unsigned int 
 41205 ;;  length          2   23[COMRAM] unsigned int 
 41206 ;;  data            2   25[COMRAM] PTR unsigned char 
 41207 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 41208 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 41209 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 41210 ;;		 -> buffer(512), msd_buffer(512), RAM(3759), 
 41211 ;; Auto vars:     Size  Location     Type
 41212 ;;  command         4   31[COMRAM] unsigned char [4]
 41213 ;;  address         4   35[COMRAM] unsigned long 
 41214 ;; Return value:  Size  Location     Type
 41215 ;;                  1    wreg      void 
 41216 ;; Registers used:
 41217 ;;		wreg, status,2, status,0, cstack
 41218 ;; Tracked objects:
 41219 ;;		On entry : 0/0
 41220 ;;		On exit  : 0/0
 41221 ;;		Unchanged: 0/0
 41222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41224 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41226 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41227 ;;Total ram usage:       20 bytes
 41228 ;; Hardware stack levels used:    1
 41229 ;; Hardware stack levels required when called:    3
 41230 ;; This function calls:
 41231 ;;		__flash_is_busy
 41232 ;;		_spi_tx_rx
 41233 ;; This function is called by:
 41234 ;;		_flash_sector_read
 41235 ;;		_flash_partial_read
 41236 ;; This function uses a non-reentrant model
 41237 ;;
 41238                           
 41239                           	psect	text213
 41240  0070EA                     __ptext213:
 41241                           	opt stack 0
 41242  0070EA                     __flash_partial_read:
 41243                           	opt stack 23
 41244                           
 41245                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 41246                           
 41247                           ;incstack = 0
 41248  0070EA  ECD5  F043         	call	__flash_is_busy	;wreg free
 41249  0070EE  0900               	iorlw	0
 41250  0070F0  A4D8               	btfss	status,2,c
 41251  0070F2  D7FB               	goto	__flash_partial_read
 41252                           
 41253                           ;flash.c: 314: address = page;
 41254  0070F4  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 41255  0070F8  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 41256  0070FC  6A26               	clrf	__flash_partial_read@address+2,c
 41257  0070FE  6A27               	clrf	__flash_partial_read@address+3,c
 41258                           
 41259                           ;flash.c: 315: address <<= 9;
 41260  007100  0E09               	movlw	9
 41261  007102                     u6625:
 41262  007102  90D8               	bcf	status,0,c
 41263  007104  3624               	rlcf	__flash_partial_read@address,f,c
 41264  007106  3625               	rlcf	__flash_partial_read@address+1,f,c
 41265  007108  3626               	rlcf	__flash_partial_read@address+2,f,c
 41266  00710A  3627               	rlcf	__flash_partial_read@address+3,f,c
 41267  00710C  2EE8               	decfsz	wreg,f,c
 41268  00710E  D7F9               	goto	u6625
 41269                           
 41270                           ;flash.c: 316: address |= start;
 41271  007110  5016               	movf	__flash_partial_read@start,w,c
 41272  007112  6E1C               	movwf	??__flash_partial_read& (0+255),c
 41273  007114  5017               	movf	__flash_partial_read@start+1,w,c
 41274  007116  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 41275  007118  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 41276  00711A  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 41277  00711C  501C               	movf	??__flash_partial_read,w,c
 41278  00711E  1224               	iorwf	__flash_partial_read@address,f,c
 41279  007120  501D               	movf	??__flash_partial_read+1,w,c
 41280  007122  1225               	iorwf	__flash_partial_read@address+1,f,c
 41281  007124  501E               	movf	??__flash_partial_read+2,w,c
 41282  007126  1226               	iorwf	__flash_partial_read@address+2,f,c
 41283  007128  501F               	movf	??__flash_partial_read+3,w,c
 41284  00712A  1227               	iorwf	__flash_partial_read@address+3,f,c
 41285                           
 41286                           ;flash.c: 319: command[0] = 0x03;
 41287  00712C  0E03               	movlw	3
 41288  00712E  6E20               	movwf	__flash_partial_read@command,c
 41289                           
 41290                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 41291  007130  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 41292                           
 41293                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 41294  007134  5025               	movf	__flash_partial_read@address+1,w,c
 41295  007136  6E22               	movwf	__flash_partial_read@command+2,c
 41296                           
 41297                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 41298  007138  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 41299                           
 41300                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 41301  00713C  0E20               	movlw	low __flash_partial_read@command
 41302  00713E  6E01               	movwf	spi_tx_rx@command,c
 41303  007140  0E00               	movlw	high __flash_partial_read@command
 41304  007142  6E02               	movwf	spi_tx_rx@command+1,c
 41305  007144  0E00               	movlw	0
 41306  007146  6E04               	movwf	spi_tx_rx@command_length+1,c
 41307  007148  0E04               	movlw	4
 41308  00714A  6E03               	movwf	spi_tx_rx@command_length,c
 41309  00714C  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 41310  007150  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 41311  007154  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 41312  007158  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 41313  00715C  ECDA  F035         	call	_spi_tx_rx	;wreg free
 41314  007160  0012               	return		;funcret
 41315  007162                     __end_of__flash_partial_read:
 41316                           	opt stack 0
 41317                           tosu	equ	0xFFF
 41318                           tosh	equ	0xFFE
 41319                           tosl	equ	0xFFD
 41320                           pclath	equ	0xFFA
 41321                           tblptru	equ	0xFF8
 41322                           tblptrh	equ	0xFF7
 41323                           tblptrl	equ	0xFF6
 41324                           tablat	equ	0xFF5
 41325                           prodh	equ	0xFF4
 41326                           prodl	equ	0xFF3
 41327                           intcon	equ	0xFF2
 41328                           intcon2	equ	0xFF1
 41329                           intcon3	equ	0xFF0
 41330                           indf0	equ	0xFEF
 41331                           postinc0	equ	0xFEE
 41332                           fsr0h	equ	0xFEA
 41333                           fsr0l	equ	0xFE9
 41334                           wreg	equ	0xFE8
 41335                           indf1	equ	0xFE7
 41336                           postdec1	equ	0xFE5
 41337                           plusw1	equ	0xFE3
 41338                           fsr1h	equ	0xFE2
 41339                           fsr1l	equ	0xFE1
 41340                           indf2	equ	0xFDF
 41341                           postinc2	equ	0xFDE
 41342                           postdec2	equ	0xFDD
 41343                           plusw2	equ	0xFDB
 41344                           fsr2h	equ	0xFDA
 41345                           fsr2l	equ	0xFD9
 41346                           status	equ	0xFD8
 41347                           
 41348 ;; *************** function __flash_is_busy *****************
 41349 ;; Defined at:
 41350 ;;		line 277 in file "flash.c"
 41351 ;; Parameters:    Size  Location     Type
 41352 ;;		None
 41353 ;; Auto vars:     Size  Location     Type
 41354 ;;  status          2   17[COMRAM] unsigned int 
 41355 ;; Return value:  Size  Location     Type
 41356 ;;                  1    wreg      unsigned char 
 41357 ;; Registers used:
 41358 ;;		wreg, status,2, status,0, cstack
 41359 ;; Tracked objects:
 41360 ;;		On entry : 0/0
 41361 ;;		On exit  : 0/0
 41362 ;;		Unchanged: 0/0
 41363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41368 ;;Total ram usage:        2 bytes
 41369 ;; Hardware stack levels used:    1
 41370 ;; Hardware stack levels required when called:    2
 41371 ;; This function calls:
 41372 ;;		__flash_get_status
 41373 ;;		__flash_wakeup
 41374 ;; This function is called by:
 41375 ;;		__flash_set_page_size
 41376 ;;		__flash_copy_page_to_buffer
 41377 ;;		__flash_compare_page_to_buffer
 41378 ;;		__flash_write_to_buffer
 41379 ;;		__flash_write_page_from_buffer
 41380 ;;		__flash_partial_read
 41381 ;;		_flash_is_busy
 41382 ;;		_flash_partial_write
 41383 ;;		__flash_erase_page
 41384 ;;		_flash_set_power_state
 41385 ;; This function uses a non-reentrant model
 41386 ;;
 41387                           
 41388                           	psect	text214
 41389  0087AA                     __ptext214:
 41390                           	opt stack 0
 41391  0087AA                     __flash_is_busy:
 41392                           	opt stack 25
 41393                           
 41394                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 41395                           
 41396                           ;incstack = 0
 41397  0087AA  0100               	movlb	0	; () banked
 41398  0087AC  51E5               	movf	_power_state& (0+255),w,b
 41399  0087AE  A4D8               	btfss	status,2,c
 41400                           
 41401                           ; BSR set to: 0
 41402                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 41403  0087B0  ECFE  F03D         	call	__flash_wakeup	;wreg free
 41404                           
 41405                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 41406  0087B4  EC2B  F042         	call	__flash_get_status	;wreg free
 41407  0087B8  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 41408  0087BC  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 41409                           
 41410                           ;flash.c: 291: if(status & 0b0000000010000000)
 41411  0087C0  AE12               	btfss	__flash_is_busy@status,7,c
 41412  0087C2  D002               	goto	l1800
 41413                           
 41414                           ;flash.c: 292: {;flash.c: 294: return 0;
 41415  0087C4  0E00               	movlw	0
 41416                           
 41417                           ;flash.c: 295: }
 41418  0087C6  0012               	return	
 41419  0087C8                     l1800:
 41420                           
 41421                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 41422  0087C8  0E01               	movlw	1
 41423  0087CA  0012               	return	
 41424  0087CC                     __end_of__flash_is_busy:
 41425                           	opt stack 0
 41426                           tosu	equ	0xFFF
 41427                           tosh	equ	0xFFE
 41428                           tosl	equ	0xFFD
 41429                           pclath	equ	0xFFA
 41430                           tblptru	equ	0xFF8
 41431                           tblptrh	equ	0xFF7
 41432                           tblptrl	equ	0xFF6
 41433                           tablat	equ	0xFF5
 41434                           prodh	equ	0xFF4
 41435                           prodl	equ	0xFF3
 41436                           intcon	equ	0xFF2
 41437                           intcon2	equ	0xFF1
 41438                           intcon3	equ	0xFF0
 41439                           indf0	equ	0xFEF
 41440                           postinc0	equ	0xFEE
 41441                           fsr0h	equ	0xFEA
 41442                           fsr0l	equ	0xFE9
 41443                           wreg	equ	0xFE8
 41444                           indf1	equ	0xFE7
 41445                           postdec1	equ	0xFE5
 41446                           plusw1	equ	0xFE3
 41447                           fsr1h	equ	0xFE2
 41448                           fsr1l	equ	0xFE1
 41449                           indf2	equ	0xFDF
 41450                           postinc2	equ	0xFDE
 41451                           postdec2	equ	0xFDD
 41452                           plusw2	equ	0xFDB
 41453                           fsr2h	equ	0xFDA
 41454                           fsr2l	equ	0xFD9
 41455                           status	equ	0xFD8
 41456                           
 41457 ;; *************** function __flash_wakeup *****************
 41458 ;; Defined at:
 41459 ;;		line 124 in file "flash.c"
 41460 ;; Parameters:    Size  Location     Type
 41461 ;;		None
 41462 ;; Auto vars:     Size  Location     Type
 41463 ;;  command         1    8[COMRAM] unsigned char 
 41464 ;; Return value:  Size  Location     Type
 41465 ;;                  1    wreg      void 
 41466 ;; Registers used:
 41467 ;;		wreg, status,2, status,0, cstack
 41468 ;; Tracked objects:
 41469 ;;		On entry : 0/0
 41470 ;;		On exit  : 0/0
 41471 ;;		Unchanged: 0/0
 41472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41477 ;;Total ram usage:        1 bytes
 41478 ;; Hardware stack levels used:    1
 41479 ;; Hardware stack levels required when called:    1
 41480 ;; This function calls:
 41481 ;;		_spi_tx
 41482 ;; This function is called by:
 41483 ;;		__flash_is_busy
 41484 ;;		_flash_set_power_state
 41485 ;; This function uses a non-reentrant model
 41486 ;;
 41487                           
 41488                           	psect	text215
 41489  007BFC                     __ptext215:
 41490                           	opt stack 0
 41491  007BFC                     __flash_wakeup:
 41492                           	opt stack 25
 41493                           
 41494                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 41495                           
 41496                           ;incstack = 0
 41497  007BFC  D021               	goto	l1749
 41498  007BFE                     
 41499                           ;flash.c: 131: command = 0xAB;
 41500  007BFE  0EAB               	movlw	171
 41501  007C00  6E09               	movwf	__flash_wakeup@command,c
 41502                           
 41503                           ;flash.c: 132: spi_tx(&command, 1);
 41504  007C02  0E09               	movlw	low __flash_wakeup@command
 41505  007C04  6E01               	movwf	spi_tx@data,c
 41506  007C06  0E00               	movlw	high __flash_wakeup@command
 41507  007C08  6E02               	movwf	spi_tx@data+1,c
 41508  007C0A  0E00               	movlw	0
 41509  007C0C  6E04               	movwf	spi_tx@length+1,c
 41510  007C0E  0E01               	movlw	1
 41511  007C10  6E03               	movwf	spi_tx@length,c
 41512  007C12  ECD0  F03C         	call	_spi_tx	;wreg free
 41513                           
 41514                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 41515  007C16  0E17               	movlw	23
 41516  007C18                     u12947:
 41517  007C18  2EE8               	decfsz	wreg,f,c
 41518  007C1A  D7FE               	bra	u12947
 41519  007C1C  F000               	nop	
 41520                           
 41521                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 41522  007C1E  0E00               	movlw	0
 41523  007C20  0100               	movlb	0	; () banked
 41524  007C22  6FE5               	movwf	_power_state& (0+255),b
 41525                           
 41526                           ;flash.c: 135: break;
 41527  007C24  0012               	return	
 41528  007C26                     l1752:
 41529                           
 41530                           ; BSR set to: 0
 41531                           ;flash.c: 140: LATDbits.LD7 = 0;
 41532  007C26  9E8C               	bcf	3980,7,c	;volatile
 41533                           
 41534                           ; BSR set to: 0
 41535                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 41536  007C28  0E0D               	movlw	13
 41537  007C2A                     u12957:
 41538  007C2A  2EE8               	decfsz	wreg,f,c
 41539  007C2C  D7FE               	bra	u12957
 41540  007C2E  F000               	nop	
 41541                           
 41542                           ;flash.c: 142: LATDbits.LD7 = 1;
 41543  007C30  8E8C               	bsf	3980,7,c	;volatile
 41544                           
 41545                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 41546  007C32  0E50               	movlw	80
 41547  007C34                     u12967:
 41548  007C34  2EE8               	decfsz	wreg,f,c
 41549  007C36  D7FE               	bra	u12967
 41550                           
 41551                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 41552  007C38  0E00               	movlw	0
 41553  007C3A  0100               	movlb	0	; () banked
 41554  007C3C  6FE5               	movwf	_power_state& (0+255),b
 41555                           
 41556                           ; BSR set to: 0
 41557                           ;flash.c: 146: }
 41558                           
 41559                           ;flash.c: 145: break;
 41560  007C3E  0012               	return	
 41561  007C40                     l1749:
 41562                           
 41563                           ; BSR set to: 0
 41564  007C40  0100               	movlb	0	; () banked
 41565  007C42  51E5               	movf	_power_state& (0+255),w,b
 41566                           
 41567                           ; Switch size 1, requested type "space"
 41568                           ; Number of cases is 2, Range of values is 1 to 2
 41569                           ; switch strategies available:
 41570                           ; Name         Instructions Cycles
 41571                           ; simple_byte            7     4 (average)
 41572                           ;	Chosen strategy is simple_byte
 41573  007C44  0A01               	xorlw	1	; case 1
 41574  007C46  B4D8               	btfsc	status,2,c
 41575  007C48  D7DA               	goto	l1750
 41576  007C4A  0A03               	xorlw	3	; case 2
 41577  007C4C  A4D8               	btfss	status,2,c
 41578  007C4E  0012               	return	
 41579  007C50  D7EA               	goto	l1752
 41580  007C52                     __end_of__flash_wakeup:
 41581                           	opt stack 0
 41582                           tosu	equ	0xFFF
 41583                           tosh	equ	0xFFE
 41584                           tosl	equ	0xFFD
 41585                           pclath	equ	0xFFA
 41586                           tblptru	equ	0xFF8
 41587                           tblptrh	equ	0xFF7
 41588                           tblptrl	equ	0xFF6
 41589                           tablat	equ	0xFF5
 41590                           prodh	equ	0xFF4
 41591                           prodl	equ	0xFF3
 41592                           intcon	equ	0xFF2
 41593                           intcon2	equ	0xFF1
 41594                           intcon3	equ	0xFF0
 41595                           indf0	equ	0xFEF
 41596                           postinc0	equ	0xFEE
 41597                           fsr0h	equ	0xFEA
 41598                           fsr0l	equ	0xFE9
 41599                           wreg	equ	0xFE8
 41600                           indf1	equ	0xFE7
 41601                           postdec1	equ	0xFE5
 41602                           plusw1	equ	0xFE3
 41603                           fsr1h	equ	0xFE2
 41604                           fsr1l	equ	0xFE1
 41605                           indf2	equ	0xFDF
 41606                           postinc2	equ	0xFDE
 41607                           postdec2	equ	0xFDD
 41608                           plusw2	equ	0xFDB
 41609                           fsr2h	equ	0xFDA
 41610                           fsr2l	equ	0xFD9
 41611                           status	equ	0xFD8
 41612                           
 41613 ;; *************** function _spi_tx *****************
 41614 ;; Defined at:
 41615 ;;		line 348 in file "spi.c"
 41616 ;; Parameters:    Size  Location     Type
 41617 ;;  data            2    0[COMRAM] PTR unsigned char 
 41618 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 41619 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 41620 ;;  length          2    2[COMRAM] unsigned int 
 41621 ;; Auto vars:     Size  Location     Type
 41622 ;;		None
 41623 ;; Return value:  Size  Location     Type
 41624 ;;                  1    wreg      void 
 41625 ;; Registers used:
 41626 ;;		wreg, status,2, status,0
 41627 ;; Tracked objects:
 41628 ;;		On entry : 0/0
 41629 ;;		On exit  : 0/0
 41630 ;;		Unchanged: 0/0
 41631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41635 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41636 ;;Total ram usage:        8 bytes
 41637 ;; Hardware stack levels used:    1
 41638 ;; This function calls:
 41639 ;;		Nothing
 41640 ;; This function is called by:
 41641 ;;		__flash_set_page_size
 41642 ;;		__flash_wakeup
 41643 ;;		__flash_copy_page_to_buffer
 41644 ;;		__flash_compare_page_to_buffer
 41645 ;;		__flash_write_page_from_buffer
 41646 ;;		__flash_erase_page
 41647 ;;		_flash_set_power_state
 41648 ;; This function uses a non-reentrant model
 41649 ;;
 41650                           
 41651                           	psect	text216
 41652  0079A0                     __ptext216:
 41653                           	opt stack 0
 41654  0079A0                     _spi_tx:
 41655                           	opt stack 27
 41656                           
 41657                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 41658                           
 41659                           ; BSR set to: 0
 41660                           ;incstack = 0
 41661  0079A0  9E88               	bcf	3976,7,c	;volatile
 41662                           
 41663                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 41664  0079A2  9C88               	bcf	3976,6,c	;volatile
 41665                           
 41666                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 41667  0079A4  8A88               	bsf	3976,5,c	;volatile
 41668                           
 41669                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 41670  0079A6  9888               	bcf	3976,4,c	;volatile
 41671                           
 41672                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 41673  0079A8  9688               	bcf	3976,3,c	;volatile
 41674                           
 41675                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 41676  0079AA  8488               	bsf	3976,2,c	;volatile
 41677                           
 41678                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 41679  0079AC  9288               	bcf	3976,1,c	;volatile
 41680                           
 41681                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 41682  0079AE  9886               	bcf	3974,4,c	;volatile
 41683  0079B0  9A86               	bcf	3974,5,c	;volatile
 41684  0079B2  9C86               	bcf	3974,6,c	;volatile
 41685  0079B4  9E86               	bcf	3974,7,c	;volatile
 41686                           
 41687                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 41688  0079B6  9086               	bcf	3974,0,c	;volatile
 41689  0079B8  9286               	bcf	3974,1,c	;volatile
 41690  0079BA  9486               	bcf	3974,2,c	;volatile
 41691  0079BC  9686               	bcf	3974,3,c	;volatile
 41692                           
 41693                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 41694  0079BE  5002               	movf	spi_tx@data+1,w,c
 41695  0079C0  6E6A               	movwf	3946,c	;volatile
 41696                           
 41697                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 41698  0079C2  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 41699                           
 41700                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 41701  0079C6  0EFF               	movlw	255
 41702  0079C8  6E05               	movwf	??_spi_tx& (0+255),c
 41703  0079CA  0EFF               	movlw	255
 41704  0079CC  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 41705  0079CE  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 41706  0079D2  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 41707  0079D6  5005               	movf	??_spi_tx,w,c
 41708  0079D8  2607               	addwf	??_spi_tx+2,f,c
 41709  0079DA  5006               	movf	??_spi_tx+1,w,c
 41710  0079DC  2208               	addwfc	??_spi_tx+3,f,c
 41711  0079DE  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 41712  0079E2  6A08               	clrf	??_spi_tx+3,c
 41713  0079E4  5007               	movf	??_spi_tx+2,w,c
 41714  0079E6  6E66               	movwf	3942,c	;volatile
 41715                           
 41716                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 41717  0079E8  0403               	decf	spi_tx@length,w,c
 41718  0079EA  6E67               	movwf	3943,c	;volatile
 41719                           
 41720                           ;spi.c: 376: LATDbits.LD7 = 0;
 41721  0079EC  9E8C               	bcf	3980,7,c	;volatile
 41722                           
 41723                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 41724  0079EE  8088               	bsf	3976,0,c	;volatile
 41725  0079F0  B088               	btfsc	3976,0,c	;volatile
 41726  0079F2  D7FE               	goto	l2908
 41727                           
 41728                           ;spi.c: 379: LATDbits.LD7 = 1;
 41729  0079F4  8E8C               	bsf	3980,7,c	;volatile
 41730  0079F6  0012               	return		;funcret
 41731  0079F8                     __end_of_spi_tx:
 41732                           	opt stack 0
 41733                           tosu	equ	0xFFF
 41734                           tosh	equ	0xFFE
 41735                           tosl	equ	0xFFD
 41736                           pclath	equ	0xFFA
 41737                           tblptru	equ	0xFF8
 41738                           tblptrh	equ	0xFF7
 41739                           tblptrl	equ	0xFF6
 41740                           tablat	equ	0xFF5
 41741                           prodh	equ	0xFF4
 41742                           prodl	equ	0xFF3
 41743                           intcon	equ	0xFF2
 41744                           intcon2	equ	0xFF1
 41745                           intcon3	equ	0xFF0
 41746                           indf0	equ	0xFEF
 41747                           postinc0	equ	0xFEE
 41748                           fsr0h	equ	0xFEA
 41749                           fsr0l	equ	0xFE9
 41750                           wreg	equ	0xFE8
 41751                           indf1	equ	0xFE7
 41752                           postdec1	equ	0xFE5
 41753                           plusw1	equ	0xFE3
 41754                           fsr1h	equ	0xFE2
 41755                           fsr1l	equ	0xFE1
 41756                           indf2	equ	0xFDF
 41757                           postinc2	equ	0xFDE
 41758                           postdec2	equ	0xFDD
 41759                           plusw2	equ	0xFDB
 41760                           fsr2h	equ	0xFDA
 41761                           fsr2l	equ	0xFD9
 41762                           status	equ	0xFD8
 41763                           
 41764 ;; *************** function __flash_get_status *****************
 41765 ;; Defined at:
 41766 ;;		line 113 in file "flash.c"
 41767 ;; Parameters:    Size  Location     Type
 41768 ;;		None
 41769 ;; Auto vars:     Size  Location     Type
 41770 ;;  status          2   15[COMRAM] unsigned int 
 41771 ;;  command         1   14[COMRAM] unsigned char 
 41772 ;; Return value:  Size  Location     Type
 41773 ;;                  2   12[COMRAM] unsigned int 
 41774 ;; Registers used:
 41775 ;;		wreg, status,2, status,0, cstack
 41776 ;; Tracked objects:
 41777 ;;		On entry : 0/0
 41778 ;;		On exit  : 0/0
 41779 ;;		Unchanged: 0/0
 41780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41782 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41784 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41785 ;;Total ram usage:        5 bytes
 41786 ;; Hardware stack levels used:    1
 41787 ;; Hardware stack levels required when called:    1
 41788 ;; This function calls:
 41789 ;;		_spi_tx_rx
 41790 ;; This function is called by:
 41791 ;;		__flash_compare_page_to_buffer
 41792 ;;		__flash_is_busy
 41793 ;; This function uses a non-reentrant model
 41794 ;;
 41795                           
 41796                           	psect	text217
 41797  008456                     __ptext217:
 41798                           	opt stack 0
 41799  008456                     __flash_get_status:
 41800                           	opt stack 25
 41801                           
 41802                           ;flash.c: 117: uint8_t command = 0xD7;
 41803                           
 41804                           ;incstack = 0
 41805  008456  0ED7               	movlw	215
 41806  008458  6E0F               	movwf	__flash_get_status@command,c
 41807                           
 41808                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 41809  00845A  0E0F               	movlw	low __flash_get_status@command
 41810  00845C  6E01               	movwf	spi_tx_rx@command,c
 41811  00845E  0E00               	movlw	high __flash_get_status@command
 41812  008460  6E02               	movwf	spi_tx_rx@command+1,c
 41813  008462  0E00               	movlw	0
 41814  008464  6E04               	movwf	spi_tx_rx@command_length+1,c
 41815  008466  0E01               	movlw	1
 41816  008468  6E03               	movwf	spi_tx_rx@command_length,c
 41817  00846A  0E10               	movlw	low __flash_get_status@status
 41818  00846C  6E05               	movwf	spi_tx_rx@data,c
 41819  00846E  0E00               	movlw	high __flash_get_status@status
 41820  008470  6E06               	movwf	spi_tx_rx@data+1,c
 41821  008472  0E00               	movlw	0
 41822  008474  6E08               	movwf	spi_tx_rx@data_length+1,c
 41823  008476  0E02               	movlw	2
 41824  008478  6E07               	movwf	spi_tx_rx@data_length,c
 41825  00847A  ECDA  F035         	call	_spi_tx_rx	;wreg free
 41826                           
 41827                           ;flash.c: 120: return status;
 41828  00847E  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 41829  008482  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 41830  008486  0012               	return	
 41831  008488                     __end_of__flash_get_status:
 41832                           	opt stack 0
 41833                           tosu	equ	0xFFF
 41834                           tosh	equ	0xFFE
 41835                           tosl	equ	0xFFD
 41836                           pclath	equ	0xFFA
 41837                           tblptru	equ	0xFF8
 41838                           tblptrh	equ	0xFF7
 41839                           tblptrl	equ	0xFF6
 41840                           tablat	equ	0xFF5
 41841                           prodh	equ	0xFF4
 41842                           prodl	equ	0xFF3
 41843                           intcon	equ	0xFF2
 41844                           intcon2	equ	0xFF1
 41845                           intcon3	equ	0xFF0
 41846                           indf0	equ	0xFEF
 41847                           postinc0	equ	0xFEE
 41848                           fsr0h	equ	0xFEA
 41849                           fsr0l	equ	0xFE9
 41850                           wreg	equ	0xFE8
 41851                           indf1	equ	0xFE7
 41852                           postdec1	equ	0xFE5
 41853                           plusw1	equ	0xFE3
 41854                           fsr1h	equ	0xFE2
 41855                           fsr1l	equ	0xFE1
 41856                           indf2	equ	0xFDF
 41857                           postinc2	equ	0xFDE
 41858                           postdec2	equ	0xFDD
 41859                           plusw2	equ	0xFDB
 41860                           fsr2h	equ	0xFDA
 41861                           fsr2l	equ	0xFD9
 41862                           status	equ	0xFD8
 41863                           
 41864 ;; *************** function _spi_tx_rx *****************
 41865 ;; Defined at:
 41866 ;;		line 439 in file "spi.c"
 41867 ;; Parameters:    Size  Location     Type
 41868 ;;  command         2    0[COMRAM] PTR unsigned char 
 41869 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 41870 ;;  command_leng    2    2[COMRAM] unsigned int 
 41871 ;;  data            2    4[COMRAM] PTR unsigned char 
 41872 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 41873 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 41874 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 41875 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 41876 ;;  data_length     2    6[COMRAM] unsigned int 
 41877 ;; Auto vars:     Size  Location     Type
 41878 ;;		None
 41879 ;; Return value:  Size  Location     Type
 41880 ;;                  1    wreg      void 
 41881 ;; Registers used:
 41882 ;;		wreg, status,2, status,0
 41883 ;; Tracked objects:
 41884 ;;		On entry : 0/0
 41885 ;;		On exit  : 0/0
 41886 ;;		Unchanged: 0/0
 41887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41888 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41891 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41892 ;;Total ram usage:       12 bytes
 41893 ;; Hardware stack levels used:    1
 41894 ;; This function calls:
 41895 ;;		Nothing
 41896 ;; This function is called by:
 41897 ;;		__flash_get_status
 41898 ;;		__flash_partial_read
 41899 ;; This function uses a non-reentrant model
 41900 ;;
 41901                           
 41902                           	psect	text218
 41903  006BB4                     __ptext218:
 41904                           	opt stack 0
 41905  006BB4                     _spi_tx_rx:
 41906                           	opt stack 25
 41907                           
 41908                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 41909                           
 41910                           ;incstack = 0
 41911  006BB4  9E88               	bcf	3976,7,c	;volatile
 41912                           
 41913                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 41914  006BB6  9C88               	bcf	3976,6,c	;volatile
 41915                           
 41916                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 41917  006BB8  8A88               	bsf	3976,5,c	;volatile
 41918                           
 41919                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 41920  006BBA  9888               	bcf	3976,4,c	;volatile
 41921                           
 41922                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 41923  006BBC  9688               	bcf	3976,3,c	;volatile
 41924                           
 41925                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 41926  006BBE  8488               	bsf	3976,2,c	;volatile
 41927                           
 41928                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 41929  006BC0  9288               	bcf	3976,1,c	;volatile
 41930                           
 41931                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 41932  006BC2  9886               	bcf	3974,4,c	;volatile
 41933  006BC4  9A86               	bcf	3974,5,c	;volatile
 41934  006BC6  9C86               	bcf	3974,6,c	;volatile
 41935  006BC8  9E86               	bcf	3974,7,c	;volatile
 41936                           
 41937                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 41938  006BCA  9086               	bcf	3974,0,c	;volatile
 41939  006BCC  9286               	bcf	3974,1,c	;volatile
 41940  006BCE  9486               	bcf	3974,2,c	;volatile
 41941  006BD0  9686               	bcf	3974,3,c	;volatile
 41942                           
 41943                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 41944  006BD2  5002               	movf	spi_tx_rx@command+1,w,c
 41945  006BD4  6E6A               	movwf	3946,c	;volatile
 41946                           
 41947                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 41948  006BD6  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 41949                           
 41950                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 41951  006BDA  0EFF               	movlw	255
 41952  006BDC  6E09               	movwf	??_spi_tx_rx& (0+255),c
 41953  006BDE  0EFF               	movlw	255
 41954  006BE0  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 41955  006BE2  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 41956  006BE6  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 41957  006BEA  5009               	movf	??_spi_tx_rx,w,c
 41958  006BEC  260B               	addwf	??_spi_tx_rx+2,f,c
 41959  006BEE  500A               	movf	??_spi_tx_rx+1,w,c
 41960  006BF0  220C               	addwfc	??_spi_tx_rx+3,f,c
 41961  006BF2  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 41962  006BF6  6A0C               	clrf	??_spi_tx_rx+3,c
 41963  006BF8  500B               	movf	??_spi_tx_rx+2,w,c
 41964  006BFA  6E66               	movwf	3942,c	;volatile
 41965                           
 41966                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 41967  006BFC  0403               	decf	spi_tx_rx@command_length,w,c
 41968  006BFE  6E67               	movwf	3943,c	;volatile
 41969                           
 41970                           ;spi.c: 467: LATDbits.LD7 = 0;
 41971  006C00  9E8C               	bcf	3980,7,c	;volatile
 41972                           
 41973                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 41974  006C02  8088               	bsf	3976,0,c	;volatile
 41975  006C04  B088               	btfsc	3976,0,c	;volatile
 41976  006C06  D7FE               	goto	l2923
 41977                           
 41978                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 41979  006C08  9A88               	bcf	3976,5,c	;volatile
 41980                           
 41981                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 41982  006C0A  8888               	bsf	3976,4,c	;volatile
 41983                           
 41984                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 41985  006C0C  9688               	bcf	3976,3,c	;volatile
 41986                           
 41987                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 41988  006C0E  9488               	bcf	3976,2,c	;volatile
 41989                           
 41990                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 41991  006C10  5006               	movf	spi_tx_rx@data+1,w,c
 41992  006C12  6E68               	movwf	3944,c	;volatile
 41993                           
 41994                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 41995  006C14  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 41996                           
 41997                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 41998  006C18  0EFF               	movlw	255
 41999  006C1A  6E09               	movwf	??_spi_tx_rx& (0+255),c
 42000  006C1C  0EFF               	movlw	255
 42001  006C1E  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 42002  006C20  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 42003  006C24  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 42004  006C28  5009               	movf	??_spi_tx_rx,w,c
 42005  006C2A  260B               	addwf	??_spi_tx_rx+2,f,c
 42006  006C2C  500A               	movf	??_spi_tx_rx+1,w,c
 42007  006C2E  220C               	addwfc	??_spi_tx_rx+3,f,c
 42008  006C30  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 42009  006C34  6A0C               	clrf	??_spi_tx_rx+3,c
 42010  006C36  500B               	movf	??_spi_tx_rx+2,w,c
 42011  006C38  6E66               	movwf	3942,c	;volatile
 42012                           
 42013                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 42014  006C3A  0407               	decf	spi_tx_rx@data_length,w,c
 42015  006C3C  6E67               	movwf	3943,c	;volatile
 42016                           
 42017                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 42018  006C3E  8088               	bsf	3976,0,c	;volatile
 42019  006C40  B088               	btfsc	3976,0,c	;volatile
 42020  006C42  D7FE               	goto	l2926
 42021                           
 42022                           ;spi.c: 494: LATDbits.LD7 = 1;
 42023  006C44  8E8C               	bsf	3980,7,c	;volatile
 42024  006C46  0012               	return		;funcret
 42025  006C48                     __end_of_spi_tx_rx:
 42026                           	opt stack 0
 42027                           tosu	equ	0xFFF
 42028                           tosh	equ	0xFFE
 42029                           tosl	equ	0xFFD
 42030                           pclath	equ	0xFFA
 42031                           tblptru	equ	0xFF8
 42032                           tblptrh	equ	0xFF7
 42033                           tblptrl	equ	0xFF6
 42034                           tablat	equ	0xFF5
 42035                           prodh	equ	0xFF4
 42036                           prodl	equ	0xFF3
 42037                           intcon	equ	0xFF2
 42038                           intcon2	equ	0xFF1
 42039                           intcon3	equ	0xFF0
 42040                           indf0	equ	0xFEF
 42041                           postinc0	equ	0xFEE
 42042                           fsr0h	equ	0xFEA
 42043                           fsr0l	equ	0xFE9
 42044                           wreg	equ	0xFE8
 42045                           indf1	equ	0xFE7
 42046                           postdec1	equ	0xFE5
 42047                           plusw1	equ	0xFE3
 42048                           fsr1h	equ	0xFE2
 42049                           fsr1l	equ	0xFE1
 42050                           indf2	equ	0xFDF
 42051                           postinc2	equ	0xFDE
 42052                           postdec2	equ	0xFDD
 42053                           plusw2	equ	0xFDB
 42054                           fsr2h	equ	0xFDA
 42055                           fsr2l	equ	0xFD9
 42056                           status	equ	0xFD8
 42057                           
 42058 ;; *************** function __sector_from_file_number *****************
 42059 ;; Defined at:
 42060 ;;		line 52 in file "fat16.c"
 42061 ;; Parameters:    Size  Location     Type
 42062 ;;  file_number     1    wreg     unsigned char 
 42063 ;; Auto vars:     Size  Location     Type
 42064 ;;  file_number     1    2[COMRAM] unsigned char 
 42065 ;;  sector          2    3[COMRAM] unsigned int 
 42066 ;; Return value:  Size  Location     Type
 42067 ;;                  2    0[COMRAM] unsigned int 
 42068 ;; Registers used:
 42069 ;;		wreg, status,2, status,0
 42070 ;; Tracked objects:
 42071 ;;		On entry : 0/0
 42072 ;;		On exit  : 0/0
 42073 ;;		Unchanged: 0/0
 42074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42078 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42079 ;;Total ram usage:        5 bytes
 42080 ;; Hardware stack levels used:    1
 42081 ;; This function calls:
 42082 ;;		Nothing
 42083 ;; This function is called by:
 42084 ;;		__root_is_available
 42085 ;;		__write_root
 42086 ;;		__delete_root
 42087 ;;		__get_first_cluster
 42088 ;;		_fat_get_file_size
 42089 ;;		_fat_get_file_information
 42090 ;; This function uses a non-reentrant model
 42091 ;;
 42092                           
 42093                           	psect	text219
 42094  008596                     __ptext219:
 42095                           	opt stack 0
 42096  008596                     __sector_from_file_number:
 42097                           	opt stack 27
 42098                           
 42099                           ;incstack = 0
 42100                           ;__sector_from_file_number@file_number stored from wreg
 42101  008596  6E03               	movwf	__sector_from_file_number@file_number,c
 42102                           
 42103                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 42104  008598  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 42105  00859C  6A05               	clrf	__sector_from_file_number@sector+1,c
 42106                           
 42107                           ;fat16.c: 56: sector >>= 4;
 42108  00859E  3A04               	swapf	__sector_from_file_number@sector,f,c
 42109  0085A0  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 42110  0085A2  0E0F               	movlw	15
 42111  0085A4  1604               	andwf	__sector_from_file_number@sector,f,c
 42112  0085A6  5005               	movf	__sector_from_file_number@sector+1,w,c
 42113  0085A8  0BF0               	andlw	240
 42114  0085AA  1204               	iorwf	__sector_from_file_number@sector,f,c
 42115  0085AC  0E0F               	movlw	15
 42116  0085AE  1605               	andwf	__sector_from_file_number@sector+1,f,c
 42117                           
 42118                           ;fat16.c: 57: sector += 34;
 42119  0085B0  0E22               	movlw	34
 42120  0085B2  2604               	addwf	__sector_from_file_number@sector,f,c
 42121  0085B4  0E00               	movlw	0
 42122  0085B6  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 42123                           
 42124                           ;fat16.c: 58: return sector;
 42125  0085B8  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 42126  0085BC  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 42127  0085C0  0012               	return	
 42128  0085C2                     __end_of__sector_from_file_number:
 42129                           	opt stack 0
 42130                           tosu	equ	0xFFF
 42131                           tosh	equ	0xFFE
 42132                           tosl	equ	0xFFD
 42133                           pclath	equ	0xFFA
 42134                           tblptru	equ	0xFF8
 42135                           tblptrh	equ	0xFF7
 42136                           tblptrl	equ	0xFF6
 42137                           tablat	equ	0xFF5
 42138                           prodh	equ	0xFF4
 42139                           prodl	equ	0xFF3
 42140                           intcon	equ	0xFF2
 42141                           intcon2	equ	0xFF1
 42142                           intcon3	equ	0xFF0
 42143                           indf0	equ	0xFEF
 42144                           postinc0	equ	0xFEE
 42145                           fsr0h	equ	0xFEA
 42146                           fsr0l	equ	0xFE9
 42147                           wreg	equ	0xFE8
 42148                           indf1	equ	0xFE7
 42149                           postdec1	equ	0xFE5
 42150                           plusw1	equ	0xFE3
 42151                           fsr1h	equ	0xFE2
 42152                           fsr1l	equ	0xFE1
 42153                           indf2	equ	0xFDF
 42154                           postinc2	equ	0xFDE
 42155                           postdec2	equ	0xFDD
 42156                           plusw2	equ	0xFDB
 42157                           fsr2h	equ	0xFDA
 42158                           fsr2l	equ	0xFD9
 42159                           status	equ	0xFD8
 42160                           
 42161 ;; *************** function __offset_from_file_number *****************
 42162 ;; Defined at:
 42163 ;;		line 61 in file "fat16.c"
 42164 ;; Parameters:    Size  Location     Type
 42165 ;;  file_number     1    wreg     unsigned char 
 42166 ;; Auto vars:     Size  Location     Type
 42167 ;;  file_number     1    2[COMRAM] unsigned char 
 42168 ;;  offset          2    3[COMRAM] unsigned int 
 42169 ;; Return value:  Size  Location     Type
 42170 ;;                  2    0[COMRAM] unsigned int 
 42171 ;; Registers used:
 42172 ;;		wreg, status,2, status,0
 42173 ;; Tracked objects:
 42174 ;;		On entry : 0/0
 42175 ;;		On exit  : 0/0
 42176 ;;		Unchanged: 0/0
 42177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42179 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42181 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42182 ;;Total ram usage:        5 bytes
 42183 ;; Hardware stack levels used:    1
 42184 ;; This function calls:
 42185 ;;		Nothing
 42186 ;; This function is called by:
 42187 ;;		__root_is_available
 42188 ;;		__write_root
 42189 ;;		__delete_root
 42190 ;;		__get_first_cluster
 42191 ;;		_fat_get_file_size
 42192 ;;		_fat_get_file_information
 42193 ;; This function uses a non-reentrant model
 42194 ;;
 42195                           
 42196                           	psect	text220
 42197  0086AE                     __ptext220:
 42198                           	opt stack 0
 42199  0086AE                     __offset_from_file_number:
 42200                           	opt stack 26
 42201                           
 42202                           ;incstack = 0
 42203                           ;__offset_from_file_number@file_number stored from wreg
 42204  0086AE  6E03               	movwf	__offset_from_file_number@file_number,c
 42205                           
 42206                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 42207  0086B0  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 42208  0086B4  6A05               	clrf	__offset_from_file_number@offset+1,c
 42209                           
 42210                           ;fat16.c: 65: offset &= 0b1111;
 42211  0086B6  0E0F               	movlw	15
 42212  0086B8  1604               	andwf	__offset_from_file_number@offset,f,c
 42213  0086BA  0E00               	movlw	0
 42214  0086BC  1605               	andwf	__offset_from_file_number@offset+1,f,c
 42215                           
 42216                           ;fat16.c: 66: offset <<= 5;
 42217  0086BE  0E05               	movlw	5
 42218  0086C0                     u7255:
 42219  0086C0  90D8               	bcf	status,0,c
 42220  0086C2  3604               	rlcf	__offset_from_file_number@offset,f,c
 42221  0086C4  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 42222  0086C6  2EE8               	decfsz	wreg,f,c
 42223  0086C8  D7FB               	goto	u7255
 42224                           
 42225                           ;fat16.c: 67: return offset;
 42226  0086CA  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 42227  0086CE  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 42228  0086D2  0012               	return	
 42229  0086D4                     __end_of__offset_from_file_number:
 42230                           	opt stack 0
 42231                           tosu	equ	0xFFF
 42232                           tosh	equ	0xFFE
 42233                           tosl	equ	0xFFD
 42234                           pclath	equ	0xFFA
 42235                           tblptru	equ	0xFF8
 42236                           tblptrh	equ	0xFF7
 42237                           tblptrl	equ	0xFF6
 42238                           tablat	equ	0xFF5
 42239                           prodh	equ	0xFF4
 42240                           prodl	equ	0xFF3
 42241                           intcon	equ	0xFF2
 42242                           intcon2	equ	0xFF1
 42243                           intcon3	equ	0xFF0
 42244                           indf0	equ	0xFEF
 42245                           postinc0	equ	0xFEE
 42246                           fsr0h	equ	0xFEA
 42247                           fsr0l	equ	0xFE9
 42248                           wreg	equ	0xFE8
 42249                           indf1	equ	0xFE7
 42250                           postdec1	equ	0xFE5
 42251                           plusw1	equ	0xFE3
 42252                           fsr1h	equ	0xFE2
 42253                           fsr1l	equ	0xFE1
 42254                           indf2	equ	0xFDF
 42255                           postinc2	equ	0xFDE
 42256                           postdec2	equ	0xFDD
 42257                           plusw2	equ	0xFDB
 42258                           fsr2h	equ	0xFDA
 42259                           fsr2l	equ	0xFD9
 42260                           status	equ	0xFD8
 42261                           
 42262 ;; *************** function _USBTransferOnePacket *****************
 42263 ;; Defined at:
 42264 ;;		line 995 in file "usb_device.c"
 42265 ;; Parameters:    Size  Location     Type
 42266 ;;  ep              1    wreg     unsigned char 
 42267 ;;  dir             1    0[COMRAM] unsigned char 
 42268 ;;  data            2    1[COMRAM] PTR unsigned char 
 42269 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 42270 ;;		 -> msd_cbw(31), NULL(0), 
 42271 ;;  len             1    3[COMRAM] unsigned char 
 42272 ;; Auto vars:     Size  Location     Type
 42273 ;;  ep              1    8[COMRAM] unsigned char 
 42274 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 42275 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 42276 ;; Return value:  Size  Location     Type
 42277 ;;                  2    0[COMRAM] PTR void 
 42278 ;; Registers used:
 42279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42280 ;; Tracked objects:
 42281 ;;		On entry : 0/0
 42282 ;;		On exit  : 0/0
 42283 ;;		Unchanged: 0/0
 42284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42286 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42288 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42289 ;;Total ram usage:       11 bytes
 42290 ;; Hardware stack levels used:    1
 42291 ;; This function calls:
 42292 ;;		Nothing
 42293 ;; This function is called by:
 42294 ;;		_USBMSDInit
 42295 ;;		_USBCheckMSDRequest
 42296 ;;		_MSDTasks
 42297 ;;		_MSDProcessCommandMediaPresent
 42298 ;;		_MSDReadHandler
 42299 ;;		_MSDWriteHandler
 42300 ;;		_MSDTransferTerminated
 42301 ;;		_APP_DeviceCustomHIDInitialize
 42302 ;;		_APP_DeviceCustomHIDTasks
 42303 ;; This function uses a non-reentrant model
 42304 ;;
 42305                           
 42306                           	psect	text221
 42307  004BA6                     __ptext221:
 42308                           	opt stack 0
 42309  004BA6                     _USBTransferOnePacket:
 42310                           	opt stack 27
 42311                           
 42312                           ;incstack = 0
 42313                           ;USBTransferOnePacket@ep stored from wreg
 42314  004BA6  6E09               	movwf	USBTransferOnePacket@ep,c
 42315                           
 42316                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 42317  004BA8  5001               	movf	USBTransferOnePacket@dir,w,c
 42318  004BAA  B4D8               	btfsc	status,2,c
 42319  004BAC  D007               	goto	l183
 42320                           
 42321                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 42322  004BAE  5009               	movf	USBTransferOnePacket@ep,w,c
 42323  004BB0  0D02               	mullw	2
 42324  004BB2  0ED1               	movlw	low _pBDTEntryIn
 42325  004BB4  24F3               	addwf	prodl,w,c
 42326  004BB6  6ED9               	movwf	fsr2l,c
 42327  004BB8  0E00               	movlw	high _pBDTEntryIn
 42328  004BBA  D006               	goto	L44
 42329  004BBC                     l183:
 42330                           
 42331                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 42332  004BBC  5009               	movf	USBTransferOnePacket@ep,w,c
 42333  004BBE  0D02               	mullw	2
 42334  004BC0  0E40               	movlw	low _pBDTEntryOut
 42335  004BC2  24F3               	addwf	prodl,w,c
 42336  004BC4  6ED9               	movwf	fsr2l,c
 42337  004BC6  0E01               	movlw	high _pBDTEntryOut
 42338  004BC8                     L44:
 42339  004BC8  20F4               	addwfc	prodh,w,c
 42340  004BCA  6EDA               	movwf	fsr2h,c
 42341  004BCC  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 42342  004BD0  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 42343                           
 42344                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 42345  004BD4  500A               	movf	USBTransferOnePacket@handle,w,c
 42346  004BD6  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 42347  004BD8  A4D8               	btfss	status,2,c
 42348  004BDA  D005               	goto	l185
 42349                           
 42350                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 42351  004BDC  0E00               	movlw	0
 42352  004BDE  6E01               	movwf	?_USBTransferOnePacket,c
 42353  004BE0  0E00               	movlw	0
 42354  004BE2  6E02               	movwf	?_USBTransferOnePacket+1,c
 42355  004BE4  0012               	return	
 42356  004BE6                     l185:
 42357                           
 42358                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 42359  004BE6  EE20 F002          	lfsr	2,2
 42360  004BEA  500A               	movf	USBTransferOnePacket@handle,w,c
 42361  004BEC  26D9               	addwf	fsr2l,f,c
 42362  004BEE  500B               	movf	USBTransferOnePacket@handle+1,w,c
 42363  004BF0  22DA               	addwfc	fsr2h,f,c
 42364  004BF2  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 42365  004BF6  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 42366                           
 42367                           ;usb_device.c: 1030: handle->CNT = len;
 42368  004BFA  EE20 F001          	lfsr	2,1
 42369  004BFE  500A               	movf	USBTransferOnePacket@handle,w,c
 42370  004C00  26D9               	addwf	fsr2l,f,c
 42371  004C02  500B               	movf	USBTransferOnePacket@handle+1,w,c
 42372  004C04  22DA               	addwfc	fsr2h,f,c
 42373  004C06  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 42374                           
 42375                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 42376  004C0A  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42377  004C0E  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42378  004C12  0E40               	movlw	64
 42379  004C14  16DF               	andwf	indf2,f,c
 42380                           
 42381                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 42382  004C16  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42383  004C1A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42384  004C1E  0E00               	movlw	0
 42385  004C20  86DB               	bsf	plusw2,3,c
 42386                           
 42387                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 42388  004C22  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42389  004C26  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42390  004C2A  0E00               	movlw	0
 42391  004C2C  8EDB               	bsf	plusw2,7,c
 42392                           
 42393                           ;usb_device.c: 1036: if(dir != 0)
 42394  004C2E  5001               	movf	USBTransferOnePacket@dir,w,c
 42395  004C30  B4D8               	btfsc	status,2,c
 42396  004C32  D018               	goto	l187
 42397                           
 42398                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 42399  004C34  5009               	movf	USBTransferOnePacket@ep,w,c
 42400  004C36  0D02               	mullw	2
 42401  004C38  0ED1               	movlw	low _pBDTEntryIn
 42402  004C3A  24F3               	addwf	prodl,w,c
 42403  004C3C  6ED9               	movwf	fsr2l,c
 42404  004C3E  0E00               	movlw	high _pBDTEntryIn
 42405  004C40  20F4               	addwfc	prodh,w,c
 42406  004C42  6EDA               	movwf	fsr2h,c
 42407  004C44  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 42408  004C48  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 42409  004C4C  0E04               	movlw	4
 42410  004C4E  1805               	xorwf	??_USBTransferOnePacket,w,c
 42411  004C50  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 42412  004C52  5006               	movf	??_USBTransferOnePacket+1,w,c
 42413  004C54  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 42414  004C56  5009               	movf	USBTransferOnePacket@ep,w,c
 42415  004C58  0D02               	mullw	2
 42416  004C5A  0ED1               	movlw	low _pBDTEntryIn
 42417  004C5C  24F3               	addwf	prodl,w,c
 42418  004C5E  6ED9               	movwf	fsr2l,c
 42419  004C60  0E00               	movlw	high _pBDTEntryIn
 42420  004C62  D017               	goto	L45
 42421  004C64                     l187:
 42422                           
 42423                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 42424  004C64  5009               	movf	USBTransferOnePacket@ep,w,c
 42425  004C66  0D02               	mullw	2
 42426  004C68  0E40               	movlw	low _pBDTEntryOut
 42427  004C6A  24F3               	addwf	prodl,w,c
 42428  004C6C  6ED9               	movwf	fsr2l,c
 42429  004C6E  0E01               	movlw	high _pBDTEntryOut
 42430  004C70  20F4               	addwfc	prodh,w,c
 42431  004C72  6EDA               	movwf	fsr2h,c
 42432  004C74  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 42433  004C78  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 42434  004C7C  0E04               	movlw	4
 42435  004C7E  1805               	xorwf	??_USBTransferOnePacket,w,c
 42436  004C80  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 42437  004C82  5006               	movf	??_USBTransferOnePacket+1,w,c
 42438  004C84  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 42439  004C86  5009               	movf	USBTransferOnePacket@ep,w,c
 42440  004C88  0D02               	mullw	2
 42441  004C8A  0E40               	movlw	low _pBDTEntryOut
 42442  004C8C  24F3               	addwf	prodl,w,c
 42443  004C8E  6ED9               	movwf	fsr2l,c
 42444  004C90  0E01               	movlw	high _pBDTEntryOut
 42445  004C92                     L45:
 42446  004C92  20F4               	addwfc	prodh,w,c
 42447  004C94  6EDA               	movwf	fsr2h,c
 42448  004C96  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 42449  004C9A  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 42450                           
 42451                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 42452  004C9E  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 42453  004CA2  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 42454  004CA6  0012               	return	
 42455  004CA8                     __end_of_USBTransferOnePacket:
 42456                           	opt stack 0
 42457                           tosu	equ	0xFFF
 42458                           tosh	equ	0xFFE
 42459                           tosl	equ	0xFFD
 42460                           pclath	equ	0xFFA
 42461                           tblptru	equ	0xFF8
 42462                           tblptrh	equ	0xFF7
 42463                           tblptrl	equ	0xFF6
 42464                           tablat	equ	0xFF5
 42465                           prodh	equ	0xFF4
 42466                           prodl	equ	0xFF3
 42467                           intcon	equ	0xFF2
 42468                           intcon2	equ	0xFF1
 42469                           intcon3	equ	0xFF0
 42470                           indf0	equ	0xFEF
 42471                           postinc0	equ	0xFEE
 42472                           fsr0h	equ	0xFEA
 42473                           fsr0l	equ	0xFE9
 42474                           wreg	equ	0xFE8
 42475                           indf1	equ	0xFE7
 42476                           postdec1	equ	0xFE5
 42477                           plusw1	equ	0xFE3
 42478                           fsr1h	equ	0xFE2
 42479                           fsr1l	equ	0xFE1
 42480                           indf2	equ	0xFDF
 42481                           postinc2	equ	0xFDE
 42482                           postdec2	equ	0xFDD
 42483                           plusw2	equ	0xFDB
 42484                           fsr2h	equ	0xFDA
 42485                           fsr2l	equ	0xFD9
 42486                           status	equ	0xFD8
 42487                           tosu	equ	0xFFF
 42488                           tosh	equ	0xFFE
 42489                           tosl	equ	0xFFD
 42490                           pclath	equ	0xFFA
 42491                           tblptru	equ	0xFF8
 42492                           tblptrh	equ	0xFF7
 42493                           tblptrl	equ	0xFF6
 42494                           tablat	equ	0xFF5
 42495                           prodh	equ	0xFF4
 42496                           prodl	equ	0xFF3
 42497                           intcon	equ	0xFF2
 42498                           intcon2	equ	0xFF1
 42499                           intcon3	equ	0xFF0
 42500                           indf0	equ	0xFEF
 42501                           postinc0	equ	0xFEE
 42502                           fsr0h	equ	0xFEA
 42503                           fsr0l	equ	0xFE9
 42504                           wreg	equ	0xFE8
 42505                           indf1	equ	0xFE7
 42506                           postdec1	equ	0xFE5
 42507                           plusw1	equ	0xFE3
 42508                           fsr1h	equ	0xFE2
 42509                           fsr1l	equ	0xFE1
 42510                           indf2	equ	0xFDF
 42511                           postinc2	equ	0xFDE
 42512                           postdec2	equ	0xFDD
 42513                           plusw2	equ	0xFDB
 42514                           fsr2h	equ	0xFDA
 42515                           fsr2l	equ	0xFD9
 42516                           status	equ	0xFD8
 42517                           
 42518                           	psect	text222
 42519  000000                     __ptext222:
 42520                           	opt stack 0
 42521                           tosu	equ	0xFFF
 42522                           tosh	equ	0xFFE
 42523                           tosl	equ	0xFFD
 42524                           pclath	equ	0xFFA
 42525                           tblptru	equ	0xFF8
 42526                           tblptrh	equ	0xFF7
 42527                           tblptrl	equ	0xFF6
 42528                           tablat	equ	0xFF5
 42529                           prodh	equ	0xFF4
 42530                           prodl	equ	0xFF3
 42531                           intcon	equ	0xFF2
 42532                           intcon2	equ	0xFF1
 42533                           intcon3	equ	0xFF0
 42534                           indf0	equ	0xFEF
 42535                           postinc0	equ	0xFEE
 42536                           fsr0h	equ	0xFEA
 42537                           fsr0l	equ	0xFE9
 42538                           wreg	equ	0xFE8
 42539                           indf1	equ	0xFE7
 42540                           postdec1	equ	0xFE5
 42541                           plusw1	equ	0xFE3
 42542                           fsr1h	equ	0xFE2
 42543                           fsr1l	equ	0xFE1
 42544                           indf2	equ	0xFDF
 42545                           postinc2	equ	0xFDE
 42546                           postdec2	equ	0xFDD
 42547                           plusw2	equ	0xFDB
 42548                           fsr2h	equ	0xFDA
 42549                           fsr2l	equ	0xFD9
 42550                           status	equ	0xFD8
 42551                           
 42552                           	psect	rparam
 42553  0000                     tosu	equ	0xFFF
 42554                           tosh	equ	0xFFE
 42555                           tosl	equ	0xFFD
 42556                           pclath	equ	0xFFA
 42557                           tblptru	equ	0xFF8
 42558                           tblptrh	equ	0xFF7
 42559                           tblptrl	equ	0xFF6
 42560                           tablat	equ	0xFF5
 42561                           prodh	equ	0xFF4
 42562                           prodl	equ	0xFF3
 42563                           intcon	equ	0xFF2
 42564                           intcon2	equ	0xFF1
 42565                           intcon3	equ	0xFF0
 42566                           indf0	equ	0xFEF
 42567                           postinc0	equ	0xFEE
 42568                           fsr0h	equ	0xFEA
 42569                           fsr0l	equ	0xFE9
 42570                           wreg	equ	0xFE8
 42571                           indf1	equ	0xFE7
 42572                           postdec1	equ	0xFE5
 42573                           plusw1	equ	0xFE3
 42574                           fsr1h	equ	0xFE2
 42575                           fsr1l	equ	0xFE1
 42576                           indf2	equ	0xFDF
 42577                           postinc2	equ	0xFDE
 42578                           postdec2	equ	0xFDD
 42579                           plusw2	equ	0xFDB
 42580                           fsr2h	equ	0xFDA
 42581                           fsr2l	equ	0xFD9
 42582                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     160
    BANK1           256      0     216
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_rename
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1810531
                                             91 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   29153
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   22849
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6079
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  125967
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   56972
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   48570
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   20359
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  101376
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  101376
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   96212
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   48857
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   47099
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   23027
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15439
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13176
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5780
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  614622
                                             87 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   77468
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   54314
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   40122
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   32135
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2777
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    7705
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    7415
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  533841
                                             59 BANK0      6     3      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  446607
                                             56 BANK0      3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  3     1      2   16925
                                             38 COMRAM     3     1      2
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16770
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                   7     5      2   68454
                                             80 COMRAM     7     5      2
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   29399
                                             94 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   29178
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   9     7      2   52587
                                             85 COMRAM     9     7      2
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   66952
                                             75 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   66775
                                             72 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    6661
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   21021
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   7     5      2   70844
                                             84 COMRAM     7     5      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   70528
                                             72 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    6971
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    6795
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  141151
                                             89 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  140908
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   68160
                                             72 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   21287
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 19    15      4   32277
                                             53 COMRAM    19    15      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   15094
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7062
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   52204
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   20814
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7328
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   14989
                                             55 COMRAM    10     6      4
          __data_sector_from_cluster
           __fat_offset_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    5499
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    7505
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   13388
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    6705
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    6433
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __data_sector_from_cluster
                 __fat_offset_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      31        0.0%
DATA                 0      0     959       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Sep 13 23:27:26 2018

                          __end_of_fat_read_from_file 4F94  
                           ??_internalFlash_getBuffer 0003  
                     __size_of__write_value_to_offset 0034  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 004B  
              __end_of_i2c_display_send_init_sequence 8512  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 84E6  
                                 __system_timer0_init 87CC  
                                                  _os 00C5  
                                       _USBDeviceInit 3D0E  
                                  _USBCheckHIDRequest 5244  
                         ??__data_sector_from_cluster 0003  
                __bootloader_verify_file@return_value 0097  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 006A  
                                     _fat_resize_file 4DA8  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5BF2  
                                                 l210 6752  
                                                 l220 4CD0  
                                                 l141 3D7C  
                                                 l214 6AEE  
                                                 l310 6248  
                                                 l150 3604  
                                                 l143 3DBA  
                                                 l303 827C  
                                                 l151 35FA  
                                                 l320 747C  
                                                 l208 6738  
                                                 l224 4D52  
                                                 l304 827A  
                                                 l152 35F8  
                                                 l241 5932  
                                                 l233 5886  
                                                 l161 3680  
                                                 l242 58FA  
                                                 l330 5D30  
                                                 l322 74CA  
                                                 l235 5890  
                                                 l331 5CF6  
                                                 l251 4416  
                                                 l411 5292  
                                                 l219 4D28  
                                                 l139 3D54  
                                                 l171 3710  
                                                 l163 3696  
                                                 l155 3620  
                                                 l252 43FC  
                                                 l412 5260  
                                                 l260 51AC  
                                                 l164 36A2  
                                                 l156 3630  
                                                 l237 58F2  
                                                 l333 5D16  
                                                 l309 624E  
                                                 l173 3734  
                                                 l165 36CA  
                                                 l157 3638  
                                                 l238 58BA  
                                                 l422 52B4  
                                                 l414 52A4  
                         __end_of_USBStdGetDscHandler 4222  
                                                 l262 5220  
                                                 l350 50C0  
                                                 l166 36D6  
                                                 l158 364E  
                                                 l183 4BBC  
                                                 l191 47F0  
                                                 l423 52CC  
                                                 l415 527E  
                                                 l271 410E  
                                                 l343 511E  
                                                 l175 3750  
                                                 l159 365A  
                                                 l328 5CAE  
                                                 l248 43A0  
                                                 l424 52D8  
                                                 l360 1B42  
                                                 l272 419C  
                                                 l352 50C6  
                                                 l344 5090  
                                                 l168 36E8  
                                                 l185 4BE6  
                                                 l329 5CB4  
                                                 l249 437E  
                                                 l521 4B96  
                                                 l425 52F0  
                                                 l361 1B48  
                                                 l281 62DE  
                                                 l353 50E4  
                                                 l610 7636  
                                                 l178 81B2  
                                                 l418 52FC  
                                                 l530 5D52  
                                                 l274 41A4  
                                                 l282 626C  
                                                 l354 5100  
                                                 l346 509A  
                                                 l187 4C64  
                                                 l603 763E  
                                                 l179 81C0  
                                                 l371 1C68  
                                                 l363 1BB4  
                                                 l275 41FA  
                                                 l347 50A0  
                                                 l620 088E  
                                                 l604 7602  
                                                 l372 1C84  
                                                 l268 420A  
                                                 l348 50A6  
                                                 l621 0898  
                                                 l381 1D7C  
                                                 l365 1BFC  
                                                 l277 4202  
                                                 l269 40FA  
                                                 l285 62F4  
                                                 l349 50BA  
                                                 l710 5336  
                                                 l702 1818  
                                                 l614 0BE0  
                                                 l630 0A3E  
                                                 l606 761E  
                                                 l518 4B9E  
                                                 l534 5DBA  
                                                 l374 1CEA  
                                                 l286 627E  
                                                 l703 1830  
                                                 l623 08F0  
                                                 l615 086E  
                                                 l519 4B12  
                                                 l375 1CF6  
                                                 l367 1C1E  
                                                 l287 6284  
                                                 l295 7F94  
                                                 l712 534C  
                                                 l704 184A  
                                                 l640 0B08  
                                                 l624 09AA  
                                                 l608 762A  
                                                 l800 6E24  
                                                 l376 1D70  
                                                 l288 62A2  
                                                 l296 7F92  
                                                 l721 53D8  
                                                 l633 0A72  
                                                 l625 09B4  
                                                 l609 7630  
                                                 l561 2150  
                                                 l529 5DF0  
                                                 l369 1C9E  
                                                 l722 53C2  
                                                 l650 0B88  
                                                 l634 0AA0  
                                                 l626 09D4  
                                                 l618 087E  
                                                 l554 223C  
                                                 l562 213A  
                                                 l546 5DC2  
                                                 l810 6E16  
                                                 l715 537C  
                                                 l651 0B9C  
                                                 l571 216C  
                                                 l563 210E  
                                                 l555 2012  
                                                 l379 1D2A  
                                                 l644 0B40  
                                                 l636 0AD4  
                                                 l628 0A04  
                                                 l564 2116  
                                                 l804 6DF2  
                                                 l900 3BB4  
                                                 l661 6916  
                                                 l741 49CA  
                                                 l733 53EA  
                                                 l645 0B54  
                                                 l573 217E  
                                                 l805 6DFA  
                                                 l901 3B2E  
                                                 l750 49FE  
                                                 l718 5388  
                                                 l670 30F4  
                                                 l654 0BD8  
                                                 l646 0B72  
                                                 l638 0AF0  
                                                 l566 212E  
                                                 l806 6E02  
                                                 l902 3B36  
                                                 l751 4A0A  
                                                 l719 53A2  
                                                 l671 30FE  
                                                 l575 21A0  
                                                 l559 2032  
                                                 l903 3B3E  
                                                 l752 4A1C  
                                                 l680 322C  
                                                 l672 3112  
                                                 l648 0B9E  
                                                 l592 44D6  
                                                 l576 21A8  
                                                 l808 6E0C  
                                                 l904 3B46  
                                                 l753 4A28  
                                                 l737 53FA  
                                                 l665 3242  
                                                 l649 0B78  
                                                 l577 21CC  
                                                 l905 3B4E  
                                                 l754 4A3A  
                                                 l674 315C  
                                                 l666 3094  
                                                 l690 167A  
                                                 l586 221E  
                                                 l914 77AC  
                                                 l906 3B56  
                                                 l659 6900  
                                                 l747 4A7C  
                                                 l755 4A70  
                                                 l675 3184  
                                                 l691 1686  
                                                 l907 3B60  
                                                 l748 49F6  
                                                 l668 3266  
                                                 l676 31B4  
                                                 l684 1860  
                                                 l692 16A6  
                                                 l596 456E  
                                                 l764 7A16  
                                                 _BDT 000D00  
                                                 l677 31C6  
                                                 l669 30E8  
                                                 l693 16F0  
                                                 l685 15D4  
                                                 l597 4568  
                                                 l589 2226  
                                                 l933 7C72  
                                                 l917 77D2  
                                                 l678 31CC  
                                                 l694 16CA  
                                                 l926 7C90  
                                                 l918 77E0  
                                                 l679 31E0  
                                                 l687 1884  
                                                 l695 1736  
                                                 l599 4572  
                                                 l767 7A4C  
                                                 l935 7C7E  
                                                 l927 7C56  
                                                 l696 172E  
                                                 l688 1674  
                                                 l929 7C60  
                                                 l698 174A  
                                                 l699 17B2  
                                                 l972 6382  
                                                 l893 3A82  
                                                 l966 6314  
                                                 l894 3A90  
                                                 l896 3B18  
                                                 l898 3B70  
                                                 l899 3B26  
                                                 _LBA 015E  
                                                 _LUN 01B3  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 8766  
                                   main@tx_start_addr 00BD  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DF4  
                                         _start_line2 8E62  
                                         _start_line3 8EA7  
                                         _start_line4 8E22  
                                  api_prepare@command 00B6  
                                          _USBSuspend 8488  
                                  _internalFlash_read 8288  
                              __end_of_display_update 746C  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 35D8  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F8  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 4686  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 014A  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 6824  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                        __parse_file_resize@file_size 0054  
                                 api_prepare@inBuffer 00B2  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1008 893A  
                                                l2001 874E  
                                                l1210 6CF8  
                                                l2003 875E  
                                                l1203 7EB8  
                                                l2020 5788  
                                                l2100 5AEE  
                                                l1204 7E9C  
                                                l1300 5608  
                                                l2101 5AF2  
                                                l1117 8890  
                                                l2110 5B16  
                                                l2102 5AF6  
                                                l1302 5618  
                                                l2023 56FE  
                                                l2111 5B1A  
                                                l2103 5AFA  
                                                l2032 73AC  
                                                l2112 5B1E  
                                                l2104 5AFE  
                                                l2200 3514  
                                                l1232 7A96  
                                                l1304 5628  
                                                l1320 489A  
                                                l2121 1DA8  
                                                l2113 5B22  
                                                l2105 5B02  
                                                l2201 3518  
                                                l1233 7A7A  
                                                l1209 6D14  
                                                l2042 8130  
                                                l2130 1E22  
                                                l2122 1DAC  
                                                l2114 5B26  
                                                l2106 5B06  
                                                l2210 353C  
                                                l2202 351C  
                                                l1154 8A66  
                                                l1090 8714  
                                                l1306 5640  
                                                l1330 4944  
                                                l2131 1E32  
                                                l2123 1DB0  
                                                l2107 5B0A  
                                                l2211 3540  
                                                l2203 3520  
                                                l1091 8702  
                                                l1163 89FA  
                                                l1083 82DC  
                                                l1331 4964  
                                                l1323 48AE  
                                                l2140 1E56  
                                                l2132 1E36  
                                                l2124 1DC2  
                                                l2108 5B0E  
                                                l2212 3544  
                                                l2204 3524  
                                                l1084 82E6  
                                                l1308 5650  
                                                l1324 48C2  
                                                l2029 5772  
                                                l2141 1E5A  
                                                l2133 1E3A  
                                                l2125 1DD2  
                                                l2109 5B12  
                                                l2213 35D4  
                                                l2205 3528  
                                                l2061 4EC8  
                                                l1181 89F2  
                                                l1325 48D8  
                                                l2118 1EC6  
                                                l2150 1E7E  
                                                l2142 1E5E  
                                                l2134 1E3E  
                                                l2126 1DE2  
                                                l2206 352C  
                                                l1510 0CFC  
                                                l2070 2592  
                                                l2222 64A4  
                                                l2047 6B2E  
                                                l2055 6982  
                                                l2151 1E82  
                                                l2143 1E62  
                                                l2135 1E42  
                                                l2127 1DF2  
                                                l2119 1DA4  
                                                l2207 3530  
                                                l2071 25BA  
                                                l2063 4EE0  
                                                l1175 8A06  
                                                l1319 4974  
                                                l1327 4900  
                                                l2080 4E7C  
                                                l2216 8638  
                                                l2160 1EA2  
                                                l2152 1E86  
                                                l2144 1E66  
                                                l2136 1E46  
                                                l2128 1E02  
                                                l2208 3534  
                                                l1512 0DA8  
                                                l2072 2662  
                                                l2064 4F46  
                                                l2400 1092  
                                                l1328 4928  
                                                l2057 69B6  
                                                l2161 1EA6  
                                                l2153 1E8A  
                                                l2145 1E6A  
                                                l2137 1E4A  
                                                l2129 1E12  
                                                l2209 3538  
                                                l1169 8A5E  
                                                l1601 301C  
                                                l2401 110A  
                                                l2090 2432  
                                                l2162 1EAA  
                                                l2154 1E8E  
                                                l2146 1E6E  
                                                l2138 1E4E  
                                                l1514 0E54  
                                                l1602 2FE4  
                                                l1610 4256  
                                                l2402 1184  
                                                l2226 64F4  
                                                l2163 1EAE  
                                                l2155 1E92  
                                                l2147 1E72  
                                                l2139 1E52  
                                                l1195 857C  
                                                l1611 4228  
                                                l2067 24DA  
                                                l2076 4DB8  
                                                l2172 7B18  
                                                l2180 7B14  
                                                l2164 1EB2  
                                                l2156 1E96  
                                                l2148 1E76  
                                                l1196 856E  
                                                l1516 0F00  
                                                l1508 0C52  
                                                l1604 3070  
                                                l2404 11E4  
                                                l1292 5676  
                                                l2173 7AFC  
                                                l2165 1EB6  
                                                l2149 1E7A  
                                                l1197 8590  
                                                l1605 3042  
                                                l1701 7AD8  
                                                l1613 42AA  
                                                l2069 26A4  
                                                l2261 8522  
                                                l2421 0854  
                                                l2405 1216  
                                                l1293 55CE  
                                                l2254 71E0  
                                                l2086 22D4  
                                                l2078 4DC8  
                                                l2166 1EBA  
                                                l2158 1E9A  
                                                l2094 5B2A  
                                                l1198 8572  
                                                l1622 378C  
                                                l1702 7AAA  
                                                l1614 427C  
                                                l1542 5978  
                                                l1550 5966  
                                                l2430 07C8  
                                                l2422 0660  
                                                l2414 04E2  
                                                l2406 1246  
                                                l2087 2474  
                                                l2079 4E84  
                                                l2175 7B00  
                                                l2167 1EBE  
                                                l2159 1E9E  
                                                l2095 5ADE  
                                                l2191 3548  
                                                l1199 8576  
                                                l1471 5E44  
                                                l1631 38B2  
                                                l1623 375E  
                                                l1551 596C  
                                                l1543 5942  
                                                l2263 852C  
                                                l2431 0804  
                                                l2407 12A2  
                                                l1800 87C8  
                                                l2256 7242  
                                                l2088 2362  
                                                l2176 7B04  
                                                l2168 1EC2  
                                                l2192 34F4  
                                                l1632 3884  
                                                l1464 7E42  
                                                l1640 1364  
                                                l1616 42FE  
                                                l1552 5972  
                                                l2520 85FA  
                                                l2280 0188  
                                                l2416 057C  
                                                l1296 55E0  
                                                l2089 238A  
                                                l2177 7B08  
                                                l2097 5AE2  
                                                l2193 34F8  
                                                l2185 3472  
                                                l1625 37E0  
                                                l1641 1336  
                                                l1617 42D0  
                                                l1553 59D6  
                                                l1545 5948  
                                                l2513 6FB6  
                                                l2265 853A  
                                                l2433 0820  
                                                l2425 069C  
                                                l2417 05F4  
                                                l2409 12C8  
                                                l2178 7B0C  
                                                l2098 5AE6  
                                                l2194 34FC  
                                                l1474 5E6A  
                                                l1626 37B2  
                                                l1466 7E4E  
                                                l1650 1408  
                                                l1562 2B0A  
                                                l1554 59C2  
                                                l1546 594E  
                                                l2290 0458  
                                                l2282 033E  
                                                l2418 064E  
                                                l2370 75B6  
                                                l1298 55F0  
                                                l2179 7B10  
                                                l2099 5AEA  
                                                l2195 3500  
                                                l2187 3480  
                                                l3411 7CC4  
                                                l1643 1536  
                                                l1651 13DA  
                                                l1571 2CA4  
                                                l1563 2ADC  
                                                l1555 59C8  
                                                l1547 5954  
                                                l2515 6FC2  
                                                l2283 0310  
                                                l2427 0746  
                                                l2196 3504  
                                                l3412 7CBC  
                                                l1476 5E8E  
                                                l1628 385E  
                                                l3340 74F0  
                                                l1580 3C44  
                                                l1572 2C76  
                                                l1556 59CE  
                                                l1548 595A  
                                                l2380 585A  
                                                l2292 048A  
                                                l2276 003E  
                                                l2428 080A  
                                                l2372 75C2  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 3508  
                                                l2189 34B8  
                                                l3421 80BA  
                                                l1629 3826  
                                                l3341 74E4  
                                                l1645 13B8  
                                                l1637 1310  
                                                l1581 3C16  
                                                l1565 2B5E  
                                                l1557 5A00  
                                                l1549 5960  
                                                l2381 5796  
                                                l2285 039C  
                                                l2429 0750  
                                                l1741 7030  
                                                l1750 7BFE  
                                                l2198 350C  
                                                l3422 80B2  
                                                l1478 5EB2  
                                                l1662 14F8  
                                                l1654 1458  
                                                l1646 138A  
                                                l1638 12E2  
                                                l1566 2B30  
                                                l2382 57EC  
                                                l2286 03C0  
                                                l2278 00B4  
                                                l2366 75D4  
                                                l1742 705C  
                                                l2199 3510  
                                                l3415 7CE4  
                                                l1663 14CA  
                                                l1655 142A  
                                                l1671 32A0  
                                                l1583 3C98  
                                                l2711 2874  
                                                l2279 0202  
                                                l2375 75C8  
                                                l2367 75AA  
                                                l1752 7C26  
                                                l1760 7966  
                                                l3416 7CEE  
                                                l3344 7518  
                                                l1648 1558  
                                                l1592 2EE8  
                                                l1680 33FC  
                                                l1672 3272  
                                                l1584 3C6A  
                                                l1568 2C50  
                                                l2720 6158  
                                                l2392 6584  
                                                l2384 5842  
                                                l2288 0426  
                                                l3425 80D2  
                                                l3601 65E4  
                                                l3345 7526  
                                                l1665 158C  
                                                l1593 2EBA  
                                                l1681 33CE  
                                                l1577 3BF0  
                                                l1569 2C22  
                                                l2721 6174  
                                                l2385 5844  
                                                l2529 82BC  
                                                l1770 70C8  
                                                l1930 78A2  
                                                l2730 63CA  
                                                l3426 80DC  
                                                l3602 6622  
                                                l1690 392E  
                                                l1666 155E  
                                                l1658 14A8  
                                                l1674 32F4  
                                                l1586 3CEC  
                                                l1578 3BC2  
                                                l2722 617A  
                                                l2706 66AC  
                                                l2386 584E  
                                                l2731 63D8  
                                                l1659 147A  
                                                l1595 2F3C  
                                                l1675 32C6  
                                                l1587 3CBE  
                                                l2715 6186  
                                                l2723 6180  
                                                l2651 3F82  
                                                l2900 46F4  
                                                l1772 70E6  
                                                l1932 78DC  
                                                l2732 63E6  
                                                l1692 39B0  
                                                l1596 2F0E  
                                                l2716 6104  
                                                l2652 3EEC  
                                                l2644 3ED6  
                                                l1749 7C40  
                                                l1845 72BC  
                                                l1837 7B9E  
                                                l2733 63F4  
                                                l1693 3982  
                                                l1677 3348  
                                                l2645 3E74  
                                                l3613 8558  
                                                l2397 0FD6  
                                                l2734 6402  
                                                l1686 3908  
                                                l1598 2F90  
                                                l1678 331A  
                                                l2718 6120  
                                                l2670 5A4E  
                                                l2654 3EFA  
                                                l3614 8548  
                                                l2398 0FFA  
                                                l1767 7086  
                                                l1759 795C  
                                                l1847 731E  
                                                l1951 5F7A  
                                                l3607 758C  
                                                l2751 4FD0  
                                                l2727 6422  
                                                l2735 6410  
                                                l1695 3A28  
                                                l1687 38DA  
                                                l1599 2F62  
                                                l2719 613C  
                                                l2671 5AD2  
                                                l2663 5A1C  
                                                l2655 3F0C  
                                                l2647 3E8A  
                                                l1768 7090  
                                                l3608 754E  
                                                l2728 63BC  
                                                l1696 39FA  
                                                l2672 5A66  
                                                l2656 3F1E  
                                                l2648 3EA0  
                                                l1880 83A8  
                                                l3625 6032  
                                                l2745 7D34  
                                                l2729 6456  
                                                l1689 395C  
                                                l2673 5A82  
                                                l2681 605E  
                                                l2657 3F2C  
                                                l2649 3EB6  
                                                l1794 7904  
                                                l2914 6DB4  
                                                l1786 7DAE  
                                                l1946 5F1C  
                                                l1970 1A44  
                                                l1962 18A4  
                                                l3626 5F8C  
                                                l2658 3F3A  
                                                l2923 6C04  
                                                l1795 790E  
                                                l1787 7DB8  
                                                l2763 6F34  
                                                l3627 602A  
                                                l2739 5526  
                                                l2667 5A34  
                                                l2683 6098  
                                                l2659 3F62  
                                                l2908 79F0  
                                                l1956 68B0  
                                                l1980 1AD4  
                                                l1876 83DA  
                                                l1957 684A  
                                                l2917 6DE8  
                                                l1949 5F70  
                                                l1965 1906  
                                                l2757 7364  
                                                l2669 5A9C  
                                                l2693 2E7C  
                                                l2685 60D6  
                                                l2926 6C40  
                                                l1958 6894  
                                                l1982 1B02  
                                                l2694 2EAA  
                                                l2686 60A2  
                                                l1983 1B14  
                                                l1975 1A1E  
                                                l1967 1910  
                                                l2775 7FD4  
                                                l2695 2E82  
                                                l2687 60AE  
                                                l1976 1A26  
                                                l1968 19B0  
                                                l2960 6E98  
                                                l1993 76D0  
                                                l1969 1960  
                                                l2769 45B4  
                                                l1978 1A98  
                                                l2890 817C  
                                                l1995 7722  
                                                l1979 1A90  
                                                l3595 8086  
                                                l2963 6ED8  
                                                l2964 6EE6  
                           ?__offset_from_file_number 0001  
                                                l2894 4780  
                                                l2895 468A  
                                                l3599 65AA  
                                                l2959 6EA4  
                                                l2887 818E  
                                                l2888 816A  
                                                l2897 4690  
                                                l2889 819C  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8DC4  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8CAE  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D43  
                                      _bootloader_run 759E  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 018D  
                                                u7200 5E7A  
                                                u7120 49B6  
                                                u7210 5E9E  
                                                u8030 771E  
                                                u8110 723E  
                                                u7310 5F80  
                                                u8040 5FAC  
                                                u8210 756E  
                                                u7330 6EA8  
                                                u7058 4B32  
                                                u7059 4B44  
                                                u9100 4E02  
                                                u8060 5FE4  
                                                u6540 7CC8  
                                                u7180 5E30  
                                                u9110 4E34  
                                                u8070 601A  
                                                u7190 5E56  
                                                u7094 4B88  
                                                u7078 4B56  
                                                u7255 86C0  
                                                u8047 5FA2  
                                                u7095 4B82  
                                                u7079 4B6A  
                               ??_USBCtrlTrfTxService 0001  
                                                u9120 4E50  
                                                u6720 784A  
                                                u7360 74F4  
                                                u6625 7102  
                                                u9105 4DF8  
                                                u8065 5FDE  
                                                u8217 7564  
                                                u7290 5F42  
                                                u9050 577E  
                                                u6730 7856  
                                                u6570 80BE  
                                                u7610 53BE  
                                                u8170 58E2  
                                                u9115 4E2A  
                                                u8067 5FD4  
                                                u8235 30BA  
                                                u9060 5788  
                                                u6740 7862  
                                                u8077 6010  
                                                u6750 786E  
                                                u8190 5922  
                                                _UCFG 000F39  
                                                u6760 787A  
                                                u6728 784C  
                                                u7640 53D4  
                                                u7480 5D9C  
                                                u9400 4196  
                                                u9241 348A  
                                                u8345 15FA  
                                                u8177 58D8  
                                                u7810 6880  
                                                u9170 22FA  
                                                u6770 7884  
                                                u6738 7858  
                                                u7900 19BC  
                                                u6748 7864  
                                                u7660 53E6  
                                                u8428 16FC  
                                                u9420 41EE  
                                                _UEP0 000F26  
                                                u8429 1710  
                                                u8197 5918  
                                                _UEP1 000F27  
                                                u7910 19E4  
                                                u6758 7870  
                                                u7750 0D10  
                                                u8470 17EC  
                                                u9350 51D8  
                                    ?_fat_create_file 0049  
                                                u6855 7972  
                                                u9175 22F0  
                                                u9407 418C  
                                                u7920 19EC  
                                                u6776 7886  
                                                u6768 787C  
                                                u7760 0DBC  
                                                u7680 53F6  
                                                u8288 3136  
                                                u8480 17EE  
                                                u8368 162E  
                                                u8289 314A  
                                                u8369 1642  
                                                u8570 7E7A  
                                                u7770 0E68  
                                                u9427 41E4  
                                                _UEIE 000F37  
                                                u7780 83D6  
                                                u7790 83A4  
                                                u9390 4166  
                                                u6895 709C  
                                                u7960 1A72  
                                                u7880 1946  
                                                u9640 1D10  
                                                u6985 791A  
                                                u8498 17F4  
                                                u9810 0B1C  
                                                u8499 1806  
                                                u9900 3FF8  
                                                u9820 0B2E  
                                                u9740 09FC  
                                                u9708 08FC  
                                                u9709 0910  
                                                u9397 415C  
                                                u9718 092C  
                                                u9719 0940  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9905 3FEE  
                                                u9850 0BA6  
                                                u8980 8762  
                                                u9758 0A1C  
                                                u9759 0A30  
                                                u9990 69AA  
                               _i2c_digipot_reset_off 8788  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                               __size_of__delete_root 0048  
                                      _ResetSenseData 7662  
              __end_of__fill_buffer_get_configuration 6824  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 6786  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0188  
                                                _main 3A4A  
                                                _itoa 8062  
                          __end_of_fat_append_to_file 6BB4  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5A0C  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 65A2  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 003F  
                             __bootloader_verify_file 0F98  
                           _ExternalFlash_MediaDetect 8A9C  
                                                prodh 000FF4  
                                                prodl 000FF3  
    __get_available_offset_from_buffer@minimum_offset 0001  
                      fat_modify_file@number_of_bytes 0068  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 89A8  
                               _display_get_character 85C2  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DB4  
                                __end_of_failed_line2 8D20  
                                __end_of_failed_line4 8E73  
                             __end_of_fat_modify_file 2496  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 5162  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0039  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0180  
                    __end_of__fat_sector_from_cluster 88C2  
                internalFlash_addressFromPage@address 0005  
                              __get_available_cluster 5EC6  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 38D4  
                       __write_value_to_offset@buffer 0003  
                                      _hex_file_entry 0193  
                              _bootloader_get_entries 8A2A  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                       __write_value_to_offset@offset 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 8456  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                __make_cluster_chain@sector_in_buffer 003C  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 017C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 7E36  
                                               l11303 754E  
                                               l11223 8548  
                                               l10631 5EE8  
                                               l10623 5ECE  
                                               l11271 5890  
                                               l11185 5F8C  
                                               l12401 3480  
                                               l10721 5278  
                                               l14001 57EC  
                                               l13043 697A  
                                               l13115 28E0  
                                               l11531 7E46  
                              ?_i2c_digipot_backlight 0001  
                                               l12501 3548  
                                               l11525 7E3A  
                                               l11381 323C  
                                               l10655 5F80  
                                               l13055 69AE  
                                               l13207 2A6A  
                                               l13143 2968  
                                               l10911 7C7E  
                                               l12409 34B8  
                                               l13217 2A90  
                                               l13129 2924  
                                               l13219 2A98  
                                               l10907 7C60  
                                               l12517 8638  
                                               l13181 2A00  
                                               l13157 29AC  
                                               l10941 0C52  
                                               l14221 60A6  
                                               l15005 07C8  
                             ?__fill_buffer_find_file 0037  
                                               l14119 66A4  
                                               l10839 5388  
                                               l13169 29D2  
                                               l11931 56E0  
                                               l12395 3472  
                                               l13195 2A44  
                                               l13179 29F8  
                                               l15131 36E0  
                                               l14075 6FBA  
                                               l14069 6FAE  
                                               l12817 09CC  
                                               l12585 51A4  
                                               l14425 3DB2  
                                               l11891 8746  
                                               l11965 5788  
                                               l14535 202A  
                                               l12971 402C  
                                               l14397 3D4C  
                                               l14585 2150  
                                               l13849 6FFA  
                                        spi_tx@length 0003  
                                               l14685 5A7C  
                                               l13877 6476  
                                               l13895 64C6  
                                               l14873 0FF2  
                                               l15881 1FF6  
                                               l15865 6E3C  
                                               l15867 6E70  
                                               l15879 1EDE  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 69F6  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10010 69E6  
                                     __end_of___lldiv 6EF8  
                                               u10020 24B4  
                                               u10110 294C  
                                               ?_utoa 0008  
                                               u11000 64AA  
                                               u10025 24AA  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10210 2A62  
                                               u10130 2990  
                                               u10045 254C  
                                               u10230 2A90  
                                               u10150 29CA  
                                               u11030 64FA  
                                               u10250 2AC0  
                                               u10170 29F8  
                                               u10090 2908  
                                               u11130 57BC  
                                               u11050 00A2  
                                               u12020 053E  
                                               u11205 882C  
                                               u10190 2A28  
                                               u11150 5818  
                                               u11215 8300  
                                               u10425 80F2  
                                               u11225 6F88  
                                               u10610 7D30  
                                               u11330 60D4  
                                               u11410 3E16  
                                               u11250 6FDC  
                                               u10515 7254  
                                               u10700 6F30  
                                               u10535 84C6  
                                               u10640 4FCC  
                                     __end_of___llmod 7538  
                                               u10730 45B0  
                                               u11290 2864  
                                               u11530 2026  
                              __end_of_USBDeviceTasks 3758  
                                               u10580 5522  
                                               u11380 3D70  
                                               u12340 3754  
                                               u10670 7360  
                                               u12430 632E  
                                               u11550 205A  
                                               u10760 7FD0  
                                               u11720 2200  
                                               u11801 84F0  
                                               u12450 6342  
                                               u12530 48EA  
                                               u10934 453E  
                                               u10918 450E  
                                               u10870 44A4  
                                               u10935 4538  
                                               u10919 4520  
                                               u11920 1054  
                                               u10858 4472  
                                               u10859 4486  
                                               u10884 44BA  
                                               u12580 495E  
                                               u10885 44B4  
                                               u10894 44EC  
                                               u10895 44E6  
                                               u11785 7D56  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12937 8708  
                                               u12947 7C18  
                                               u12957 7C2A  
                                               u12967 7C34  
                                     __end_of___lwdiv 7CF8  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 80E6  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 0029  
                                _file_minimum_address 0152  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00A5  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00CC  
                      __get_first_cluster@file_number 0038  
                                ?__bootloader_program 0001  
                                        __delete_root 7EC6  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 007C  
                           __end_of__find_nth_cluster 68C2  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 225A  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5D3E  
                     __end_of_internalFlash_getBuffer 89EE  
                     __end_of_USBCtrlEPAllowDataStage 6786  
                                               _sd000 8FCC  
                              __write_value_to_offset 835A  
                                               _sd001 8EE8  
                                               _sd002 8F1C  
                                               _sd003 8F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 7600  
                 i2c_display_send_init_sequence@F6808 01C7  
                       __end_of_MSDTransferTerminated 7A4E  
                                        _gblCBWLength 018F  
                          __end_of__parse_file_delete 7D4A  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 6F7A  
                          __end_of__parse_file_create 5080  
                              __end_of_ResetSenseData 76C4  
                          __end_of__parse_file_modify 4686  
                          __end_of__parse_file_rename 7394  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0098  
                           __data_sector_from_cluster 89B6  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 55CC  
                             ?__fill_buffer_read_file 009E  
                                               pclath 000FFA  
                                     __end_of_ui_init 8930  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00EC  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 8326  
                          __end_of__display_rebooting 7AFA  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 604C  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 009E  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 8662  
             __fill_buffer_get_file_details@outBuffer 003A  
                                      _MSDReadHandler 3092  
                     fat_append_to_file@old_file_size 0093  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0060  
               __bootloader_check_address@byte_status 000B  
                         __end_of__make_cluster_chain 1B1E  
                       internalFlash_readPage@address 0018  
                   __make_cluster_chain@first_cluster 0036  
                                     __initialization 6C48  
                       fat_read_from_file@file_number 0078  
                           __end_of__flash_get_status 8488  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 88DA  
               __end_of_ExternalFlash_MediaInitialize 8878  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 885E  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 4EA6  
                                         _FileAddress 0172  
                                        __end_of_main 3BBC  
                                        __end_of_itoa 80A4  
                       __end_of_system_encoder_enable 8978  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 7AA4  
                                        __end_of_utoa 6646  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 77E4  
                                    _timer_pseudo_isr 82BE  
                       fat_read_from_file_fast@offset 0064  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0068  
                                    __end_of_i2c_init 89D0  
                       fat_read_from_file_fast@sector 0060  
                            __end_of__i2c_acknowledge 8A0C  
                      __end_of__fill_buffer_find_file 66E8  
                     fat_append_to_file@new_file_size 008E  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00D7  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8906  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 017A  
                                api_prepare@outBuffer 00B4  
                                              ??_main 00BB  
                                    __end_of__i2c_get 8A02  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0076  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00BF  
                            _fat_get_file_information 71D4  
                                  __write_root@offset 002D  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 8A9C  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 8A98  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                  __write_root@sector 002B  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 014C  
                               ??__bootloader_program 006E  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                       __get_available_cluster@offset 0032  
                              ?_spi_set_configuration 0001  
                       __get_available_cluster@sector 0034  
                                _i2c_eeprom_writeByte 80E6  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 86FA  
                              __flash_write_to_buffer 7D9A  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 28D8  
                                _start_from_byte_next 018B  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 88DA  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0036  
                                          __i2c_start 8A64  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7E7E  
                           fat_read_from_file@cluster 0079  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 006E  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7B50  
                                    __end_of__get_fbr 2006  
                                    __end_of__get_mbr 5BAA  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 326C  
                                 _flash_pages_written 0174  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 64FE  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 8998  
                   __bootloader_program@page_to_write 00A7  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00F7  
                   fat_append_to_file@number_of_bytes 0056  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 0042  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6FF8  
                        __end_of__flash_set_page_size 7072  
                                     _hexCharsToUint8 880C  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 7394  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E8  
                                           ??___lwmod 0005  
                                              _buffer 03C0  
                                   _USBEnableEndpoint 81A2  
                       __bootloader_program@address32 00A0  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 7538  
                                  ?_fat_get_file_size 0036  
                                              _memset 853E  
                    __end_of__sector_from_file_number 85C2  
                                              clear_0 6C82  
                                              clear_1 6C96  
                                              clear_2 6CA8  
                                              clear_3 6CB4  
                                              clear_4 6CC0  
                                              clear_5 6CCC  
                           _ExternalFlash_SectorWrite 838E  
                                   api_parse@inBuffer 009B  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6E  
                                              _reboot 8878  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4898  
                                              _spi_tx 79A0  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 8424  
              __make_cluster_chain@number_of_clusters 0038  
                                              _tx_buf 01D0  
                                    ?_fat_rename_file 0038  
                          __parse_command_long@length 009A  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0102  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 856A  
                        __end_of_jump_to_main_program 8A7A  
                               __end_of_fat_find_file 578C  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 00B4  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 8C98  
                                 __end_of__i2c_open_1 88AA  
                          __size_of__find_nth_cluster 009E  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 7786  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 7726  
                                              tblptru 000FF8  
                                    __end_of_spi_init 81A2  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00C1  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 7726  
                             __spi_external_rx_buffer 0300  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0044  
                                       main@tx_buffer 00C3  
                               __end_of_ui_get_status 8A92  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F6  
                          ??_APP_DeviceCustomHIDTasks 00B7  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0340  
                                   _SYSTEM_Initialize 7C52  
                               fat_modify_file@length 0046  
                               fat_modify_file@offset 0066  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 6CD2  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                        fat_resize_file@first_cluster 0064  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 89F8  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00A6  
                         __end_of__parse_command_long 645A  
                   __end_of_failed_line3_noNextRecord 8E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 7402  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 81DE  
                            _bootloader_get_file_size 8956  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8F1C  
                                       __end_of_sd002 8F4A  
                                       __end_of_sd003 8FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 8AA0  
                                        __pidataBANK1 86D4  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 0049  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 8A3E  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 8A34  
                           __get_available_root_entry 8742  
                                 fat_rename_file@cntr 005E  
                                 fat_rename_file@name 0038  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 003E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 01B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 12DC  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5D3E  
                                 _userInterfaceStatus 00E6  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 499E  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                           __end_of_i2c_set_frequency 8596  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 89B6  
                             __end_of_system_delay_ms 871E  
                                  __size_of_api_parse 00D0  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0178  
                      __end_of_failed_line3_startCode 8CE9  
                               _communicationSettings 0139  
                                  _flash_sector_write 7B50  
                                  _fat_read_from_file 4EA6  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 004B  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 0C2A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 086C  
                                        _failed_line1 8DA4  
                                        _failed_line2 8D0E  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 0190  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 7CA6  
                                   __end_of__i2c_read 6D64  
                                   __end_of__i2c_send 8A74  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 6260  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 8A64  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 006E  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 00C5  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 4790  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 015A  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 00A0  
                                    _mediaInformation 01AA  
                             __end_of_hexCharsToUint8 8828  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                      __get_available_cluster@cluster 0030  
                       __end_of_fat_get_format_status 64FE  
                     ??__fill_buffer_get_file_details 003C  
                                       __flash_wakeup 7BFC  
                            __fill_buffer_get_display 604C  
                             ?__get_available_cluster 002C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00D1  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4DA8  
               __end_of_APP_DeviceCustomHIDInitialize 835A  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 8326  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                           __bootloader_check_address 578C  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 28D8  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 005C  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                            __size_of_fat_delete_file 0040  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 6B20  
                                             ?_memset 0001  
                                          _device_dsc 8FA5  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 8892  
                                    _USBCtrlEPService 61B4  
                                             ?_ui_run 0001  
                                          _ep_data_in 016F  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                            __delete_root@file_number 002E  
                       fat_append_to_file@file_number 0097  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 38D4  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 4466  
                             ?__write_value_to_offset 0001  
                                  _USBCheckStdRequest 5080  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0056  
                              fat_append_to_file@data 0058  
                                          _flash_init 8844  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 593A  
                                   __end_of__get_data 863C  
                                   __end_of__get_date 8A5C  
                                 _USBStdSetCfgHandler 5162  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 8A52  
                                   __end_of__get_root 35D8  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D74  
                                          _done_line2 8E9F  
                                          _done_line3 8D64  
                                          _done_line4 8D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 891C  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0176  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 6FF8  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 82F2  
                                  __get_first_cluster 7DEA  
                                        __normal_mode 7786  
                          __end_of_APP_DeviceMSDTasks 8944  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 7BFC  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 8978  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0096  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 70EA  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 7072  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB7  
                           ?__sector_from_file_number 0001  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                       fat_read_from_file@return_code 007D  
                                    _system_full_init 77E4  
                                   __read_fat@cluster 0030  
                      __end_of__get_available_cluster 5F8A  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0062  
                      __end_of_bootloader_get_entries 8A34  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 5ADC  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 4466  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 005A  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7CF8  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
           __end_of__get_available_offset_from_buffer 78F0  
          __size_of__get_available_offset_from_buffer 0058  
                 ??__get_available_offset_from_buffer 0005  
                  ?__get_available_offset_from_buffer 0001  
                   __get_available_offset_from_buffer 7898  
                                   __end_of__spi_init 8250  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 6EF8  
                                             __Lparam 0000  
                                  __parse_file_create 4F94  
                                _jump_to_main_program 8A74  
                            __size_of_fat_create_file 013E  
                                   __end_of_hid_rpt01 8F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4AA4  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 4578  
                                  __parse_file_rename 7326  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 7246  
                                  __parse_file_resize 54EA  
                                          _last_error 018C  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0066  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0380  
                   __end_of__data_sector_from_cluster 89C4  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 6E76  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 74D2  
                                             ___lwdiv 7CA6  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 80A4  
                                   _fast_read_cluster 00FB  
                                  __display_rebooting 7AA4  
                         __end_of__parse_format_drive 7FDC  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 004C  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 005A  
                                 ?__parse_file_create 0055  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 8218  
                                             __pcinit 6C48  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE8  
                      __end_of__write_value_to_offset 838E  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3A4A  
                                             __ptext1 4898  
                                     __display_failed 12DC  
                                             __ptext2 8968  
                                             __ptext3 84E6  
                                             __ptext4 8766  
                                             __ptext5 8788  
                                             __ptext6 863C  
                                             __ptext7 55CC  
                                             __ptext8 82BE  
                                 ?__parse_file_modify 0056  
                                             __ptext9 8978  
                                             _inPipes 00CB  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0060  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EE  
                                 ?__parse_file_resize 0051  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 87EC  
                                ??__get_first_cluster 0032  
                             __read_value_from_offset 7F0E  
                             _fat_read_from_file_fast 2496  
                                        ??_USBSuspend 0018  
                                     __display_search 3BBC  
                                  __end_of_USBMSDInit 4BA6  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 8998  
                                             _msd_cbw 000D40  
                                     __display_verify 4222  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 89EE  
                            __offset_from_file_number 86AE  
                                             _ui_init 891C  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8906  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0096  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 5F8A  
                                 _flash_partial_write 72B6  
                                end_of_initialization 6CD2  
                                ??__parse_file_delete 004E  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 79F8  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2EB4  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2CC6  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 005C  
                                ??__parse_file_create 0057  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 00E1  
                                ??__parse_file_modify 0058  
                           __end_of_MSDProcessCommand 4578  
                                             itoa@buf 0011  
                                ??__parse_file_rename 005F  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 0049  
                                ??__parse_file_resize 0053  
                                     _USB1msTickCount 0162  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 8020  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
           __fill_buffer_get_file_details@file_number 003D  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 84B8  
                             _USBCtrlEPAllowDataStage 66E8  
                                   __end_of_spi_tx_rx 6C48  
                                   __end_of_spi_tx_tx 6DF0  
               __end_of__fill_buffer_get_file_details 71D4  
              __size_of__fill_buffer_get_file_details 0072  
                       __fill_buffer_get_file_details 7162  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
        __make_cluster_chain@different_sector_cluster 003E  
                __end_of_ExternalFlash_SectorSizeRead 8A16  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8A0C  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4CA8  
                                             utoa@val 000A  
                                           _MSD_State 00ED  
             __end_of__cluster_from_sector_and_offset 86AE  
            __size_of__cluster_from_sector_and_offset 0026  
                   ??__cluster_from_sector_and_offset 0005  
                    ?__cluster_from_sector_and_offset 0001  
                     __cluster_from_sector_and_offset 8688  
                         __end_of__bootloader_program 086C  
                               _system_encoder_enable 8968  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C4  
                                       ??_api_prepare 0060  
                          _USBStatusStageEnabledFlag1 00F1  
                          _USBStatusStageEnabledFlag2 00F0  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                        __size_of__make_cluster_chain 0294  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                      __end_of__flash_write_to_buffer 7DEA  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       __parse_file_modify@start_byte 005B  
                                   ??_fat_delete_file 0049  
                    __make_cluster_chain@next_cluster 0047  
                              fat_modify_file@cluster 0064  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                     __fill_buffer_find_file@inBuffer 0037  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0250  
                                  _BothEP0OutUOWNsSet 0191  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03C0  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7A4E  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DB4  
                                       _checked_line2 8C99  
                                       _checked_line3 8E73  
                                       _checked_line4 8D32  
                                 __delete_root@offset 002B  
                          ??_bootloader_get_file_size 0005  
                                 __delete_root@sector 0029  
                            _failed_line3_dataTooLong 8E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4CA8  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 61B4  
               __end_of_internalFlash_pageFromAddress 8844  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 8828  
                                __end_of_reboot_line1 8E4C  
                                __end_of_search_line1 8DF4  
                                __end_of_search_line2 8D54  
                                __end_of_search_line3 8CD6  
                                __end_of_search_line4 8E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 76C4  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                  __make_cluster_chain@minimum_sector 003A  
                             __end_of__display_failed 15D2  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0062  
                  __find_nth_cluster@sector_in_buffer 003E  
                        fat_resize_file@new_file_size 0049  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 69F6  
                               ??_flash_partial_write 0028  
                        __write_value_to_offset@value 0005  
                       ??_bootloader_get_rec_checksum 0001  
                      __bootloader_program@entry_page 0078  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3D0E  
                               __end_of_USBDeviceInit 3E5E  
               __end_of_USBIncrement1msInternalTimers 880C  
              __size_of_USBIncrement1msInternalTimers 0020  
                       _USBIncrement1msInternalTimers 87EC  
                                     ??__display_done 001F  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 434E  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0254  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 4898  
                                 _i2c_eeprom_readByte 7D4A  
                                   ??_fat_create_file 0051  
                 __bootloader_program@start_from_byte 00A4  
                  __fill_buffer_read_file@data_length 00AA  
                         __end_of_system_minimal_init 88F0  
                            __size_of_fat_modify_file 023C  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CAE  
                                      __end_of_memcpy 759E  
                                     _MSDRetryAttempt 00E9  
                                      __end_of_memset 856A  
                                      __end_of_reboot 8892  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0192  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 499E  
                                      __end_of_spi_tx 79F8  
               __get_available_root_entry@file_number 0036  
                                 fat_modify_file@data 0048  
                                 __end_of__ui_encoder 56AC  
                           __flash_set_page_size@size 0018  
                                 start_initialization 6C48  
                                 fat_modify_file@root 006E  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 89A8  
                                 __end_of_api_prepare 3FAA  
                   __end_of__get_available_root_entry 8766  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0098  
                                     _USBMSDOutHandle 00DF  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 6B20  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1DA2  
                                 __flash_partial_read 70EA  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 00E7  
                                      _hexCharToUint8 8512  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 5C76  
                            _fast_read_cluster_number 00F9  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 3442  
                            __end_of_USBCtrlEPService 6260  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 81DE  
                                           __i2c_read 6CD8  
                                           __i2c_send 8A6C  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 8A5C  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 003B  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 8A98  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E13  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 00E3  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 7246  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D94  
                                   _programming_line2 8CFC  
                                   _programming_line3 8E83  
                                   _programming_line4 8D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                               spi_init@configuration 0004  
                       fat_append_to_file@return_code 0092  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 40E8  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B3  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 00A6  
                       __end_of_i2c_digipot_backlight 8662  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 8A6C  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0038  
                                  __end_of__i2c_write 7EC6  
                            __end_of_system_full_init 7840  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 00A2  
                      __end_of_USBStdGetStatusHandler 630A  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 00FE  
                            __fat_sector_from_cluster 88AA  
                         api_parse@receivedDataLength 009D  
                   __end_of__bootloader_check_address 5866  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 84E6  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 84B8  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
            __get_available_offset_from_buffer@buffer 0003  
                       __end_of_MSDCheckForErrorCases 5408  
             __bootloader_program@address_within_page 007A  
                          fat_create_file@file_number 0064  
                              __end_of_hexCharToUint8 853E  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0156  
            __get_available_offset_from_buffer@offset 0007  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 87AA  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 72B6  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 8614  
                                           __get_date 8A52  
                                   _flash_sector_read 83F2  
                    __bootloader_program@return_value 009C  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 7F54  
                     __end_of_fat_read_from_file_fast 26BC  
                                           __get_time 8A48  
                                           __get_root 3442  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
                                 __end_of__write_root 8020  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 8288  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 8742  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 7F54  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 003D  
                                           __read_fat 7BA6  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DA4  
                           __end_of_programming_line2 8D0E  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8D94  
                    __end_of_ExternalFlash_SectorRead 83F2  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 8A48  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 8A3E  
                  __get_available_cluster@skip_sector 002E  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 645A  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 5A0C  
                           fat_create_file@root_entry 0065  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 5408  
                                  _APP_DeviceMSDTasks 8930  
                                       __pmediumconst 8C98  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 8A9C  
                                           __ptext101 630A  
                                           __ptext110 85C2  
                                           __ptext102 3E5E  
                                           __ptext111 6786  
                                           __ptext103 26BC  
                                           __ptext200 7072  
                                           __ptext120 6100  
                                           __ptext112 2CC6  
                                           __ptext104 4EA6  
                                           __ptext201 71D4  
                                           __ptext121 86FA  
                                           __ptext113 8A7A  
                                           __ptext105 2496  
                                           __ptext210 76C4  
                                           __ptext202 6824  
                                           __ptext130 2AD6  
                                           __ptext122 8878  
                                           __ptext114 8A16  
                                           __ptext106 5408  
                                           __ptext211 8424  
                                           __ptext203 83F2  
                                           __ptext131 3BBC  
                                           __ptext123 8A8C  
                                           __ptext115 8906  
                                           __ptext107 88F0  
                                           __ptext220 86AE  
                                           __ptext212 4686  
                                           __ptext204 7F0E  
                                           __ptext140 0C2A  
                                           __ptext132 7AA4  
                                           __ptext124 7402  
                                           __ptext116 8A80  
                                           __ptext108 7162  
                                           __ptext221 4BA6  
                                           __ptext213 70EA  
                                           __ptext205 7BA6  
                                           __ptext141 74D2  
                                           __ptext133 326C  
                                           __ptext125 7A4E  
                                           __ptext117 8A86  
                                           __ptext109 604C  
                                           __ptext222 0000  
                                           __ptext214 87AA  
                                           __ptext206 88AA  
                                           __ptext150 65A2  
                                           __ptext142 6E76  
                                           __ptext134 2EB4  
                                           __ptext126 871E  
                                           __ptext118 6646  
                                           __ptext215 7BFC  
                                           __ptext207 88C2  
                                           __ptext151 80A4  
                                           __ptext143 38D4  
                                           __ptext135 8956  
                                           __ptext127 8662  
                                           __ptext119 5A0C  
                                           __ptext216 79A0  
                                           __ptext208 89B6  
                                           __ptext160 63B4  
                                           __ptext152 7CA6  
                                           __ptext144 8A34  
                                           __ptext136 12DC  
                                           __ptext128 593A  
                                           __ptext217 8456  
                                           __ptext209 7394  
                                           __ptext161 7F98  
                                           __ptext153 80E6  
                                           __ptext145 7E36  
                                           __ptext137 8A20  
                                           __ptext129 4222  
                                           __ptext218 6BB4  
                                           __ptext170 695E  
                                           __ptext162 28D8  
                                           __ptext154 856A  
                                           __ptext146 3758  
                                           __ptext138 8A92  
                                           __ptext219 8596  
                                           __ptext171 4578  
                                           __ptext163 3442  
                                           __ptext155 7E7E  
                                           __ptext147 8A3E  
                                           __ptext139 8A2A  
                                           __ptext180 5F8A  
                                           __ptext172 7CF8  
                                           __ptext164 5ADC  
                                           __ptext156 7840  
                                           __ptext148 5E02  
                                           __ptext181 8A48  
                                           __ptext173 8126  
                                           __ptext165 1DA2  
                                           __ptext157 8A5C  
                                           __ptext149 8062  
                                           __ptext190 835A  
                                           __ptext182 8A52  
                                           __ptext174 7DEA  
                                           __ptext166 7AFA  
                                           __ptext158 8A64  
                                           __ptext191 5EC6  
                                           __ptext183 8742  
                                           __ptext175 7EC6  
                                           __ptext167 8614  
                                           __ptext159 8A6C  
                                           __ptext192 7898  
                                           __ptext184 6EF8  
                                           __ptext176 4F94  
                                           __ptext168 54EA  
                                           __ptext193 8688  
                                           __ptext185 6B20  
                                           __ptext177 3FAA  
                                           __ptext169 7326  
                                           __ptext194 225A  
                                           __ptext186 4DA8  
                                           __ptext178 7538  
                                           __ptext195 72B6  
                                           __ptext187 7FDC  
                                           __ptext179 56AC  
                                           __ptext196 7D9A  
                                           __ptext188 188A  
                                           __ptext197 6D64  
                                           __ptext189 7B50  
                                           __ptext198 78F0  
                                           __ptext199 7948  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 0056  
                                            ?___lwdiv 0001  
                                           __spi_init 8218  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                         __size_of_fat_read_from_file 00EE  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6E  
                                         __ui_encoder 55CC  
                           __get_first_cluster@offset 0034  
                                           _idle_rate 01B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0032  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3E5E  
                             __parse_file_delete@data 004C  
                           fat_modify_file@start_byte 0042  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014E  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0049  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 004D  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4BA6  
                          __make_cluster_chain@offset 0045  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                          __make_cluster_chain@sector 0043  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 4790  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6100  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0076  
                              __end_of__flash_is_busy 87CC  
                                       _fat_find_file 56AC  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 007E  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C2A  
                                   __display_itoa_u16 5E02  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 74D2  
                                   ??_fat_modify_file 004A  
                           __end_of_flash_sector_read 8424  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DE4  
                                 __end_of_found_line2 8CFC  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D32  
                                         _ep_data_out 016C  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8A20  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 87AA  
                       _bootloader_get_rec_dataLength 8A16  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00EA  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7E36  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
              __cluster_from_sector_and_offset@offset 0003  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2EB4  
                    __end_of_bootloader_get_file_size 8968  
                                         _file_buffer 0290  
              __cluster_from_sector_and_offset@sector 0001  
                                     _config_internal 0169  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 8A8C  
                                     _config_external 0166  
                                      __display_start 2AD6  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                 __make_cluster_chain 188A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 85EC  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 5326  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 003C  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0094  
                            __fat_offset_from_cluster 88C2  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 0038  
                   __bootloader_verify_file@address32 009B  
                          __end_of_internalFlash_read 82BE  
                                          ?_api_parse 009B  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 005A  
                                            _MSDTasks 2006  
                          _USBDeferINDataStagePackets 00EF  
                                        ??_fat_format 0025  
                                     _fat_delete_file 8126  
                                _active_configuration 018A  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0055  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6A8C  
                          ?__data_sector_from_cluster 0001  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 6BB4  
                                           _spi_tx_tx 6D64  
                                __display_verify@cntr 0021  
                                ?__make_cluster_chain 0036  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00DD  
                 __size_of_spi_get_external_tx_buffer 000A  
                               flash_sector_read@data 002A  
                                __display_programming 326C  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 004C  
                           __end_of__display_itoa_u16 5EC6  
                           __end_of__display_itoa_u32 0F98  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DD4  
                                __end_of_verify_line2 8E59  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                            fat_rename_file@extension 003A  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F5  
                   __end_of_ExternalFlash_MediaDetect 8AA0  
                        __size_of__parse_format_drive 0044  
                                        _reboot_line1 8E3F  
                                        _search_line1 8DE4  
                                        _search_line2 8D43  
                                        _search_line3 8CC2  
                                        _search_line4 8E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 006A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 6100  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 7FDC  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7E7E  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 8A92  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 3092  
                             __end_of_USBStallHandler 7F98  
                            __sector_from_file_number 8596  
                      __end_of_internalFlash_readPage 8062  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 2CC6  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6C5C  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 004D  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 5244  
                         __size_of__parse_file_delete 0052  
                                  __end_of_fat_format 2AD6  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 00EC  
                                 __display_found@cntr 0028  
                                            _i2c_init 89C4  
                  __parse_file_modify@number_of_bytes 0059  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 010E  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00EB  
                         __size_of__parse_file_rename 006E  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 00E2  
                                  __end_of_device_dsc 8FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 89F8  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 3FAA  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0072  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 0058  
                         __end_of_bootloader_filename 8FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 885E  
                                      _TransferLength 00DB  
                                _bootloader_extension 8FC8  
                          __end_of_USBCheckMSDRequest 5E02  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 83C0  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D84  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8D74  
                                  __end_of_done_line4 8D64  
                                      __i2c_wait_idle 7840  
                                     _MSDWriteHandler 15D2  
                        fat_create_file@first_cluster 0062  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                               ??__make_cluster_chain 003A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 018E  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 8988  
                                         _found_line1 8DD4  
                                         _found_line2 8CE9  
                                         _found_line3 8E98  
                                         _found_line4 8D20  
                                            __get_fat 7AFA  
                                            __get_fbr 1DA2  
                                            __get_mbr 5ADC  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 8956  
                          _ExternalFlash_CapacityRead 8944  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 6646  
                        __size_of__bootloader_program 03D0  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 8988  
                    __get_first_cluster@first_cluster 0036  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                          __size_of_flash_sector_read 0032  
                                    __display_checked 3758  
               __end_of_bootloader_get_rec_recordType 8A80  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 8A7A  
                            ??__get_available_cluster 0030  
                                            __ptext10 89A8  
                                            __ptext11 88DA  
                                            __ptext20 8988  
                                            __ptext12 89C4  
                                            __ptext21 645A  
                                            __ptext13 8892  
                                            __ptext30 0020  
                                            __ptext22 87CC  
                                            __ptext14 77E4  
                                            __ptext31 880C  
                                            __ptext23 81DE  
                                            __ptext15 891C  
                                            __ptext40 85EC  
                                            __ptext32 7246  
                                            __ptext24 89D0  
                                            __ptext16 8844  
                                            __ptext41 7726  
                                            __ptext33 8512  
                                            __ptext25 89DA  
                                            __ptext17 8166  
                                            __ptext50 8A02  
                                            __ptext42 84B8  
                                            __ptext34 6F7A  
                                            __ptext26 8A74  
                                            __ptext18 8218  
                                            __ptext51 35D8  
                                            __ptext43 578C  
                                            __ptext35 8020  
                                            __ptext27 759E  
                                            __ptext19 6FF8  
                                            __ptext60 66E8  
                                            __ptext52 8250  
                                            __ptext44 64FE  
                                            __ptext36 8288  
                                            __ptext28 0F98  
                                            __ptext61 5080  
                                            __ptext53 8488  
                                            __ptext45 7786  
                                            __ptext37 8828  
                                            __ptext29 049C  
                                            __ptext70 7C52  
                                            __ptext62 5162  
                                            __ptext54 7F54  
                                            __ptext46 7D4A  
                                            __ptext38 89E4  
                                            __ptext71 79F8  
                                            __ptext63 853E  
                                            __ptext55 87EC  
                                            __ptext47 6CD8  
                                            __ptext39 82F2  
                                            __ptext80 5C76  
                                            __ptext72 8998  
                                            __ptext64 6260  
                                            __ptext56 3D0E  
                                            __ptext48 89EE  
                                            __ptext81 5866  
                                            __ptext73 4AA4  
                                            __ptext65 40E8  
                                            __ptext57 61B4  
                                            __ptext49 89F8  
                                            __ptext90 3092  
                                            __ptext82 8930  
                                            __ptext74 8326  
                                            __ptext66 1B1E  
                                            __ptext58 69F6  
                                            __ptext91 5326  
                                            __ptext83 2006  
                                            __ptext75 81A2  
                                            __ptext67 6DF0  
                                            __ptext59 4CA8  
                                            __ptext92 499E  
                                            __ptext84 4466  
                                            __ptext76 6A8C  
                                            __ptext68 5D3E  
                                            __ptext93 4790  
                                            __ptext85 7600  
                                            __ptext77 746C  
                                            __ptext69 5244  
                                            __ptext94 7662  
                                            __ptext86 086C  
                                            __ptext78 434E  
                                            __ptext95 83C0  
                                            __ptext87 15D2  
                                            __ptext79 5BAA  
                                            __ptext96 68C2  
                                            __ptext88 8A98  
                                            __ptext97 8A0C  
                                            __ptext89 838E  
                                            __ptext98 8944  
                                            __ptext99 885E  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 7662  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 7600  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 0062  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 63B4  
                   __end_of_failed_line3_addressRange 8CC2  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 00A0  
                      __size_of__bootloader_find_file 00A4  
                  __end_of__flash_copy_page_to_buffer 79A0  
                          __flash_copy_page_to_buffer 7948  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 63B4  
                       __end_of__bootloader_find_file 65A2  
                        __end_of_i2c_digipot_reset_on 8788  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 7C52  
                      __end_of_USBCtrlTrfSetupHandler 6A8C  
                                       __size_of_main 0172  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 8166  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 26BC  
                         __end_of_flash_partial_write 7326  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 0066  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 7F0E  
                    __size_of__bootloader_verify_file 0344  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 8A86  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 8A80  
                                 _USBCtrlTrfInHandler 5C76  
                  _MSDProcessCommandMediaPresent$2390 003C  
                            ??__write_value_to_offset 0007  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 009E  
                              __end_of__i2c_wait_idle 7898  
               fat_resize_file@old_number_of_clusters 0060  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 8166  
                                _USBCtrlTrfOutHandler 746C  
                    __end_of__offset_from_file_number 86D4  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 5BAA  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 89E4  
                                ?__parse_command_long 0098  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
              __make_cluster_chain@remaining_clusters 0041  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3A4A  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00F2  
                  __end_of_spi_get_external_rx_buffer 89E4  
                          _spi_get_external_rx_buffer 89DA  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 54EA  
                             __parse_file_modify@data 0056  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 8614  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 85EC  
                             _internalFlash_erasePage 82F2  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 89DA  
                          _spi_get_external_tx_buffer 89D0  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 007B  
                __end_of_MSDComputeDeviceInAndResidue 695E  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 68C2  
                          fat_modify_file@return_code 0063  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E04  
                                 __end_of_start_line2 8E6B  
                                 __end_of_start_line3 8EA8  
                                 __end_of_start_line4 8E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                          fat_rename_file@return_code 003C  
                                       _flash_is_busy 88F0  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8A02  
                              bootloader_run@timeslot 005C  
                             __end_of_fat_create_file 40E8  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0062  
                             __parse_file_rename@data 0060  
                              __size_of_USBDeviceInit 0150  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6E76  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6DF0  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 83C0  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 7948  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 78F0  
                SYSTEM_Initialize@pll_startup_counter 0001  
                        fat_read_from_file@start_byte 006E  
                                     _display_content 0200  
                          __end_of_flash_partial_read 8456  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 188A  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                             __write_root@file_number 002F  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 8A8C  
                         _bootloader_get_rec_checksum 8A86  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                                 fat_resize_file@root 0067  
                        __bootloader_verify_file@root 0076  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 593A  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E04  
                                 _USBCtrlTrfRxService 434E  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 8250  
                               ??__parse_command_long 0060  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 871E  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1B1E  
                                     _fat_modify_file 225A  
                        __fill_buffer_read_file@start 00AE  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 5866  
                                        ?_api_prepare 00B2  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0182  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 863C  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8A2A  
                          _bootloader_get_rec_address 8A20  
                               _USBAlternateInterface 01AF  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 7D9A  
                          __delete_root@deleted_value 002D  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0186  
                    __make_cluster_chain@data_changed 0040  
                             __parse_file_resize@data 0051  
                           _failed_line3_noNextRecord 8E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 695E  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F4  
                                      _display_update 7402  
                                      ??__normal_mode 0019  
                 __get_available_cluster@first_sector 002C  
                                      ?_flash_is_busy 0001  
                     __size_of__get_available_cluster 00C4  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CD6  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 5326  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 8688  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0184  
                             _internalFlash_writePage 6F7A  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4AA4  
                        _USBStatusStageTimeoutCounter 00F3  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 7162  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 8126  
                                        _verify_line1 8DC4  
                                        _verify_line2 8E4C  
                                        _verify_line3 8E8A  
                                 __parse_format_drive 7F98  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 00E5  
                                         _USBInHandle 017E  
                            _APP_DeviceCustomHIDTasks 630A  
                          __end_of_flash_sector_write 7BA6  
