

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Oct 07 14:23:34 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=2
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=2
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=2
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=2
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	text222,global,reloc=2,class=CODE,delta=1
   244                           	psect	text223,global,reloc=2,class=CODE,delta=1
   245                           	psect	text224,global,reloc=2,class=CODE,delta=1
   246                           	psect	text225,global,reloc=2,class=CODE,delta=1
   247                           	psect	text226,global,reloc=2,class=CODE,delta=1
   248                           	psect	text227,global,reloc=2,class=CODE,delta=1
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	text229,global,reloc=2,class=CODE,delta=1
   251                           	psect	text230,global,reloc=2,class=CODE,delta=1
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	text232,global,reloc=2,class=CODE,delta=1
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	text235,global,reloc=2,class=CODE,delta=1
   257                           	psect	text236,global,reloc=2,class=CODE,delta=1
   258                           	psect	text237,global,reloc=2,class=CODE,delta=1
   259                           	psect	text238,global,reloc=2,class=CODE,delta=1
   260                           	psect	text239,global,reloc=2,class=CODE,delta=1
   261                           	psect	text240,global,reloc=2,class=CODE,delta=1
   262                           	psect	text241,global,reloc=2,class=CODE,delta=1
   263                           	psect	text242,global,reloc=2,class=CODE,delta=1
   264                           	psect	text243,global,reloc=2,class=CODE,delta=1
   265                           	psect	text244,global,reloc=2,class=CODE,delta=1
   266                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   267                           	psect	text245,global,reloc=2,class=CODE,delta=1
   268                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   269                           	dabs	1,0x600,512,_msd_buffer
   270                           	dabs	1,0xD00,48,_BDT
   271                           	dabs	1,0xD40,31,_msd_cbw
   272                           	dabs	1,0xD80,13,_msd_csw
   273                           	dabs	1,0xD38,8,_CtrlTrfData
   274                           	dabs	1,0xD30,8,_SetupPkt
   275  0000                     
   276                           ; Version 2.00
   277                           ; Generated 27/05/2018 GMT
   278                           ; 
   279                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   280                           ; All rights reserved.
   281                           ; 
   282                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   283                           ; 
   284                           ; Redistribution and use in source and binary forms, with or without modification, are
   285                           ; permitted provided that the following conditions are met:
   286                           ; 
   287                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   288                           ;        conditions and the following disclaimer.
   289                           ; 
   290                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   291                           ;        of conditions and the following disclaimer in the documentation and/or other
   292                           ;        materials provided with the distribution.
   293                           ; 
   294                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   295                           ;        software without specific prior written permission.
   296                           ; 
   297                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   298                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   299                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   300                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   301                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   302                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   303                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   304                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   305                           ; 
   306                           ; 
   307                           ; Code-generator required, PIC18F47J53 Definitions
   308                           ; 
   309                           ; SFR Addresses
   310  0000                     
   311                           	psect	intcode
   312  000008  EF04 F060          	goto	49160	;# 
   313                           
   314                           	psect	intcodelo
   315  000018  EF0C F060          	goto	49176	; ;# 
   316  0000                     
   317                           	psect	idataBANK0
   318  00A13C                     __pidataBANK0:
   319                           	opt stack 0
   320                           
   321                           ;initializer for _file_number
   322  00A13C  FF                 	db	255
   323                           
   324                           	psect	idataBANK1
   325  009D16                     __pidataBANK1:
   326                           	opt stack 0
   327                           
   328                           ;initializer for _LUN
   329  009D16  FA                 	db	low _ExternalFlash_MediaInitialize
   330  009D17  9E                 	db	high _ExternalFlash_MediaInitialize
   331  009D18  E0                 	db	low _ExternalFlash_CapacityRead
   332  009D19  9F                 	db	high _ExternalFlash_CapacityRead
   333  009D1A  A8                 	db	low _ExternalFlash_SectorSizeRead
   334  009D1B  A0                 	db	high _ExternalFlash_SectorSizeRead
   335  009D1C  38                 	db	low _ExternalFlash_MediaDetect
   336  009D1D  A1                 	db	high _ExternalFlash_MediaDetect
   337  009D1E  80                 	db	low _ExternalFlash_SectorRead
   338  009D1F  99                 	db	high _ExternalFlash_SectorRead
   339  009D20  34                 	db	low _ExternalFlash_WriteProtectStateGet
   340  009D21  A1                 	db	high _ExternalFlash_WriteProtectStateGet
   341  009D22  4E                 	db	low _ExternalFlash_SectorWrite
   342  009D23  99                 	db	high _ExternalFlash_SectorWrite
   343  009D24  00                 	db	0
   344  009D25  00                 	db	0
   345  009D26  00                 	db	0
   346  009D27  00                 	db	0
   347  009D28  00                 	db	0
   348  009D29  00                 	db	0
   349                           
   350                           ;initializer for i2c_display_send_init_sequence@F6812
   351  009D2A  3A                 	db	58
   352  009D2B  1E                 	db	30
   353  009D2C  39                 	db	57
   354  009D2D  0C                 	db	12
   355  009D2E  74                 	db	116
   356  009D2F  5C                 	db	92
   357  009D30  6D                 	db	109
   358  009D31  0C                 	db	12
   359  009D32  01                 	db	1
   360                           
   361                           ;initializer for _tx_buf
   362  009D33  01                 	db	1
   363  009D34  02                 	db	2
   364  009D35  03                 	db	3
   365  009D36  04                 	db	4
   366  009D37  05                 	db	5
   367  009D38  06                 	db	6
   368  009D39  07                 	db	7
   369  009D3A  08                 	db	8
   370                           
   371                           	psect	mediumconst
   372  00BC6C                     __pmediumconst:
   373                           	opt stack 0
   374  00BC6C  00                 	db	0
   375  00BC6D                     _checked_line2:
   376                           	opt stack 0
   377  00BC6D  46                 	db	70
   378  00BC6E  69                 	db	105
   379  00BC6F  6C                 	db	108
   380  00BC70  65                 	db	101
   381  00BC71  20                 	db	32
   382  00BC72  63                 	db	99
   383  00BC73  68                 	db	104
   384  00BC74  65                 	db	101
   385  00BC75  63                 	db	99
   386  00BC76  6B                 	db	107
   387  00BC77  20                 	db	32
   388  00BC78  63                 	db	99
   389  00BC79  6F                 	db	111
   390  00BC7A  6D                 	db	109
   391  00BC7B  70                 	db	112
   392  00BC7C  6C                 	db	108
   393  00BC7D  65                 	db	101
   394  00BC7E  74                 	db	116
   395  00BC7F  65                 	db	101
   396  00BC80  64                 	db	100
   397  00BC81  00                 	db	0
   398  00BC82                     __end_of_checked_line2:
   399                           	opt stack 0
   400  00BC82                     _failed_line3_addressRange:
   401                           	opt stack 0
   402  00BC82  41                 	db	65
   403  00BC83  64                 	db	100
   404  00BC84  64                 	db	100
   405  00BC85  72                 	db	114
   406  00BC86  2E                 	db	46
   407  00BC87  20                 	db	32
   408  00BC88  6F                 	db	111
   409  00BC89  75                 	db	117
   410  00BC8A  74                 	db	116
   411  00BC8B  73                 	db	115
   412  00BC8C  69                 	db	105
   413  00BC8D  64                 	db	100
   414  00BC8E  65                 	db	101
   415  00BC8F  20                 	db	32
   416  00BC90  72                 	db	114
   417  00BC91  61                 	db	97
   418  00BC92  6E                 	db	110
   419  00BC93  67                 	db	103
   420  00BC94  65                 	db	101
   421  00BC95  00                 	db	0
   422  00BC96                     __end_of_failed_line3_addressRange:
   423                           	opt stack 0
   424  00BC96                     _search_line3:
   425                           	opt stack 0
   426  00BC96  46                 	db	70
   427  00BC97  49                 	db	73
   428  00BC98  52                 	db	82
   429  00BC99  4D                 	db	77
   430  00BC9A  57                 	db	87
   431  00BC9B  41                 	db	65
   432  00BC9C  52                 	db	82
   433  00BC9D  45                 	db	69
   434  00BC9E  2E                 	db	46
   435  00BC9F  48                 	db	72
   436  00BCA0  45                 	db	69
   437  00BCA1  58                 	db	88
   438  00BCA2  20                 	db	32
   439  00BCA3  6F                 	db	111
   440  00BCA4  6E                 	db	110
   441  00BCA5  20                 	db	32
   442  00BCA6  55                 	db	85
   443  00BCA7  53                 	db	83
   444  00BCA8  42                 	db	66
   445  00BCA9  00                 	db	0
   446  00BCAA                     __end_of_search_line3:
   447                           	opt stack 0
   448  00BCAA                     _failed_line3_startCode:
   449                           	opt stack 0
   450  00BCAA  4D                 	db	77
   451  00BCAB  69                 	db	105
   452  00BCAC  73                 	db	115
   453  00BCAD  73                 	db	115
   454  00BCAE  69                 	db	105
   455  00BCAF  6E                 	db	110
   456  00BCB0  67                 	db	103
   457  00BCB1  20                 	db	32
   458  00BCB2  73                 	db	115
   459  00BCB3  74                 	db	116
   460  00BCB4  61                 	db	97
   461  00BCB5  72                 	db	114
   462  00BCB6  74                 	db	116
   463  00BCB7  20                 	db	32
   464  00BCB8  63                 	db	99
   465  00BCB9  6F                 	db	111
   466  00BCBA  64                 	db	100
   467  00BCBB  65                 	db	101
   468  00BCBC  00                 	db	0
   469  00BCBD                     __end_of_failed_line3_startCode:
   470                           	opt stack 0
   471  00BCBD                     _found_line2:
   472                           	opt stack 0
   473  00BCBD  46                 	db	70
   474  00BCBE  49                 	db	73
   475  00BCBF  52                 	db	82
   476  00BCC0  4D                 	db	77
   477  00BCC1  57                 	db	87
   478  00BCC2  41                 	db	65
   479  00BCC3  52                 	db	82
   480  00BCC4  45                 	db	69
   481  00BCC5  2E                 	db	46
   482  00BCC6  48                 	db	72
   483  00BCC7  45                 	db	69
   484  00BCC8  58                 	db	88
   485  00BCC9  20                 	db	32
   486  00BCCA  66                 	db	102
   487  00BCCB  6F                 	db	111
   488  00BCCC  75                 	db	117
   489  00BCCD  6E                 	db	110
   490  00BCCE  64                 	db	100
   491  00BCCF  00                 	db	0
   492  00BCD0                     __end_of_found_line2:
   493                           	opt stack 0
   494  00BCD0                     _programming_line2:
   495                           	opt stack 0
   496  00BCD0  50                 	db	80
   497  00BCD1  72                 	db	114
   498  00BCD2  6F                 	db	111
   499  00BCD3  67                 	db	103
   500  00BCD4  72                 	db	114
   501  00BCD5  61                 	db	97
   502  00BCD6  6D                 	db	109
   503  00BCD7  6D                 	db	109
   504  00BCD8  69                 	db	105
   505  00BCD9  6E                 	db	110
   506  00BCDA  67                 	db	103
   507  00BCDB  20                 	db	32
   508  00BCDC  66                 	db	102
   509  00BCDD  6C                 	db	108
   510  00BCDE  61                 	db	97
   511  00BCDF  73                 	db	115
   512  00BCE0  68                 	db	104
   513  00BCE1  00                 	db	0
   514  00BCE2                     __end_of_programming_line2:
   515                           	opt stack 0
   516  00BCE2                     _failed_line2:
   517                           	opt stack 0
   518  00BCE2  46                 	db	70
   519  00BCE3  69                 	db	105
   520  00BCE4  6C                 	db	108
   521  00BCE5  65                 	db	101
   522  00BCE6  20                 	db	32
   523  00BCE7  63                 	db	99
   524  00BCE8  68                 	db	104
   525  00BCE9  65                 	db	101
   526  00BCEA  63                 	db	99
   527  00BCEB  6B                 	db	107
   528  00BCEC  20                 	db	32
   529  00BCED  66                 	db	102
   530  00BCEE  61                 	db	97
   531  00BCEF  69                 	db	105
   532  00BCF0  6C                 	db	108
   533  00BCF1  65                 	db	101
   534  00BCF2  64                 	db	100
   535  00BCF3  00                 	db	0
   536  00BCF4                     __end_of_failed_line2:
   537                           	opt stack 0
   538  00BCF4                     _found_line4:
   539                           	opt stack 0
   540  00BCF4  50                 	db	80
   541  00BCF5  72                 	db	114
   542  00BCF6  65                 	db	101
   543  00BCF7  73                 	db	115
   544  00BCF8  73                 	db	115
   545  00BCF9  20                 	db	32
   546  00BCFA  74                 	db	116
   547  00BCFB  6F                 	db	111
   548  00BCFC  20                 	db	32
   549  00BCFD  75                 	db	117
   550  00BCFE  73                 	db	115
   551  00BCFF  65                 	db	101
   552  00BD00  20                 	db	32
   553  00BD01  66                 	db	102
   554  00BD02  69                 	db	105
   555  00BD03  6C                 	db	108
   556  00BD04  65                 	db	101
   557  00BD05  00                 	db	0
   558  00BD06                     __end_of_found_line4:
   559                           	opt stack 0
   560  00BD06                     _checked_line4:
   561                           	opt stack 0
   562  00BD06  50                 	db	80
   563  00BD07  72                 	db	114
   564  00BD08  65                 	db	101
   565  00BD09  73                 	db	115
   566  00BD0A  73                 	db	115
   567  00BD0B  20                 	db	32
   568  00BD0C  74                 	db	116
   569  00BD0D  6F                 	db	111
   570  00BD0E  20                 	db	32
   571  00BD0F  70                 	db	112
   572  00BD10  72                 	db	114
   573  00BD11  6F                 	db	111
   574  00BD12  67                 	db	103
   575  00BD13  72                 	db	114
   576  00BD14  61                 	db	97
   577  00BD15  6D                 	db	109
   578  00BD16  00                 	db	0
   579  00BD17                     __end_of_checked_line4:
   580                           	opt stack 0
   581  00BD17                     _search_line2:
   582                           	opt stack 0
   583  00BD17  4C                 	db	76
   584  00BD18  6F                 	db	111
   585  00BD19  6F                 	db	111
   586  00BD1A  6B                 	db	107
   587  00BD1B  69                 	db	105
   588  00BD1C  6E                 	db	110
   589  00BD1D  67                 	db	103
   590  00BD1E  20                 	db	32
   591  00BD1F  66                 	db	102
   592  00BD20  6F                 	db	111
   593  00BD21  72                 	db	114
   594  00BD22  20                 	db	32
   595  00BD23  66                 	db	102
   596  00BD24  69                 	db	105
   597  00BD25  6C                 	db	108
   598  00BD26  65                 	db	101
   599  00BD27  00                 	db	0
   600  00BD28                     __end_of_search_line2:
   601                           	opt stack 0
   602  00BD28                     _suspended_line4:
   603                           	opt stack 0
   604  00BD28  50                 	db	80
   605  00BD29  72                 	db	114
   606  00BD2A  65                 	db	101
   607  00BD2B  73                 	db	115
   608  00BD2C  73                 	db	115
   609  00BD2D  20                 	db	32
   610  00BD2E  74                 	db	116
   611  00BD2F  6F                 	db	111
   612  00BD30  20                 	db	32
   613  00BD31  72                 	db	114
   614  00BD32  65                 	db	101
   615  00BD33  73                 	db	115
   616  00BD34  75                 	db	117
   617  00BD35  6D                 	db	109
   618  00BD36  65                 	db	101
   619  00BD37  00                 	db	0
   620  00BD38                     __end_of_suspended_line4:
   621                           	opt stack 0
   622  00BD38                     _suspended_line1:
   623                           	opt stack 0
   624  00BD38  42                 	db	66
   625  00BD39  6F                 	db	111
   626  00BD3A  6F                 	db	111
   627  00BD3B  74                 	db	116
   628  00BD3C  6C                 	db	108
   629  00BD3D  6F                 	db	111
   630  00BD3E  61                 	db	97
   631  00BD3F  64                 	db	100
   632  00BD40  65                 	db	101
   633  00BD41  72                 	db	114
   634  00BD42  20                 	db	32
   635  00BD43  4D                 	db	77
   636  00BD44  6F                 	db	111
   637  00BD45  64                 	db	100
   638  00BD46  65                 	db	101
   639  00BD47  00                 	db	0
   640  00BD48                     __end_of_suspended_line1:
   641                           	opt stack 0
   642  00BD48                     _done_line4:
   643                           	opt stack 0
   644  00BD48  50                 	db	80
   645  00BD49  72                 	db	114
   646  00BD4A  65                 	db	101
   647  00BD4B  73                 	db	115
   648  00BD4C  73                 	db	115
   649  00BD4D  20                 	db	32
   650  00BD4E  74                 	db	116
   651  00BD4F  6F                 	db	111
   652  00BD50  20                 	db	32
   653  00BD51  72                 	db	114
   654  00BD52  65                 	db	101
   655  00BD53  62                 	db	98
   656  00BD54  6F                 	db	111
   657  00BD55  6F                 	db	111
   658  00BD56  74                 	db	116
   659  00BD57  00                 	db	0
   660  00BD58                     __end_of_done_line4:
   661                           	opt stack 0
   662  00BD58                     _done_line3:
   663                           	opt stack 0
   664  00BD58  50                 	db	80
   665  00BD59  61                 	db	97
   666  00BD5A  67                 	db	103
   667  00BD5B  65                 	db	101
   668  00BD5C  73                 	db	115
   669  00BD5D  20                 	db	32
   670  00BD5E  77                 	db	119
   671  00BD5F  72                 	db	114
   672  00BD60  69                 	db	105
   673  00BD61  74                 	db	116
   674  00BD62  74                 	db	116
   675  00BD63  65                 	db	101
   676  00BD64  6E                 	db	110
   677  00BD65  3A                 	db	58
   678  00BD66  20                 	db	32
   679  00BD67  00                 	db	0
   680  00BD68                     __end_of_done_line3:
   681                           	opt stack 0
   682  00BD68                     _done_line1:
   683                           	opt stack 0
   684  00BD68  42                 	db	66
   685  00BD69  6F                 	db	111
   686  00BD6A  6F                 	db	111
   687  00BD6B  74                 	db	116
   688  00BD6C  6C                 	db	108
   689  00BD6D  6F                 	db	111
   690  00BD6E  61                 	db	97
   691  00BD6F  64                 	db	100
   692  00BD70  65                 	db	101
   693  00BD71  72                 	db	114
   694  00BD72  20                 	db	32
   695  00BD73  4D                 	db	77
   696  00BD74  6F                 	db	111
   697  00BD75  64                 	db	100
   698  00BD76  65                 	db	101
   699  00BD77  00                 	db	0
   700  00BD78                     __end_of_done_line1:
   701                           	opt stack 0
   702  00BD78                     _programming_line4:
   703                           	opt stack 0
   704  00BD78  50                 	db	80
   705  00BD79  61                 	db	97
   706  00BD7A  67                 	db	103
   707  00BD7B  65                 	db	101
   708  00BD7C  73                 	db	115
   709  00BD7D  20                 	db	32
   710  00BD7E  77                 	db	119
   711  00BD7F  72                 	db	114
   712  00BD80  69                 	db	105
   713  00BD81  74                 	db	116
   714  00BD82  74                 	db	116
   715  00BD83  65                 	db	101
   716  00BD84  6E                 	db	110
   717  00BD85  3A                 	db	58
   718  00BD86  20                 	db	32
   719  00BD87  00                 	db	0
   720  00BD88                     __end_of_programming_line4:
   721                           	opt stack 0
   722  00BD88                     _programming_line1:
   723                           	opt stack 0
   724  00BD88  42                 	db	66
   725  00BD89  6F                 	db	111
   726  00BD8A  6F                 	db	111
   727  00BD8B  74                 	db	116
   728  00BD8C  6C                 	db	108
   729  00BD8D  6F                 	db	111
   730  00BD8E  61                 	db	97
   731  00BD8F  64                 	db	100
   732  00BD90  65                 	db	101
   733  00BD91  72                 	db	114
   734  00BD92  20                 	db	32
   735  00BD93  4D                 	db	77
   736  00BD94  6F                 	db	111
   737  00BD95  64                 	db	100
   738  00BD96  65                 	db	101
   739  00BD97  00                 	db	0
   740  00BD98                     __end_of_programming_line1:
   741                           	opt stack 0
   742  00BD98                     _failed_line1:
   743                           	opt stack 0
   744  00BD98  42                 	db	66
   745  00BD99  6F                 	db	111
   746  00BD9A  6F                 	db	111
   747  00BD9B  74                 	db	116
   748  00BD9C  6C                 	db	108
   749  00BD9D  6F                 	db	111
   750  00BD9E  61                 	db	97
   751  00BD9F  64                 	db	100
   752  00BDA0  65                 	db	101
   753  00BDA1  72                 	db	114
   754  00BDA2  20                 	db	32
   755  00BDA3  4D                 	db	77
   756  00BDA4  6F                 	db	111
   757  00BDA5  64                 	db	100
   758  00BDA6  65                 	db	101
   759  00BDA7  00                 	db	0
   760  00BDA8                     __end_of_failed_line1:
   761                           	opt stack 0
   762  00BDA8                     _checked_line1:
   763                           	opt stack 0
   764  00BDA8  42                 	db	66
   765  00BDA9  6F                 	db	111
   766  00BDAA  6F                 	db	111
   767  00BDAB  74                 	db	116
   768  00BDAC  6C                 	db	108
   769  00BDAD  6F                 	db	111
   770  00BDAE  61                 	db	97
   771  00BDAF  64                 	db	100
   772  00BDB0  65                 	db	101
   773  00BDB1  72                 	db	114
   774  00BDB2  20                 	db	32
   775  00BDB3  4D                 	db	77
   776  00BDB4  6F                 	db	111
   777  00BDB5  64                 	db	100
   778  00BDB6  65                 	db	101
   779  00BDB7  00                 	db	0
   780  00BDB8                     __end_of_checked_line1:
   781                           	opt stack 0
   782  00BDB8                     _verify_line1:
   783                           	opt stack 0
   784  00BDB8  42                 	db	66
   785  00BDB9  6F                 	db	111
   786  00BDBA  6F                 	db	111
   787  00BDBB  74                 	db	116
   788  00BDBC  6C                 	db	108
   789  00BDBD  6F                 	db	111
   790  00BDBE  61                 	db	97
   791  00BDBF  64                 	db	100
   792  00BDC0  65                 	db	101
   793  00BDC1  72                 	db	114
   794  00BDC2  20                 	db	32
   795  00BDC3  4D                 	db	77
   796  00BDC4  6F                 	db	111
   797  00BDC5  64                 	db	100
   798  00BDC6  65                 	db	101
   799  00BDC7  00                 	db	0
   800  00BDC8                     __end_of_verify_line1:
   801                           	opt stack 0
   802  00BDC8                     _found_line1:
   803                           	opt stack 0
   804  00BDC8  42                 	db	66
   805  00BDC9  6F                 	db	111
   806  00BDCA  6F                 	db	111
   807  00BDCB  74                 	db	116
   808  00BDCC  6C                 	db	108
   809  00BDCD  6F                 	db	111
   810  00BDCE  61                 	db	97
   811  00BDCF  64                 	db	100
   812  00BDD0  65                 	db	101
   813  00BDD1  72                 	db	114
   814  00BDD2  20                 	db	32
   815  00BDD3  4D                 	db	77
   816  00BDD4  6F                 	db	111
   817  00BDD5  64                 	db	100
   818  00BDD6  65                 	db	101
   819  00BDD7  00                 	db	0
   820  00BDD8                     __end_of_found_line1:
   821                           	opt stack 0
   822  00BDD8                     _search_line1:
   823                           	opt stack 0
   824  00BDD8  42                 	db	66
   825  00BDD9  6F                 	db	111
   826  00BDDA  6F                 	db	111
   827  00BDDB  74                 	db	116
   828  00BDDC  6C                 	db	108
   829  00BDDD  6F                 	db	111
   830  00BDDE  61                 	db	97
   831  00BDDF  64                 	db	100
   832  00BDE0  65                 	db	101
   833  00BDE1  72                 	db	114
   834  00BDE2  20                 	db	32
   835  00BDE3  4D                 	db	77
   836  00BDE4  6F                 	db	111
   837  00BDE5  64                 	db	100
   838  00BDE6  65                 	db	101
   839  00BDE7  00                 	db	0
   840  00BDE8                     __end_of_search_line1:
   841                           	opt stack 0
   842  00BDE8                     _start_line1:
   843                           	opt stack 0
   844  00BDE8  42                 	db	66
   845  00BDE9  6F                 	db	111
   846  00BDEA  6F                 	db	111
   847  00BDEB  74                 	db	116
   848  00BDEC  6C                 	db	108
   849  00BDED  6F                 	db	111
   850  00BDEE  61                 	db	97
   851  00BDEF  64                 	db	100
   852  00BDF0  65                 	db	101
   853  00BDF1  72                 	db	114
   854  00BDF2  20                 	db	32
   855  00BDF3  4D                 	db	77
   856  00BDF4  6F                 	db	111
   857  00BDF5  64                 	db	100
   858  00BDF6  65                 	db	101
   859  00BDF7  00                 	db	0
   860  00BDF8                     __end_of_start_line1:
   861                           	opt stack 0
   862  00BDF8                     _failed_line3_checksum:
   863                           	opt stack 0
   864  00BDF8  43                 	db	67
   865  00BDF9  68                 	db	104
   866  00BDFA  65                 	db	101
   867  00BDFB  63                 	db	99
   868  00BDFC  6B                 	db	107
   869  00BDFD  73                 	db	115
   870  00BDFE  75                 	db	117
   871  00BDFF  6D                 	db	109
   872  00BE00  20                 	db	32
   873  00BE01  65                 	db	101
   874  00BE02  72                 	db	114
   875  00BE03  72                 	db	114
   876  00BE04  6F                 	db	111
   877  00BE05  72                 	db	114
   878  00BE06  00                 	db	0
   879  00BE07                     __end_of_failed_line3_checksum:
   880                           	opt stack 0
   881  00BE07                     _failed_line3_noNextRecord:
   882                           	opt stack 0
   883  00BE07  4E                 	db	78
   884  00BE08  6F                 	db	111
   885  00BE09  20                 	db	32
   886  00BE0A  6E                 	db	110
   887  00BE0B  65                 	db	101
   888  00BE0C  78                 	db	120
   889  00BE0D  74                 	db	116
   890  00BE0E  20                 	db	32
   891  00BE0F  72                 	db	114
   892  00BE10  65                 	db	101
   893  00BE11  63                 	db	99
   894  00BE12  6F                 	db	111
   895  00BE13  72                 	db	114
   896  00BE14  64                 	db	100
   897  00BE15  00                 	db	0
   898  00BE16                     __end_of_failed_line3_noNextRecord:
   899                           	opt stack 0
   900  00BE16                     _start_line4:
   901                           	opt stack 0
   902  00BE16  73                 	db	115
   903  00BE17  6F                 	db	111
   904  00BE18  6C                 	db	108
   905  00BE19  64                 	db	100
   906  00BE1A  65                 	db	101
   907  00BE1B  72                 	db	114
   908  00BE1C  6E                 	db	110
   909  00BE1D  65                 	db	101
   910  00BE1E  72                 	db	114
   911  00BE1F  64                 	db	100
   912  00BE20  2E                 	db	46
   913  00BE21  63                 	db	99
   914  00BE22  6F                 	db	111
   915  00BE23  6D                 	db	109
   916  00BE24  00                 	db	0
   917  00BE25                     __end_of_start_line4:
   918                           	opt stack 0
   919  00BE25                     _failed_line3_dataTooLong:
   920                           	opt stack 0
   921  00BE25  44                 	db	68
   922  00BE26  61                 	db	97
   923  00BE27  74                 	db	116
   924  00BE28  61                 	db	97
   925  00BE29  20                 	db	32
   926  00BE2A  74                 	db	116
   927  00BE2B  6F                 	db	111
   928  00BE2C  6F                 	db	111
   929  00BE2D  20                 	db	32
   930  00BE2E  6C                 	db	108
   931  00BE2F  6F                 	db	111
   932  00BE30  6E                 	db	110
   933  00BE31  67                 	db	103
   934  00BE32  00                 	db	0
   935  00BE33                     __end_of_failed_line3_dataTooLong:
   936                           	opt stack 0
   937  00BE33                     _reboot_line1:
   938                           	opt stack 0
   939  00BE33  52                 	db	82
   940  00BE34  65                 	db	101
   941  00BE35  62                 	db	98
   942  00BE36  6F                 	db	111
   943  00BE37  6F                 	db	111
   944  00BE38  74                 	db	116
   945  00BE39  69                 	db	105
   946  00BE3A  6E                 	db	110
   947  00BE3B  67                 	db	103
   948  00BE3C  2E                 	db	46
   949  00BE3D  2E                 	db	46
   950  00BE3E  2E                 	db	46
   951  00BE3F  00                 	db	0
   952  00BE40                     __end_of_reboot_line1:
   953                           	opt stack 0
   954  00BE40                     _verify_line2:
   955                           	opt stack 0
   956  00BE40  56                 	db	86
   957  00BE41  65                 	db	101
   958  00BE42  72                 	db	114
   959  00BE43  69                 	db	105
   960  00BE44  66                 	db	102
   961  00BE45  79                 	db	121
   962  00BE46  69                 	db	105
   963  00BE47  6E                 	db	110
   964  00BE48  67                 	db	103
   965  00BE49  2E                 	db	46
   966  00BE4A  2E                 	db	46
   967  00BE4B  2E                 	db	46
   968  00BE4C  00                 	db	0
   969  00BE4D                     __end_of_verify_line2:
   970                           	opt stack 0
   971  00BE4D                     _suspended_line2:
   972                           	opt stack 0
   973  00BE4D  53                 	db	83
   974  00BE4E  75                 	db	117
   975  00BE4F  73                 	db	115
   976  00BE50  70                 	db	112
   977  00BE51  65                 	db	101
   978  00BE52  6E                 	db	110
   979  00BE53  64                 	db	100
   980  00BE54  65                 	db	101
   981  00BE55  64                 	db	100
   982  00BE56  00                 	db	0
   983  00BE57                     __end_of_suspended_line2:
   984                           	opt stack 0
   985  00BE57                     _search_line4:
   986                           	opt stack 0
   987  00BE57  64                 	db	100
   988  00BE58  72                 	db	114
   989  00BE59  69                 	db	105
   990  00BE5A  76                 	db	118
   991  00BE5B  65                 	db	101
   992  00BE5C  2E                 	db	46
   993  00BE5D  2E                 	db	46
   994  00BE5E  2E                 	db	46
   995  00BE5F  00                 	db	0
   996  00BE60                     __end_of_search_line4:
   997                           	opt stack 0
   998  00BE60                     _start_line2:
   999                           	opt stack 0
  1000  00BE60  56                 	db	86
  1001  00BE61  65                 	db	101
  1002  00BE62  72                 	db	114
  1003  00BE63  73                 	db	115
  1004  00BE64  69                 	db	105
  1005  00BE65  6F                 	db	111
  1006  00BE66  6E                 	db	110
  1007  00BE67  20                 	db	32
  1008  00BE68  00                 	db	0
  1009  00BE69                     __end_of_start_line2:
  1010                           	opt stack 0
  1011  00BE69                     _failed_line4:
  1012                           	opt stack 0
  1013  00BE69  52                 	db	82
  1014  00BE6A  65                 	db	101
  1015  00BE6B  63                 	db	99
  1016  00BE6C  6F                 	db	111
  1017  00BE6D  72                 	db	114
  1018  00BE6E  64                 	db	100
  1019  00BE6F  20                 	db	32
  1020  00BE70  00                 	db	0
  1021  00BE71                     __end_of_failed_line4:
  1022                           	opt stack 0
  1023  00BE71                     _checked_line3:
  1024                           	opt stack 0
  1025  00BE71  72                 	db	114
  1026  00BE72  65                 	db	101
  1027  00BE73  63                 	db	99
  1028  00BE74  6F                 	db	111
  1029  00BE75  72                 	db	114
  1030  00BE76  64                 	db	100
  1031  00BE77  73                 	db	115
  1032  00BE78  00                 	db	0
  1033  00BE79                     __end_of_checked_line3:
  1034                           	opt stack 0
  1035  00BE79                     _USB_SD_Ptr:
  1036                           	opt stack 0
  1037  00BE79  CB                 	db	low _sd000
  1038  00BE7A  BF                 	db	high _sd000
  1039  00BE7B  E7                 	db	low _sd001
  1040  00BE7C  BE                 	db	high _sd001
  1041  00BE7D  1B                 	db	low _sd002
  1042  00BE7E  BF                 	db	high _sd002
  1043  00BE7F  8A                 	db	low _sd003
  1044  00BE80  BF                 	db	high _sd003
  1045  00BE81                     __end_of_USB_SD_Ptr:
  1046                           	opt stack 0
  1047  00BE81                     _programming_line3:
  1048                           	opt stack 0
  1049  00BE81  45                 	db	69
  1050  00BE82  6E                 	db	110
  1051  00BE83  74                 	db	116
  1052  00BE84  72                 	db	114
  1053  00BE85  79                 	db	121
  1054  00BE86  20                 	db	32
  1055  00BE87  00                 	db	0
  1056  00BE88                     __end_of_programming_line3:
  1057                           	opt stack 0
  1058  00BE88                     _verify_line3:
  1059                           	opt stack 0
  1060  00BE88  52                 	db	82
  1061  00BE89  65                 	db	101
  1062  00BE8A  63                 	db	99
  1063  00BE8B  6F                 	db	111
  1064  00BE8C  72                 	db	114
  1065  00BE8D  64                 	db	100
  1066  00BE8E  00                 	db	0
  1067  00BE8F                     __end_of_verify_line3:
  1068                           	opt stack 0
  1069  00BE8F                     _found_line3b:
  1070                           	opt stack 0
  1071  00BE8F  20                 	db	32
  1072  00BE90  62                 	db	98
  1073  00BE91  79                 	db	121
  1074  00BE92  74                 	db	116
  1075  00BE93  65                 	db	101
  1076  00BE94  73                 	db	115
  1077  00BE95  00                 	db	0
  1078  00BE96                     __end_of_found_line3b:
  1079                           	opt stack 0
  1080  00BE96                     _found_line3:
  1081                           	opt stack 0
  1082  00BE96  53                 	db	83
  1083  00BE97  69                 	db	105
  1084  00BE98  7A                 	db	122
  1085  00BE99  65                 	db	101
  1086  00BE9A  3A                 	db	58
  1087  00BE9B  20                 	db	32
  1088  00BE9C  00                 	db	0
  1089  00BE9D                     __end_of_found_line3:
  1090                           	opt stack 0
  1091  00BE9D                     _done_line2:
  1092                           	opt stack 0
  1093  00BE9D  44                 	db	68
  1094  00BE9E  6F                 	db	111
  1095  00BE9F  6E                 	db	110
  1096  00BEA0  65                 	db	101
  1097  00BEA1  21                 	db	33
  1098  00BEA2  00                 	db	0
  1099  00BEA3                     __end_of_done_line2:
  1100                           	opt stack 0
  1101  00BEA3                     _USB_CD_Ptr:
  1102                           	opt stack 0
  1103  00BEA3  A7                 	db	low _configDescriptor1
  1104  00BEA4  BE                 	db	high _configDescriptor1
  1105  00BEA5                     __end_of_USB_CD_Ptr:
  1106                           	opt stack 0
  1107  00BEA5                     _suspended_line3:
  1108                           	opt stack 0
  1109  00BEA5  00                 	db	0
  1110  00BEA6                     __end_of_suspended_line3:
  1111                           	opt stack 0
  1112  00BEA6                     _start_line3:
  1113                           	opt stack 0
  1114  00BEA6  00                 	db	0
  1115  00BEA7                     __end_of_start_line3:
  1116                           	opt stack 0
  1117  00BEA7                     _configDescriptor1:
  1118                           	opt stack 0
  1119  00BEA7  09                 	db	9
  1120  00BEA8  02                 	db	2
  1121  00BEA9  40                 	db	64
  1122  00BEAA  00                 	db	0
  1123  00BEAB  02                 	db	2
  1124  00BEAC  01                 	db	1
  1125  00BEAD  00                 	db	0
  1126  00BEAE  C0                 	db	192
  1127  00BEAF  32                 	db	50
  1128  00BEB0  09                 	db	9
  1129  00BEB1  04                 	db	4
  1130  00BEB2  00                 	db	0
  1131  00BEB3  00                 	db	0
  1132  00BEB4  02                 	db	2
  1133  00BEB5  03                 	db	3
  1134  00BEB6  00                 	db	0
  1135  00BEB7  00                 	db	0
  1136  00BEB8  00                 	db	0
  1137  00BEB9  09                 	db	9
  1138  00BEBA  21                 	db	33
  1139  00BEBB  11                 	db	17
  1140  00BEBC  01                 	db	1
  1141  00BEBD  00                 	db	0
  1142  00BEBE  01                 	db	1
  1143  00BEBF  22                 	db	34
  1144  00BEC0  1D                 	db	29
  1145  00BEC1  00                 	db	0
  1146  00BEC2  07                 	db	7
  1147  00BEC3  05                 	db	5
  1148  00BEC4  81                 	db	129
  1149  00BEC5  03                 	db	3
  1150  00BEC6  40                 	db	64
  1151  00BEC7  00                 	db	0
  1152  00BEC8  01                 	db	1
  1153  00BEC9  07                 	db	7
  1154  00BECA  05                 	db	5
  1155  00BECB  01                 	db	1
  1156  00BECC  03                 	db	3
  1157  00BECD  40                 	db	64
  1158  00BECE  00                 	db	0
  1159  00BECF  01                 	db	1
  1160  00BED0  09                 	db	9
  1161  00BED1  04                 	db	4
  1162  00BED2  01                 	db	1
  1163  00BED3  00                 	db	0
  1164  00BED4  02                 	db	2
  1165  00BED5  08                 	db	8
  1166  00BED6  06                 	db	6
  1167  00BED7  50                 	db	80
  1168  00BED8  00                 	db	0
  1169  00BED9  07                 	db	7
  1170  00BEDA  05                 	db	5
  1171  00BEDB  82                 	db	130
  1172  00BEDC  02                 	db	2
  1173  00BEDD  40                 	db	64
  1174  00BEDE  00                 	db	0
  1175  00BEDF  01                 	db	1
  1176  00BEE0  07                 	db	7
  1177  00BEE1  05                 	db	5
  1178  00BEE2  02                 	db	2
  1179  00BEE3  02                 	db	2
  1180  00BEE4  40                 	db	64
  1181  00BEE5  00                 	db	0
  1182  00BEE6  01                 	db	1
  1183  00BEE7                     __end_of_configDescriptor1:
  1184                           	opt stack 0
  1185  00BEE7                     _sd001:
  1186                           	opt stack 0
  1187  00BEE7  34                 	db	52
  1188  00BEE8  03                 	db	3
  1189  00BEE9  0053               	dw	83
  1190  00BEEB  006F               	dw	111
  1191  00BEED  006C               	dw	108
  1192  00BEEF  0064               	dw	100
  1193  00BEF1  0065               	dw	101
  1194  00BEF3  0072               	dw	114
  1195  00BEF5  006E               	dw	110
  1196  00BEF7  0065               	dw	101
  1197  00BEF9  0072               	dw	114
  1198  00BEFB  0064               	dw	100
  1199  00BEFD  002E               	dw	46
  1200  00BEFF  0063               	dw	99
  1201  00BF01  006F               	dw	111
  1202  00BF03  006D               	dw	109
  1203  00BF05  0020               	dw	32
  1204  00BF07  0020               	dw	32
  1205  00BF09  0020               	dw	32
  1206  00BF0B  0020               	dw	32
  1207  00BF0D  0020               	dw	32
  1208  00BF0F  0020               	dw	32
  1209  00BF11  0020               	dw	32
  1210  00BF13  0020               	dw	32
  1211  00BF15  0020               	dw	32
  1212  00BF17  0020               	dw	32
  1213  00BF19  0020               	dw	32
  1214  00BF1B                     __end_of_sd001:
  1215                           	opt stack 0
  1216  00BF1B                     _sd002:
  1217                           	opt stack 0
  1218  00BF1B  2E                 	db	46
  1219  00BF1C  03                 	db	3
  1220  00BF1D  004D               	dw	77
  1221  00BF1F  0050               	dw	80
  1222  00BF21  0050               	dw	80
  1223  00BF23  0054               	dw	84
  1224  00BF25  0053               	dw	83
  1225  00BF27  006F               	dw	111
  1226  00BF29  006C               	dw	108
  1227  00BF2B  0061               	dw	97
  1228  00BF2D  0072               	dw	114
  1229  00BF2F  0020               	dw	32
  1230  00BF31  0043               	dw	67
  1231  00BF33  0068               	dw	104
  1232  00BF35  0061               	dw	97
  1233  00BF37  0072               	dw	114
  1234  00BF39  0067               	dw	103
  1235  00BF3B  0065               	dw	101
  1236  00BF3D  0072               	dw	114
  1237  00BF3F  0020               	dw	32
  1238  00BF41  0052               	dw	82
  1239  00BF43  0065               	dw	101
  1240  00BF45  0076               	dw	118
  1241  00BF47  0043               	dw	67
  1242  00BF49                     __end_of_sd002:
  1243                           	opt stack 0
  1244  00BF49                     _inq_resp:
  1245                           	opt stack 0
  1246  00BF49  00                 	db	0
  1247  00BF4A  80                 	db	128
  1248  00BF4B  04                 	db	4
  1249  00BF4C  02                 	db	2
  1250  00BF4D  20                 	db	32
  1251  00BF4E  00                 	db	0
  1252  00BF4F  00                 	db	0
  1253  00BF50  00                 	db	0
  1254  00BF51  4D                 	db	77
  1255  00BF52  69                 	db	105
  1256  00BF53  63                 	db	99
  1257  00BF54  72                 	db	114
  1258  00BF55  6F                 	db	111
  1259  00BF56  63                 	db	99
  1260  00BF57  68                 	db	104
  1261  00BF58  70                 	db	112
  1262  00BF59  4D                 	db	77
  1263  00BF5A  61                 	db	97
  1264  00BF5B  73                 	db	115
  1265  00BF5C  73                 	db	115
  1266  00BF5D  20                 	db	32
  1267  00BF5E  53                 	db	83
  1268  00BF5F  74                 	db	116
  1269  00BF60  6F                 	db	111
  1270  00BF61  72                 	db	114
  1271  00BF62  61                 	db	97
  1272  00BF63  67                 	db	103
  1273  00BF64  65                 	db	101
  1274  00BF65  20                 	db	32
  1275  00BF66  20                 	db	32
  1276  00BF67  20                 	db	32
  1277  00BF68  20                 	db	32
  1278  00BF69  30                 	db	48
  1279  00BF6A  30                 	db	48
  1280  00BF6B  30                 	db	48
  1281  00BF6C  31                 	db	49
  1282  00BF6D                     __end_of_inq_resp:
  1283                           	opt stack 0
  1284  00BF6D                     _hid_rpt01:
  1285                           	opt stack 0
  1286  00BF6D  06                 	db	6
  1287  00BF6E  00                 	db	0
  1288  00BF6F  FF                 	db	255
  1289  00BF70  09                 	db	9
  1290  00BF71  01                 	db	1
  1291  00BF72  A1                 	db	161
  1292  00BF73  01                 	db	1
  1293  00BF74  19                 	db	25
  1294  00BF75  01                 	db	1
  1295  00BF76  29                 	db	41
  1296  00BF77  40                 	db	64
  1297  00BF78  15                 	db	21
  1298  00BF79  00                 	db	0
  1299  00BF7A  26                 	db	38
  1300  00BF7B  FF                 	db	255
  1301  00BF7C  00                 	db	0
  1302  00BF7D  75                 	db	117
  1303  00BF7E  08                 	db	8
  1304  00BF7F  95                 	db	149
  1305  00BF80  40                 	db	64
  1306  00BF81  81                 	db	129
  1307  00BF82  00                 	db	0
  1308  00BF83  19                 	db	25
  1309  00BF84  01                 	db	1
  1310  00BF85  29                 	db	41
  1311  00BF86  40                 	db	64
  1312  00BF87  91                 	db	145
  1313  00BF88  00                 	db	0
  1314  00BF89  C0                 	db	192
  1315  00BF8A                     __end_of_hid_rpt01:
  1316                           	opt stack 0
  1317  00BF8A                     _sd003:
  1318                           	opt stack 0
  1319  00BF8A  1A                 	db	26
  1320  00BF8B  03                 	db	3
  1321  00BF8C  0031               	dw	49
  1322  00BF8E  0032               	dw	50
  1323  00BF90  0033               	dw	51
  1324  00BF92  0034               	dw	52
  1325  00BF94  0035               	dw	53
  1326  00BF96  0036               	dw	54
  1327  00BF98  0037               	dw	55
  1328  00BF9A  0038               	dw	56
  1329  00BF9C  0039               	dw	57
  1330  00BF9E  0030               	dw	48
  1331  00BFA0  0039               	dw	57
  1332  00BFA2  0039               	dw	57
  1333  00BFA4                     __end_of_sd003:
  1334                           	opt stack 0
  1335  00BFA4                     _device_dsc:
  1336                           	opt stack 0
  1337  00BFA4  12                 	db	18
  1338  00BFA5  01                 	db	1
  1339  00BFA6  0200               	dw	512
  1340  00BFA8  00                 	db	0
  1341  00BFA9  00                 	db	0
  1342  00BFAA  00                 	db	0
  1343  00BFAB  08                 	db	8
  1344  00BFAC  04D8               	dw	1240
  1345  00BFAE  F08E               	dw	61582
  1346  00BFB0  0100               	dw	256
  1347  00BFB2  01                 	db	1
  1348  00BFB3  02                 	db	2
  1349  00BFB4  00                 	db	0
  1350  00BFB5  01                 	db	1
  1351  00BFB6                     __end_of_device_dsc:
  1352                           	opt stack 0
  1353  00BFB6                     _bootloader_filename:
  1354                           	opt stack 0
  1355  00BFB6  46                 	db	70
  1356  00BFB7  49                 	db	73
  1357  00BFB8  52                 	db	82
  1358  00BFB9  4D                 	db	77
  1359  00BFBA  57                 	db	87
  1360  00BFBB  41                 	db	65
  1361  00BFBC  52                 	db	82
  1362  00BFBD  45                 	db	69
  1363  00BFBE  00                 	db	0
  1364  00BFBF                     __end_of_bootloader_filename:
  1365                           	opt stack 0
  1366  00BFBF                     _flash_command_pagesize_528:
  1367                           	opt stack 0
  1368  00BFBF  3D                 	db	61
  1369  00BFC0  2A                 	db	42
  1370  00BFC1  80                 	db	128
  1371  00BFC2  A7                 	db	167
  1372  00BFC3                     __end_of_flash_command_pagesize_528:
  1373                           	opt stack 0
  1374  00BFC3                     _flash_command_pagesize_512:
  1375                           	opt stack 0
  1376  00BFC3  3D                 	db	61
  1377  00BFC4  2A                 	db	42
  1378  00BFC5  80                 	db	128
  1379  00BFC6  A6                 	db	166
  1380  00BFC7                     __end_of_flash_command_pagesize_512:
  1381                           	opt stack 0
  1382  00BFC7                     _bootloader_extension:
  1383                           	opt stack 0
  1384  00BFC7  48                 	db	72
  1385  00BFC8  45                 	db	69
  1386  00BFC9  58                 	db	88
  1387  00BFCA  00                 	db	0
  1388  00BFCB                     __end_of_bootloader_extension:
  1389                           	opt stack 0
  1390  00BFCB                     _sd000:
  1391                           	opt stack 0
  1392  00BFCB  04                 	db	4
  1393  00BFCC  03                 	db	3
  1394  00BFCD  0409               	dw	1033
  1395  00BFCF                     __end_of_sd000:
  1396                           	opt stack 0
  1397  0000                     _RPINR23	set	3838
  1398  0000                     _RPOR23	set	3799
  1399  0000                     _RPINR22	set	3837
  1400  0000                     _RPOR22	set	3798
  1401  0000                     _RPOR21	set	3797
  1402  0000                     _RPINR21	set	3836
  1403  0000                     _RPINR2	set	3810
  1404  0000                     _RPINR3	set	3811
  1405  0000                     _RPINR1	set	3809
  1406  0000                     _PPSCONbits	set	3775
  1407  0000                     _ODCON3bits	set	3904
  1408  0000                     _ANCON0bits	set	3912
  1409  0000                     _UEP0bits	set	3878
  1410  0000                     _UIEbits	set	3894
  1411  0000                     _UADDR	set	3896
  1412  0000                     _UIE	set	3894
  1413  0000                     _UEIE	set	3895
  1414  0000                     _UCFG	set	3897
  1415  0000                     _UEP1	set	3879
  1416  0000                     _UEP0	set	3878
  1417  0000                     _TBLPTR	set	4086
  1418  0000                     _DMACON2bits	set	3974
  1419  0000                     _SSP2CON1bits	set	3954
  1420  0000                     _SSP2STATbits	set	3955
  1421  0000                     _INTCON	set	4082
  1422  0000                     _EECON1	set	4006
  1423  0000                     _TABLAT	set	4085
  1424  0000                     _EECON1bits	set	4006
  1425  0000                     _SSP1CON1	set	4038
  1426  0000                     _SSP1BUF	set	4041
  1427  0000                     _SSP1CON2bits	set	4037
  1428  0000                     _SSP1CON1bits	set	4038
  1429  0000                     _SSP1ADD	set	4040
  1430  0000                     _SSP1STATbits	set	4039
  1431  0000                     _LATEbits	set	3981
  1432  0000                     _TRISEbits	set	3990
  1433  0000                     _LATBbits	set	3978
  1434  0000                     _TRISBbits	set	3987
  1435  0000                     _LATDbits	set	3980
  1436  0000                     _TRISDbits	set	3989
  1437  0000                     _LATCbits	set	3979
  1438  0000                     _TRISCbits	set	3988
  1439  0000                     _T0CONbits	set	4053
  1440  0000                     _INTCON2bits	set	4081
  1441  0000                     _EECON2	set	4007
  1442  0000                     _PORTBbits	set	3969
  1443  0000                     _INTCON3bits	set	4080
  1444  0000                     _TMR0L	set	4054
  1445  0000                     _TMR0H	set	4055
  1446  0000                     _INTCONbits	set	4082
  1447  0000                     _OSCCON	set	4051
  1448  0000                     _OSCTUNEbits	set	3995
  1449  0000                     _PORTAbits	set	3968
  1450  0000                     _TRISAbits	set	3986
  1451  0000                     _LATAbits	set	3977
  1452  0000                     _PIR3bits	set	4004
  1453  0000                     _DMABCL	set	3943
  1454  0000                     _DMABCH	set	3942
  1455  0000                     _RXADDRL	set	3945
  1456  0000                     _RXADDRH	set	3944
  1457  0000                     _DMACON1bits	set	3976
  1458  0000                     _TXADDRL	set	3947
  1459  0000                     _TXADDRH	set	3946
  1460  0000                     _PORTDbits	set	3971
  1461  0000                     _USTAT	set	3940
  1462  0000                     _PIR2bits	set	4001
  1463  0000                     _UCON	set	3941
  1464  0000                     _UIRbits	set	3938
  1465  0000                     _UCONbits	set	3941
  1466  0000                     _UIR	set	3938
  1467  0000                     _UEIR	set	3939
  1468  0000                     _PIE2bits	set	4000
  1469  00BFCF                     STR_12:
  1470  00BFCF  68                 	db	104	;'h'
  1471  00BFD0  65                 	db	101	;'e'
  1472  00BFD1  6C                 	db	108	;'l'
  1473  00BFD2  6C                 	db	108	;'l'
  1474  00BFD3  6F                 	db	111	;'o'
  1475  00BFD4  20                 	db	32
  1476  00BFD5  77                 	db	119	;'w'
  1477  00BFD6  6F                 	db	111	;'o'
  1478  00BFD7  72                 	db	114	;'r'
  1479  00BFD8  6C                 	db	108	;'l'
  1480  00BFD9  64                 	db	100	;'d'
  1481  00BFDA  21                 	db	33
  1482  00BFDB  00                 	db	0
  1483  00BFDC                     STR_9:
  1484  00BFDC  53                 	db	83	;'S'
  1485  00BFDD  6F                 	db	111	;'o'
  1486  00BFDE  6C                 	db	108	;'l'
  1487  00BFDF  61                 	db	97	;'a'
  1488  00BFE0  72                 	db	114	;'r'
  1489  00BFE1  43                 	db	67	;'C'
  1490  00BFE2  68                 	db	104	;'h'
  1491  00BFE3  61                 	db	97	;'a'
  1492  00BFE4  72                 	db	114	;'r'
  1493  00BFE5  67                 	db	103	;'g'
  1494  00BFE6  72                 	db	114	;'r'
  1495  00BFE7  00                 	db	0
  1496  00BFE8                     STR_10:
  1497  00BFE8  46                 	db	70	;'F'
  1498  00BFE9  49                 	db	73	;'I'
  1499  00BFEA  4C                 	db	76	;'L'
  1500  00BFEB  45                 	db	69	;'E'
  1501  00BFEC  20                 	db	32
  1502  00BFED  20                 	db	32
  1503  00BFEE  20                 	db	32
  1504  00BFEF  20                 	db	32
  1505  00BFF0  00                 	db	0
  1506  00BFF1                     STR_1:
  1507  00BFF1  4D                 	db	77	;'M'
  1508  00BFF2  53                 	db	83	;'S'
  1509  00BFF3  44                 	db	68	;'D'
  1510  00BFF4  4F                 	db	79	;'O'
  1511  00BFF5  53                 	db	83	;'S'
  1512  00BFF6  35                 	db	53	;'5'
  1513  00BFF7  2E                 	db	46
  1514  00BFF8  30                 	db	48	;'0'
  1515  00BFF9  00                 	db	0
  1516  00BFFA                     STR_11:
  1517  00BFFA  54                 	db	84	;'T'
  1518  00BFFB  58                 	db	88	;'X'
  1519  00BFFC  54                 	db	84	;'T'
  1520  00BFFD  00                 	db	0
  1521  0000                     
  1522                           ; #config settings
  1523  00BFFE  00                 	db	0	; dummy byte at the end
  1524  0000                     
  1525                           	psect	cinit
  1526  0082F0                     __pcinit:
  1527                           	opt stack 0
  1528  0082F0                     start_initialization:
  1529                           	opt stack 0
  1530  0082F0                     __initialization:
  1531                           	opt stack 0
  1532                           
  1533                           ; Initialize objects allocated to BANK1 (37 bytes)
  1534                           ; load TBLPTR registers with __pidataBANK1
  1535  0082F0  0E16               	movlw	low __pidataBANK1
  1536  0082F2  6EF6               	movwf	tblptrl,c
  1537  0082F4  0E9D               	movlw	high __pidataBANK1
  1538  0082F6  6EF7               	movwf	tblptrh,c
  1539  0082F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1540  0082FA  6EF8               	movwf	tblptru,c
  1541  0082FC  EE01  F0AF         	lfsr	0,__pdataBANK1
  1542  008300  EE10 F025          	lfsr	1,37
  1543  008304                     copy_data0:
  1544  008304  0009               	tblrd		*+
  1545  008306  CFF5 FFEE          	movff	tablat,postinc0
  1546  00830A  50E5               	movf	postdec1,w,c
  1547  00830C  50E1               	movf	fsr1l,w,c
  1548  00830E  E1FA               	bnz	copy_data0
  1549                           
  1550                           ; Initialize objects allocated to BANK0 (1 bytes)
  1551                           ; load TBLPTR registers with __pidataBANK0
  1552  008310  0E3C               	movlw	low __pidataBANK0
  1553  008312  6EF6               	movwf	tblptrl,c
  1554  008314  0EA1               	movlw	high __pidataBANK0
  1555  008316  6EF7               	movwf	tblptrh,c
  1556  008318  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1557  00831A  6EF8               	movwf	tblptru,c
  1558  00831C  0009               	tblrd		*+	;fetch initializer
  1559  00831E  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1560                           
  1561                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1562  008322  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1563  008326  EE12 F000          	lfsr	1,512
  1564  00832A                     clear_0:
  1565  00832A  6AEE               	clrf	postinc0,c
  1566  00832C  50E5               	movf	postdec1,w,c
  1567  00832E  50E1               	movf	fsr1l,w,c
  1568  008330  E1FC               	bnz	clear_0
  1569  008332  50E2               	movf	fsr1h,w,c
  1570  008334  E1FA               	bnz	clear_0
  1571                           
  1572                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1573  008336  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1574  00833A  EE14 F000          	lfsr	1,1024
  1575  00833E                     clear_1:
  1576  00833E  6AEE               	clrf	postinc0,c
  1577  008340  50E5               	movf	postdec1,w,c
  1578  008342  50E1               	movf	fsr1l,w,c
  1579  008344  E1FC               	bnz	clear_1
  1580  008346  50E2               	movf	fsr1h,w,c
  1581  008348  E1FA               	bnz	clear_1
  1582                           
  1583                           ; Clear objects allocated to BANK3 (192 bytes)
  1584  00834A  EE03  F000         	lfsr	0,__pbssBANK3
  1585  00834E  0EC0               	movlw	192
  1586  008350                     clear_2:
  1587  008350  6AEE               	clrf	postinc0,c
  1588  008352  06E8               	decf	wreg,f,c
  1589  008354  E1FD               	bnz	clear_2
  1590                           
  1591                           ; Clear objects allocated to BANK2 (194 bytes)
  1592  008356  EE02  F000         	lfsr	0,__pbssBANK2
  1593  00835A  0EC2               	movlw	194
  1594  00835C                     clear_3:
  1595  00835C  6AEE               	clrf	postinc0,c
  1596  00835E  06E8               	decf	wreg,f,c
  1597  008360  E1FD               	bnz	clear_3
  1598                           
  1599                           ; Clear objects allocated to BANK1 (175 bytes)
  1600  008362  EE01  F000         	lfsr	0,__pbssBANK1
  1601  008366  0EAF               	movlw	175
  1602  008368                     clear_4:
  1603  008368  6AEE               	clrf	postinc0,c
  1604  00836A  06E8               	decf	wreg,f,c
  1605  00836C  E1FD               	bnz	clear_4
  1606                           
  1607                           ; Clear objects allocated to BANK0 (62 bytes)
  1608  00836E  EE00  F0C1         	lfsr	0,__pbssBANK0
  1609  008372  0E3E               	movlw	62
  1610  008374                     clear_5:
  1611  008374  6AEE               	clrf	postinc0,c
  1612  008376  06E8               	decf	wreg,f,c
  1613  008378  E1FD               	bnz	clear_5
  1614  00837A                     end_of_initialization:
  1615                           	opt stack 0
  1616  00837A                     __end_of__initialization:
  1617                           	opt stack 0
  1618  00837A  0100               	movlb	0
  1619  00837C  EF88  F01D         	goto	_main	;jump to C main() function
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           postdec1	equ	0xFE5
  1627                           fsr1h	equ	0xFE2
  1628                           fsr1l	equ	0xFE1
  1629                           
  1630                           	psect	bssBANK0
  1631  0000C1                     __pbssBANK0:
  1632                           	opt stack 0
  1633  0000C1                     _os:
  1634                           	opt stack 0
  1635  0000C1                     	ds	13
  1636  0000CE                     _inPipes:
  1637                           	opt stack 0
  1638  0000CE                     	ds	6
  1639  0000D4                     _pBDTEntryIn:
  1640                           	opt stack 0
  1641  0000D4                     	ds	6
  1642  0000DA                     _hex_file_offset:
  1643                           	opt stack 0
  1644  0000DA                     	ds	4
  1645  0000DE                     _TransferLength:
  1646                           	opt stack 0
  1647  0000DE                     	ds	2
  1648  0000E0                     _USBMSDInHandle:
  1649                           	opt stack 0
  1650  0000E0                     	ds	2
  1651  0000E2                     _USBMSDOutHandle:
  1652                           	opt stack 0
  1653  0000E2                     	ds	2
  1654  0000E4                     _pBDTEntryEP0OutNext:
  1655                           	opt stack 0
  1656  0000E4                     	ds	2
  1657  0000E6                     _pBDTEntryEP0OutCurrent:
  1658                           	opt stack 0
  1659  0000E6                     	ds	2
  1660  0000E8                     _power_state:
  1661                           	opt stack 0
  1662  0000E8                     	ds	1
  1663  0000E9                     _userInterfaceStatus:
  1664                           	opt stack 0
  1665  0000E9                     	ds	1
  1666  0000EA                     _MSDHostNoData:
  1667                           	opt stack 0
  1668  0000EA                     	ds	1
  1669  0000EB                     _SoftDetach:
  1670                           	opt stack 0
  1671  0000EB                     	ds	1
  1672  0000EC                     _MSDRetryAttempt:
  1673                           	opt stack 0
  1674  0000EC                     	ds	1
  1675  0000ED                     _MSDWriteState:
  1676                           	opt stack 0
  1677  0000ED                     	ds	1
  1678  0000EE                     _MSDReadState:
  1679                           	opt stack 0
  1680  0000EE                     	ds	1
  1681  0000EF                     _MSDCommandState:
  1682                           	opt stack 0
  1683  0000EF                     	ds	1
  1684  0000F0                     _MSD_State:
  1685                           	opt stack 0
  1686  0000F0                     	ds	1
  1687  0000F1                     _USBDeferOUTDataStagePackets:
  1688                           	opt stack 0
  1689  0000F1                     	ds	1
  1690  0000F2                     _USBDeferINDataStagePackets:
  1691                           	opt stack 0
  1692  0000F2                     	ds	1
  1693  0000F3                     _USBStatusStageEnabledFlag2:
  1694                           	opt stack 0
  1695  0000F3                     	ds	1
  1696  0000F4                     _USBStatusStageEnabledFlag1:
  1697                           	opt stack 0
  1698  0000F4                     	ds	1
  1699  0000F5                     _USBDeferStatusStagePacket:
  1700                           	opt stack 0
  1701  0000F5                     	ds	1
  1702  0000F6                     _USBStatusStageTimeoutCounter:
  1703                           	opt stack 0
  1704  0000F6                     	ds	1
  1705  0000F7                     _endpoint_number:
  1706                           	opt stack 0
  1707  0000F7                     	ds	1
  1708  0000F8                     _controlTransferState:
  1709                           	opt stack 0
  1710  0000F8                     	ds	1
  1711  0000F9                     _shortPacketStatus:
  1712                           	opt stack 0
  1713  0000F9                     	ds	1
  1714  0000FA                     _USBDeviceState:
  1715                           	opt stack 0
  1716  0000FA                     	ds	1
  1717  0000FB                     _fast_read_cluster:
  1718                           	opt stack 0
  1719  0000FB                     	ds	2
  1720  0000FD                     _USTATcopy:
  1721                           	opt stack 0
  1722  0000FD                     	ds	1
  1723  0000FE                     _USBActiveConfiguration:
  1724                           	opt stack 0
  1725  0000FE                     	ds	1
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           postdec1	equ	0xFE5
  1733                           fsr1h	equ	0xFE2
  1734                           fsr1l	equ	0xFE1
  1735                           
  1736                           	psect	dataBANK0
  1737  0000FF                     __pdataBANK0:
  1738                           	opt stack 0
  1739  0000FF                     _file_number:
  1740                           	opt stack 0
  1741  0000FF                     	ds	1
  1742                           tblptru	equ	0xFF8
  1743                           tblptrh	equ	0xFF7
  1744                           tblptrl	equ	0xFF6
  1745                           tablat	equ	0xFF5
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           postdec1	equ	0xFE5
  1749                           fsr1h	equ	0xFE2
  1750                           fsr1l	equ	0xFE1
  1751                           
  1752                           	psect	bssBANK1
  1753  000100                     __pbssBANK1:
  1754                           	opt stack 0
  1755  000100                     _gblCBW:
  1756                           	opt stack 0
  1757  000100                     	ds	31
  1758  00011F                     _gblSenseData:
  1759                           	opt stack 0
  1760  00011F                     	ds	18
  1761  000131                     _outPipes:
  1762                           	opt stack 0
  1763  000131                     	ds	8
  1764  000139                     _pBDTEntryOut:
  1765                           	opt stack 0
  1766  000139                     	ds	6
  1767  00013F                     _extended_linear_address:
  1768                           	opt stack 0
  1769  00013F                     	ds	4
  1770  000143                     _hex_file_size:
  1771                           	opt stack 0
  1772  000143                     	ds	4
  1773  000147                     _file_maximum_address:
  1774                           	opt stack 0
  1775  000147                     	ds	4
  1776  00014B                     _file_minimum_address:
  1777                           	opt stack 0
  1778  00014B                     	ds	4
  1779  00014F                     _gblBLKLen:
  1780                           	opt stack 0
  1781  00014F                     	ds	4
  1782  000153                     _gblNumBLKS:
  1783                           	opt stack 0
  1784  000153                     	ds	4
  1785  000157                     _LBA:
  1786                           	opt stack 0
  1787  000157                     	ds	4
  1788  00015B                     _USB1msTickCount:
  1789                           	opt stack 0
  1790  00015B                     	ds	4
  1791  00015F                     _config_external:
  1792                           	opt stack 0
  1793  00015F                     	ds	3
  1794  000162                     _config_internal:
  1795                           	opt stack 0
  1796  000162                     	ds	3
  1797  000165                     _ep_data_out:
  1798                           	opt stack 0
  1799  000165                     	ds	3
  1800  000168                     _ep_data_in:
  1801                           	opt stack 0
  1802  000168                     	ds	3
  1803  00016B                     _FileAddress:
  1804                           	opt stack 0
  1805  00016B                     	ds	2
  1806  00016D                     _flash_pages_written:
  1807                           	opt stack 0
  1808  00016D                     	ds	2
  1809  00016F                     _total_hex_file_entries:
  1810                           	opt stack 0
  1811  00016F                     	ds	2
  1812  000171                     _hex_file_entries:
  1813                           	opt stack 0
  1814  000171                     	ds	2
  1815  000173                     _startup_timer:
  1816                           	opt stack 0
  1817  000173                     	ds	2
  1818  000175                     _system_ui_inactive_count:
  1819                           	opt stack 0
  1820  000175                     	ds	2
  1821  000177                     _USBInHandle:
  1822                           	opt stack 0
  1823  000177                     	ds	2
  1824  000179                     _USBOutHandle:
  1825                           	opt stack 0
  1826  000179                     	ds	2
  1827  00017B                     _gblMediaPresent:
  1828                           	opt stack 0
  1829  00017B                     	ds	2
  1830  00017D                     _MSBBufferIndex:
  1831                           	opt stack 0
  1832  00017D                     	ds	2
  1833  00017F                     _ptrNextData:
  1834                           	opt stack 0
  1835  00017F                     	ds	2
  1836  000181                     _pDst:
  1837                           	opt stack 0
  1838  000181                     	ds	2
  1839  000183                     _active_configuration:
  1840                           	opt stack 0
  1841  000183                     	ds	1
  1842  000184                     _start_from_byte_next:
  1843                           	opt stack 0
  1844  000184                     	ds	1
  1845  000185                     _last_error:
  1846                           	opt stack 0
  1847  000185                     	ds	1
  1848  000186                     _i2c_frequency:
  1849                           	opt stack 0
  1850  000186                     	ds	1
  1851  000187                     _MSDCBWValid:
  1852                           	opt stack 0
  1853  000187                     	ds	1
  1854  000188                     _gblCBWLength:
  1855                           	opt stack 0
  1856  000188                     	ds	1
  1857  000189                     _USBTicksSinceSuspendEnd:
  1858                           	opt stack 0
  1859  000189                     	ds	1
  1860  00018A                     _BothEP0OutUOWNsSet:
  1861                           	opt stack 0
  1862  00018A                     	ds	1
  1863  00018B                     _USBBusIsSuspended:
  1864                           	opt stack 0
  1865  00018B                     	ds	1
  1866  00018C                     _RemoteWakeup:
  1867                           	opt stack 0
  1868  00018C                     	ds	1
  1869  00018D                     _hex_file_entry:
  1870                           	opt stack 0
  1871  00018D                     	ds	23
  1872  0001A4                     _mediaInformation:
  1873                           	opt stack 0
  1874  0001A4                     	ds	5
  1875  0001A9                     _fast_read_cluster_number:
  1876                           	opt stack 0
  1877  0001A9                     	ds	2
  1878  0001AB                     _USBAlternateInterface:
  1879                           	opt stack 0
  1880  0001AB                     	ds	2
  1881  0001AD                     _active_protocol:
  1882                           	opt stack 0
  1883  0001AD                     	ds	1
  1884  0001AE                     _idle_rate:
  1885                           	opt stack 0
  1886  0001AE                     	ds	1
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           postdec1	equ	0xFE5
  1894                           fsr1h	equ	0xFE2
  1895                           fsr1l	equ	0xFE1
  1896                           
  1897                           	psect	dataBANK1
  1898  0001AF                     __pdataBANK1:
  1899                           	opt stack 0
  1900  0001AF                     _LUN:
  1901                           	opt stack 0
  1902  0001AF                     	ds	20
  1903  0001C3                     i2c_display_send_init_sequence@F6812:
  1904                           	opt stack 0
  1905  0001C3                     	ds	9
  1906  0001CC                     	ds	8
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           
  1917                           	psect	bssBANK2
  1918  000200                     __pbssBANK2:
  1919                           	opt stack 0
  1920  000200                     _display_content:
  1921                           	opt stack 0
  1922  000200                     	ds	80
  1923  000250                     _ReceivedDataBuffer:
  1924                           	opt stack 0
  1925  000250                     	ds	64
  1926  000290                     _file_buffer:
  1927                           	opt stack 0
  1928  000290                     	ds	50
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1h	equ	0xFE2
  1937                           fsr1l	equ	0xFE1
  1938                           
  1939                           	psect	bssBANK3
  1940  000300                     __pbssBANK3:
  1941                           	opt stack 0
  1942  000300                     __spi_external_rx_buffer:
  1943                           	opt stack 0
  1944  000300                     	ds	64
  1945  000340                     __spi_external_tx_buffer:
  1946                           	opt stack 0
  1947  000340                     	ds	64
  1948  000380                     _ToSendDataBuffer:
  1949                           	opt stack 0
  1950  000380                     	ds	64
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           postdec1	equ	0xFE5
  1958                           fsr1h	equ	0xFE2
  1959                           fsr1l	equ	0xFE1
  1960                           
  1961                           	psect	bssBIGRAMlh
  1962  000800                     __pbssBIGRAMlh:
  1963                           	opt stack 0
  1964  000800                     _pageBuffer:
  1965                           	opt stack 0
  1966  000800                     	ds	1024
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           fsr1h	equ	0xFE2
  1975                           fsr1l	equ	0xFE1
  1976                           
  1977                           	psect	bssBIGRAMll
  1978  0003C0                     __pbssBIGRAMll:
  1979                           	opt stack 0
  1980  0003C0                     _buffer:
  1981                           	opt stack 0
  1982  0003C0                     	ds	512
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1h	equ	0xFE2
  1991                           fsr1l	equ	0xFE1
  1992                           
  1993                           	psect	cstackBANK0
  1994  000060                     __pcstackBANK0:
  1995                           	opt stack 0
  1996  000060                     fat_create_file@number_of_clusters:
  1997                           	opt stack 0
  1998  000060                     fat_read_from_file_fast@sector:
  1999                           	opt stack 0
  2000  000060                     fat_resize_file@old_number_of_clusters:
  2001                           	opt stack 0
  2002  000060                     fat_modify_file@sector:
  2003                           	opt stack 0
  2004  000060                     __parse_file_rename@data:
  2005                           	opt stack 0
  2006                           
  2007                           ; 2 bytes @ 0x0
  2008  000060                     	ds	2
  2009  000062                     fat_modify_file@file_number:
  2010                           	opt stack 0
  2011  000062                     fat_create_file@first_cluster:
  2012                           	opt stack 0
  2013  000062                     fat_read_from_file_fast@working_cluster:
  2014                           	opt stack 0
  2015  000062                     fat_resize_file@new_number_of_clusters:
  2016                           	opt stack 0
  2017  000062                     __parse_file_rename@out_buffer:
  2018                           	opt stack 0
  2019                           
  2020                           ; 2 bytes @ 0x2
  2021  000062                     	ds	1
  2022  000063                     fat_modify_file@cluster:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x3
  2026  000063                     	ds	1
  2027  000064                     fat_create_file@file_number:
  2028                           	opt stack 0
  2029  000064                     fat_read_from_file_fast@offset:
  2030                           	opt stack 0
  2031  000064                     fat_resize_file@first_cluster:
  2032                           	opt stack 0
  2033  000064                     __parse_file_rename@out_idx_ptr:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x4
  2037  000064                     	ds	1
  2038  000065                     fat_modify_file@return_code:
  2039                           	opt stack 0
  2040  000065                     fat_create_file@root_entry:
  2041                           	opt stack 0
  2042                           
  2043                           ; 32 bytes @ 0x5
  2044  000065                     	ds	1
  2045  000066                     fat_resize_file@file_number:
  2046                           	opt stack 0
  2047  000066                     __parse_file_rename@return_value:
  2048                           	opt stack 0
  2049  000066                     fat_read_from_file_fast@needed_cluster:
  2050                           	opt stack 0
  2051  000066                     fat_modify_file@offset:
  2052                           	opt stack 0
  2053                           
  2054                           ; 2 bytes @ 0x6
  2055  000066                     	ds	1
  2056  000067                     __parse_file_rename@file_number:
  2057                           	opt stack 0
  2058  000067                     fat_resize_file@root:
  2059                           	opt stack 0
  2060                           
  2061                           ; 32 bytes @ 0x7
  2062  000067                     	ds	1
  2063  000068                     fat_read_from_file_fast@read_length:
  2064                           	opt stack 0
  2065  000068                     fat_modify_file@number_of_bytes:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x8
  2069  000068                     	ds	2
  2070  00006A                     fat_read_from_file_fast@position:
  2071                           	opt stack 0
  2072  00006A                     fat_modify_file@position:
  2073                           	opt stack 0
  2074                           
  2075                           ; 4 bytes @ 0xA
  2076  00006A                     	ds	4
  2077  00006E                     ??__bootloader_verify_file:
  2078  00006E                     ??__bootloader_program:
  2079  00006E                     fat_read_from_file@start_byte:
  2080                           	opt stack 0
  2081  00006E                     fat_modify_file@root:
  2082                           	opt stack 0
  2083                           
  2084                           ; 32 bytes @ 0xE
  2085  00006E                     	ds	4
  2086  000072                     fat_read_from_file@length:
  2087                           	opt stack 0
  2088                           
  2089                           ; 4 bytes @ 0x12
  2090  000072                     	ds	4
  2091  000076                     fat_read_from_file@data:
  2092                           	opt stack 0
  2093  000076                     __bootloader_program@buffer:
  2094                           	opt stack 0
  2095  000076                     __bootloader_verify_file@root:
  2096                           	opt stack 0
  2097                           
  2098                           ; 32 bytes @ 0x16
  2099  000076                     	ds	2
  2100  000078                     fat_read_from_file@file_number:
  2101                           	opt stack 0
  2102  000078                     __bootloader_program@entry_page:
  2103                           	opt stack 0
  2104                           
  2105                           ; 2 bytes @ 0x18
  2106  000078                     	ds	1
  2107  000079                     fat_read_from_file@cluster:
  2108                           	opt stack 0
  2109                           
  2110                           ; 2 bytes @ 0x19
  2111  000079                     	ds	1
  2112  00007A                     __bootloader_program@address_within_page:
  2113                           	opt stack 0
  2114                           
  2115                           ; 2 bytes @ 0x1A
  2116  00007A                     	ds	1
  2117  00007B                     fat_read_from_file@cluster_number:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x1B
  2121  00007B                     	ds	1
  2122  00007C                     __bootloader_program@root:
  2123                           	opt stack 0
  2124                           
  2125                           ; 32 bytes @ 0x1C
  2126  00007C                     	ds	1
  2127  00007D                     fat_read_from_file@return_code:
  2128                           	opt stack 0
  2129                           
  2130                           ; 1 bytes @ 0x1D
  2131  00007D                     	ds	1
  2132  00007E                     fat_read_from_file@root:
  2133                           	opt stack 0
  2134                           
  2135                           ; 32 bytes @ 0x1E
  2136  00007E                     	ds	7
  2137  000085                     ??_fat_copy_file:
  2138  000085                     __parse_file_create@file_number:
  2139                           	opt stack 0
  2140                           
  2141                           ; 1 bytes @ 0x25
  2142  000085                     	ds	1
  2143  000086                     __parse_file_create@file_size:
  2144                           	opt stack 0
  2145                           
  2146                           ; 4 bytes @ 0x26
  2147  000086                     	ds	1
  2148  000087                     __parse_file_resize@return_value:
  2149                           	opt stack 0
  2150                           
  2151                           ; 1 bytes @ 0x27
  2152  000087                     	ds	1
  2153  000088                     __parse_file_resize@file_number:
  2154                           	opt stack 0
  2155                           
  2156                           ; 1 bytes @ 0x28
  2157  000088                     	ds	1
  2158  000089                     fat_copy_file@number_of_clusters:
  2159                           	opt stack 0
  2160  000089                     __parse_file_resize@file_size:
  2161                           	opt stack 0
  2162                           
  2163                           ; 4 bytes @ 0x29
  2164  000089                     	ds	2
  2165  00008B                     fat_copy_file@file_size:
  2166                           	opt stack 0
  2167                           
  2168                           ; 4 bytes @ 0x2B
  2169  00008B                     	ds	3
  2170  00008E                     __parse_file_modify@return_value:
  2171                           	opt stack 0
  2172  00008E                     fat_append_to_file@new_file_size:
  2173                           	opt stack 0
  2174                           
  2175                           ; 4 bytes @ 0x2E
  2176  00008E                     	ds	1
  2177  00008F                     fat_copy_file@new_file_number:
  2178                           	opt stack 0
  2179  00008F                     __parse_file_modify@file_number:
  2180                           	opt stack 0
  2181                           
  2182                           ; 1 bytes @ 0x2F
  2183  00008F                     	ds	1
  2184  000090                     fat_copy_file@return_value:
  2185                           	opt stack 0
  2186  000090                     __parse_file_modify@number_of_bytes:
  2187                           	opt stack 0
  2188                           
  2189                           ; 2 bytes @ 0x30
  2190  000090                     	ds	1
  2191  000091                     fat_copy_file@sector:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x31
  2195  000091                     	ds	1
  2196  000092                     fat_append_to_file@old_file_size:
  2197                           	opt stack 0
  2198  000092                     __parse_file_modify@start_byte:
  2199                           	opt stack 0
  2200                           
  2201                           ; 4 bytes @ 0x32
  2202  000092                     	ds	1
  2203  000093                     fat_copy_file@file_number:
  2204                           	opt stack 0
  2205                           
  2206                           ; 1 bytes @ 0x33
  2207  000093                     	ds	1
  2208  000094                     __parse_file_copy@data:
  2209                           	opt stack 0
  2210                           
  2211                           ; 2 bytes @ 0x34
  2212  000094                     	ds	2
  2213  000096                     fat_append_to_file@return_code:
  2214                           	opt stack 0
  2215  000096                     __bootloader_verify_file@rec_counter:
  2216                           	opt stack 0
  2217  000096                     __parse_file_copy@out_buffer:
  2218                           	opt stack 0
  2219                           
  2220                           ; 2 bytes @ 0x36
  2221  000096                     	ds	1
  2222  000097                     fat_append_to_file@file_number:
  2223                           	opt stack 0
  2224  000097                     __bootloader_verify_file@return_value:
  2225                           	opt stack 0
  2226                           
  2227                           ; 4 bytes @ 0x37
  2228  000097                     	ds	1
  2229  000098                     ??__parse_file_append:
  2230  000098                     __parse_file_copy@out_idx_ptr:
  2231                           	opt stack 0
  2232                           
  2233                           ; 2 bytes @ 0x38
  2234  000098                     	ds	1
  2235  000099                     __parse_file_append@return_value:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x39
  2239  000099                     	ds	1
  2240  00009A                     __parse_file_append@file_number:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x3A
  2244  00009A                     	ds	1
  2245  00009B                     __parse_file_append@number_of_bytes:
  2246                           	opt stack 0
  2247  00009B                     __bootloader_verify_file@address32:
  2248                           	opt stack 0
  2249                           
  2250                           ; 4 bytes @ 0x3B
  2251  00009B                     	ds	1
  2252  00009C                     __bootloader_program@return_value:
  2253                           	opt stack 0
  2254                           
  2255                           ; 4 bytes @ 0x3C
  2256  00009C                     	ds	1
  2257  00009D                     __parse_command_long@data:
  2258                           	opt stack 0
  2259                           
  2260                           ; 2 bytes @ 0x3D
  2261  00009D                     	ds	1
  2262  00009E                     __fill_buffer_read_file@inBuffer:
  2263                           	opt stack 0
  2264                           
  2265                           ; 2 bytes @ 0x3E
  2266  00009E                     	ds	1
  2267  00009F                     __parse_command_long@out_buffer:
  2268                           	opt stack 0
  2269                           
  2270                           ; 2 bytes @ 0x3F
  2271  00009F                     	ds	1
  2272  0000A0                     __fill_buffer_read_file@outBuffer:
  2273                           	opt stack 0
  2274  0000A0                     __bootloader_program@address32:
  2275                           	opt stack 0
  2276                           
  2277                           ; 4 bytes @ 0x40
  2278  0000A0                     	ds	1
  2279  0000A1                     __parse_command_long@out_idx_ptr:
  2280                           	opt stack 0
  2281                           
  2282                           ; 2 bytes @ 0x41
  2283  0000A1                     	ds	1
  2284  0000A2                     ??__fill_buffer_read_file:
  2285                           
  2286                           ; 1 bytes @ 0x42
  2287  0000A2                     	ds	1
  2288  0000A3                     __parse_command_long@length:
  2289                           	opt stack 0
  2290                           
  2291                           ; 1 bytes @ 0x43
  2292  0000A3                     	ds	1
  2293  0000A4                     __bootloader_program@start_from_byte:
  2294                           	opt stack 0
  2295  0000A4                     api_parse@inBuffer:
  2296                           	opt stack 0
  2297                           
  2298                           ; 2 bytes @ 0x44
  2299  0000A4                     	ds	1
  2300  0000A5                     __bootloader_program@cntr:
  2301                           	opt stack 0
  2302                           
  2303                           ; 2 bytes @ 0x45
  2304  0000A5                     	ds	1
  2305  0000A6                     api_parse@receivedDataLength:
  2306                           	opt stack 0
  2307  0000A6                     __fill_buffer_read_file@file_size:
  2308                           	opt stack 0
  2309                           
  2310                           ; 4 bytes @ 0x46
  2311  0000A6                     	ds	1
  2312  0000A7                     __bootloader_program@page_to_write:
  2313                           	opt stack 0
  2314  0000A7                     api_parse@outBuffer:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x47
  2318  0000A7                     	ds	2
  2319  0000A9                     ??_api_parse:
  2320                           
  2321                           ; 1 bytes @ 0x49
  2322  0000A9                     	ds	1
  2323  0000AA                     __fill_buffer_read_file@data_length:
  2324                           	opt stack 0
  2325                           
  2326                           ; 4 bytes @ 0x4A
  2327  0000AA                     	ds	1
  2328  0000AB                     api_parse@out_idx_ptr:
  2329                           	opt stack 0
  2330                           
  2331                           ; 2 bytes @ 0x4B
  2332  0000AB                     	ds	2
  2333  0000AD                     api_parse@in_idx:
  2334                           	opt stack 0
  2335                           
  2336                           ; 1 bytes @ 0x4D
  2337  0000AD                     	ds	1
  2338  0000AE                     api_parse@out_idx:
  2339                           	opt stack 0
  2340  0000AE                     __fill_buffer_read_file@start:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x4E
  2344  0000AE                     	ds	4
  2345  0000B2                     api_prepare@inBuffer:
  2346                           	opt stack 0
  2347                           
  2348                           ; 2 bytes @ 0x52
  2349  0000B2                     	ds	2
  2350  0000B4                     api_prepare@outBuffer:
  2351                           	opt stack 0
  2352                           
  2353                           ; 2 bytes @ 0x54
  2354  0000B4                     	ds	2
  2355  0000B6                     api_prepare@command:
  2356                           	opt stack 0
  2357                           
  2358                           ; 1 bytes @ 0x56
  2359  0000B6                     	ds	1
  2360  0000B7                     ??_main:
  2361                           
  2362                           ; 1 bytes @ 0x57
  2363  0000B7                     	ds	2
  2364  0000B9                     main@tx_start_addr:
  2365                           	opt stack 0
  2366                           
  2367                           ; 2 bytes @ 0x59
  2368  0000B9                     	ds	2
  2369  0000BB                     main@bytes_transmitted:
  2370                           	opt stack 0
  2371                           
  2372                           ; 2 bytes @ 0x5B
  2373  0000BB                     	ds	2
  2374  0000BD                     main@rx_buffer:
  2375                           	opt stack 0
  2376                           
  2377                           ; 2 bytes @ 0x5D
  2378  0000BD                     	ds	2
  2379  0000BF                     main@tx_buffer:
  2380                           	opt stack 0
  2381                           
  2382                           ; 2 bytes @ 0x5F
  2383  0000BF                     	ds	2
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           postdec1	equ	0xFE5
  2391                           fsr1h	equ	0xFE2
  2392                           fsr1l	equ	0xFE1
  2393                           
  2394                           	psect	cstackCOMRAM
  2395  000001                     __pcstackCOMRAM:
  2396                           	opt stack 0
  2397  000001                     ??_USBStdGetDscHandler:
  2398  000001                     ??_USBStdGetStatusHandler:
  2399  000001                     ??_system_delay_ms:
  2400  000001                     ??__i2c_wait_idle:
  2401  000001                     ??__display_clear:
  2402  000001                     ?_USBTransferOnePacket:
  2403                           	opt stack 0
  2404  000001                     ?_spi_get_external_rx_buffer:
  2405                           	opt stack 0
  2406  000001                     ?_spi_get_external_tx_buffer:
  2407                           	opt stack 0
  2408  000001                     ?_ExternalFlash_MediaInitialize:
  2409                           	opt stack 0
  2410  000001                     ?_ExternalFlash_SectorSizeRead:
  2411                           	opt stack 0
  2412  000001                     ?_bootloader_get_entries:
  2413                           	opt stack 0
  2414  000001                     ?_bootloader_get_total_entries:
  2415                           	opt stack 0
  2416  000001                     ?_bootloader_get_rec_address:
  2417                           	opt stack 0
  2418  000001                     ?_bootloader_get_flashPagesWritten:
  2419                           	opt stack 0
  2420  000001                     ?_strncmp:
  2421                           	opt stack 0
  2422  000001                     ?_internalFlash_pageFromAddress:
  2423                           	opt stack 0
  2424  000001                     ?_internalFlash_getBuffer:
  2425                           	opt stack 0
  2426  000001                     ?__sector_from_file_number:
  2427                           	opt stack 0
  2428  000001                     ?__offset_from_file_number:
  2429                           	opt stack 0
  2430  000001                     ?__data_sector_from_cluster:
  2431                           	opt stack 0
  2432  000001                     ?__fat_sector_from_cluster:
  2433                           	opt stack 0
  2434  000001                     ?__fat_offset_from_cluster:
  2435                           	opt stack 0
  2436  000001                     ?__cluster_from_sector_and_offset:
  2437                           	opt stack 0
  2438  000001                     ?__get_available_offset_from_buffer:
  2439                           	opt stack 0
  2440  000001                     ?__read_value_from_offset:
  2441                           	opt stack 0
  2442  000001                     ?__get_time:
  2443                           	opt stack 0
  2444  000001                     ?__get_date:
  2445                           	opt stack 0
  2446  000001                     ?_bootloader_get_rec_dataLength:
  2447                           	opt stack 0
  2448  000001                     ?___wmul:
  2449                           	opt stack 0
  2450  000001                     ?___lwdiv:
  2451                           	opt stack 0
  2452  000001                     ?___lwmod:
  2453                           	opt stack 0
  2454  000001                     ?_ExternalFlash_CapacityRead:
  2455                           	opt stack 0
  2456  000001                     ?_bootloader_get_file_size:
  2457                           	opt stack 0
  2458  000001                     ?_internalFlash_addressFromPage:
  2459                           	opt stack 0
  2460  000001                     ?___lldiv:
  2461                           	opt stack 0
  2462  000001                     ?___llmod:
  2463                           	opt stack 0
  2464  000001                     USBTransferOnePacket@dir:
  2465                           	opt stack 0
  2466  000001                     USBStallEndpoint@dir:
  2467                           	opt stack 0
  2468  000001                     USBConfigureEndpoint@direction:
  2469                           	opt stack 0
  2470  000001                     USBCtrlTrfTxService@byteToSend:
  2471                           	opt stack 0
  2472  000001                     USBCtrlTrfRxService@i:
  2473                           	opt stack 0
  2474  000001                     __i2c_send@dat:
  2475                           	opt stack 0
  2476  000001                     i2c_set_frequency@frequency:
  2477                           	opt stack 0
  2478  000001                     display_get_character@position:
  2479                           	opt stack 0
  2480  000001                     __display_search@cntr:
  2481                           	opt stack 0
  2482  000001                     __display_rebooting@cntr:
  2483                           	opt stack 0
  2484  000001                     __display_suspended@cntr:
  2485                           	opt stack 0
  2486  000001                     hexCharToUint8@c:
  2487                           	opt stack 0
  2488  000001                     bootloader_get_rec_data@index:
  2489                           	opt stack 0
  2490  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2491                           	opt stack 0
  2492  000001                     spi_set_configuration@configuration:
  2493                           	opt stack 0
  2494  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2495                           	opt stack 0
  2496  000001                     SYSTEM_Initialize@pll_startup_counter:
  2497                           	opt stack 0
  2498  000001                     ExternalFlash_MediaInitialize@config:
  2499                           	opt stack 0
  2500  000001                     ExternalFlash_SectorSizeRead@config:
  2501                           	opt stack 0
  2502  000001                     ExternalFlash_CapacityRead@config:
  2503                           	opt stack 0
  2504  000001                     ExternalFlash_MediaDetect@config:
  2505                           	opt stack 0
  2506  000001                     ExternalFlash_WriteProtectStateGet@config:
  2507                           	opt stack 0
  2508  000001                     __data_sector_from_cluster@fat_cluster:
  2509                           	opt stack 0
  2510  000001                     __fat_sector_from_cluster@cluster:
  2511                           	opt stack 0
  2512  000001                     __fat_offset_from_cluster@cluster:
  2513                           	opt stack 0
  2514  000001                     __cluster_from_sector_and_offset@sector:
  2515                           	opt stack 0
  2516  000001                     __get_available_offset_from_buffer@minimum_offset:
  2517                           	opt stack 0
  2518  000001                     __read_value_from_offset@offset:
  2519                           	opt stack 0
  2520  000001                     __write_value_to_offset@offset:
  2521                           	opt stack 0
  2522  000001                     __get_mbr@idx:
  2523                           	opt stack 0
  2524  000001                     __get_fbr@idx:
  2525                           	opt stack 0
  2526  000001                     __get_fat@idx:
  2527                           	opt stack 0
  2528  000001                     __get_root@idx:
  2529                           	opt stack 0
  2530  000001                     __get_data@idx:
  2531                           	opt stack 0
  2532  000001                     internalFlash_addressFromPage@page:
  2533                           	opt stack 0
  2534  000001                     __fill_buffer_get_configuration@outBuffer:
  2535                           	opt stack 0
  2536  000001                     __parse_settings_spi_mode@data:
  2537                           	opt stack 0
  2538  000001                     __parse_settings_spi_frequency@data:
  2539                           	opt stack 0
  2540  000001                     __parse_settings_spi_polarity@data:
  2541                           	opt stack 0
  2542  000001                     __parse_settings_i2c_mode@data:
  2543                           	opt stack 0
  2544  000001                     __parse_settings_i2c_frequency@data:
  2545                           	opt stack 0
  2546  000001                     __parse_settings_i2c_slaveModeSlaveAddress@data:
  2547                           	opt stack 0
  2548  000001                     __parse_settings_i2c_masterModeSlaveAddress@data:
  2549                           	opt stack 0
  2550  000001                     spi_tx@data:
  2551                           	opt stack 0
  2552  000001                     spi_tx_tx@command:
  2553                           	opt stack 0
  2554  000001                     spi_tx_rx@command:
  2555                           	opt stack 0
  2556  000001                     ___wmul@multiplier:
  2557                           	opt stack 0
  2558  000001                     ___lwdiv@dividend:
  2559                           	opt stack 0
  2560  000001                     ___lwmod@dividend:
  2561                           	opt stack 0
  2562  000001                     memcpy@d1:
  2563                           	opt stack 0
  2564  000001                     memset@p1:
  2565                           	opt stack 0
  2566  000001                     strncmp@s1:
  2567                           	opt stack 0
  2568  000001                     __spi_init@details:
  2569                           	opt stack 0
  2570  000001                     __bootloader_check_address@address:
  2571                           	opt stack 0
  2572  000001                     internalFlash_pageFromAddress@address:
  2573                           	opt stack 0
  2574  000001                     ___lldiv@dividend:
  2575                           	opt stack 0
  2576  000001                     ___llmod@dividend:
  2577                           	opt stack 0
  2578                           
  2579                           ; 4 bytes @ 0x0
  2580  000001                     	ds	1
  2581  000002                     ??_USBConfigureEndpoint:
  2582  000002                     ??_USBStallEndpoint:
  2583  000002                     ??_display_get_character:
  2584  000002                     USBCtrlTrfRxService@byteToRead:
  2585                           	opt stack 0
  2586  000002                     USBCtrlTrfInHandler@lastDTS:
  2587                           	opt stack 0
  2588  000002                     system_delay_ms@ms:
  2589                           	opt stack 0
  2590  000002                     hexCharToUint8@ascii:
  2591                           	opt stack 0
  2592  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2593                           	opt stack 0
  2594  000002                     USBTransferOnePacket@data:
  2595                           	opt stack 0
  2596  000002                     USBStdGetStatusHandler@p:
  2597                           	opt stack 0
  2598                           
  2599                           ; 2 bytes @ 0x1
  2600  000002                     	ds	1
  2601  000003                     ??_MSDComputeDeviceInAndResidue:
  2602  000003                     ??__get_mbr:
  2603  000003                     ??__get_fbr:
  2604  000003                     ??__get_fat:
  2605  000003                     ??__get_root:
  2606  000003                     ?_hexCharsToUint16:
  2607                           	opt stack 0
  2608  000003                     system_delay_ms@cntr:
  2609                           	opt stack 0
  2610  000003                     __display_clear@row:
  2611                           	opt stack 0
  2612  000003                     __sector_from_file_number@file_number:
  2613                           	opt stack 0
  2614  000003                     __offset_from_file_number@file_number:
  2615                           	opt stack 0
  2616  000003                     hexCharsToUint8@c2:
  2617                           	opt stack 0
  2618  000003                     hexCharsToUint16@c2:
  2619                           	opt stack 0
  2620  000003                     SYSTEM_Initialize@pll_startup_counter_3117:
  2621                           	opt stack 0
  2622  000003                     __cluster_from_sector_and_offset@offset:
  2623                           	opt stack 0
  2624  000003                     __get_available_offset_from_buffer@buffer:
  2625                           	opt stack 0
  2626  000003                     __read_value_from_offset@buffer:
  2627                           	opt stack 0
  2628  000003                     __write_value_to_offset@buffer:
  2629                           	opt stack 0
  2630  000003                     __parse_settings_spi_mode@out_buffer:
  2631                           	opt stack 0
  2632  000003                     __parse_settings_spi_frequency@out_buffer:
  2633                           	opt stack 0
  2634  000003                     __parse_settings_spi_polarity@out_buffer:
  2635                           	opt stack 0
  2636  000003                     __parse_settings_i2c_mode@out_buffer:
  2637                           	opt stack 0
  2638  000003                     __parse_settings_i2c_frequency@out_buffer:
  2639                           	opt stack 0
  2640  000003                     __parse_settings_i2c_slaveModeSlaveAddress@out_buffer:
  2641                           	opt stack 0
  2642  000003                     __parse_settings_i2c_masterModeSlaveAddress@out_buffer:
  2643                           	opt stack 0
  2644  000003                     spi_tx@length:
  2645                           	opt stack 0
  2646  000003                     spi_tx_tx@command_length:
  2647                           	opt stack 0
  2648  000003                     spi_tx_rx@command_length:
  2649                           	opt stack 0
  2650  000003                     ___wmul@multiplicand:
  2651                           	opt stack 0
  2652  000003                     ___lwdiv@divisor:
  2653                           	opt stack 0
  2654  000003                     ___lwmod@divisor:
  2655                           	opt stack 0
  2656  000003                     memset@c:
  2657                           	opt stack 0
  2658  000003                     strncmp@s2:
  2659                           	opt stack 0
  2660  000003                     memcpy@s1:
  2661                           	opt stack 0
  2662                           
  2663                           ; 3 bytes @ 0x2
  2664  000003                     	ds	1
  2665  000004                     ??_hexCharsToUint8:
  2666  000004                     USBTransferOnePacket@len:
  2667                           	opt stack 0
  2668  000004                     display_get_character@line:
  2669                           	opt stack 0
  2670  000004                     __display_clear@col:
  2671                           	opt stack 0
  2672  000004                     hexCharsToUint16@c3:
  2673                           	opt stack 0
  2674  000004                     spi_init@configuration:
  2675                           	opt stack 0
  2676  000004                     __sector_from_file_number@sector:
  2677                           	opt stack 0
  2678  000004                     __offset_from_file_number@offset:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0x3
  2682  000004                     	ds	1
  2683  000005                     ??_USBTransferOnePacket:
  2684  000005                     ??_spi_tx:
  2685  000005                     ??_internalFlash_pageFromAddress:
  2686  000005                     ??__get_available_offset_from_buffer:
  2687  000005                     ??__read_value_from_offset:
  2688  000005                     SYSTEM_Initialize@state:
  2689                           	opt stack 0
  2690  000005                     hexCharsToUint8@c1:
  2691                           	opt stack 0
  2692  000005                     hexCharsToUint16@c4:
  2693                           	opt stack 0
  2694  000005                     __bootloader_check_address@dataLength:
  2695                           	opt stack 0
  2696  000005                     ___lwmod@counter:
  2697                           	opt stack 0
  2698  000005                     __write_value_to_offset@value:
  2699                           	opt stack 0
  2700  000005                     __fill_buffer_get_display@outBuffer:
  2701                           	opt stack 0
  2702  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2703                           	opt stack 0
  2704  000005                     __parse_settings_spi_mode@out_idx_ptr:
  2705                           	opt stack 0
  2706  000005                     __parse_settings_spi_frequency@out_idx_ptr:
  2707                           	opt stack 0
  2708  000005                     __parse_settings_spi_polarity@out_idx_ptr:
  2709                           	opt stack 0
  2710  000005                     __parse_settings_i2c_mode@out_idx_ptr:
  2711                           	opt stack 0
  2712  000005                     __parse_settings_i2c_frequency@out_idx_ptr:
  2713                           	opt stack 0
  2714  000005                     __parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr:
  2715                           	opt stack 0
  2716  000005                     __parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr:
  2717                           	opt stack 0
  2718  000005                     spi_tx_tx@data:
  2719                           	opt stack 0
  2720  000005                     spi_tx_rx@data:
  2721                           	opt stack 0
  2722  000005                     ___wmul@product:
  2723                           	opt stack 0
  2724  000005                     ___lwdiv@quotient:
  2725                           	opt stack 0
  2726  000005                     memset@n:
  2727                           	opt stack 0
  2728  000005                     strncmp@len:
  2729                           	opt stack 0
  2730  000005                     internalFlash_addressFromPage@address:
  2731                           	opt stack 0
  2732  000005                     ___lldiv@divisor:
  2733                           	opt stack 0
  2734  000005                     ___llmod@divisor:
  2735                           	opt stack 0
  2736                           
  2737                           ; 4 bytes @ 0x4
  2738  000005                     	ds	1
  2739  000006                     ??_hexCharsToUint16:
  2740  000006                     ??__bootloader_check_address:
  2741  000006                     USBStallEndpoint@ep:
  2742                           	opt stack 0
  2743  000006                     USBConfigureEndpoint@EPNum:
  2744                           	opt stack 0
  2745  000006                     hexCharsToUint8@retVal:
  2746                           	opt stack 0
  2747  000006                     __i2c_write@data:
  2748                           	opt stack 0
  2749  000006                     __i2c_read@data:
  2750                           	opt stack 0
  2751  000006                     i2c_display_write_fixed@data:
  2752                           	opt stack 0
  2753  000006                     memcpy@n:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0x5
  2757  000006                     	ds	1
  2758  000007                     ??_strncmp:
  2759  000007                     ??__fill_buffer_get_bootloader_details:
  2760  000007                     ??__parse_settings_spi_mode:
  2761  000007                     ??__parse_settings_spi_frequency:
  2762  000007                     ??__parse_settings_spi_polarity:
  2763  000007                     ??__parse_settings_i2c_mode:
  2764  000007                     ??__parse_settings_i2c_frequency:
  2765  000007                     ??__parse_settings_i2c_slaveModeSlaveAddress:
  2766  000007                     ??__parse_settings_i2c_masterModeSlaveAddress:
  2767  000007                     ??__write_value_to_offset:
  2768  000007                     __fill_buffer_get_display@secondHalf:
  2769                           	opt stack 0
  2770  000007                     ___lwdiv@counter:
  2771                           	opt stack 0
  2772  000007                     USBStallEndpoint@p:
  2773                           	opt stack 0
  2774  000007                     USBConfigureEndpoint@handle:
  2775                           	opt stack 0
  2776  000007                     __get_available_offset_from_buffer@offset:
  2777                           	opt stack 0
  2778  000007                     spi_tx_tx@data_length:
  2779                           	opt stack 0
  2780  000007                     spi_tx_rx@data_length:
  2781                           	opt stack 0
  2782  000007                     memset@p:
  2783                           	opt stack 0
  2784                           
  2785                           ; 2 bytes @ 0x6
  2786  000007                     	ds	1
  2787  000008                     ??__fill_buffer_get_display:
  2788  000008                     __i2c_write@length:
  2789                           	opt stack 0
  2790  000008                     __i2c_read@length:
  2791                           	opt stack 0
  2792  000008                     i2c_display_write_fixed@length:
  2793                           	opt stack 0
  2794  000008                     __read_value_from_offset@value:
  2795                           	opt stack 0
  2796  000008                     utoa@buf:
  2797                           	opt stack 0
  2798  000008                     memcpy@s:
  2799                           	opt stack 0
  2800                           
  2801                           ; 3 bytes @ 0x7
  2802  000008                     	ds	1
  2803  000009                     ??_spi_tx_rx:
  2804  000009                     ??_spi_tx_tx:
  2805  000009                     ??__i2c_read:
  2806  000009                     ?_internalFlash_addressWithinPage:
  2807                           	opt stack 0
  2808  000009                     USBDeviceInit@i:
  2809                           	opt stack 0
  2810  000009                     USBEnableEndpoint@options:
  2811                           	opt stack 0
  2812  000009                     USBTransferOnePacket@ep:
  2813                           	opt stack 0
  2814  000009                     MSDErrorHandler@ErrorCase:
  2815                           	opt stack 0
  2816  000009                     __i2c_write@slave_address:
  2817                           	opt stack 0
  2818  000009                     i2c_display_write_fixed@pos:
  2819                           	opt stack 0
  2820  000009                     __flash_wakeup@command:
  2821                           	opt stack 0
  2822  000009                     hexCharsToUint16@c1:
  2823                           	opt stack 0
  2824  000009                     ___llmod@counter:
  2825                           	opt stack 0
  2826  000009                     internalFlash_erasePage@page:
  2827                           	opt stack 0
  2828  000009                     internalFlash_writePage@page:
  2829                           	opt stack 0
  2830  000009                     internalFlash_addressWithinPage@address:
  2831                           	opt stack 0
  2832  000009                     ___lldiv@quotient:
  2833                           	opt stack 0
  2834                           
  2835                           ; 4 bytes @ 0x8
  2836  000009                     	ds	1
  2837  00000A                     MSDErrorHandler@OldMSD_State:
  2838                           	opt stack 0
  2839  00000A                     __i2c_write@cntr:
  2840                           	opt stack 0
  2841  00000A                     __bootloader_check_address@worst_case:
  2842                           	opt stack 0
  2843  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2844                           	opt stack 0
  2845  00000A                     USBEnableEndpoint@p:
  2846                           	opt stack 0
  2847  00000A                     USBTransferOnePacket@handle:
  2848                           	opt stack 0
  2849  00000A                     hexCharsToUint16@retVal:
  2850                           	opt stack 0
  2851  00000A                     utoa@val:
  2852                           	opt stack 0
  2853                           
  2854                           ; 2 bytes @ 0x9
  2855  00000A                     	ds	1
  2856  00000B                     ??_internalFlash_erasePage:
  2857  00000B                     ??_internalFlash_writePage:
  2858  00000B                     __ic2_display_set_address@address:
  2859                           	opt stack 0
  2860  00000B                     i2c_digipot_backlight@level:
  2861                           	opt stack 0
  2862  00000B                     __bootloader_check_address@byte_status:
  2863                           	opt stack 0
  2864  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2865                           	opt stack 0
  2866  00000B                     i2c_digipot_reset_on@data_array:
  2867                           	opt stack 0
  2868  00000B                     i2c_digipot_reset_off@data_array:
  2869                           	opt stack 0
  2870  00000B                     i2c_eeprom_writeByte@address:
  2871                           	opt stack 0
  2872  00000B                     memcpy@d:
  2873                           	opt stack 0
  2874  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2875                           	opt stack 0
  2876  00000B                     i2c_display_send_init_sequence@init_sequence:
  2877                           	opt stack 0
  2878                           
  2879                           ; 9 bytes @ 0xA
  2880  00000B                     	ds	1
  2881  00000C                     ??_USBMSDInit:
  2882  00000C                     ?_parseHexFileEntry:
  2883                           	opt stack 0
  2884  00000C                     USBEnableEndpoint@ep:
  2885                           	opt stack 0
  2886  00000C                     __bootloader_check_address@cntr:
  2887                           	opt stack 0
  2888  00000C                     _USBCheckMSDRequest$2319:
  2889                           	opt stack 0
  2890  00000C                     MSDTransferTerminated@handle:
  2891                           	opt stack 0
  2892  00000C                     __ic2_display_set_address@data_array:
  2893                           	opt stack 0
  2894  00000C                     i2c_digipot_backlight@data_array:
  2895                           	opt stack 0
  2896  00000C                     parseHexFileEntry@data:
  2897                           	opt stack 0
  2898  00000C                     utoa@base:
  2899                           	opt stack 0
  2900  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2901                           	opt stack 0
  2902                           
  2903                           ; 4 bytes @ 0xB
  2904  00000C                     	ds	1
  2905  00000D                     ?__flash_get_status:
  2906                           	opt stack 0
  2907  00000D                     i2c_eeprom_writeByte@data:
  2908                           	opt stack 0
  2909  00000D                     __fill_buffer_get_display@cntr:
  2910                           	opt stack 0
  2911  00000D                     ___lldiv@counter:
  2912                           	opt stack 0
  2913  00000D                     memcpy@tmp:
  2914                           	opt stack 0
  2915  00000D                     internalFlash_addressWithinPage@page:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0xC
  2919  00000D                     	ds	1
  2920  00000E                     ??_i2c_eeprom_writeByte:
  2921  00000E                     i2c_display_cursor@position:
  2922                           	opt stack 0
  2923  00000E                     __fill_buffer_get_display@line:
  2924                           	opt stack 0
  2925  00000E                     _USBCheckMSDRequest$2320:
  2926                           	opt stack 0
  2927  00000E                     _MSDTransferTerminated$2407:
  2928                           	opt stack 0
  2929  00000E                     utoa@v:
  2930                           	opt stack 0
  2931  00000E                     __display_itoa_u32@value:
  2932                           	opt stack 0
  2933  00000E                     parseHexFileEntry@offset:
  2934                           	opt stack 0
  2935  00000E                     internalFlash_read@address:
  2936                           	opt stack 0
  2937                           
  2938                           ; 4 bytes @ 0xD
  2939  00000E                     	ds	1
  2940  00000F                     ??_internalFlash_addressWithinPage:
  2941  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2942                           	opt stack 0
  2943  00000F                     i2c_display_cursor@line:
  2944                           	opt stack 0
  2945  00000F                     __flash_get_status@command:
  2946                           	opt stack 0
  2947  00000F                     __fill_buffer_get_display@start_line:
  2948                           	opt stack 0
  2949  00000F                     internalFlash_writePage@cntr:
  2950                           	opt stack 0
  2951  00000F                     internalFlash_erasePage@address:
  2952                           	opt stack 0
  2953                           
  2954                           ; 4 bytes @ 0xE
  2955  00000F                     	ds	1
  2956  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2957                           	opt stack 0
  2958  000010                     __i2c_read@slave_address:
  2959                           	opt stack 0
  2960  000010                     i2c_display_cursor@address:
  2961                           	opt stack 0
  2962  000010                     __fill_buffer_get_display@position:
  2963                           	opt stack 0
  2964  000010                     utoa@c:
  2965                           	opt stack 0
  2966  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2967                           	opt stack 0
  2968  000010                     __flash_get_status@status:
  2969                           	opt stack 0
  2970  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2971                           	opt stack 0
  2972                           
  2973                           ; 2 bytes @ 0xF
  2974  000010                     	ds	1
  2975  000011                     MSDCheckForErrorCases@DeviceNoData:
  2976                           	opt stack 0
  2977  000011                     __i2c_read@cntr:
  2978                           	opt stack 0
  2979  000011                     internalFlash_writePage@block_cntr:
  2980                           	opt stack 0
  2981  000011                     i2c_eeprom_writeByte@dat:
  2982                           	opt stack 0
  2983  000011                     itoa@buf:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x10
  2987  000011                     	ds	1
  2988  000012                     internalFlash_writePage@byte_cntr:
  2989                           	opt stack 0
  2990  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2991                           	opt stack 0
  2992  000012                     i2c_eeprom_readByte@address:
  2993                           	opt stack 0
  2994  000012                     __display_itoa_u32@text:
  2995                           	opt stack 0
  2996  000012                     __flash_is_busy@status:
  2997                           	opt stack 0
  2998  000012                     parseHexFileEntry@hexEntry:
  2999                           	opt stack 0
  3000  000012                     internalFlash_read@data_length:
  3001                           	opt stack 0
  3002                           
  3003                           ; 2 bytes @ 0x11
  3004  000012                     	ds	1
  3005  000013                     i2c_eeprom_writeByte@slave_address:
  3006                           	opt stack 0
  3007  000013                     itoa@val:
  3008                           	opt stack 0
  3009  000013                     internalFlash_writePage@address:
  3010                           	opt stack 0
  3011  000013                     internalFlash_addressWithinPage@page_start_address:
  3012                           	opt stack 0
  3013                           
  3014                           ; 4 bytes @ 0x12
  3015  000013                     	ds	1
  3016  000014                     ??_i2c_eeprom_readByte:
  3017  000014                     ??_parseHexFileEntry:
  3018  000014                     __display_itoa_u32@cntr:
  3019                           	opt stack 0
  3020  000014                     flash_is_busy@result:
  3021                           	opt stack 0
  3022  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3023                           	opt stack 0
  3024  000014                     __flash_copy_page_to_buffer@page:
  3025                           	opt stack 0
  3026  000014                     __flash_compare_page_to_buffer@page:
  3027                           	opt stack 0
  3028  000014                     __flash_write_to_buffer@start:
  3029                           	opt stack 0
  3030  000014                     __flash_write_page_from_buffer@page:
  3031                           	opt stack 0
  3032  000014                     __flash_partial_read@page:
  3033                           	opt stack 0
  3034  000014                     __flash_buffer_read@start:
  3035                           	opt stack 0
  3036  000014                     internalFlash_read@buffer:
  3037                           	opt stack 0
  3038  000014                     __flash_set_page_size@command:
  3039                           	opt stack 0
  3040                           
  3041                           ; 4 bytes @ 0x13
  3042  000014                     	ds	1
  3043  000015                     __display_itoa_u32@number_of_digits:
  3044                           	opt stack 0
  3045  000015                     __fill_buffer_get_status@outBuffer:
  3046                           	opt stack 0
  3047  000015                     itoa@base:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x14
  3051  000015                     	ds	1
  3052  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3053  000016                     ??__display_found:
  3054  000016                     __flash_copy_page_to_buffer@buffer:
  3055                           	opt stack 0
  3056  000016                     __flash_compare_page_to_buffer@buffer:
  3057                           	opt stack 0
  3058  000016                     __flash_write_page_from_buffer@buffer:
  3059                           	opt stack 0
  3060  000016                     __flash_write_to_buffer@data:
  3061                           	opt stack 0
  3062  000016                     __flash_partial_read@start:
  3063                           	opt stack 0
  3064  000016                     __flash_buffer_read@length:
  3065                           	opt stack 0
  3066  000016                     internalFlash_readPage@page:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x15
  3070  000016                     	ds	1
  3071  000017                     ??__flash_copy_page_to_buffer:
  3072  000017                     ??__flash_compare_page_to_buffer:
  3073  000017                     ??__flash_write_page_from_buffer:
  3074  000017                     i2c_eeprom_readByte@slave_address:
  3075                           	opt stack 0
  3076  000017                     itoa@cp:
  3077                           	opt stack 0
  3078                           
  3079                           ; 2 bytes @ 0x16
  3080  000017                     	ds	1
  3081  000018                     ??_USBStdFeatureReqHandler:
  3082  000018                     USBStdSetCfgHandler@i:
  3083                           	opt stack 0
  3084  000018                     i2c_eeprom_readByte@addr:
  3085                           	opt stack 0
  3086  000018                     __display_found@start:
  3087                           	opt stack 0
  3088  000018                     __flash_set_page_size@size:
  3089                           	opt stack 0
  3090  000018                     __flash_write_to_buffer@data_length:
  3091                           	opt stack 0
  3092  000018                     __flash_partial_read@length:
  3093                           	opt stack 0
  3094  000018                     __flash_buffer_read@data:
  3095                           	opt stack 0
  3096  000018                     internalFlash_readPage@address:
  3097                           	opt stack 0
  3098                           
  3099                           ; 4 bytes @ 0x17
  3100  000018                     	ds	1
  3101  000019                     __display_found@cntr:
  3102                           	opt stack 0
  3103  000019                     USBStdFeatureReqHandler@pUEP:
  3104                           	opt stack 0
  3105  000019                     __display_itoa_u16@value:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x18
  3109  000019                     	ds	1
  3110  00001A                     __flash_write_to_buffer@buffer:
  3111                           	opt stack 0
  3112  00001A                     __flash_buffer_read@buffer:
  3113                           	opt stack 0
  3114  00001A                     __flash_compare_page_to_buffer@status:
  3115                           	opt stack 0
  3116  00001A                     __flash_partial_read@data:
  3117                           	opt stack 0
  3118  00001A                     __flash_copy_page_to_buffer@command:
  3119                           	opt stack 0
  3120  00001A                     __flash_write_page_from_buffer@command:
  3121                           	opt stack 0
  3122                           
  3123                           ; 4 bytes @ 0x19
  3124  00001A                     	ds	1
  3125  00001B                     USBStdFeatureReqHandler@current_ep_data:
  3126                           	opt stack 0
  3127  00001B                     __display_itoa_u16@text:
  3128                           	opt stack 0
  3129  00001B                     __flash_write_to_buffer@command:
  3130                           	opt stack 0
  3131  00001B                     __flash_buffer_read@command:
  3132                           	opt stack 0
  3133                           
  3134                           ; 4 bytes @ 0x1A
  3135  00001B                     	ds	1
  3136  00001C                     ??__flash_partial_read:
  3137  00001C                     parseHexFileEntry@i:
  3138                           	opt stack 0
  3139  00001C                     USBStdFeatureReqHandler@p:
  3140                           	opt stack 0
  3141  00001C                     __flash_compare_page_to_buffer@command:
  3142                           	opt stack 0
  3143                           
  3144                           ; 4 bytes @ 0x1B
  3145  00001C                     	ds	1
  3146  00001D                     ??__display_verify:
  3147  00001D                     ??__display_checked:
  3148  00001D                     __display_start@cntr:
  3149                           	opt stack 0
  3150  00001D                     __display_failed@cntr:
  3151                           	opt stack 0
  3152  00001D                     __display_programming@cntr:
  3153                           	opt stack 0
  3154  00001D                     __display_done@cntr:
  3155                           	opt stack 0
  3156                           
  3157                           ; 1 bytes @ 0x1C
  3158  00001D                     	ds	1
  3159  00001E                     ??_USBCtrlEPService:
  3160  00001E                     flash_copy_page_to_buffer@page:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x1D
  3164  00001E                     	ds	1
  3165  00001F                     __display_verify@cntr:
  3166                           	opt stack 0
  3167  00001F                     __display_checked@start:
  3168                           	opt stack 0
  3169  00001F                     flash_read_from_buffer@start:
  3170                           	opt stack 0
  3171  00001F                     flash_write_to_buffer@start:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x1E
  3175  00001F                     	ds	1
  3176  000020                     USBDeviceTasks@i:
  3177                           	opt stack 0
  3178  000020                     __display_checked@cntr:
  3179                           	opt stack 0
  3180  000020                     flash_sector_write@page:
  3181                           	opt stack 0
  3182  000020                     flash_partial_write@page:
  3183                           	opt stack 0
  3184  000020                     __flash_partial_read@command:
  3185                           	opt stack 0
  3186                           
  3187                           ; 4 bytes @ 0x1F
  3188  000020                     	ds	1
  3189  000021                     ??_display_prepare:
  3190  000021                     flash_read_from_buffer@length:
  3191                           	opt stack 0
  3192  000021                     flash_write_to_buffer@length:
  3193                           	opt stack 0
  3194                           
  3195                           ; 2 bytes @ 0x20
  3196  000021                     	ds	1
  3197  000022                     flash_sector_write@data:
  3198                           	opt stack 0
  3199  000022                     flash_partial_write@start:
  3200                           	opt stack 0
  3201                           
  3202                           ; 2 bytes @ 0x21
  3203  000022                     	ds	1
  3204  000023                     display_prepare@mode:
  3205                           	opt stack 0
  3206  000023                     flash_read_from_buffer@data:
  3207                           	opt stack 0
  3208  000023                     flash_write_to_buffer@data:
  3209                           	opt stack 0
  3210                           
  3211                           ; 2 bytes @ 0x22
  3212  000023                     	ds	1
  3213  000024                     flash_sector_write@match:
  3214                           	opt stack 0
  3215  000024                     __parse_command_short@cmd:
  3216                           	opt stack 0
  3217  000024                     flash_partial_write@length:
  3218                           	opt stack 0
  3219  000024                     __flash_partial_read@address:
  3220                           	opt stack 0
  3221                           
  3222                           ; 4 bytes @ 0x23
  3223  000024                     	ds	1
  3224  000025                     ExternalFlash_SectorWrite@config:
  3225                           	opt stack 0
  3226  000025                     fat_format@cntr:
  3227                           	opt stack 0
  3228  000025                     fat_read_from_buffer@start:
  3229                           	opt stack 0
  3230  000025                     fat_write_to_buffer@start:
  3231                           	opt stack 0
  3232                           
  3233                           ; 2 bytes @ 0x24
  3234  000025                     	ds	1
  3235  000026                     flash_partial_write@data:
  3236                           	opt stack 0
  3237                           
  3238                           ; 2 bytes @ 0x25
  3239  000026                     	ds	1
  3240  000027                     fat_read_from_buffer@length:
  3241                           	opt stack 0
  3242  000027                     fat_write_to_buffer@length:
  3243                           	opt stack 0
  3244  000027                     __parse_format_drive@data:
  3245                           	opt stack 0
  3246  000027                     ExternalFlash_SectorWrite@sector_addr:
  3247                           	opt stack 0
  3248                           
  3249                           ; 4 bytes @ 0x26
  3250  000027                     	ds	1
  3251  000028                     flash_partial_write@match:
  3252                           	opt stack 0
  3253  000028                     flash_sector_read@page:
  3254                           	opt stack 0
  3255  000028                     flash_partial_read@page:
  3256                           	opt stack 0
  3257                           
  3258                           ; 2 bytes @ 0x27
  3259  000028                     	ds	1
  3260  000029                     __write_root@data:
  3261                           	opt stack 0
  3262  000029                     __delete_root@sector:
  3263                           	opt stack 0
  3264  000029                     fat_read_from_buffer@data:
  3265                           	opt stack 0
  3266  000029                     fat_write_to_buffer@data:
  3267                           	opt stack 0
  3268  000029                     __parse_format_drive@out_buffer:
  3269                           	opt stack 0
  3270                           
  3271                           ; 2 bytes @ 0x28
  3272  000029                     	ds	1
  3273  00002A                     flash_sector_read@data:
  3274                           	opt stack 0
  3275  00002A                     flash_partial_read@start:
  3276                           	opt stack 0
  3277                           
  3278                           ; 2 bytes @ 0x29
  3279  00002A                     	ds	1
  3280  00002B                     ExternalFlash_SectorWrite@buffer:
  3281                           	opt stack 0
  3282  00002B                     __write_root@sector:
  3283                           	opt stack 0
  3284  00002B                     __delete_root@offset:
  3285                           	opt stack 0
  3286  00002B                     __fill_buffer_read_buffer@inBuffer:
  3287                           	opt stack 0
  3288  00002B                     __parse_format_drive@out_idx_ptr:
  3289                           	opt stack 0
  3290  00002B                     __parse_write_buffer@data:
  3291                           	opt stack 0
  3292                           
  3293                           ; 2 bytes @ 0x2A
  3294  00002B                     	ds	1
  3295  00002C                     ??_fat_get_format_status:
  3296  00002C                     ?__get_available_cluster:
  3297                           	opt stack 0
  3298  00002C                     flash_partial_read@length:
  3299                           	opt stack 0
  3300  00002C                     ExternalFlash_SectorRead@config:
  3301                           	opt stack 0
  3302  00002C                     __get_available_cluster@first_sector:
  3303                           	opt stack 0
  3304  00002C                     fat_find_file@name:
  3305                           	opt stack 0
  3306                           
  3307                           ; 2 bytes @ 0x2B
  3308  00002C                     	ds	1
  3309  00002D                     ??__parse_format_drive:
  3310  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3311                           	opt stack 0
  3312  00002D                     __delete_root@deleted_value:
  3313                           	opt stack 0
  3314  00002D                     __write_root@offset:
  3315                           	opt stack 0
  3316  00002D                     __fill_buffer_read_buffer@outBuffer:
  3317                           	opt stack 0
  3318  00002D                     __parse_write_buffer@out_buffer:
  3319                           	opt stack 0
  3320                           
  3321                           ; 2 bytes @ 0x2C
  3322  00002D                     	ds	1
  3323  00002E                     __delete_root@file_number:
  3324                           	opt stack 0
  3325  00002E                     __parse_format_drive@return_value:
  3326                           	opt stack 0
  3327  00002E                     flash_partial_read@data:
  3328                           	opt stack 0
  3329  00002E                     ExternalFlash_SectorWrite@page:
  3330                           	opt stack 0
  3331  00002E                     __get_available_cluster@skip_sector:
  3332                           	opt stack 0
  3333  00002E                     fat_find_file@extension:
  3334                           	opt stack 0
  3335  00002E                     fat_get_format_status@cntr:
  3336                           	opt stack 0
  3337  00002E                     ExternalFlash_SectorRead@sector_addr:
  3338                           	opt stack 0
  3339                           
  3340                           ; 4 bytes @ 0x2D
  3341  00002E                     	ds	1
  3342  00002F                     ??__fill_buffer_read_buffer:
  3343  00002F                     __write_root@file_number:
  3344                           	opt stack 0
  3345  00002F                     __parse_write_buffer@out_idx_ptr:
  3346                           	opt stack 0
  3347                           
  3348                           ; 2 bytes @ 0x2E
  3349  00002F                     	ds	1
  3350  000030                     ??_MSDWriteHandler:
  3351  000030                     ??_fat_find_file:
  3352  000030                     ?__read_fat:
  3353                           	opt stack 0
  3354  000030                     ?__get_first_cluster:
  3355                           	opt stack 0
  3356  000030                     __get_available_cluster@cluster:
  3357                           	opt stack 0
  3358  000030                     __root_is_available@root_sector:
  3359                           	opt stack 0
  3360  000030                     __read_fat@cluster:
  3361                           	opt stack 0
  3362  000030                     fat_get_file_information@data:
  3363                           	opt stack 0
  3364                           
  3365                           ; 2 bytes @ 0x2F
  3366  000030                     	ds	1
  3367  000031                     ??__parse_write_buffer:
  3368  000031                     __fill_buffer_read_buffer@start:
  3369                           	opt stack 0
  3370                           
  3371                           ; 2 bytes @ 0x30
  3372  000031                     	ds	1
  3373  000032                     fat_find_file@file_number:
  3374                           	opt stack 0
  3375  000032                     ExternalFlash_SectorRead@buffer:
  3376                           	opt stack 0
  3377  000032                     __get_available_cluster@offset:
  3378                           	opt stack 0
  3379  000032                     __root_is_available@offset:
  3380                           	opt stack 0
  3381  000032                     __read_fat@sector:
  3382                           	opt stack 0
  3383  000032                     __get_first_cluster@sector:
  3384                           	opt stack 0
  3385  000032                     __parse_write_buffer@number_of_bytes:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x31
  3389  000032                     	ds	1
  3390  000033                     fat_find_file@sector:
  3391                           	opt stack 0
  3392  000033                     fat_get_file_information@root_sector:
  3393                           	opt stack 0
  3394  000033                     __fill_buffer_read_buffer@data_length:
  3395                           	opt stack 0
  3396                           
  3397                           ; 2 bytes @ 0x32
  3398  000033                     	ds	1
  3399  000034                     __root_is_available@file_number:
  3400                           	opt stack 0
  3401  000034                     ExternalFlash_SectorRead@page:
  3402                           	opt stack 0
  3403  000034                     __get_available_cluster@sector:
  3404                           	opt stack 0
  3405  000034                     __read_fat@offset:
  3406                           	opt stack 0
  3407  000034                     __get_first_cluster@offset:
  3408                           	opt stack 0
  3409  000034                     __parse_write_buffer@start_byte:
  3410                           	opt stack 0
  3411                           
  3412                           ; 2 bytes @ 0x33
  3413  000034                     	ds	1
  3414  000035                     __root_is_available@first_byte:
  3415                           	opt stack 0
  3416  000035                     fat_find_file@offset:
  3417                           	opt stack 0
  3418  000035                     fat_get_file_information@offset:
  3419                           	opt stack 0
  3420                           
  3421                           ; 2 bytes @ 0x34
  3422  000035                     	ds	1
  3423  000036                     ??_MSDReadHandler:
  3424  000036                     ?__make_cluster_chain:
  3425                           	opt stack 0
  3426  000036                     ?_fat_get_file_size:
  3427                           	opt stack 0
  3428  000036                     __get_available_root_entry@file_number:
  3429                           	opt stack 0
  3430  000036                     __make_cluster_chain@first_cluster:
  3431                           	opt stack 0
  3432  000036                     __read_fat@value:
  3433                           	opt stack 0
  3434  000036                     __get_first_cluster@first_cluster:
  3435                           	opt stack 0
  3436                           
  3437                           ; 2 bytes @ 0x35
  3438  000036                     	ds	1
  3439  000037                     fat_get_file_information@file_number:
  3440                           	opt stack 0
  3441  000037                     __fill_buffer_find_file@inBuffer:
  3442                           	opt stack 0
  3443                           
  3444                           ; 2 bytes @ 0x36
  3445  000037                     	ds	1
  3446  000038                     ?__find_nth_cluster:
  3447                           	opt stack 0
  3448  000038                     __get_first_cluster@file_number:
  3449                           	opt stack 0
  3450  000038                     __find_nth_cluster@cluster:
  3451                           	opt stack 0
  3452  000038                     __make_cluster_chain@number_of_clusters:
  3453                           	opt stack 0
  3454  000038                     fat_rename_file@name:
  3455                           	opt stack 0
  3456  000038                     __fill_buffer_get_file_details@inBuffer:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x37
  3460  000038                     	ds	1
  3461  000039                     __fill_buffer_find_file@outBuffer:
  3462                           	opt stack 0
  3463                           
  3464                           ; 2 bytes @ 0x38
  3465  000039                     	ds	1
  3466  00003A                     ??_MSDProcessCommandMediaPresent:
  3467  00003A                     ??__make_cluster_chain:
  3468  00003A                     __find_nth_cluster@n:
  3469                           	opt stack 0
  3470  00003A                     fat_get_file_size@sector:
  3471                           	opt stack 0
  3472  00003A                     fat_rename_file@extension:
  3473                           	opt stack 0
  3474  00003A                     __fill_buffer_get_file_details@outBuffer:
  3475                           	opt stack 0
  3476                           
  3477                           ; 2 bytes @ 0x39
  3478  00003A                     	ds	1
  3479  00003B                     ??__fill_buffer_find_file:
  3480                           
  3481                           ; 1 bytes @ 0x3A
  3482  00003B                     	ds	1
  3483  00003C                     ??__fill_buffer_get_file_details:
  3484  00003C                     fat_rename_file@file_number:
  3485                           	opt stack 0
  3486  00003C                     _MSDProcessCommandMediaPresent$2390:
  3487                           	opt stack 0
  3488  00003C                     __find_nth_cluster@offset:
  3489                           	opt stack 0
  3490  00003C                     __make_cluster_chain@next_offset:
  3491                           	opt stack 0
  3492  00003C                     fat_get_file_size@offset:
  3493                           	opt stack 0
  3494                           
  3495                           ; 2 bytes @ 0x3B
  3496  00003C                     	ds	1
  3497  00003D                     fat_rename_file@return_code:
  3498                           	opt stack 0
  3499  00003D                     __fill_buffer_get_file_details@file_number:
  3500                           	opt stack 0
  3501                           
  3502                           ; 1 bytes @ 0x3C
  3503  00003D                     	ds	1
  3504  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3505                           	opt stack 0
  3506  00003E                     __find_nth_cluster@sector_in_buffer:
  3507                           	opt stack 0
  3508  00003E                     __make_cluster_chain@minimum_sector:
  3509                           	opt stack 0
  3510  00003E                     fat_get_file_size@file_size:
  3511                           	opt stack 0
  3512  00003E                     fat_rename_file@root:
  3513                           	opt stack 0
  3514                           
  3515                           ; 32 bytes @ 0x3D
  3516  00003E                     	ds	1
  3517  00003F                     __fill_buffer_find_file@cntr:
  3518                           	opt stack 0
  3519  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3520                           	opt stack 0
  3521                           
  3522                           ; 4 bytes @ 0x3E
  3523  00003F                     	ds	1
  3524  000040                     __find_nth_cluster@sector:
  3525                           	opt stack 0
  3526  000040                     __make_cluster_chain@different_sector_cluster:
  3527                           	opt stack 0
  3528                           
  3529                           ; 2 bytes @ 0x3F
  3530  000040                     	ds	2
  3531  000042                     __make_cluster_chain@data_changed:
  3532                           	opt stack 0
  3533  000042                     fat_get_file_size@file_number:
  3534                           	opt stack 0
  3535  000042                     fat_read_from_file_fast@start_byte:
  3536                           	opt stack 0
  3537  000042                     fat_modify_file@start_byte:
  3538                           	opt stack 0
  3539                           
  3540                           ; 4 bytes @ 0x41
  3541  000042                     	ds	1
  3542  000043                     __make_cluster_chain@remaining_clusters:
  3543                           	opt stack 0
  3544  000043                     fat_copy_sector_to_buffer@sector:
  3545                           	opt stack 0
  3546  000043                     fat_write_sector_from_buffer@sector:
  3547                           	opt stack 0
  3548  000043                     MSDProcessCommandMediaPresent@capacity:
  3549                           	opt stack 0
  3550                           
  3551                           ; 4 bytes @ 0x42
  3552  000043                     	ds	2
  3553  000045                     ??_fat_copy_sector_to_buffer:
  3554  000045                     ??_fat_write_sector_from_buffer:
  3555  000045                     __make_cluster_chain@sector:
  3556                           	opt stack 0
  3557                           
  3558                           ; 2 bytes @ 0x44
  3559  000045                     	ds	1
  3560  000046                     fat_modify_file@length:
  3561                           	opt stack 0
  3562  000046                     fat_read_from_file_fast@length:
  3563                           	opt stack 0
  3564                           
  3565                           ; 4 bytes @ 0x45
  3566  000046                     	ds	1
  3567  000047                     MSDProcessCommandMediaPresent@i:
  3568                           	opt stack 0
  3569  000047                     __make_cluster_chain@sector_in_buffer:
  3570                           	opt stack 0
  3571                           
  3572                           ; 2 bytes @ 0x46
  3573  000047                     	ds	1
  3574  000048                     ??_MSDProcessCommand:
  3575  000048                     fat_modify_file@data:
  3576                           	opt stack 0
  3577                           
  3578                           ; 2 bytes @ 0x47
  3579  000048                     	ds	1
  3580  000049                     __make_cluster_chain@offset:
  3581                           	opt stack 0
  3582  000049                     fat_write_sector_from_buffer@cluster:
  3583                           	opt stack 0
  3584  000049                     fat_copy_sector_to_buffer@file_size:
  3585                           	opt stack 0
  3586                           
  3587                           ; 4 bytes @ 0x48
  3588  000049                     	ds	1
  3589  00004A                     ??_fat_modify_file:
  3590  00004A                     fat_read_from_file_fast@data:
  3591                           	opt stack 0
  3592                           
  3593                           ; 2 bytes @ 0x49
  3594  00004A                     	ds	1
  3595  00004B                     __make_cluster_chain@next_cluster:
  3596                           	opt stack 0
  3597  00004B                     fat_write_sector_from_buffer@file_size:
  3598                           	opt stack 0
  3599                           
  3600                           ; 4 bytes @ 0x4A
  3601  00004B                     	ds	1
  3602  00004C                     fat_read_from_file_fast@cluster:
  3603                           	opt stack 0
  3604                           
  3605                           ; 2 bytes @ 0x4B
  3606  00004C                     	ds	1
  3607  00004D                     ??_MSDTasks:
  3608  00004D                     fat_create_file@name:
  3609                           	opt stack 0
  3610  00004D                     fat_delete_file@first_cluster:
  3611                           	opt stack 0
  3612  00004D                     fat_copy_sector_to_buffer@number_of_clusters:
  3613                           	opt stack 0
  3614  00004D                     fat_resize_file@new_file_size:
  3615                           	opt stack 0
  3616                           
  3617                           ; 4 bytes @ 0x4C
  3618  00004D                     	ds	1
  3619  00004E                     _MSDTasks$2372:
  3620                           	opt stack 0
  3621  00004E                     fat_read_from_file_fast@cluster_number:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x4D
  3625  00004E                     	ds	1
  3626  00004F                     fat_delete_file@file_number:
  3627                           	opt stack 0
  3628  00004F                     fat_create_file@extension:
  3629                           	opt stack 0
  3630  00004F                     fat_copy_sector_to_buffer@physical_sector:
  3631                           	opt stack 0
  3632  00004F                     fat_write_sector_from_buffer@number_of_clusters:
  3633                           	opt stack 0
  3634                           
  3635                           ; 2 bytes @ 0x4E
  3636  00004F                     	ds	1
  3637  000050                     ??_fat_read_from_file_fast:
  3638  000050                     _MSDTasks$2373:
  3639                           	opt stack 0
  3640  000050                     __parse_file_delete@data:
  3641                           	opt stack 0
  3642                           
  3643                           ; 2 bytes @ 0x4F
  3644  000050                     	ds	1
  3645  000051                     ??_fat_resize_file:
  3646  000051                     fat_write_sector_from_buffer@file_number:
  3647                           	opt stack 0
  3648  000051                     fat_copy_sector_to_buffer@cluster:
  3649                           	opt stack 0
  3650  000051                     fat_create_file@size:
  3651                           	opt stack 0
  3652                           
  3653                           ; 4 bytes @ 0x50
  3654  000051                     	ds	1
  3655  000052                     MSDTasks@i:
  3656                           	opt stack 0
  3657  000052                     __parse_file_delete@out_buffer:
  3658                           	opt stack 0
  3659  000052                     __parse_buffer_to_sector@data:
  3660                           	opt stack 0
  3661                           
  3662                           ; 2 bytes @ 0x51
  3663  000052                     	ds	1
  3664  000053                     fat_copy_sector_to_buffer@file_number:
  3665                           	opt stack 0
  3666                           
  3667                           ; 1 bytes @ 0x52
  3668  000053                     	ds	1
  3669  000054                     __parse_file_delete@out_idx_ptr:
  3670                           	opt stack 0
  3671  000054                     __parse_sector_to_buffer@data:
  3672                           	opt stack 0
  3673  000054                     __parse_buffer_to_sector@out_buffer:
  3674                           	opt stack 0
  3675                           
  3676                           ; 2 bytes @ 0x53
  3677  000054                     	ds	1
  3678  000055                     ??_fat_create_file:
  3679  000055                     __parse_file_resize@data:
  3680                           	opt stack 0
  3681                           
  3682                           ; 2 bytes @ 0x54
  3683  000055                     	ds	1
  3684  000056                     ??__parse_file_delete:
  3685  000056                     fat_append_to_file@number_of_bytes:
  3686                           	opt stack 0
  3687  000056                     __parse_file_modify@data:
  3688                           	opt stack 0
  3689  000056                     __parse_sector_to_buffer@out_buffer:
  3690                           	opt stack 0
  3691  000056                     __parse_buffer_to_sector@out_idx_ptr:
  3692                           	opt stack 0
  3693                           
  3694                           ; 2 bytes @ 0x55
  3695  000056                     	ds	1
  3696  000057                     __parse_file_delete@return_value:
  3697                           	opt stack 0
  3698  000057                     __parse_file_resize@out_buffer:
  3699                           	opt stack 0
  3700                           
  3701                           ; 2 bytes @ 0x56
  3702  000057                     	ds	1
  3703  000058                     ??__parse_buffer_to_sector:
  3704  000058                     __parse_file_delete@file_number:
  3705                           	opt stack 0
  3706  000058                     fat_append_to_file@data:
  3707                           	opt stack 0
  3708  000058                     __parse_file_modify@out_buffer:
  3709                           	opt stack 0
  3710  000058                     __parse_sector_to_buffer@out_idx_ptr:
  3711                           	opt stack 0
  3712                           
  3713                           ; 2 bytes @ 0x57
  3714  000058                     	ds	1
  3715  000059                     __parse_buffer_to_sector@return_value:
  3716                           	opt stack 0
  3717  000059                     fat_copy_file@name:
  3718                           	opt stack 0
  3719  000059                     __parse_file_resize@out_idx_ptr:
  3720                           	opt stack 0
  3721  000059                     __parse_file_create@data:
  3722                           	opt stack 0
  3723                           
  3724                           ; 2 bytes @ 0x58
  3725  000059                     	ds	1
  3726  00005A                     ??__parse_sector_to_buffer:
  3727  00005A                     __parse_buffer_to_sector@file_number:
  3728                           	opt stack 0
  3729  00005A                     __parse_file_append@data:
  3730                           	opt stack 0
  3731  00005A                     __parse_file_modify@out_idx_ptr:
  3732                           	opt stack 0
  3733                           
  3734                           ; 2 bytes @ 0x59
  3735  00005A                     	ds	1
  3736  00005B                     ??__parse_file_resize:
  3737  00005B                     __parse_sector_to_buffer@file_number:
  3738                           	opt stack 0
  3739  00005B                     fat_copy_file@extension:
  3740                           	opt stack 0
  3741  00005B                     __parse_file_create@out_buffer:
  3742                           	opt stack 0
  3743  00005B                     __parse_buffer_to_sector@sector:
  3744                           	opt stack 0
  3745                           
  3746                           ; 2 bytes @ 0x5A
  3747  00005B                     	ds	1
  3748  00005C                     ??__parse_file_modify:
  3749  00005C                     ??_fat_read_from_file:
  3750  00005C                     bootloader_run@timeslot:
  3751                           	opt stack 0
  3752  00005C                     __parse_sector_to_buffer@return_value:
  3753                           	opt stack 0
  3754  00005C                     __parse_file_append@out_buffer:
  3755                           	opt stack 0
  3756                           
  3757                           ; 2 bytes @ 0x5B
  3758  00005C                     	ds	1
  3759  00005D                     ??__parse_file_copy:
  3760  00005D                     __parse_file_create@out_idx_ptr:
  3761                           	opt stack 0
  3762  00005D                     __parse_sector_to_buffer@sector:
  3763                           	opt stack 0
  3764                           
  3765                           ; 2 bytes @ 0x5C
  3766  00005D                     	ds	1
  3767  00005E                     fat_rename_file@cntr:
  3768                           	opt stack 0
  3769  00005E                     __parse_file_copy@return_value:
  3770                           	opt stack 0
  3771  00005E                     __parse_file_append@out_idx_ptr:
  3772                           	opt stack 0
  3773                           
  3774                           ; 2 bytes @ 0x5D
  3775  00005E                     	ds	1
  3776  00005F                     ??__parse_file_create:
  3777  00005F                     ??__parse_file_rename:
  3778  00005F                     __parse_file_copy@file_number:
  3779                           	opt stack 0
  3780                           
  3781                           ; 1 bytes @ 0x5E
  3782  00005F                     	ds	1
  3783  000060                     tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postdec1	equ	0xFE5
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           
  3793                           ; 1 bytes @ 0x5F
  3794 ;;
  3795 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3796 ;;
  3797 ;; *************** function _main *****************
  3798 ;; Defined at:
  3799 ;;		line 56 in file "main.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  tx_buffer       2   95[BANK0 ] PTR unsigned char 
  3804 ;;		 -> _spi_external_tx_buffer(64), 
  3805 ;;  rx_buffer       2   93[BANK0 ] PTR unsigned char 
  3806 ;;		 -> _spi_external_rx_buffer(64), 
  3807 ;;  bytes_transm    2   91[BANK0 ] unsigned int 
  3808 ;;  tx_start_add    2   89[BANK0 ] unsigned int 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;Total ram usage:       10 bytes
  3823 ;; Hardware stack levels required when called:   13
  3824 ;; This function calls:
  3825 ;;		_APP_DeviceCustomHIDTasks
  3826 ;;		_APP_DeviceMSDTasks
  3827 ;;		_SYSTEM_Initialize
  3828 ;;		_USBDeviceInit
  3829 ;;		_USBDeviceTasks
  3830 ;;		__normal_mode
  3831 ;;		_api_parse
  3832 ;;		_api_prepare
  3833 ;;		_bootloader_run
  3834 ;;		_display_prepare
  3835 ;;		_display_update
  3836 ;;		_jump_to_main_program
  3837 ;;		_spi_get_external_rx_buffer
  3838 ;;		_spi_get_external_tx_buffer
  3839 ;;		_system_full_init
  3840 ;;		_system_minimal_init
  3841 ;;		_system_minimal_init_undo
  3842 ;;		_timer_pseudo_isr
  3843 ;;		_ui_get_status
  3844 ;;		_ui_run
  3845 ;; This function is called by:
  3846 ;;		Startup code after reset
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text0
  3851  003B10                     __ptext0:
  3852                           	opt stack 0
  3853  003B10                     _main:
  3854                           	opt stack 18
  3855                           
  3856                           ;incstack = 0
  3857  003B10  0004               	clrwdt		;# 
  3858                           
  3859                           ;main.c: 67: rx_buffer = spi_get_external_rx_buffer();
  3860  003B12  EC3B  F050         	call	_spi_get_external_rx_buffer	;wreg free
  3861  003B16  C001  F0BD         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3862  003B1A  C002  F0BE         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3863                           
  3864                           ;main.c: 68: tx_buffer = spi_get_external_tx_buffer();
  3865  003B1E  EC36  F050         	call	_spi_get_external_tx_buffer	;wreg free
  3866  003B22  C001  F0BF         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3867  003B26  C002  F0C0         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3868                           
  3869                           ;main.c: 69: tx_start_addr = (uint16_t) tx_buffer;
  3870  003B2A  C0BF  F0B9         	movff	main@tx_buffer,main@tx_start_addr
  3871  003B2E  C0C0  F0BA         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3872                           
  3873                           ;main.c: 73: system_minimal_init();
  3874  003B32  ECBB  F04F         	call	_system_minimal_init	;wreg free
  3875                           
  3876                           ;main.c: 76: if(_normal_mode())
  3877  003B36  ECD7  F046         	call	__normal_mode	;wreg free
  3878  003B3A  0900               	iorlw	0
  3879  003B3C  B4D8               	btfsc	status,2,c
  3880  003B3E  D004               	goto	l891
  3881                           
  3882                           ;main.c: 77: {;main.c: 79: system_minimal_init_undo();
  3883  003B40  EC0A  F050         	call	_system_minimal_init_undo	;wreg free
  3884                           
  3885                           ;main.c: 80: jump_to_main_program();
  3886  003B44  EC88  F050         	call	_jump_to_main_program	;wreg free
  3887  003B48                     l891:
  3888                           
  3889                           ;main.c: 81: };main.c: 85: system_full_init();
  3890  003B48  EC06  F047         	call	_system_full_init	;wreg free
  3891                           
  3892                           ;main.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3893  003B4C  0E00               	movlw	0
  3894  003B4E  EC3E  F049         	call	_SYSTEM_Initialize
  3895                           
  3896                           ;main.c: 90: USBDeviceInit();
  3897  003B52  ECDC  F025         	call	_USBDeviceInit	;wreg free
  3898  003B56                     l892:
  3899  003B56  0004               	clrwdt		;# 
  3900                           
  3901                           ;main.c: 103: USBDeviceTasks();
  3902  003B58  ECC8  F01C         	call	_USBDeviceTasks	;wreg free
  3903                           
  3904                           ;main.c: 104: APP_DeviceMSDTasks();
  3905  003B5C  ECE6  F04F         	call	_APP_DeviceMSDTasks	;wreg free
  3906                           
  3907                           ;main.c: 105: APP_DeviceCustomHIDTasks();
  3908  003B60  EC24  F03D         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3909                           
  3910                           ;main.c: 109: timer_pseudo_isr();
  3911  003B64  EC59  F04C         	call	_timer_pseudo_isr	;wreg free
  3912                           
  3913                           ;main.c: 112: if(PORTDbits.RD2)
  3914  003B68  A483               	btfss	3971,2,c	;volatile
  3915  003B6A  D03D               	goto	l894
  3916                           
  3917                           ;main.c: 113: {;main.c: 116: bytes_transmitted = TXADDRH;
  3918  003B6C  CF6A F0BB          	movff	3946,main@bytes_transmitted	;volatile
  3919  003B70  0100               	movlb	0	; () banked
  3920  003B72  6BBC               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;main.c: 117: bytes_transmitted <<= 8;
  3924  003B74  51BB               	movf	main@bytes_transmitted& (0+255),w,b
  3925  003B76  6FBC               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3926  003B78  6BBB               	clrf	main@bytes_transmitted& (0+255),b
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;main.c: 118: bytes_transmitted |= TXADDRL;
  3930  003B7A  506B               	movf	3947,w,c	;volatile
  3931  003B7C  13BB               	iorwf	main@bytes_transmitted& (0+255),f,b
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;main.c: 119: --bytes_transmitted;
  3935  003B7E  07BB               	decf	main@bytes_transmitted& (0+255),f,b
  3936  003B80  A0D8               	btfss	status,0,c
  3937  003B82  07BC               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;main.c: 120: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3941  003B84  EC36  F050         	call	_spi_get_external_tx_buffer	;wreg free
  3942  003B88  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3943  003B8A  0100               	movlb	0	; () banked
  3944  003B8C  5FBB               	subwf	main@bytes_transmitted& (0+255),f,b
  3945  003B8E  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3946  003B90  5BBC               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;main.c: 123: if(bytes_transmitted>0)
  3950  003B92  51BB               	movf	main@bytes_transmitted& (0+255),w,b
  3951  003B94  11BC               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3952  003B96  B4D8               	btfsc	status,2,c
  3953  003B98  D026               	goto	l894
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;main.c: 124: {;main.c: 126: DMACON1bits.DMAEN = 0;
  3957  003B9A  9088               	bcf	3976,0,c	;volatile
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 129: api_prepare(rx_buffer, tx_buffer);
  3961  003B9C  C0BD  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3962  003BA0  C0BE  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3963  003BA4  C0BF  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3964  003BA8  C0C0  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3965  003BAC  ECBA  F01F         	call	_api_prepare	;wreg free
  3966                           
  3967                           ;main.c: 130: api_parse(rx_buffer, (uint8_t) bytes_transmitted, tx_buffer);
  3968  003BB0  C0BD  F0A4         	movff	main@rx_buffer,api_parse@inBuffer
  3969  003BB4  C0BE  F0A5         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3970  003BB8  C0BB  F0A6         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3971  003BBC  C0BF  F0A7         	movff	main@tx_buffer,api_parse@outBuffer
  3972  003BC0  C0C0  F0A8         	movff	main@tx_buffer+1,api_parse@outBuffer+1
  3973  003BC4  ECC8  F027         	call	_api_parse	;wreg free
  3974                           
  3975                           ;main.c: 133: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3976  003BC8  0100               	movlb	0	; () banked
  3977  003BCA  51C0               	movf	(main@tx_buffer+1)& (0+255),w,b
  3978  003BCC  6E6A               	movwf	3946,c	;volatile
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;main.c: 134: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3982  003BCE  C0BF  FF6B         	movff	main@tx_buffer,3947	;volatile
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;main.c: 137: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3986  003BD2  51BE               	movf	(main@rx_buffer+1)& (0+255),w,b
  3987  003BD4  6E68               	movwf	3944,c	;volatile
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;main.c: 138: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3991  003BD6  C0BD  FF69         	movff	main@rx_buffer,3945	;volatile
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;main.c: 141: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3995  003BDA  0E00               	movlw	0
  3996  003BDC  6E66               	movwf	3942,c	;volatile
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;main.c: 142: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  4000  003BDE  0E3F               	movlw	63
  4001  003BE0  6E67               	movwf	3943,c	;volatile
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;main.c: 145: PIR3bits.SSP2IF = 0;
  4005  003BE2  9EA4               	bcf	4004,7,c	;volatile
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;main.c: 147: DMACON1bits.DMAEN = 1;
  4009  003BE4  8088               	bsf	3976,0,c	;volatile
  4010  003BE6                     l894:
  4011                           
  4012                           ;main.c: 148: };main.c: 149: };main.c: 153: if(!os.done)
  4013                           
  4014                           ; BSR set to: 0
  4015                           
  4016                           ; BSR set to: 0
  4017  003BE6  0100               	movlb	0	; () banked
  4018  003BE8  51C4               	movf	(_os+3)& (0+255),w,b
  4019  003BEA  A4D8               	btfss	status,2,c
  4020  003BEC  D7B4               	goto	l892
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;main.c: 154: {;main.c: 156: ui_run();
  4024  003BEE  EC0F  F02B         	call	_ui_run	;wreg free
  4025                           
  4026                           ;main.c: 161: switch(os.timeSlot&0b00000111)
  4027  003BF2  D025               	goto	l896
  4028  003BF4                     
  4029                           ;main.c: 164: bootloader_run(0);
  4030  003BF4  0E00               	movlw	0
  4031  003BF6  EC47  F045         	call	_bootloader_run
  4032                           
  4033                           ;main.c: 165: break;
  4034  003BFA  D043               	goto	l898
  4035  003BFC                     
  4036                           ;main.c: 168: bootloader_run(1);
  4037  003BFC  0E01               	movlw	1
  4038  003BFE  EC47  F045         	call	_bootloader_run
  4039                           
  4040                           ;main.c: 169: break;
  4041  003C02  D03F               	goto	l898
  4042  003C04                     
  4043                           ;main.c: 172: bootloader_run(2);
  4044  003C04  0E02               	movlw	2
  4045  003C06  EC47  F045         	call	_bootloader_run
  4046                           
  4047                           ;main.c: 173: break;
  4048  003C0A  D03B               	goto	l898
  4049  003C0C                     
  4050                           ;main.c: 176: bootloader_run(3);
  4051  003C0C  0E03               	movlw	3
  4052  003C0E  EC47  F045         	call	_bootloader_run
  4053                           
  4054                           ;main.c: 177: break;
  4055  003C12  D037               	goto	l898
  4056  003C14                     
  4057                           ;main.c: 180: bootloader_run(4);
  4058  003C14  0E04               	movlw	4
  4059  003C16  EC47  F045         	call	_bootloader_run
  4060                           
  4061                           ;main.c: 181: break;
  4062  003C1A  D033               	goto	l898
  4063  003C1C                     
  4064                           ;main.c: 184: bootloader_run(5);
  4065  003C1C  0E05               	movlw	5
  4066  003C1E  EC47  F045         	call	_bootloader_run
  4067                           
  4068                           ;main.c: 185: break;
  4069  003C22  D02F               	goto	l898
  4070  003C24                     
  4071                           ;main.c: 188: display_prepare(os.display_mode);
  4072  003C24  0100               	movlb	0	; () banked
  4073  003C26  51C6               	movf	(_os+5)& (0+255),w,b
  4074  003C28  EC14  F034         	call	_display_prepare
  4075                           
  4076                           ;main.c: 189: break;
  4077  003C2C  D02A               	goto	l898
  4078  003C2E                     
  4079                           ;main.c: 192: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4080  003C2E  EC94  F050         	call	_ui_get_status	;wreg free
  4081  003C32  0A05               	xorlw	5
  4082  003C34  A4D8               	btfss	status,2,c
  4083  003C36  D025               	goto	l898
  4084                           
  4085                           ;main.c: 193: {;main.c: 194: display_update();
  4086  003C38  EC12  F045         	call	_display_update	;wreg free
  4087                           
  4088                           ;main.c: 197: }
  4089                           
  4090                           ;main.c: 195: };main.c: 196: break;
  4091  003C3C  D022               	goto	l898
  4092  003C3E                     l896:
  4093  003C3E  0100               	movlb	0	; () banked
  4094  003C40  51C3               	movf	(_os+2)& (0+255),w,b
  4095  003C42  0B07               	andlw	7
  4096  003C44  6FB7               	movwf	??_main& (0+255),b
  4097  003C46  6BB8               	clrf	(??_main+1)& (0+255),b
  4098                           
  4099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4100                           ; Switch size 1, requested type "space"
  4101                           ; Number of cases is 1, Range of values is 0 to 0
  4102                           ; switch strategies available:
  4103                           ; Name         Instructions Cycles
  4104                           ; simple_byte            4     3 (average)
  4105                           ;	Chosen strategy is simple_byte
  4106  003C48  51B8               	movf	(??_main+1)& (0+255),w,b
  4107  003C4A  0A00               	xorlw	0	; case 0
  4108  003C4C  A4D8               	btfss	status,2,c
  4109  003C4E  D019               	goto	l898
  4110                           
  4111                           ; BSR set to: 0
  4112                           ; Switch size 1, requested type "space"
  4113                           ; Number of cases is 8, Range of values is 0 to 7
  4114                           ; switch strategies available:
  4115                           ; Name         Instructions Cycles
  4116                           ; simple_byte           25    13 (average)
  4117                           ;	Chosen strategy is simple_byte
  4118  003C50  51B7               	movf	??_main& (0+255),w,b
  4119  003C52  0A00               	xorlw	0	; case 0
  4120  003C54  B4D8               	btfsc	status,2,c
  4121  003C56  D7CE               	goto	l897
  4122  003C58  0A01               	xorlw	1	; case 1
  4123  003C5A  B4D8               	btfsc	status,2,c
  4124  003C5C  D7CF               	goto	l899
  4125  003C5E  0A03               	xorlw	3	; case 2
  4126  003C60  B4D8               	btfsc	status,2,c
  4127  003C62  D7D0               	goto	l900
  4128  003C64  0A01               	xorlw	1	; case 3
  4129  003C66  B4D8               	btfsc	status,2,c
  4130  003C68  D7D1               	goto	l901
  4131  003C6A  0A07               	xorlw	7	; case 4
  4132  003C6C  B4D8               	btfsc	status,2,c
  4133  003C6E  D7D2               	goto	l902
  4134  003C70  0A01               	xorlw	1	; case 5
  4135  003C72  B4D8               	btfsc	status,2,c
  4136  003C74  D7D3               	goto	l903
  4137  003C76  0A03               	xorlw	3	; case 6
  4138  003C78  B4D8               	btfsc	status,2,c
  4139  003C7A  D7D4               	goto	l904
  4140  003C7C  0A01               	xorlw	1	; case 7
  4141  003C7E  B4D8               	btfsc	status,2,c
  4142  003C80  D7D6               	goto	l905
  4143  003C82                     l898:
  4144                           
  4145                           ;main.c: 198: os.done = 1;
  4146                           
  4147                           ; BSR set to: 0
  4148  003C82  0E01               	movlw	1
  4149  003C84  0100               	movlb	0	; () banked
  4150  003C86  6FC4               	movwf	(_os+3)& (0+255),b
  4151                           
  4152                           ; BSR set to: 0
  4153                           
  4154                           ; BSR set to: 0
  4155  003C88  D766               	goto	l892
  4156  003C8A                     __end_of_main:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           status	equ	0xFD8
  4168                           
  4169 ;; *************** function _ui_run *****************
  4170 ;; Defined at:
  4171 ;;		line 120 in file "ui.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    8
  4192 ;; This function calls:
  4193 ;;		__ui_encoder
  4194 ;;		_i2c_digipot_backlight
  4195 ;;		_i2c_digipot_reset_off
  4196 ;;		_i2c_digipot_reset_on
  4197 ;;		_i2c_display_send_init_sequence
  4198 ;;		_system_encoder_enable
  4199 ;;		_ui_init
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text1
  4206  00561E                     __ptext1:
  4207                           	opt stack 0
  4208  00561E                     _ui_run:
  4209                           	opt stack 22
  4210                           
  4211                           ;ui.c: 122: switch(userInterfaceStatus)
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;incstack = 0
  4215  00561E  D06D               	goto	l1318
  4216  005620                     
  4217                           ;ui.c: 126: if (os.buttonCount!=0)
  4218  005620  0100               	movlb	0	; () banked
  4219  005622  51C2               	movf	(_os+1)& (0+255),w,b
  4220  005624  B4D8               	btfsc	status,2,c
  4221  005626  0012               	return	
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;ui.c: 127: {;ui.c: 128: ui_init();
  4225  005628  ECDC  F04F         	call	_ui_init	;wreg free
  4226                           
  4227                           ;ui.c: 129: os.buttonCount = 0;
  4228  00562C  0E00               	movlw	0
  4229  00562E  0100               	movlb	0	; () banked
  4230  005630  6FC2               	movwf	(_os+1)& (0+255),b
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;ui.c: 130: };ui.c: 131: break;
  4234  005632  0012               	return	
  4235  005634                     l1322:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;ui.c: 135: LATDbits.LD0 = 0;
  4239  005634  908C               	bcf	3980,0,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;ui.c: 137: system_ui_inactive_count = 0;
  4243  005636  0E00               	movlw	0
  4244  005638  0101               	movlb	1	; () banked
  4245  00563A  6F76               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4246  00563C  0E00               	movlw	0
  4247  00563E  6F75               	movwf	_system_ui_inactive_count& (0+255),b
  4248                           
  4249                           ;ui.c: 138: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4250  005640  0E02               	movlw	2
  4251  005642  0100               	movlb	0	; () banked
  4252  005644  6FE9               	movwf	_userInterfaceStatus& (0+255),b
  4253                           
  4254                           ;ui.c: 139: break;
  4255  005646  0012               	return	
  4256  005648                     
  4257                           ; BSR set to: 0
  4258                           ;ui.c: 143: i2c_digipot_reset_on();
  4259                           
  4260                           ; BSR set to: 0
  4261  005648  ECD4  F04E         	call	_i2c_digipot_reset_on	;wreg free
  4262                           
  4263                           ;ui.c: 145: system_ui_inactive_count = 0;
  4264  00564C  0E00               	movlw	0
  4265  00564E  0101               	movlb	1	; () banked
  4266  005650  6F76               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4267  005652  0E00               	movlw	0
  4268  005654  6F75               	movwf	_system_ui_inactive_count& (0+255),b
  4269                           
  4270                           ; BSR set to: 1
  4271                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4272  005656  0E03               	movlw	3
  4273  005658  0100               	movlb	0	; () banked
  4274  00565A  6FE9               	movwf	_userInterfaceStatus& (0+255),b
  4275                           
  4276                           ;ui.c: 147: break;
  4277  00565C  0012               	return	
  4278  00565E                     
  4279                           ; BSR set to: 0
  4280                           ;ui.c: 150: ++system_ui_inactive_count;
  4281                           
  4282                           ; BSR set to: 0
  4283  00565E  0101               	movlb	1	; () banked
  4284  005660  4B75               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4285  005662  2B76               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4286                           
  4287                           ; BSR set to: 1
  4288                           ;ui.c: 152: if (system_ui_inactive_count>3)
  4289  005664  5176               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4290  005666  E104               	bnz	u14500
  4291  005668  0E04               	movlw	4
  4292  00566A  5D75               	subwf	_system_ui_inactive_count& (0+255),w,b
  4293  00566C  A0D8               	btfss	status,0,c
  4294  00566E  0012               	return	
  4295  005670                     u14500:
  4296                           
  4297                           ; BSR set to: 1
  4298                           ;ui.c: 153: {;ui.c: 154: i2c_digipot_reset_off();
  4299  005670  ECE5  F04E         	call	_i2c_digipot_reset_off	;wreg free
  4300                           
  4301                           ;ui.c: 155: system_ui_inactive_count = 0;
  4302  005674  0E00               	movlw	0
  4303  005676  0101               	movlb	1	; () banked
  4304  005678  6F76               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4305  00567A  0E00               	movlw	0
  4306  00567C  6F75               	movwf	_system_ui_inactive_count& (0+255),b
  4307                           
  4308                           ; BSR set to: 1
  4309                           ;ui.c: 156: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4310  00567E  0E04               	movlw	4
  4311  005680  0100               	movlb	0	; () banked
  4312  005682  6FE9               	movwf	_userInterfaceStatus& (0+255),b
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;ui.c: 157: };ui.c: 158: break;
  4316  005684  0012               	return	
  4317  005686                     
  4318                           ; BSR set to: 0
  4319                           ;ui.c: 162: i2c_display_send_init_sequence();
  4320                           
  4321                           ; BSR set to: 0
  4322  005686  EC81  F04D         	call	_i2c_display_send_init_sequence	;wreg free
  4323                           
  4324                           ;ui.c: 164: i2c_digipot_backlight(150);
  4325  00568A  0E96               	movlw	150
  4326  00568C  EC2C  F04E         	call	_i2c_digipot_backlight
  4327                           
  4328                           ;ui.c: 166: system_encoder_enable();
  4329  005690  EC02  F050         	call	_system_encoder_enable	;wreg free
  4330                           
  4331                           ;ui.c: 168: system_ui_inactive_count = 0;
  4332  005694  0E00               	movlw	0
  4333  005696  0101               	movlb	1	; () banked
  4334  005698  6F76               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4335  00569A  0E00               	movlw	0
  4336  00569C  6F75               	movwf	_system_ui_inactive_count& (0+255),b
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;ui.c: 169: startup_timer = 0;
  4340  00569E  0E00               	movlw	0
  4341  0056A0  6F74               	movwf	(_startup_timer+1)& (0+255),b
  4342  0056A2  0E00               	movlw	0
  4343  0056A4  6F73               	movwf	_startup_timer& (0+255),b
  4344                           
  4345                           ; BSR set to: 1
  4346                           ;ui.c: 170: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4347  0056A6  0E05               	movlw	5
  4348  0056A8  0100               	movlb	0	; () banked
  4349  0056AA  6FE9               	movwf	_userInterfaceStatus& (0+255),b
  4350                           
  4351                           ;ui.c: 171: break;
  4352  0056AC  0012               	return	
  4353  0056AE                     
  4354                           ; BSR set to: 0
  4355                           ;ui.c: 174: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  4356                           
  4357                           ; BSR set to: 0
  4358  0056AE  51C6               	movf	(_os+5)& (0+255),w,b
  4359  0056B0  A4D8               	btfss	status,2,c
  4360  0056B2  D00B               	goto	l1329
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;ui.c: 175: {;ui.c: 176: ++startup_timer;
  4364  0056B4  0101               	movlb	1	; () banked
  4365  0056B6  4B73               	infsnz	_startup_timer& (0+255),f,b
  4366  0056B8  2B74               	incf	(_startup_timer+1)& (0+255),f,b
  4367                           
  4368                           ; BSR set to: 1
  4369                           ;ui.c: 177: if(startup_timer==250)
  4370  0056BA  0EFA               	movlw	250
  4371  0056BC  1973               	xorwf	_startup_timer& (0+255),w,b
  4372  0056BE  1174               	iorwf	(_startup_timer+1)& (0+255),w,b
  4373  0056C0  A4D8               	btfss	status,2,c
  4374  0056C2  D003               	goto	l1329
  4375                           
  4376                           ; BSR set to: 1
  4377                           ;ui.c: 178: {;ui.c: 179: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4378  0056C4  0E10               	movlw	16
  4379  0056C6  0100               	movlb	0	; () banked
  4380  0056C8  6FC6               	movwf	(_os+5)& (0+255),b
  4381  0056CA                     l1329:
  4382                           
  4383                           ;ui.c: 180: };ui.c: 181: };ui.c: 182: if (os.encoderCount==0 && os.buttonCount==0)
  4384                           
  4385                           ; BSR set to: 0
  4386  0056CA  0100               	movlb	0	; () banked
  4387  0056CC  51C1               	movf	_os& (0+255),w,b
  4388  0056CE  A4D8               	btfss	status,2,c
  4389  0056D0  D00C               	goto	l1330
  4390                           
  4391                           ; BSR set to: 0
  4392  0056D2  51C2               	movf	(_os+1)& (0+255),w,b
  4393  0056D4  A4D8               	btfss	status,2,c
  4394  0056D6  D009               	goto	l1330
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;ui.c: 183: {;ui.c: 184: if(system_ui_inactive_count<0xFFFF)
  4398  0056D8  0101               	movlb	1	; () banked
  4399  0056DA  2975               	incf	_system_ui_inactive_count& (0+255),w,b
  4400  0056DC  E103               	bnz	u14550
  4401  0056DE  2976               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  4402  0056E0  B4D8               	btfsc	status,2,c
  4403  0056E2  0012               	return	
  4404  0056E4                     u14550:
  4405                           
  4406                           ; BSR set to: 1
  4407                           ;ui.c: 185: ++system_ui_inactive_count;
  4408  0056E4  4B75               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4409  0056E6  2B76               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;ui.c: 186: }
  4413  0056E8  0012               	return	
  4414  0056EA                     l1330:
  4415                           
  4416                           ;ui.c: 187: else;ui.c: 188: {;ui.c: 189: system_ui_inactive_count = 0;
  4417                           
  4418                           ; BSR set to: 1
  4419  0056EA  0E00               	movlw	0
  4420  0056EC  0101               	movlb	1	; () banked
  4421  0056EE  6F76               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4422  0056F0  0E00               	movlw	0
  4423  0056F2  6F75               	movwf	_system_ui_inactive_count& (0+255),b
  4424                           
  4425                           ; BSR set to: 1
  4426                           ;ui.c: 190: _ui_encoder();
  4427  0056F4  EC17  F02D         	call	__ui_encoder	;wreg free
  4428                           
  4429                           ;ui.c: 193: }
  4430                           
  4431                           ;ui.c: 191: };ui.c: 192: break;
  4432  0056F8  0012               	return	
  4433  0056FA                     l1318:
  4434  0056FA  0100               	movlb	0	; () banked
  4435  0056FC  51E9               	movf	_userInterfaceStatus& (0+255),w,b
  4436                           
  4437                           ; Switch size 1, requested type "space"
  4438                           ; Number of cases is 6, Range of values is 0 to 5
  4439                           ; switch strategies available:
  4440                           ; Name         Instructions Cycles
  4441                           ; simple_byte           19    10 (average)
  4442                           ;	Chosen strategy is simple_byte
  4443  0056FE  0A00               	xorlw	0	; case 0
  4444  005700  B4D8               	btfsc	status,2,c
  4445  005702  D78E               	goto	l1319
  4446  005704  0A01               	xorlw	1	; case 1
  4447  005706  B4D8               	btfsc	status,2,c
  4448  005708  D795               	goto	l1322
  4449  00570A  0A03               	xorlw	3	; case 2
  4450  00570C  B4D8               	btfsc	status,2,c
  4451  00570E  D79C               	goto	l1323
  4452  005710  0A01               	xorlw	1	; case 3
  4453  005712  B4D8               	btfsc	status,2,c
  4454  005714  D7A4               	goto	l1324
  4455  005716  0A07               	xorlw	7	; case 4
  4456  005718  B4D8               	btfsc	status,2,c
  4457  00571A  D7B5               	goto	l1326
  4458  00571C  0A01               	xorlw	1	; case 5
  4459  00571E  A4D8               	btfss	status,2,c
  4460  005720  0012               	return	
  4461  005722  D7C5               	goto	l1327
  4462  005724                     __end_of_ui_run:
  4463                           	opt stack 0
  4464                           tblptru	equ	0xFF8
  4465                           tblptrh	equ	0xFF7
  4466                           tblptrl	equ	0xFF6
  4467                           tablat	equ	0xFF5
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           postdec1	equ	0xFE5
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           status	equ	0xFD8
  4474                           
  4475 ;; *************** function _system_encoder_enable *****************
  4476 ;; Defined at:
  4477 ;;		line 97 in file "os.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_ui_run
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text2
  4505  00A004                     __ptext2:
  4506                           	opt stack 0
  4507  00A004                     _system_encoder_enable:
  4508                           	opt stack 29
  4509                           
  4510                           ;os.c: 100: INTCON3bits.INT2IF = 0;
  4511                           
  4512                           ;incstack = 0
  4513  00A004  92F0               	bcf	intcon3,1,c	;volatile
  4514                           
  4515                           ;os.c: 101: INTCON3bits.INT3IF = 0;
  4516  00A006  94F0               	bcf	intcon3,2,c	;volatile
  4517                           
  4518                           ;os.c: 104: os.encoderCount = 0;
  4519  00A008  0E00               	movlw	0
  4520  00A00A  0100               	movlb	0	; () banked
  4521  00A00C  6FC1               	movwf	_os& (0+255),b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;os.c: 107: INTCON3bits.INT2IE = 1;
  4525  00A00E  88F0               	bsf	intcon3,4,c	;volatile
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;os.c: 108: INTCON3bits.INT3IE = 1;
  4529  00A010  8AF0               	bsf	intcon3,5,c	;volatile
  4530                           
  4531                           ; BSR set to: 0
  4532  00A012  0012               	return		;funcret
  4533  00A014                     __end_of_system_encoder_enable:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           intcon3	equ	0xFF0
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           fsr1h	equ	0xFE2
  4544                           fsr1l	equ	0xFE1
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function _i2c_display_send_init_sequence *****************
  4548 ;; Defined at:
  4549 ;;		line 215 in file "i2c.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;Total ram usage:        9 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    2
  4570 ;; This function calls:
  4571 ;;		__i2c_write
  4572 ;;		_i2c_set_frequency
  4573 ;; This function is called by:
  4574 ;;		_ui_run
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text3
  4579  009B02                     __ptext3:
  4580                           	opt stack 0
  4581  009B02                     _i2c_display_send_init_sequence:
  4582                           	opt stack 27
  4583                           
  4584                           ;i2c.c: 217: uint8_t init_sequence[9] = {;i2c.c: 218: 0x3A,;i2c.c: 220: 0b00011110,;i2c.
      +                          c: 221: 0x39,;i2c.c: 223: 0b00001100,;i2c.c: 224: 0x74,;i2c.c: 225: 0b1011100,;i2c.c: 22
      +                          6: 0x6d,;i2c.c: 227: 0x0c,;i2c.c: 228: 0x01;i2c.c: 229: };
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;incstack = 0
  4588  009B02  EE21  F0C3         	lfsr	2,i2c_display_send_init_sequence@F6812
  4589  009B06  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4590  009B0A  0E08               	movlw	8
  4591  009B0C                     u13761:
  4592  009B0C  CFDB FFE3          	movff	plusw2,plusw1
  4593  009B10  06E8               	decf	wreg,f,c
  4594  009B12  E2FC               	bc	u13761
  4595                           
  4596                           ;i2c.c: 232: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4597  009B14  0E00               	movlw	0
  4598  009B16  ECC3  F04D         	call	_i2c_set_frequency
  4599                           
  4600                           ;i2c.c: 235: _i2c_write(0b01111000, &init_sequence[0], 9);
  4601  009B1A  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4602  009B1C  6E06               	movwf	__i2c_write@data,c
  4603  009B1E  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4604  009B20  6E07               	movwf	__i2c_write@data+1,c
  4605  009B22  0E09               	movlw	9
  4606  009B24  6E08               	movwf	__i2c_write@length,c
  4607  009B26  0E78               	movlw	120
  4608  009B28  EC57  F04A         	call	__i2c_write
  4609  009B2C  0012               	return		;funcret
  4610  009B2E                     __end_of_i2c_display_send_init_sequence:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           intcon3	equ	0xFF0
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           plusw1	equ	0xFE3
  4621                           fsr1h	equ	0xFE2
  4622                           fsr1l	equ	0xFE1
  4623                           plusw2	equ	0xFDB
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _i2c_digipot_reset_on *****************
  4627 ;; Defined at:
  4628 ;;		line 318 in file "i2c.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    2
  4649 ;; This function calls:
  4650 ;;		__i2c_write
  4651 ;;		_i2c_set_frequency
  4652 ;; This function is called by:
  4653 ;;		_ui_run
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text4
  4658  009DA8                     __ptext4:
  4659                           	opt stack 0
  4660  009DA8                     _i2c_digipot_reset_on:
  4661                           	opt stack 27
  4662                           
  4663                           ;i2c.c: 320: uint8_t data_array[2];;i2c.c: 321: data_array[0] = 0x10 | 0x00;
  4664                           
  4665                           ;incstack = 0
  4666  009DA8  0E10               	movlw	16
  4667  009DAA  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4668                           
  4669                           ;i2c.c: 323: data_array[1] = 0x00;
  4670  009DAC  0E00               	movlw	0
  4671  009DAE  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4672                           
  4673                           ;i2c.c: 326: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4674  009DB0  0E02               	movlw	2
  4675  009DB2  ECC3  F04D         	call	_i2c_set_frequency
  4676                           
  4677                           ;i2c.c: 328: _i2c_write(0b01011100, &data_array[0], 2);
  4678  009DB6  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4679  009DB8  6E06               	movwf	__i2c_write@data,c
  4680  009DBA  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4681  009DBC  6E07               	movwf	__i2c_write@data+1,c
  4682  009DBE  0E02               	movlw	2
  4683  009DC0  6E08               	movwf	__i2c_write@length,c
  4684  009DC2  0E5C               	movlw	92
  4685  009DC4  EC57  F04A         	call	__i2c_write
  4686  009DC8  0012               	return		;funcret
  4687  009DCA                     __end_of_i2c_digipot_reset_on:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           intcon3	equ	0xFF0
  4694                           postinc0	equ	0xFEE
  4695                           wreg	equ	0xFE8
  4696                           postdec1	equ	0xFE5
  4697                           plusw1	equ	0xFE3
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           plusw2	equ	0xFDB
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _i2c_digipot_reset_off *****************
  4704 ;; Defined at:
  4705 ;;		line 331 in file "i2c.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    2
  4726 ;; This function calls:
  4727 ;;		__i2c_write
  4728 ;;		_i2c_set_frequency
  4729 ;; This function is called by:
  4730 ;;		_ui_run
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text5
  4735  009DCA                     __ptext5:
  4736                           	opt stack 0
  4737  009DCA                     _i2c_digipot_reset_off:
  4738                           	opt stack 27
  4739                           
  4740                           ;i2c.c: 333: uint8_t data_array[2];;i2c.c: 334: data_array[0] = 0x10 | 0x00;
  4741                           
  4742                           ;incstack = 0
  4743  009DCA  0E10               	movlw	16
  4744  009DCC  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4745                           
  4746                           ;i2c.c: 335: data_array[1] = 0x80;
  4747  009DCE  0E80               	movlw	128
  4748  009DD0  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4749                           
  4750                           ;i2c.c: 338: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4751  009DD2  0E02               	movlw	2
  4752  009DD4  ECC3  F04D         	call	_i2c_set_frequency
  4753                           
  4754                           ;i2c.c: 340: _i2c_write(0b01011100, &data_array[0], 2);
  4755  009DD8  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4756  009DDA  6E06               	movwf	__i2c_write@data,c
  4757  009DDC  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4758  009DDE  6E07               	movwf	__i2c_write@data+1,c
  4759  009DE0  0E02               	movlw	2
  4760  009DE2  6E08               	movwf	__i2c_write@length,c
  4761  009DE4  0E5C               	movlw	92
  4762  009DE6  EC57  F04A         	call	__i2c_write
  4763  009DEA  0012               	return		;funcret
  4764  009DEC                     __end_of_i2c_digipot_reset_off:
  4765                           	opt stack 0
  4766                           tblptru	equ	0xFF8
  4767                           tblptrh	equ	0xFF7
  4768                           tblptrl	equ	0xFF6
  4769                           tablat	equ	0xFF5
  4770                           intcon3	equ	0xFF0
  4771                           postinc0	equ	0xFEE
  4772                           wreg	equ	0xFE8
  4773                           postdec1	equ	0xFE5
  4774                           plusw1	equ	0xFE3
  4775                           fsr1h	equ	0xFE2
  4776                           fsr1l	equ	0xFE1
  4777                           plusw2	equ	0xFDB
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function _i2c_digipot_backlight *****************
  4781 ;; Defined at:
  4782 ;;		line 343 in file "i2c.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  level           1    wreg     unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  level           1   10[COMRAM] unsigned char 
  4787 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;Total ram usage:        3 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    2
  4804 ;; This function calls:
  4805 ;;		__i2c_write
  4806 ;;		_i2c_set_frequency
  4807 ;; This function is called by:
  4808 ;;		_ui_run
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text6
  4813  009C58                     __ptext6:
  4814                           	opt stack 0
  4815  009C58                     _i2c_digipot_backlight:
  4816                           	opt stack 27
  4817                           
  4818                           ;incstack = 0
  4819                           ;i2c_digipot_backlight@level stored from wreg
  4820  009C58  6E0B               	movwf	i2c_digipot_backlight@level,c
  4821                           
  4822                           ;i2c.c: 345: uint8_t data_array[2];;i2c.c: 346: data_array[0] = 0x00 | 0x00;
  4823  009C5A  0E00               	movlw	0
  4824  009C5C  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4825                           
  4826                           ;i2c.c: 347: data_array[1] = level>>1;
  4827  009C5E  90D8               	bcf	status,0,c
  4828  009C60  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4829  009C62  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4830                           
  4831                           ;i2c.c: 350: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4832  009C64  0E02               	movlw	2
  4833  009C66  ECC3  F04D         	call	_i2c_set_frequency
  4834                           
  4835                           ;i2c.c: 352: _i2c_write(0b01011100, &data_array[0], 2);
  4836  009C6A  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4837  009C6C  6E06               	movwf	__i2c_write@data,c
  4838  009C6E  0E00               	movlw	high i2c_digipot_backlight@data_array
  4839  009C70  6E07               	movwf	__i2c_write@data+1,c
  4840  009C72  0E02               	movlw	2
  4841  009C74  6E08               	movwf	__i2c_write@length,c
  4842  009C76  0E5C               	movlw	92
  4843  009C78  EC57  F04A         	call	__i2c_write
  4844  009C7C  0012               	return		;funcret
  4845  009C7E                     __end_of_i2c_digipot_backlight:
  4846                           	opt stack 0
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           intcon3	equ	0xFF0
  4852                           postinc0	equ	0xFEE
  4853                           wreg	equ	0xFE8
  4854                           postdec1	equ	0xFE5
  4855                           plusw1	equ	0xFE3
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           plusw2	equ	0xFDB
  4859                           status	equ	0xFD8
  4860                           
  4861 ;; *************** function __ui_encoder *****************
  4862 ;; Defined at:
  4863 ;;		line 23 in file "ui.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    7
  4884 ;; This function calls:
  4885 ;;		_i2c_eeprom_writeByte
  4886 ;;		_reboot
  4887 ;;		_system_delay_ms
  4888 ;; This function is called by:
  4889 ;;		_ui_run
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text7
  4894  005A2E                     __ptext7:
  4895                           	opt stack 0
  4896  005A2E                     __ui_encoder:
  4897                           	opt stack 22
  4898                           
  4899                           ;ui.c: 25: switch(os.display_mode)
  4900                           
  4901                           ;incstack = 0
  4902  005A2E  D061               	goto	l1289
  4903  005A30                     
  4904                           ;ui.c: 28: if(os.buttonCount>0)
  4905  005A30  0100               	movlb	0	; () banked
  4906  005A32  51C2               	movf	(_os+1)& (0+255),w,b
  4907  005A34  0A80               	xorlw	128
  4908  005A36  0F7F               	addlw	-129
  4909  005A38  A0D8               	btfss	status,0,c
  4910  005A3A  0012               	return	
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;ui.c: 29: {;ui.c: 30: os.buttonCount = 0;
  4914  005A3C  0E00               	movlw	0
  4915  005A3E  6FC2               	movwf	(_os+1)& (0+255),b
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;ui.c: 31: };ui.c: 32: break;
  4919  005A40  0012               	return	
  4920  005A42                     
  4921                           ; BSR set to: 0
  4922                           ;ui.c: 35: if(os.buttonCount>0)
  4923                           
  4924                           ; BSR set to: 0
  4925  005A42  51C2               	movf	(_os+1)& (0+255),w,b
  4926  005A44  0A80               	xorlw	128
  4927  005A46  0F7F               	addlw	-129
  4928  005A48  A0D8               	btfss	status,0,c
  4929  005A4A  0012               	return	
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;ui.c: 36: {;ui.c: 37: os.buttonCount = 0;
  4933  005A4C  0E00               	movlw	0
  4934  005A4E  6FC2               	movwf	(_os+1)& (0+255),b
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;ui.c: 38: };ui.c: 39: break;
  4938  005A50  0012               	return	
  4939  005A52                     
  4940                           ; BSR set to: 0
  4941                           ;ui.c: 42: if(os.buttonCount>0)
  4942                           
  4943                           ; BSR set to: 0
  4944  005A52  51C2               	movf	(_os+1)& (0+255),w,b
  4945  005A54  0A80               	xorlw	128
  4946  005A56  0F7F               	addlw	-129
  4947  005A58  A0D8               	btfss	status,0,c
  4948  005A5A  0012               	return	
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;ui.c: 43: {;ui.c: 44: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4952  005A5C  0E30               	movlw	48
  4953  005A5E  6FC5               	movwf	(_os+4)& (0+255),b
  4954                           
  4955                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4956  005A60  0E30               	movlw	48
  4957  005A62  6FC6               	movwf	(_os+5)& (0+255),b
  4958                           
  4959                           ;ui.c: 46: os.buttonCount = 0;
  4960  005A64  0E00               	movlw	0
  4961  005A66  6FC2               	movwf	(_os+1)& (0+255),b
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;ui.c: 47: };ui.c: 48: break;
  4965  005A68  0012               	return	
  4966  005A6A                     
  4967                           ; BSR set to: 0
  4968                           ;ui.c: 51: if(os.buttonCount>0)
  4969                           
  4970                           ; BSR set to: 0
  4971  005A6A  51C2               	movf	(_os+1)& (0+255),w,b
  4972  005A6C  0A80               	xorlw	128
  4973  005A6E  0F7F               	addlw	-129
  4974  005A70  A0D8               	btfss	status,0,c
  4975  005A72  0012               	return	
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;ui.c: 52: {;ui.c: 53: os.buttonCount = 0;
  4979  005A74  0E00               	movlw	0
  4980  005A76  6FC2               	movwf	(_os+1)& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;ui.c: 54: };ui.c: 55: break;
  4984  005A78  0012               	return	
  4985  005A7A                     
  4986                           ; BSR set to: 0
  4987                           ;ui.c: 58: if(os.buttonCount>0)
  4988                           
  4989                           ; BSR set to: 0
  4990  005A7A  51C2               	movf	(_os+1)& (0+255),w,b
  4991  005A7C  0A80               	xorlw	128
  4992  005A7E  0F7F               	addlw	-129
  4993  005A80  A0D8               	btfss	status,0,c
  4994  005A82  0012               	return	
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;ui.c: 59: {;ui.c: 60: os.buttonCount = 0;
  4998  005A84  0E00               	movlw	0
  4999  005A86  6FC2               	movwf	(_os+1)& (0+255),b
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;ui.c: 61: };ui.c: 62: break;
  5003  005A88  0012               	return	
  5004  005A8A                     
  5005                           ; BSR set to: 0
  5006                           ;ui.c: 65: if(os.buttonCount>0)
  5007                           
  5008                           ; BSR set to: 0
  5009  005A8A  51C2               	movf	(_os+1)& (0+255),w,b
  5010  005A8C  0A80               	xorlw	128
  5011  005A8E  0F7F               	addlw	-129
  5012  005A90  A0D8               	btfss	status,0,c
  5013  005A92  0012               	return	
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;ui.c: 66: {;ui.c: 67: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  5017  005A94  0E60               	movlw	96
  5018  005A96  6FC5               	movwf	(_os+4)& (0+255),b
  5019                           
  5020                           ;ui.c: 68: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  5021  005A98  0E60               	movlw	96
  5022  005A9A  6FC6               	movwf	(_os+5)& (0+255),b
  5023                           
  5024                           ;ui.c: 69: os.buttonCount = 0;
  5025  005A9C  0E00               	movlw	0
  5026  005A9E  6FC2               	movwf	(_os+1)& (0+255),b
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;ui.c: 70: };ui.c: 71: break;
  5030  005AA0  0012               	return	
  5031  005AA2                     
  5032                           ; BSR set to: 0
  5033                           ;ui.c: 74: if(os.buttonCount>0)
  5034                           
  5035                           ; BSR set to: 0
  5036  005AA2  51C2               	movf	(_os+1)& (0+255),w,b
  5037  005AA4  0A80               	xorlw	128
  5038  005AA6  0F7F               	addlw	-129
  5039  005AA8  A0D8               	btfss	status,0,c
  5040  005AAA  0012               	return	
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;ui.c: 75: {;ui.c: 76: os.buttonCount = 0;
  5044  005AAC  0E00               	movlw	0
  5045  005AAE  6FC2               	movwf	(_os+1)& (0+255),b
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;ui.c: 77: };ui.c: 78: break;
  5049  005AB0  0012               	return	
  5050  005AB2                     
  5051                           ; BSR set to: 0
  5052                           ;ui.c: 81: if(os.buttonCount>0)
  5053                           
  5054                           ; BSR set to: 0
  5055  005AB2  51C2               	movf	(_os+1)& (0+255),w,b
  5056  005AB4  0A80               	xorlw	128
  5057  005AB6  0F7F               	addlw	-129
  5058  005AB8  A0D8               	btfss	status,0,c
  5059  005ABA  0012               	return	
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;ui.c: 82: {;ui.c: 83: i2c_eeprom_writeByte(0x100, 0x78);
  5063  005ABC  0E01               	movlw	1
  5064  005ABE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  5065  005AC0  0E00               	movlw	0
  5066  005AC2  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  5067  005AC4  0E78               	movlw	120
  5068  005AC6  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  5069  005AC8  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
  5070                           
  5071                           ;ui.c: 84: system_delay_ms(10);
  5072  005ACC  0E0A               	movlw	10
  5073  005ACE  EC9E  F04E         	call	_system_delay_ms
  5074                           
  5075                           ;ui.c: 85: reboot();
  5076  005AD2  EC8A  F04F         	call	_reboot	;wreg free
  5077                           
  5078                           ;ui.c: 86: };ui.c: 87: break;
  5079  005AD6  0012               	return	
  5080  005AD8                     
  5081                           ;ui.c: 90: if(os.buttonCount>0)
  5082  005AD8  0100               	movlb	0	; () banked
  5083  005ADA  51C2               	movf	(_os+1)& (0+255),w,b
  5084  005ADC  0A80               	xorlw	128
  5085  005ADE  0F7F               	addlw	-129
  5086  005AE0  A0D8               	btfss	status,0,c
  5087  005AE2  0012               	return	
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;ui.c: 91: {;ui.c: 92: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5091  005AE4  0E10               	movlw	16
  5092  005AE6  6FC5               	movwf	(_os+4)& (0+255),b
  5093                           
  5094                           ;ui.c: 93: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  5095  005AE8  0E10               	movlw	16
  5096  005AEA  6FC6               	movwf	(_os+5)& (0+255),b
  5097                           
  5098                           ;ui.c: 94: os.buttonCount = 0;
  5099  005AEC  0E00               	movlw	0
  5100  005AEE  6FC2               	movwf	(_os+1)& (0+255),b
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;ui.c: 97: }
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;ui.c: 95: };ui.c: 96: break;
  5107  005AF0  0012               	return	
  5108  005AF2                     l1289:
  5109                           
  5110                           ; BSR set to: 0
  5111  005AF2  0100               	movlb	0	; () banked
  5112  005AF4  51C6               	movf	(_os+5)& (0+255),w,b
  5113                           
  5114                           ; Switch size 1, requested type "space"
  5115                           ; Number of cases is 9, Range of values is 0 to 144
  5116                           ; switch strategies available:
  5117                           ; Name         Instructions Cycles
  5118                           ; simple_byte           28    15 (average)
  5119                           ;	Chosen strategy is simple_byte
  5120  005AF6  0A00               	xorlw	0	; case 0
  5121  005AF8  B4D8               	btfsc	status,2,c
  5122  005AFA  D79A               	goto	l1290
  5123  005AFC  0A10               	xorlw	16	; case 16
  5124  005AFE  B4D8               	btfsc	status,2,c
  5125  005B00  D7A0               	goto	l1293
  5126  005B02  0A30               	xorlw	48	; case 32
  5127  005B04  B4D8               	btfsc	status,2,c
  5128  005B06  D7A5               	goto	l1295
  5129  005B08  0A10               	xorlw	16	; case 48
  5130  005B0A  B4D8               	btfsc	status,2,c
  5131  005B0C  D7AE               	goto	l1297
  5132  005B0E  0A70               	xorlw	112	; case 64
  5133  005B10  B4D8               	btfsc	status,2,c
  5134  005B12  D7BB               	goto	l1301
  5135  005B14  0A10               	xorlw	16	; case 80
  5136  005B16  B4D8               	btfsc	status,2,c
  5137  005B18  D7B0               	goto	l1299
  5138  005B1A  0A30               	xorlw	48	; case 96
  5139  005B1C  B4D8               	btfsc	status,2,c
  5140  005B1E  D7C1               	goto	l1303
  5141  005B20  0A10               	xorlw	16	; case 112
  5142  005B22  B4D8               	btfsc	status,2,c
  5143  005B24  D7C6               	goto	l1305
  5144  005B26  0AE0               	xorlw	224	; case 144
  5145  005B28  A4D8               	btfss	status,2,c
  5146  005B2A  0012               	return	
  5147  005B2C  D7D5               	goto	l1307
  5148  005B2E                     __end_of__ui_encoder:
  5149                           	opt stack 0
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           intcon3	equ	0xFF0
  5155                           postinc0	equ	0xFEE
  5156                           wreg	equ	0xFE8
  5157                           postdec1	equ	0xFE5
  5158                           plusw1	equ	0xFE3
  5159                           fsr1h	equ	0xFE2
  5160                           fsr1l	equ	0xFE1
  5161                           plusw2	equ	0xFDB
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function _timer_pseudo_isr *****************
  5165 ;; Defined at:
  5166 ;;		line 20 in file "os.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5184 ;;Total ram usage:        0 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text8
  5194  0098B2                     __ptext8:
  5195                           	opt stack 0
  5196  0098B2                     _timer_pseudo_isr:
  5197                           	opt stack 30
  5198                           
  5199                           ;os.c: 23: if(INTCONbits.T0IF==0)
  5200                           
  5201                           ;incstack = 0
  5202  0098B2  A4F2               	btfss	intcon,2,c	;volatile
  5203  0098B4  0012               	return	
  5204                           
  5205                           ;os.c: 26: };os.c: 30: TMR0H = 0xD1;
  5206                           
  5207                           ;os.c: 24: {;os.c: 25: return;
  5208  0098B6  0ED1               	movlw	209
  5209  0098B8  6ED7               	movwf	4055,c	;volatile
  5210                           
  5211                           ;os.c: 31: TMR0L = 0x20;
  5212  0098BA  0E20               	movlw	32
  5213  0098BC  6ED6               	movwf	4054,c	;volatile
  5214                           
  5215                           ;os.c: 32: ++os.timeSlot;
  5216  0098BE  0100               	movlb	0	; () banked
  5217  0098C0  2BC3               	incf	(_os+2)& (0+255),f,b
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;os.c: 34: os.done = 0;
  5221  0098C2  0E00               	movlw	0
  5222  0098C4  6FC4               	movwf	(_os+3)& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;os.c: 35: INTCONbits.T0IF = 0;
  5226  0098C6  94F2               	bcf	intcon,2,c	;volatile
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;os.c: 38: if(INTCON3bits.INT1IF)
  5230  0098C8  A0F0               	btfss	intcon3,0,c	;volatile
  5231  0098CA  D002               	goto	l1079
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;os.c: 39: {;os.c: 40: ++os.buttonCount;
  5235  0098CC  2BC2               	incf	(_os+1)& (0+255),f,b
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;os.c: 41: INTCON3bits.INT1IF = 0;
  5239  0098CE  90F0               	bcf	intcon3,0,c	;volatile
  5240  0098D0                     l1079:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;os.c: 42: };os.c: 45: if(INTCON3bits.INT2IF)
  5244                           
  5245                           ; BSR set to: 0
  5246  0098D0  A2F0               	btfss	intcon3,1,c	;volatile
  5247  0098D2  D003               	goto	l1080
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;os.c: 46: {;os.c: 47: if(!PORTBbits.RB6)
  5251  0098D4  AC81               	btfss	3969,6,c	;volatile
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;os.c: 48: {;os.c: 49: --os.encoderCount;
  5255  0098D6  07C1               	decf	_os& (0+255),f,b
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;os.c: 50: };os.c: 51: INTCON3bits.INT2IF = 0;
  5259                           
  5260                           ; BSR set to: 0
  5261  0098D8  92F0               	bcf	intcon3,1,c	;volatile
  5262  0098DA                     l1080:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;os.c: 52: };os.c: 53: if(INTCON3bits.INT3IF)
  5266                           
  5267                           ; BSR set to: 0
  5268  0098DA  A4F0               	btfss	intcon3,2,c	;volatile
  5269  0098DC  0012               	return	
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;os.c: 54: {;os.c: 55: if(!PORTBbits.RB7)
  5273  0098DE  AE81               	btfss	3969,7,c	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;os.c: 56: {;os.c: 57: ++os.encoderCount;
  5277  0098E0  2BC1               	incf	_os& (0+255),f,b
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;os.c: 58: };os.c: 59: INTCON3bits.INT3IF = 0;
  5281                           
  5282                           ; BSR set to: 0
  5283  0098E2  94F0               	bcf	intcon3,2,c	;volatile
  5284  0098E4  0012               	return	
  5285  0098E6                     __end_of_timer_pseudo_isr:
  5286                           	opt stack 0
  5287                           tblptru	equ	0xFF8
  5288                           tblptrh	equ	0xFF7
  5289                           tblptrl	equ	0xFF6
  5290                           tablat	equ	0xFF5
  5291                           intcon	equ	0xFF2
  5292                           intcon3	equ	0xFF0
  5293                           postinc0	equ	0xFEE
  5294                           wreg	equ	0xFE8
  5295                           postdec1	equ	0xFE5
  5296                           plusw1	equ	0xFE3
  5297                           fsr1h	equ	0xFE2
  5298                           fsr1l	equ	0xFE1
  5299                           plusw2	equ	0xFDB
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _system_minimal_init_undo *****************
  5303 ;; Defined at:
  5304 ;;		line 158 in file "os.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    1
  5325 ;; This function calls:
  5326 ;;		_i2c_reset
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text9
  5333  00A014                     __ptext9:
  5334                           	opt stack 0
  5335  00A014                     _system_minimal_init_undo:
  5336                           	opt stack 29
  5337                           
  5338                           ;os.c: 161: i2c_reset();
  5339                           
  5340                           ;incstack = 0
  5341  00A014  EC22  F050         	call	_i2c_reset	;wreg free
  5342                           
  5343                           ;os.c: 164: TRISAbits.TRISA0 = 1;
  5344  00A018  8092               	bsf	3986,0,c	;volatile
  5345                           
  5346                           ;os.c: 165: ANCON0bits.PCFG0 = 0;
  5347  00A01A  010F               	movlb	15	; () banked
  5348  00A01C  9148               	bcf	72,0,b	;volatile
  5349                           
  5350                           ; BSR set to: 15
  5351                           ;os.c: 168: LATCbits.LC2 = 0;
  5352  00A01E  948B               	bcf	3979,2,c	;volatile
  5353                           
  5354                           ; BSR set to: 15
  5355                           ;os.c: 169: TRISCbits.TRISC2 = 1;
  5356  00A020  8494               	bsf	3988,2,c	;volatile
  5357                           
  5358                           ; BSR set to: 15
  5359  00A022  0012               	return		;funcret
  5360  00A024                     __end_of_system_minimal_init_undo:
  5361                           	opt stack 0
  5362                           tblptru	equ	0xFF8
  5363                           tblptrh	equ	0xFF7
  5364                           tblptrl	equ	0xFF6
  5365                           tablat	equ	0xFF5
  5366                           intcon	equ	0xFF2
  5367                           intcon3	equ	0xFF0
  5368                           postinc0	equ	0xFEE
  5369                           wreg	equ	0xFE8
  5370                           postdec1	equ	0xFE5
  5371                           plusw1	equ	0xFE3
  5372                           fsr1h	equ	0xFE2
  5373                           fsr1l	equ	0xFE1
  5374                           plusw2	equ	0xFDB
  5375                           status	equ	0xFD8
  5376                           
  5377 ;; *************** function _i2c_reset *****************
  5378 ;; Defined at:
  5379 ;;		line 118 in file "i2c.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;Total ram usage:        0 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_system_minimal_init_undo
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text10
  5407  00A044                     __ptext10:
  5408                           	opt stack 0
  5409  00A044                     _i2c_reset:
  5410                           	opt stack 29
  5411                           
  5412                           ;i2c.c: 120: SSP1STATbits.SMP = 0;
  5413                           
  5414                           ; BSR set to: 15
  5415                           ;incstack = 0
  5416  00A044  9EC7               	bcf	4039,7,c	;volatile
  5417                           
  5418                           ;i2c.c: 121: SSP1STATbits.CKE = 0;
  5419  00A046  9CC7               	bcf	4039,6,c	;volatile
  5420                           
  5421                           ;i2c.c: 122: SSP1CON1 = 0x00;
  5422  00A048  0E00               	movlw	0
  5423  00A04A  6EC6               	movwf	4038,c	;volatile
  5424                           
  5425                           ;i2c.c: 123: SSP1ADD = 0x00;
  5426  00A04C  0E00               	movlw	0
  5427  00A04E  6EC8               	movwf	4040,c	;volatile
  5428  00A050  0012               	return		;funcret
  5429  00A052                     __end_of_i2c_reset:
  5430                           	opt stack 0
  5431                           tblptru	equ	0xFF8
  5432                           tblptrh	equ	0xFF7
  5433                           tblptrl	equ	0xFF6
  5434                           tablat	equ	0xFF5
  5435                           intcon	equ	0xFF2
  5436                           intcon3	equ	0xFF0
  5437                           postinc0	equ	0xFEE
  5438                           wreg	equ	0xFE8
  5439                           postdec1	equ	0xFE5
  5440                           plusw1	equ	0xFE3
  5441                           fsr1h	equ	0xFE2
  5442                           fsr1l	equ	0xFE1
  5443                           plusw2	equ	0xFDB
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _system_minimal_init *****************
  5447 ;; Defined at:
  5448 ;;		line 140 in file "os.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;		None
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;Total ram usage:        0 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    2
  5469 ;; This function calls:
  5470 ;;		_i2c_init
  5471 ;;		_system_delay_ms
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text11
  5478  009F76                     __ptext11:
  5479                           	opt stack 0
  5480  009F76                     _system_minimal_init:
  5481                           	opt stack 28
  5482                           
  5483                           ;os.c: 143: TRISCbits.TRISC2 = 0;
  5484                           
  5485                           ;incstack = 0
  5486  009F76  9494               	bcf	3988,2,c	;volatile
  5487                           
  5488                           ;os.c: 144: LATCbits.LC2 = 1;
  5489  009F78  848B               	bsf	3979,2,c	;volatile
  5490                           
  5491                           ;os.c: 147: TRISAbits.TRISA0 = 1;
  5492  009F7A  8092               	bsf	3986,0,c	;volatile
  5493                           
  5494                           ;os.c: 148: ANCON0bits.PCFG0 = 1;
  5495  009F7C  010F               	movlb	15	; () banked
  5496  009F7E  8148               	bsf	72,0,b	;volatile
  5497                           
  5498                           ; BSR set to: 15
  5499                           ;os.c: 151: i2c_init();
  5500  009F80  EC30  F050         	call	_i2c_init	;wreg free
  5501                           
  5502                           ;os.c: 154: system_delay_ms(50);
  5503  009F84  0E32               	movlw	50
  5504  009F86  EC9E  F04E         	call	_system_delay_ms
  5505  009F8A  0012               	return		;funcret
  5506  009F8C                     __end_of_system_minimal_init:
  5507                           	opt stack 0
  5508                           tblptru	equ	0xFF8
  5509                           tblptrh	equ	0xFF7
  5510                           tblptrl	equ	0xFF6
  5511                           tablat	equ	0xFF5
  5512                           intcon	equ	0xFF2
  5513                           intcon3	equ	0xFF0
  5514                           postinc0	equ	0xFEE
  5515                           wreg	equ	0xFE8
  5516                           postdec1	equ	0xFE5
  5517                           plusw1	equ	0xFE3
  5518                           fsr1h	equ	0xFE2
  5519                           fsr1l	equ	0xFE1
  5520                           plusw2	equ	0xFDB
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function _i2c_init *****************
  5524 ;; Defined at:
  5525 ;;		line 110 in file "i2c.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;Total ram usage:        0 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    1
  5546 ;; This function calls:
  5547 ;;		__i2c_open_1
  5548 ;;		_i2c_set_frequency
  5549 ;; This function is called by:
  5550 ;;		_system_minimal_init
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text12
  5555  00A060                     __ptext12:
  5556                           	opt stack 0
  5557  00A060                     _i2c_init:
  5558                           	opt stack 28
  5559                           
  5560                           ;i2c.c: 113: _i2c_open_1();
  5561                           
  5562                           ;incstack = 0
  5563  00A060  EC97  F04F         	call	__i2c_open_1	;wreg free
  5564                           
  5565                           ;i2c.c: 115: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5566  00A064  0E00               	movlw	0
  5567  00A066  ECC3  F04D         	call	_i2c_set_frequency
  5568  00A06A  0012               	return		;funcret
  5569  00A06C                     __end_of_i2c_init:
  5570                           	opt stack 0
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           intcon	equ	0xFF2
  5576                           intcon3	equ	0xFF0
  5577                           postinc0	equ	0xFEE
  5578                           wreg	equ	0xFE8
  5579                           postdec1	equ	0xFE5
  5580                           plusw1	equ	0xFE3
  5581                           fsr1h	equ	0xFE2
  5582                           fsr1l	equ	0xFE1
  5583                           plusw2	equ	0xFDB
  5584                           status	equ	0xFD8
  5585                           
  5586 ;; *************** function __i2c_open_1 *****************
  5587 ;; Defined at:
  5588 ;;		line 44 in file "i2c.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_i2c_init
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text13
  5616  009F2E                     __ptext13:
  5617                           	opt stack 0
  5618  009F2E                     __i2c_open_1:
  5619                           	opt stack 28
  5620                           
  5621                           ;i2c.c: 46: SSP1STATbits.SMP = 0;
  5622                           
  5623                           ;incstack = 0
  5624  009F2E  9EC7               	bcf	4039,7,c	;volatile
  5625                           
  5626                           ;i2c.c: 47: SSP1STATbits.CKE = 0;
  5627  009F30  9CC7               	bcf	4039,6,c	;volatile
  5628                           
  5629                           ;i2c.c: 48: SSP1ADD = 29;
  5630  009F32  0E1D               	movlw	29
  5631  009F34  6EC8               	movwf	4040,c	;volatile
  5632                           
  5633                           ;i2c.c: 49: SSP1CON1bits.WCOL = 0;
  5634  009F36  9EC6               	bcf	4038,7,c	;volatile
  5635                           
  5636                           ;i2c.c: 50: SSP1CON1bits.SSPOV = 0;
  5637  009F38  9CC6               	bcf	4038,6,c	;volatile
  5638                           
  5639                           ;i2c.c: 51: SSP1CON1bits.SSPM = 0b1000;
  5640  009F3A  50C6               	movf	4038,w,c	;volatile
  5641  009F3C  0BF0               	andlw	-16
  5642  009F3E  0908               	iorlw	8
  5643  009F40  6EC6               	movwf	4038,c	;volatile
  5644                           
  5645                           ;i2c.c: 52: SSP1CON1bits.SSPEN = 1;
  5646  009F42  8AC6               	bsf	4038,5,c	;volatile
  5647  009F44  0012               	return		;funcret
  5648  009F46                     __end_of__i2c_open_1:
  5649                           	opt stack 0
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           intcon	equ	0xFF2
  5655                           intcon3	equ	0xFF0
  5656                           postinc0	equ	0xFEE
  5657                           wreg	equ	0xFE8
  5658                           postdec1	equ	0xFE5
  5659                           plusw1	equ	0xFE3
  5660                           fsr1h	equ	0xFE2
  5661                           fsr1l	equ	0xFE1
  5662                           plusw2	equ	0xFDB
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _system_full_init *****************
  5666 ;; Defined at:
  5667 ;;		line 173 in file "os.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;Total ram usage:        0 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    7
  5688 ;; This function calls:
  5689 ;;		__system_encoder_init
  5690 ;;		__system_timer0_init
  5691 ;;		_fat_init
  5692 ;;		_flash_init
  5693 ;;		_ui_init
  5694 ;; This function is called by:
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text14
  5700  008E0C                     __ptext14:
  5701                           	opt stack 0
  5702  008E0C                     _system_full_init:
  5703                           	opt stack 23
  5704                           
  5705                           ;os.c: 180: TRISDbits.TRISD0 = 0;
  5706                           
  5707                           ;incstack = 0
  5708  008E0C  9095               	bcf	3989,0,c	;volatile
  5709                           
  5710                           ;os.c: 181: LATDbits.LD0 = 0;
  5711  008E0E  908C               	bcf	3980,0,c	;volatile
  5712                           
  5713                           ;os.c: 184: TRISDbits.TRISD3 = 0;
  5714  008E10  9695               	bcf	3989,3,c	;volatile
  5715                           
  5716                           ;os.c: 185: LATDbits.LD3 = 0;
  5717  008E12  968C               	bcf	3980,3,c	;volatile
  5718                           
  5719                           ;os.c: 188: TRISDbits.TRISD1 = 0;
  5720  008E14  9295               	bcf	3989,1,c	;volatile
  5721                           
  5722                           ;os.c: 189: LATDbits.LD1 = 0;
  5723  008E16  928C               	bcf	3980,1,c	;volatile
  5724                           
  5725                           ;os.c: 192: TRISBbits.TRISB1 = 0;
  5726  008E18  9293               	bcf	3987,1,c	;volatile
  5727                           
  5728                           ;os.c: 193: LATBbits.LB1 = 0;
  5729  008E1A  928A               	bcf	3978,1,c	;volatile
  5730                           
  5731                           ;os.c: 196: TRISBbits.TRISB2 = 0;
  5732  008E1C  9493               	bcf	3987,2,c	;volatile
  5733                           
  5734                           ;os.c: 197: LATBbits.LB2 = 0;
  5735  008E1E  948A               	bcf	3978,2,c	;volatile
  5736                           
  5737                           ;os.c: 198: TRISBbits.TRISB3 = 0;
  5738  008E20  9693               	bcf	3987,3,c	;volatile
  5739                           
  5740                           ;os.c: 199: LATBbits.LB3 = 0;
  5741  008E22  968A               	bcf	3978,3,c	;volatile
  5742                           
  5743                           ;os.c: 202: TRISDbits.TRISD6 = 1;
  5744  008E24  8C95               	bsf	3989,6,c	;volatile
  5745                           
  5746                           ;os.c: 203: TRISDbits.TRISD4 = 0;
  5747  008E26  9895               	bcf	3989,4,c	;volatile
  5748                           
  5749                           ;os.c: 204: TRISDbits.TRISD5 = 0;
  5750  008E28  9A95               	bcf	3989,5,c	;volatile
  5751                           
  5752                           ;os.c: 205: TRISDbits.TRISD7 = 0;
  5753  008E2A  9E95               	bcf	3989,7,c	;volatile
  5754                           
  5755                           ;os.c: 206: LATDbits.LD7 = 1;
  5756  008E2C  8E8C               	bsf	3980,7,c	;volatile
  5757                           
  5758                           ;os.c: 207: TRISDbits.TRISD2 = 1;
  5759  008E2E  8495               	bsf	3989,2,c	;volatile
  5760                           
  5761                           ;os.c: 210: TRISCbits.TRISC7 = 0;
  5762  008E30  9E94               	bcf	3988,7,c	;volatile
  5763                           
  5764                           ;os.c: 211: LATCbits.LC7 = 0;
  5765  008E32  9E8B               	bcf	3979,7,c	;volatile
  5766                           
  5767                           ;os.c: 214: TRISEbits.TRISE2 = 0;
  5768  008E34  9496               	bcf	3990,2,c	;volatile
  5769                           
  5770                           ;os.c: 215: LATEbits.LE2 = 1;
  5771  008E36  848D               	bsf	3981,2,c	;volatile
  5772                           
  5773                           ;os.c: 216: TRISEbits.TRISE1 = 0;
  5774  008E38  9296               	bcf	3990,1,c	;volatile
  5775                           
  5776                           ;os.c: 217: LATEbits.LE1 = 1;
  5777  008E3A  828D               	bsf	3981,1,c	;volatile
  5778                           
  5779                           ;os.c: 218: TRISEbits.TRISE0 = 0;
  5780  008E3C  9096               	bcf	3990,0,c	;volatile
  5781                           
  5782                           ;os.c: 219: LATEbits.LE0 = 1;
  5783  008E3E  808D               	bsf	3981,0,c	;volatile
  5784                           
  5785                           ;os.c: 220: TRISAbits.TRISA5 = 0;
  5786  008E40  9A92               	bcf	3986,5,c	;volatile
  5787                           
  5788                           ;os.c: 221: LATAbits.LA5 = 1;
  5789  008E42  8A89               	bsf	3977,5,c	;volatile
  5790                           
  5791                           ;os.c: 224: TRISBbits.TRISB7 = 1;
  5792  008E44  8E93               	bsf	3987,7,c	;volatile
  5793                           
  5794                           ;os.c: 225: TRISBbits.TRISB6 = 1;
  5795  008E46  8C93               	bsf	3987,6,c	;volatile
  5796                           
  5797                           ;os.c: 228: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5798  008E48  0E10               	movlw	16
  5799  008E4A  0100               	movlb	0	; () banked
  5800  008E4C  6FC5               	movwf	(_os+4)& (0+255),b
  5801                           
  5802                           ;os.c: 229: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5803  008E4E  0E00               	movlw	0
  5804  008E50  6FC6               	movwf	(_os+5)& (0+255),b
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;os.c: 232: flash_init();
  5808  008E52  EC70  F04F         	call	_flash_init	;wreg free
  5809                           
  5810                           ;os.c: 235: fat_init();
  5811  008E56  EC12  F050         	call	_fat_init	;wreg free
  5812                           
  5813                           ;os.c: 238: _system_encoder_init();
  5814  008E5A  ECE9  F04B         	call	__system_encoder_init	;wreg free
  5815                           
  5816                           ;os.c: 241: ui_init();
  5817  008E5E  ECDC  F04F         	call	_ui_init	;wreg free
  5818                           
  5819                           ;os.c: 244: _system_timer0_init();
  5820  008E62  EC07  F04F         	call	__system_timer0_init	;wreg free
  5821  008E66  0012               	return		;funcret
  5822  008E68                     __end_of_system_full_init:
  5823                           	opt stack 0
  5824                           tblptru	equ	0xFF8
  5825                           tblptrh	equ	0xFF7
  5826                           tblptrl	equ	0xFF6
  5827                           tablat	equ	0xFF5
  5828                           intcon	equ	0xFF2
  5829                           intcon3	equ	0xFF0
  5830                           postinc0	equ	0xFEE
  5831                           wreg	equ	0xFE8
  5832                           postdec1	equ	0xFE5
  5833                           plusw1	equ	0xFE3
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           plusw2	equ	0xFDB
  5837                           status	equ	0xFD8
  5838                           
  5839 ;; *************** function _ui_init *****************
  5840 ;; Defined at:
  5841 ;;		line 111 in file "ui.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_system_full_init
  5865 ;;		_ui_run
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text15
  5870  009FB8                     __ptext15:
  5871                           	opt stack 0
  5872  009FB8                     _ui_init:
  5873                           	opt stack 29
  5874                           
  5875                           ;ui.c: 113: system_ui_inactive_count = 0;
  5876                           
  5877                           ;incstack = 0
  5878  009FB8  0E00               	movlw	0
  5879  009FBA  0101               	movlb	1	; () banked
  5880  009FBC  6F76               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5881  009FBE  0E00               	movlw	0
  5882  009FC0  6F75               	movwf	_system_ui_inactive_count& (0+255),b
  5883                           
  5884                           ; BSR set to: 1
  5885                           ;ui.c: 115: LATCbits.LC2 = 1;
  5886  009FC2  848B               	bsf	3979,2,c	;volatile
  5887                           
  5888                           ;ui.c: 116: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5889  009FC4  0E01               	movlw	1
  5890  009FC6  0100               	movlb	0	; () banked
  5891  009FC8  6FE9               	movwf	_userInterfaceStatus& (0+255),b
  5892                           
  5893                           ; BSR set to: 0
  5894  009FCA  0012               	return		;funcret
  5895  009FCC                     __end_of_ui_init:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           intcon	equ	0xFF2
  5902                           intcon3	equ	0xFF0
  5903                           postinc0	equ	0xFEE
  5904                           wreg	equ	0xFE8
  5905                           postdec1	equ	0xFE5
  5906                           plusw1	equ	0xFE3
  5907                           fsr1h	equ	0xFE2
  5908                           fsr1l	equ	0xFE1
  5909                           plusw2	equ	0xFDB
  5910                           status	equ	0xFD8
  5911                           
  5912 ;; *************** function _flash_init *****************
  5913 ;; Defined at:
  5914 ;;		line 361 in file "flash.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    4
  5935 ;; This function calls:
  5936 ;;		__flash_set_page_size
  5937 ;;		_spi_init
  5938 ;;		_spi_set_configuration
  5939 ;; This function is called by:
  5940 ;;		_system_full_init
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text16
  5945  009EE0                     __ptext16:
  5946                           	opt stack 0
  5947  009EE0                     _flash_init:
  5948                           	opt stack 25
  5949                           
  5950                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;incstack = 0
  5954  009EE0  0E00               	movlw	0
  5955  009EE2  ECAD  F04B         	call	_spi_init
  5956                           
  5957                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5958  009EE6  0E00               	movlw	0
  5959  009EE8  EC06  F02A         	call	_spi_set_configuration
  5960                           
  5961                           ;flash.c: 368: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5962  009EEC  0E00               	movlw	0
  5963  009EEE  EC0E  F043         	call	__flash_set_page_size
  5964                           
  5965                           ;flash.c: 371: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5966  009EF2  0E01               	movlw	1
  5967  009EF4  EC06  F02A         	call	_spi_set_configuration
  5968  009EF8  0012               	return		;funcret
  5969  009EFA                     __end_of_flash_init:
  5970                           	opt stack 0
  5971                           tblptru	equ	0xFF8
  5972                           tblptrh	equ	0xFF7
  5973                           tblptrl	equ	0xFF6
  5974                           tablat	equ	0xFF5
  5975                           intcon	equ	0xFF2
  5976                           intcon3	equ	0xFF0
  5977                           postinc0	equ	0xFEE
  5978                           wreg	equ	0xFE8
  5979                           postdec1	equ	0xFE5
  5980                           plusw1	equ	0xFE3
  5981                           fsr1h	equ	0xFE2
  5982                           fsr1l	equ	0xFE1
  5983                           plusw2	equ	0xFDB
  5984                           status	equ	0xFD8
  5985                           
  5986 ;; *************** function _spi_init *****************
  5987 ;; Defined at:
  5988 ;;		line 123 in file "spi.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  configuratio    1    wreg     enum E6751
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;  configuratio    1    3[COMRAM] enum E6751
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;Total ram usage:        1 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    1
  6009 ;; This function calls:
  6010 ;;		__spi_init
  6011 ;; This function is called by:
  6012 ;;		_flash_init
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text17
  6017  00975A                     __ptext17:
  6018                           	opt stack 0
  6019  00975A                     _spi_init:
  6020                           	opt stack 27
  6021                           
  6022                           ;incstack = 0
  6023                           ;spi_init@configuration stored from wreg
  6024  00975A  6E04               	movwf	spi_init@configuration,c
  6025                           
  6026                           ;spi.c: 125: switch(configuration)
  6027  00975C  D012               	goto	l3087
  6028  00975E                     
  6029                           ;spi.c: 128: _spi_init(config_internal);
  6030  00975E  C162  F001         	movff	_config_internal,__spi_init@details
  6031  009762  C163  F002         	movff	_config_internal+1,__spi_init@details+1
  6032  009766  C164  F003         	movff	_config_internal+2,__spi_init@details+2
  6033  00976A  EC06  F04C         	call	__spi_init	;wreg free
  6034                           
  6035                           ;spi.c: 129: break;
  6036  00976E  D010               	goto	l3089
  6037  009770                     
  6038                           ;spi.c: 132: _spi_init(config_external);
  6039  009770  C15F  F001         	movff	_config_external,__spi_init@details
  6040  009774  C160  F002         	movff	_config_external+1,__spi_init@details+1
  6041  009778  C161  F003         	movff	_config_external+2,__spi_init@details+2
  6042  00977C  EC06  F04C         	call	__spi_init	;wreg free
  6043                           
  6044                           ;spi.c: 134: }
  6045                           
  6046                           ;spi.c: 133: break;
  6047  009780  D007               	goto	l3089
  6048  009782                     l3087:
  6049  009782  5004               	movf	spi_init@configuration,w,c
  6050                           
  6051                           ; Switch size 1, requested type "space"
  6052                           ; Number of cases is 2, Range of values is 0 to 1
  6053                           ; switch strategies available:
  6054                           ; Name         Instructions Cycles
  6055                           ; simple_byte            7     4 (average)
  6056                           ;	Chosen strategy is simple_byte
  6057  009784  0A00               	xorlw	0	; case 0
  6058  009786  B4D8               	btfsc	status,2,c
  6059  009788  D7EA               	goto	l3088
  6060  00978A  0A01               	xorlw	1	; case 1
  6061  00978C  B4D8               	btfsc	status,2,c
  6062  00978E  D7F0               	goto	l3090
  6063  009790                     l3089:
  6064                           
  6065                           ;spi.c: 136: active_configuration = configuration;
  6066  009790  C004  F183         	movff	spi_init@configuration,_active_configuration
  6067  009794  0012               	return		;funcret
  6068  009796                     __end_of_spi_init:
  6069                           	opt stack 0
  6070                           tblptru	equ	0xFF8
  6071                           tblptrh	equ	0xFF7
  6072                           tblptrl	equ	0xFF6
  6073                           tablat	equ	0xFF5
  6074                           intcon	equ	0xFF2
  6075                           intcon3	equ	0xFF0
  6076                           postinc0	equ	0xFEE
  6077                           wreg	equ	0xFE8
  6078                           postdec1	equ	0xFE5
  6079                           plusw1	equ	0xFE3
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           plusw2	equ	0xFDB
  6083                           status	equ	0xFD8
  6084                           
  6085 ;; *************** function __spi_init *****************
  6086 ;; Defined at:
  6087 ;;		line 26 in file "spi.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  details         3    0[COMRAM] struct .
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6101 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;Total ram usage:        3 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_spi_init
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text18
  6115  00980C                     __ptext18:
  6116                           	opt stack 0
  6117  00980C                     __spi_init:
  6118                           	opt stack 27
  6119                           
  6120                           ;spi.c: 32: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6121                           
  6122                           ;incstack = 0
  6123  00980C  0E55               	movlw	85
  6124  00980E  6EA7               	movwf	4007,c	;volsfr
  6125  009810  0EAA               	movlw	170
  6126  009812  6EA7               	movwf	4007,c	;volsfr
  6127  009814  010E               	movlb	14	; () banked
  6128  009816  91BF               	bcf	191,0,b	;volatile
  6129                           
  6130                           ;spi.c: 33: RPINR21 = 23;
  6131  009818  0E17               	movlw	23
  6132  00981A  6FFC               	movwf	252,b	;volatile
  6133                           
  6134                           ;spi.c: 34: RPOR21 = 10;
  6135  00981C  0E0A               	movlw	10
  6136  00981E  6FD5               	movwf	213,b	;volatile
  6137                           
  6138                           ;spi.c: 36: RPOR22 = 11;
  6139  009820  0E0B               	movlw	11
  6140  009822  6FD6               	movwf	214,b	;volatile
  6141                           
  6142                           ;spi.c: 37: RPINR22 = 22;
  6143  009824  0E16               	movlw	22
  6144  009826  6FFD               	movwf	253,b	;volatile
  6145                           
  6146                           ;spi.c: 38: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6147  009828  0E55               	movlw	85
  6148  00982A  6EA7               	movwf	4007,c	;volsfr
  6149  00982C  0EAA               	movlw	170
  6150  00982E  6EA7               	movwf	4007,c	;volsfr
  6151                           
  6152                           ; BSR set to: 14
  6153  009830  81BF               	bsf	191,0,b	;volatile
  6154                           
  6155                           ; BSR set to: 14
  6156                           ;spi.c: 41: SSP2STATbits.SMP = 1;
  6157  009832  8E73               	bsf	3955,7,c	;volatile
  6158                           
  6159                           ; BSR set to: 14
  6160                           ;spi.c: 42: SSP2STATbits.CKE = 1;
  6161  009834  8C73               	bsf	3955,6,c	;volatile
  6162                           
  6163                           ; BSR set to: 14
  6164                           ;spi.c: 43: SSP2CON1bits.CKP = 0;
  6165  009836  9872               	bcf	3954,4,c	;volatile
  6166                           
  6167                           ; BSR set to: 14
  6168                           ;spi.c: 44: SSP2CON1bits.SSPM =0b0000;
  6169  009838  9072               	bcf	3954,0,c	;volatile
  6170  00983A  9272               	bcf	3954,1,c	;volatile
  6171  00983C  9472               	bcf	3954,2,c	;volatile
  6172  00983E  9672               	bcf	3954,3,c	;volatile
  6173                           
  6174                           ; BSR set to: 14
  6175                           ;spi.c: 45: SSP2CON1bits.SSPEN = 1;
  6176  009840  8A72               	bsf	3954,5,c	;volatile
  6177                           
  6178                           ; BSR set to: 14
  6179  009842  0012               	return		;funcret
  6180  009844                     __end_of__spi_init:
  6181                           	opt stack 0
  6182                           tblptru	equ	0xFF8
  6183                           tblptrh	equ	0xFF7
  6184                           tblptrl	equ	0xFF6
  6185                           tablat	equ	0xFF5
  6186                           intcon	equ	0xFF2
  6187                           intcon3	equ	0xFF0
  6188                           postinc0	equ	0xFEE
  6189                           wreg	equ	0xFE8
  6190                           postdec1	equ	0xFE5
  6191                           plusw1	equ	0xFE3
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           plusw2	equ	0xFDB
  6195                           status	equ	0xFD8
  6196                           
  6197 ;; *************** function __flash_set_page_size *****************
  6198 ;; Defined at:
  6199 ;;		line 99 in file "flash.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  size            1    wreg     enum E6902
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  size            1   23[COMRAM] enum E6902
  6204 ;;  command         4   19[COMRAM] unsigned char [4]
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6215 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6217 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6218 ;;Total ram usage:        5 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    3
  6221 ;; This function calls:
  6222 ;;		__flash_is_busy
  6223 ;;		_memcpy
  6224 ;;		_spi_tx
  6225 ;; This function is called by:
  6226 ;;		_flash_init
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text19
  6231  00861C                     __ptext19:
  6232                           	opt stack 0
  6233  00861C                     __flash_set_page_size:
  6234                           	opt stack 25
  6235                           
  6236                           ; BSR set to: 14
  6237                           ;incstack = 0
  6238                           ;__flash_set_page_size@size stored from wreg
  6239  00861C  6E18               	movwf	__flash_set_page_size@size,c
  6240  00861E                     
  6241                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  6242  00861E  ECF6  F04E         	call	__flash_is_busy	;wreg free
  6243  008622  0900               	iorlw	0
  6244  008624  A4D8               	btfss	status,2,c
  6245  008626  D7FB               	goto	l15177
  6246                           
  6247                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  6248  008628  5018               	movf	__flash_set_page_size@size,w,c
  6249  00862A  A4D8               	btfss	status,2,c
  6250  00862C  D013               	goto	l1773
  6251                           
  6252                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  6253  00862E  0E14               	movlw	low __flash_set_page_size@command
  6254  008630  6E01               	movwf	memcpy@d1,c
  6255  008632  0E00               	movlw	high __flash_set_page_size@command
  6256  008634  6E02               	movwf	memcpy@d1+1,c
  6257  008636  0EC3               	movlw	low _flash_command_pagesize_512
  6258  008638  6E03               	movwf	memcpy@s1,c
  6259  00863A  0EBF               	movlw	high _flash_command_pagesize_512
  6260  00863C  6E04               	movwf	memcpy@s1+1,c
  6261  00863E  5003               	movf	memcpy@s1,w,c
  6262  008640  1004               	iorwf	memcpy@s1+1,w,c
  6263  008642  A4D8               	btfss	status,2,c
  6264  008644  0E00               	movlw	low (__mediumconst shr (0+16))
  6265  008646  6E05               	movwf	memcpy@s1+2,c
  6266  008648  0E00               	movlw	0
  6267  00864A  6E07               	movwf	memcpy@n+1,c
  6268  00864C  0E04               	movlw	4
  6269  00864E  6E06               	movwf	memcpy@n,c
  6270  008650  ECE1  F045         	call	_memcpy	;wreg free
  6271  008654                     l1773:
  6272                           
  6273                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  6274  008654  0418               	decf	__flash_set_page_size@size,w,c
  6275  008656  A4D8               	btfss	status,2,c
  6276  008658  D013               	goto	l1774
  6277                           
  6278                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  6279  00865A  0E14               	movlw	low __flash_set_page_size@command
  6280  00865C  6E01               	movwf	memcpy@d1,c
  6281  00865E  0E00               	movlw	high __flash_set_page_size@command
  6282  008660  6E02               	movwf	memcpy@d1+1,c
  6283  008662  0EBF               	movlw	low _flash_command_pagesize_528
  6284  008664  6E03               	movwf	memcpy@s1,c
  6285  008666  0EBF               	movlw	high _flash_command_pagesize_528
  6286  008668  6E04               	movwf	memcpy@s1+1,c
  6287  00866A  5003               	movf	memcpy@s1,w,c
  6288  00866C  1004               	iorwf	memcpy@s1+1,w,c
  6289  00866E  A4D8               	btfss	status,2,c
  6290  008670  0E00               	movlw	low (__mediumconst shr (0+16))
  6291  008672  6E05               	movwf	memcpy@s1+2,c
  6292  008674  0E00               	movlw	0
  6293  008676  6E07               	movwf	memcpy@n+1,c
  6294  008678  0E04               	movlw	4
  6295  00867A  6E06               	movwf	memcpy@n,c
  6296  00867C  ECE1  F045         	call	_memcpy	;wreg free
  6297  008680                     l1774:
  6298                           
  6299                           ;flash.c: 113: spi_tx(command, 4);
  6300  008680  0E14               	movlw	low __flash_set_page_size@command
  6301  008682  6E01               	movwf	spi_tx@data,c
  6302  008684  0E00               	movlw	high __flash_set_page_size@command
  6303  008686  6E02               	movwf	spi_tx@data+1,c
  6304  008688  0E00               	movlw	0
  6305  00868A  6E04               	movwf	spi_tx@length+1,c
  6306  00868C  0E04               	movlw	4
  6307  00868E  6E03               	movwf	spi_tx@length,c
  6308  008690  ECE5  F047         	call	_spi_tx	;wreg free
  6309  008694  0012               	return		;funcret
  6310  008696                     __end_of__flash_set_page_size:
  6311                           	opt stack 0
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           intcon	equ	0xFF2
  6317                           intcon3	equ	0xFF0
  6318                           postinc0	equ	0xFEE
  6319                           wreg	equ	0xFE8
  6320                           postdec1	equ	0xFE5
  6321                           plusw1	equ	0xFE3
  6322                           fsr1h	equ	0xFE2
  6323                           fsr1l	equ	0xFE1
  6324                           plusw2	equ	0xFDB
  6325                           status	equ	0xFD8
  6326                           
  6327 ;; *************** function _fat_init *****************
  6328 ;; Defined at:
  6329 ;;		line 1382 in file "fat16.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;		None
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6347 ;;Total ram usage:        0 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    6
  6350 ;; This function calls:
  6351 ;;		_fat_format
  6352 ;;		_fat_get_format_status
  6353 ;; This function is called by:
  6354 ;;		_system_full_init
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text20
  6359  00A024                     __ptext20:
  6360                           	opt stack 0
  6361  00A024                     _fat_init:
  6362                           	opt stack 23
  6363                           
  6364                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6365                           
  6366                           ;incstack = 0
  6367  00A024  EC77  F03D         	call	_fat_get_format_status	;wreg free
  6368  00A028  0900               	iorlw	0
  6369  00A02A  A4D8               	btfss	status,2,c
  6370  00A02C  0012               	return	
  6371                           
  6372                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6373  00A02E  EC59  F016         	call	_fat_format	;wreg free
  6374  00A032  0012               	return	
  6375  00A034                     __end_of_fat_init:
  6376                           	opt stack 0
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           intcon	equ	0xFF2
  6382                           intcon3	equ	0xFF0
  6383                           postinc0	equ	0xFEE
  6384                           wreg	equ	0xFE8
  6385                           postdec1	equ	0xFE5
  6386                           plusw1	equ	0xFE3
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           plusw2	equ	0xFDB
  6390                           status	equ	0xFD8
  6391                           
  6392 ;; *************** function _fat_get_format_status *****************
  6393 ;; Defined at:
  6394 ;;		line 1292 in file "fat16.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  cntr            2   45[COMRAM] unsigned int 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      enum E6876
  6401 ;; Registers used:
  6402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;Total ram usage:        4 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    5
  6415 ;; This function calls:
  6416 ;;		__get_fbr
  6417 ;;		__get_mbr
  6418 ;;		_flash_sector_read
  6419 ;; This function is called by:
  6420 ;;		_fat_init
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text21
  6425  007AEE                     __ptext21:
  6426                           	opt stack 0
  6427  007AEE                     _fat_get_format_status:
  6428                           	opt stack 23
  6429                           
  6430                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6431                           
  6432                           ;incstack = 0
  6433  007AEE  0E00               	movlw	0
  6434  007AF0  6E29               	movwf	flash_sector_read@page+1,c
  6435  007AF2  0E00               	movlw	0
  6436  007AF4  6E28               	movwf	flash_sector_read@page,c
  6437  007AF6  0EC0               	movlw	low _buffer
  6438  007AF8  6E2A               	movwf	flash_sector_read@data,c
  6439  007AFA  0E03               	movlw	high _buffer
  6440  007AFC  6E2B               	movwf	flash_sector_read@data+1,c
  6441  007AFE  ECD9  F04C         	call	_flash_sector_read	;wreg free
  6442                           
  6443                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6444  007B02  0E00               	movlw	0
  6445  007B04  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6446  007B06  0E00               	movlw	0
  6447  007B08  6E2E               	movwf	fat_get_format_status@cntr,c
  6448  007B0A                     l15205:
  6449  007B0A  0E02               	movlw	2
  6450  007B0C  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6451  007B0E  B0D8               	btfsc	status,0,c
  6452  007B10  D016               	goto	u12920
  6453                           
  6454                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6455  007B12  0EC0               	movlw	low _buffer
  6456  007B14  242E               	addwf	fat_get_format_status@cntr,w,c
  6457  007B16  6ED9               	movwf	fsr2l,c
  6458  007B18  0E03               	movlw	high _buffer
  6459  007B1A  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6460  007B1C  6EDA               	movwf	fsr2h,c
  6461  007B1E  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6462  007B22  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6463  007B26  EC5A  F035         	call	__get_mbr	;wreg free
  6464  007B2A  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6465  007B2C  50DE               	movf	postinc2,w,c
  6466  007B2E  182D               	xorwf	??_fat_get_format_status+1,w,c
  6467  007B30  B4D8               	btfsc	status,2,c
  6468  007B32  D002               	goto	l2293
  6469                           
  6470                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6471  007B34  0E00               	movlw	0
  6472  007B36  0012               	return	
  6473  007B38                     l2293:
  6474  007B38  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6475  007B3A  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6476  007B3C  D7E6               	goto	l15205
  6477  007B3E                     u12920:
  6478                           
  6479                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6480  007B3E  0E00               	movlw	0
  6481  007B40  6E29               	movwf	flash_sector_read@page+1,c
  6482  007B42  0E01               	movlw	1
  6483  007B44  6E28               	movwf	flash_sector_read@page,c
  6484  007B46  0EC0               	movlw	low _buffer
  6485  007B48  6E2A               	movwf	flash_sector_read@data,c
  6486  007B4A  0E03               	movlw	high _buffer
  6487  007B4C  6E2B               	movwf	flash_sector_read@data+1,c
  6488  007B4E  ECD9  F04C         	call	_flash_sector_read	;wreg free
  6489                           
  6490                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6491  007B52  0E00               	movlw	0
  6492  007B54  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6493  007B56  0E00               	movlw	0
  6494  007B58  6E2E               	movwf	fat_get_format_status@cntr,c
  6495  007B5A                     l15223:
  6496  007B5A  0E02               	movlw	2
  6497  007B5C  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6498  007B5E  B0D8               	btfsc	status,0,c
  6499  007B60  D016               	goto	u12950
  6500                           
  6501                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6502  007B62  0EC0               	movlw	low _buffer
  6503  007B64  242E               	addwf	fat_get_format_status@cntr,w,c
  6504  007B66  6ED9               	movwf	fsr2l,c
  6505  007B68  0E03               	movlw	high _buffer
  6506  007B6A  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6507  007B6C  6EDA               	movwf	fsr2h,c
  6508  007B6E  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6509  007B72  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6510  007B76  ECBB  F00F         	call	__get_fbr	;wreg free
  6511  007B7A  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6512  007B7C  50DE               	movf	postinc2,w,c
  6513  007B7E  182D               	xorwf	??_fat_get_format_status+1,w,c
  6514  007B80  B4D8               	btfsc	status,2,c
  6515  007B82  D002               	goto	l2297
  6516                           
  6517                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6518  007B84  0E00               	movlw	0
  6519  007B86  0012               	return	
  6520  007B88                     l2297:
  6521  007B88  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6522  007B8A  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6523  007B8C  D7E6               	goto	l15223
  6524  007B8E                     u12950:
  6525                           
  6526                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6527  007B8E  0E01               	movlw	1
  6528  007B90  0012               	return	
  6529  007B92                     __end_of_fat_get_format_status:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           intcon	equ	0xFF2
  6536                           intcon3	equ	0xFF0
  6537                           postinc0	equ	0xFEE
  6538                           wreg	equ	0xFE8
  6539                           postdec1	equ	0xFE5
  6540                           plusw1	equ	0xFE3
  6541                           fsr1h	equ	0xFE2
  6542                           fsr1l	equ	0xFE1
  6543                           postinc2	equ	0xFDE
  6544                           plusw2	equ	0xFDB
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function __system_timer0_init *****************
  6550 ;; Defined at:
  6551 ;;		line 113 in file "os.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;Total ram usage:        0 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_system_full_init
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text22
  6579  009E0E                     __ptext22:
  6580                           	opt stack 0
  6581  009E0E                     __system_timer0_init:
  6582                           	opt stack 29
  6583                           
  6584                           ;os.c: 116: T0CONbits.T0CS = 0;
  6585                           
  6586                           ;incstack = 0
  6587  009E0E  9AD5               	bcf	4053,5,c	;volatile
  6588                           
  6589                           ;os.c: 118: T0CONbits.T08BIT = 0;
  6590  009E10  9CD5               	bcf	4053,6,c	;volatile
  6591                           
  6592                           ;os.c: 120: T0CONbits.T0PS2 = 0;
  6593  009E12  94D5               	bcf	4053,2,c	;volatile
  6594                           
  6595                           ;os.c: 121: T0CONbits.T0PS1 = 1;
  6596  009E14  82D5               	bsf	4053,1,c	;volatile
  6597                           
  6598                           ;os.c: 122: T0CONbits.T0PS0 = 0;
  6599  009E16  90D5               	bcf	4053,0,c	;volatile
  6600                           
  6601                           ;os.c: 124: T0CONbits.PSA = 0;
  6602  009E18  96D5               	bcf	4053,3,c	;volatile
  6603                           
  6604                           ;os.c: 126: TMR0H = 0xD1;
  6605  009E1A  0ED1               	movlw	209
  6606  009E1C  6ED7               	movwf	4055,c	;volatile
  6607                           
  6608                           ;os.c: 127: TMR0L = 0x20;
  6609  009E1E  0E20               	movlw	32
  6610  009E20  6ED6               	movwf	4054,c	;volatile
  6611                           
  6612                           ;os.c: 129: T0CONbits.TMR0ON = 1;
  6613  009E22  8ED5               	bsf	4053,7,c	;volatile
  6614                           
  6615                           ;os.c: 133: INTCONbits.TMR0IF = 0;
  6616  009E24  94F2               	bcf	intcon,2,c	;volatile
  6617                           
  6618                           ;os.c: 136: os.timeSlot = 0;
  6619  009E26  0E00               	movlw	0
  6620  009E28  0100               	movlb	0	; () banked
  6621  009E2A  6FC3               	movwf	(_os+2)& (0+255),b
  6622                           
  6623                           ; BSR set to: 0
  6624  009E2C  0012               	return		;funcret
  6625  009E2E                     __end_of__system_timer0_init:
  6626                           	opt stack 0
  6627                           tblptru	equ	0xFF8
  6628                           tblptrh	equ	0xFF7
  6629                           tblptrl	equ	0xFF6
  6630                           tablat	equ	0xFF5
  6631                           intcon	equ	0xFF2
  6632                           intcon3	equ	0xFF0
  6633                           postinc0	equ	0xFEE
  6634                           wreg	equ	0xFE8
  6635                           postdec1	equ	0xFE5
  6636                           plusw1	equ	0xFE3
  6637                           fsr1h	equ	0xFE2
  6638                           fsr1l	equ	0xFE1
  6639                           postinc2	equ	0xFDE
  6640                           plusw2	equ	0xFDB
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function __system_encoder_init *****************
  6646 ;; Defined at:
  6647 ;;		line 74 in file "os.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;Total ram usage:        0 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_system_full_init
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text23
  6675  0097D2                     __ptext23:
  6676                           	opt stack 0
  6677  0097D2                     __system_encoder_init:
  6678                           	opt stack 29
  6679                           
  6680                           ;os.c: 76: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;incstack = 0
  6684  0097D2  0E55               	movlw	85
  6685  0097D4  6EA7               	movwf	4007,c	;volsfr
  6686  0097D6  0EAA               	movlw	170
  6687  0097D8  6EA7               	movwf	4007,c	;volsfr
  6688  0097DA  010E               	movlb	14	; () banked
  6689  0097DC  91BF               	bcf	191,0,b	;volatile
  6690                           
  6691                           ;os.c: 77: RPINR1 = 0;
  6692  0097DE  0E00               	movlw	0
  6693  0097E0  6FE1               	movwf	225,b	;volatile
  6694                           
  6695                           ;os.c: 78: RPINR3 = 9;
  6696  0097E2  0E09               	movlw	9
  6697  0097E4  6FE3               	movwf	227,b	;volatile
  6698                           
  6699                           ;os.c: 79: RPINR2 = 10;
  6700  0097E6  0E0A               	movlw	10
  6701  0097E8  6FE2               	movwf	226,b	;volatile
  6702                           
  6703                           ;os.c: 80: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6704  0097EA  0E55               	movlw	85
  6705  0097EC  6EA7               	movwf	4007,c	;volsfr
  6706  0097EE  0EAA               	movlw	170
  6707  0097F0  6EA7               	movwf	4007,c	;volsfr
  6708                           
  6709                           ; BSR set to: 14
  6710  0097F2  91BF               	bcf	191,0,b	;volatile
  6711                           
  6712                           ; BSR set to: 14
  6713                           ;os.c: 83: INTCON2bits.INTEDG1 = 0;
  6714  0097F4  9AF1               	bcf	intcon2,5,c	;volatile
  6715                           
  6716                           ; BSR set to: 14
  6717                           ;os.c: 84: INTCON3bits.INT1IF = 0;
  6718  0097F6  90F0               	bcf	intcon3,0,c	;volatile
  6719                           
  6720                           ; BSR set to: 14
  6721                           ;os.c: 86: INTCON2bits.INTEDG2 = 1;
  6722  0097F8  88F1               	bsf	intcon2,4,c	;volatile
  6723                           
  6724                           ; BSR set to: 14
  6725                           ;os.c: 87: INTCON3bits.INT2IF = 0;
  6726  0097FA  92F0               	bcf	intcon3,1,c	;volatile
  6727                           
  6728                           ; BSR set to: 14
  6729                           ;os.c: 89: INTCON2bits.INTEDG3 = 1;
  6730  0097FC  86F1               	bsf	intcon2,3,c	;volatile
  6731                           
  6732                           ; BSR set to: 14
  6733                           ;os.c: 90: INTCON3bits.INT3IF = 0;
  6734  0097FE  94F0               	bcf	intcon3,2,c	;volatile
  6735                           
  6736                           ;os.c: 92: os.encoderCount = 0;
  6737  009800  0E00               	movlw	0
  6738  009802  0100               	movlb	0	; () banked
  6739  009804  6FC1               	movwf	_os& (0+255),b
  6740                           
  6741                           ;os.c: 93: os.buttonCount = 0;
  6742  009806  0E00               	movlw	0
  6743  009808  6FC2               	movwf	(_os+1)& (0+255),b
  6744                           
  6745                           ; BSR set to: 0
  6746  00980A  0012               	return		;funcret
  6747  00980C                     __end_of__system_encoder_init:
  6748                           	opt stack 0
  6749                           tblptru	equ	0xFF8
  6750                           tblptrh	equ	0xFF7
  6751                           tblptrl	equ	0xFF6
  6752                           tablat	equ	0xFF5
  6753                           intcon	equ	0xFF2
  6754                           intcon2	equ	0xFF1
  6755                           intcon3	equ	0xFF0
  6756                           postinc0	equ	0xFEE
  6757                           wreg	equ	0xFE8
  6758                           postdec1	equ	0xFE5
  6759                           plusw1	equ	0xFE3
  6760                           fsr1h	equ	0xFE2
  6761                           fsr1l	equ	0xFE1
  6762                           postinc2	equ	0xFDE
  6763                           plusw2	equ	0xFDB
  6764                           fsr2h	equ	0xFDA
  6765                           fsr2l	equ	0xFD9
  6766                           status	equ	0xFD8
  6767                           
  6768 ;; *************** function _spi_get_external_tx_buffer *****************
  6769 ;; Defined at:
  6770 ;;		line 76 in file "spi.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  2    0[COMRAM] PTR unsigned char 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;Total ram usage:        2 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_main
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text24
  6798  00A06C                     __ptext24:
  6799                           	opt stack 0
  6800  00A06C                     _spi_get_external_tx_buffer:
  6801                           	opt stack 30
  6802                           
  6803                           ;spi.c: 78: return _spi_external_tx_buffer;
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;incstack = 0
  6807  00A06C  0E40               	movlw	low __spi_external_tx_buffer
  6808  00A06E  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6809  00A070  0E03               	movlw	high __spi_external_tx_buffer
  6810  00A072  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6811  00A074  0012               	return	
  6812  00A076                     __end_of_spi_get_external_tx_buffer:
  6813                           	opt stack 0
  6814                           tblptru	equ	0xFF8
  6815                           tblptrh	equ	0xFF7
  6816                           tblptrl	equ	0xFF6
  6817                           tablat	equ	0xFF5
  6818                           intcon	equ	0xFF2
  6819                           intcon2	equ	0xFF1
  6820                           intcon3	equ	0xFF0
  6821                           postinc0	equ	0xFEE
  6822                           wreg	equ	0xFE8
  6823                           postdec1	equ	0xFE5
  6824                           plusw1	equ	0xFE3
  6825                           fsr1h	equ	0xFE2
  6826                           fsr1l	equ	0xFE1
  6827                           postinc2	equ	0xFDE
  6828                           plusw2	equ	0xFDB
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _spi_get_external_rx_buffer *****************
  6834 ;; Defined at:
  6835 ;;		line 81 in file "spi.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;		None
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  2    0[COMRAM] PTR unsigned char 
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;Total ram usage:        2 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_main
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text25
  6863  00A076                     __ptext25:
  6864                           	opt stack 0
  6865  00A076                     _spi_get_external_rx_buffer:
  6866                           	opt stack 30
  6867                           
  6868                           ;spi.c: 83: return _spi_external_rx_buffer;
  6869                           
  6870                           ;incstack = 0
  6871  00A076  0E00               	movlw	low __spi_external_rx_buffer
  6872  00A078  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6873  00A07A  0E03               	movlw	high __spi_external_rx_buffer
  6874  00A07C  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6875  00A07E  0012               	return	
  6876  00A080                     __end_of_spi_get_external_rx_buffer:
  6877                           	opt stack 0
  6878                           tblptru	equ	0xFF8
  6879                           tblptrh	equ	0xFF7
  6880                           tblptrl	equ	0xFF6
  6881                           tablat	equ	0xFF5
  6882                           intcon	equ	0xFF2
  6883                           intcon2	equ	0xFF1
  6884                           intcon3	equ	0xFF0
  6885                           postinc0	equ	0xFEE
  6886                           wreg	equ	0xFE8
  6887                           postdec1	equ	0xFE5
  6888                           plusw1	equ	0xFE3
  6889                           fsr1h	equ	0xFE2
  6890                           fsr1l	equ	0xFE1
  6891                           postinc2	equ	0xFDE
  6892                           plusw2	equ	0xFDB
  6893                           fsr2h	equ	0xFDA
  6894                           fsr2l	equ	0xFD9
  6895                           status	equ	0xFD8
  6896                           
  6897 ;; *************** function _jump_to_main_program *****************
  6898 ;; Defined at:
  6899 ;;		line 252 in file "os.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;		None
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		None
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;Total ram usage:        0 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text26
  6927  00A110                     __ptext26:
  6928                           	opt stack 0
  6929  00A110                     _jump_to_main_program:
  6930                           	opt stack 30
  6931                           
  6932                           ;incstack = 0
  6933  00A110  EF00 F060          	goto	49152	; ;# 
  6934  00A114  0012               	return		;funcret
  6935  00A116                     __end_of_jump_to_main_program:
  6936                           	opt stack 0
  6937                           tblptru	equ	0xFF8
  6938                           tblptrh	equ	0xFF7
  6939                           tblptrl	equ	0xFF6
  6940                           tablat	equ	0xFF5
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           intcon3	equ	0xFF0
  6944                           postinc0	equ	0xFEE
  6945                           wreg	equ	0xFE8
  6946                           postdec1	equ	0xFE5
  6947                           plusw1	equ	0xFE3
  6948                           fsr1h	equ	0xFE2
  6949                           fsr1l	equ	0xFE1
  6950                           postinc2	equ	0xFDE
  6951                           plusw2	equ	0xFDB
  6952                           fsr2h	equ	0xFDA
  6953                           fsr2l	equ	0xFD9
  6954                           status	equ	0xFD8
  6955                           
  6956 ;; *************** function _bootloader_run *****************
  6957 ;; Defined at:
  6958 ;;		line 63 in file "bootloader.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  timeslot        1    wreg     unsigned char 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  timeslot        1   91[COMRAM] unsigned char 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6976 ;;Total ram usage:        1 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    9
  6979 ;; This function calls:
  6980 ;;		__bootloader_find_file
  6981 ;;		__bootloader_program
  6982 ;;		__bootloader_verify_file
  6983 ;; This function is called by:
  6984 ;;		_main
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text27
  6989  008A8E                     __ptext27:
  6990                           	opt stack 0
  6991  008A8E                     _bootloader_run:
  6992                           	opt stack 21
  6993                           
  6994                           ;incstack = 0
  6995                           ;bootloader_run@timeslot stored from wreg
  6996  008A8E  6E5C               	movwf	bootloader_run@timeslot,c
  6997                           
  6998                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6999  008A90  0100               	movlb	0	; () banked
  7000  008A92  51C6               	movf	(_os+5)& (0+255),w,b
  7001  008A94  B4D8               	btfsc	status,2,c
  7002  008A96  0012               	return	
  7003  008A98  D015               	goto	l2451
  7004  008A9A                     
  7005                           ; BSR set to: 0
  7006                           ;bootloader.c: 74: if(timeslot==0)
  7007                           
  7008                           ; BSR set to: 0
  7009  008A9A  505C               	movf	bootloader_run@timeslot,w,c
  7010  008A9C  A4D8               	btfss	status,2,c
  7011  008A9E  0012               	return	
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  7015  008AA0  ECC9  F03D         	call	__bootloader_find_file	;wreg free
  7016                           
  7017                           ;bootloader.c: 77: };bootloader.c: 78: break;
  7018  008AA4  0012               	return	
  7019  008AA6                     
  7020                           ;bootloader.c: 81: if(timeslot==0)
  7021  008AA6  505C               	movf	bootloader_run@timeslot,w,c
  7022  008AA8  A4D8               	btfss	status,2,c
  7023  008AAA  0012               	return	
  7024                           
  7025                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  7026  008AAC  ECC9  F03D         	call	__bootloader_find_file	;wreg free
  7027                           
  7028                           ;bootloader.c: 84: };bootloader.c: 85: break;
  7029  008AB0  0012               	return	
  7030  008AB2                     
  7031                           ;bootloader.c: 88: _bootloader_verify_file();
  7032  008AB2  EC15  F006         	call	__bootloader_verify_file	;wreg free
  7033                           
  7034                           ;bootloader.c: 95: break;
  7035                           
  7036                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  7037                           
  7038                           ;bootloader.c: 92: break;
  7039                           
  7040                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  7041                           
  7042                           ;bootloader.c: 89: break;
  7043  008AB6  0012               	return	
  7044  008AB8                     
  7045                           ;bootloader.c: 98: if(timeslot==0)
  7046  008AB8  505C               	movf	bootloader_run@timeslot,w,c
  7047  008ABA  A4D8               	btfss	status,2,c
  7048  008ABC  0012               	return	
  7049                           
  7050                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  7051  008ABE  EC4E  F002         	call	__bootloader_program	;wreg free
  7052                           
  7053                           ;bootloader.c: 109: }
  7054                           
  7055                           ;bootloader.c: 108: break;
  7056                           
  7057                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  7058                           
  7059                           ;bootloader.c: 105: break;
  7060                           
  7061                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  7062                           
  7063                           ;bootloader.c: 101: };bootloader.c: 102: break;
  7064  008AC2  0012               	return	
  7065  008AC4                     l2451:
  7066  008AC4  0100               	movlb	0	; () banked
  7067  008AC6  51C5               	movf	(_os+4)& (0+255),w,b
  7068                           
  7069                           ; Switch size 1, requested type "space"
  7070                           ; Number of cases is 8, Range of values is 16 to 144
  7071                           ; switch strategies available:
  7072                           ; Name         Instructions Cycles
  7073                           ; simple_byte           25    13 (average)
  7074                           ;	Chosen strategy is simple_byte
  7075  008AC8  0A10               	xorlw	16	; case 16
  7076  008ACA  B4D8               	btfsc	status,2,c
  7077  008ACC  D7E6               	goto	l2452
  7078  008ACE  0A30               	xorlw	48	; case 32
  7079  008AD0  B4D8               	btfsc	status,2,c
  7080  008AD2  D7E9               	goto	l2455
  7081  008AD4  0A10               	xorlw	16	; case 48
  7082  008AD6  B4D8               	btfsc	status,2,c
  7083  008AD8  D7EC               	goto	l2457
  7084  008ADA  0A70               	xorlw	112	; case 64
  7085  008ADC  B4D8               	btfsc	status,2,c
  7086  008ADE  0012               	return	
  7087  008AE0  0A10               	xorlw	16	; case 80
  7088  008AE2  B4D8               	btfsc	status,2,c
  7089  008AE4  0012               	return	
  7090  008AE6  0A30               	xorlw	48	; case 96
  7091  008AE8  B4D8               	btfsc	status,2,c
  7092  008AEA  D7E6               	goto	l2460
  7093  008AEC  0A10               	xorlw	16	; case 112
  7094  008AEE  B4D8               	btfsc	status,2,c
  7095  008AF0  0012               	return	
  7096  008AF2  0AE0               	xorlw	224	; case 144
  7097  008AF4  0012               	return	
  7098  008AF6                     __end_of_bootloader_run:
  7099                           	opt stack 0
  7100                           tblptru	equ	0xFF8
  7101                           tblptrh	equ	0xFF7
  7102                           tblptrl	equ	0xFF6
  7103                           tablat	equ	0xFF5
  7104                           intcon	equ	0xFF2
  7105                           intcon2	equ	0xFF1
  7106                           intcon3	equ	0xFF0
  7107                           postinc0	equ	0xFEE
  7108                           wreg	equ	0xFE8
  7109                           postdec1	equ	0xFE5
  7110                           plusw1	equ	0xFE3
  7111                           fsr1h	equ	0xFE2
  7112                           fsr1l	equ	0xFE1
  7113                           postinc2	equ	0xFDE
  7114                           plusw2	equ	0xFDB
  7115                           fsr2h	equ	0xFDA
  7116                           fsr2l	equ	0xFD9
  7117                           status	equ	0xFD8
  7118                           
  7119 ;; *************** function __bootloader_verify_file *****************
  7120 ;; Defined at:
  7121 ;;		line 185 in file "bootloader.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  root           32   22[BANK0 ] struct .
  7126 ;;  address32       4   59[BANK0 ] unsigned long 
  7127 ;;  return_value    4   55[BANK0 ] unsigned long 
  7128 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;Total ram usage:       49 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    8
  7145 ;; This function calls:
  7146 ;;		__bootloader_check_address
  7147 ;;		_fat_get_file_information
  7148 ;;		_fat_get_file_size
  7149 ;;		_fat_read_from_file_fast
  7150 ;;		_parseHexFileEntry
  7151 ;; This function is called by:
  7152 ;;		_bootloader_run
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text28
  7157  000C2A                     __ptext28:
  7158                           	opt stack 0
  7159  000C2A                     __bootloader_verify_file:
  7160                           	opt stack 21
  7161                           
  7162                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  7163                           
  7164                           ;incstack = 0
  7165  000C2A  0E00               	movlw	0
  7166  000C2C  0100               	movlb	0	; () banked
  7167  000C2E  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  7168  000C30  0E00               	movlw	0
  7169  000C32  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  7170  000C34  0E00               	movlw	0
  7171  000C36  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  7172  000C38  0E00               	movlw	0
  7173  000C3A  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  7177  000C3C  51DA               	movf	_hex_file_offset& (0+255),w,b
  7178  000C3E  11DB               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7179  000C40  11DC               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7180  000C42  11DD               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7181  000C44  A4D8               	btfss	status,2,c
  7182  000C46  D010               	goto	l2483
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  7186  000C48  0E76               	movlw	low __bootloader_verify_file@root
  7187  000C4A  6E30               	movwf	fat_get_file_information@data,c
  7188  000C4C  0E00               	movlw	high __bootloader_verify_file@root
  7189  000C4E  6E31               	movwf	fat_get_file_information@data+1,c
  7190  000C50  51FF               	movf	_file_number& (0+255),w,b
  7191  000C52  ECFC  F043         	call	_fat_get_file_information
  7192                           
  7193                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  7194  000C56  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  7195  000C5A  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  7196                           
  7197                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  7198  000C5E  0E00               	movlw	0
  7199  000C60  0101               	movlb	1	; () banked
  7200  000C62  6FAA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7201  000C64  0E00               	movlw	0
  7202  000C66  6FA9               	movwf	_fast_read_cluster_number& (0+255),b
  7203  000C68                     l2483:
  7204                           
  7205                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  7206                           
  7207                           ; BSR set to: 1
  7208  000C68  0100               	movlb	0	; () banked
  7209  000C6A  51FF               	movf	_file_number& (0+255),w,b
  7210  000C6C  ECA5  F044         	call	_fat_get_file_size
  7211  000C70  C036  F143         	movff	?_fat_get_file_size,_hex_file_size
  7212  000C74  C037  F144         	movff	?_fat_get_file_size+1,_hex_file_size+1
  7213  000C78  C038  F145         	movff	?_fat_get_file_size+2,_hex_file_size+2
  7214  000C7C  C039  F146         	movff	?_fat_get_file_size+3,_hex_file_size+3
  7215                           
  7216                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  7217  000C80  0E00               	movlw	0
  7218  000C82  0100               	movlb	0	; () banked
  7219  000C84  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  7220  000C86                     l16269:
  7221                           
  7222                           ; BSR set to: 0
  7223  000C86  0E0F               	movlw	15
  7224  000C88  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  7225  000C8A  D001               	goto	l2484
  7226  000C8C  0012               	return	
  7227  000C8E                     l2484:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  7231                           
  7232                           ; BSR set to: 0
  7233  000C8E  C0DA  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  7234  000C92  C0DB  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  7235  000C96  C0DC  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  7236  000C9A  C0DD  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  7237  000C9E  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  7238  000CA0  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  7239  000CA2  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  7240  000CA4  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  7241  000CA6  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  7242  000CA8  0E00               	movlw	0
  7243  000CAA  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  7244  000CAC  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  7245  000CAE  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  7246  000CB0  0101               	movlb	1	; () banked
  7247  000CB2  5143               	movf	_hex_file_size& (0+255),w,b
  7248  000CB4  0100               	movlb	0	; () banked
  7249  000CB6  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  7250  000CB8  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  7251  000CBA  0101               	movlb	1	; () banked
  7252  000CBC  5144               	movf	(_hex_file_size+1)& (0+255),w,b
  7253  000CBE  0100               	movlb	0	; () banked
  7254  000CC0  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7255  000CC2  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  7256  000CC4  0101               	movlb	1	; () banked
  7257  000CC6  5145               	movf	(_hex_file_size+2)& (0+255),w,b
  7258  000CC8  0100               	movlb	0	; () banked
  7259  000CCA  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7260  000CCC  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  7261  000CCE  0101               	movlb	1	; () banked
  7262  000CD0  5146               	movf	(_hex_file_size+3)& (0+255),w,b
  7263  000CD2  0100               	movlb	0	; () banked
  7264  000CD4  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7265  000CD6  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  7266  000CD8  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  7267  000CDA  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  7268  000CDC  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  7269  000CDE  E104               	bnz	u13890
  7270  000CE0  0E32               	movlw	50
  7271  000CE2  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  7272  000CE4  A0D8               	btfss	status,0,c
  7273  000CE6  D01F               	goto	l2486
  7274  000CE8                     u13890:
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7278  000CE8  C0DA  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7279  000CEC  C0DB  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7280  000CF0  C0DC  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7281  000CF4  C0DD  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7282  000CF8  0E32               	movlw	50
  7283  000CFA  6E46               	movwf	fat_read_from_file_fast@length,c
  7284  000CFC  0E00               	movlw	0
  7285  000CFE  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7286  000D00  0E00               	movlw	0
  7287  000D02  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7288  000D04  0E00               	movlw	0
  7289  000D06  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7290  000D08  0E90               	movlw	low _file_buffer
  7291  000D0A  6E4A               	movwf	fat_read_from_file_fast@data,c
  7292  000D0C  0E02               	movlw	high _file_buffer
  7293  000D0E  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7294  000D10  0EFB               	movlw	low _fast_read_cluster
  7295  000D12  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7296  000D14  0E00               	movlw	high _fast_read_cluster
  7297  000D16  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7298  000D18  0EA9               	movlw	low _fast_read_cluster_number
  7299  000D1A  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7300  000D1C  0E01               	movlw	high _fast_read_cluster_number
  7301  000D1E  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7302  000D20  EC36  F013         	call	_fat_read_from_file_fast	;wreg free
  7303                           
  7304                           ;bootloader.c: 211: }
  7305  000D24  D03C               	goto	l2487
  7306  000D26                     l2486:
  7307                           
  7308                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7309  000D26  C0DA  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7310  000D2A  C0DB  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7311  000D2E  C0DC  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7312  000D32  C0DD  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7313  000D36  C0DA  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  7314  000D3A  C0DB  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  7315  000D3E  C0DC  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  7316  000D42  C0DD  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  7317  000D46  0100               	movlb	0	; () banked
  7318  000D48  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  7319  000D4A  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  7320  000D4C  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  7321  000D4E  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  7322  000D50  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  7323  000D52  0E00               	movlw	0
  7324  000D54  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  7325  000D56  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  7326  000D58  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  7327  000D5A  0101               	movlb	1	; () banked
  7328  000D5C  5143               	movf	_hex_file_size& (0+255),w,b
  7329  000D5E  0100               	movlb	0	; () banked
  7330  000D60  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  7331  000D62  6E46               	movwf	fat_read_from_file_fast@length,c
  7332  000D64  0101               	movlb	1	; () banked
  7333  000D66  5144               	movf	(_hex_file_size+1)& (0+255),w,b
  7334  000D68  0100               	movlb	0	; () banked
  7335  000D6A  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7336  000D6C  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7337  000D6E  0101               	movlb	1	; () banked
  7338  000D70  5145               	movf	(_hex_file_size+2)& (0+255),w,b
  7339  000D72  0100               	movlb	0	; () banked
  7340  000D74  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7341  000D76  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7342  000D78  0101               	movlb	1	; () banked
  7343  000D7A  5146               	movf	(_hex_file_size+3)& (0+255),w,b
  7344  000D7C  0100               	movlb	0	; () banked
  7345  000D7E  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7346  000D80  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7347  000D82  0E90               	movlw	low _file_buffer
  7348  000D84  6E4A               	movwf	fat_read_from_file_fast@data,c
  7349  000D86  0E02               	movlw	high _file_buffer
  7350  000D88  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7351  000D8A  0EFB               	movlw	low _fast_read_cluster
  7352  000D8C  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7353  000D8E  0E00               	movlw	high _fast_read_cluster
  7354  000D90  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7355  000D92  0EA9               	movlw	low _fast_read_cluster_number
  7356  000D94  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7357  000D96  0E01               	movlw	high _fast_read_cluster_number
  7358  000D98  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7359  000D9A  EC36  F013         	call	_fat_read_from_file_fast	;wreg free
  7360  000D9E                     l2487:
  7361                           
  7362                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7363  000D9E  0E90               	movlw	low _file_buffer
  7364  000DA0  6E0C               	movwf	parseHexFileEntry@data,c
  7365  000DA2  0E02               	movlw	high _file_buffer
  7366  000DA4  6E0D               	movwf	parseHexFileEntry@data+1,c
  7367  000DA6  0E00               	movlw	0
  7368  000DA8  6E0E               	movwf	parseHexFileEntry@offset,c
  7369  000DAA  0E00               	movlw	0
  7370  000DAC  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7371  000DAE  0E00               	movlw	0
  7372  000DB0  6E10               	movwf	parseHexFileEntry@offset+2,c
  7373  000DB2  0E00               	movlw	0
  7374  000DB4  6E11               	movwf	parseHexFileEntry@offset+3,c
  7375  000DB6  0E8D               	movlw	low _hex_file_entry
  7376  000DB8  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7377  000DBA  0E01               	movlw	high _hex_file_entry
  7378  000DBC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7379  000DBE  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7380  000DC2  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  7381  000DC6  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  7382  000DCA  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  7383  000DCE  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  7384                           
  7385                           ;bootloader.c: 222: ++hex_file_entries;
  7386  000DD2  0101               	movlb	1	; () banked
  7387  000DD4  4B71               	infsnz	_hex_file_entries& (0+255),f,b
  7388  000DD6  2B72               	incf	(_hex_file_entries+1)& (0+255),f,b
  7389                           
  7390                           ; BSR set to: 1
  7391                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  7392  000DD8  0E04               	movlw	4
  7393  000DDA  1991               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  7394  000DDC  A4D8               	btfss	status,2,c
  7395  000DDE  D01C               	goto	l2488
  7396                           
  7397                           ; BSR set to: 1
  7398                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  7399  000DE0  5192               	movf	(_hex_file_entry+5)& (0+255),w,b
  7400  000DE2  6F3F               	movwf	_extended_linear_address& (0+255),b
  7401  000DE4  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
  7402  000DE6  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
  7403  000DE8  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
  7404                           
  7405                           ; BSR set to: 1
  7406                           ;bootloader.c: 228: extended_linear_address <<= 8;
  7407  000DEA  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7408  000DEE  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7409  000DF2  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7410  000DF6  6B3F               	clrf	_extended_linear_address& (0+255),b
  7411                           
  7412                           ; BSR set to: 1
  7413                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  7414  000DF8  5193               	movf	(_hex_file_entry+6)& (0+255),w,b
  7415  000DFA  133F               	iorwf	_extended_linear_address& (0+255),f,b
  7416                           
  7417                           ; BSR set to: 1
  7418                           ;bootloader.c: 230: extended_linear_address <<= 8;
  7419  000DFC  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7420  000E00  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7421  000E04  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7422  000E08  6B3F               	clrf	_extended_linear_address& (0+255),b
  7423                           
  7424                           ; BSR set to: 1
  7425                           ;bootloader.c: 231: extended_linear_address <<= 8;
  7426  000E0A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7427  000E0E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7428  000E12  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7429  000E16  6B3F               	clrf	_extended_linear_address& (0+255),b
  7430  000E18                     l2488:
  7431                           
  7432                           ; BSR set to: 1
  7433                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  7434                           
  7435                           ; BSR set to: 1
  7436  000E18  5191               	movf	(_hex_file_entry+4)& (0+255),w,b
  7437  000E1A  A4D8               	btfss	status,2,c
  7438  000E1C  D05E               	goto	l2492
  7439                           
  7440                           ; BSR set to: 1
  7441                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7442  000E1E  518F               	movf	(_hex_file_entry+2)& (0+255),w,b
  7443  000E20  253F               	addwf	_extended_linear_address& (0+255),w,b
  7444  000E22  0100               	movlb	0	; () banked
  7445  000E24  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7446  000E26  0101               	movlb	1	; () banked
  7447  000E28  5190               	movf	(_hex_file_entry+3)& (0+255),w,b
  7448  000E2A  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7449  000E2C  0100               	movlb	0	; () banked
  7450  000E2E  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7451  000E30  0E00               	movlw	0
  7452  000E32  0101               	movlb	1	; () banked
  7453  000E34  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7454  000E36  0100               	movlb	0	; () banked
  7455  000E38  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7456  000E3A  0E00               	movlw	0
  7457  000E3C  0101               	movlb	1	; () banked
  7458  000E3E  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7459  000E40  0100               	movlb	0	; () banked
  7460  000E42  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7461                           
  7462                           ;bootloader.c: 241: if(address32<file_minimum_address)
  7463  000E44  0101               	movlb	1	; () banked
  7464  000E46  514B               	movf	_file_minimum_address& (0+255),w,b
  7465  000E48  0100               	movlb	0	; () banked
  7466  000E4A  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7467  000E4C  0101               	movlb	1	; () banked
  7468  000E4E  514C               	movf	(_file_minimum_address+1)& (0+255),w,b
  7469  000E50  0100               	movlb	0	; () banked
  7470  000E52  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7471  000E54  0101               	movlb	1	; () banked
  7472  000E56  514D               	movf	(_file_minimum_address+2)& (0+255),w,b
  7473  000E58  0100               	movlb	0	; () banked
  7474  000E5A  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7475  000E5C  0101               	movlb	1	; () banked
  7476  000E5E  514E               	movf	(_file_minimum_address+3)& (0+255),w,b
  7477  000E60  0100               	movlb	0	; () banked
  7478  000E62  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7479  000E64  B0D8               	btfsc	status,0,c
  7480  000E66  D008               	goto	l2490
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  7484  000E68  C09B  F14B         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7485  000E6C  C09C  F14C         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7486  000E70  C09D  F14D         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7487  000E74  C09E  F14E         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7488  000E78                     l2490:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  7492                           
  7493                           ; BSR set to: 0
  7494  000E78  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7495  000E7A  0101               	movlb	1	; () banked
  7496  000E7C  5D47               	subwf	_file_maximum_address& (0+255),w,b
  7497  000E7E  0100               	movlb	0	; () banked
  7498  000E80  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7499  000E82  0101               	movlb	1	; () banked
  7500  000E84  5948               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7501  000E86  0100               	movlb	0	; () banked
  7502  000E88  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7503  000E8A  0101               	movlb	1	; () banked
  7504  000E8C  5949               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7505  000E8E  0100               	movlb	0	; () banked
  7506  000E90  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7507  000E92  0101               	movlb	1	; () banked
  7508  000E94  594A               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7509  000E96  B0D8               	btfsc	status,0,c
  7510  000E98  D008               	goto	l2491
  7511                           
  7512                           ; BSR set to: 1
  7513                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  7514  000E9A  C09B  F147         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7515  000E9E  C09C  F148         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7516  000EA2  C09D  F149         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7517  000EA6  C09E  F14A         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7518  000EAA                     l2491:
  7519                           
  7520                           ; BSR set to: 1
  7521                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7522                           
  7523                           ; BSR set to: 1
  7524  000EAA  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7525  000EAE  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7526  000EB2  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7527  000EB6  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7528  000EBA  C18D  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7529  000EBE  EC83  F034         	call	__bootloader_check_address	;wreg free
  7530  000EC2  0AFF               	xorlw	255
  7531  000EC4  A4D8               	btfss	status,2,c
  7532  000EC6  D009               	goto	l2492
  7533                           
  7534                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  7535  000EC8  0E0B               	movlw	11
  7536  000ECA  0101               	movlb	1	; () banked
  7537  000ECC  6F85               	movwf	_last_error& (0+255),b
  7538                           
  7539                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7540  000ECE  0E50               	movlw	80
  7541  000ED0  0100               	movlb	0	; () banked
  7542  000ED2  6FC5               	movwf	(_os+4)& (0+255),b
  7543                           
  7544                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7545  000ED4  0E50               	movlw	80
  7546  000ED6  6FC6               	movwf	(_os+5)& (0+255),b
  7547                           
  7548                           ;bootloader.c: 258: break;
  7549  000ED8  0012               	return	
  7550  000EDA                     l2492:
  7551                           
  7552                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  7553                           
  7554                           ; BSR set to: 0
  7555                           
  7556                           ; BSR set to: 0
  7557  000EDA  0100               	movlb	0	; () banked
  7558  000EDC  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7559  000EDE  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7560  000EE0  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7561  000EE2  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7562  000EE4  A4D8               	btfss	status,2,c
  7563  000EE6  D027               	goto	l2493
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  7567  000EE8  C171  F16F         	movff	_hex_file_entries,_total_hex_file_entries
  7568  000EEC  C172  F170         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;bootloader.c: 267: hex_file_entries = 0;
  7572  000EF0  0E00               	movlw	0
  7573  000EF2  0101               	movlb	1	; () banked
  7574  000EF4  6F72               	movwf	(_hex_file_entries+1)& (0+255),b
  7575  000EF6  0E00               	movlw	0
  7576  000EF8  6F71               	movwf	_hex_file_entries& (0+255),b
  7577                           
  7578                           ;bootloader.c: 268: hex_file_offset = 0;
  7579  000EFA  0E00               	movlw	0
  7580  000EFC  0100               	movlb	0	; () banked
  7581  000EFE  6FDA               	movwf	_hex_file_offset& (0+255),b
  7582  000F00  0E00               	movlw	0
  7583  000F02  6FDB               	movwf	(_hex_file_offset+1)& (0+255),b
  7584  000F04  0E00               	movlw	0
  7585  000F06  6FDC               	movwf	(_hex_file_offset+2)& (0+255),b
  7586  000F08  0E00               	movlw	0
  7587  000F0A  6FDD               	movwf	(_hex_file_offset+3)& (0+255),b
  7588                           
  7589                           ;bootloader.c: 269: extended_linear_address = 0;
  7590  000F0C  0E00               	movlw	0
  7591  000F0E  0101               	movlb	1	; () banked
  7592  000F10  6F3F               	movwf	_extended_linear_address& (0+255),b
  7593  000F12  0E00               	movlw	0
  7594  000F14  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
  7595  000F16  0E00               	movlw	0
  7596  000F18  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
  7597  000F1A  0E00               	movlw	0
  7598  000F1C  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
  7599                           
  7600                           ;bootloader.c: 270: flash_pages_written = 0;
  7601  000F1E  0E00               	movlw	0
  7602  000F20  6F6E               	movwf	(_flash_pages_written+1)& (0+255),b
  7603  000F22  0E00               	movlw	0
  7604  000F24  6F6D               	movwf	_flash_pages_written& (0+255),b
  7605                           
  7606                           ;bootloader.c: 271: start_from_byte_next = 0;
  7607  000F26  0E00               	movlw	0
  7608  000F28  6F84               	movwf	_start_from_byte_next& (0+255),b
  7609                           
  7610                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7611  000F2A  0E40               	movlw	64
  7612  000F2C  0100               	movlb	0	; () banked
  7613  000F2E  6FC5               	movwf	(_os+4)& (0+255),b
  7614                           
  7615                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7616  000F30  0E40               	movlw	64
  7617  000F32  6FC6               	movwf	(_os+5)& (0+255),b
  7618                           
  7619                           ;bootloader.c: 275: break;
  7620  000F34  0012               	return	
  7621  000F36                     l2493:
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  7625                           
  7626                           ; BSR set to: 0
  7627  000F36  0EF1               	movlw	241
  7628  000F38  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7629  000F3A  0EFF               	movlw	255
  7630  000F3C  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7631  000F3E  0EFF               	movlw	255
  7632  000F40  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7633  000F42  0EFF               	movlw	255
  7634  000F44  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7635  000F46  A0D8               	btfss	status,0,c
  7636  000F48  D009               	goto	l2495
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  7640  000F4A  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7641  000F4C  0B0F               	andlw	15
  7642  000F4E  0101               	movlb	1	; () banked
  7643  000F50  6F85               	movwf	_last_error& (0+255),b
  7644                           
  7645                           ; BSR set to: 1
  7646                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7647  000F52  0E50               	movlw	80
  7648  000F54  0100               	movlb	0	; () banked
  7649  000F56  6FC5               	movwf	(_os+4)& (0+255),b
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7653  000F58  0E50               	movlw	80
  7654  000F5A  D7EB               	goto	L1
  7655  000F5C                     l2495:
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  7659                           
  7660                           ; BSR set to: 0
  7661  000F5C  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7662  000F5E  27DA               	addwf	_hex_file_offset& (0+255),f,b
  7663  000F60  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7664  000F62  23DB               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7665  000F64  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7666  000F66  23DC               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7667  000F68  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7668  000F6A  23DD               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7669                           
  7670                           ; BSR set to: 0
  7671                           
  7672                           ; BSR set to: 0
  7673                           
  7674                           ; BSR set to: 0
  7675  000F6C  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7676  000F6E  D68B               	goto	l16269
  7677  000F70                     __end_of__bootloader_verify_file:
  7678                           	opt stack 0
  7679                           tblptru	equ	0xFF8
  7680                           tblptrh	equ	0xFF7
  7681                           tblptrl	equ	0xFF6
  7682                           tablat	equ	0xFF5
  7683                           intcon	equ	0xFF2
  7684                           intcon2	equ	0xFF1
  7685                           intcon3	equ	0xFF0
  7686                           postinc0	equ	0xFEE
  7687                           wreg	equ	0xFE8
  7688                           postdec1	equ	0xFE5
  7689                           plusw1	equ	0xFE3
  7690                           fsr1h	equ	0xFE2
  7691                           fsr1l	equ	0xFE1
  7692                           postinc2	equ	0xFDE
  7693                           plusw2	equ	0xFDB
  7694                           fsr2h	equ	0xFDA
  7695                           fsr2l	equ	0xFD9
  7696                           status	equ	0xFD8
  7697                           
  7698 ;; *************** function __bootloader_program *****************
  7699 ;; Defined at:
  7700 ;;		line 294 in file "bootloader.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  root           32   28[BANK0 ] struct .
  7705 ;;  address32       4   64[BANK0 ] unsigned long 
  7706 ;;  return_value    4   60[BANK0 ] unsigned long 
  7707 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7708 ;;  cntr            2   69[BANK0 ] unsigned int 
  7709 ;;  address_with    2   26[BANK0 ] unsigned int 
  7710 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7711 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7712 ;;		 -> pageBuffer(1024), 
  7713 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7724 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7725 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;Total ram usage:       59 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    8
  7730 ;; This function calls:
  7731 ;;		__bootloader_check_address
  7732 ;;		_fat_get_file_information
  7733 ;;		_fat_read_from_file_fast
  7734 ;;		_internalFlash_addressWithinPage
  7735 ;;		_internalFlash_erasePage
  7736 ;;		_internalFlash_getBuffer
  7737 ;;		_internalFlash_pageFromAddress
  7738 ;;		_internalFlash_readPage
  7739 ;;		_internalFlash_writePage
  7740 ;;		_parseHexFileEntry
  7741 ;; This function is called by:
  7742 ;;		_bootloader_run
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text29
  7747  00049C                     __ptext29:
  7748                           	opt stack 0
  7749  00049C                     __bootloader_program:
  7750                           	opt stack 21
  7751                           
  7752                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;incstack = 0
  7756  00049C  0E00               	movlw	0
  7757  00049E  0100               	movlb	0	; () banked
  7758  0004A0  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7759  0004A2  0E00               	movlw	0
  7760  0004A4  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7761                           
  7762                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  7763  0004A6  0E00               	movlw	0
  7764  0004A8  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7765  0004AA  0E00               	movlw	0
  7766  0004AC  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7767  0004AE  0E00               	movlw	0
  7768  0004B0  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7769  0004B2  0E00               	movlw	0
  7770  0004B4  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  7774  0004B6  51DA               	movf	_hex_file_offset& (0+255),w,b
  7775  0004B8  11DB               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7776  0004BA  11DC               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7777  0004BC  11DD               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7778  0004BE  A4D8               	btfss	status,2,c
  7779  0004C0  D010               	goto	l2500
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  7783  0004C2  0E7C               	movlw	low __bootloader_program@root
  7784  0004C4  6E30               	movwf	fat_get_file_information@data,c
  7785  0004C6  0E00               	movlw	high __bootloader_program@root
  7786  0004C8  6E31               	movwf	fat_get_file_information@data+1,c
  7787  0004CA  51FF               	movf	_file_number& (0+255),w,b
  7788  0004CC  ECFC  F043         	call	_fat_get_file_information
  7789                           
  7790                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  7791  0004D0  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7792  0004D4  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7793                           
  7794                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  7795  0004D8  0E00               	movlw	0
  7796  0004DA  0101               	movlb	1	; () banked
  7797  0004DC  6FAA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7798  0004DE  0E00               	movlw	0
  7799  0004E0  6FA9               	movwf	_fast_read_cluster_number& (0+255),b
  7800  0004E2                     l2500:
  7801                           
  7802                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  7803                           
  7804                           ; BSR set to: 1
  7805                           
  7806                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  7807                           
  7808                           ; BSR set to: 1
  7809  0004E2  C0DA  F06E         	movff	_hex_file_offset,??__bootloader_program
  7810  0004E6  C0DB  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7811  0004EA  C0DC  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7812  0004EE  C0DD  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7813  0004F2  0100               	movlb	0	; () banked
  7814  0004F4  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7815  0004F6  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7816  0004F8  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7817  0004FA  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7818  0004FC  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7819  0004FE  0E00               	movlw	0
  7820  000500  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7821  000502  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7822  000504  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7823  000506  0101               	movlb	1	; () banked
  7824  000508  5143               	movf	_hex_file_size& (0+255),w,b
  7825  00050A  0100               	movlb	0	; () banked
  7826  00050C  256E               	addwf	??__bootloader_program& (0+255),w,b
  7827  00050E  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7828  000510  0101               	movlb	1	; () banked
  7829  000512  5144               	movf	(_hex_file_size+1)& (0+255),w,b
  7830  000514  0100               	movlb	0	; () banked
  7831  000516  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7832  000518  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7833  00051A  0101               	movlb	1	; () banked
  7834  00051C  5145               	movf	(_hex_file_size+2)& (0+255),w,b
  7835  00051E  0100               	movlb	0	; () banked
  7836  000520  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7837  000522  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7838  000524  0101               	movlb	1	; () banked
  7839  000526  5146               	movf	(_hex_file_size+3)& (0+255),w,b
  7840  000528  0100               	movlb	0	; () banked
  7841  00052A  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7842  00052C  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7843  00052E  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7844  000530  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7845  000532  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7846  000534  E104               	bnz	u13990
  7847  000536  0E32               	movlw	50
  7848  000538  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7849  00053A  A0D8               	btfss	status,0,c
  7850  00053C  D01F               	goto	l2502
  7851  00053E                     u13990:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7855  00053E  C0DA  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7856  000542  C0DB  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7857  000546  C0DC  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7858  00054A  C0DD  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7859  00054E  0E32               	movlw	50
  7860  000550  6E46               	movwf	fat_read_from_file_fast@length,c
  7861  000552  0E00               	movlw	0
  7862  000554  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7863  000556  0E00               	movlw	0
  7864  000558  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7865  00055A  0E00               	movlw	0
  7866  00055C  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7867  00055E  0E90               	movlw	low _file_buffer
  7868  000560  6E4A               	movwf	fat_read_from_file_fast@data,c
  7869  000562  0E02               	movlw	high _file_buffer
  7870  000564  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7871  000566  0EFB               	movlw	low _fast_read_cluster
  7872  000568  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7873  00056A  0E00               	movlw	high _fast_read_cluster
  7874  00056C  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7875  00056E  0EA9               	movlw	low _fast_read_cluster_number
  7876  000570  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7877  000572  0E01               	movlw	high _fast_read_cluster_number
  7878  000574  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7879  000576  EC36  F013         	call	_fat_read_from_file_fast	;wreg free
  7880                           
  7881                           ;bootloader.c: 325: }
  7882  00057A  D03C               	goto	l2503
  7883  00057C                     l2502:
  7884                           
  7885                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7886  00057C  C0DA  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7887  000580  C0DB  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7888  000584  C0DC  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7889  000588  C0DD  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7890  00058C  C0DA  F06E         	movff	_hex_file_offset,??__bootloader_program
  7891  000590  C0DB  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7892  000594  C0DC  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7893  000598  C0DD  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7894  00059C  0100               	movlb	0	; () banked
  7895  00059E  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7896  0005A0  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7897  0005A2  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7898  0005A4  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7899  0005A6  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7900  0005A8  0E00               	movlw	0
  7901  0005AA  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7902  0005AC  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7903  0005AE  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7904  0005B0  0101               	movlb	1	; () banked
  7905  0005B2  5143               	movf	_hex_file_size& (0+255),w,b
  7906  0005B4  0100               	movlb	0	; () banked
  7907  0005B6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7908  0005B8  6E46               	movwf	fat_read_from_file_fast@length,c
  7909  0005BA  0101               	movlb	1	; () banked
  7910  0005BC  5144               	movf	(_hex_file_size+1)& (0+255),w,b
  7911  0005BE  0100               	movlb	0	; () banked
  7912  0005C0  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7913  0005C2  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7914  0005C4  0101               	movlb	1	; () banked
  7915  0005C6  5145               	movf	(_hex_file_size+2)& (0+255),w,b
  7916  0005C8  0100               	movlb	0	; () banked
  7917  0005CA  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7918  0005CC  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7919  0005CE  0101               	movlb	1	; () banked
  7920  0005D0  5146               	movf	(_hex_file_size+3)& (0+255),w,b
  7921  0005D2  0100               	movlb	0	; () banked
  7922  0005D4  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7923  0005D6  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7924  0005D8  0E90               	movlw	low _file_buffer
  7925  0005DA  6E4A               	movwf	fat_read_from_file_fast@data,c
  7926  0005DC  0E02               	movlw	high _file_buffer
  7927  0005DE  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7928  0005E0  0EFB               	movlw	low _fast_read_cluster
  7929  0005E2  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7930  0005E4  0E00               	movlw	high _fast_read_cluster
  7931  0005E6  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7932  0005E8  0EA9               	movlw	low _fast_read_cluster_number
  7933  0005EA  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7934  0005EC  0E01               	movlw	high _fast_read_cluster_number
  7935  0005EE  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7936  0005F0  EC36  F013         	call	_fat_read_from_file_fast	;wreg free
  7937  0005F4                     l2503:
  7938                           
  7939                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7940  0005F4  0E90               	movlw	low _file_buffer
  7941  0005F6  6E0C               	movwf	parseHexFileEntry@data,c
  7942  0005F8  0E02               	movlw	high _file_buffer
  7943  0005FA  6E0D               	movwf	parseHexFileEntry@data+1,c
  7944  0005FC  0E00               	movlw	0
  7945  0005FE  6E0E               	movwf	parseHexFileEntry@offset,c
  7946  000600  0E00               	movlw	0
  7947  000602  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7948  000604  0E00               	movlw	0
  7949  000606  6E10               	movwf	parseHexFileEntry@offset+2,c
  7950  000608  0E00               	movlw	0
  7951  00060A  6E11               	movwf	parseHexFileEntry@offset+3,c
  7952  00060C  0E8D               	movlw	low _hex_file_entry
  7953  00060E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7954  000610  0E01               	movlw	high _hex_file_entry
  7955  000612  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7956  000614  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7957  000618  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7958  00061C  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7959  000620  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7960  000624  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7961                           
  7962                           ;bootloader.c: 336: ++hex_file_entries;
  7963  000628  0101               	movlb	1	; () banked
  7964  00062A  4B71               	infsnz	_hex_file_entries& (0+255),f,b
  7965  00062C  2B72               	incf	(_hex_file_entries+1)& (0+255),f,b
  7966                           
  7967                           ; BSR set to: 1
  7968                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  7969  00062E  0EF1               	movlw	241
  7970  000630  0100               	movlb	0	; () banked
  7971  000632  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7972  000634  0EFF               	movlw	255
  7973  000636  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7974  000638  0EFF               	movlw	255
  7975  00063A  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7976  00063C  0EFF               	movlw	255
  7977  00063E  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7978  000640  A0D8               	btfss	status,0,c
  7979  000642  D005               	goto	l2504
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7983  000644  0E50               	movlw	80
  7984  000646  6FC5               	movwf	(_os+4)& (0+255),b
  7985                           
  7986                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7987  000648  0E50               	movlw	80
  7988  00064A  6FC6               	movwf	(_os+5)& (0+255),b
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;bootloader.c: 344: return;
  7992  00064C  0012               	return	
  7993  00064E                     l2504:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  7997                           
  7998                           ; BSR set to: 0
  7999  00064E  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  8000  000650  27DA               	addwf	_hex_file_offset& (0+255),f,b
  8001  000652  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  8002  000654  23DB               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  8003  000656  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  8004  000658  23DC               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  8005  00065A  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  8006  00065C  23DD               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  8010  00065E  D0FA               	goto	l2507
  8011  000660                     
  8012                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  8013                           
  8014                           ; BSR set to: 0
  8015  000660  0101               	movlb	1	; () banked
  8016  000662  5192               	movf	(_hex_file_entry+5)& (0+255),w,b
  8017  000664  6F3F               	movwf	_extended_linear_address& (0+255),b
  8018  000666  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
  8019  000668  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
  8020  00066A  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
  8021                           
  8022                           ; BSR set to: 1
  8023                           ;bootloader.c: 359: extended_linear_address <<= 8;
  8024  00066C  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  8025  000670  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  8026  000674  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  8027  000678  6B3F               	clrf	_extended_linear_address& (0+255),b
  8028                           
  8029                           ; BSR set to: 1
  8030                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  8031  00067A  5193               	movf	(_hex_file_entry+6)& (0+255),w,b
  8032  00067C  133F               	iorwf	_extended_linear_address& (0+255),f,b
  8033                           
  8034                           ; BSR set to: 1
  8035                           ;bootloader.c: 361: extended_linear_address <<= 8;
  8036  00067E  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  8037  000682  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  8038  000686  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  8039  00068A  6B3F               	clrf	_extended_linear_address& (0+255),b
  8040                           
  8041                           ; BSR set to: 1
  8042                           ;bootloader.c: 362: extended_linear_address <<= 8;
  8043  00068C  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  8044  000690  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  8045  000694  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  8046  000698  6B3F               	clrf	_extended_linear_address& (0+255),b
  8047                           
  8048                           ; BSR set to: 1
  8049                           ;bootloader.c: 364: break;
  8050                           
  8051                           ;bootloader.c: 363: continue;
  8052  00069A  D723               	goto	l2500
  8053  00069C                     l2511:
  8054                           
  8055                           ; BSR set to: 1
  8056                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  8057  00069C  C184  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;bootloader.c: 371: start_from_byte_next = 0;
  8061  0006A0  0E00               	movlw	0
  8062  0006A2  6F84               	movwf	_start_from_byte_next& (0+255),b
  8063                           
  8064                           ; BSR set to: 1
  8065                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  8066  0006A4  518F               	movf	(_hex_file_entry+2)& (0+255),w,b
  8067  0006A6  253F               	addwf	_extended_linear_address& (0+255),w,b
  8068  0006A8  0100               	movlb	0	; () banked
  8069  0006AA  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  8070  0006AC  0101               	movlb	1	; () banked
  8071  0006AE  5190               	movf	(_hex_file_entry+3)& (0+255),w,b
  8072  0006B0  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  8073  0006B2  0100               	movlb	0	; () banked
  8074  0006B4  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  8075  0006B6  0E00               	movlw	0
  8076  0006B8  0101               	movlb	1	; () banked
  8077  0006BA  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  8078  0006BC  0100               	movlb	0	; () banked
  8079  0006BE  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  8080  0006C0  0E00               	movlw	0
  8081  0006C2  0101               	movlb	1	; () banked
  8082  0006C4  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  8083  0006C6  0100               	movlb	0	; () banked
  8084  0006C8  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  8088  0006CA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8089  0006CC  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8090  0006CE  6E01               	movwf	internalFlash_pageFromAddress@address,c
  8091  0006D0  0E00               	movlw	0
  8092  0006D2  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8093  0006D4  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  8094  0006D6  0E00               	movlw	0
  8095  0006D8  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8096  0006DA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  8097  0006DC  0E00               	movlw	0
  8098  0006DE  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8099  0006E0  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  8100  0006E2  EC62  F04F         	call	_internalFlash_pageFromAddress	;wreg free
  8101  0006E6  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  8102  0006EA  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  8103                           
  8104                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  8105  0006EE  0100               	movlb	0	; () banked
  8106  0006F0  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8107  0006F2  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8108  0006F4  6E01               	movwf	__bootloader_check_address@address,c
  8109  0006F6  0E00               	movlw	0
  8110  0006F8  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8111  0006FA  6E02               	movwf	__bootloader_check_address@address+1,c
  8112  0006FC  0E00               	movlw	0
  8113  0006FE  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8114  000700  6E03               	movwf	__bootloader_check_address@address+2,c
  8115  000702  0E00               	movlw	0
  8116  000704  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8117  000706  6E04               	movwf	__bootloader_check_address@address+3,c
  8118  000708  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8119  00070A  0800               	sublw	0
  8120  00070C  0101               	movlb	1	; () banked
  8121  00070E  258D               	addwf	_hex_file_entry& (0+255),w,b
  8122  000710  6E05               	movwf	__bootloader_check_address@dataLength,c
  8123  000712  EC83  F034         	call	__bootloader_check_address	;wreg free
  8124  000716  0900               	iorlw	0
  8125  000718  A4D8               	btfss	status,2,c
  8126  00071A  D6E3               	goto	l2500
  8127                           
  8128                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  8129                           
  8130                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  8131  00071C  0100               	movlb	0	; () banked
  8132  00071E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8133  000720  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8134  000722  A4D8               	btfss	status,2,c
  8135  000724  D010               	goto	l2513
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  8139  000726  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  8140  00072A  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  8144  00072E  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  8145  000732  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  8146  000736  EC2A  F04B         	call	_internalFlash_readPage	;wreg free
  8147                           
  8148                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  8149  00073A  EC40  F050         	call	_internalFlash_getBuffer	;wreg free
  8150  00073E  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  8151  000742  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  8152  000746                     l2513:
  8153                           
  8154                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  8155  000746  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  8156  00074A  0100               	movlb	0	; () banked
  8157  00074C  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  8158  00074E  D05D               	goto	l2514
  8159  000750                     
  8160                           ; BSR set to: 0
  8161                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  8162                           
  8163                           ; BSR set to: 0
  8164  000750  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  8165  000752  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8166  000754  6E01               	movwf	internalFlash_pageFromAddress@address,c
  8167  000756  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  8168  000758  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8169  00075A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  8170  00075C  0E00               	movlw	0
  8171  00075E  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8172  000760  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  8173  000762  0E00               	movlw	0
  8174  000764  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8175  000766  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  8176  000768  EC62  F04F         	call	_internalFlash_pageFromAddress	;wreg free
  8177  00076C  0100               	movlb	0	; () banked
  8178  00076E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8179  000770  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  8180  000772  E12A               	bnz	l16401
  8181  000774  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8182  000776  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  8183  000778  A4D8               	btfss	status,2,c
  8184  00077A  D026               	goto	l2516
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  8188  00077C  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  8189  00077E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8190  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
  8191  000782  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  8192  000784  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8193  000786  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  8194  000788  0E00               	movlw	0
  8195  00078A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8196  00078C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  8197  00078E  0E00               	movlw	0
  8198  000790  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8199  000792  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  8200  000794  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  8201  000798  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  8202  00079C  ECA7  F046         	call	_internalFlash_addressWithinPage	;wreg free
  8203  0007A0  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  8204  0007A4  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  8205                           
  8206                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  8207  0007A8  0E92               	movlw	low (_hex_file_entry+5)
  8208  0007AA  0100               	movlb	0	; () banked
  8209  0007AC  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  8210  0007AE  6ED9               	movwf	fsr2l,c
  8211  0007B0  0E01               	movlw	high (_hex_file_entry+5)
  8212  0007B2  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  8213  0007B4  6EDA               	movwf	fsr2h,c
  8214  0007B6  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  8215  0007B8  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  8216  0007BA  6EE1               	movwf	fsr1l,c
  8217  0007BC  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  8218  0007BE  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  8219  0007C0  6EE2               	movwf	fsr1h,c
  8220  0007C2  CFDF FFE7          	movff	indf2,indf1
  8221                           
  8222                           ;bootloader.c: 401: }
  8223  0007C6  D01E               	goto	l2517
  8224  0007C8                     l2516:
  8225  0007C8                     l16401:
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  8229  0007C8  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  8230  0007CA  5FDA               	subwf	_hex_file_offset& (0+255),f,b
  8231  0007CC  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  8232  0007CE  5BDB               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  8233  0007D0  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  8234  0007D2  5BDC               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  8235  0007D4  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  8236  0007D6  5BDD               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;bootloader.c: 406: --hex_file_entries;
  8240  0007D8  0101               	movlb	1	; () banked
  8241  0007DA  0771               	decf	_hex_file_entries& (0+255),f,b
  8242  0007DC  A0D8               	btfss	status,0,c
  8243  0007DE  0772               	decf	(_hex_file_entries+1)& (0+255),f,b
  8244                           
  8245                           ; BSR set to: 1
  8246                           ;bootloader.c: 408: start_from_byte_next = cntr;
  8247  0007E0  C0A5  F184         	movff	__bootloader_program@cntr,_start_from_byte_next
  8248                           
  8249                           ; BSR set to: 1
  8250                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  8251  0007E4  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  8252  0007E8  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  8253  0007EC  ECDC  F044         	call	_internalFlash_erasePage	;wreg free
  8254                           
  8255                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  8256  0007F0  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  8257  0007F4  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  8258  0007F8  ECBA  F03A         	call	_internalFlash_writePage	;wreg free
  8259                           
  8260                           ;bootloader.c: 412: ++flash_pages_written;
  8261  0007FC  0101               	movlb	1	; () banked
  8262  0007FE  4B6D               	infsnz	_flash_pages_written& (0+255),f,b
  8263  000800  2B6E               	incf	(_flash_pages_written+1)& (0+255),f,b
  8264                           
  8265                           ; BSR set to: 1
  8266                           ;bootloader.c: 414: return;
  8267  000802  0012               	return	
  8268  000804                     l2517:
  8269                           
  8270                           ; BSR set to: 1
  8271  000804  0100               	movlb	0	; () banked
  8272  000806  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  8273  000808  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  8274  00080A                     l2514:
  8275                           
  8276                           ; BSR set to: 0
  8277                           
  8278                           ; BSR set to: 0
  8279  00080A  0101               	movlb	1	; () banked
  8280  00080C  518D               	movf	_hex_file_entry& (0+255),w,b
  8281  00080E  0100               	movlb	0	; () banked
  8282  000810  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  8283  000812  0101               	movlb	1	; () banked
  8284  000814  518E               	movf	(_hex_file_entry+1)& (0+255),w,b
  8285  000816  0100               	movlb	0	; () banked
  8286  000818  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  8287  00081A  B0D8               	btfsc	status,0,c
  8288  00081C  D662               	goto	l2500
  8289  00081E  D798               	goto	l2515
  8290  000820                     
  8291                           ;bootloader.c: 422: if(page_to_write!=0)
  8292                           
  8293                           ; BSR set to: 0
  8294  000820  0100               	movlb	0	; () banked
  8295  000822  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8296  000824  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8297  000826  B4D8               	btfsc	status,2,c
  8298  000828  0012               	return	
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  8302  00082A  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  8303  00082E  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  8304  000832  ECDC  F044         	call	_internalFlash_erasePage	;wreg free
  8305                           
  8306                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  8307  000836  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  8308  00083A  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  8309  00083E  ECBA  F03A         	call	_internalFlash_writePage	;wreg free
  8310                           
  8311                           ;bootloader.c: 427: ++flash_pages_written;
  8312  000842  0101               	movlb	1	; () banked
  8313  000844  4B6D               	infsnz	_flash_pages_written& (0+255),f,b
  8314  000846  2B6E               	incf	(_flash_pages_written+1)& (0+255),f,b
  8315                           
  8316                           ; BSR set to: 1
  8317                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  8318  000848  0E70               	movlw	112
  8319  00084A  0100               	movlb	0	; () banked
  8320  00084C  6FC5               	movwf	(_os+4)& (0+255),b
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  8324  00084E  0E70               	movlw	112
  8325  000850  6FC6               	movwf	(_os+5)& (0+255),b
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;bootloader.c: 431: };bootloader.c: 433: return;
  8329                           
  8330                           ; BSR set to: 0
  8331  000852  0012               	return	
  8332  000854                     l2507:
  8333                           
  8334                           ; BSR set to: 0
  8335                           
  8336                           ; BSR set to: 0
  8337  000854  0101               	movlb	1	; () banked
  8338  000856  5191               	movf	(_hex_file_entry+4)& (0+255),w,b
  8339                           
  8340                           ; Switch size 1, requested type "space"
  8341                           ; Number of cases is 3, Range of values is 0 to 4
  8342                           ; switch strategies available:
  8343                           ; Name         Instructions Cycles
  8344                           ; simple_byte           10     6 (average)
  8345                           ;	Chosen strategy is simple_byte
  8346  000858  0A00               	xorlw	0	; case 0
  8347  00085A  B4D8               	btfsc	status,2,c
  8348  00085C  D71F               	goto	l2511
  8349  00085E  0A01               	xorlw	1	; case 1
  8350  000860  B4D8               	btfsc	status,2,c
  8351  000862  D7DE               	goto	l2519
  8352  000864  0A05               	xorlw	5	; case 4
  8353  000866  B4D8               	btfsc	status,2,c
  8354  000868  D6FB               	goto	l2508
  8355                           
  8356                           ; BSR set to: 1
  8357                           
  8358                           ; BSR set to: 1
  8359  00086A  D63B               	goto	l2500
  8360  00086C                     __end_of__bootloader_program:
  8361                           	opt stack 0
  8362                           tblptru	equ	0xFF8
  8363                           tblptrh	equ	0xFF7
  8364                           tblptrl	equ	0xFF6
  8365                           tablat	equ	0xFF5
  8366                           intcon	equ	0xFF2
  8367                           intcon2	equ	0xFF1
  8368                           intcon3	equ	0xFF0
  8369                           postinc0	equ	0xFEE
  8370                           wreg	equ	0xFE8
  8371                           indf1	equ	0xFE7
  8372                           postdec1	equ	0xFE5
  8373                           plusw1	equ	0xFE3
  8374                           fsr1h	equ	0xFE2
  8375                           fsr1l	equ	0xFE1
  8376                           indf2	equ	0xFDF
  8377                           postinc2	equ	0xFDE
  8378                           plusw2	equ	0xFDB
  8379                           fsr2h	equ	0xFDA
  8380                           fsr2l	equ	0xFD9
  8381                           status	equ	0xFD8
  8382                           
  8383 ;; *************** function _parseHexFileEntry *****************
  8384 ;; Defined at:
  8385 ;;		line 59 in file "hex.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  data            2   11[COMRAM] PTR unsigned char 
  8388 ;;		 -> file_buffer(50), 
  8389 ;;  offset          4   13[COMRAM] unsigned long 
  8390 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  8391 ;;		 -> hex_file_entry(23), 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  i               1   27[COMRAM] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  4   11[COMRAM] unsigned long 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;Total ram usage:       17 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    2
  8410 ;; This function calls:
  8411 ;;		_hexCharsToUint16
  8412 ;;		_hexCharsToUint8
  8413 ;; This function is called by:
  8414 ;;		__bootloader_verify_file
  8415 ;;		__bootloader_program
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text30
  8420  000020                     __ptext30:
  8421                           	opt stack 0
  8422  000020                     _parseHexFileEntry:
  8423                           	opt stack 26
  8424                           
  8425                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  8426                           
  8427                           ;incstack = 0
  8428  000020  500E               	movf	parseHexFileEntry@offset,w,c
  8429  000022  240C               	addwf	parseHexFileEntry@data,w,c
  8430  000024  6ED9               	movwf	fsr2l,c
  8431  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  8432  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8433  00002A  6EDA               	movwf	fsr2h,c
  8434  00002C  0E3A               	movlw	58
  8435  00002E  18DE               	xorwf	postinc2,w,c
  8436  000030  B4D8               	btfsc	status,2,c
  8437  000032  D005               	goto	l2363
  8438                           
  8439                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  8440  000034  680C               	setf	?_parseHexFileEntry,c
  8441  000036  680D               	setf	?_parseHexFileEntry+1,c
  8442  000038  680E               	setf	?_parseHexFileEntry+2,c
  8443  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8444  00003C  0012               	return	
  8445  00003E                     l2363:
  8446                           
  8447                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8448  00003E  0E02               	movlw	2
  8449  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8450  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8451  000044  0E00               	movlw	0
  8452  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8453  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8454  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8455  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8456  00004E  6ED9               	movwf	fsr2l,c
  8457  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8458  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8459  000054  6EDA               	movwf	fsr2h,c
  8460  000056  50DF               	movf	indf2,w,c
  8461  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8462  00005A  0E01               	movlw	1
  8463  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8464  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8465  000060  0E00               	movlw	0
  8466  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8467  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8468  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8469  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8470  00006A  6ED9               	movwf	fsr2l,c
  8471  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8472  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8473  000070  6EDA               	movwf	fsr2h,c
  8474  000072  50DF               	movf	indf2,w,c
  8475  000074  EC54  F04F         	call	_hexCharsToUint8
  8476  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8477  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8478  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8479  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8480  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8481  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8482                           
  8483                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8484  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8485  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8486  000094  0E01               	movlw	1
  8487  000096  50DB               	movf	plusw2,w,c
  8488  000098  E104               	bnz	u12970
  8489  00009A  0E11               	movlw	17
  8490  00009C  5CDE               	subwf	postinc2,w,c
  8491  00009E  A0D8               	btfss	status,0,c
  8492  0000A0  D009               	goto	l2365
  8493  0000A2                     u12970:
  8494                           
  8495                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8496  0000A2  0EFC               	movlw	252
  8497  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8498  0000A6  0EFF               	movlw	255
  8499  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8500  0000AA  0EFF               	movlw	255
  8501  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8502  0000AE  0EFF               	movlw	255
  8503  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8504  0000B2  0012               	return	
  8505  0000B4                     l2365:
  8506                           
  8507                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8508  0000B4  0E04               	movlw	4
  8509  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8510  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8511  0000BA  0E00               	movlw	0
  8512  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8513  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8514  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8515  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8516  0000C4  6ED9               	movwf	fsr2l,c
  8517  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8518  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8519  0000CA  6EDA               	movwf	fsr2h,c
  8520  0000CC  50DF               	movf	indf2,w,c
  8521  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8522  0000D0  0E05               	movlw	5
  8523  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8524  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8525  0000D6  0E00               	movlw	0
  8526  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8527  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8528  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8529  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8530  0000E0  6ED9               	movwf	fsr2l,c
  8531  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8532  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8533  0000E6  6EDA               	movwf	fsr2h,c
  8534  0000E8  50DF               	movf	indf2,w,c
  8535  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8536  0000EC  0E06               	movlw	6
  8537  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8538  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8539  0000F2  0E00               	movlw	0
  8540  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8541  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8542  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8543  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8544  0000FC  6ED9               	movwf	fsr2l,c
  8545  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8546  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8547  000102  6EDA               	movwf	fsr2h,c
  8548  000104  50DF               	movf	indf2,w,c
  8549  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8550  000108  0E03               	movlw	3
  8551  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8552  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8553  00010E  0E00               	movlw	0
  8554  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8555  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8556  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8557  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8558  000118  6ED9               	movwf	fsr2l,c
  8559  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8560  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8561  00011E  6EDA               	movwf	fsr2h,c
  8562  000120  50DF               	movf	indf2,w,c
  8563  000122  EC35  F044         	call	_hexCharsToUint16
  8564  000126  EE20 F002          	lfsr	2,2
  8565  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8566  00012C  26D9               	addwf	fsr2l,f,c
  8567  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8568  000130  22DA               	addwfc	fsr2h,f,c
  8569  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8570  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8571                           
  8572                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8573  00013A  EE20 F004          	lfsr	2,4
  8574  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8575  000140  26D9               	addwf	fsr2l,f,c
  8576  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8577  000144  22DA               	addwfc	fsr2h,f,c
  8578  000146  0E08               	movlw	8
  8579  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8580  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8581  00014C  0E00               	movlw	0
  8582  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8583  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8584  000152  5014               	movf	??_parseHexFileEntry,w,c
  8585  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8586  000156  6EE1               	movwf	fsr1l,c
  8587  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8588  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8589  00015C  6EE2               	movwf	fsr1h,c
  8590  00015E  50E7               	movf	indf1,w,c
  8591  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8592  000162  0E07               	movlw	7
  8593  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8594  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8595  000168  0E00               	movlw	0
  8596  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8597  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8598  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8599  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8600  000172  6EE1               	movwf	fsr1l,c
  8601  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8602  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8603  000178  6EE2               	movwf	fsr1h,c
  8604  00017A  50E7               	movf	indf1,w,c
  8605  00017C  EC54  F04F         	call	_hexCharsToUint8
  8606  000180  6EDF               	movwf	indf2,c
  8607                           
  8608                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8609  000182  0E00               	movlw	0
  8610  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8611  000186  D03D               	goto	l2366
  8612  000188                     
  8613                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8614  000188  501C               	movf	parseHexFileEntry@i,w,c
  8615  00018A  0D01               	mullw	1
  8616  00018C  0E05               	movlw	5
  8617  00018E  26F3               	addwf	prodl,f,c
  8618  000190  0E00               	movlw	0
  8619  000192  22F4               	addwfc	prodh,f,c
  8620  000194  50F3               	movf	prodl,w,c
  8621  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8622  000198  6ED9               	movwf	fsr2l,c
  8623  00019A  50F4               	movf	prodh,w,c
  8624  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8625  00019E  6EDA               	movwf	fsr2h,c
  8626  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8627  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8628  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8629  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8630  0001AA  0E00               	movlw	0
  8631  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8632  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8633  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8634  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8635  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8636  0001B6  0E0A               	movlw	10
  8637  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8638  0001BA  0E00               	movlw	0
  8639  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8640  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8641  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8642  0001C2  6EE1               	movwf	fsr1l,c
  8643  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8644  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8645  0001C8  6EE2               	movwf	fsr1h,c
  8646  0001CA  50E7               	movf	indf1,w,c
  8647  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8648  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8649  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8650  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8651  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8652  0001D8  0E00               	movlw	0
  8653  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8654  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8655  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8656  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8657  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8658  0001E4  0E09               	movlw	9
  8659  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8660  0001E8  0E00               	movlw	0
  8661  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8662  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8663  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8664  0001F0  6EE1               	movwf	fsr1l,c
  8665  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8666  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8667  0001F6  6EE2               	movwf	fsr1h,c
  8668  0001F8  50E7               	movf	indf1,w,c
  8669  0001FA  EC54  F04F         	call	_hexCharsToUint8
  8670  0001FE  6EDF               	movwf	indf2,c
  8671  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8672  000202                     l2366:
  8673  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8674  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8675  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8676  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8677  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8678  000210  50DE               	movf	postinc2,w,c
  8679  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8680  000214  50DE               	movf	postinc2,w,c
  8681  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8682  000218  A0D8               	btfss	status,0,c
  8683  00021A  D7B6               	goto	l2367
  8684                           
  8685                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8686  00021C  EE20 F015          	lfsr	2,21
  8687  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8688  000222  26D9               	addwf	fsr2l,f,c
  8689  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8690  000226  22DA               	addwfc	fsr2h,f,c
  8691  000228  501C               	movf	parseHexFileEntry@i,w,c
  8692  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8693  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8694  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8695  000232  0E00               	movlw	0
  8696  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8697  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8698  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8699  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8700  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8701  00023E  0E0A               	movlw	10
  8702  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8703  000242  0E00               	movlw	0
  8704  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8705  000246  5014               	movf	??_parseHexFileEntry,w,c
  8706  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8707  00024A  6EE1               	movwf	fsr1l,c
  8708  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8709  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8710  000250  6EE2               	movwf	fsr1h,c
  8711  000252  50E7               	movf	indf1,w,c
  8712  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8713  000256  501C               	movf	parseHexFileEntry@i,w,c
  8714  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8715  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8716  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8717  000260  0E00               	movlw	0
  8718  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8719  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8720  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8721  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8722  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8723  00026C  0E09               	movlw	9
  8724  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8725  000270  0E00               	movlw	0
  8726  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8727  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8728  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8729  000278  6EE1               	movwf	fsr1l,c
  8730  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8731  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8732  00027E  6EE2               	movwf	fsr1h,c
  8733  000280  50E7               	movf	indf1,w,c
  8734  000282  EC54  F04F         	call	_hexCharsToUint8
  8735  000286  6EDF               	movwf	indf2,c
  8736                           
  8737                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8738  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8739  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8740  000290  EE10 F016          	lfsr	1,22
  8741  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8742  000296  26E1               	addwf	fsr1l,f,c
  8743  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8744  00029A  22E2               	addwfc	fsr1h,f,c
  8745  00029C  CFDF FFE7          	movff	indf2,indf1
  8746                           
  8747                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8748  0002A0  EE20 F002          	lfsr	2,2
  8749  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8750  0002A6  26D9               	addwf	fsr2l,f,c
  8751  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8752  0002AA  22DA               	addwfc	fsr2h,f,c
  8753  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8754  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8755  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8756  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8757  0002BA  EE20 F016          	lfsr	2,22
  8758  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8759  0002C0  26D9               	addwf	fsr2l,f,c
  8760  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8761  0002C4  22DA               	addwfc	fsr2h,f,c
  8762  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8763  0002C8  26DF               	addwf	indf2,f,c
  8764                           
  8765                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8766  0002CA  EE20 F002          	lfsr	2,2
  8767  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8768  0002D0  26D9               	addwf	fsr2l,f,c
  8769  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8770  0002D4  22DA               	addwfc	fsr2h,f,c
  8771  0002D6  50DF               	movf	indf2,w,c
  8772  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8773  0002DA  EE20 F016          	lfsr	2,22
  8774  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8775  0002E0  26D9               	addwf	fsr2l,f,c
  8776  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8777  0002E4  22DA               	addwfc	fsr2h,f,c
  8778  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8779  0002E8  26DF               	addwf	indf2,f,c
  8780                           
  8781                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8782  0002EA  EE20 F004          	lfsr	2,4
  8783  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8784  0002F0  26D9               	addwf	fsr2l,f,c
  8785  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8786  0002F4  22DA               	addwfc	fsr2h,f,c
  8787  0002F6  50DF               	movf	indf2,w,c
  8788  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8789  0002FA  EE20 F016          	lfsr	2,22
  8790  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8791  000300  26D9               	addwf	fsr2l,f,c
  8792  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8793  000304  22DA               	addwfc	fsr2h,f,c
  8794  000306  5014               	movf	??_parseHexFileEntry,w,c
  8795  000308  26DF               	addwf	indf2,f,c
  8796                           
  8797                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8798  00030A  0E00               	movlw	0
  8799  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8800  00030E  D017               	goto	l2369
  8801  000310                     
  8802                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8803  000310  501C               	movf	parseHexFileEntry@i,w,c
  8804  000312  0D01               	mullw	1
  8805  000314  0E05               	movlw	5
  8806  000316  26F3               	addwf	prodl,f,c
  8807  000318  0E00               	movlw	0
  8808  00031A  22F4               	addwfc	prodh,f,c
  8809  00031C  50F3               	movf	prodl,w,c
  8810  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8811  000320  6ED9               	movwf	fsr2l,c
  8812  000322  50F4               	movf	prodh,w,c
  8813  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8814  000326  6EDA               	movwf	fsr2h,c
  8815  000328  50DF               	movf	indf2,w,c
  8816  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8817  00032C  EE20 F016          	lfsr	2,22
  8818  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8819  000332  26D9               	addwf	fsr2l,f,c
  8820  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8821  000336  22DA               	addwfc	fsr2h,f,c
  8822  000338  5014               	movf	??_parseHexFileEntry,w,c
  8823  00033A  26DF               	addwf	indf2,f,c
  8824  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8825  00033E                     l2369:
  8826  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8827  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8828  000346  501C               	movf	parseHexFileEntry@i,w,c
  8829  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8830  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8831  00034C  50DE               	movf	postinc2,w,c
  8832  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8833  000350  50DE               	movf	postinc2,w,c
  8834  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8835  000354  A0D8               	btfss	status,0,c
  8836  000356  D7DC               	goto	l2370
  8837                           
  8838                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8839  000358  EE20 F015          	lfsr	2,21
  8840  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8841  00035E  26D9               	addwf	fsr2l,f,c
  8842  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8843  000362  22DA               	addwfc	fsr2h,f,c
  8844  000364  50DF               	movf	indf2,w,c
  8845  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8846  000368  EE20 F016          	lfsr	2,22
  8847  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8848  00036E  26D9               	addwf	fsr2l,f,c
  8849  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8850  000372  22DA               	addwfc	fsr2h,f,c
  8851  000374  5014               	movf	??_parseHexFileEntry,w,c
  8852  000376  26DF               	addwf	indf2,f,c
  8853                           
  8854                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8855  000378  EE20 F016          	lfsr	2,22
  8856  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8857  00037E  26D9               	addwf	fsr2l,f,c
  8858  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8859  000382  22DA               	addwfc	fsr2h,f,c
  8860  000384  50DF               	movf	indf2,w,c
  8861  000386  B4D8               	btfsc	status,2,c
  8862  000388  D009               	goto	l2372
  8863                           
  8864                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8865  00038A  0EFE               	movlw	254
  8866  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8867  00038E  0EFF               	movlw	255
  8868  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8869  000392  0EFF               	movlw	255
  8870  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8871  000396  0EFF               	movlw	255
  8872  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8873  00039A  0012               	return	
  8874  00039C                     l2372:
  8875                           
  8876                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8877  00039C  EE20 F004          	lfsr	2,4
  8878  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8879  0003A2  26D9               	addwf	fsr2l,f,c
  8880  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8881  0003A6  22DA               	addwfc	fsr2h,f,c
  8882  0003A8  04DE               	decf	postinc2,w,c
  8883  0003AA  A4D8               	btfss	status,2,c
  8884  0003AC  D009               	goto	l2373
  8885                           
  8886                           ;hex.c: 110: {;hex.c: 112: return 0;
  8887  0003AE  0E00               	movlw	0
  8888  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8889  0003B2  0E00               	movlw	0
  8890  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8891  0003B6  0E00               	movlw	0
  8892  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8893  0003BA  0E00               	movlw	0
  8894  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8895                           
  8896                           ;hex.c: 113: }
  8897  0003BE  0012               	return	
  8898  0003C0                     l2373:
  8899                           
  8900                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8901  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8902  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8903  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8904  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8905  0003CA  0E00               	movlw	0
  8906  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8907  0003CE  0E0B               	movlw	11
  8908  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8909  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8910  0003D4  0E00               	movlw	0
  8911  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8912  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8913  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8914  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8915  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8916  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8917  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8918  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8919  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8920  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8921  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8922  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8923  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8924  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8925  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8926                           
  8927                           ;hex.c: 117: if (data[++offset] == ':')
  8928  0003F4  0E01               	movlw	1
  8929  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8930  0003F8  0E00               	movlw	0
  8931  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8932  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8933  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8934  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8935  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8936  000404  6ED9               	movwf	fsr2l,c
  8937  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8938  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8939  00040A  6EDA               	movwf	fsr2h,c
  8940  00040C  0E3A               	movlw	58
  8941  00040E  18DE               	xorwf	postinc2,w,c
  8942  000410  A4D8               	btfss	status,2,c
  8943  000412  D009               	goto	l2375
  8944                           
  8945                           ;hex.c: 118: {;hex.c: 119: return offset;
  8946  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8947  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8948  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8949  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8950                           
  8951                           ;hex.c: 120: }
  8952  000424  0012               	return	
  8953  000426                     l2375:
  8954                           
  8955                           ;hex.c: 121: else if (data[++offset] == ':')
  8956  000426  0E01               	movlw	1
  8957  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8958  00042A  0E00               	movlw	0
  8959  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8960  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8961  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8962  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8963  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8964  000436  6ED9               	movwf	fsr2l,c
  8965  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8966  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8967  00043C  6EDA               	movwf	fsr2h,c
  8968  00043E  0E3A               	movlw	58
  8969  000440  18DE               	xorwf	postinc2,w,c
  8970  000442  A4D8               	btfss	status,2,c
  8971  000444  D009               	goto	l2377
  8972                           
  8973                           ;hex.c: 122: {;hex.c: 123: return offset;
  8974  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8975  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8976  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8977  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8978                           
  8979                           ;hex.c: 124: }
  8980  000456  0012               	return	
  8981  000458                     l2377:
  8982                           
  8983                           ;hex.c: 125: else if (data[++offset] == ':')
  8984  000458  0E01               	movlw	1
  8985  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8986  00045C  0E00               	movlw	0
  8987  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8988  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8989  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8990  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8991  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8992  000468  6ED9               	movwf	fsr2l,c
  8993  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8994  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8995  00046E  6EDA               	movwf	fsr2h,c
  8996  000470  0E3A               	movlw	58
  8997  000472  18DE               	xorwf	postinc2,w,c
  8998  000474  A4D8               	btfss	status,2,c
  8999  000476  D009               	goto	l2379
  9000                           
  9001                           ;hex.c: 126: {;hex.c: 127: return offset;
  9002  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  9003  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  9004  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  9005  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  9006                           
  9007                           ;hex.c: 128: }
  9008  000488  0012               	return	
  9009  00048A                     l2379:
  9010                           
  9011                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  9012  00048A  0EFD               	movlw	253
  9013  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  9014  00048E  0EFF               	movlw	255
  9015  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  9016  000492  0EFF               	movlw	255
  9017  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  9018  000496  0EFF               	movlw	255
  9019  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  9020  00049A  0012               	return	
  9021  00049C                     __end_of_parseHexFileEntry:
  9022                           	opt stack 0
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           prodh	equ	0xFF4
  9028                           prodl	equ	0xFF3
  9029                           intcon	equ	0xFF2
  9030                           intcon2	equ	0xFF1
  9031                           intcon3	equ	0xFF0
  9032                           postinc0	equ	0xFEE
  9033                           wreg	equ	0xFE8
  9034                           indf1	equ	0xFE7
  9035                           postdec1	equ	0xFE5
  9036                           plusw1	equ	0xFE3
  9037                           fsr1h	equ	0xFE2
  9038                           fsr1l	equ	0xFE1
  9039                           indf2	equ	0xFDF
  9040                           postinc2	equ	0xFDE
  9041                           postdec2	equ	0xFDD
  9042                           plusw2	equ	0xFDB
  9043                           fsr2h	equ	0xFDA
  9044                           fsr2l	equ	0xFD9
  9045                           status	equ	0xFD8
  9046                           
  9047 ;; *************** function _hexCharsToUint8 *****************
  9048 ;; Defined at:
  9049 ;;		line 42 in file "hex.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  c1              1    wreg     unsigned char 
  9052 ;;  c2              1    2[COMRAM] unsigned char 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  c1              1    4[COMRAM] unsigned char 
  9055 ;;  retVal          1    5[COMRAM] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      unsigned char 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;Total ram usage:        4 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    1
  9072 ;; This function calls:
  9073 ;;		_hexCharToUint8
  9074 ;; This function is called by:
  9075 ;;		_parseHexFileEntry
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text31
  9080  009EA8                     __ptext31:
  9081                           	opt stack 0
  9082  009EA8                     _hexCharsToUint8:
  9083                           	opt stack 26
  9084                           
  9085                           ;incstack = 0
  9086                           ;hexCharsToUint8@c1 stored from wreg
  9087  009EA8  6E05               	movwf	hexCharsToUint8@c1,c
  9088                           
  9089                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  9090  009EAA  5005               	movf	hexCharsToUint8@c1,w,c
  9091  009EAC  EC97  F04D         	call	_hexCharToUint8
  9092  009EB0  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  9093  009EB2  3804               	swapf	??_hexCharsToUint8,w,c
  9094  009EB4  0BF0               	andlw	240
  9095  009EB6  6E06               	movwf	hexCharsToUint8@retVal,c
  9096                           
  9097                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  9098  009EB8  5003               	movf	hexCharsToUint8@c2,w,c
  9099  009EBA  EC97  F04D         	call	_hexCharToUint8
  9100  009EBE  1206               	iorwf	hexCharsToUint8@retVal,f,c
  9101                           
  9102                           ;hex.c: 46: return retVal;
  9103  009EC0  5006               	movf	hexCharsToUint8@retVal,w,c
  9104  009EC2  0012               	return	
  9105  009EC4                     __end_of_hexCharsToUint8:
  9106                           	opt stack 0
  9107                           tblptru	equ	0xFF8
  9108                           tblptrh	equ	0xFF7
  9109                           tblptrl	equ	0xFF6
  9110                           tablat	equ	0xFF5
  9111                           prodh	equ	0xFF4
  9112                           prodl	equ	0xFF3
  9113                           intcon	equ	0xFF2
  9114                           intcon2	equ	0xFF1
  9115                           intcon3	equ	0xFF0
  9116                           postinc0	equ	0xFEE
  9117                           wreg	equ	0xFE8
  9118                           indf1	equ	0xFE7
  9119                           postdec1	equ	0xFE5
  9120                           plusw1	equ	0xFE3
  9121                           fsr1h	equ	0xFE2
  9122                           fsr1l	equ	0xFE1
  9123                           indf2	equ	0xFDF
  9124                           postinc2	equ	0xFDE
  9125                           postdec2	equ	0xFDD
  9126                           plusw2	equ	0xFDB
  9127                           fsr2h	equ	0xFDA
  9128                           fsr2l	equ	0xFD9
  9129                           status	equ	0xFD8
  9130                           
  9131 ;; *************** function _hexCharsToUint16 *****************
  9132 ;; Defined at:
  9133 ;;		line 49 in file "hex.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  c1              1    wreg     unsigned char 
  9136 ;;  c2              1    2[COMRAM] unsigned char 
  9137 ;;  c3              1    3[COMRAM] unsigned char 
  9138 ;;  c4              1    4[COMRAM] unsigned char 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  c1              1    8[COMRAM] unsigned char 
  9141 ;;  retVal          2    9[COMRAM] unsigned int 
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  2    2[COMRAM] unsigned int 
  9144 ;; Registers used:
  9145 ;;		wreg, status,2, status,0, cstack
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9151 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;Total ram usage:        9 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; Hardware stack levels required when called:    1
  9158 ;; This function calls:
  9159 ;;		_hexCharToUint8
  9160 ;; This function is called by:
  9161 ;;		_parseHexFileEntry
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text32
  9166  00886A                     __ptext32:
  9167                           	opt stack 0
  9168  00886A                     _hexCharsToUint16:
  9169                           	opt stack 26
  9170                           
  9171                           ;incstack = 0
  9172                           ;hexCharsToUint16@c1 stored from wreg
  9173  00886A  6E09               	movwf	hexCharsToUint16@c1,c
  9174                           
  9175                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  9176  00886C  5009               	movf	hexCharsToUint16@c1,w,c
  9177  00886E  EC97  F04D         	call	_hexCharToUint8
  9178  008872  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9179  008874  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9180  008876  0E0C               	movlw	12
  9181  008878                     u11745:
  9182  008878  90D8               	bcf	status,0,c
  9183  00887A  3606               	rlcf	??_hexCharsToUint16,f,c
  9184  00887C  3607               	rlcf	??_hexCharsToUint16+1,f,c
  9185  00887E  2EE8               	decfsz	wreg,f,c
  9186  008880  D7FB               	goto	u11745
  9187  008882  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  9188  008886  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  9189                           
  9190                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  9191  00888A  5003               	movf	hexCharsToUint16@c2,w,c
  9192  00888C  EC97  F04D         	call	_hexCharToUint8
  9193  008890  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9194  008892  5006               	movf	??_hexCharsToUint16,w,c
  9195  008894  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  9196  008896  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9197  008898  5007               	movf	??_hexCharsToUint16+1,w,c
  9198  00889A  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9199  00889C  5008               	movf	??_hexCharsToUint16+2,w,c
  9200  00889E  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  9201                           
  9202                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  9203  0088A0  5004               	movf	hexCharsToUint16@c3,w,c
  9204  0088A2  EC97  F04D         	call	_hexCharToUint8
  9205  0088A6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9206  0088A8  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9207  0088AA  3A06               	swapf	??_hexCharsToUint16,f,c
  9208  0088AC  3A07               	swapf	??_hexCharsToUint16+1,f,c
  9209  0088AE  0EF0               	movlw	240
  9210  0088B0  1607               	andwf	??_hexCharsToUint16+1,f,c
  9211  0088B2  5006               	movf	??_hexCharsToUint16,w,c
  9212  0088B4  0B0F               	andlw	15
  9213  0088B6  1207               	iorwf	??_hexCharsToUint16+1,f,c
  9214  0088B8  0EF0               	movlw	240
  9215  0088BA  1606               	andwf	??_hexCharsToUint16,f,c
  9216  0088BC  5006               	movf	??_hexCharsToUint16,w,c
  9217  0088BE  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9218  0088C0  5007               	movf	??_hexCharsToUint16+1,w,c
  9219  0088C2  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  9220                           
  9221                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  9222  0088C4  5005               	movf	hexCharsToUint16@c4,w,c
  9223  0088C6  EC97  F04D         	call	_hexCharToUint8
  9224  0088CA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9225  0088CC  5006               	movf	??_hexCharsToUint16,w,c
  9226  0088CE  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9227                           
  9228                           ;hex.c: 55: return retVal;
  9229  0088D0  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  9230  0088D4  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  9231  0088D8  0012               	return	
  9232  0088DA                     __end_of_hexCharsToUint16:
  9233                           	opt stack 0
  9234                           tblptru	equ	0xFF8
  9235                           tblptrh	equ	0xFF7
  9236                           tblptrl	equ	0xFF6
  9237                           tablat	equ	0xFF5
  9238                           prodh	equ	0xFF4
  9239                           prodl	equ	0xFF3
  9240                           intcon	equ	0xFF2
  9241                           intcon2	equ	0xFF1
  9242                           intcon3	equ	0xFF0
  9243                           postinc0	equ	0xFEE
  9244                           wreg	equ	0xFE8
  9245                           indf1	equ	0xFE7
  9246                           postdec1	equ	0xFE5
  9247                           plusw1	equ	0xFE3
  9248                           fsr1h	equ	0xFE2
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           postinc2	equ	0xFDE
  9252                           postdec2	equ	0xFDD
  9253                           plusw2	equ	0xFDB
  9254                           fsr2h	equ	0xFDA
  9255                           fsr2l	equ	0xFD9
  9256                           status	equ	0xFD8
  9257                           
  9258 ;; *************** function _hexCharToUint8 *****************
  9259 ;; Defined at:
  9260 ;;		line 11 in file "hex.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  c               1    wreg     unsigned char 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  c               1    0[COMRAM] unsigned char 
  9265 ;;  ascii           1    1[COMRAM] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      unsigned char 
  9268 ;; Registers used:
  9269 ;;		wreg, status,2, status,0
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;Total ram usage:        2 bytes
  9280 ;; Hardware stack levels used:    1
  9281 ;; This function calls:
  9282 ;;		Nothing
  9283 ;; This function is called by:
  9284 ;;		_hexCharsToUint8
  9285 ;;		_hexCharsToUint16
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text33
  9290  009B2E                     __ptext33:
  9291                           	opt stack 0
  9292  009B2E                     _hexCharToUint8:
  9293                           	opt stack 26
  9294                           
  9295                           ;incstack = 0
  9296                           ;hexCharToUint8@c stored from wreg
  9297  009B2E  6E01               	movwf	hexCharToUint8@c,c
  9298                           
  9299                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  9300  009B30  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  9301                           
  9302                           ;hex.c: 16: if (ascii >= 97)
  9303  009B34  0E60               	movlw	96
  9304  009B36  6402               	cpfsgt	hexCharToUint8@ascii,c
  9305  009B38  D002               	goto	l2348
  9306                           
  9307                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  9308  009B3A  0E57               	movlw	87
  9309  009B3C  D006               	goto	L3
  9310  009B3E                     l2348:
  9311                           
  9312                           ;hex.c: 21: else if (ascii >= 65)
  9313  009B3E  0E40               	movlw	64
  9314  009B40  6402               	cpfsgt	hexCharToUint8@ascii,c
  9315  009B42  D002               	goto	l2350
  9316                           
  9317                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  9318  009B44  0E37               	movlw	55
  9319  009B46  D001               	goto	L3
  9320  009B48                     l2350:
  9321                           
  9322                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  9323  009B48  0E30               	movlw	48
  9324  009B4A                     L3:
  9325  009B4A  5E02               	subwf	hexCharToUint8@ascii,f,c
  9326                           
  9327                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  9328  009B4C  0E0F               	movlw	15
  9329  009B4E  6402               	cpfsgt	hexCharToUint8@ascii,c
  9330  009B50  D002               	goto	l2352
  9331                           
  9332                           ;hex.c: 32: {;hex.c: 33: return 0;
  9333  009B52  0E00               	movlw	0
  9334                           
  9335                           ;hex.c: 34: }
  9336  009B54  0012               	return	
  9337  009B56                     l2352:
  9338                           
  9339                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  9340  009B56  5002               	movf	hexCharToUint8@ascii,w,c
  9341  009B58  0012               	return	
  9342  009B5A                     __end_of_hexCharToUint8:
  9343                           	opt stack 0
  9344                           tblptru	equ	0xFF8
  9345                           tblptrh	equ	0xFF7
  9346                           tblptrl	equ	0xFF6
  9347                           tablat	equ	0xFF5
  9348                           prodh	equ	0xFF4
  9349                           prodl	equ	0xFF3
  9350                           intcon	equ	0xFF2
  9351                           intcon2	equ	0xFF1
  9352                           intcon3	equ	0xFF0
  9353                           postinc0	equ	0xFEE
  9354                           wreg	equ	0xFE8
  9355                           indf1	equ	0xFE7
  9356                           postdec1	equ	0xFE5
  9357                           plusw1	equ	0xFE3
  9358                           fsr1h	equ	0xFE2
  9359                           fsr1l	equ	0xFE1
  9360                           indf2	equ	0xFDF
  9361                           postinc2	equ	0xFDE
  9362                           postdec2	equ	0xFDD
  9363                           plusw2	equ	0xFDB
  9364                           fsr2h	equ	0xFDA
  9365                           fsr2l	equ	0xFD9
  9366                           status	equ	0xFD8
  9367                           
  9368 ;; *************** function _internalFlash_writePage *****************
  9369 ;; Defined at:
  9370 ;;		line 65 in file "internal_flash.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  page            2    8[COMRAM] unsigned int 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  address         4   18[COMRAM] unsigned long 
  9375 ;;  cntr            2   14[COMRAM] unsigned int 
  9376 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  9377 ;;  block_cntr      1   16[COMRAM] unsigned char 
  9378 ;;  i               1    0        unsigned char 
  9379 ;;  gie             1    0        unsigned char 
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;Total ram usage:       14 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    1
  9396 ;; This function calls:
  9397 ;;		__internalFlash_unlockAndActivate
  9398 ;;		_internalFlash_addressFromPage
  9399 ;; This function is called by:
  9400 ;;		__bootloader_program
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text34
  9405  007574                     __ptext34:
  9406                           	opt stack 0
  9407  007574                     _internalFlash_writePage:
  9408                           	opt stack 27
  9409                           
  9410                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  9411                           
  9412                           ;incstack = 0
  9413  007574  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  9414  007578  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  9415  00757C  EC3C  F04D         	call	_internalFlash_addressFromPage	;wreg free
  9416  007580  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  9417  007584  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  9418  007588  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  9419  00758C  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  9420                           
  9421                           ;internal_flash.c: 76: TBLPTR = address;
  9422  007590  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  9423  007594  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  9424  007598  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  9425                           
  9426                           ;internal_flash.c: 79: if((address<0xC000) || (address+1023>=0x1FFFF))
  9427  00759C  5016               	movf	internalFlash_writePage@address+3,w,c
  9428  00759E  1015               	iorwf	internalFlash_writePage@address+2,w,c
  9429  0075A0  E104               	bnz	u13150
  9430  0075A2  0EC0               	movlw	192
  9431  0075A4  5C14               	subwf	internalFlash_writePage@address+1,w,c
  9432  0075A6  A0D8               	btfss	status,0,c
  9433  0075A8  0012               	return	
  9434  0075AA                     u13150:
  9435  0075AA  0EFF               	movlw	255
  9436  0075AC  2413               	addwf	internalFlash_writePage@address,w,c
  9437  0075AE  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  9438  0075B0  0E03               	movlw	3
  9439  0075B2  2014               	addwfc	internalFlash_writePage@address+1,w,c
  9440  0075B4  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  9441  0075B6  0E00               	movlw	0
  9442  0075B8  2015               	addwfc	internalFlash_writePage@address+2,w,c
  9443  0075BA  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  9444  0075BC  0E00               	movlw	0
  9445  0075BE  2016               	addwfc	internalFlash_writePage@address+3,w,c
  9446  0075C0  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  9447  0075C2  500E               	movf	??_internalFlash_writePage+3,w,c
  9448  0075C4  E132               	bnz	l2605
  9449  0075C6  280B               	incf	??_internalFlash_writePage,w,c
  9450  0075C8  0EFF               	movlw	255
  9451  0075CA  580C               	subwfb	??_internalFlash_writePage+1,w,c
  9452  0075CC  0E01               	movlw	1
  9453  0075CE  580D               	subwfb	??_internalFlash_writePage+2,w,c
  9454  0075D0  B0D8               	btfsc	status,0,c
  9455  0075D2  0012               	return	
  9456                           
  9457                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  9458                           
  9459                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  9460  0075D4  0E00               	movlw	0
  9461  0075D6  6E10               	movwf	internalFlash_writePage@cntr+1,c
  9462  0075D8  0E00               	movlw	0
  9463  0075DA  6E0F               	movwf	internalFlash_writePage@cntr,c
  9464                           
  9465                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  9466  0075DC  0E00               	movlw	0
  9467  0075DE  6E11               	movwf	internalFlash_writePage@block_cntr,c
  9468  0075E0                     l15395:
  9469  0075E0  0E0F               	movlw	15
  9470  0075E2  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  9471  0075E4  D001               	goto	l2606
  9472  0075E6  0012               	return	
  9473  0075E8                     l2606:
  9474                           
  9475                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9476  0075E8  0E00               	movlw	0
  9477  0075EA  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  9478  0075EC                     l15401:
  9479  0075EC  0E3F               	movlw	63
  9480  0075EE  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9481  0075F0  D001               	goto	l2608
  9482  0075F2  D00D               	goto	u13190
  9483  0075F4                     l2608:
  9484                           
  9485                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  9486  0075F4  0E00               	movlw	low _pageBuffer
  9487  0075F6  240F               	addwf	internalFlash_writePage@cntr,w,c
  9488  0075F8  6ED9               	movwf	fsr2l,c
  9489  0075FA  0E08               	movlw	high _pageBuffer
  9490  0075FC  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  9491  0075FE  6EDA               	movwf	fsr2h,c
  9492  007600  50DF               	movf	indf2,w,c
  9493  007602  6EF5               	movwf	tablat,c	;volatile
  9494  007604  000D               	tblwt		*+	;# 
  9495                           
  9496                           ;internal_flash.c: 97: ++cntr;
  9497  007606  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  9498  007608  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  9499  00760A  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  9500  00760C  D7EF               	goto	l15401
  9501  00760E                     u13190:
  9502  00760E  000A               	tblrd		*-	;# 
  9503                           
  9504                           ;internal_flash.c: 104: EECON1 = 0x84;
  9505  007610  0E84               	movlw	132
  9506  007612  6EA6               	movwf	4006,c	;volsfr
  9507                           
  9508                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9509  007614  0EB5               	movlw	181
  9510  007616  EC04  F04E         	call	__internalFlash_unlockAndActivate
  9511                           
  9512                           ;internal_flash.c: 106: TBLPTR++;
  9513  00761A  0E01               	movlw	1
  9514  00761C  26F6               	addwf	tblptrl,f,c	;volatile
  9515  00761E  0E00               	movlw	0
  9516  007620  22F7               	addwfc	tblptrh,f,c	;volatile
  9517  007622  0E00               	movlw	0
  9518  007624  22F8               	addwfc	tblptru,f,c	;volatile
  9519  007626  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  9520  007628  D7DB               	goto	l15395
  9521  00762A                     l2605:
  9522  00762A  0012               	return		;funcret
  9523  00762C                     __end_of_internalFlash_writePage:
  9524                           	opt stack 0
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodh	equ	0xFF4
  9530                           prodl	equ	0xFF3
  9531                           intcon	equ	0xFF2
  9532                           intcon2	equ	0xFF1
  9533                           intcon3	equ	0xFF0
  9534                           postinc0	equ	0xFEE
  9535                           wreg	equ	0xFE8
  9536                           indf1	equ	0xFE7
  9537                           postdec1	equ	0xFE5
  9538                           plusw1	equ	0xFE3
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           indf2	equ	0xFDF
  9542                           postinc2	equ	0xFDE
  9543                           postdec2	equ	0xFDD
  9544                           plusw2	equ	0xFDB
  9545                           fsr2h	equ	0xFDA
  9546                           fsr2l	equ	0xFD9
  9547                           status	equ	0xFD8
  9548                           
  9549 ;; *************** function _internalFlash_readPage *****************
  9550 ;; Defined at:
  9551 ;;		line 37 in file "internal_flash.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  page            2   21[COMRAM] unsigned int 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  address         4   23[COMRAM] unsigned long 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;Total ram usage:        6 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    2
  9572 ;; This function calls:
  9573 ;;		_internalFlash_addressFromPage
  9574 ;;		_internalFlash_read
  9575 ;; This function is called by:
  9576 ;;		__bootloader_program
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text35
  9581  009654                     __ptext35:
  9582                           	opt stack 0
  9583  009654                     _internalFlash_readPage:
  9584                           	opt stack 26
  9585                           
  9586                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9587                           
  9588                           ;incstack = 0
  9589  009654  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9590  009658  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9591  00965C  EC3C  F04D         	call	_internalFlash_addressFromPage	;wreg free
  9592  009660  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9593  009664  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9594  009668  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9595  00966C  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9596                           
  9597                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9598  009670  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9599  009674  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9600  009678  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9601  00967C  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9602  009680  0E04               	movlw	4
  9603  009682  6E13               	movwf	internalFlash_read@data_length+1,c
  9604  009684  0E00               	movlw	0
  9605  009686  6E12               	movwf	internalFlash_read@data_length,c
  9606  009688  0E00               	movlw	low _pageBuffer
  9607  00968A  6E14               	movwf	internalFlash_read@buffer,c
  9608  00968C  0E08               	movlw	high _pageBuffer
  9609  00968E  6E15               	movwf	internalFlash_read@buffer+1,c
  9610  009690  EC3E  F04C         	call	_internalFlash_read	;wreg free
  9611  009694  0012               	return		;funcret
  9612  009696                     __end_of_internalFlash_readPage:
  9613                           	opt stack 0
  9614                           tblptru	equ	0xFF8
  9615                           tblptrh	equ	0xFF7
  9616                           tblptrl	equ	0xFF6
  9617                           tablat	equ	0xFF5
  9618                           prodh	equ	0xFF4
  9619                           prodl	equ	0xFF3
  9620                           intcon	equ	0xFF2
  9621                           intcon2	equ	0xFF1
  9622                           intcon3	equ	0xFF0
  9623                           postinc0	equ	0xFEE
  9624                           wreg	equ	0xFE8
  9625                           indf1	equ	0xFE7
  9626                           postdec1	equ	0xFE5
  9627                           plusw1	equ	0xFE3
  9628                           fsr1h	equ	0xFE2
  9629                           fsr1l	equ	0xFE1
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           plusw2	equ	0xFDB
  9634                           fsr2h	equ	0xFDA
  9635                           fsr2l	equ	0xFD9
  9636                           status	equ	0xFD8
  9637                           
  9638 ;; *************** function _internalFlash_read *****************
  9639 ;; Defined at:
  9640 ;;		line 150 in file "internal_flash.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  address         4   13[COMRAM] unsigned long 
  9643 ;;  data_length     2   17[COMRAM] unsigned int 
  9644 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9645 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      unsigned char 
  9650 ;; Registers used:
  9651 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;Total ram usage:        8 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    1
  9664 ;; This function calls:
  9665 ;;		_memcpy
  9666 ;; This function is called by:
  9667 ;;		_internalFlash_readPage
  9668 ;;		__bootloader_verify_program_memory
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text36
  9673  00987C                     __ptext36:
  9674                           	opt stack 0
  9675  00987C                     _internalFlash_read:
  9676                           	opt stack 26
  9677                           
  9678                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  9679                           
  9680                           ;incstack = 0
  9681  00987C  5011               	movf	internalFlash_read@address+3,w,c
  9682  00987E  E118               	bnz	l2621
  9683  009880  280E               	incf	internalFlash_read@address,w,c
  9684  009882  0EFF               	movlw	255
  9685  009884  580F               	subwfb	internalFlash_read@address+1,w,c
  9686  009886  0E01               	movlw	1
  9687  009888  5810               	subwfb	internalFlash_read@address+2,w,c
  9688  00988A  B0D8               	btfsc	status,0,c
  9689  00988C  0012               	return	
  9690                           
  9691                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  9692                           
  9693                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9694  00988E  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9695  009892  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9696  009896  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9697  00989A  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9698  00989E  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9699  0098A2  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9700  0098A6  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9701  0098AA  ECE1  F045         	call	_memcpy	;wreg free
  9702  0098AE  0012               	return	
  9703  0098B0                     l2621:
  9704  0098B0  0012               	return		;funcret
  9705  0098B2                     __end_of_internalFlash_read:
  9706                           	opt stack 0
  9707                           tblptru	equ	0xFF8
  9708                           tblptrh	equ	0xFF7
  9709                           tblptrl	equ	0xFF6
  9710                           tablat	equ	0xFF5
  9711                           prodh	equ	0xFF4
  9712                           prodl	equ	0xFF3
  9713                           intcon	equ	0xFF2
  9714                           intcon2	equ	0xFF1
  9715                           intcon3	equ	0xFF0
  9716                           postinc0	equ	0xFEE
  9717                           wreg	equ	0xFE8
  9718                           indf1	equ	0xFE7
  9719                           postdec1	equ	0xFE5
  9720                           plusw1	equ	0xFE3
  9721                           fsr1h	equ	0xFE2
  9722                           fsr1l	equ	0xFE1
  9723                           indf2	equ	0xFDF
  9724                           postinc2	equ	0xFDE
  9725                           postdec2	equ	0xFDD
  9726                           plusw2	equ	0xFDB
  9727                           fsr2h	equ	0xFDA
  9728                           fsr2l	equ	0xFD9
  9729                           status	equ	0xFD8
  9730                           
  9731 ;; *************** function _internalFlash_pageFromAddress *****************
  9732 ;; Defined at:
  9733 ;;		line 171 in file "internal_flash.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  address         4    0[COMRAM] unsigned long 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  2    0[COMRAM] unsigned int 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2, status,0
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9750 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9751 ;;Total ram usage:        5 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		__bootloader_program
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text37
  9761  009EC4                     __ptext37:
  9762                           	opt stack 0
  9763  009EC4                     _internalFlash_pageFromAddress:
  9764                           	opt stack 28
  9765                           
  9766                           ;internal_flash.c: 173: address >>= 10;
  9767                           
  9768                           ;incstack = 0
  9769  009EC4  0E0A               	movlw	10
  9770  009EC6  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9771  009EC8                     u13125:
  9772  009EC8  90D8               	bcf	status,0,c
  9773  009ECA  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9774  009ECC  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9775  009ECE  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9776  009ED0  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9777  009ED2  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9778  009ED4  D7F9               	goto	u13125
  9779                           
  9780                           ;internal_flash.c: 174: return (uint16_t) address;
  9781  009ED6  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9782  009EDA  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9783  009EDE  0012               	return	
  9784  009EE0                     __end_of_internalFlash_pageFromAddress:
  9785                           	opt stack 0
  9786                           tblptru	equ	0xFF8
  9787                           tblptrh	equ	0xFF7
  9788                           tblptrl	equ	0xFF6
  9789                           tablat	equ	0xFF5
  9790                           prodh	equ	0xFF4
  9791                           prodl	equ	0xFF3
  9792                           intcon	equ	0xFF2
  9793                           intcon2	equ	0xFF1
  9794                           intcon3	equ	0xFF0
  9795                           postinc0	equ	0xFEE
  9796                           wreg	equ	0xFE8
  9797                           indf1	equ	0xFE7
  9798                           postdec1	equ	0xFE5
  9799                           plusw1	equ	0xFE3
  9800                           fsr1h	equ	0xFE2
  9801                           fsr1l	equ	0xFE1
  9802                           indf2	equ	0xFDF
  9803                           postinc2	equ	0xFDE
  9804                           postdec2	equ	0xFDD
  9805                           plusw2	equ	0xFDB
  9806                           fsr2h	equ	0xFDA
  9807                           fsr2l	equ	0xFD9
  9808                           status	equ	0xFD8
  9809                           
  9810 ;; *************** function _internalFlash_getBuffer *****************
  9811 ;; Defined at:
  9812 ;;		line 32 in file "internal_flash.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  2    0[COMRAM] PTR unsigned char 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        2 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		__bootloader_program
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           	psect	text38
  9840  00A080                     __ptext38:
  9841                           	opt stack 0
  9842  00A080                     _internalFlash_getBuffer:
  9843                           	opt stack 28
  9844                           
  9845                           ;internal_flash.c: 34: return pageBuffer;
  9846                           
  9847                           ;incstack = 0
  9848  00A080  0E00               	movlw	low _pageBuffer
  9849  00A082  6E01               	movwf	?_internalFlash_getBuffer,c
  9850  00A084  0E08               	movlw	high _pageBuffer
  9851  00A086  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9852  00A088  0012               	return	
  9853  00A08A                     __end_of_internalFlash_getBuffer:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           intcon	equ	0xFF2
  9862                           intcon2	equ	0xFF1
  9863                           intcon3	equ	0xFF0
  9864                           postinc0	equ	0xFEE
  9865                           wreg	equ	0xFE8
  9866                           indf1	equ	0xFE7
  9867                           postdec1	equ	0xFE5
  9868                           plusw1	equ	0xFE3
  9869                           fsr1h	equ	0xFE2
  9870                           fsr1l	equ	0xFE1
  9871                           indf2	equ	0xFDF
  9872                           postinc2	equ	0xFDE
  9873                           postdec2	equ	0xFDD
  9874                           plusw2	equ	0xFDB
  9875                           fsr2h	equ	0xFDA
  9876                           fsr2l	equ	0xFD9
  9877                           status	equ	0xFD8
  9878                           
  9879 ;; *************** function _internalFlash_erasePage *****************
  9880 ;; Defined at:
  9881 ;;		line 44 in file "internal_flash.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  page            2    8[COMRAM] unsigned int 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  address         4   14[COMRAM] unsigned long 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  1    wreg      void 
  9888 ;; Registers used:
  9889 ;;		wreg, status,2, status,0, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9897 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9898 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;Total ram usage:       10 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:    1
  9902 ;; This function calls:
  9903 ;;		__internalFlash_unlockAndActivate
  9904 ;;		_internalFlash_addressFromPage
  9905 ;; This function is called by:
  9906 ;;		__bootloader_program
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text39
  9911  0089B8                     __ptext39:
  9912                           	opt stack 0
  9913  0089B8                     _internalFlash_erasePage:
  9914                           	opt stack 27
  9915                           
  9916                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  9917                           
  9918                           ;incstack = 0
  9919  0089B8  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  9920  0089BC  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  9921  0089C0  EC3C  F04D         	call	_internalFlash_addressFromPage	;wreg free
  9922  0089C4  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  9923  0089C8  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  9924  0089CC  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  9925  0089D0  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  9926                           
  9927                           ;internal_flash.c: 50: TBLPTR = address;
  9928  0089D4  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9929  0089D8  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9930  0089DC  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9931                           
  9932                           ;internal_flash.c: 53: if((address<0xC000) || (address+1023>=0x1FFFF))
  9933  0089E0  5012               	movf	internalFlash_erasePage@address+3,w,c
  9934  0089E2  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  9935  0089E4  E104               	bnz	u13130
  9936  0089E6  0EC0               	movlw	192
  9937  0089E8  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  9938  0089EA  A0D8               	btfss	status,0,c
  9939  0089EC  0012               	return	
  9940  0089EE                     u13130:
  9941  0089EE  0EFF               	movlw	255
  9942  0089F0  240F               	addwf	internalFlash_erasePage@address,w,c
  9943  0089F2  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  9944  0089F4  0E03               	movlw	3
  9945  0089F6  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  9946  0089F8  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  9947  0089FA  0E00               	movlw	0
  9948  0089FC  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  9949  0089FE  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  9950  008A00  0E00               	movlw	0
  9951  008A02  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  9952  008A04  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  9953  008A06  500E               	movf	??_internalFlash_erasePage+3,w,c
  9954  008A08  E10C               	bnz	l2599
  9955  008A0A  280B               	incf	??_internalFlash_erasePage,w,c
  9956  008A0C  0EFF               	movlw	255
  9957  008A0E  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  9958  008A10  0E01               	movlw	1
  9959  008A12  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  9960  008A14  B0D8               	btfsc	status,0,c
  9961  008A16  0012               	return	
  9962                           
  9963                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  9964                           
  9965                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  9966  008A18  84A6               	bsf	4006,2,c	;volsfr
  9967                           
  9968                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  9969  008A1A  88A6               	bsf	4006,4,c	;volsfr
  9970                           
  9971                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9972  008A1C  0EB5               	movlw	181
  9973  008A1E  EC04  F04E         	call	__internalFlash_unlockAndActivate
  9974  008A22                     l2599:
  9975  008A22  0012               	return		;funcret
  9976  008A24                     __end_of_internalFlash_erasePage:
  9977                           	opt stack 0
  9978                           tblptru	equ	0xFF8
  9979                           tblptrh	equ	0xFF7
  9980                           tblptrl	equ	0xFF6
  9981                           tablat	equ	0xFF5
  9982                           prodh	equ	0xFF4
  9983                           prodl	equ	0xFF3
  9984                           intcon	equ	0xFF2
  9985                           intcon2	equ	0xFF1
  9986                           intcon3	equ	0xFF0
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           indf1	equ	0xFE7
  9990                           postdec1	equ	0xFE5
  9991                           plusw1	equ	0xFE3
  9992                           fsr1h	equ	0xFE2
  9993                           fsr1l	equ	0xFE1
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           plusw2	equ	0xFDB
  9998                           fsr2h	equ	0xFDA
  9999                           fsr2l	equ	0xFD9
 10000                           status	equ	0xFD8
 10001                           
 10002 ;; *************** function __internalFlash_unlockAndActivate *****************
 10003 ;; Defined at:
 10004 ;;		line 112 in file "internal_flash.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;  UnlockKey       1    wreg     unsigned char 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 10009 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2, status,0
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;Total ram usage:        2 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_internalFlash_erasePage
 10029 ;;		_internalFlash_writePage
 10030 ;;		_EraseBlock
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text40
 10035  009C08                     __ptext40:
 10036                           	opt stack 0
 10037  009C08                     __internalFlash_unlockAndActivate:
 10038                           	opt stack 27
 10039                           
 10040                           ;incstack = 0
 10041                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 10042  009C08  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 10043                           
 10044                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
 10045  009C0A  0EB5               	movlw	181
 10046  009C0C  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 10047  009C0E  B4D8               	btfsc	status,2,c
 10048  009C10  D002               	goto	l2612
 10049                           
 10050                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
 10051  009C12  94A6               	bcf	4006,2,c	;volsfr
 10052                           
 10053                           ;internal_flash.c: 124: return;
 10054  009C14  0012               	return	
 10055  009C16                     l2612:
 10056                           
 10057                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
 10058  009C16  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 10059                           
 10060                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
 10061  009C1A  9EF2               	bcf	intcon,7,c	;volatile
 10062                           
 10063                           ;internal_flash.c: 129: EECON2 = 0x55;
 10064  009C1C  0E55               	movlw	85
 10065  009C1E  6EA7               	movwf	4007,c	;volsfr
 10066                           
 10067                           ;internal_flash.c: 130: EECON2 = 0xAA;
 10068  009C20  0EAA               	movlw	170
 10069  009C22  6EA7               	movwf	4007,c	;volsfr
 10070                           
 10071                           ;internal_flash.c: 131: EECON1bits.WR = 1;
 10072  009C24  82A6               	bsf	4006,1,c	;volsfr
 10073                           
 10074                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
 10075  009C26  94A6               	bcf	4006,2,c	;volsfr
 10076                           
 10077                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
 10078  009C28  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 10079  009C2A  0012               	return	
 10080                           
 10081                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
 10082  009C2C  8EF2               	bsf	intcon,7,c	;volatile
 10083  009C2E  0012               	return	
 10084  009C30                     __end_of__internalFlash_unlockAndActivate:
 10085                           	opt stack 0
 10086                           tblptru	equ	0xFF8
 10087                           tblptrh	equ	0xFF7
 10088                           tblptrl	equ	0xFF6
 10089                           tablat	equ	0xFF5
 10090                           prodh	equ	0xFF4
 10091                           prodl	equ	0xFF3
 10092                           intcon	equ	0xFF2
 10093                           intcon2	equ	0xFF1
 10094                           intcon3	equ	0xFF0
 10095                           postinc0	equ	0xFEE
 10096                           wreg	equ	0xFE8
 10097                           indf1	equ	0xFE7
 10098                           postdec1	equ	0xFE5
 10099                           plusw1	equ	0xFE3
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           plusw2	equ	0xFDB
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function _internalFlash_addressWithinPage *****************
 10111 ;; Defined at:
 10112 ;;		line 185 in file "internal_flash.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  address         4    8[COMRAM] unsigned long 
 10115 ;;  page            2   12[COMRAM] unsigned int 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  page_start_a    4   18[COMRAM] unsigned long 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    8[COMRAM] unsigned int 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10127 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10131 ;;Total ram usage:       14 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    1
 10134 ;; This function calls:
 10135 ;;		_internalFlash_addressFromPage
 10136 ;; This function is called by:
 10137 ;;		__bootloader_program
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text41
 10142  008D4E                     __ptext41:
 10143                           	opt stack 0
 10144  008D4E                     _internalFlash_addressWithinPage:
 10145                           	opt stack 27
 10146                           
 10147                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 10148                           
 10149                           ;incstack = 0
 10150  008D4E  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 10151  008D52  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 10152  008D56  EC3C  F04D         	call	_internalFlash_addressFromPage	;wreg free
 10153  008D5A  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 10154  008D5E  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 10155  008D62  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 10156  008D66  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 10157                           
 10158                           ;internal_flash.c: 189: address = address - page_start_address;
 10159  008D6A  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 10160  008D6E  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 10161  008D72  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 10162  008D76  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 10163  008D7A  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 10164  008D7C  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 10165  008D7E  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 10166  008D80  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 10167  008D82  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 10168  008D84  0E00               	movlw	0
 10169  008D86  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 10170  008D88  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 10171  008D8A  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 10172  008D8C  5009               	movf	internalFlash_addressWithinPage@address,w,c
 10173  008D8E  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 10174  008D90  6E09               	movwf	internalFlash_addressWithinPage@address,c
 10175  008D92  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 10176  008D94  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 10177  008D96  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 10178  008D98  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 10179  008D9A  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 10180  008D9C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 10181  008D9E  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 10182  008DA0  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 10183  008DA2  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 10184                           
 10185                           ;internal_flash.c: 190: return (uint16_t) address;
 10186  008DA4  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 10187  008DA8  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 10188  008DAC  0012               	return	
 10189  008DAE                     __end_of_internalFlash_addressWithinPage:
 10190                           	opt stack 0
 10191                           tblptru	equ	0xFF8
 10192                           tblptrh	equ	0xFF7
 10193                           tblptrl	equ	0xFF6
 10194                           tablat	equ	0xFF5
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           intcon	equ	0xFF2
 10198                           intcon2	equ	0xFF1
 10199                           intcon3	equ	0xFF0
 10200                           postinc0	equ	0xFEE
 10201                           wreg	equ	0xFE8
 10202                           indf1	equ	0xFE7
 10203                           postdec1	equ	0xFE5
 10204                           plusw1	equ	0xFE3
 10205                           fsr1h	equ	0xFE2
 10206                           fsr1l	equ	0xFE1
 10207                           indf2	equ	0xFDF
 10208                           postinc2	equ	0xFDE
 10209                           postdec2	equ	0xFDD
 10210                           plusw2	equ	0xFDB
 10211                           fsr2h	equ	0xFDA
 10212                           fsr2l	equ	0xFD9
 10213                           status	equ	0xFD8
 10214                           
 10215 ;; *************** function _internalFlash_addressFromPage *****************
 10216 ;; Defined at:
 10217 ;;		line 177 in file "internal_flash.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  page            2    0[COMRAM] unsigned int 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  address         4    4[COMRAM] unsigned long 
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  4    0[COMRAM] unsigned long 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10232 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;Total ram usage:        8 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_internalFlash_readPage
 10241 ;;		_internalFlash_erasePage
 10242 ;;		_internalFlash_writePage
 10243 ;;		_internalFlash_addressWithinPage
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text42
 10248  009A78                     __ptext42:
 10249                           	opt stack 0
 10250  009A78                     _internalFlash_addressFromPage:
 10251                           	opt stack 27
 10252                           
 10253                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
 10254                           
 10255                           ;incstack = 0
 10256  009A78  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 10257  009A7C  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 10258  009A80  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 10259  009A82  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 10260                           
 10261                           ;internal_flash.c: 181: address <<= 10;
 10262  009A84  0E0A               	movlw	10
 10263  009A86                     u11765:
 10264  009A86  90D8               	bcf	status,0,c
 10265  009A88  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 10266  009A8A  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 10267  009A8C  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 10268  009A8E  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 10269  009A90  2EE8               	decfsz	wreg,f,c
 10270  009A92  D7F9               	goto	u11765
 10271                           
 10272                           ;internal_flash.c: 182: return address;
 10273  009A94  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 10274  009A98  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 10275  009A9C  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 10276  009AA0  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 10277  009AA4  0012               	return	
 10278  009AA6                     __end_of_internalFlash_addressFromPage:
 10279                           	opt stack 0
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           intcon2	equ	0xFF1
 10288                           intcon3	equ	0xFF0
 10289                           postinc0	equ	0xFEE
 10290                           wreg	equ	0xFE8
 10291                           indf1	equ	0xFE7
 10292                           postdec1	equ	0xFE5
 10293                           plusw1	equ	0xFE3
 10294                           fsr1h	equ	0xFE2
 10295                           fsr1l	equ	0xFE1
 10296                           indf2	equ	0xFDF
 10297                           postinc2	equ	0xFDE
 10298                           postdec2	equ	0xFDD
 10299                           plusw2	equ	0xFDB
 10300                           fsr2h	equ	0xFDA
 10301                           fsr2l	equ	0xFD9
 10302                           status	equ	0xFD8
 10303                           
 10304 ;; *************** function __bootloader_check_address *****************
 10305 ;; Defined at:
 10306 ;;		line 112 in file "bootloader.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  address         4    0[COMRAM] unsigned long 
 10309 ;;  dataLength      1    4[COMRAM] unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  cntr            1   11[COMRAM] unsigned char 
 10312 ;;  byte_status     1   10[COMRAM] enum E6967
 10313 ;;  worst_case      1    9[COMRAM] enum E6967
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  1    wreg      enum E6967
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10323 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10324 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;Total ram usage:       12 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		__bootloader_verify_file
 10333 ;;		__bootloader_program
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text43
 10338  006906                     __ptext43:
 10339                           	opt stack 0
 10340  006906                     __bootloader_check_address:
 10341                           	opt stack 28
 10342                           
 10343                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10344                           
 10345                           ;incstack = 0
 10346  006906  0E00               	movlw	0
 10347  006908  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10348                           
 10349                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10350  00690A  0E00               	movlw	0
 10351  00690C  6E0C               	movwf	__bootloader_check_address@cntr,c
 10352  00690E  D062               	goto	l2466
 10353  006910                     
 10354                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x0A000) && ((address+cntr)
      +                          <=0x1FFF7))
 10355  006910  500C               	movf	__bootloader_check_address@cntr,w,c
 10356  006912  2401               	addwf	__bootloader_check_address@address,w,c
 10357  006914  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10358  006916  0E00               	movlw	0
 10359  006918  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10360  00691A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10361  00691C  0E00               	movlw	0
 10362  00691E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10363  006920  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10364  006922  0E00               	movlw	0
 10365  006924  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10366  006926  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10367  006928  5009               	movf	??__bootloader_check_address+3,w,c
 10368  00692A  1008               	iorwf	??__bootloader_check_address+2,w,c
 10369  00692C  E104               	bnz	u13050
 10370  00692E  0EA0               	movlw	160
 10371  006930  5C07               	subwf	??__bootloader_check_address+1,w,c
 10372  006932  A0D8               	btfss	status,0,c
 10373  006934  D018               	goto	l2468
 10374  006936                     u13050:
 10375  006936  500C               	movf	__bootloader_check_address@cntr,w,c
 10376  006938  2401               	addwf	__bootloader_check_address@address,w,c
 10377  00693A  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10378  00693C  0E00               	movlw	0
 10379  00693E  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10380  006940  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10381  006942  0E00               	movlw	0
 10382  006944  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10383  006946  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10384  006948  0E00               	movlw	0
 10385  00694A  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10386  00694C  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10387  00694E  5009               	movf	??__bootloader_check_address+3,w,c
 10388  006950  E10A               	bnz	l15329
 10389  006952  0EF8               	movlw	248
 10390  006954  5C06               	subwf	??__bootloader_check_address,w,c
 10391  006956  0EFF               	movlw	255
 10392  006958  5807               	subwfb	??__bootloader_check_address+1,w,c
 10393  00695A  0E01               	movlw	1
 10394  00695C  5808               	subwfb	??__bootloader_check_address+2,w,c
 10395  00695E  B0D8               	btfsc	status,0,c
 10396  006960  D002               	goto	l2468
 10397                           
 10398                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10399  006962  0E00               	movlw	0
 10400  006964  D029               	goto	L4
 10401  006966                     l2468:
 10402  006966                     l15329:
 10403                           
 10404                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10405  006966  500C               	movf	__bootloader_check_address@cntr,w,c
 10406  006968  2401               	addwf	__bootloader_check_address@address,w,c
 10407  00696A  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10408  00696C  0E00               	movlw	0
 10409  00696E  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10410  006970  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10411  006972  0E00               	movlw	0
 10412  006974  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10413  006976  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10414  006978  0E00               	movlw	0
 10415  00697A  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10416  00697C  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10417  00697E  5009               	movf	??__bootloader_check_address+3,w,c
 10418  006980  E108               	bnz	u13070
 10419  006982  0EF8               	movlw	248
 10420  006984  5C06               	subwf	??__bootloader_check_address,w,c
 10421  006986  0EFF               	movlw	255
 10422  006988  5807               	subwfb	??__bootloader_check_address+1,w,c
 10423  00698A  0E01               	movlw	1
 10424  00698C  5808               	subwfb	??__bootloader_check_address+2,w,c
 10425  00698E  A0D8               	btfss	status,0,c
 10426  006990  D015               	goto	l2470
 10427  006992                     u13070:
 10428  006992  500C               	movf	__bootloader_check_address@cntr,w,c
 10429  006994  2401               	addwf	__bootloader_check_address@address,w,c
 10430  006996  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10431  006998  0E00               	movlw	0
 10432  00699A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10433  00699C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10434  00699E  0E00               	movlw	0
 10435  0069A0  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10436  0069A2  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10437  0069A4  0E00               	movlw	0
 10438  0069A6  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10439  0069A8  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10440  0069AA  5009               	movf	??__bootloader_check_address+3,w,c
 10441  0069AC  E107               	bnz	l2470
 10442  0069AE  0E02               	movlw	2
 10443  0069B0  5C08               	subwf	??__bootloader_check_address+2,w,c
 10444  0069B2  B0D8               	btfsc	status,0,c
 10445  0069B4  D003               	goto	l2470
 10446                           
 10447                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10448  0069B6  0E01               	movlw	1
 10449  0069B8                     L4:
 10450  0069B8  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10451                           
 10452                           ;bootloader.c: 133: }
 10453  0069BA  D001               	goto	l2471
 10454  0069BC                     l2470:
 10455                           
 10456                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10457  0069BC  680B               	setf	__bootloader_check_address@byte_status,c
 10458  0069BE                     l2471:
 10459                           
 10460                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10461  0069BE  280B               	incf	__bootloader_check_address@byte_status,w,c
 10462  0069C0  A4D8               	btfss	status,2,c
 10463  0069C2  D002               	goto	l2472
 10464                           
 10465                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 10466  0069C4  0EFF               	movlw	255
 10467  0069C6  0012               	return	
 10468  0069C8                     l2472:
 10469                           
 10470                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 10471  0069C8  500B               	movf	__bootloader_check_address@byte_status,w,c
 10472  0069CA  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10473  0069CC  A0D8               	btfss	status,0,c
 10474                           
 10475                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 10476  0069CE  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10477  0069D2  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10478  0069D4                     l2466:
 10479  0069D4  5005               	movf	__bootloader_check_address@dataLength,w,c
 10480  0069D6  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10481  0069D8  A0D8               	btfss	status,0,c
 10482  0069DA  D79A               	goto	l2467
 10483                           
 10484                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 10485  0069DC  500A               	movf	__bootloader_check_address@worst_case,w,c
 10486  0069DE  0012               	return	
 10487  0069E0                     __end_of__bootloader_check_address:
 10488                           	opt stack 0
 10489                           tblptru	equ	0xFF8
 10490                           tblptrh	equ	0xFF7
 10491                           tblptrl	equ	0xFF6
 10492                           tablat	equ	0xFF5
 10493                           prodh	equ	0xFF4
 10494                           prodl	equ	0xFF3
 10495                           intcon	equ	0xFF2
 10496                           intcon2	equ	0xFF1
 10497                           intcon3	equ	0xFF0
 10498                           postinc0	equ	0xFEE
 10499                           wreg	equ	0xFE8
 10500                           indf1	equ	0xFE7
 10501                           postdec1	equ	0xFE5
 10502                           plusw1	equ	0xFE3
 10503                           fsr1h	equ	0xFE2
 10504                           fsr1l	equ	0xFE1
 10505                           indf2	equ	0xFDF
 10506                           postinc2	equ	0xFDE
 10507                           postdec2	equ	0xFDD
 10508                           plusw2	equ	0xFDB
 10509                           fsr2h	equ	0xFDA
 10510                           fsr2l	equ	0xFD9
 10511                           status	equ	0xFD8
 10512                           
 10513 ;; *************** function __bootloader_find_file *****************
 10514 ;; Defined at:
 10515 ;;		line 155 in file "bootloader.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;		None
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10533 ;;Total ram usage:        0 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    7
 10536 ;; This function calls:
 10537 ;;		_fat_find_file
 10538 ;;		_fat_get_file_size
 10539 ;; This function is called by:
 10540 ;;		_bootloader_run
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text44
 10545  007B92                     __ptext44:
 10546                           	opt stack 0
 10547  007B92                     __bootloader_find_file:
 10548                           	opt stack 22
 10549                           
 10550                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10551                           
 10552                           ;incstack = 0
 10553  007B92  0EB6               	movlw	low _bootloader_filename
 10554  007B94  6E2C               	movwf	fat_find_file@name,c
 10555  007B96  0EBF               	movlw	high _bootloader_filename
 10556  007B98  6E2D               	movwf	fat_find_file@name+1,c
 10557  007B9A  0EC7               	movlw	low _bootloader_extension
 10558  007B9C  6E2E               	movwf	fat_find_file@extension,c
 10559  007B9E  0EBF               	movlw	high _bootloader_extension
 10560  007BA0  6E2F               	movwf	fat_find_file@extension+1,c
 10561  007BA2  ECA4  F033         	call	_fat_find_file	;wreg free
 10562  007BA6  0100               	movlb	0	; () banked
 10563  007BA8  6FFF               	movwf	_file_number& (0+255),b
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;bootloader.c: 161: if(file_number!=0xFF)
 10567  007BAA  29FF               	incf	_file_number& (0+255),w,b
 10568  007BAC  B4D8               	btfsc	status,2,c
 10569  007BAE  D034               	goto	l2478
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 10573  007BB0  51FF               	movf	_file_number& (0+255),w,b
 10574  007BB2  ECA5  F044         	call	_fat_get_file_size
 10575  007BB6  C036  F143         	movff	?_fat_get_file_size,_hex_file_size
 10576  007BBA  C037  F144         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10577  007BBE  C038  F145         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10578  007BC2  C039  F146         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10579                           
 10580                           ;bootloader.c: 166: hex_file_entries = 0;
 10581  007BC6  0E00               	movlw	0
 10582  007BC8  0101               	movlb	1	; () banked
 10583  007BCA  6F72               	movwf	(_hex_file_entries+1)& (0+255),b
 10584  007BCC  0E00               	movlw	0
 10585  007BCE  6F71               	movwf	_hex_file_entries& (0+255),b
 10586                           
 10587                           ; BSR set to: 1
 10588                           ;bootloader.c: 167: hex_file_offset = 0;
 10589  007BD0  0E00               	movlw	0
 10590  007BD2  0100               	movlb	0	; () banked
 10591  007BD4  6FDA               	movwf	_hex_file_offset& (0+255),b
 10592  007BD6  0E00               	movlw	0
 10593  007BD8  6FDB               	movwf	(_hex_file_offset+1)& (0+255),b
 10594  007BDA  0E00               	movlw	0
 10595  007BDC  6FDC               	movwf	(_hex_file_offset+2)& (0+255),b
 10596  007BDE  0E00               	movlw	0
 10597  007BE0  6FDD               	movwf	(_hex_file_offset+3)& (0+255),b
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 10601  007BE2  0101               	movlb	1	; () banked
 10602  007BE4  694B               	setf	_file_minimum_address& (0+255),b
 10603  007BE6  694C               	setf	(_file_minimum_address+1)& (0+255),b
 10604  007BE8  694D               	setf	(_file_minimum_address+2)& (0+255),b
 10605  007BEA  694E               	setf	(_file_minimum_address+3)& (0+255),b
 10606                           
 10607                           ; BSR set to: 1
 10608                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 10609  007BEC  0E00               	movlw	0
 10610  007BEE  6F47               	movwf	_file_maximum_address& (0+255),b
 10611  007BF0  0E00               	movlw	0
 10612  007BF2  6F48               	movwf	(_file_maximum_address+1)& (0+255),b
 10613  007BF4  0E00               	movlw	0
 10614  007BF6  6F49               	movwf	(_file_maximum_address+2)& (0+255),b
 10615  007BF8  0E00               	movlw	0
 10616  007BFA  6F4A               	movwf	(_file_maximum_address+3)& (0+255),b
 10617                           
 10618                           ; BSR set to: 1
 10619                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 10620  007BFC  0E00               	movlw	0
 10621  007BFE  6F3F               	movwf	_extended_linear_address& (0+255),b
 10622  007C00  0E00               	movlw	0
 10623  007C02  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 10624  007C04  0E00               	movlw	0
 10625  007C06  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 10626  007C08  0E00               	movlw	0
 10627  007C0A  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 10628                           
 10629                           ; BSR set to: 1
 10630                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10631  007C0C  0E20               	movlw	32
 10632  007C0E  0100               	movlb	0	; () banked
 10633  007C10  6FC5               	movwf	(_os+4)& (0+255),b
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10637  007C12  0E20               	movlw	32
 10638  007C14  6FC6               	movwf	(_os+5)& (0+255),b
 10639                           
 10640                           ;bootloader.c: 173: }
 10641  007C16  0012               	return	
 10642  007C18                     l2478:
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 10646                           
 10647                           ; BSR set to: 0
 10648  007C18  0E00               	movlw	0
 10649  007C1A  0101               	movlb	1	; () banked
 10650  007C1C  6F43               	movwf	_hex_file_size& (0+255),b
 10651  007C1E  0E00               	movlw	0
 10652  007C20  6F44               	movwf	(_hex_file_size+1)& (0+255),b
 10653  007C22  0E00               	movlw	0
 10654  007C24  6F45               	movwf	(_hex_file_size+2)& (0+255),b
 10655  007C26  0E00               	movlw	0
 10656  007C28  6F46               	movwf	(_hex_file_size+3)& (0+255),b
 10657                           
 10658                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10659  007C2A  0E10               	movlw	16
 10660  007C2C  0100               	movlb	0	; () banked
 10661  007C2E  6FC5               	movwf	(_os+4)& (0+255),b
 10662                           
 10663                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10664  007C30  0E10               	movlw	16
 10665  007C32  6FC6               	movwf	(_os+5)& (0+255),b
 10666  007C34  0012               	return	
 10667  007C36                     __end_of__bootloader_find_file:
 10668                           	opt stack 0
 10669                           tblptru	equ	0xFF8
 10670                           tblptrh	equ	0xFF7
 10671                           tblptrl	equ	0xFF6
 10672                           tablat	equ	0xFF5
 10673                           prodh	equ	0xFF4
 10674                           prodl	equ	0xFF3
 10675                           intcon	equ	0xFF2
 10676                           intcon2	equ	0xFF1
 10677                           intcon3	equ	0xFF0
 10678                           postinc0	equ	0xFEE
 10679                           wreg	equ	0xFE8
 10680                           indf1	equ	0xFE7
 10681                           postdec1	equ	0xFE5
 10682                           plusw1	equ	0xFE3
 10683                           fsr1h	equ	0xFE2
 10684                           fsr1l	equ	0xFE1
 10685                           indf2	equ	0xFDF
 10686                           postinc2	equ	0xFDE
 10687                           postdec2	equ	0xFDD
 10688                           plusw2	equ	0xFDB
 10689                           fsr2h	equ	0xFDA
 10690                           fsr2l	equ	0xFD9
 10691                           status	equ	0xFD8
 10692                           
 10693 ;; *************** function __normal_mode *****************
 10694 ;; Defined at:
 10695 ;;		line 210 in file "main.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      unsigned char 
 10702 ;; Registers used:
 10703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;Total ram usage:        0 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    3
 10716 ;; This function calls:
 10717 ;;		_i2c_eeprom_readByte
 10718 ;;		_i2c_eeprom_writeByte
 10719 ;; This function is called by:
 10720 ;;		_main
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text45
 10725  008DAE                     __ptext45:
 10726                           	opt stack 0
 10727  008DAE                     __normal_mode:
 10728                           	opt stack 27
 10729                           
 10730                           ;main.c: 212: if(i2c_eeprom_readByte(0x100)==0x94)
 10731                           
 10732                           ; BSR set to: 0
 10733                           ;incstack = 0
 10734  008DAE  0E01               	movlw	1
 10735  008DB0  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10736  008DB2  0E00               	movlw	0
 10737  008DB4  6E12               	movwf	i2c_eeprom_readByte@address,c
 10738  008DB6  ECBB  F049         	call	_i2c_eeprom_readByte	;wreg free
 10739  008DBA  0A94               	xorlw	148
 10740  008DBC  A4D8               	btfss	status,2,c
 10741  008DBE  D00A               	goto	l912
 10742                           
 10743                           ;main.c: 213: {;main.c: 215: i2c_eeprom_writeByte(0x100, 0x00);
 10744  008DC0  0E01               	movlw	1
 10745  008DC2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10746  008DC4  0E00               	movlw	0
 10747  008DC6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10748  008DC8  0E00               	movlw	0
 10749  008DCA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10750  008DCC  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
 10751                           
 10752                           ;main.c: 217: return 0;
 10753  008DD0  0E00               	movlw	0
 10754  008DD2  0012               	return	
 10755  008DD4                     l912:
 10756                           
 10757                           ;main.c: 219: else if(i2c_eeprom_readByte(0x100)==0x78)
 10758  008DD4  0E01               	movlw	1
 10759  008DD6  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10760  008DD8  0E00               	movlw	0
 10761  008DDA  6E12               	movwf	i2c_eeprom_readByte@address,c
 10762  008DDC  ECBB  F049         	call	_i2c_eeprom_readByte	;wreg free
 10763  008DE0  0A78               	xorlw	120
 10764  008DE2  A4D8               	btfss	status,2,c
 10765  008DE4  D00A               	goto	l915
 10766                           
 10767                           ;main.c: 220: {;main.c: 222: i2c_eeprom_writeByte(0x100, 0x00);
 10768  008DE6  0E01               	movlw	1
 10769  008DE8  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10770  008DEA  0E00               	movlw	0
 10771  008DEC  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10772  008DEE  0E00               	movlw	0
 10773  008DF0  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10774  008DF2  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
 10775                           
 10776                           ;main.c: 224: return 1;
 10777  008DF6  0E01               	movlw	1
 10778  008DF8  0012               	return	
 10779  008DFA                     l915:
 10780                           
 10781                           ;main.c: 225: };main.c: 231: LATAbits.LA0 = 1;
 10782  008DFA  8089               	bsf	3977,0,c	;volatile
 10783                           
 10784                           ;main.c: 232: TRISAbits.TRISA0 = 0;
 10785  008DFC  9092               	bcf	3986,0,c	;volatile
 10786                           
 10787                           ;main.c: 233: TRISAbits.TRISA0 = 1;
 10788  008DFE  8092               	bsf	3986,0,c	;volatile
 10789                           
 10790                           ;main.c: 235: if(!PORTAbits.RA0)
 10791  008E00  B080               	btfsc	3968,0,c	;volatile
 10792  008E02  D002               	goto	l916
 10793                           
 10794                           ;main.c: 236: {;main.c: 238: return 0;
 10795  008E04  0E00               	movlw	0
 10796                           
 10797                           ;main.c: 239: }
 10798  008E06  0012               	return	
 10799  008E08                     l916:
 10800                           
 10801                           ;main.c: 240: else;main.c: 241: {;main.c: 243: return 1;
 10802  008E08  0E01               	movlw	1
 10803  008E0A  0012               	return	
 10804  008E0C                     __end_of__normal_mode:
 10805                           	opt stack 0
 10806                           tblptru	equ	0xFF8
 10807                           tblptrh	equ	0xFF7
 10808                           tblptrl	equ	0xFF6
 10809                           tablat	equ	0xFF5
 10810                           prodh	equ	0xFF4
 10811                           prodl	equ	0xFF3
 10812                           intcon	equ	0xFF2
 10813                           intcon2	equ	0xFF1
 10814                           intcon3	equ	0xFF0
 10815                           postinc0	equ	0xFEE
 10816                           wreg	equ	0xFE8
 10817                           indf1	equ	0xFE7
 10818                           postdec1	equ	0xFE5
 10819                           plusw1	equ	0xFE3
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           indf2	equ	0xFDF
 10823                           postinc2	equ	0xFDE
 10824                           postdec2	equ	0xFDD
 10825                           plusw2	equ	0xFDB
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function _i2c_eeprom_readByte *****************
 10831 ;; Defined at:
 10832 ;;		line 395 in file "i2c.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  address         2   17[COMRAM] unsigned int 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;  addr            1   23[COMRAM] unsigned char 
 10837 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      unsigned char 
 10840 ;; Registers used:
 10841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10850 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10851 ;;Total ram usage:        7 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    2
 10854 ;; This function calls:
 10855 ;;		__i2c_read
 10856 ;;		__i2c_write
 10857 ;;		_i2c_set_frequency
 10858 ;; This function is called by:
 10859 ;;		__normal_mode
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text46
 10864  009376                     __ptext46:
 10865                           	opt stack 0
 10866  009376                     _i2c_eeprom_readByte:
 10867                           	opt stack 27
 10868                           
 10869                           ;i2c.c: 397: uint8_t slave_address;;i2c.c: 398: uint8_t addr;;i2c.c: 399: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10870                           
 10871                           ;incstack = 0
 10872  009376  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10873  00937A  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10874  00937E  0E07               	movlw	7
 10875  009380  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10876  009382                     u13745:
 10877  009382  90D8               	bcf	status,0,c
 10878  009384  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10879  009386  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10880  009388  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10881  00938A  D7FB               	goto	u13745
 10882  00938C  5014               	movf	??_i2c_eeprom_readByte,w,c
 10883  00938E  0B0E               	andlw	14
 10884  009390  09A0               	iorlw	160
 10885  009392  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10886                           
 10887                           ;i2c.c: 400: addr = address & 0xFF;
 10888  009394  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10889                           
 10890                           ;i2c.c: 403: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10891  009398  0E02               	movlw	2
 10892  00939A  ECC3  F04D         	call	_i2c_set_frequency
 10893                           
 10894                           ;i2c.c: 405: _i2c_write(slave_address, &addr, 1);
 10895  00939E  0E18               	movlw	low i2c_eeprom_readByte@addr
 10896  0093A0  6E06               	movwf	__i2c_write@data,c
 10897  0093A2  0E00               	movlw	high i2c_eeprom_readByte@addr
 10898  0093A4  6E07               	movwf	__i2c_write@data+1,c
 10899  0093A6  0E01               	movlw	1
 10900  0093A8  6E08               	movwf	__i2c_write@length,c
 10901  0093AA  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10902  0093AC  EC57  F04A         	call	__i2c_write
 10903                           
 10904                           ;i2c.c: 406: _i2c_read(slave_address, &addr, 1);
 10905  0093B0  0E18               	movlw	low i2c_eeprom_readByte@addr
 10906  0093B2  6E06               	movwf	__i2c_read@data,c
 10907  0093B4  0E00               	movlw	high i2c_eeprom_readByte@addr
 10908  0093B6  6E07               	movwf	__i2c_read@data+1,c
 10909  0093B8  0E01               	movlw	1
 10910  0093BA  6E08               	movwf	__i2c_read@length,c
 10911  0093BC  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10912  0093BE  ECC0  F041         	call	__i2c_read
 10913                           
 10914                           ;i2c.c: 407: return addr;
 10915  0093C2  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10916  0093C4  0012               	return	
 10917  0093C6                     __end_of_i2c_eeprom_readByte:
 10918                           	opt stack 0
 10919                           tblptru	equ	0xFF8
 10920                           tblptrh	equ	0xFF7
 10921                           tblptrl	equ	0xFF6
 10922                           tablat	equ	0xFF5
 10923                           prodh	equ	0xFF4
 10924                           prodl	equ	0xFF3
 10925                           intcon	equ	0xFF2
 10926                           intcon2	equ	0xFF1
 10927                           intcon3	equ	0xFF0
 10928                           postinc0	equ	0xFEE
 10929                           wreg	equ	0xFE8
 10930                           indf1	equ	0xFE7
 10931                           postdec1	equ	0xFE5
 10932                           plusw1	equ	0xFE3
 10933                           fsr1h	equ	0xFE2
 10934                           fsr1l	equ	0xFE1
 10935                           indf2	equ	0xFDF
 10936                           postinc2	equ	0xFDE
 10937                           postdec2	equ	0xFDD
 10938                           plusw2	equ	0xFDB
 10939                           fsr2h	equ	0xFDA
 10940                           fsr2l	equ	0xFD9
 10941                           status	equ	0xFD8
 10942                           
 10943 ;; *************** function __i2c_read *****************
 10944 ;; Defined at:
 10945 ;;		line 169 in file "i2c.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  slave_addres    1    wreg     unsigned char 
 10948 ;;  data            2    5[COMRAM] PTR unsigned char 
 10949 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10950 ;;  length          1    7[COMRAM] unsigned char 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10953 ;;  cntr            1   16[COMRAM] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10963 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10965 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10966 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10967 ;;Total ram usage:       12 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; Hardware stack levels required when called:    1
 10970 ;; This function calls:
 10971 ;;		__i2c_acknowledge
 10972 ;;		__i2c_get
 10973 ;;		__i2c_not_acknowledge
 10974 ;;		__i2c_send
 10975 ;;		__i2c_start
 10976 ;;		__i2c_stop
 10977 ;;		__i2c_wait_idle
 10978 ;; This function is called by:
 10979 ;;		_i2c_eeprom_readByte
 10980 ;;		_i2c_eeprom_read
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text47
 10985  008380                     __ptext47:
 10986                           	opt stack 0
 10987  008380                     __i2c_read:
 10988                           	opt stack 27
 10989                           
 10990                           ;incstack = 0
 10991                           ;__i2c_read@slave_address stored from wreg
 10992  008380  6E10               	movwf	__i2c_read@slave_address,c
 10993                           
 10994                           ;i2c.c: 171: uint8_t cntr;;i2c.c: 173: _i2c_wait_idle();
 10995  008382  EC61  F047         	call	__i2c_wait_idle	;wreg free
 10996                           
 10997                           ;i2c.c: 174: _i2c_start();
 10998  008386  EC80  F050         	call	__i2c_start	;wreg free
 10999                           
 11000                           ;i2c.c: 175: _i2c_wait_idle();
 11001  00838A  EC61  F047         	call	__i2c_wait_idle	;wreg free
 11002                           
 11003                           ;i2c.c: 176: _i2c_send(slave_address | 0x01);
 11004  00838E  5010               	movf	__i2c_read@slave_address,w,c
 11005  008390  0901               	iorlw	1
 11006  008392  EC84  F050         	call	__i2c_send
 11007                           
 11008                           ;i2c.c: 177: _i2c_wait_idle();
 11009  008396  EC61  F047         	call	__i2c_wait_idle	;wreg free
 11010                           
 11011                           ;i2c.c: 179: for(cntr=0; cntr<length-1; ++cntr)
 11012  00839A  0E00               	movlw	0
 11013  00839C  6E11               	movwf	__i2c_read@cntr,c
 11014  00839E  D00E               	goto	l1205
 11015  0083A0                     
 11016                           ;i2c.c: 180: {;i2c.c: 181: data[cntr] = _i2c_get();
 11017  0083A0  5011               	movf	__i2c_read@cntr,w,c
 11018  0083A2  0D01               	mullw	1
 11019  0083A4  50F3               	movf	prodl,w,c
 11020  0083A6  2406               	addwf	__i2c_read@data,w,c
 11021  0083A8  6ED9               	movwf	fsr2l,c
 11022  0083AA  50F4               	movf	prodh,w,c
 11023  0083AC  2007               	addwfc	__i2c_read@data+1,w,c
 11024  0083AE  6EDA               	movwf	fsr2h,c
 11025  0083B0  EC4A  F050         	call	__i2c_get	;wreg free
 11026  0083B4  6EDF               	movwf	indf2,c
 11027                           
 11028                           ;i2c.c: 182: _i2c_acknowledge();
 11029  0083B6  EC4F  F050         	call	__i2c_acknowledge	;wreg free
 11030  0083BA  2A11               	incf	__i2c_read@cntr,f,c
 11031  0083BC                     l1205:
 11032  0083BC  0EFF               	movlw	255
 11033  0083BE  6E09               	movwf	??__i2c_read& (0+255),c
 11034  0083C0  0EFF               	movlw	255
 11035  0083C2  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 11036  0083C4  5008               	movf	__i2c_read@length,w,c
 11037  0083C6  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 11038  0083C8  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 11039  0083CA  5009               	movf	??__i2c_read,w,c
 11040  0083CC  260B               	addwf	??__i2c_read+2,f,c
 11041  0083CE  500A               	movf	??__i2c_read+1,w,c
 11042  0083D0  220C               	addwfc	??__i2c_read+3,f,c
 11043  0083D2  5011               	movf	__i2c_read@cntr,w,c
 11044  0083D4  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 11045  0083D6  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 11046  0083D8  500B               	movf	??__i2c_read+2,w,c
 11047  0083DA  5C0D               	subwf	??__i2c_read+4,w,c
 11048  0083DC  500E               	movf	??__i2c_read+5,w,c
 11049  0083DE  0A80               	xorlw	128
 11050  0083E0  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 11051  0083E2  500C               	movf	??__i2c_read+3,w,c
 11052  0083E4  0A80               	xorlw	128
 11053  0083E6  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 11054  0083E8  A0D8               	btfss	status,0,c
 11055  0083EA  D7DA               	goto	l1206
 11056                           
 11057                           ;i2c.c: 183: };i2c.c: 184: data[cntr] = _i2c_get();
 11058  0083EC  5011               	movf	__i2c_read@cntr,w,c
 11059  0083EE  0D01               	mullw	1
 11060  0083F0  50F3               	movf	prodl,w,c
 11061  0083F2  2406               	addwf	__i2c_read@data,w,c
 11062  0083F4  6ED9               	movwf	fsr2l,c
 11063  0083F6  50F4               	movf	prodh,w,c
 11064  0083F8  2007               	addwfc	__i2c_read@data+1,w,c
 11065  0083FA  6EDA               	movwf	fsr2h,c
 11066  0083FC  EC4A  F050         	call	__i2c_get	;wreg free
 11067  008400  6EDF               	movwf	indf2,c
 11068                           
 11069                           ;i2c.c: 185: _i2c_not_acknowledge();
 11070  008402  EC45  F050         	call	__i2c_not_acknowledge	;wreg free
 11071                           
 11072                           ;i2c.c: 187: _i2c_stop();
 11073  008406  EC7C  F050         	call	__i2c_stop	;wreg free
 11074  00840A  0012               	return		;funcret
 11075  00840C                     __end_of__i2c_read:
 11076                           	opt stack 0
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           intcon	equ	0xFF2
 11084                           intcon2	equ	0xFF1
 11085                           intcon3	equ	0xFF0
 11086                           postinc0	equ	0xFEE
 11087                           wreg	equ	0xFE8
 11088                           indf1	equ	0xFE7
 11089                           postdec1	equ	0xFE5
 11090                           plusw1	equ	0xFE3
 11091                           fsr1h	equ	0xFE2
 11092                           fsr1l	equ	0xFE1
 11093                           indf2	equ	0xFDF
 11094                           postinc2	equ	0xFDE
 11095                           postdec2	equ	0xFDD
 11096                           plusw2	equ	0xFDB
 11097                           fsr2h	equ	0xFDA
 11098                           fsr2l	equ	0xFD9
 11099                           status	equ	0xFD8
 11100                           
 11101 ;; *************** function __i2c_not_acknowledge *****************
 11102 ;; Defined at:
 11103 ;;		line 98 in file "i2c.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		None
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		__i2c_read
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text48
 11131  00A08A                     __ptext48:
 11132                           	opt stack 0
 11133  00A08A                     __i2c_not_acknowledge:
 11134                           	opt stack 27
 11135                           
 11136                           ;i2c.c: 100: SSP1CON2bits.ACKDT = 1;
 11137                           
 11138                           ;incstack = 0
 11139  00A08A  8AC5               	bsf	4037,5,c	;volatile
 11140                           
 11141                           ;i2c.c: 101: SSP1CON2bits.ACKEN = 1;
 11142  00A08C  88C5               	bsf	4037,4,c	;volatile
 11143  00A08E  A8C5               	btfss	4037,4,c	;volatile
 11144  00A090  0012               	return	
 11145  00A092  D7FD               	goto	l1177
 11146  00A094                     __end_of__i2c_not_acknowledge:
 11147                           	opt stack 0
 11148                           tblptru	equ	0xFF8
 11149                           tblptrh	equ	0xFF7
 11150                           tblptrl	equ	0xFF6
 11151                           tablat	equ	0xFF5
 11152                           prodh	equ	0xFF4
 11153                           prodl	equ	0xFF3
 11154                           intcon	equ	0xFF2
 11155                           intcon2	equ	0xFF1
 11156                           intcon3	equ	0xFF0
 11157                           postinc0	equ	0xFEE
 11158                           wreg	equ	0xFE8
 11159                           indf1	equ	0xFE7
 11160                           postdec1	equ	0xFE5
 11161                           plusw1	equ	0xFE3
 11162                           fsr1h	equ	0xFE2
 11163                           fsr1l	equ	0xFE1
 11164                           indf2	equ	0xFDF
 11165                           postinc2	equ	0xFDE
 11166                           postdec2	equ	0xFDD
 11167                           plusw2	equ	0xFDB
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function __i2c_get *****************
 11173 ;; Defined at:
 11174 ;;		line 75 in file "i2c.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;		None
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      unsigned char 
 11181 ;; Registers used:
 11182 ;;		wreg, status,2
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11192 ;;Total ram usage:        0 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; This function calls:
 11195 ;;		Nothing
 11196 ;; This function is called by:
 11197 ;;		__i2c_read
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text49
 11202  00A094                     __ptext49:
 11203                           	opt stack 0
 11204  00A094                     __i2c_get:
 11205                           	opt stack 27
 11206                           
 11207                           ;i2c.c: 77: SSP1CON2bits.RCEN = 1 ;
 11208                           
 11209                           ;incstack = 0
 11210  00A094  86C5               	bsf	4037,3,c	;volatile
 11211  00A096  B6C5               	btfsc	4037,3,c	;volatile
 11212  00A098  D7FE               	goto	l1159
 11213                           
 11214                           ;i2c.c: 79: return SSP1BUF;
 11215  00A09A  50C9               	movf	4041,w,c	;volatile
 11216  00A09C  0012               	return	
 11217  00A09E                     __end_of__i2c_get:
 11218                           	opt stack 0
 11219                           tblptru	equ	0xFF8
 11220                           tblptrh	equ	0xFF7
 11221                           tblptrl	equ	0xFF6
 11222                           tablat	equ	0xFF5
 11223                           prodh	equ	0xFF4
 11224                           prodl	equ	0xFF3
 11225                           intcon	equ	0xFF2
 11226                           intcon2	equ	0xFF1
 11227                           intcon3	equ	0xFF0
 11228                           postinc0	equ	0xFEE
 11229                           wreg	equ	0xFE8
 11230                           indf1	equ	0xFE7
 11231                           postdec1	equ	0xFE5
 11232                           plusw1	equ	0xFE3
 11233                           fsr1h	equ	0xFE2
 11234                           fsr1l	equ	0xFE1
 11235                           indf2	equ	0xFDF
 11236                           postinc2	equ	0xFDE
 11237                           postdec2	equ	0xFDD
 11238                           plusw2	equ	0xFDB
 11239                           fsr2h	equ	0xFDA
 11240                           fsr2l	equ	0xFD9
 11241                           status	equ	0xFD8
 11242                           
 11243 ;; *************** function __i2c_acknowledge *****************
 11244 ;; Defined at:
 11245 ;;		line 90 in file "i2c.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		None
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;Total ram usage:        0 bytes
 11264 ;; Hardware stack levels used:    1
 11265 ;; This function calls:
 11266 ;;		Nothing
 11267 ;; This function is called by:
 11268 ;;		__i2c_read
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           	psect	text50
 11273  00A09E                     __ptext50:
 11274                           	opt stack 0
 11275  00A09E                     __i2c_acknowledge:
 11276                           	opt stack 27
 11277                           
 11278                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 0;
 11279                           
 11280                           ;incstack = 0
 11281  00A09E  9AC5               	bcf	4037,5,c	;volatile
 11282                           
 11283                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 11284  00A0A0  88C5               	bsf	4037,4,c	;volatile
 11285  00A0A2  A8C5               	btfss	4037,4,c	;volatile
 11286  00A0A4  0012               	return	
 11287  00A0A6  D7FD               	goto	l1171
 11288  00A0A8                     __end_of__i2c_acknowledge:
 11289                           	opt stack 0
 11290                           tblptru	equ	0xFF8
 11291                           tblptrh	equ	0xFF7
 11292                           tblptrl	equ	0xFF6
 11293                           tablat	equ	0xFF5
 11294                           prodh	equ	0xFF4
 11295                           prodl	equ	0xFF3
 11296                           intcon	equ	0xFF2
 11297                           intcon2	equ	0xFF1
 11298                           intcon3	equ	0xFF0
 11299                           postinc0	equ	0xFEE
 11300                           wreg	equ	0xFE8
 11301                           indf1	equ	0xFE7
 11302                           postdec1	equ	0xFE5
 11303                           plusw1	equ	0xFE3
 11304                           fsr1h	equ	0xFE2
 11305                           fsr1l	equ	0xFE1
 11306                           indf2	equ	0xFDF
 11307                           postinc2	equ	0xFDE
 11308                           postdec2	equ	0xFDD
 11309                           plusw2	equ	0xFDB
 11310                           fsr2h	equ	0xFDA
 11311                           fsr2l	equ	0xFD9
 11312                           status	equ	0xFD8
 11313                           
 11314 ;; *************** function _USBDeviceTasks *****************
 11315 ;; Defined at:
 11316 ;;		line 477 in file "usb_device.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;  i               1   31[COMRAM] unsigned char 
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11334 ;;Total ram usage:        1 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    8
 11337 ;; This function calls:
 11338 ;;		_USBCtrlEPAllowStatusStage
 11339 ;;		_USBCtrlEPService
 11340 ;;		_USBDeviceInit
 11341 ;;		_USBIncrement1msInternalTimers
 11342 ;;		_USBStallHandler
 11343 ;;		_USBSuspend
 11344 ;;		_USBWakeFromSuspend
 11345 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11346 ;; This function is called by:
 11347 ;;		_main
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text51
 11352  003990                     __ptext51:
 11353                           	opt stack 0
 11354  003990                     _USBDeviceTasks:
 11355                           	opt stack 22
 11356                           
 11357                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 11358                           
 11359                           ; BSR set to: 0
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;usb_device.c: 543: return;
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 11366                           
 11367                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 11368                           
 11369                           ;usb_device.c: 511: UIE = 0;
 11370                           
 11371                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 11372                           
 11373                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 11374                           
 11375                           ;incstack = 0
 11376  003990  0100               	movlb	0	; () banked
 11377  003992  51FA               	movf	_USBDeviceState& (0+255),w,b
 11378  003994  A4D8               	btfss	status,2,c
 11379  003996  D012               	goto	l150
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 11383  003998  0E00               	movlw	0
 11384  00399A  6E65               	movwf	3941,c	;volatile
 11385                           
 11386                           ;usb_device.c: 572: UIE = 0;
 11387  00399C  0E00               	movlw	0
 11388  00399E  010F               	movlb	15	; () banked
 11389  0039A0  6F36               	movwf	54,b	;volatile
 11390                           
 11391                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11392  0039A2  0E16               	movlw	22
 11393  0039A4  6F39               	movwf	57,b	;volatile
 11394  0039A6  0E9F               	movlw	159
 11395  0039A8  6F37               	movwf	55,b	;volatile
 11396  0039AA  0E7B               	movlw	123
 11397  0039AC  6F36               	movwf	54,b	;volatile
 11398                           
 11399                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 11400  0039AE  D001               	goto	l151
 11401  0039B0                     l152:
 11402  0039B0  8665               	bsf	3941,3,c	;volatile
 11403  0039B2                     l151:
 11404  0039B2  A665               	btfss	3941,3,c	;volatile
 11405  0039B4  D7FD               	goto	l152
 11406                           
 11407                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11408  0039B6  0E01               	movlw	1
 11409  0039B8  0100               	movlb	0	; () banked
 11410  0039BA  6FFA               	movwf	_USBDeviceState& (0+255),b
 11411  0039BC                     l150:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11415                           
 11416                           ; BSR set to: 0
 11417  0039BC  05FA               	decf	_USBDeviceState& (0+255),w,b
 11418  0039BE  B4D8               	btfsc	status,2,c
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11422  0039C0  BA65               	btfsc	3941,5,c	;volatile
 11423  0039C2  D00A               	goto	l155
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11427  0039C4  0E00               	movlw	0
 11428  0039C6  6E62               	movwf	3938,c	;volatile
 11429                           
 11430                           ;usb_device.c: 612: UIE=0;
 11431  0039C8  0E00               	movlw	0
 11432  0039CA  010F               	movlb	15	; () banked
 11433  0039CC  6F36               	movwf	54,b	;volatile
 11434                           
 11435                           ; BSR set to: 15
 11436                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11437  0039CE  8136               	bsf	54,0,b	;volatile
 11438                           
 11439                           ; BSR set to: 15
 11440                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11441  0039D0  8936               	bsf	54,4,b	;volatile
 11442                           
 11443                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11444  0039D2  0E02               	movlw	2
 11445  0039D4  0100               	movlb	0	; () banked
 11446  0039D6  6FFA               	movwf	_USBDeviceState& (0+255),b
 11447  0039D8                     l155:
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11451                           
 11452                           ; BSR set to: 0
 11453                           
 11454                           ; BSR set to: 0
 11455  0039D8  A462               	btfss	3938,2,c	;volatile
 11456  0039DA  D006               	goto	l156
 11457                           
 11458                           ; BSR set to: 0
 11459  0039DC  010F               	movlb	15	; () banked
 11460  0039DE  A536               	btfss	54,2,b	;volatile
 11461  0039E0  D003               	goto	l156
 11462                           
 11463                           ; BSR set to: 15
 11464                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 11465  0039E2  9462               	bcf	3938,2,c	;volatile
 11466                           
 11467                           ; BSR set to: 15
 11468                           ;usb_device.c: 640: USBWakeFromSuspend();
 11469  0039E4  EC22  F04C         	call	_USBWakeFromSuspend	;wreg free
 11470  0039E8                     l156:
 11471                           
 11472                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 11473  0039E8  A265               	btfss	3941,1,c	;volatile
 11474  0039EA  D002               	goto	l157
 11475                           
 11476                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 11477  0039EC  98A1               	bcf	4001,4,c	;volatile
 11478                           
 11479                           ;usb_device.c: 650: return;
 11480  0039EE  0012               	return	
 11481  0039F0                     l157:
 11482                           
 11483                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11484  0039F0  A062               	btfss	3938,0,c	;volatile
 11485  0039F2  D009               	goto	l158
 11486  0039F4  010F               	movlb	15	; () banked
 11487  0039F6  A136               	btfss	54,0,b	;volatile
 11488  0039F8  D006               	goto	l158
 11489                           
 11490                           ; BSR set to: 15
 11491                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 11492  0039FA  ECDC  F025         	call	_USBDeviceInit	;wreg free
 11493                           
 11494                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11495  0039FE  0E04               	movlw	4
 11496  003A00  0100               	movlb	0	; () banked
 11497  003A02  6FFA               	movwf	_USBDeviceState& (0+255),b
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;usb_device.c: 681: (UIR &= 0xFE);
 11501  003A04  9062               	bcf	3938,0,c	;volatile
 11502  003A06                     l158:
 11503                           
 11504                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11505                           
 11506                           ; BSR set to: 0
 11507  003A06  A862               	btfss	3938,4,c	;volatile
 11508  003A08  D004               	goto	l159
 11509  003A0A  010F               	movlb	15	; () banked
 11510  003A0C  B936               	btfsc	54,4,b	;volatile
 11511                           
 11512                           ; BSR set to: 15
 11513                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11514  003A0E  EC24  F04D         	call	_USBSuspend	;wreg free
 11515  003A12                     l159:
 11516                           
 11517                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11518  003A12  AC62               	btfss	3938,6,c	;volatile
 11519  003A14  D01C               	goto	l163
 11520                           
 11521                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11522  003A16  010F               	movlb	15	; () banked
 11523  003A18  AD36               	btfss	54,6,b	;volatile
 11524  003A1A  D00E               	goto	l161
 11525                           
 11526                           ; BSR set to: 15
 11527                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11528  003A1C  0E00               	movlw	0
 11529  003A1E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11530  003A20  0E73               	movlw	115
 11531  003A22  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11532  003A24  0E00               	movlw	0
 11533  003A26  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11534  003A28  0E00               	movlw	0
 11535  003A2A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11536  003A2C  0E00               	movlw	0
 11537  003A2E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11538  003A30  0E01               	movlw	1
 11539  003A32  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11540  003A34  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11541  003A38                     l161:
 11542                           
 11543                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11544  003A38  9C62               	bcf	3938,6,c	;volatile
 11545                           
 11546                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11547  003A3A  EC17  F04F         	call	_USBIncrement1msInternalTimers	;wreg free
 11548                           
 11549                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11550  003A3E  0100               	movlb	0	; () banked
 11551  003A40  51F6               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11552  003A42  A4D8               	btfss	status,2,c
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11556  003A44  07F6               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11560                           
 11561                           ; BSR set to: 0
 11562  003A46  51F6               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11563  003A48  B4D8               	btfsc	status,2,c
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11567  003A4A  ECC1  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11568  003A4E                     l163:
 11569                           
 11570                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11571  003A4E  AA62               	btfss	3938,5,c	;volatile
 11572  003A50  D004               	goto	l164
 11573  003A52  010F               	movlb	15	; () banked
 11574  003A54  BB36               	btfsc	54,5,b	;volatile
 11575                           
 11576                           ; BSR set to: 15
 11577                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11578  003A56  ECE6  F04A         	call	_USBStallHandler	;wreg free
 11579  003A5A                     l164:
 11580                           
 11581                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11582  003A5A  A262               	btfss	3938,1,c	;volatile
 11583  003A5C  D012               	goto	l165
 11584  003A5E  010F               	movlb	15	; () banked
 11585  003A60  A336               	btfss	54,1,b	;volatile
 11586  003A62  D00F               	goto	l165
 11587                           
 11588                           ; BSR set to: 15
 11589                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11590  003A64  0E7F               	movlw	127
 11591  003A66  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11592  003A68  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11593  003A6A  0E00               	movlw	0
 11594  003A6C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11595  003A6E  0E00               	movlw	0
 11596  003A70  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11597  003A72  0E00               	movlw	0
 11598  003A74  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11599  003A76  0E01               	movlw	1
 11600  003A78  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11601  003A7A  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11602                           
 11603                           ;usb_device.c: 759: {UEIR = 0;};
 11604  003A7E  0E00               	movlw	0
 11605  003A80  6E63               	movwf	3939,c	;volatile
 11606  003A82                     l165:
 11607                           
 11608                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11609  003A82  0E04               	movlw	4
 11610  003A84  0100               	movlb	0	; () banked
 11611  003A86  61FA               	cpfslt	_USBDeviceState& (0+255),b
 11612  003A88  D002               	goto	l166
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11616  003A8A  98A1               	bcf	4001,4,c	;volatile
 11617                           
 11618                           ;usb_device.c: 777: return;
 11619  003A8C  0012               	return	
 11620  003A8E                     l166:
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11624  003A8E  010F               	movlb	15	; () banked
 11625  003A90  A736               	btfss	54,3,b	;volatile
 11626  003A92  D03C               	goto	u14310
 11627                           
 11628                           ; BSR set to: 15
 11629                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11630  003A94  0E00               	movlw	0
 11631  003A96  6E20               	movwf	USBDeviceTasks@i,c
 11632  003A98                     l16527:
 11633                           
 11634                           ; BSR set to: 15
 11635  003A98  0E03               	movlw	3
 11636  003A9A  6420               	cpfsgt	USBDeviceTasks@i,c
 11637  003A9C  D001               	goto	l168
 11638  003A9E  D036               	goto	u14310
 11639  003AA0                     l168:
 11640                           
 11641                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11642  003AA0  A662               	btfss	3938,3,c	;volatile
 11643  003AA2  D034               	goto	u14310
 11644                           
 11645                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11646  003AA4  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11647                           
 11648                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11649  003AA8  0100               	movlb	0	; () banked
 11650  003AAA  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11651  003AAC  32E8               	rrcf	wreg,f,c
 11652  003AAE  32E8               	rrcf	wreg,f,c
 11653  003AB0  0B0F               	andlw	15
 11654  003AB2  6FF7               	movwf	_endpoint_number& (0+255),b
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;usb_device.c: 793: (UIR &= 0xF7);
 11658  003AB4  9662               	bcf	3938,3,c	;volatile
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11662  003AB6  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11663  003AB8  D007               	goto	l171
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11667  003ABA  51F7               	movf	_endpoint_number& (0+255),w,b
 11668  003ABC  0D01               	mullw	1
 11669  003ABE  0E65               	movlw	low _ep_data_out
 11670  003AC0  24F3               	addwf	prodl,w,c
 11671  003AC2  6ED9               	movwf	fsr2l,c
 11672  003AC4  0E01               	movlw	high _ep_data_out
 11673  003AC6  D007               	goto	L5
 11674  003AC8                     l171:
 11675                           
 11676                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11677                           
 11678                           ; BSR set to: 1
 11679  003AC8  0100               	movlb	0	; () banked
 11680  003ACA  51F7               	movf	_endpoint_number& (0+255),w,b
 11681  003ACC  0D01               	mullw	1
 11682  003ACE  0E68               	movlw	low _ep_data_in
 11683  003AD0  24F3               	addwf	prodl,w,c
 11684  003AD2  6ED9               	movwf	fsr2l,c
 11685  003AD4  0E01               	movlw	high _ep_data_in
 11686  003AD6                     L5:
 11687  003AD6  20F4               	addwfc	prodh,w,c
 11688  003AD8  6EDA               	movwf	fsr2h,c
 11689  003ADA  0101               	movlb	1	; () banked
 11690  003ADC  70DF               	btg	indf2,0,c
 11691                           
 11692                           ; BSR set to: 1
 11693                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11694                           
 11695                           ; BSR set to: 1
 11696  003ADE  0100               	movlb	0	; () banked
 11697  003AE0  51F7               	movf	_endpoint_number& (0+255),w,b
 11698  003AE2  A4D8               	btfss	status,2,c
 11699  003AE4  D003               	goto	l173
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11703  003AE6  EC24  F03C         	call	_USBCtrlEPService	;wreg free
 11704                           
 11705                           ;usb_device.c: 813: }
 11706  003AEA  D00E               	goto	l175
 11707  003AEC                     l173:
 11708                           
 11709                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11710  003AEC  0E00               	movlw	0
 11711  003AEE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11712  003AF0  0E72               	movlw	114
 11713  003AF2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11714  003AF4  0EFD               	movlw	low _USTATcopy
 11715  003AF6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11716  003AF8  0E00               	movlw	high _USTATcopy
 11717  003AFA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11718  003AFC  0E00               	movlw	0
 11719  003AFE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11720  003B00  0E00               	movlw	0
 11721  003B02  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11722  003B04  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11723  003B08                     l175:
 11724  003B08  2A20               	incf	USBDeviceTasks@i,f,c
 11725  003B0A  D7C6               	goto	l16527
 11726  003B0C                     u14310:
 11727                           
 11728                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11729  003B0C  98A1               	bcf	4001,4,c	;volatile
 11730  003B0E  0012               	return		;funcret
 11731  003B10                     __end_of_USBDeviceTasks:
 11732                           	opt stack 0
 11733                           tblptru	equ	0xFF8
 11734                           tblptrh	equ	0xFF7
 11735                           tblptrl	equ	0xFF6
 11736                           tablat	equ	0xFF5
 11737                           prodh	equ	0xFF4
 11738                           prodl	equ	0xFF3
 11739                           intcon	equ	0xFF2
 11740                           intcon2	equ	0xFF1
 11741                           intcon3	equ	0xFF0
 11742                           postinc0	equ	0xFEE
 11743                           wreg	equ	0xFE8
 11744                           indf1	equ	0xFE7
 11745                           postdec1	equ	0xFE5
 11746                           plusw1	equ	0xFE3
 11747                           fsr1h	equ	0xFE2
 11748                           fsr1l	equ	0xFE1
 11749                           indf2	equ	0xFDF
 11750                           postinc2	equ	0xFDE
 11751                           postdec2	equ	0xFDD
 11752                           plusw2	equ	0xFDB
 11753                           fsr2h	equ	0xFDA
 11754                           fsr2l	equ	0xFD9
 11755                           status	equ	0xFD8
 11756                           
 11757 ;; *************** function _USBWakeFromSuspend *****************
 11758 ;; Defined at:
 11759 ;;		line 2305 in file "usb_device.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11777 ;;Total ram usage:        0 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    4
 11780 ;; This function calls:
 11781 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11782 ;; This function is called by:
 11783 ;;		_USBDeviceTasks
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text52
 11788  009844                     __ptext52:
 11789                           	opt stack 0
 11790  009844                     _USBWakeFromSuspend:
 11791                           	opt stack 25
 11792                           
 11793                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11794                           
 11795                           ;incstack = 0
 11796  009844  0E00               	movlw	0
 11797  009846  0101               	movlb	1	; () banked
 11798  009848  6F8B               	movwf	_USBBusIsSuspended& (0+255),b
 11799                           
 11800                           ; BSR set to: 1
 11801                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11802  00984A  0E00               	movlw	0
 11803  00984C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11804  00984E  0E74               	movlw	116
 11805  009850  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11806  009852  0E00               	movlw	0
 11807  009854  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11808  009856  0E00               	movlw	0
 11809  009858  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11810  00985A  0E00               	movlw	0
 11811  00985C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11812  00985E  0E00               	movlw	0
 11813  009860  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11814  009862  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11815                           
 11816                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11817  009866  9265               	bcf	3941,1,c	;volatile
 11818                           
 11819                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11820  009868  010F               	movlb	15	; () banked
 11821  00986A  9536               	bcf	54,2,b	;volatile
 11822                           
 11823                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11824  00986C  D001               	goto	l303
 11825  00986E                     
 11826                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11827                           
 11828                           ; BSR set to: 15
 11829  00986E  9462               	bcf	3938,2,c	;volatile
 11830  009870                     l303:
 11831  009870  B462               	btfsc	3938,2,c	;volatile
 11832  009872  D7FD               	goto	l304
 11833                           
 11834                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11835  009874  0E00               	movlw	0
 11836  009876  0101               	movlb	1	; () banked
 11837  009878  6F89               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11838                           
 11839                           ; BSR set to: 1
 11840  00987A  0012               	return		;funcret
 11841  00987C                     __end_of_USBWakeFromSuspend:
 11842                           	opt stack 0
 11843                           tblptru	equ	0xFF8
 11844                           tblptrh	equ	0xFF7
 11845                           tblptrl	equ	0xFF6
 11846                           tablat	equ	0xFF5
 11847                           prodh	equ	0xFF4
 11848                           prodl	equ	0xFF3
 11849                           intcon	equ	0xFF2
 11850                           intcon2	equ	0xFF1
 11851                           intcon3	equ	0xFF0
 11852                           postinc0	equ	0xFEE
 11853                           wreg	equ	0xFE8
 11854                           indf1	equ	0xFE7
 11855                           postdec1	equ	0xFE5
 11856                           plusw1	equ	0xFE3
 11857                           fsr1h	equ	0xFE2
 11858                           fsr1l	equ	0xFE1
 11859                           indf2	equ	0xFDF
 11860                           postinc2	equ	0xFDE
 11861                           postdec2	equ	0xFDD
 11862                           plusw2	equ	0xFDB
 11863                           fsr2h	equ	0xFDA
 11864                           fsr2l	equ	0xFD9
 11865                           status	equ	0xFD8
 11866                           
 11867 ;; *************** function _USBSuspend *****************
 11868 ;; Defined at:
 11869 ;;		line 2247 in file "usb_device.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;		None
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;		None
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  1    wreg      void 
 11876 ;; Registers used:
 11877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11887 ;;Total ram usage:        0 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:    4
 11890 ;; This function calls:
 11891 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11892 ;; This function is called by:
 11893 ;;		_USBDeviceTasks
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897                           	psect	text53
 11898  009A48                     __ptext53:
 11899                           	opt stack 0
 11900  009A48                     _USBSuspend:
 11901                           	opt stack 25
 11902                           
 11903                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11904                           
 11905                           ; BSR set to: 1
 11906                           ;incstack = 0
 11907  009A48  010F               	movlb	15	; () banked
 11908  009A4A  8536               	bsf	54,2,b	;volatile
 11909                           
 11910                           ; BSR set to: 15
 11911                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11912  009A4C  9862               	bcf	3938,4,c	;volatile
 11913                           
 11914                           ; BSR set to: 15
 11915                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11916  009A4E  8265               	bsf	3941,1,c	;volatile
 11917                           
 11918                           ; BSR set to: 15
 11919                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11920  009A50  0E01               	movlw	1
 11921  009A52  0101               	movlb	1	; () banked
 11922  009A54  6F8B               	movwf	_USBBusIsSuspended& (0+255),b
 11923                           
 11924                           ; BSR set to: 1
 11925                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11926  009A56  0E00               	movlw	0
 11927  009A58  6F89               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11928                           
 11929                           ; BSR set to: 1
 11930                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11931  009A5A  0E00               	movlw	0
 11932  009A5C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11933  009A5E  0E75               	movlw	117
 11934  009A60  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11935  009A62  0E00               	movlw	0
 11936  009A64  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11937  009A66  0E00               	movlw	0
 11938  009A68  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11939  009A6A  0E00               	movlw	0
 11940  009A6C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11941  009A6E  0E00               	movlw	0
 11942  009A70  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11943  009A72  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11944  009A76  0012               	return		;funcret
 11945  009A78                     __end_of_USBSuspend:
 11946                           	opt stack 0
 11947                           tblptru	equ	0xFF8
 11948                           tblptrh	equ	0xFF7
 11949                           tblptrl	equ	0xFF6
 11950                           tablat	equ	0xFF5
 11951                           prodh	equ	0xFF4
 11952                           prodl	equ	0xFF3
 11953                           intcon	equ	0xFF2
 11954                           intcon2	equ	0xFF1
 11955                           intcon3	equ	0xFF0
 11956                           postinc0	equ	0xFEE
 11957                           wreg	equ	0xFE8
 11958                           indf1	equ	0xFE7
 11959                           postdec1	equ	0xFE5
 11960                           plusw1	equ	0xFE3
 11961                           fsr1h	equ	0xFE2
 11962                           fsr1l	equ	0xFE1
 11963                           indf2	equ	0xFDF
 11964                           postinc2	equ	0xFDE
 11965                           postdec2	equ	0xFDD
 11966                           plusw2	equ	0xFDB
 11967                           fsr2h	equ	0xFDA
 11968                           fsr2l	equ	0xFD9
 11969                           status	equ	0xFD8
 11970                           
 11971 ;; *************** function _USBStallHandler *****************
 11972 ;; Defined at:
 11973 ;;		line 2204 in file "usb_device.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;		None
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;		None
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      void 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11991 ;;Total ram usage:        1 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; This function calls:
 11994 ;;		Nothing
 11995 ;; This function is called by:
 11996 ;;		_USBDeviceTasks
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           	psect	text54
 12001  0095CC                     __ptext54:
 12002                           	opt stack 0
 12003  0095CC                     _USBStallHandler:
 12004                           	opt stack 29
 12005                           
 12006                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 12007                           
 12008                           ;incstack = 0
 12009  0095CC  010F               	movlb	15	; () banked
 12010  0095CE  A126               	btfss	38,0,b	;volatile
 12011  0095D0  D01D               	goto	l295
 12012                           
 12013                           ; BSR set to: 15
 12014                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 12015  0095D2  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12016  0095D6  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12017  0095DA  0E80               	movlw	128
 12018  0095DC  18DE               	xorwf	postinc2,w,c
 12019  0095DE  A4D8               	btfss	status,2,c
 12020  0095E0  D014               	goto	l296
 12021                           
 12022                           ; BSR set to: 15
 12023  0095E2  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 12024  0095E6  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12025  0095EA  0E84               	movlw	132
 12026  0095EC  18DE               	xorwf	postinc2,w,c
 12027  0095EE  A4D8               	btfss	status,2,c
 12028  0095F0  D00C               	goto	l296
 12029                           
 12030                           ; BSR set to: 15
 12031                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 12032  0095F2  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12033  0095F6  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12034  0095FA  0E0C               	movlw	12
 12035  0095FC  6EDF               	movwf	indf2,c
 12036                           
 12037                           ; BSR set to: 15
 12038                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12039  0095FE  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12040  009602  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12041  009606  0E00               	movlw	0
 12042  009608  8EDB               	bsf	plusw2,7,c
 12043  00960A                     l296:
 12044                           
 12045                           ; BSR set to: 15
 12046                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 12047                           
 12048                           ; BSR set to: 15
 12049  00960A  9126               	bcf	38,0,b	;volatile
 12050  00960C                     l295:
 12051                           
 12052                           ; BSR set to: 15
 12053                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 12054  00960C  9A62               	bcf	3938,5,c	;volatile
 12055                           
 12056                           ; BSR set to: 15
 12057  00960E  0012               	return		;funcret
 12058  009610                     __end_of_USBStallHandler:
 12059                           	opt stack 0
 12060                           tblptru	equ	0xFF8
 12061                           tblptrh	equ	0xFF7
 12062                           tblptrl	equ	0xFF6
 12063                           tablat	equ	0xFF5
 12064                           prodh	equ	0xFF4
 12065                           prodl	equ	0xFF3
 12066                           intcon	equ	0xFF2
 12067                           intcon2	equ	0xFF1
 12068                           intcon3	equ	0xFF0
 12069                           postinc0	equ	0xFEE
 12070                           wreg	equ	0xFE8
 12071                           indf1	equ	0xFE7
 12072                           postdec1	equ	0xFE5
 12073                           plusw1	equ	0xFE3
 12074                           fsr1h	equ	0xFE2
 12075                           fsr1l	equ	0xFE1
 12076                           indf2	equ	0xFDF
 12077                           postinc2	equ	0xFDE
 12078                           postdec2	equ	0xFDD
 12079                           plusw2	equ	0xFDB
 12080                           fsr2h	equ	0xFDA
 12081                           fsr2l	equ	0xFD9
 12082                           status	equ	0xFD8
 12083                           
 12084 ;; *************** function _USBIncrement1msInternalTimers *****************
 12085 ;; Defined at:
 12086 ;;		line 3027 in file "usb_device.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;		None
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;		None
 12091 ;; Return value:  Size  Location     Type
 12092 ;;                  1    wreg      void 
 12093 ;; Registers used:
 12094 ;;		wreg, status,2, status,0
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12104 ;;Total ram usage:        0 bytes
 12105 ;; Hardware stack levels used:    1
 12106 ;; This function calls:
 12107 ;;		Nothing
 12108 ;; This function is called by:
 12109 ;;		_USBDeviceTasks
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text55
 12114  009E2E                     __ptext55:
 12115                           	opt stack 0
 12116  009E2E                     _USBIncrement1msInternalTimers:
 12117                           	opt stack 29
 12118                           
 12119                           ;usb_device.c: 3035: USB1msTickCount++;
 12120                           
 12121                           ; BSR set to: 15
 12122                           ;incstack = 0
 12123  009E2E  0E01               	movlw	1
 12124  009E30  0101               	movlb	1	; () banked
 12125  009E32  275B               	addwf	_USB1msTickCount& (0+255),f,b
 12126  009E34  0E00               	movlw	0
 12127  009E36  235C               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 12128  009E38  235D               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 12129  009E3A  235E               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 12130                           
 12131                           ; BSR set to: 1
 12132                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 12133  009E3C  518B               	movf	_USBBusIsSuspended& (0+255),w,b
 12134  009E3E  A4D8               	btfss	status,2,c
 12135  009E40  0012               	return	
 12136                           
 12137                           ; BSR set to: 1
 12138                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 12139  009E42  2B89               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 12140                           
 12141                           ; BSR set to: 1
 12142                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 12143  009E44  5189               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 12144  009E46  A4D8               	btfss	status,2,c
 12145  009E48  0012               	return	
 12146                           
 12147                           ; BSR set to: 1
 12148                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 12149  009E4A  6989               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 12150                           
 12151                           ; BSR set to: 1
 12152  009E4C  0012               	return	
 12153  009E4E                     __end_of_USBIncrement1msInternalTimers:
 12154                           	opt stack 0
 12155                           tblptru	equ	0xFF8
 12156                           tblptrh	equ	0xFF7
 12157                           tblptrl	equ	0xFF6
 12158                           tablat	equ	0xFF5
 12159                           prodh	equ	0xFF4
 12160                           prodl	equ	0xFF3
 12161                           intcon	equ	0xFF2
 12162                           intcon2	equ	0xFF1
 12163                           intcon3	equ	0xFF0
 12164                           postinc0	equ	0xFEE
 12165                           wreg	equ	0xFE8
 12166                           indf1	equ	0xFE7
 12167                           postdec1	equ	0xFE5
 12168                           plusw1	equ	0xFE3
 12169                           fsr1h	equ	0xFE2
 12170                           fsr1l	equ	0xFE1
 12171                           indf2	equ	0xFDF
 12172                           postinc2	equ	0xFDE
 12173                           postdec2	equ	0xFDD
 12174                           plusw2	equ	0xFDB
 12175                           fsr2h	equ	0xFDA
 12176                           fsr2l	equ	0xFD9
 12177                           status	equ	0xFD8
 12178                           
 12179 ;; *************** function _USBDeviceInit *****************
 12180 ;; Defined at:
 12181 ;;		line 277 in file "usb_device.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;		None
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;  i               1    8[COMRAM] unsigned char 
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;Total ram usage:        1 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:    1
 12202 ;; This function calls:
 12203 ;;		_memset
 12204 ;; This function is called by:
 12205 ;;		_USBDeviceTasks
 12206 ;;		_main
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text56
 12211  004BB8                     __ptext56:
 12212                           	opt stack 0
 12213  004BB8                     _USBDeviceInit:
 12214                           	opt stack 28
 12215                           
 12216                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 12217                           
 12218                           ; BSR set to: 1
 12219                           ;incstack = 0
 12220  004BB8  98A0               	bcf	4000,4,c	;volatile
 12221                           
 12222                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 12223  004BBA  0E00               	movlw	0
 12224  004BBC  6E63               	movwf	3939,c	;volatile
 12225                           
 12226                           ;usb_device.c: 291: {UIR = 0;};
 12227  004BBE  0E00               	movlw	0
 12228  004BC0  6E62               	movwf	3938,c	;volatile
 12229                           
 12230                           ;usb_device.c: 294: UEP0 = 0;
 12231  004BC2  0E00               	movlw	0
 12232  004BC4  010F               	movlb	15	; () banked
 12233  004BC6  6F26               	movwf	38,b	;volatile
 12234                           
 12235                           ; BSR set to: 15
 12236                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 12237  004BC8  0E27               	movlw	39
 12238  004BCA  6E01               	movwf	memset@p1,c
 12239  004BCC  0E0F               	movlw	15
 12240  004BCE  6E02               	movwf	memset@p1+1,c
 12241  004BD0  0E00               	movlw	0
 12242  004BD2  6E04               	movwf	memset@c+1,c
 12243  004BD4  0E00               	movlw	0
 12244  004BD6  6E03               	movwf	memset@c,c
 12245  004BD8  0E00               	movlw	0
 12246  004BDA  6E06               	movwf	memset@n+1,c
 12247  004BDC  0E02               	movlw	2
 12248  004BDE  6E05               	movwf	memset@n,c
 12249  004BE0  ECAD  F04D         	call	_memset	;wreg free
 12250                           
 12251                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12252  004BE4  0E16               	movlw	22
 12253  004BE6  010F               	movlb	15	; () banked
 12254  004BE8  6F39               	movwf	57,b	;volatile
 12255                           
 12256                           ; BSR set to: 15
 12257  004BEA  0E9F               	movlw	159
 12258  004BEC  6F37               	movwf	55,b	;volatile
 12259                           
 12260                           ; BSR set to: 15
 12261  004BEE  0E7B               	movlw	123
 12262  004BF0  6F36               	movwf	54,b	;volatile
 12263                           
 12264                           ; BSR set to: 15
 12265                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 12266  004BF2  0E00               	movlw	0
 12267  004BF4  6E09               	movwf	USBDeviceInit@i,c
 12268  004BF6                     l15773:
 12269                           
 12270                           ; BSR set to: 15
 12271  004BF6  0E0B               	movlw	11
 12272  004BF8  6409               	cpfsgt	USBDeviceInit@i,c
 12273  004BFA  D001               	goto	l139
 12274  004BFC  D00E               	goto	u13330
 12275  004BFE                     l139:
 12276                           
 12277                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 12278                           
 12279                           ; BSR set to: 15
 12280  004BFE  5009               	movf	USBDeviceInit@i,w,c
 12281  004C00  0D04               	mullw	4
 12282  004C02  0E00               	movlw	0
 12283  004C04  24F3               	addwf	prodl,w,c
 12284  004C06  6ED9               	movwf	fsr2l,c
 12285  004C08  0E0D               	movlw	13
 12286  004C0A  20F4               	addwfc	prodh,w,c
 12287  004C0C  6EDA               	movwf	fsr2h,c
 12288  004C0E  6ADE               	clrf	postinc2,c
 12289  004C10  6ADE               	clrf	postinc2,c
 12290  004C12  6ADE               	clrf	postinc2,c
 12291  004C14  6ADD               	clrf	postdec2,c
 12292  004C16  2A09               	incf	USBDeviceInit@i,f,c
 12293  004C18  D7EE               	goto	l15773
 12294  004C1A                     u13330:
 12295                           
 12296                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 12297  004C1A  8C65               	bsf	3941,6,c	;volatile
 12298                           
 12299                           ;usb_device.c: 316: UADDR = 0x00;
 12300  004C1C  0E00               	movlw	0
 12301  004C1E  010F               	movlb	15	; () banked
 12302  004C20  6F38               	movwf	56,b	;volatile
 12303                           
 12304                           ; BSR set to: 15
 12305                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 12306  004C22  9865               	bcf	3941,4,c	;volatile
 12307                           
 12308                           ; BSR set to: 15
 12309                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 12310  004C24  9C65               	bcf	3941,6,c	;volatile
 12311  004C26                     
 12312                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 12313                           
 12314                           ; BSR set to: 15
 12315  004C26  9662               	bcf	3938,3,c	;volatile
 12316                           
 12317                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 12318  004C28  0E00               	movlw	0
 12319  004C2A  0100               	movlb	0	; () banked
 12320  004C2C  6FD1               	movwf	(_inPipes+3)& (0+255),b
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 12324  004C2E  0E00               	movlw	0
 12325  004C30  0101               	movlb	1	; () banked
 12326  004C32  6F34               	movwf	(_outPipes+3)& (0+255),b
 12327                           
 12328                           ; BSR set to: 1
 12329                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 12330  004C34  0E00               	movlw	0
 12331  004C36  6F36               	movwf	(_outPipes+5)& (0+255),b
 12332  004C38  0E00               	movlw	0
 12333  004C3A  6F35               	movwf	(_outPipes+4)& (0+255),b
 12334                           
 12335                           ; BSR set to: 1
 12336                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 12337  004C3C  B662               	btfsc	3938,3,c	;volatile
 12338  004C3E  D7F3               	goto	l141
 12339                           
 12340                           ; BSR set to: 1
 12341                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 12342                           
 12343                           ; BSR set to: 1
 12344  004C40  0E01               	movlw	1
 12345  004C42  0100               	movlb	0	; () banked
 12346  004C44  6FF4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12347                           
 12348                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 12349  004C46  0E01               	movlw	1
 12350  004C48  6FF3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12351                           
 12352                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 12353  004C4A  0E00               	movlw	0
 12354  004C4C  6FF2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12355                           
 12356                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 12357  004C4E  0E00               	movlw	0
 12358  004C50  6FF1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12359                           
 12360                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 12361  004C52  0E00               	movlw	0
 12362  004C54  0101               	movlb	1	; () banked
 12363  004C56  6F8B               	movwf	_USBBusIsSuspended& (0+255),b
 12364                           
 12365                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 12366  004C58  0E00               	movlw	0
 12367  004C5A  6E09               	movwf	USBDeviceInit@i,c
 12368  004C5C                     l15801:
 12369                           
 12370                           ; BSR set to: 1
 12371  004C5C  0E02               	movlw	2
 12372  004C5E  6409               	cpfsgt	USBDeviceInit@i,c
 12373  004C60  D001               	goto	l143
 12374  004C62  D02E               	goto	u13360
 12375  004C64                     l143:
 12376                           
 12377                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 12378                           
 12379                           ; BSR set to: 1
 12380  004C64  5009               	movf	USBDeviceInit@i,w,c
 12381  004C66  0D02               	mullw	2
 12382  004C68  0ED4               	movlw	low _pBDTEntryIn
 12383  004C6A  24F3               	addwf	prodl,w,c
 12384  004C6C  6ED9               	movwf	fsr2l,c
 12385  004C6E  0E00               	movlw	high _pBDTEntryIn
 12386  004C70  20F4               	addwfc	prodh,w,c
 12387  004C72  6EDA               	movwf	fsr2h,c
 12388  004C74  0E00               	movlw	0
 12389  004C76  6EDE               	movwf	postinc2,c
 12390  004C78  0E00               	movlw	0
 12391  004C7A  6EDD               	movwf	postdec2,c
 12392                           
 12393                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 12394  004C7C  5009               	movf	USBDeviceInit@i,w,c
 12395  004C7E  0D02               	mullw	2
 12396  004C80  0E39               	movlw	low _pBDTEntryOut
 12397  004C82  24F3               	addwf	prodl,w,c
 12398  004C84  6ED9               	movwf	fsr2l,c
 12399  004C86  0E01               	movlw	high _pBDTEntryOut
 12400  004C88  20F4               	addwfc	prodh,w,c
 12401  004C8A  6EDA               	movwf	fsr2h,c
 12402  004C8C  0E00               	movlw	0
 12403  004C8E  6EDE               	movwf	postinc2,c
 12404  004C90  0E00               	movlw	0
 12405  004C92  6EDD               	movwf	postdec2,c
 12406                           
 12407                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12408  004C94  5009               	movf	USBDeviceInit@i,w,c
 12409  004C96  0D01               	mullw	1
 12410  004C98  0E68               	movlw	low _ep_data_in
 12411  004C9A  24F3               	addwf	prodl,w,c
 12412  004C9C  6ED9               	movwf	fsr2l,c
 12413  004C9E  0E01               	movlw	high _ep_data_in
 12414  004CA0  20F4               	addwfc	prodh,w,c
 12415  004CA2  6EDA               	movwf	fsr2h,c
 12416  004CA4  0E00               	movlw	0
 12417  004CA6  6EDF               	movwf	indf2,c
 12418                           
 12419                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12420  004CA8  5009               	movf	USBDeviceInit@i,w,c
 12421  004CAA  0D01               	mullw	1
 12422  004CAC  0E65               	movlw	low _ep_data_out
 12423  004CAE  24F3               	addwf	prodl,w,c
 12424  004CB0  6ED9               	movwf	fsr2l,c
 12425  004CB2  0E01               	movlw	high _ep_data_out
 12426  004CB4  20F4               	addwfc	prodh,w,c
 12427  004CB6  6EDA               	movwf	fsr2h,c
 12428  004CB8  0E00               	movlw	0
 12429  004CBA  6EDF               	movwf	indf2,c
 12430  004CBC  2A09               	incf	USBDeviceInit@i,f,c
 12431  004CBE  D7CE               	goto	l15801
 12432  004CC0                     u13360:
 12433                           
 12434                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12435  004CC0  0E08               	movlw	8
 12436  004CC2  0100               	movlb	0	; () banked
 12437  004CC4  6FD4               	movwf	_pBDTEntryIn& (0+255),b
 12438  004CC6  0E0D               	movlw	13
 12439  004CC8  6FD5               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12443  004CCA  0E16               	movlw	22
 12444  004CCC  010F               	movlb	15	; () banked
 12445  004CCE  6F26               	movwf	38,b	;volatile
 12446                           
 12447                           ; BSR set to: 15
 12448                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12449  004CD0  0E0D               	movlw	13
 12450  004CD2  010D               	movlb	13	; () banked
 12451  004CD4  6F03               	movwf	3,b	;volatile
 12452  004CD6  0E30               	movlw	48
 12453  004CD8  6F02               	movwf	2,b	;volatile
 12454                           
 12455                           ; BSR set to: 13
 12456                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12457  004CDA  0E08               	movlw	8
 12458  004CDC  6F01               	movwf	1,b	;volatile
 12459                           
 12460                           ; BSR set to: 13
 12461                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12462  004CDE  0E04               	movlw	4
 12463  004CE0  6F00               	movwf	0,b	;volatile
 12464                           
 12465                           ; BSR set to: 13
 12466                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12467  004CE2  8F00               	bsf	0,7,b	;volatile
 12468                           
 12469                           ; BSR set to: 13
 12470                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12471  004CE4  0E00               	movlw	0
 12472  004CE6  0100               	movlb	0	; () banked
 12473  004CE8  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;usb_device.c: 366: USB1msTickCount = 0;
 12477  004CEA  0E00               	movlw	0
 12478  004CEC  0101               	movlb	1	; () banked
 12479  004CEE  6F5B               	movwf	_USB1msTickCount& (0+255),b
 12480  004CF0  0E00               	movlw	0
 12481  004CF2  6F5C               	movwf	(_USB1msTickCount+1)& (0+255),b
 12482  004CF4  0E00               	movlw	0
 12483  004CF6  6F5D               	movwf	(_USB1msTickCount+2)& (0+255),b
 12484  004CF8  0E00               	movlw	0
 12485  004CFA  6F5E               	movwf	(_USB1msTickCount+3)& (0+255),b
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12489  004CFC  0E00               	movlw	0
 12490  004CFE  6F89               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12491                           
 12492                           ; BSR set to: 1
 12493                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12494  004D00  0E00               	movlw	0
 12495  004D02  0100               	movlb	0	; () banked
 12496  004D04  6FFA               	movwf	_USBDeviceState& (0+255),b
 12497                           
 12498                           ; BSR set to: 0
 12499  004D06  0012               	return		;funcret
 12500  004D08                     __end_of_USBDeviceInit:
 12501                           	opt stack 0
 12502                           tblptru	equ	0xFF8
 12503                           tblptrh	equ	0xFF7
 12504                           tblptrl	equ	0xFF6
 12505                           tablat	equ	0xFF5
 12506                           prodh	equ	0xFF4
 12507                           prodl	equ	0xFF3
 12508                           intcon	equ	0xFF2
 12509                           intcon2	equ	0xFF1
 12510                           intcon3	equ	0xFF0
 12511                           postinc0	equ	0xFEE
 12512                           wreg	equ	0xFE8
 12513                           indf1	equ	0xFE7
 12514                           postdec1	equ	0xFE5
 12515                           plusw1	equ	0xFE3
 12516                           fsr1h	equ	0xFE2
 12517                           fsr1l	equ	0xFE1
 12518                           indf2	equ	0xFDF
 12519                           postinc2	equ	0xFDE
 12520                           postdec2	equ	0xFDD
 12521                           plusw2	equ	0xFDB
 12522                           fsr2h	equ	0xFDA
 12523                           fsr2l	equ	0xFD9
 12524                           status	equ	0xFD8
 12525                           
 12526 ;; *************** function _USBCtrlEPService *****************
 12527 ;; Defined at:
 12528 ;;		line 2374 in file "usb_device.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;		None
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;		None
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  1    wreg      void 
 12535 ;; Registers used:
 12536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12546 ;;Total ram usage:        2 bytes
 12547 ;; Hardware stack levels used:    1
 12548 ;; Hardware stack levels required when called:    7
 12549 ;; This function calls:
 12550 ;;		_USBCtrlTrfInHandler
 12551 ;;		_USBCtrlTrfOutHandler
 12552 ;;		_USBCtrlTrfSetupHandler
 12553 ;;		_memcpy
 12554 ;; This function is called by:
 12555 ;;		_USBDeviceTasks
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text57
 12560  007848                     __ptext57:
 12561                           	opt stack 0
 12562  007848                     _USBCtrlEPService:
 12563                           	opt stack 22
 12564                           
 12565                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;incstack = 0
 12569  007848  0E2D               	movlw	45
 12570  00784A  0100               	movlb	0	; () banked
 12571  00784C  6FF6               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12575  00784E  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12576  007852  0EFD               	movlw	253
 12577  007854  161E               	andwf	??_USBCtrlEPService,f,c
 12578  007856  A4D8               	btfss	status,2,c
 12579  007858  D044               	goto	l309
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12583  00785A  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12584  00785E  90D8               	bcf	status,0,c
 12585  007860  321E               	rrcf	??_USBCtrlEPService,f,c
 12586  007862  0E3F               	movlw	63
 12587  007864  161E               	andwf	??_USBCtrlEPService,f,c
 12588  007866  501E               	movf	??_USBCtrlEPService,w,c
 12589  007868  0D04               	mullw	4
 12590  00786A  0E00               	movlw	0
 12591  00786C  24F3               	addwf	prodl,w,c
 12592  00786E  6FE6               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12593  007870  0E0D               	movlw	13
 12594  007872  20F4               	addwfc	prodh,w,c
 12595  007874  6FE7               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12599  007876  C0E6  F0E4         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12600  00787A  C0E7  F0E5         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12604  00787E  0E04               	movlw	4
 12605  007880  19E4               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12606  007882  6FE4               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12607  007884  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12608  007886  6FE5               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12612  007888  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12613  00788C  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12614  007890  30DF               	rrcf	223,w,c
 12615  007892  32E8               	rrcf	wreg,f,c
 12616  007894  0B0F               	andlw	15
 12617  007896  0A0D               	xorlw	13
 12618  007898  A4D8               	btfss	status,2,c
 12619  00789A  D020               	goto	l310
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12623  00789C  0E30               	movlw	48
 12624  00789E  6E01               	movwf	memcpy@d1,c
 12625  0078A0  0E0D               	movlw	13
 12626  0078A2  6E02               	movwf	memcpy@d1+1,c
 12627  0078A4  EE20 F002          	lfsr	2,2
 12628  0078A8  51E6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12629  0078AA  26D9               	addwf	fsr2l,f,c
 12630  0078AC  51E7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12631  0078AE  22DA               	addwfc	fsr2h,f,c
 12632  0078B0  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12633  0078B4  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12634  0078B8  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12635  0078BC  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12636  0078C0  5003               	movf	memcpy@s1,w,c
 12637  0078C2  1004               	iorwf	memcpy@s1+1,w,c
 12638  0078C4  A4D8               	btfss	status,2,c
 12639  0078C6  0E20               	movlw	32
 12640  0078C8  6E05               	movwf	memcpy@s1+2,c
 12641  0078CA  0E00               	movlw	0
 12642  0078CC  6E07               	movwf	memcpy@n+1,c
 12643  0078CE  0E08               	movlw	8
 12644  0078D0  6E06               	movwf	memcpy@n,c
 12645  0078D2  ECE1  F045         	call	_memcpy	;wreg free
 12646                           
 12647                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12648  0078D6  EC99  F040         	call	_USBCtrlTrfSetupHandler	;wreg free
 12649                           
 12650                           ;usb_device.c: 2411: }
 12651  0078DA  0012               	return	
 12652  0078DC                     l310:
 12653                           
 12654                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12655  0078DC  EC7B  F045         	call	_USBCtrlTrfOutHandler	;wreg free
 12656                           
 12657                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12658  0078E0  0012               	return	
 12659  0078E2                     l309:
 12660                           
 12661                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12662  0078E2  0100               	movlb	0	; () banked
 12663  0078E4  51FD               	movf	_USTATcopy& (0+255),w,b
 12664  0078E6  0BFD               	andlw	253
 12665  0078E8  0A04               	xorlw	4
 12666  0078EA  A4D8               	btfss	status,2,c
 12667  0078EC  0012               	return	
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12671  0078EE  EC27  F036         	call	_USBCtrlTrfInHandler	;wreg free
 12672  0078F2  0012               	return	
 12673  0078F4                     __end_of_USBCtrlEPService:
 12674                           	opt stack 0
 12675                           tblptru	equ	0xFF8
 12676                           tblptrh	equ	0xFF7
 12677                           tblptrl	equ	0xFF6
 12678                           tablat	equ	0xFF5
 12679                           prodh	equ	0xFF4
 12680                           prodl	equ	0xFF3
 12681                           intcon	equ	0xFF2
 12682                           intcon2	equ	0xFF1
 12683                           intcon3	equ	0xFF0
 12684                           postinc0	equ	0xFEE
 12685                           wreg	equ	0xFE8
 12686                           indf1	equ	0xFE7
 12687                           postdec1	equ	0xFE5
 12688                           plusw1	equ	0xFE3
 12689                           fsr1h	equ	0xFE2
 12690                           fsr1l	equ	0xFE1
 12691                           indf2	equ	0xFDF
 12692                           postinc2	equ	0xFDE
 12693                           postdec2	equ	0xFDD
 12694                           plusw2	equ	0xFDB
 12695                           fsr2h	equ	0xFDA
 12696                           fsr2l	equ	0xFD9
 12697                           status	equ	0xFD8
 12698                           
 12699 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12700 ;; Defined at:
 12701 ;;		line 2467 in file "usb_device.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    6
 12722 ;; This function calls:
 12723 ;;		_USBCheckStdRequest
 12724 ;;		_USBCtrlEPServiceComplete
 12725 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12726 ;; This function is called by:
 12727 ;;		_USBCtrlEPService
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           	psect	text58
 12732  008132                     __ptext58:
 12733                           	opt stack 0
 12734  008132                     _USBCtrlTrfSetupHandler:
 12735                           	opt stack 22
 12736                           
 12737                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12738                           
 12739                           ;incstack = 0
 12740  008132  0E00               	movlw	0
 12741  008134  0100               	movlb	0	; () banked
 12742  008136  6FF9               	movwf	_shortPacketStatus& (0+255),b
 12743                           
 12744                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12745  008138  0E00               	movlw	0
 12746  00813A  6FF5               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12747                           
 12748                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12749  00813C  0E00               	movlw	0
 12750  00813E  6FF2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12751                           
 12752                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12753  008140  0E00               	movlw	0
 12754  008142  6FF1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12755                           
 12756                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12757  008144  0E00               	movlw	0
 12758  008146  0101               	movlb	1	; () banked
 12759  008148  6F8A               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12760                           
 12761                           ;usb_device.c: 2477: controlTransferState = 0;
 12762  00814A  0E00               	movlw	0
 12763  00814C  0100               	movlb	0	; () banked
 12764  00814E  6FF8               	movwf	_controlTransferState& (0+255),b
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12768  008150  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 12769  008154  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12770  008158  0E7F               	movlw	127
 12771  00815A  16DF               	andwf	indf2,f,c
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12775  00815C  0E04               	movlw	4
 12776  00815E  19D4               	xorwf	_pBDTEntryIn& (0+255),w,b
 12777  008160  6FD4               	movwf	_pBDTEntryIn& (0+255),b
 12778  008162  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12779  008164  6FD5               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12783  008166  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 12784  00816A  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12785  00816E  0E7F               	movlw	127
 12786  008170  16DF               	andwf	indf2,f,c
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12790  008172  0E04               	movlw	4
 12791  008174  19D4               	xorwf	_pBDTEntryIn& (0+255),w,b
 12792  008176  6FD4               	movwf	_pBDTEntryIn& (0+255),b
 12793  008178  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12794  00817A  6FD5               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12798  00817C  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12799  008180  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12800  008184  0E7F               	movlw	127
 12801  008186  16DF               	andwf	indf2,f,c
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12805  008188  0E00               	movlw	0
 12806  00818A  6FD1               	movwf	(_inPipes+3)& (0+255),b
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12810  00818C  0E00               	movlw	0
 12811  00818E  6FD3               	movwf	(_inPipes+5)& (0+255),b
 12812  008190  0E00               	movlw	0
 12813  008192  6FD2               	movwf	(_inPipes+4)& (0+255),b
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12817  008194  0E00               	movlw	0
 12818  008196  0101               	movlb	1	; () banked
 12819  008198  6F34               	movwf	(_outPipes+3)& (0+255),b
 12820                           
 12821                           ; BSR set to: 1
 12822                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12823  00819A  0E00               	movlw	0
 12824  00819C  6F36               	movwf	(_outPipes+5)& (0+255),b
 12825  00819E  0E00               	movlw	0
 12826  0081A0  6F35               	movwf	(_outPipes+4)& (0+255),b
 12827                           
 12828                           ; BSR set to: 1
 12829                           ;usb_device.c: 2502: USBCheckStdRequest();
 12830  0081A2  ECFF  F030         	call	_USBCheckStdRequest	;wreg free
 12831                           
 12832                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12833  0081A6  0E00               	movlw	0
 12834  0081A8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12835  0081AA  0E03               	movlw	3
 12836  0081AC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12837  0081AE  0E00               	movlw	0
 12838  0081B0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12839  0081B2  0E00               	movlw	0
 12840  0081B4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12841  0081B6  0E00               	movlw	0
 12842  0081B8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12843  0081BA  0E00               	movlw	0
 12844  0081BC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12845  0081BE  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12846                           
 12847                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12848  0081C2  EC97  F02D         	call	_USBCtrlEPServiceComplete	;wreg free
 12849  0081C6  0012               	return		;funcret
 12850  0081C8                     __end_of_USBCtrlTrfSetupHandler:
 12851                           	opt stack 0
 12852                           tblptru	equ	0xFF8
 12853                           tblptrh	equ	0xFF7
 12854                           tblptrl	equ	0xFF6
 12855                           tablat	equ	0xFF5
 12856                           prodh	equ	0xFF4
 12857                           prodl	equ	0xFF3
 12858                           intcon	equ	0xFF2
 12859                           intcon2	equ	0xFF1
 12860                           intcon3	equ	0xFF0
 12861                           postinc0	equ	0xFEE
 12862                           wreg	equ	0xFE8
 12863                           indf1	equ	0xFE7
 12864                           postdec1	equ	0xFE5
 12865                           plusw1	equ	0xFE3
 12866                           fsr1h	equ	0xFE2
 12867                           fsr1l	equ	0xFE1
 12868                           indf2	equ	0xFDF
 12869                           postinc2	equ	0xFDE
 12870                           postdec2	equ	0xFDD
 12871                           plusw2	equ	0xFDB
 12872                           fsr2h	equ	0xFDA
 12873                           fsr2l	equ	0xFD9
 12874                           status	equ	0xFD8
 12875                           
 12876 ;; *************** function _USBCtrlEPServiceComplete *****************
 12877 ;; Defined at:
 12878 ;;		line 1618 in file "usb_device.c"
 12879 ;; Parameters:    Size  Location     Type
 12880 ;;		None
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;		None
 12883 ;; Return value:  Size  Location     Type
 12884 ;;                  1    wreg      void 
 12885 ;; Registers used:
 12886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12896 ;;Total ram usage:        0 bytes
 12897 ;; Hardware stack levels used:    1
 12898 ;; Hardware stack levels required when called:    2
 12899 ;; This function calls:
 12900 ;;		_USBCtrlEPAllowDataStage
 12901 ;;		_USBCtrlEPAllowStatusStage
 12902 ;; This function is called by:
 12903 ;;		_USBCtrlTrfSetupHandler
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           	psect	text59
 12908  005B2E                     __ptext59:
 12909                           	opt stack 0
 12910  005B2E                     _USBCtrlEPServiceComplete:
 12911                           	opt stack 25
 12912                           
 12913                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12914                           
 12915                           ;incstack = 0
 12916  005B2E  9865               	bcf	3941,4,c	;volatile
 12917                           
 12918                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12919  005B30  0100               	movlb	0	; () banked
 12920  005B32  BFD1               	btfsc	(_inPipes+3)& (0+255),7,b
 12921  005B34  D03C               	goto	l219
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12925  005B36  0101               	movlb	1	; () banked
 12926  005B38  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12927  005B3A  D00D               	goto	l220
 12928                           
 12929                           ; BSR set to: 1
 12930                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12931  005B3C  0E02               	movlw	2
 12932  005B3E  0100               	movlb	0	; () banked
 12933  005B40  6FF8               	movwf	_controlTransferState& (0+255),b
 12934                           
 12935                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12936  005B42  51F1               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12937  005B44  B4D8               	btfsc	status,2,c
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12941  005B46  EC0F  F03F         	call	_USBCtrlEPAllowDataStage	;wreg free
 12942                           
 12943                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12944  005B4A  0E00               	movlw	0
 12945  005B4C  0100               	movlb	0	; () banked
 12946  005B4E  6FF3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12950  005B50  0E00               	movlw	0
 12951  005B52  6FF4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12952                           
 12953                           ;usb_device.c: 1654: }
 12954  005B54  0012               	return	
 12955  005B56                     l220:
 12956                           
 12957                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12958                           
 12959                           ; BSR set to: 0
 12960  005B56  0100               	movlb	0	; () banked
 12961  005B58  EE20 F001          	lfsr	2,1
 12962  005B5C  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12963  005B5E  26D9               	addwf	fsr2l,f,c
 12964  005B60  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12965  005B62  22DA               	addwfc	fsr2h,f,c
 12966  005B64  0E08               	movlw	8
 12967  005B66  6EDF               	movwf	indf2,c
 12968                           
 12969                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12970  005B68  EE20 F002          	lfsr	2,2
 12971  005B6C  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12972  005B6E  26D9               	addwf	fsr2l,f,c
 12973  005B70  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12974  005B72  22DA               	addwfc	fsr2h,f,c
 12975  005B74  0E30               	movlw	48
 12976  005B76  6EDE               	movwf	postinc2,c
 12977  005B78  0E0D               	movlw	13
 12978  005B7A  6EDD               	movwf	postdec2,c
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12982  005B7C  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12983  005B80  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12984  005B84  0E0C               	movlw	12
 12985  005B86  6EDF               	movwf	indf2,c
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12989  005B88  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12990  005B8C  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12991  005B90  0E00               	movlw	0
 12992  005B92  8EDB               	bsf	plusw2,7,c
 12993                           
 12994                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12995  005B94  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 12996  005B98  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12997  005B9C  0E04               	movlw	4
 12998  005B9E  6EDF               	movwf	indf2,c
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13002  005BA0  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 13003  005BA4  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13004  005BA8  0E00               	movlw	0
 13005  005BAA  8EDB               	bsf	plusw2,7,c
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 13009  005BAC  0012               	return	
 13010  005BAE                     l219:
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 13014  005BAE  010D               	movlb	13	; () banked
 13015  005BB0  AF30               	btfss	48,7,b	;volatile
 13016  005BB2  D012               	goto	l224
 13017                           
 13018                           ; BSR set to: 13
 13019                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 13020  005BB4  0E01               	movlw	1
 13021  005BB6  0100               	movlb	0	; () banked
 13022  005BB8  6FF8               	movwf	_controlTransferState& (0+255),b
 13023                           
 13024                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 13025  005BBA  51F2               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 13026  005BBC  B4D8               	btfsc	status,2,c
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 13030  005BBE  EC0F  F03F         	call	_USBCtrlEPAllowDataStage	;wreg free
 13031                           
 13032                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 13033  005BC2  0E00               	movlw	0
 13034  005BC4  0100               	movlb	0	; () banked
 13035  005BC6  6FF3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 13039  005BC8  0E00               	movlw	0
 13040  005BCA  6FF4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 13044  005BCC  51F5               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13045  005BCE  A4D8               	btfss	status,2,c
 13046  005BD0  0012               	return	
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 13050  005BD2  ECC1  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13051                           
 13052                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 13053  005BD6  0012               	return	
 13054  005BD8                     l224:
 13055                           
 13056                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 13057  005BD8  0E02               	movlw	2
 13058  005BDA  0100               	movlb	0	; () banked
 13059  005BDC  6FF8               	movwf	_controlTransferState& (0+255),b
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 13063  005BDE  EE20 F001          	lfsr	2,1
 13064  005BE2  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13065  005BE4  26D9               	addwf	fsr2l,f,c
 13066  005BE6  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13067  005BE8  22DA               	addwfc	fsr2h,f,c
 13068  005BEA  0E08               	movlw	8
 13069  005BEC  6EDF               	movwf	indf2,c
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13073  005BEE  EE20 F002          	lfsr	2,2
 13074  005BF2  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13075  005BF4  26D9               	addwf	fsr2l,f,c
 13076  005BF6  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13077  005BF8  22DA               	addwfc	fsr2h,f,c
 13078  005BFA  0E30               	movlw	48
 13079  005BFC  6EDE               	movwf	postinc2,c
 13080  005BFE  0E0D               	movlw	13
 13081  005C00  6EDD               	movwf	postdec2,c
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13085  005C02  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13086  005C06  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13087  005C0A  0E04               	movlw	4
 13088  005C0C  6EDF               	movwf	indf2,c
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13092  005C0E  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13093  005C12  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13094  005C16  0E00               	movlw	0
 13095  005C18  8EDB               	bsf	plusw2,7,c
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 13099  005C1A  0E00               	movlw	0
 13100  005C1C  6FF3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 13104  005C1E  0E00               	movlw	0
 13105  005C20  6FF4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 13109  005C22  51F5               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13110  005C24  A4D8               	btfss	status,2,c
 13111  005C26  0012               	return	
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 13115  005C28  ECC1  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13116  005C2C  0012               	return	
 13117  005C2E                     __end_of_USBCtrlEPServiceComplete:
 13118                           	opt stack 0
 13119                           tblptru	equ	0xFF8
 13120                           tblptrh	equ	0xFF7
 13121                           tblptrl	equ	0xFF6
 13122                           tablat	equ	0xFF5
 13123                           prodh	equ	0xFF4
 13124                           prodl	equ	0xFF3
 13125                           intcon	equ	0xFF2
 13126                           intcon2	equ	0xFF1
 13127                           intcon3	equ	0xFF0
 13128                           postinc0	equ	0xFEE
 13129                           wreg	equ	0xFE8
 13130                           indf1	equ	0xFE7
 13131                           postdec1	equ	0xFE5
 13132                           plusw1	equ	0xFE3
 13133                           fsr1h	equ	0xFE2
 13134                           fsr1l	equ	0xFE1
 13135                           indf2	equ	0xFDF
 13136                           postinc2	equ	0xFDE
 13137                           postdec2	equ	0xFDD
 13138                           plusw2	equ	0xFDB
 13139                           fsr2h	equ	0xFDA
 13140                           fsr2l	equ	0xFD9
 13141                           status	equ	0xFD8
 13142                           
 13143 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13144 ;; Defined at:
 13145 ;;		line 1490 in file "usb_device.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;		None
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;		None
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  1    wreg      void 
 13152 ;; Registers used:
 13153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13163 ;;Total ram usage:        0 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:    1
 13166 ;; This function calls:
 13167 ;;		_USBCtrlTrfTxService
 13168 ;; This function is called by:
 13169 ;;		_USBCtrlEPServiceComplete
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text60
 13174  007E1E                     __ptext60:
 13175                           	opt stack 0
 13176  007E1E                     _USBCtrlEPAllowDataStage:
 13177                           	opt stack 25
 13178                           
 13179                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 13180                           
 13181                           ;incstack = 0
 13182  007E1E  0E00               	movlw	0
 13183  007E20  0100               	movlb	0	; () banked
 13184  007E22  6FF2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13185                           
 13186                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 13187  007E24  0E00               	movlw	0
 13188  007E26  6FF1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;usb_device.c: 1495: if(controlTransferState == 2)
 13192  007E28  0E02               	movlw	2
 13193  007E2A  19F8               	xorwf	_controlTransferState& (0+255),w,b
 13194  007E2C  A4D8               	btfss	status,2,c
 13195  007E2E  D01F               	goto	l208
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 13199  007E30  EE20 F001          	lfsr	2,1
 13200  007E34  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13201  007E36  26D9               	addwf	fsr2l,f,c
 13202  007E38  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13203  007E3A  22DA               	addwfc	fsr2h,f,c
 13204  007E3C  0E08               	movlw	8
 13205  007E3E  6EDF               	movwf	indf2,c
 13206                           
 13207                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13208  007E40  EE20 F002          	lfsr	2,2
 13209  007E44  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13210  007E46  26D9               	addwf	fsr2l,f,c
 13211  007E48  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13212  007E4A  22DA               	addwfc	fsr2h,f,c
 13213  007E4C  0E38               	movlw	56
 13214  007E4E  6EDE               	movwf	postinc2,c
 13215  007E50  0E0D               	movlw	13
 13216  007E52  6EDD               	movwf	postdec2,c
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13220  007E54  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13221  007E58  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13222  007E5C  0E48               	movlw	72
 13223  007E5E  6EDF               	movwf	indf2,c
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13227  007E60  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13228  007E64  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13229  007E68  0E00               	movlw	0
 13230  007E6A  8EDB               	bsf	plusw2,7,c
 13231                           
 13232                           ;usb_device.c: 1502: }
 13233  007E6C  0012               	return	
 13234  007E6E                     l208:
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 13238                           
 13239                           ; BSR set to: 0
 13240  007E6E  51D2               	movf	(_inPipes+4)& (0+255),w,b
 13241  007E70  010D               	movlb	13	; () banked
 13242  007E72  5D36               	subwf	54,w,b	;volatile
 13243  007E74  0100               	movlb	0	; () banked
 13244  007E76  51D3               	movf	(_inPipes+5)& (0+255),w,b
 13245  007E78  010D               	movlb	13	; () banked
 13246  007E7A  5937               	subwfb	55,w,b	;volatile
 13247  007E7C  B0D8               	btfsc	status,0,c
 13248  007E7E  D004               	goto	l210
 13249                           
 13250                           ; BSR set to: 13
 13251                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 13252  007E80  CD36 F0D2          	movff	3382,_inPipes+4	;volatile
 13253  007E84  CD37 F0D3          	movff	3383,_inPipes+5	;volatile
 13254  007E88                     l210:
 13255                           
 13256                           ; BSR set to: 13
 13257                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 13258                           
 13259                           ; BSR set to: 13
 13260  007E88  ECF0  F034         	call	_USBCtrlTrfTxService	;wreg free
 13261                           
 13262                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13263  007E8C  0100               	movlb	0	; () banked
 13264  007E8E  EE20 F002          	lfsr	2,2
 13265  007E92  51D4               	movf	_pBDTEntryIn& (0+255),w,b
 13266  007E94  26D9               	addwf	fsr2l,f,c
 13267  007E96  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13268  007E98  22DA               	addwfc	fsr2h,f,c
 13269  007E9A  0E38               	movlw	56
 13270  007E9C  6EDE               	movwf	postinc2,c
 13271  007E9E  0E0D               	movlw	13
 13272  007EA0  6EDD               	movwf	postdec2,c
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13276  007EA2  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 13277  007EA6  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13278  007EAA  0E48               	movlw	72
 13279  007EAC  6EDF               	movwf	indf2,c
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13283  007EAE  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 13284  007EB2  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13285  007EB6  0E00               	movlw	0
 13286  007EB8  8EDB               	bsf	plusw2,7,c
 13287  007EBA  0012               	return	
 13288  007EBC                     __end_of_USBCtrlEPAllowDataStage:
 13289                           	opt stack 0
 13290                           tblptru	equ	0xFF8
 13291                           tblptrh	equ	0xFF7
 13292                           tblptrl	equ	0xFF6
 13293                           tablat	equ	0xFF5
 13294                           prodh	equ	0xFF4
 13295                           prodl	equ	0xFF3
 13296                           intcon	equ	0xFF2
 13297                           intcon2	equ	0xFF1
 13298                           intcon3	equ	0xFF0
 13299                           postinc0	equ	0xFEE
 13300                           wreg	equ	0xFE8
 13301                           indf1	equ	0xFE7
 13302                           postdec1	equ	0xFE5
 13303                           plusw1	equ	0xFE3
 13304                           fsr1h	equ	0xFE2
 13305                           fsr1l	equ	0xFE1
 13306                           indf2	equ	0xFDF
 13307                           postinc2	equ	0xFDE
 13308                           postdec2	equ	0xFDD
 13309                           plusw2	equ	0xFDB
 13310                           fsr2h	equ	0xFDA
 13311                           fsr2l	equ	0xFD9
 13312                           status	equ	0xFD8
 13313                           
 13314 ;; *************** function _USBCheckStdRequest *****************
 13315 ;; Defined at:
 13316 ;;		line 2688 in file "usb_device.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;		None
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;		None
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      void 
 13323 ;; Registers used:
 13324 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13334 ;;Total ram usage:        0 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    5
 13337 ;; This function calls:
 13338 ;;		_USBStdFeatureReqHandler
 13339 ;;		_USBStdGetDscHandler
 13340 ;;		_USBStdGetStatusHandler
 13341 ;;		_USBStdSetCfgHandler
 13342 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13343 ;; This function is called by:
 13344 ;;		_USBCtrlTrfSetupHandler
 13345 ;; This function uses a non-reentrant model
 13346 ;;
 13347                           
 13348                           	psect	text61
 13349  0061FE                     __ptext61:
 13350                           	opt stack 0
 13351  0061FE                     _USBCheckStdRequest:
 13352                           	opt stack 22
 13353                           
 13354                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;incstack = 0
 13358  0061FE  010D               	movlb	13	; () banked
 13359  006200  3930               	swapf	48,w,b	;volatile
 13360  006202  32E8               	rrcf	wreg,f,c
 13361  006204  0B03               	andlw	3
 13362  006206  0900               	iorlw	0
 13363  006208  A4D8               	btfss	status,2,c
 13364  00620A  0012               	return	
 13365  00620C  D047               	goto	l343
 13366  00620E                     l344:
 13367                           
 13368                           ; BSR set to: 13
 13369                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 13370  00620E  0100               	movlb	0	; () banked
 13371  006210  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13372                           
 13373                           ; BSR set to: 0
 13374                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 13375  006212  0E08               	movlw	8
 13376  006214  6FFA               	movwf	_USBDeviceState& (0+255),b
 13377                           
 13378                           ;usb_device.c: 2698: break;
 13379  006216  0012               	return	
 13380  006218                     
 13381                           ;usb_device.c: 2700: USBStdGetDscHandler();
 13382                           
 13383                           ; BSR set to: 0
 13384  006218  EC2B  F027         	call	_USBStdGetDscHandler	;wreg free
 13385                           
 13386                           ;usb_device.c: 2701: break;
 13387  00621C  0012               	return	
 13388  00621E                     
 13389                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 13390  00621E  EC70  F031         	call	_USBStdSetCfgHandler	;wreg free
 13391                           
 13392                           ;usb_device.c: 2704: break;
 13393  006222  0012               	return	
 13394  006224                     
 13395                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13396  006224  0EFE               	movlw	low _USBActiveConfiguration
 13397  006226  0100               	movlb	0	; () banked
 13398  006228  6FCE               	movwf	_inPipes& (0+255),b
 13399  00622A  0E00               	movlw	high _USBActiveConfiguration
 13400  00622C  6FCF               	movwf	(_inPipes+1)& (0+255),b
 13401                           
 13402                           ; BSR set to: 0
 13403                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13404  00622E  81D1               	bsf	(_inPipes+3)& (0+255),0,b
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13408  006230  0E01               	movlw	1
 13409  006232  6FD2               	movwf	(_inPipes+4)& (0+255),b
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13413  006234  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13414                           
 13415                           ;usb_device.c: 2710: break;
 13416  006236  0012               	return	
 13417  006238                     
 13418                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13419                           
 13420                           ; BSR set to: 0
 13421  006238  EC7A  F03C         	call	_USBStdGetStatusHandler	;wreg free
 13422                           
 13423                           ;usb_device.c: 2713: break;
 13424  00623C  0012               	return	
 13425  00623E                     
 13426                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13427  00623E  EC3D  F00D         	call	_USBStdFeatureReqHandler	;wreg free
 13428                           
 13429                           ;usb_device.c: 2717: break;
 13430  006242  0012               	return	
 13431  006244                     
 13432                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13433  006244  010D               	movlb	13	; () banked
 13434  006246  5134               	movf	52,w,b	;volatile
 13435  006248  0D01               	mullw	1
 13436  00624A  0EAB               	movlw	low _USBAlternateInterface
 13437  00624C  24F3               	addwf	prodl,w,c
 13438  00624E  0100               	movlb	0	; () banked
 13439  006250  6FCE               	movwf	_inPipes& (0+255),b
 13440  006252  0E01               	movlw	high _USBAlternateInterface
 13441  006254  20F4               	addwfc	prodh,w,c
 13442  006256  6FCF               	movwf	(_inPipes+1)& (0+255),b
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13446  006258  81D1               	bsf	(_inPipes+3)& (0+255),0,b
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13450  00625A  0E01               	movlw	1
 13451  00625C  6FD2               	movwf	(_inPipes+4)& (0+255),b
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13455  00625E  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13456                           
 13457                           ;usb_device.c: 2723: break;
 13458  006260  0012               	return	
 13459  006262                     l353:
 13460                           
 13461                           ; BSR set to: 13
 13462                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13463  006262  0100               	movlb	0	; () banked
 13464  006264  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13468  006266  010D               	movlb	13	; () banked
 13469  006268  5134               	movf	52,w,b	;volatile
 13470  00626A  0D01               	mullw	1
 13471  00626C  0EAB               	movlw	low _USBAlternateInterface
 13472  00626E  24F3               	addwf	prodl,w,c
 13473  006270  6ED9               	movwf	fsr2l,c
 13474  006272  0E01               	movlw	high _USBAlternateInterface
 13475  006274  20F4               	addwfc	prodh,w,c
 13476  006276  6EDA               	movwf	fsr2h,c
 13477  006278  CD32 FFDF          	movff	3378,indf2	;volatile
 13478                           
 13479                           ;usb_device.c: 2727: break;
 13480  00627C  0012               	return	
 13481  00627E                     
 13482                           ; BSR set to: 13
 13483                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13484                           
 13485                           ; BSR set to: 13
 13486  00627E  0E00               	movlw	0
 13487  006280  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13488  006282  0E02               	movlw	2
 13489  006284  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13490  006286  0E00               	movlw	0
 13491  006288  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13492  00628A  0E00               	movlw	0
 13493  00628C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13494  00628E  0E00               	movlw	0
 13495  006290  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13496  006292  0E00               	movlw	0
 13497  006294  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13498  006296  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13499                           
 13500                           ;usb_device.c: 2734: }
 13501                           
 13502                           ;usb_device.c: 2733: break;
 13503                           
 13504                           ;usb_device.c: 2732: default:
 13505                           
 13506                           ;usb_device.c: 2731: case 12:
 13507                           
 13508                           ;usb_device.c: 2730: break;
 13509  00629A  0012               	return	
 13510  00629C                     l343:
 13511  00629C  010D               	movlb	13	; () banked
 13512  00629E  5131               	movf	49,w,b	;volatile
 13513                           
 13514                           ; Switch size 1, requested type "space"
 13515                           ; Number of cases is 11, Range of values is 0 to 12
 13516                           ; switch strategies available:
 13517                           ; Name         Instructions Cycles
 13518                           ; simple_byte           34    18 (average)
 13519                           ;	Chosen strategy is simple_byte
 13520  0062A0  0A00               	xorlw	0	; case 0
 13521  0062A2  B4D8               	btfsc	status,2,c
 13522  0062A4  D7C9               	goto	l349
 13523  0062A6  0A01               	xorlw	1	; case 1
 13524  0062A8  B4D8               	btfsc	status,2,c
 13525  0062AA  D7C9               	goto	l350
 13526  0062AC  0A02               	xorlw	2	; case 3
 13527  0062AE  B4D8               	btfsc	status,2,c
 13528  0062B0  D7C6               	goto	l350
 13529  0062B2  0A06               	xorlw	6	; case 5
 13530  0062B4  B4D8               	btfsc	status,2,c
 13531  0062B6  D7AB               	goto	l344
 13532  0062B8  0A03               	xorlw	3	; case 6
 13533  0062BA  B4D8               	btfsc	status,2,c
 13534  0062BC  D7AD               	goto	l346
 13535  0062BE  0A01               	xorlw	1	; case 7
 13536  0062C0  B4D8               	btfsc	status,2,c
 13537  0062C2  D7DD               	goto	l354
 13538  0062C4  0A0F               	xorlw	15	; case 8
 13539  0062C6  B4D8               	btfsc	status,2,c
 13540  0062C8  D7AD               	goto	l348
 13541  0062CA  0A01               	xorlw	1	; case 9
 13542  0062CC  B4D8               	btfsc	status,2,c
 13543  0062CE  D7A7               	goto	l347
 13544  0062D0  0A03               	xorlw	3	; case 10
 13545  0062D2  B4D8               	btfsc	status,2,c
 13546  0062D4  D7B7               	goto	l352
 13547  0062D6  0A01               	xorlw	1	; case 11
 13548  0062D8  B4D8               	btfsc	status,2,c
 13549  0062DA  D7C3               	goto	l353
 13550  0062DC  0A07               	xorlw	7	; case 12
 13551  0062DE  0012               	return	
 13552  0062E0                     __end_of_USBCheckStdRequest:
 13553                           	opt stack 0
 13554                           tblptru	equ	0xFF8
 13555                           tblptrh	equ	0xFF7
 13556                           tblptrl	equ	0xFF6
 13557                           tablat	equ	0xFF5
 13558                           prodh	equ	0xFF4
 13559                           prodl	equ	0xFF3
 13560                           intcon	equ	0xFF2
 13561                           intcon2	equ	0xFF1
 13562                           intcon3	equ	0xFF0
 13563                           postinc0	equ	0xFEE
 13564                           wreg	equ	0xFE8
 13565                           indf1	equ	0xFE7
 13566                           postdec1	equ	0xFE5
 13567                           plusw1	equ	0xFE3
 13568                           fsr1h	equ	0xFE2
 13569                           fsr1l	equ	0xFE1
 13570                           indf2	equ	0xFDF
 13571                           postinc2	equ	0xFDE
 13572                           postdec2	equ	0xFDD
 13573                           plusw2	equ	0xFDB
 13574                           fsr2h	equ	0xFDA
 13575                           fsr2l	equ	0xFD9
 13576                           status	equ	0xFD8
 13577                           
 13578 ;; *************** function _USBStdSetCfgHandler *****************
 13579 ;; Defined at:
 13580 ;;		line 1970 in file "usb_device.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;		None
 13583 ;; Auto vars:     Size  Location     Type
 13584 ;;  i               1   23[COMRAM] unsigned char 
 13585 ;; Return value:  Size  Location     Type
 13586 ;;                  1    wreg      void 
 13587 ;; Registers used:
 13588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13589 ;; Tracked objects:
 13590 ;;		On entry : 0/0
 13591 ;;		On exit  : 0/0
 13592 ;;		Unchanged: 0/0
 13593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13598 ;;Total ram usage:        1 bytes
 13599 ;; Hardware stack levels used:    1
 13600 ;; Hardware stack levels required when called:    4
 13601 ;; This function calls:
 13602 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13603 ;;		_memset
 13604 ;; This function is called by:
 13605 ;;		_USBCheckStdRequest
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           	psect	text62
 13610  0062E0                     __ptext62:
 13611                           	opt stack 0
 13612  0062E0                     _USBStdSetCfgHandler:
 13613                           	opt stack 22
 13614                           
 13615                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13616                           
 13617                           ;incstack = 0
 13618  0062E0  0100               	movlb	0	; () banked
 13619  0062E2  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13623  0062E4  0E27               	movlw	39
 13624  0062E6  6E01               	movwf	memset@p1,c
 13625  0062E8  0E0F               	movlw	15
 13626  0062EA  6E02               	movwf	memset@p1+1,c
 13627  0062EC  0E00               	movlw	0
 13628  0062EE  6E04               	movwf	memset@c+1,c
 13629  0062F0  0E00               	movlw	0
 13630  0062F2  6E03               	movwf	memset@c,c
 13631  0062F4  0E00               	movlw	0
 13632  0062F6  6E06               	movwf	memset@n+1,c
 13633  0062F8  0E02               	movlw	2
 13634  0062FA  6E05               	movwf	memset@n,c
 13635  0062FC  ECAD  F04D         	call	_memset	;wreg free
 13636                           
 13637                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13638  006300  0E00               	movlw	0
 13639  006302  6E01               	movwf	memset@p1,c
 13640  006304  0E0D               	movlw	13
 13641  006306  6E02               	movwf	memset@p1+1,c
 13642  006308  0E00               	movlw	0
 13643  00630A  6E04               	movwf	memset@c+1,c
 13644  00630C  0E00               	movlw	0
 13645  00630E  6E03               	movwf	memset@c,c
 13646  006310  0E00               	movlw	0
 13647  006312  6E06               	movwf	memset@n+1,c
 13648  006314  0E30               	movlw	48
 13649  006316  6E05               	movwf	memset@n,c
 13650  006318  ECAD  F04D         	call	_memset	;wreg free
 13651                           
 13652                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13653  00631C  8C65               	bsf	3941,6,c	;volatile
 13654                           
 13655                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13656  00631E  0E00               	movlw	0
 13657  006320  6E18               	movwf	USBStdSetCfgHandler@i,c
 13658  006322                     l13549:
 13659  006322  0E02               	movlw	2
 13660  006324  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13661  006326  D001               	goto	l260
 13662  006328  D016               	goto	u10550
 13663  00632A                     l260:
 13664                           
 13665                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13666  00632A  5018               	movf	USBStdSetCfgHandler@i,w,c
 13667  00632C  0D01               	mullw	1
 13668  00632E  0E68               	movlw	low _ep_data_in
 13669  006330  24F3               	addwf	prodl,w,c
 13670  006332  6ED9               	movwf	fsr2l,c
 13671  006334  0E01               	movlw	high _ep_data_in
 13672  006336  20F4               	addwfc	prodh,w,c
 13673  006338  6EDA               	movwf	fsr2h,c
 13674  00633A  0E00               	movlw	0
 13675  00633C  6EDF               	movwf	indf2,c
 13676                           
 13677                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13678  00633E  5018               	movf	USBStdSetCfgHandler@i,w,c
 13679  006340  0D01               	mullw	1
 13680  006342  0E65               	movlw	low _ep_data_out
 13681  006344  24F3               	addwf	prodl,w,c
 13682  006346  6ED9               	movwf	fsr2l,c
 13683  006348  0E01               	movlw	high _ep_data_out
 13684  00634A  20F4               	addwfc	prodh,w,c
 13685  00634C  6EDA               	movwf	fsr2h,c
 13686  00634E  0E00               	movlw	0
 13687  006350  6EDF               	movwf	indf2,c
 13688  006352  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13689  006354  D7E6               	goto	l13549
 13690  006356                     u10550:
 13691                           
 13692                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13693  006356  0EAB               	movlw	low _USBAlternateInterface
 13694  006358  6E01               	movwf	memset@p1,c
 13695  00635A  0E01               	movlw	high _USBAlternateInterface
 13696  00635C  6E02               	movwf	memset@p1+1,c
 13697  00635E  0E00               	movlw	0
 13698  006360  6E04               	movwf	memset@c+1,c
 13699  006362  0E00               	movlw	0
 13700  006364  6E03               	movwf	memset@c,c
 13701  006366  0E00               	movlw	0
 13702  006368  6E06               	movwf	memset@n+1,c
 13703  00636A  0E02               	movlw	2
 13704  00636C  6E05               	movwf	memset@n,c
 13705  00636E  ECAD  F04D         	call	_memset	;wreg free
 13706                           
 13707                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13708  006372  9C65               	bcf	3941,6,c	;volatile
 13709                           
 13710                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13711  006374  0E08               	movlw	8
 13712  006376  0100               	movlb	0	; () banked
 13713  006378  6FD4               	movwf	_pBDTEntryIn& (0+255),b
 13714  00637A  0E0D               	movlw	13
 13715  00637C  6FD5               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13719  00637E  0E00               	movlw	0
 13720  006380  6FE6               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13721  006382  0E0D               	movlw	13
 13722  006384  6FE7               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13726  006386  C0E6  F0E4         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13727  00638A  C0E7  F0E5         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13731  00638E  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13735  006392  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13736  006394  A4D8               	btfss	status,2,c
 13737  006396  D003               	goto	l262
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13741  006398  0E10               	movlw	16
 13742  00639A  6FFA               	movwf	_USBDeviceState& (0+255),b
 13743                           
 13744                           ;usb_device.c: 2015: }
 13745  00639C  0012               	return	
 13746  00639E                     l262:
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13750                           
 13751                           ; BSR set to: 0
 13752  00639E  0E00               	movlw	0
 13753  0063A0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13754  0063A2  0E01               	movlw	1
 13755  0063A4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13756  0063A6  0EFE               	movlw	low _USBActiveConfiguration
 13757  0063A8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13758  0063AA  0E00               	movlw	high _USBActiveConfiguration
 13759  0063AC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13760  0063AE  0E00               	movlw	0
 13761  0063B0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13762  0063B2  0E01               	movlw	1
 13763  0063B4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13764  0063B6  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13765                           
 13766                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13767  0063BA  0E20               	movlw	32
 13768  0063BC  0100               	movlb	0	; () banked
 13769  0063BE  6FFA               	movwf	_USBDeviceState& (0+255),b
 13770  0063C0  0012               	return	
 13771  0063C2                     __end_of_USBStdSetCfgHandler:
 13772                           	opt stack 0
 13773                           tblptru	equ	0xFF8
 13774                           tblptrh	equ	0xFF7
 13775                           tblptrl	equ	0xFF6
 13776                           tablat	equ	0xFF5
 13777                           prodh	equ	0xFF4
 13778                           prodl	equ	0xFF3
 13779                           intcon	equ	0xFF2
 13780                           intcon2	equ	0xFF1
 13781                           intcon3	equ	0xFF0
 13782                           postinc0	equ	0xFEE
 13783                           wreg	equ	0xFE8
 13784                           indf1	equ	0xFE7
 13785                           postdec1	equ	0xFE5
 13786                           plusw1	equ	0xFE3
 13787                           fsr1h	equ	0xFE2
 13788                           fsr1l	equ	0xFE1
 13789                           indf2	equ	0xFDF
 13790                           postinc2	equ	0xFDE
 13791                           postdec2	equ	0xFDD
 13792                           plusw2	equ	0xFDB
 13793                           fsr2h	equ	0xFDA
 13794                           fsr2l	equ	0xFD9
 13795                           status	equ	0xFD8
 13796                           
 13797 ;; *************** function _memset *****************
 13798 ;; Defined at:
 13799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13800 ;; Parameters:    Size  Location     Type
 13801 ;;  p1              2    0[COMRAM] PTR void 
 13802 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13803 ;;  c               2    2[COMRAM] int 
 13804 ;;  n               2    4[COMRAM] unsigned int 
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;  p               2    6[COMRAM] PTR unsigned char 
 13807 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  2    0[COMRAM] PTR void 
 13810 ;; Registers used:
 13811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13817 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13820 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13821 ;;Total ram usage:        8 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; This function calls:
 13824 ;;		Nothing
 13825 ;; This function is called by:
 13826 ;;		_USBDeviceInit
 13827 ;;		_USBStdSetCfgHandler
 13828 ;; This function uses a non-reentrant model
 13829 ;;
 13830                           
 13831                           	psect	text63
 13832  009B5A                     __ptext63:
 13833                           	opt stack 0
 13834  009B5A                     _memset:
 13835                           	opt stack 28
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;incstack = 0
 13839  009B5A  C001  F007         	movff	memset@p1,memset@p
 13840  009B5E  C002  F008         	movff	memset@p1+1,memset@p+1
 13841  009B62  D008               	goto	l3813
 13842  009B64                     l12129:
 13843  009B64  C007  FFD9         	movff	memset@p,fsr2l
 13844  009B68  C008  FFDA         	movff	memset@p+1,fsr2h
 13845  009B6C  C003  FFDF         	movff	memset@c,indf2
 13846  009B70  4A07               	infsnz	memset@p,f,c
 13847  009B72  2A08               	incf	memset@p+1,f,c
 13848  009B74                     l3813:
 13849  009B74  0605               	decf	memset@n,f,c
 13850  009B76  A0D8               	btfss	status,0,c
 13851  009B78  0606               	decf	memset@n+1,f,c
 13852  009B7A  2805               	incf	memset@n,w,c
 13853  009B7C  E1F3               	bnz	l12129
 13854  009B7E  2806               	incf	memset@n+1,w,c
 13855  009B80  B4D8               	btfsc	status,2,c
 13856  009B82  0012               	return	
 13857  009B84  D7EF               	goto	l3814
 13858  009B86                     __end_of_memset:
 13859                           	opt stack 0
 13860                           tblptru	equ	0xFF8
 13861                           tblptrh	equ	0xFF7
 13862                           tblptrl	equ	0xFF6
 13863                           tablat	equ	0xFF5
 13864                           prodh	equ	0xFF4
 13865                           prodl	equ	0xFF3
 13866                           intcon	equ	0xFF2
 13867                           intcon2	equ	0xFF1
 13868                           intcon3	equ	0xFF0
 13869                           postinc0	equ	0xFEE
 13870                           wreg	equ	0xFE8
 13871                           indf1	equ	0xFE7
 13872                           postdec1	equ	0xFE5
 13873                           plusw1	equ	0xFE3
 13874                           fsr1h	equ	0xFE2
 13875                           fsr1l	equ	0xFE1
 13876                           indf2	equ	0xFDF
 13877                           postinc2	equ	0xFDE
 13878                           postdec2	equ	0xFDD
 13879                           plusw2	equ	0xFDB
 13880                           fsr2h	equ	0xFDA
 13881                           fsr2l	equ	0xFD9
 13882                           status	equ	0xFD8
 13883                           
 13884 ;; *************** function _USBStdGetStatusHandler *****************
 13885 ;; Defined at:
 13886 ;;		line 2131 in file "usb_device.c"
 13887 ;; Parameters:    Size  Location     Type
 13888 ;;		None
 13889 ;; Auto vars:     Size  Location     Type
 13890 ;;  p               2    1[COMRAM] PTR struct __BDT
 13891 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      void 
 13894 ;; Registers used:
 13895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13905 ;;Total ram usage:        3 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; This function calls:
 13908 ;;		Nothing
 13909 ;; This function is called by:
 13910 ;;		_USBCheckStdRequest
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text64
 13915  0078F4                     __ptext64:
 13916                           	opt stack 0
 13917  0078F4                     _USBStdGetStatusHandler:
 13918                           	opt stack 26
 13919                           
 13920                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13921                           
 13922                           ;incstack = 0
 13923  0078F4  0E00               	movlw	0
 13924  0078F6  010D               	movlb	13	; () banked
 13925  0078F8  6F38               	movwf	56,b	;volatile
 13926                           
 13927                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13928  0078FA  0E00               	movlw	0
 13929  0078FC  6F39               	movwf	57,b	;volatile
 13930                           
 13931                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13932  0078FE  D039               	goto	l281
 13933  007900                     l282:
 13934                           
 13935                           ; BSR set to: 13
 13936                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13937  007900  0100               	movlb	0	; () banked
 13938  007902  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13939                           
 13940                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13941                           
 13942                           ; BSR set to: 13
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13946                           
 13947                           ;usb_device.c: 2144: if(0 == 1)
 13948  007904  0101               	movlb	1	; () banked
 13949  007906  058C               	decf	_RemoteWakeup& (0+255),w,b
 13950  007908  A4D8               	btfss	status,2,c
 13951  00790A  D03E               	goto	l285
 13952                           
 13953                           ; BSR set to: 1
 13954                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13955  00790C  010D               	movlb	13	; () banked
 13956  00790E  8338               	bsf	56,1,b	;volatile
 13957                           
 13958                           ; BSR set to: 13
 13959                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13960  007910  D03B               	goto	l285
 13961  007912                     l286:
 13962                           
 13963                           ; BSR set to: 13
 13964                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13965  007912  0100               	movlb	0	; () banked
 13966  007914  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13967                           
 13968                           ;usb_device.c: 2156: break;
 13969  007916  D038               	goto	l285
 13970  007918                     l287:
 13971                           
 13972                           ; BSR set to: 13
 13973                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13974  007918  0100               	movlb	0	; () banked
 13975  00791A  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 13976                           
 13977                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13978  00791C  010D               	movlb	13	; () banked
 13979  00791E  BF34               	btfsc	52,7,b	;volatile
 13980  007920  D00A               	goto	l288
 13981                           
 13982                           ; BSR set to: 13
 13983                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13984  007922  5134               	movf	52,w,b	;volatile
 13985  007924  0B0F               	andlw	15
 13986  007926  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13987  007928  5001               	movf	??_USBStdGetStatusHandler,w,c
 13988  00792A  0D02               	mullw	2
 13989  00792C  0E39               	movlw	low _pBDTEntryOut
 13990  00792E  24F3               	addwf	prodl,w,c
 13991  007930  6ED9               	movwf	fsr2l,c
 13992  007932  0E01               	movlw	high _pBDTEntryOut
 13993  007934  D009               	goto	L6
 13994  007936                     l288:
 13995                           
 13996                           ; BSR set to: 13
 13997                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13998                           
 13999                           ; BSR set to: 13
 14000  007936  5134               	movf	52,w,b	;volatile
 14001  007938  0B0F               	andlw	15
 14002  00793A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14003  00793C  5001               	movf	??_USBStdGetStatusHandler,w,c
 14004  00793E  0D02               	mullw	2
 14005  007940  0ED4               	movlw	low _pBDTEntryIn
 14006  007942  24F3               	addwf	prodl,w,c
 14007  007944  6ED9               	movwf	fsr2l,c
 14008  007946  0E00               	movlw	high _pBDTEntryIn
 14009  007948                     L6:
 14010  007948  20F4               	addwfc	prodh,w,c
 14011  00794A  6EDA               	movwf	fsr2h,c
 14012  00794C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 14013  007950  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 14014                           
 14015                           ; BSR set to: 13
 14016                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 14017                           
 14018                           ; BSR set to: 13
 14019  007954  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14020  007958  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14021  00795C  AEDF               	btfss	indf2,7,c
 14022  00795E  D014               	goto	l285
 14023                           
 14024                           ; BSR set to: 13
 14025  007960  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14026  007964  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14027  007968  A4DF               	btfss	indf2,2,c
 14028  00796A  D00E               	goto	l285
 14029                           
 14030                           ; BSR set to: 13
 14031                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 14032  00796C  0E01               	movlw	1
 14033  00796E  6F38               	movwf	56,b	;volatile
 14034                           
 14035                           ; BSR set to: 13
 14036                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 14037                           
 14038                           ; BSR set to: 13
 14039                           ;usb_device.c: 2176: break;
 14040  007970  D00B               	goto	l285
 14041  007972                     l281:
 14042                           
 14043                           ; BSR set to: 13
 14044                           
 14045                           ; BSR set to: 13
 14046  007972  5130               	movf	48,w,b	;volatile
 14047  007974  0B1F               	andlw	31
 14048                           
 14049                           ; Switch size 1, requested type "space"
 14050                           ; Number of cases is 3, Range of values is 0 to 2
 14051                           ; switch strategies available:
 14052                           ; Name         Instructions Cycles
 14053                           ; simple_byte           10     6 (average)
 14054                           ;	Chosen strategy is simple_byte
 14055  007976  0A00               	xorlw	0	; case 0
 14056  007978  B4D8               	btfsc	status,2,c
 14057  00797A  D7C2               	goto	l282
 14058  00797C  0A01               	xorlw	1	; case 1
 14059  00797E  B4D8               	btfsc	status,2,c
 14060  007980  D7C8               	goto	l286
 14061  007982  0A03               	xorlw	3	; case 2
 14062  007984  B4D8               	btfsc	status,2,c
 14063  007986  D7C8               	goto	l287
 14064  007988                     l285:
 14065                           
 14066                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 14067  007988  0100               	movlb	0	; () banked
 14068  00798A  AFD1               	btfss	(_inPipes+3)& (0+255),7,b
 14069  00798C  0012               	return	
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 14073  00798E  0E38               	movlw	56
 14074  007990  6FCE               	movwf	_inPipes& (0+255),b
 14075  007992  0E0D               	movlw	13
 14076  007994  6FCF               	movwf	(_inPipes+1)& (0+255),b
 14077                           
 14078                           ; BSR set to: 0
 14079                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14080  007996  81D1               	bsf	(_inPipes+3)& (0+255),0,b
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 14084  007998  0E02               	movlw	2
 14085  00799A  6FD2               	movwf	(_inPipes+4)& (0+255),b
 14086  00799C  0012               	return	
 14087  00799E                     __end_of_USBStdGetStatusHandler:
 14088                           	opt stack 0
 14089                           tblptru	equ	0xFF8
 14090                           tblptrh	equ	0xFF7
 14091                           tblptrl	equ	0xFF6
 14092                           tablat	equ	0xFF5
 14093                           prodh	equ	0xFF4
 14094                           prodl	equ	0xFF3
 14095                           intcon	equ	0xFF2
 14096                           intcon2	equ	0xFF1
 14097                           intcon3	equ	0xFF0
 14098                           postinc0	equ	0xFEE
 14099                           wreg	equ	0xFE8
 14100                           indf1	equ	0xFE7
 14101                           postdec1	equ	0xFE5
 14102                           plusw1	equ	0xFE3
 14103                           fsr1h	equ	0xFE2
 14104                           fsr1l	equ	0xFE1
 14105                           indf2	equ	0xFDF
 14106                           postinc2	equ	0xFDE
 14107                           postdec2	equ	0xFDD
 14108                           plusw2	equ	0xFDB
 14109                           fsr2h	equ	0xFDA
 14110                           fsr2l	equ	0xFD9
 14111                           status	equ	0xFD8
 14112                           
 14113 ;; *************** function _USBStdGetDscHandler *****************
 14114 ;; Defined at:
 14115 ;;		line 2045 in file "usb_device.c"
 14116 ;; Parameters:    Size  Location     Type
 14117 ;;		None
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;		None
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  1    wreg      void 
 14122 ;; Registers used:
 14123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14133 ;;Total ram usage:        2 bytes
 14134 ;; Hardware stack levels used:    1
 14135 ;; This function calls:
 14136 ;;		Nothing
 14137 ;; This function is called by:
 14138 ;;		_USBCheckStdRequest
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text65
 14143  004E56                     __ptext65:
 14144                           	opt stack 0
 14145  004E56                     _USBStdGetDscHandler:
 14146                           	opt stack 26
 14147                           
 14148                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;incstack = 0
 14152  004E56  0E80               	movlw	128
 14153  004E58  010D               	movlb	13	; () banked
 14154  004E5A  1930               	xorwf	48,w,b	;volatile
 14155  004E5C  A4D8               	btfss	status,2,c
 14156  004E5E  0012               	return	
 14157                           
 14158                           ; BSR set to: 13
 14159                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14160  004E60  0EC0               	movlw	192
 14161  004E62  0100               	movlb	0	; () banked
 14162  004E64  6FD1               	movwf	(_inPipes+3)& (0+255),b
 14163                           
 14164                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 14165  004E66  D088               	goto	l268
 14166  004E68                     
 14167                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14168                           
 14169                           ; BSR set to: 0
 14170  004E68  0EA4               	movlw	low _device_dsc
 14171  004E6A  0100               	movlb	0	; () banked
 14172  004E6C  6FCE               	movwf	_inPipes& (0+255),b
 14173  004E6E  0EBF               	movlw	high _device_dsc
 14174  004E70  6FCF               	movwf	(_inPipes+1)& (0+255),b
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 14178  004E72  0E00               	movlw	0
 14179  004E74  6FD3               	movwf	(_inPipes+5)& (0+255),b
 14180  004E76  0E12               	movlw	18
 14181  004E78  6FD2               	movwf	(_inPipes+4)& (0+255),b
 14182                           
 14183                           ;usb_device.c: 2060: break;
 14184  004E7A  0012               	return	
 14185  004E7C                     
 14186                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 14187                           
 14188                           ; BSR set to: 0
 14189  004E7C  010D               	movlb	13	; () banked
 14190  004E7E  5132               	movf	50,w,b	;volatile
 14191  004E80  A4D8               	btfss	status,2,c
 14192  004E82  D043               	goto	l272
 14193                           
 14194                           ; BSR set to: 13
 14195                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 14196  004E84  5132               	movf	50,w,b	;volatile
 14197  004E86  0D02               	mullw	2
 14198  004E88  0EA3               	movlw	low _USB_CD_Ptr
 14199  004E8A  24F3               	addwf	prodl,w,c
 14200  004E8C  6EF6               	movwf	tblptrl,c
 14201  004E8E  0EBE               	movlw	high _USB_CD_Ptr
 14202  004E90  20F4               	addwfc	prodh,w,c
 14203  004E92  6EF7               	movwf	tblptrh,c
 14204  004E94                     	if	1	;There are 3 active tblptr bytes
 14205  004E94  6AF8               	clrf	tblptru,c
 14206  004E96  0E00               	movlw	low (__mediumconst shr (0+16))
 14207  004E98  22F8               	addwfc	tblptru,f,c
 14208  004E9A                     	endif
 14209  004E9A  0009               	tblrd		*+
 14210  004E9C  CFF5 F0CE          	movff	tablat,_inPipes
 14211  004EA0  000A               	tblrd		*-
 14212  004EA2  CFF5 F0CF          	movff	tablat,_inPipes+1
 14213                           
 14214                           ; BSR set to: 13
 14215                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14216  004EA6  0E02               	movlw	2
 14217  004EA8  0100               	movlb	0	; () banked
 14218  004EAA  25CE               	addwf	_inPipes& (0+255),w,b
 14219  004EAC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14220  004EAE  0E00               	movlw	0
 14221  004EB0  21CF               	addwfc	(_inPipes+1)& (0+255),w,b
 14222  004EB2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14223  004EB4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14224  004EB8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14225  004EBC  6AF8               	clrf	tblptru,c
 14226  004EBE  0E0E               	movlw	(high __ramtop+-1)
 14227  004EC0  64F7               	cpfsgt	tblptrh,c
 14228  004EC2  D003               	bra	u10597
 14229  004EC4  0008               	tblrd		*
 14230  004EC6  50F5               	movf	tablat,w,c
 14231  004EC8  D005               	bra	u10590
 14232  004ECA                     u10597:
 14233  004ECA  CFF6 FFE9          	movff	tblptrl,fsr0l
 14234  004ECE  CFF7 FFEA          	movff	tblptrh,fsr0h
 14235  004ED2  50EF               	movf	indf0,w,c
 14236  004ED4                     u10590:
 14237  004ED4  0100               	movlb	0	; () banked
 14238  004ED6  6FD2               	movwf	(_inPipes+4)& (0+255),b
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14242  004ED8  0E03               	movlw	3
 14243  004EDA  25CE               	addwf	_inPipes& (0+255),w,b
 14244  004EDC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14245  004EDE  0E00               	movlw	0
 14246  004EE0  21CF               	addwfc	(_inPipes+1)& (0+255),w,b
 14247  004EE2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14248  004EE4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14249  004EE8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14250  004EEC  6AF8               	clrf	tblptru,c
 14251  004EEE  0E0E               	movlw	(high __ramtop+-1)
 14252  004EF0  64F7               	cpfsgt	tblptrh,c
 14253  004EF2  D003               	bra	u10607
 14254  004EF4  0008               	tblrd		*
 14255  004EF6  50F5               	movf	tablat,w,c
 14256  004EF8  D005               	bra	u10600
 14257  004EFA                     u10607:
 14258  004EFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 14259  004EFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 14260  004F02  50EF               	movf	indf0,w,c
 14261  004F04                     u10600:
 14262  004F04  0100               	movlb	0	; () banked
 14263  004F06  6FD3               	movwf	(_inPipes+5)& (0+255),b
 14264                           
 14265                           ;usb_device.c: 2078: }
 14266  004F08  0012               	return	
 14267  004F0A                     l272:
 14268                           
 14269                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 14270                           
 14271                           ; BSR set to: 0
 14272  004F0A  0E00               	movlw	0
 14273  004F0C  0100               	movlb	0	; () banked
 14274  004F0E  6FD1               	movwf	(_inPipes+3)& (0+255),b
 14275                           
 14276                           ; BSR set to: 0
 14277                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 14278  004F10  0012               	return	
 14279  004F12                     
 14280                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 14281                           
 14282                           ; BSR set to: 0
 14283  004F12  0E04               	movlw	4
 14284  004F14  010D               	movlb	13	; () banked
 14285  004F16  6132               	cpfslt	50,b	;volatile
 14286  004F18  D027               	goto	l275
 14287                           
 14288                           ; BSR set to: 13
 14289                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 14290  004F1A  5132               	movf	50,w,b	;volatile
 14291  004F1C  0D02               	mullw	2
 14292  004F1E  0E79               	movlw	low _USB_SD_Ptr
 14293  004F20  24F3               	addwf	prodl,w,c
 14294  004F22  6EF6               	movwf	tblptrl,c
 14295  004F24  0EBE               	movlw	high _USB_SD_Ptr
 14296  004F26  20F4               	addwfc	prodh,w,c
 14297  004F28  6EF7               	movwf	tblptrh,c
 14298  004F2A                     	if	1	;There are 3 active tblptr bytes
 14299  004F2A  6AF8               	clrf	tblptru,c
 14300  004F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 14301  004F2E  22F8               	addwfc	tblptru,f,c
 14302  004F30                     	endif
 14303  004F30  0009               	tblrd		*+
 14304  004F32  CFF5 F0CE          	movff	tablat,_inPipes
 14305  004F36  000A               	tblrd		*-
 14306  004F38  CFF5 F0CF          	movff	tablat,_inPipes+1
 14307                           
 14308                           ; BSR set to: 13
 14309                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14310  004F3C  C0CE  FFF6         	movff	_inPipes,tblptrl
 14311  004F40  C0CF  FFF7         	movff	_inPipes+1,tblptrh
 14312  004F44  6AF8               	clrf	tblptru,c
 14313  004F46  0E0E               	movlw	(high __ramtop+-1)
 14314  004F48  64F7               	cpfsgt	tblptrh,c
 14315  004F4A  D003               	bra	u10627
 14316  004F4C  0008               	tblrd		*
 14317  004F4E  50F5               	movf	tablat,w,c
 14318  004F50  D005               	bra	u10620
 14319  004F52                     u10627:
 14320  004F52  CFF6 FFE9          	movff	tblptrl,fsr0l
 14321  004F56  CFF7 FFEA          	movff	tblptrh,fsr0h
 14322  004F5A  50EF               	movf	indf0,w,c
 14323  004F5C                     u10620:
 14324  004F5C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14325  004F5E  5001               	movf	??_USBStdGetDscHandler,w,c
 14326  004F60  0100               	movlb	0	; () banked
 14327  004F62  6FD2               	movwf	(_inPipes+4)& (0+255),b
 14328  004F64  6BD3               	clrf	(_inPipes+5)& (0+255),b
 14329                           
 14330                           ;usb_device.c: 2094: }
 14331  004F66  0012               	return	
 14332  004F68                     l275:
 14333                           
 14334                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 14335                           
 14336                           ; BSR set to: 0
 14337  004F68  0E00               	movlw	0
 14338  004F6A  0100               	movlb	0	; () banked
 14339  004F6C  6FD1               	movwf	(_inPipes+3)& (0+255),b
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 14343  004F6E  0012               	return	
 14344  004F70                     
 14345                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 14346                           
 14347                           ; BSR set to: 0
 14348  004F70  0E00               	movlw	0
 14349  004F72  0100               	movlb	0	; () banked
 14350  004F74  6FD1               	movwf	(_inPipes+3)& (0+255),b
 14351                           
 14352                           ; BSR set to: 0
 14353                           ;usb_device.c: 2112: }
 14354                           
 14355                           ;usb_device.c: 2111: break;
 14356  004F76  0012               	return	
 14357  004F78                     l268:
 14358                           
 14359                           ; BSR set to: 0
 14360                           
 14361                           ; BSR set to: 0
 14362  004F78  010D               	movlb	13	; () banked
 14363  004F7A  5133               	movf	51,w,b	;volatile
 14364                           
 14365                           ; Switch size 1, requested type "space"
 14366                           ; Number of cases is 3, Range of values is 1 to 3
 14367                           ; switch strategies available:
 14368                           ; Name         Instructions Cycles
 14369                           ; simple_byte           10     6 (average)
 14370                           ;	Chosen strategy is simple_byte
 14371  004F7C  0A01               	xorlw	1	; case 1
 14372  004F7E  B4D8               	btfsc	status,2,c
 14373  004F80  D773               	goto	l269
 14374  004F82  0A03               	xorlw	3	; case 2
 14375  004F84  B4D8               	btfsc	status,2,c
 14376  004F86  D77A               	goto	l271
 14377  004F88  0A01               	xorlw	1	; case 3
 14378  004F8A  B4D8               	btfsc	status,2,c
 14379  004F8C  D7C2               	goto	l274
 14380  004F8E  D7F0               	goto	l277
 14381  004F90                     __end_of_USBStdGetDscHandler:
 14382                           	opt stack 0
 14383                           tblptru	equ	0xFF8
 14384                           tblptrh	equ	0xFF7
 14385                           tblptrl	equ	0xFF6
 14386                           tablat	equ	0xFF5
 14387                           prodh	equ	0xFF4
 14388                           prodl	equ	0xFF3
 14389                           intcon	equ	0xFF2
 14390                           intcon2	equ	0xFF1
 14391                           intcon3	equ	0xFF0
 14392                           indf0	equ	0xFEF
 14393                           postinc0	equ	0xFEE
 14394                           fsr0h	equ	0xFEA
 14395                           fsr0l	equ	0xFE9
 14396                           wreg	equ	0xFE8
 14397                           indf1	equ	0xFE7
 14398                           postdec1	equ	0xFE5
 14399                           plusw1	equ	0xFE3
 14400                           fsr1h	equ	0xFE2
 14401                           fsr1l	equ	0xFE1
 14402                           indf2	equ	0xFDF
 14403                           postinc2	equ	0xFDE
 14404                           postdec2	equ	0xFDD
 14405                           plusw2	equ	0xFDB
 14406                           fsr2h	equ	0xFDA
 14407                           fsr2l	equ	0xFD9
 14408                           status	equ	0xFD8
 14409                           
 14410 ;; *************** function _USBStdFeatureReqHandler *****************
 14411 ;; Defined at:
 14412 ;;		line 2756 in file "usb_device.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;		None
 14415 ;; Auto vars:     Size  Location     Type
 14416 ;;  p               2   27[COMRAM] PTR struct __BDT
 14417 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14418 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14419 ;;		 -> UEP0(1), 
 14420 ;;  current_ep_d    1   26[COMRAM] struct .
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      void 
 14423 ;; Registers used:
 14424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14431 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14433 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14434 ;;Total ram usage:        6 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:    4
 14437 ;; This function calls:
 14438 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14439 ;; This function is called by:
 14440 ;;		_USBCheckStdRequest
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           	psect	text66
 14445  001A7A                     __ptext66:
 14446                           	opt stack 0
 14447  001A7A                     _USBStdFeatureReqHandler:
 14448                           	opt stack 22
 14449                           
 14450                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14451                           
 14452                           ;incstack = 0
 14453  001A7A  010D               	movlb	13	; () banked
 14454  001A7C  0532               	decf	50,w,b	;volatile
 14455  001A7E  A4D8               	btfss	status,2,c
 14456  001A80  D011               	goto	l361
 14457                           
 14458                           ; BSR set to: 13
 14459  001A82  5130               	movf	48,w,b	;volatile
 14460  001A84  0B1F               	andlw	31
 14461  001A86  0900               	iorlw	0
 14462  001A88  A4D8               	btfss	status,2,c
 14463  001A8A  D00C               	goto	l361
 14464                           
 14465                           ; BSR set to: 13
 14466                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14467  001A8C  0100               	movlb	0	; () banked
 14468  001A8E  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 14469                           
 14470                           ; BSR set to: 0
 14471                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 14472  001A90  0E03               	movlw	3
 14473  001A92  010D               	movlb	13	; () banked
 14474  001A94  1931               	xorwf	49,w,b	;volatile
 14475  001A96  A4D8               	btfss	status,2,c
 14476  001A98  D002               	goto	l360
 14477                           
 14478                           ; BSR set to: 13
 14479                           ;usb_device.c: 2806: RemoteWakeup = 1;
 14480  001A9A  0E01               	movlw	1
 14481  001A9C  D001               	goto	L7
 14482  001A9E                     l360:
 14483                           
 14484                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 14485                           
 14486                           ; BSR set to: 1
 14487  001A9E  0E00               	movlw	0
 14488  001AA0                     L7:
 14489  001AA0  0101               	movlb	1	; () banked
 14490  001AA2  6F8C               	movwf	_RemoteWakeup& (0+255),b
 14491  001AA4                     l361:
 14492                           
 14493                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 14494                           
 14495                           ; BSR set to: 1
 14496  001AA4  010D               	movlb	13	; () banked
 14497  001AA6  5132               	movf	50,w,b	;volatile
 14498  001AA8  A4D8               	btfss	status,2,c
 14499  001AAA  0012               	return	
 14500                           
 14501                           ; BSR set to: 13
 14502  001AAC  5130               	movf	48,w,b	;volatile
 14503  001AAE  0B1F               	andlw	31
 14504  001AB0  0A02               	xorlw	2
 14505  001AB2  A4D8               	btfss	status,2,c
 14506  001AB4  0012               	return	
 14507                           
 14508                           ; BSR set to: 13
 14509  001AB6  5134               	movf	52,w,b	;volatile
 14510  001AB8  0B0F               	andlw	15
 14511  001ABA  0900               	iorlw	0
 14512  001ABC  B4D8               	btfsc	status,2,c
 14513  001ABE  0012               	return	
 14514                           
 14515                           ; BSR set to: 13
 14516  001AC0  5134               	movf	52,w,b	;volatile
 14517  001AC2  0B0F               	andlw	15
 14518  001AC4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14519  001AC6  0E03               	movlw	3
 14520  001AC8  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14521  001ACA  0012               	return	
 14522                           
 14523                           ; BSR set to: 13
 14524  001ACC  0E20               	movlw	32
 14525  001ACE  0100               	movlb	0	; () banked
 14526  001AD0  19FA               	xorwf	_USBDeviceState& (0+255),w,b
 14527  001AD2  A4D8               	btfss	status,2,c
 14528  001AD4  0012               	return	
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14532  001AD6  8FD1               	bsf	(_inPipes+3)& (0+255),7,b
 14533                           
 14534                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14535  001AD8  010D               	movlb	13	; () banked
 14536  001ADA  BF34               	btfsc	52,7,b	;volatile
 14537  001ADC  D019               	goto	l363
 14538                           
 14539                           ; BSR set to: 13
 14540                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14541  001ADE  5134               	movf	52,w,b	;volatile
 14542  001AE0  0B0F               	andlw	15
 14543  001AE2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14544  001AE4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14545  001AE6  0D02               	mullw	2
 14546  001AE8  0E39               	movlw	low _pBDTEntryOut
 14547  001AEA  24F3               	addwf	prodl,w,c
 14548  001AEC  6ED9               	movwf	fsr2l,c
 14549  001AEE  0E01               	movlw	high _pBDTEntryOut
 14550  001AF0  20F4               	addwfc	prodh,w,c
 14551  001AF2  6EDA               	movwf	fsr2h,c
 14552  001AF4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14553  001AF8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14554                           
 14555                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14556  001AFC  5134               	movf	52,w,b	;volatile
 14557  001AFE  0B0F               	andlw	15
 14558  001B00  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14559  001B02  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14560  001B04  0D01               	mullw	1
 14561  001B06  0E65               	movlw	low _ep_data_out
 14562  001B08  24F3               	addwf	prodl,w,c
 14563  001B0A  6ED9               	movwf	fsr2l,c
 14564  001B0C  0E01               	movlw	high _ep_data_out
 14565  001B0E  D018               	goto	L8
 14566  001B10                     l363:
 14567                           
 14568                           ; BSR set to: 13
 14569                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14570                           
 14571                           ; BSR set to: 13
 14572  001B10  5134               	movf	52,w,b	;volatile
 14573  001B12  0B0F               	andlw	15
 14574  001B14  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14575  001B16  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14576  001B18  0D02               	mullw	2
 14577  001B1A  0ED4               	movlw	low _pBDTEntryIn
 14578  001B1C  24F3               	addwf	prodl,w,c
 14579  001B1E  6ED9               	movwf	fsr2l,c
 14580  001B20  0E00               	movlw	high _pBDTEntryIn
 14581  001B22  20F4               	addwfc	prodh,w,c
 14582  001B24  6EDA               	movwf	fsr2h,c
 14583  001B26  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14584  001B2A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14585                           
 14586                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14587  001B2E  5134               	movf	52,w,b	;volatile
 14588  001B30  0B0F               	andlw	15
 14589  001B32  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14590  001B34  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14591  001B36  0D01               	mullw	1
 14592  001B38  0E68               	movlw	low _ep_data_in
 14593  001B3A  24F3               	addwf	prodl,w,c
 14594  001B3C  6ED9               	movwf	fsr2l,c
 14595  001B3E  0E01               	movlw	high _ep_data_in
 14596  001B40                     L8:
 14597  001B40  20F4               	addwfc	prodh,w,c
 14598  001B42  6EDA               	movwf	fsr2h,c
 14599  001B44  50DF               	movf	indf2,w,c
 14600  001B46  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14601                           
 14602                           ; BSR set to: 13
 14603                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14604                           
 14605                           ; BSR set to: 13
 14606  001B48  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14607  001B4A  D006               	goto	l365
 14608                           
 14609                           ; BSR set to: 13
 14610                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14611  001B4C  0EFB               	movlw	251
 14612  001B4E  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14613  001B50  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14614  001B52  0EFF               	movlw	255
 14615  001B54  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14616  001B56  D004               	goto	L9
 14617  001B58                     l365:
 14618                           
 14619                           ; BSR set to: 13
 14620                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14621                           
 14622                           ; BSR set to: 13
 14623  001B58  0E04               	movlw	4
 14624  001B5A  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14625  001B5C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14626  001B5E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14627  001B60                     L9:
 14628  001B60  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14629                           
 14630                           ; BSR set to: 13
 14631                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14632                           
 14633                           ; BSR set to: 13
 14634  001B62  BF34               	btfsc	52,7,b	;volatile
 14635  001B64  D00A               	goto	l367
 14636                           
 14637                           ; BSR set to: 13
 14638                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14639  001B66  5134               	movf	52,w,b	;volatile
 14640  001B68  0B0F               	andlw	15
 14641  001B6A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14642  001B6C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14643  001B6E  0D02               	mullw	2
 14644  001B70  0E39               	movlw	low _pBDTEntryOut
 14645  001B72  24F3               	addwf	prodl,w,c
 14646  001B74  6ED9               	movwf	fsr2l,c
 14647  001B76  0E01               	movlw	high _pBDTEntryOut
 14648  001B78  D009               	goto	L10
 14649  001B7A                     l367:
 14650                           
 14651                           ; BSR set to: 13
 14652                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14653                           
 14654                           ; BSR set to: 13
 14655  001B7A  5134               	movf	52,w,b	;volatile
 14656  001B7C  0B0F               	andlw	15
 14657  001B7E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14658  001B80  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14659  001B82  0D02               	mullw	2
 14660  001B84  0ED4               	movlw	low _pBDTEntryIn
 14661  001B86  24F3               	addwf	prodl,w,c
 14662  001B88  6ED9               	movwf	fsr2l,c
 14663  001B8A  0E00               	movlw	high _pBDTEntryIn
 14664  001B8C                     L10:
 14665  001B8C  20F4               	addwfc	prodh,w,c
 14666  001B8E  6EDA               	movwf	fsr2h,c
 14667  001B90  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14668  001B94  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14669                           
 14670                           ; BSR set to: 13
 14671                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14672                           
 14673                           ; BSR set to: 13
 14674  001B98  0E03               	movlw	3
 14675  001B9A  1931               	xorwf	49,w,b	;volatile
 14676  001B9C  A4D8               	btfss	status,2,c
 14677  001B9E  D02D               	goto	l369
 14678                           
 14679                           ; BSR set to: 13
 14680                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14681  001BA0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14682  001BA4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14683  001BA8  AEDF               	btfss	indf2,7,c
 14684  001BAA  D01A               	goto	l372
 14685                           
 14686                           ; BSR set to: 13
 14687                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14688  001BAC  BF34               	btfsc	52,7,b	;volatile
 14689  001BAE  D00A               	goto	l371
 14690                           
 14691                           ; BSR set to: 13
 14692                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14693  001BB0  5134               	movf	52,w,b	;volatile
 14694  001BB2  0B0F               	andlw	15
 14695  001BB4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14696  001BB6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14697  001BB8  0D01               	mullw	1
 14698  001BBA  0E65               	movlw	low _ep_data_out
 14699  001BBC  24F3               	addwf	prodl,w,c
 14700  001BBE  6ED9               	movwf	fsr2l,c
 14701  001BC0  0E01               	movlw	high _ep_data_out
 14702  001BC2  D00A               	goto	L11
 14703  001BC4                     l371:
 14704                           
 14705                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14706                           
 14707                           ; BSR set to: 1
 14708  001BC4  010D               	movlb	13	; () banked
 14709  001BC6  5134               	movf	52,w,b	;volatile
 14710  001BC8  0B0F               	andlw	15
 14711  001BCA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14712  001BCC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14713  001BCE  0D01               	mullw	1
 14714  001BD0  0E68               	movlw	low _ep_data_in
 14715  001BD2  24F3               	addwf	prodl,w,c
 14716  001BD4  6ED9               	movwf	fsr2l,c
 14717  001BD6  0E01               	movlw	high _ep_data_in
 14718  001BD8                     L11:
 14719  001BD8  20F4               	addwfc	prodh,w,c
 14720  001BDA  6EDA               	movwf	fsr2h,c
 14721  001BDC  0101               	movlb	1	; () banked
 14722  001BDE  82DF               	bsf	indf2,1,c
 14723  001BE0                     l372:
 14724                           
 14725                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14726                           
 14727                           ; BSR set to: 1
 14728                           
 14729                           ; BSR set to: 1
 14730  001BE0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14731  001BE4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14732  001BE8  0E00               	movlw	0
 14733  001BEA  84DB               	bsf	plusw2,2,c
 14734                           
 14735                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14736  001BEC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14737  001BF0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14738  001BF4  0E00               	movlw	0
 14739  001BF6  8EDB               	bsf	plusw2,7,c
 14740                           
 14741                           ;usb_device.c: 2878: }
 14742  001BF8  0012               	return	
 14743  001BFA                     l369:
 14744                           
 14745                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14746  001BFA  0E04               	movlw	4
 14747  001BFC  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14748  001BFE  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14749  001C00  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14750  001C02  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14751                           
 14752                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14753  001C04  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14754  001C08  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14755  001C0C  AEDF               	btfss	indf2,7,c
 14756  001C0E  D01B               	goto	l374
 14757                           
 14758                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14759  001C10  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14760  001C14  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14761  001C18  0E7F               	movlw	127
 14762  001C1A  16DF               	andwf	indf2,f,c
 14763                           
 14764                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14765  001C1C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14766  001C20  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14767  001C24  0E00               	movlw	0
 14768  001C26  8CDB               	bsf	plusw2,6,c
 14769                           
 14770                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14771  001C28  0E00               	movlw	0
 14772  001C2A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14773  001C2C  0E05               	movlw	5
 14774  001C2E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14775  001C30  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14776  001C34  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14777  001C38  0E00               	movlw	0
 14778  001C3A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14779  001C3C  0E02               	movlw	2
 14780  001C3E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14781  001C40  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14782                           
 14783                           ;usb_device.c: 2893: }
 14784  001C44  D006               	goto	l375
 14785  001C46                     l374:
 14786                           
 14787                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14788  001C46  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14789  001C4A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14790  001C4E  0E00               	movlw	0
 14791  001C50  8CDB               	bsf	plusw2,6,c
 14792  001C52                     l375:
 14793                           
 14794                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14795  001C52  0E04               	movlw	4
 14796  001C54  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14797  001C56  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14798  001C58  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14799  001C5A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14800                           
 14801                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14802  001C5C  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14803  001C5E  D006               	goto	u10840
 14804  001C60  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14805  001C64  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14806  001C68  AEDF               	btfss	indf2,7,c
 14807  001C6A  D030               	goto	l376
 14808  001C6C                     u10840:
 14809                           
 14810                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14811  001C6C  010D               	movlb	13	; () banked
 14812  001C6E  BF34               	btfsc	52,7,b	;volatile
 14813  001C70  D00A               	goto	l379
 14814                           
 14815                           ; BSR set to: 13
 14816                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14817  001C72  5134               	movf	52,w,b	;volatile
 14818  001C74  0B0F               	andlw	15
 14819  001C76  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14820  001C78  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14821  001C7A  0D01               	mullw	1
 14822  001C7C  0E65               	movlw	low _ep_data_out
 14823  001C7E  24F3               	addwf	prodl,w,c
 14824  001C80  6ED9               	movwf	fsr2l,c
 14825  001C82  0E01               	movlw	high _ep_data_out
 14826  001C84  D00A               	goto	L12
 14827  001C86                     l379:
 14828                           
 14829                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14830                           
 14831                           ; BSR set to: 1
 14832  001C86  010D               	movlb	13	; () banked
 14833  001C88  5134               	movf	52,w,b	;volatile
 14834  001C8A  0B0F               	andlw	15
 14835  001C8C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14836  001C8E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14837  001C90  0D01               	mullw	1
 14838  001C92  0E68               	movlw	low _ep_data_in
 14839  001C94  24F3               	addwf	prodl,w,c
 14840  001C96  6ED9               	movwf	fsr2l,c
 14841  001C98  0E01               	movlw	high _ep_data_in
 14842  001C9A                     L12:
 14843  001C9A  20F4               	addwfc	prodh,w,c
 14844  001C9C  6EDA               	movwf	fsr2h,c
 14845  001C9E  0101               	movlb	1	; () banked
 14846  001CA0  92DF               	bcf	indf2,1,c
 14847                           
 14848                           ; BSR set to: 1
 14849                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14850                           
 14851                           ; BSR set to: 1
 14852  001CA2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14853  001CA6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14854  001CAA  0E3B               	movlw	59
 14855  001CAC  16DF               	andwf	indf2,f,c
 14856                           
 14857                           ; BSR set to: 1
 14858                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14859  001CAE  0E00               	movlw	0
 14860  001CB0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14861  001CB2  0E05               	movlw	5
 14862  001CB4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14863  001CB6  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14864  001CBA  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14865  001CBE  0E00               	movlw	0
 14866  001CC0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14867  001CC2  0E02               	movlw	2
 14868  001CC4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14869  001CC6  EC4C  F042         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14870                           
 14871                           ;usb_device.c: 2923: }
 14872  001CCA  D006               	goto	l381
 14873  001CCC                     l376:
 14874                           
 14875                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14876  001CCC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14877  001CD0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14878  001CD4  0E3B               	movlw	59
 14879  001CD6  16DF               	andwf	indf2,f,c
 14880  001CD8                     l381:
 14881                           
 14882                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14883  001CD8  010D               	movlb	13	; () banked
 14884  001CDA  5134               	movf	52,w,b	;volatile
 14885  001CDC  0B0F               	andlw	15
 14886  001CDE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14887  001CE0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14888  001CE2  0D01               	mullw	1
 14889  001CE4  0E26               	movlw	38
 14890  001CE6  24F3               	addwf	prodl,w,c
 14891  001CE8  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14892  001CEA  0E0F               	movlw	15
 14893  001CEC  20F4               	addwfc	prodh,w,c
 14894  001CEE  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14895                           
 14896                           ; BSR set to: 13
 14897                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14898  001CF0  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14899  001CF4  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14900  001CF8  0EFE               	movlw	254
 14901  001CFA  16DF               	andwf	indf2,f,c
 14902                           
 14903                           ; BSR set to: 13
 14904  001CFC  0012               	return	
 14905  001CFE                     __end_of_USBStdFeatureReqHandler:
 14906                           	opt stack 0
 14907                           tblptru	equ	0xFF8
 14908                           tblptrh	equ	0xFF7
 14909                           tblptrl	equ	0xFF6
 14910                           tablat	equ	0xFF5
 14911                           prodh	equ	0xFF4
 14912                           prodl	equ	0xFF3
 14913                           intcon	equ	0xFF2
 14914                           intcon2	equ	0xFF1
 14915                           intcon3	equ	0xFF0
 14916                           indf0	equ	0xFEF
 14917                           postinc0	equ	0xFEE
 14918                           fsr0h	equ	0xFEA
 14919                           fsr0l	equ	0xFE9
 14920                           wreg	equ	0xFE8
 14921                           indf1	equ	0xFE7
 14922                           postdec1	equ	0xFE5
 14923                           plusw1	equ	0xFE3
 14924                           fsr1h	equ	0xFE2
 14925                           fsr1l	equ	0xFE1
 14926                           indf2	equ	0xFDF
 14927                           postinc2	equ	0xFDE
 14928                           postdec2	equ	0xFDD
 14929                           plusw2	equ	0xFDB
 14930                           fsr2h	equ	0xFDA
 14931                           fsr2l	equ	0xFD9
 14932                           status	equ	0xFD8
 14933                           
 14934 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14935 ;; Defined at:
 14936 ;;		line 54 in file "usb_events.c"
 14937 ;; Parameters:    Size  Location     Type
 14938 ;;  event           2   15[COMRAM] enum E6832
 14939 ;;  pdata           2   17[COMRAM] PTR void 
 14940 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14941 ;;		 -> BDT(48), 
 14942 ;;  size            2   19[COMRAM] unsigned int 
 14943 ;; Auto vars:     Size  Location     Type
 14944 ;;		None
 14945 ;; Return value:  Size  Location     Type
 14946 ;;                  1    wreg      unsigned char 
 14947 ;; Registers used:
 14948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14954 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14958 ;;Total ram usage:        8 bytes
 14959 ;; Hardware stack levels used:    1
 14960 ;; Hardware stack levels required when called:    3
 14961 ;; This function calls:
 14962 ;;		_APP_DeviceCustomHIDInitialize
 14963 ;;		_APP_DeviceMSDInitialize
 14964 ;;		_MSDTransferTerminated
 14965 ;;		_SYSTEM_Initialize
 14966 ;;		_USBCheckHIDRequest
 14967 ;;		_USBCheckMSDRequest
 14968 ;; This function is called by:
 14969 ;;		_USBDeviceTasks
 14970 ;;		_USBStdSetCfgHandler
 14971 ;;		_USBSuspend
 14972 ;;		_USBWakeFromSuspend
 14973 ;;		_USBCtrlTrfSetupHandler
 14974 ;;		_USBCheckStdRequest
 14975 ;;		_USBStdFeatureReqHandler
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text67
 14980  008498                     __ptext67:
 14981                           	opt stack 0
 14982  008498                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14983                           	opt stack 26
 14984                           
 14985                           ;usb_events.c: 56: switch((int)event)
 14986                           
 14987                           ;incstack = 0
 14988  008498  D019               	goto	l800
 14989  00849A                     
 14990                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14991  00849A  0E01               	movlw	1
 14992  00849C  EC3E  F049         	call	_SYSTEM_Initialize
 14993                           
 14994                           ;usb_events.c: 79: break;
 14995  0084A0  0012               	return	
 14996  0084A2                     
 14997                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14998  0084A2  0E02               	movlw	2
 14999  0084A4  EC3E  F049         	call	_SYSTEM_Initialize
 15000                           
 15001                           ;usb_events.c: 90: break;
 15002  0084A8  0012               	return	
 15003  0084AA                     
 15004                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 15005  0084AA  EC73  F04C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 15006                           
 15007                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 15008  0084AE  EC1A  F050         	call	_APP_DeviceMSDInitialize	;wreg free
 15009                           
 15010                           ;usb_events.c: 100: break;
 15011                           
 15012                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 15013                           
 15014                           ;usb_events.c: 97: break;
 15015  0084B2  0012               	return	
 15016  0084B4                     
 15017                           ;usb_events.c: 105: USBCheckHIDRequest();
 15018  0084B4  ECE1  F031         	call	_USBCheckHIDRequest	;wreg free
 15019                           
 15020                           ;usb_events.c: 108: USBCheckMSDRequest();
 15021  0084B8  ECEE  F036         	call	_USBCheckMSDRequest	;wreg free
 15022                           
 15023                           ;usb_events.c: 112: break;
 15024                           
 15025                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 15026                           
 15027                           ;usb_events.c: 109: break;
 15028  0084BC  0012               	return	
 15029  0084BE                     
 15030                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 15031  0084BE  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 15032  0084C2  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 15033  0084C6  EC11  F048         	call	_MSDTransferTerminated	;wreg free
 15034                           
 15035                           ;usb_events.c: 129: }
 15036                           
 15037                           ;usb_events.c: 128: break;
 15038                           
 15039                           ;usb_events.c: 127: default:
 15040                           
 15041                           ;usb_events.c: 125: break;
 15042  0084CA  0012               	return	
 15043  0084CC                     l800:
 15044  0084CC  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15045  0084D0  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15046                           
 15047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15048                           ; Switch size 1, requested type "space"
 15049                           ; Number of cases is 2, Range of values is 0 to 127
 15050                           ; switch strategies available:
 15051                           ; Name         Instructions Cycles
 15052                           ; simple_byte            7     4 (average)
 15053                           ;	Chosen strategy is simple_byte
 15054  0084D4  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15055  0084D6  0A00               	xorlw	0	; case 0
 15056  0084D8  B4D8               	btfsc	status,2,c
 15057  0084DA  D004               	goto	l17277
 15058  0084DC  0A7F               	xorlw	127	; case 127
 15059  0084DE  A4D8               	btfss	status,2,c
 15060  0084E0  0012               	return	
 15061  0084E2  D01A               	goto	l17279
 15062  0084E4                     l17277:
 15063                           
 15064                           ; Switch size 1, requested type "space"
 15065                           ; Number of cases is 8, Range of values is 1 to 117
 15066                           ; switch strategies available:
 15067                           ; Name         Instructions Cycles
 15068                           ; simple_byte           25    13 (average)
 15069                           ;	Chosen strategy is simple_byte
 15070  0084E4  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15071  0084E6  0A01               	xorlw	1	; case 1
 15072  0084E8  B4D8               	btfsc	status,2,c
 15073  0084EA  D7DF               	goto	l806
 15074  0084EC  0A03               	xorlw	3	; case 2
 15075  0084EE  B4D8               	btfsc	status,2,c
 15076  0084F0  0012               	return	
 15077  0084F2  0A01               	xorlw	1	; case 3
 15078  0084F4  B4D8               	btfsc	status,2,c
 15079  0084F6  D7DE               	goto	l808
 15080  0084F8  0A06               	xorlw	6	; case 5
 15081  0084FA  B4D8               	btfsc	status,2,c
 15082  0084FC  D7E0               	goto	l810
 15083  0084FE  0A77               	xorlw	119	; case 114
 15084  008500  B4D8               	btfsc	status,2,c
 15085  008502  0012               	return	
 15086  008504  0A01               	xorlw	1	; case 115
 15087  008506  B4D8               	btfsc	status,2,c
 15088  008508  0012               	return	
 15089  00850A  0A07               	xorlw	7	; case 116
 15090  00850C  B4D8               	btfsc	status,2,c
 15091  00850E  D7C9               	goto	l805
 15092  008510  0A01               	xorlw	1	; case 117
 15093  008512  A4D8               	btfss	status,2,c
 15094  008514  0012               	return	
 15095  008516  D7C1               	goto	l804
 15096  008518                     l17279:
 15097                           
 15098                           ; Switch size 1, requested type "space"
 15099                           ; Number of cases is 1, Range of values is 255 to 255
 15100                           ; switch strategies available:
 15101                           ; Name         Instructions Cycles
 15102                           ; simple_byte            4     3 (average)
 15103                           ;	Chosen strategy is simple_byte
 15104  008518  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15105  00851A  0AFF               	xorlw	255	; case 255
 15106  00851C  0012               	return	
 15107  00851E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15108                           	opt stack 0
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           intcon2	equ	0xFF1
 15117                           intcon3	equ	0xFF0
 15118                           indf0	equ	0xFEF
 15119                           postinc0	equ	0xFEE
 15120                           fsr0h	equ	0xFEA
 15121                           fsr0l	equ	0xFE9
 15122                           wreg	equ	0xFE8
 15123                           indf1	equ	0xFE7
 15124                           postdec1	equ	0xFE5
 15125                           plusw1	equ	0xFE3
 15126                           fsr1h	equ	0xFE2
 15127                           fsr1l	equ	0xFE1
 15128                           indf2	equ	0xFDF
 15129                           postinc2	equ	0xFDE
 15130                           postdec2	equ	0xFDD
 15131                           plusw2	equ	0xFDB
 15132                           fsr2h	equ	0xFDA
 15133                           fsr2l	equ	0xFD9
 15134                           status	equ	0xFD8
 15135                           
 15136 ;; *************** function _USBCheckMSDRequest *****************
 15137 ;; Defined at:
 15138 ;;		line 218 in file "usb_device_msd.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;		None
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  1    wreg      void 
 15145 ;; Registers used:
 15146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15153 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15156 ;;Total ram usage:        4 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:    1
 15159 ;; This function calls:
 15160 ;;		_USBTransferOnePacket
 15161 ;; This function is called by:
 15162 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15163 ;; This function uses a non-reentrant model
 15164 ;;
 15165                           
 15166                           	psect	text68
 15167  006DDC                     __ptext68:
 15168                           	opt stack 0
 15169  006DDC                     _USBCheckMSDRequest:
 15170                           	opt stack 27
 15171                           
 15172                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 15173                           
 15174                           ;incstack = 0
 15175  006DDC  010D               	movlb	13	; () banked
 15176  006DDE  5130               	movf	48,w,b	;volatile
 15177  006DE0  0B1F               	andlw	31
 15178  006DE2  06E8               	decf	wreg,f,c
 15179  006DE4  A4D8               	btfss	status,2,c
 15180  006DE6  0012               	return	
 15181                           
 15182                           ; BSR set to: 13
 15183                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 15184                           
 15185                           ; BSR set to: 13
 15186                           
 15187                           ; BSR set to: 13
 15188                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 15189  006DE8  5134               	movf	52,w,b	;volatile
 15190  006DEA  A4D8               	btfss	status,2,c
 15191  006DEC  0012               	return	
 15192  006DEE  D04F               	goto	l529
 15193  006DF0                     
 15194                           ; BSR set to: 13
 15195                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 15196                           
 15197                           ; BSR set to: 13
 15198  006DF0  5132               	movf	50,w,b	;volatile
 15199  006DF2  1133               	iorwf	51,w,b	;volatile
 15200  006DF4  A4D8               	btfss	status,2,c
 15201  006DF6  0012               	return	
 15202                           
 15203                           ; BSR set to: 13
 15204  006DF8  5136               	movf	54,w,b	;volatile
 15205  006DFA  1137               	iorwf	55,w,b	;volatile
 15206  006DFC  A4D8               	btfss	status,2,c
 15207  006DFE  0012               	return	
 15208                           
 15209                           ; BSR set to: 13
 15210                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 15211                           
 15212                           ; BSR set to: 13
 15213                           
 15214                           ; BSR set to: 13
 15215                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 15216  006E00  0E00               	movlw	0
 15217  006E02  0100               	movlb	0	; () banked
 15218  006E04  6FF0               	movwf	_MSD_State& (0+255),b
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 15222  006E06  69EF               	setf	_MSDCommandState& (0+255),b
 15223                           
 15224                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 15225  006E08  0E00               	movlw	0
 15226  006E0A  6FEE               	movwf	_MSDReadState& (0+255),b
 15227                           
 15228                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 15229  006E0C  0E00               	movlw	0
 15230  006E0E  6FED               	movwf	_MSDWriteState& (0+255),b
 15231                           
 15232                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 15233  006E10  0E01               	movlw	1
 15234  006E12  0101               	movlb	1	; () banked
 15235  006E14  6F87               	movwf	_MSDCBWValid& (0+255),b
 15236                           
 15237                           ; BSR set to: 1
 15238                           
 15239                           ; BSR set to: 1
 15240                           
 15241                           ; BSR set to: 1
 15242                           
 15243                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 15244  006E16  C13D  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 15245  006E1A  C13E  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 15246                           
 15247                           ; BSR set to: 1
 15248  006E1E  500C               	movf	_USBCheckMSDRequest$2319,w,c
 15249  006E20  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 15250  006E22  B4D8               	btfsc	status,2,c
 15251  006E24  D00A               	goto	u8520
 15252                           
 15253                           ; BSR set to: 1
 15254                           
 15255                           ; BSR set to: 1
 15256                           
 15257                           ; BSR set to: 1
 15258                           
 15259                           ; BSR set to: 1
 15260  006E26  C13D  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 15261  006E2A  C13E  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 15262                           
 15263                           ; BSR set to: 1
 15264                           
 15265                           ; BSR set to: 1
 15266  006E2E  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 15267  006E32  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 15268  006E36  BEDF               	btfsc	indf2,7,c
 15269  006E38  D00F               	goto	l534
 15270  006E3A                     u8520:
 15271                           
 15272                           ; BSR set to: 1
 15273                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 15274                           
 15275                           ; BSR set to: 1
 15276  006E3A  0E00               	movlw	0
 15277  006E3C  6E01               	movwf	USBTransferOnePacket@dir,c
 15278  006E3E  0E40               	movlw	64
 15279  006E40  6E02               	movwf	USBTransferOnePacket@data,c
 15280  006E42  0E0D               	movlw	13
 15281  006E44  6E03               	movwf	USBTransferOnePacket@data+1,c
 15282  006E46  0E40               	movlw	64
 15283  006E48  6E04               	movwf	USBTransferOnePacket@len,c
 15284  006E4A  0E02               	movlw	2
 15285  006E4C  EC96  F02C         	call	_USBTransferOnePacket
 15286  006E50  C001  F0E2         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15287  006E54  C002  F0E3         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15288  006E58                     l534:
 15289                           
 15290                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 15291  006E58  0E80               	movlw	128
 15292  006E5A  0100               	movlb	0	; () banked
 15293  006E5C  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15294                           
 15295                           ;usb_device_msd.c: 263: break;
 15296  006E5E  0012               	return	
 15297  006E60                     
 15298                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 15299                           
 15300                           ; BSR set to: 0
 15301  006E60  010D               	movlb	13	; () banked
 15302  006E62  5132               	movf	50,w,b	;volatile
 15303  006E64  1133               	iorwf	51,w,b	;volatile
 15304  006E66  A4D8               	btfss	status,2,c
 15305  006E68  0012               	return	
 15306                           
 15307                           ; BSR set to: 13
 15308  006E6A  0536               	decf	54,w,b	;volatile
 15309  006E6C  1137               	iorwf	55,w,b	;volatile
 15310  006E6E  A4D8               	btfss	status,2,c
 15311  006E70  0012               	return	
 15312                           
 15313                           ; BSR set to: 13
 15314                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 15315                           
 15316                           ; BSR set to: 13
 15317                           
 15318                           ; BSR set to: 13
 15319                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 15320  006E72  0E00               	movlw	0
 15321  006E74  6F38               	movwf	56,b	;volatile
 15322                           
 15323                           ; BSR set to: 13
 15324                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15325  006E76  0E38               	movlw	56
 15326  006E78  0100               	movlb	0	; () banked
 15327  006E7A  6FCE               	movwf	_inPipes& (0+255),b
 15328  006E7C  0E0D               	movlw	13
 15329  006E7E  6FCF               	movwf	(_inPipes+1)& (0+255),b
 15330                           
 15331                           ; BSR set to: 0
 15332  006E80  0E00               	movlw	0
 15333  006E82  6FD3               	movwf	(_inPipes+5)& (0+255),b
 15334  006E84  0E01               	movlw	1
 15335  006E86  6FD2               	movwf	(_inPipes+4)& (0+255),b
 15336                           
 15337                           ; BSR set to: 0
 15338  006E88  0EC1               	movlw	193
 15339  006E8A  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15340                           
 15341                           ; BSR set to: 0
 15342                           ;usb_device_msd.c: 278: }
 15343                           
 15344                           ;usb_device_msd.c: 277: break;
 15345  006E8C  0012               	return	
 15346  006E8E                     l529:
 15347                           
 15348                           ; BSR set to: 0
 15349  006E8E  010D               	movlb	13	; () banked
 15350  006E90  5131               	movf	49,w,b	;volatile
 15351                           
 15352                           ; Switch size 1, requested type "space"
 15353                           ; Number of cases is 2, Range of values is 254 to 255
 15354                           ; switch strategies available:
 15355                           ; Name         Instructions Cycles
 15356                           ; simple_byte            7     4 (average)
 15357                           ;	Chosen strategy is simple_byte
 15358  006E92  0AFE               	xorlw	254	; case 254
 15359  006E94  B4D8               	btfsc	status,2,c
 15360  006E96  D7E4               	goto	l546
 15361  006E98  0A01               	xorlw	1	; case 255
 15362  006E9A  A4D8               	btfss	status,2,c
 15363  006E9C  0012               	return	
 15364  006E9E  D7A8               	goto	l530
 15365  006EA0                     __end_of_USBCheckMSDRequest:
 15366                           	opt stack 0
 15367                           tblptru	equ	0xFF8
 15368                           tblptrh	equ	0xFF7
 15369                           tblptrl	equ	0xFF6
 15370                           tablat	equ	0xFF5
 15371                           prodh	equ	0xFF4
 15372                           prodl	equ	0xFF3
 15373                           intcon	equ	0xFF2
 15374                           intcon2	equ	0xFF1
 15375                           intcon3	equ	0xFF0
 15376                           indf0	equ	0xFEF
 15377                           postinc0	equ	0xFEE
 15378                           fsr0h	equ	0xFEA
 15379                           fsr0l	equ	0xFE9
 15380                           wreg	equ	0xFE8
 15381                           indf1	equ	0xFE7
 15382                           postdec1	equ	0xFE5
 15383                           plusw1	equ	0xFE3
 15384                           fsr1h	equ	0xFE2
 15385                           fsr1l	equ	0xFE1
 15386                           indf2	equ	0xFDF
 15387                           postinc2	equ	0xFDE
 15388                           postdec2	equ	0xFDD
 15389                           plusw2	equ	0xFDB
 15390                           fsr2h	equ	0xFDA
 15391                           fsr2l	equ	0xFD9
 15392                           status	equ	0xFD8
 15393                           
 15394 ;; *************** function _USBCheckHIDRequest *****************
 15395 ;; Defined at:
 15396 ;;		line 153 in file "usb_device_hid.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;		None
 15399 ;; Auto vars:     Size  Location     Type
 15400 ;;		None
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  1    wreg      void 
 15403 ;; Registers used:
 15404 ;;		wreg, status,2, status,0
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15414 ;;Total ram usage:        0 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; This function calls:
 15417 ;;		Nothing
 15418 ;; This function is called by:
 15419 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text69
 15424  0063C2                     __ptext69:
 15425                           	opt stack 0
 15426  0063C2                     _USBCheckHIDRequest:
 15427                           	opt stack 28
 15428                           
 15429                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15430                           
 15431                           ;incstack = 0
 15432  0063C2  010D               	movlb	13	; () banked
 15433  0063C4  5130               	movf	48,w,b	;volatile
 15434  0063C6  0B1F               	andlw	31
 15435  0063C8  06E8               	decf	wreg,f,c
 15436  0063CA  A4D8               	btfss	status,2,c
 15437  0063CC  0012               	return	
 15438                           
 15439                           ; BSR set to: 13
 15440                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15441                           
 15442                           ; BSR set to: 13
 15443                           
 15444                           ; BSR set to: 13
 15445  0063CE  5134               	movf	52,w,b	;volatile
 15446  0063D0  A4D8               	btfss	status,2,c
 15447  0063D2  0012               	return	
 15448                           
 15449                           ; BSR set to: 13
 15450                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15451                           
 15452                           ; BSR set to: 13
 15453                           
 15454                           ; BSR set to: 13
 15455  0063D4  0E06               	movlw	6
 15456  0063D6  1931               	xorwf	49,w,b	;volatile
 15457  0063D8  B4D8               	btfsc	status,2,c
 15458  0063DA  D01A               	goto	l411
 15459  0063DC  D022               	goto	l414
 15460  0063DE                     
 15461                           ; BSR set to: 13
 15462                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15463                           
 15464                           ; BSR set to: 13
 15465  0063DE  0100               	movlb	0	; () banked
 15466  0063E0  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 15467  0063E2  A4D8               	btfss	status,2,c
 15468  0063E4  D01E               	goto	l414
 15469                           
 15470                           ; BSR set to: 0
 15471                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 15472  0063E6  0EB9               	movlw	low (_configDescriptor1+18)
 15473  0063E8  6FCE               	movwf	_inPipes& (0+255),b
 15474  0063EA  0EBE               	movlw	high (_configDescriptor1+18)
 15475  0063EC  6FCF               	movwf	(_inPipes+1)& (0+255),b
 15476                           
 15477                           ; BSR set to: 0
 15478  0063EE  0E00               	movlw	0
 15479  0063F0  6FD3               	movwf	(_inPipes+5)& (0+255),b
 15480  0063F2  0E09               	movlw	9
 15481  0063F4  D00B               	goto	L13
 15482  0063F6                     l11521:
 15483                           
 15484                           ; BSR set to: 0
 15485  0063F6  0EC0               	movlw	192
 15486  0063F8  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 15490  0063FA  D013               	goto	l414
 15491  0063FC                     
 15492                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 15493                           
 15494                           ; BSR set to: 0
 15495  0063FC  0E6D               	movlw	low _hid_rpt01
 15496  0063FE  0100               	movlb	0	; () banked
 15497  006400  6FCE               	movwf	_inPipes& (0+255),b
 15498  006402  0EBF               	movlw	high _hid_rpt01
 15499  006404  6FCF               	movwf	(_inPipes+1)& (0+255),b
 15500                           
 15501                           ; BSR set to: 0
 15502  006406  0E00               	movlw	0
 15503  006408  6FD3               	movwf	(_inPipes+5)& (0+255),b
 15504  00640A  0E1D               	movlw	29
 15505  00640C                     L13:
 15506  00640C  6FD2               	movwf	(_inPipes+4)& (0+255),b
 15507  00640E  D7F3               	goto	l11521
 15508  006410                     l411:
 15509                           
 15510                           ; BSR set to: 0
 15511  006410  010D               	movlb	13	; () banked
 15512  006412  5133               	movf	51,w,b	;volatile
 15513                           
 15514                           ; Switch size 1, requested type "space"
 15515                           ; Number of cases is 3, Range of values is 33 to 35
 15516                           ; switch strategies available:
 15517                           ; Name         Instructions Cycles
 15518                           ; simple_byte           10     6 (average)
 15519                           ;	Chosen strategy is simple_byte
 15520  006414  0A21               	xorlw	33	; case 33
 15521  006416  B4D8               	btfsc	status,2,c
 15522  006418  D7E2               	goto	l412
 15523  00641A  0A03               	xorlw	3	; case 34
 15524  00641C  B4D8               	btfsc	status,2,c
 15525  00641E  D7EE               	goto	l415
 15526  006420  0A01               	xorlw	1	; case 35
 15527  006422                     l414:
 15528                           
 15529                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15530                           
 15531                           ; BSR set to: 13
 15532                           
 15533                           ; BSR set to: 13
 15534  006422  010D               	movlb	13	; () banked
 15535  006424  3930               	swapf	48,w,b	;volatile
 15536  006426  32E8               	rrcf	wreg,f,c
 15537  006428  0B03               	andlw	3
 15538  00642A  06E8               	decf	wreg,f,c
 15539  00642C  A4D8               	btfss	status,2,c
 15540  00642E  0012               	return	
 15541  006430  D024               	goto	l418
 15542  006432                     
 15543                           ; BSR set to: 13
 15544                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15545                           
 15546                           ; BSR set to: 13
 15547  006432  0EAE               	movlw	low _idle_rate
 15548  006434  0100               	movlb	0	; () banked
 15549  006436  6FCE               	movwf	_inPipes& (0+255),b
 15550  006438  0E01               	movlw	high _idle_rate
 15551  00643A  6FCF               	movwf	(_inPipes+1)& (0+255),b
 15552                           
 15553                           ; BSR set to: 0
 15554  00643C  0E00               	movlw	0
 15555  00643E  6FD3               	movwf	(_inPipes+5)& (0+255),b
 15556  006440  0E01               	movlw	1
 15557  006442  6FD2               	movwf	(_inPipes+4)& (0+255),b
 15558                           
 15559                           ; BSR set to: 0
 15560  006444  0EC1               	movlw	193
 15561  006446  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15562                           
 15563                           ;usb_device_hid.c: 223: break;
 15564  006448  0012               	return	
 15565  00644A                     
 15566                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15567                           
 15568                           ; BSR set to: 0
 15569  00644A  0E80               	movlw	128
 15570  00644C  0100               	movlb	0	; () banked
 15571  00644E  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15572                           
 15573                           ; BSR set to: 0
 15574                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15575  006450  CD33 F1AE          	movff	3379,_idle_rate	;volatile
 15576                           
 15577                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15578  006454  0012               	return	
 15579  006456                     
 15580                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15581                           
 15582                           ; BSR set to: 0
 15583  006456  0EAD               	movlw	low _active_protocol
 15584  006458  0100               	movlb	0	; () banked
 15585  00645A  6FCE               	movwf	_inPipes& (0+255),b
 15586  00645C  0E01               	movlw	high _active_protocol
 15587  00645E  6FCF               	movwf	(_inPipes+1)& (0+255),b
 15588                           
 15589                           ; BSR set to: 0
 15590  006460  0E00               	movlw	0
 15591  006462  6FD3               	movwf	(_inPipes+5)& (0+255),b
 15592  006464  0E01               	movlw	1
 15593  006466  6FD2               	movwf	(_inPipes+4)& (0+255),b
 15594                           
 15595                           ; BSR set to: 0
 15596  006468  0E81               	movlw	129
 15597  00646A  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15598                           
 15599                           ;usb_device_hid.c: 234: break;
 15600  00646C  0012               	return	
 15601  00646E                     
 15602                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15603                           
 15604                           ; BSR set to: 0
 15605  00646E  0E80               	movlw	128
 15606  006470  0100               	movlb	0	; () banked
 15607  006472  6FD1               	movwf	(_inPipes+3)& (0+255),b
 15608                           
 15609                           ; BSR set to: 0
 15610                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15611  006474  CD32 F1AD          	movff	3378,_active_protocol	;volatile
 15612                           
 15613                           ; BSR set to: 0
 15614                           ;usb_device_hid.c: 239: }
 15615                           
 15616                           ;usb_device_hid.c: 238: break;
 15617  006478  0012               	return	
 15618  00647A                     l418:
 15619                           
 15620                           ; BSR set to: 0
 15621  00647A  010D               	movlb	13	; () banked
 15622  00647C  5131               	movf	49,w,b	;volatile
 15623                           
 15624                           ; Switch size 1, requested type "space"
 15625                           ; Number of cases is 6, Range of values is 1 to 11
 15626                           ; switch strategies available:
 15627                           ; Name         Instructions Cycles
 15628                           ; simple_byte           19    10 (average)
 15629                           ;	Chosen strategy is simple_byte
 15630  00647E  0A01               	xorlw	1	; case 1
 15631  006480  B4D8               	btfsc	status,2,c
 15632  006482  0012               	return	
 15633  006484  0A03               	xorlw	3	; case 2
 15634  006486  B4D8               	btfsc	status,2,c
 15635  006488  D7D4               	goto	l422
 15636  00648A  0A01               	xorlw	1	; case 3
 15637  00648C  B4D8               	btfsc	status,2,c
 15638  00648E  D7E3               	goto	l424
 15639  006490  0A0A               	xorlw	10	; case 9
 15640  006492  B4D8               	btfsc	status,2,c
 15641  006494  0012               	return	
 15642  006496  0A03               	xorlw	3	; case 10
 15643  006498  B4D8               	btfsc	status,2,c
 15644  00649A  D7D7               	goto	l423
 15645  00649C  0A01               	xorlw	1	; case 11
 15646  00649E  A4D8               	btfss	status,2,c
 15647  0064A0  0012               	return	
 15648  0064A2  D7E5               	goto	l425
 15649  0064A4                     __end_of_USBCheckHIDRequest:
 15650                           	opt stack 0
 15651                           tblptru	equ	0xFF8
 15652                           tblptrh	equ	0xFF7
 15653                           tblptrl	equ	0xFF6
 15654                           tablat	equ	0xFF5
 15655                           prodh	equ	0xFF4
 15656                           prodl	equ	0xFF3
 15657                           intcon	equ	0xFF2
 15658                           intcon2	equ	0xFF1
 15659                           intcon3	equ	0xFF0
 15660                           indf0	equ	0xFEF
 15661                           postinc0	equ	0xFEE
 15662                           fsr0h	equ	0xFEA
 15663                           fsr0l	equ	0xFE9
 15664                           wreg	equ	0xFE8
 15665                           indf1	equ	0xFE7
 15666                           postdec1	equ	0xFE5
 15667                           plusw1	equ	0xFE3
 15668                           fsr1h	equ	0xFE2
 15669                           fsr1l	equ	0xFE1
 15670                           indf2	equ	0xFDF
 15671                           postinc2	equ	0xFDE
 15672                           postdec2	equ	0xFDD
 15673                           plusw2	equ	0xFDB
 15674                           fsr2h	equ	0xFDA
 15675                           fsr2l	equ	0xFD9
 15676                           status	equ	0xFD8
 15677                           
 15678 ;; *************** function _SYSTEM_Initialize *****************
 15679 ;; Defined at:
 15680 ;;		line 37 in file "system.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  state           1    wreg     enum E6623
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;  state           1    4[COMRAM] enum E6623
 15685 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15686 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15687 ;; Return value:  Size  Location     Type
 15688 ;;                  1    wreg      void 
 15689 ;; Registers used:
 15690 ;;		wreg, status,2, status,0
 15691 ;; Tracked objects:
 15692 ;;		On entry : 0/0
 15693 ;;		On exit  : 0/0
 15694 ;;		Unchanged: 0/0
 15695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15697 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15699 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15700 ;;Total ram usage:        5 bytes
 15701 ;; Hardware stack levels used:    1
 15702 ;; This function calls:
 15703 ;;		Nothing
 15704 ;; This function is called by:
 15705 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15706 ;;		_main
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710                           	psect	text70
 15711  00927C                     __ptext70:
 15712                           	opt stack 0
 15713  00927C                     _SYSTEM_Initialize:
 15714                           	opt stack 28
 15715                           
 15716                           ;incstack = 0
 15717                           ;SYSTEM_Initialize@state stored from wreg
 15718  00927C  6E05               	movwf	SYSTEM_Initialize@state,c
 15719                           
 15720                           ;system.c: 39: switch(state)
 15721  00927E  D01D               	goto	l924
 15722  009280                     
 15723                           ;system.c: 48: {;system.c: 49: unsigned int pll_startup_counter = 600;
 15724  009280  0E02               	movlw	2
 15725  009282  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15726  009284  0E58               	movlw	88
 15727  009286  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15728                           
 15729                           ;system.c: 50: OSCTUNEbits.PLLEN = 1;
 15730  009288  8C9B               	bsf	3995,6,c	;volatile
 15731  00928A                     l11707:
 15732  00928A  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15733  00928C  A0D8               	btfss	status,0,c
 15734  00928E  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15735  009290  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15736  009292  E1FB               	bnz	l11707
 15737  009294  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15738  009296  B4D8               	btfsc	status,2,c
 15739  009298  0012               	return	
 15740  00929A  D7F7               	goto	l927
 15741  00929C                     
 15742                           ;system.c: 76: OSCCON = 0x70;
 15743  00929C  0E70               	movlw	112
 15744  00929E  6ED3               	movwf	4051,c	;volatile
 15745                           
 15746                           ;system.c: 82: {;system.c: 83: unsigned int pll_startup_counter = 800;
 15747  0092A0  0E03               	movlw	3
 15748  0092A2  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3117+1,c
 15749  0092A4  0E20               	movlw	32
 15750  0092A6  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3117,c
 15751  0092A8                     l11711:
 15752  0092A8  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3117,f,c
 15753  0092AA  A0D8               	btfss	status,0,c
 15754  0092AC  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3117+1,f,c
 15755  0092AE  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3117,w,c
 15756  0092B0  E1FB               	bnz	l11711
 15757  0092B2  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3117+1,w,c
 15758  0092B4  B4D8               	btfsc	status,2,c
 15759  0092B6  0012               	return	
 15760  0092B8  D7F7               	goto	l933
 15761  0092BA                     l924:
 15762  0092BA  5005               	movf	SYSTEM_Initialize@state,w,c
 15763                           
 15764                           ; Switch size 1, requested type "space"
 15765                           ; Number of cases is 3, Range of values is 0 to 2
 15766                           ; switch strategies available:
 15767                           ; Name         Instructions Cycles
 15768                           ; simple_byte           10     6 (average)
 15769                           ;	Chosen strategy is simple_byte
 15770  0092BC  0A00               	xorlw	0	; case 0
 15771  0092BE  B4D8               	btfsc	status,2,c
 15772  0092C0  D7DF               	goto	l925
 15773  0092C2  0A01               	xorlw	1	; case 1
 15774  0092C4  B4D8               	btfsc	status,2,c
 15775  0092C6  0012               	return	
 15776  0092C8  0A03               	xorlw	3	; case 2
 15777  0092CA  A4D8               	btfss	status,2,c
 15778  0092CC  0012               	return	
 15779  0092CE  D7E6               	goto	l931
 15780  0092D0                     __end_of_SYSTEM_Initialize:
 15781                           	opt stack 0
 15782                           tblptru	equ	0xFF8
 15783                           tblptrh	equ	0xFF7
 15784                           tblptrl	equ	0xFF6
 15785                           tablat	equ	0xFF5
 15786                           prodh	equ	0xFF4
 15787                           prodl	equ	0xFF3
 15788                           intcon	equ	0xFF2
 15789                           intcon2	equ	0xFF1
 15790                           intcon3	equ	0xFF0
 15791                           indf0	equ	0xFEF
 15792                           postinc0	equ	0xFEE
 15793                           fsr0h	equ	0xFEA
 15794                           fsr0l	equ	0xFE9
 15795                           wreg	equ	0xFE8
 15796                           indf1	equ	0xFE7
 15797                           postdec1	equ	0xFE5
 15798                           plusw1	equ	0xFE3
 15799                           fsr1h	equ	0xFE2
 15800                           fsr1l	equ	0xFE1
 15801                           indf2	equ	0xFDF
 15802                           postinc2	equ	0xFDE
 15803                           postdec2	equ	0xFDD
 15804                           plusw2	equ	0xFDB
 15805                           fsr2h	equ	0xFDA
 15806                           fsr2l	equ	0xFD9
 15807                           status	equ	0xFD8
 15808                           
 15809 ;; *************** function _MSDTransferTerminated *****************
 15810 ;; Defined at:
 15811 ;;		line 1674 in file "usb_device_msd.c"
 15812 ;; Parameters:    Size  Location     Type
 15813 ;;  handle          2   11[COMRAM] PTR void 
 15814 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15815 ;;		 -> BDT(48), 
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15831 ;;Total ram usage:        4 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:    1
 15834 ;; This function calls:
 15835 ;;		_USBStallEndpoint
 15836 ;;		_USBTransferOnePacket
 15837 ;; This function is called by:
 15838 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           	psect	text71
 15843  009022                     __ptext71:
 15844                           	opt stack 0
 15845  009022                     _MSDTransferTerminated:
 15846                           	opt stack 27
 15847                           
 15848                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15849                           
 15850                           ;incstack = 0
 15851  009022  0101               	movlb	1	; () banked
 15852  009024  5187               	movf	_MSDCBWValid& (0+255),w,b
 15853  009026  A4D8               	btfss	status,2,c
 15854  009028  D00B               	goto	l764
 15855                           
 15856                           ; BSR set to: 1
 15857                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15858  00902A  0E01               	movlw	1
 15859  00902C  6E01               	movwf	USBStallEndpoint@dir,c
 15860  00902E  0E02               	movlw	2
 15861  009030  EC8B  F02A         	call	_USBStallEndpoint
 15862                           
 15863                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15864  009034  0E00               	movlw	0
 15865  009036  6E01               	movwf	USBStallEndpoint@dir,c
 15866  009038  0E02               	movlw	2
 15867  00903A  EC8B  F02A         	call	_USBStallEndpoint
 15868                           
 15869                           ;usb_device_msd.c: 1681: }
 15870  00903E  0012               	return	
 15871  009040                     l764:
 15872  009040  C13D  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15873  009044  C13E  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15874  009048  500E               	movf	_MSDTransferTerminated$2407,w,c
 15875  00904A  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15876  00904C  E114               	bnz	l767
 15877  00904E  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15878  009050  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15879  009052  A4D8               	btfss	status,2,c
 15880  009054  0012               	return	
 15881                           
 15882                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15883  009056  0E00               	movlw	0
 15884  009058  6E01               	movwf	USBTransferOnePacket@dir,c
 15885  00905A  0E40               	movlw	64
 15886  00905C  6E02               	movwf	USBTransferOnePacket@data,c
 15887  00905E  0E0D               	movlw	13
 15888  009060  6E03               	movwf	USBTransferOnePacket@data+1,c
 15889  009062  0E40               	movlw	64
 15890  009064  6E04               	movwf	USBTransferOnePacket@len,c
 15891  009066  0E02               	movlw	2
 15892  009068  EC96  F02C         	call	_USBTransferOnePacket
 15893  00906C  C001  F0E2         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15894  009070  C002  F0E3         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15895  009074  0012               	return	
 15896  009076                     l767:
 15897  009076  0012               	return		;funcret
 15898  009078                     __end_of_MSDTransferTerminated:
 15899                           	opt stack 0
 15900                           tblptru	equ	0xFF8
 15901                           tblptrh	equ	0xFF7
 15902                           tblptrl	equ	0xFF6
 15903                           tablat	equ	0xFF5
 15904                           prodh	equ	0xFF4
 15905                           prodl	equ	0xFF3
 15906                           intcon	equ	0xFF2
 15907                           intcon2	equ	0xFF1
 15908                           intcon3	equ	0xFF0
 15909                           indf0	equ	0xFEF
 15910                           postinc0	equ	0xFEE
 15911                           fsr0h	equ	0xFEA
 15912                           fsr0l	equ	0xFE9
 15913                           wreg	equ	0xFE8
 15914                           indf1	equ	0xFE7
 15915                           postdec1	equ	0xFE5
 15916                           plusw1	equ	0xFE3
 15917                           fsr1h	equ	0xFE2
 15918                           fsr1l	equ	0xFE1
 15919                           indf2	equ	0xFDF
 15920                           postinc2	equ	0xFDE
 15921                           postdec2	equ	0xFDD
 15922                           plusw2	equ	0xFDB
 15923                           fsr2h	equ	0xFDA
 15924                           fsr2l	equ	0xFD9
 15925                           status	equ	0xFD8
 15926                           
 15927 ;; *************** function _APP_DeviceMSDInitialize *****************
 15928 ;; Defined at:
 15929 ;;		line 84 in file "app_device_msd.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;		None
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15947 ;;Total ram usage:        0 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:    2
 15950 ;; This function calls:
 15951 ;;		_USBEnableEndpoint
 15952 ;;		_USBMSDInit
 15953 ;; This function is called by:
 15954 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15955 ;; This function uses a non-reentrant model
 15956 ;;
 15957                           
 15958                           	psect	text72
 15959  00A034                     __ptext72:
 15960                           	opt stack 0
 15961  00A034                     _APP_DeviceMSDInitialize:
 15962                           	opt stack 26
 15963                           
 15964                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15965                           
 15966                           ;incstack = 0
 15967  00A034  0E1E               	movlw	30
 15968  00A036  6E09               	movwf	USBEnableEndpoint@options,c
 15969  00A038  0E02               	movlw	2
 15970  00A03A  ECCB  F04B         	call	_USBEnableEndpoint
 15971                           
 15972                           ;app_device_msd.c: 93: USBMSDInit();
 15973  00A03E  EC15  F02C         	call	_USBMSDInit	;wreg free
 15974  00A042  0012               	return		;funcret
 15975  00A044                     __end_of_APP_DeviceMSDInitialize:
 15976                           	opt stack 0
 15977                           tblptru	equ	0xFF8
 15978                           tblptrh	equ	0xFF7
 15979                           tblptrl	equ	0xFF6
 15980                           tablat	equ	0xFF5
 15981                           prodh	equ	0xFF4
 15982                           prodl	equ	0xFF3
 15983                           intcon	equ	0xFF2
 15984                           intcon2	equ	0xFF1
 15985                           intcon3	equ	0xFF0
 15986                           indf0	equ	0xFEF
 15987                           postinc0	equ	0xFEE
 15988                           fsr0h	equ	0xFEA
 15989                           fsr0l	equ	0xFE9
 15990                           wreg	equ	0xFE8
 15991                           indf1	equ	0xFE7
 15992                           postdec1	equ	0xFE5
 15993                           plusw1	equ	0xFE3
 15994                           fsr1h	equ	0xFE2
 15995                           fsr1l	equ	0xFE1
 15996                           indf2	equ	0xFDF
 15997                           postinc2	equ	0xFDE
 15998                           postdec2	equ	0xFDD
 15999                           plusw2	equ	0xFDB
 16000                           fsr2h	equ	0xFDA
 16001                           fsr2l	equ	0xFD9
 16002                           status	equ	0xFD8
 16003                           
 16004 ;; *************** function _USBMSDInit *****************
 16005 ;; Defined at:
 16006 ;;		line 142 in file "usb_device_msd.c"
 16007 ;; Parameters:    Size  Location     Type
 16008 ;;		None
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;		None
 16011 ;; Return value:  Size  Location     Type
 16012 ;;                  1    wreg      void 
 16013 ;; Registers used:
 16014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16015 ;; Tracked objects:
 16016 ;;		On entry : 0/0
 16017 ;;		On exit  : 0/0
 16018 ;;		Unchanged: 0/0
 16019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16022 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16024 ;;Total ram usage:        3 bytes
 16025 ;; Hardware stack levels used:    1
 16026 ;; Hardware stack levels required when called:    1
 16027 ;; This function calls:
 16028 ;;		_ExternalFlash_MediaDetect
 16029 ;;		_ExternalFlash_MediaInitialize
 16030 ;;		_ResetSenseData
 16031 ;;		_USBTransferOnePacket
 16032 ;; This function is called by:
 16033 ;;		_APP_DeviceMSDInitialize
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           	psect	text73
 16038  00582A                     __ptext73:
 16039                           	opt stack 0
 16040  00582A                     _USBMSDInit:
 16041                           	opt stack 26
 16042                           
 16043                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 16044                           
 16045                           ;incstack = 0
 16046  00582A  0E00               	movlw	0
 16047  00582C  6E01               	movwf	USBTransferOnePacket@dir,c
 16048  00582E  0E40               	movlw	64
 16049  005830  6E02               	movwf	USBTransferOnePacket@data,c
 16050  005832  0E0D               	movlw	13
 16051  005834  6E03               	movwf	USBTransferOnePacket@data+1,c
 16052  005836  0E40               	movlw	64
 16053  005838  6E04               	movwf	USBTransferOnePacket@len,c
 16054  00583A  0E02               	movlw	2
 16055  00583C  EC96  F02C         	call	_USBTransferOnePacket
 16056  005840  C001  F0E2         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16057  005844  C002  F0E3         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16058  005848  C0D8  F0E0         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 16059  00584C  C0D9  F0E1         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 16060                           
 16061                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 16062  005850  0E00               	movlw	0
 16063  005852  0100               	movlb	0	; () banked
 16064  005854  6FF0               	movwf	_MSD_State& (0+255),b
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 16068  005856  69EF               	setf	_MSDCommandState& (0+255),b
 16069                           
 16070                           ; BSR set to: 0
 16071                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 16072  005858  0E00               	movlw	0
 16073  00585A  6FEE               	movwf	_MSDReadState& (0+255),b
 16074                           
 16075                           ; BSR set to: 0
 16076                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 16077  00585C  0E00               	movlw	0
 16078  00585E  6FED               	movwf	_MSDWriteState& (0+255),b
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 16082  005860  0E00               	movlw	0
 16083  005862  6FEA               	movwf	_MSDHostNoData& (0+255),b
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 16087  005864  0E00               	movlw	0
 16088  005866  0101               	movlb	1	; () banked
 16089  005868  6F53               	movwf	_gblNumBLKS& (0+255),b
 16090  00586A  0E00               	movlw	0
 16091  00586C  6F54               	movwf	(_gblNumBLKS+1)& (0+255),b
 16092  00586E  0E00               	movlw	0
 16093  005870  6F55               	movwf	(_gblNumBLKS+2)& (0+255),b
 16094  005872  0E00               	movlw	0
 16095  005874  6F56               	movwf	(_gblNumBLKS+3)& (0+255),b
 16096                           
 16097                           ; BSR set to: 1
 16098                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 16099  005876  0E00               	movlw	0
 16100  005878  6F4F               	movwf	_gblBLKLen& (0+255),b
 16101  00587A  0E00               	movlw	0
 16102  00587C  6F50               	movwf	(_gblBLKLen+1)& (0+255),b
 16103  00587E  0E00               	movlw	0
 16104  005880  6F51               	movwf	(_gblBLKLen+2)& (0+255),b
 16105  005882  0E00               	movlw	0
 16106  005884  6F52               	movwf	(_gblBLKLen+3)& (0+255),b
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 16110  005886  0E01               	movlw	1
 16111  005888  6F87               	movwf	_MSDCBWValid& (0+255),b
 16112                           
 16113                           ; BSR set to: 1
 16114                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 16115  00588A  0E00               	movlw	0
 16116  00588C  6F7C               	movwf	(_gblMediaPresent+1)& (0+255),b
 16117  00588E  0E00               	movlw	0
 16118  005890  6F7B               	movwf	_gblMediaPresent& (0+255),b
 16119                           
 16120                           ; BSR set to: 1
 16121                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 16122  005892  0E00               	movlw	0
 16123  005894  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 16124  005896  D046               	goto	l518
 16125  005898                     
 16126                           ; BSR set to: 1
 16127                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 16128                           
 16129                           ; BSR set to: 1
 16130  005898  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16131  00589A  0D01               	mullw	1
 16132  00589C  0EEB               	movlw	low _SoftDetach
 16133  00589E  24F3               	addwf	prodl,w,c
 16134  0058A0  6ED9               	movwf	fsr2l,c
 16135  0058A2  0E00               	movlw	high _SoftDetach
 16136  0058A4  20F4               	addwfc	prodh,w,c
 16137  0058A6  6EDA               	movwf	fsr2h,c
 16138  0058A8  0E00               	movlw	0
 16139  0058AA  6EDF               	movwf	indf2,c
 16140                           
 16141                           ; BSR set to: 1
 16142                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 16143  0058AC  C1BD  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 16144  0058B0  C1BE  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 16145  0058B4  D801               	call	u8038
 16146  0058B6  D009               	goto	u8039
 16147  0058B8                     u8038:
 16148  0058B8  0005               	push	
 16149  0058BA  6EFA               	movwf	pclath,c
 16150  0058BC  51B5               	movf	(_LUN+6)& (0+255),w,b
 16151  0058BE  6EFD               	movwf	tosl,c
 16152  0058C0  51B6               	movf	(_LUN+7)& (0+255),w,b
 16153  0058C2  6EFE               	movwf	tosh,c
 16154  0058C4  6AFF               	clrf	tosu,c
 16155  0058C6  50FA               	movf	pclath,w,c
 16156  0058C8  0012               	return		;indir
 16157  0058CA                     u8039:
 16158  0058CA  0900               	iorlw	0
 16159  0058CC  B4D8               	btfsc	status,2,c
 16160  0058CE  D026               	goto	l521
 16161                           
 16162                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 16163  0058D0  C1BD  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 16164  0058D4  C1BE  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 16165  0058D8  D801               	call	u8058
 16166  0058DA  D00A               	goto	u8059
 16167  0058DC                     u8058:
 16168  0058DC  0005               	push	
 16169  0058DE  6EFA               	movwf	pclath,c
 16170  0058E0  0101               	movlb	1	; () banked
 16171  0058E2  51AF               	movf	_LUN& (0+255),w,b
 16172  0058E4  6EFD               	movwf	tosl,c
 16173  0058E6  51B0               	movf	(_LUN+1)& (0+255),w,b
 16174  0058E8  6EFE               	movwf	tosh,c
 16175  0058EA  6AFF               	clrf	tosu,c
 16176  0058EC  50FA               	movf	pclath,w,c
 16177  0058EE  0012               	return		;indir
 16178  0058F0                     u8059:
 16179  0058F0  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 16180  0058F2  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 16181  0058F4  B4D8               	btfsc	status,2,c
 16182  0058F6  D012               	goto	l521
 16183                           
 16184                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 16185  0058F8  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 16186  0058FC  0E01               	movlw	1
 16187  0058FE  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 16188  005900  0E00               	movlw	0
 16189  005902  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 16190  005904  2A0C               	incf	??_USBMSDInit,f,c
 16191  005906  D003               	goto	u8074
 16192  005908                     u8075:
 16193  005908  90D8               	bcf	status,0,c
 16194  00590A  360D               	rlcf	??_USBMSDInit+1,f,c
 16195  00590C  360E               	rlcf	??_USBMSDInit+2,f,c
 16196  00590E                     u8074:
 16197  00590E  2E0C               	decfsz	??_USBMSDInit,f,c
 16198  005910  D7FB               	goto	u8075
 16199  005912  500D               	movf	??_USBMSDInit+1,w,c
 16200  005914  0101               	movlb	1	; () banked
 16201  005916  137B               	iorwf	_gblMediaPresent& (0+255),f,b
 16202  005918  500E               	movf	??_USBMSDInit+2,w,c
 16203  00591A  137C               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 16204  00591C                     l521:
 16205                           
 16206                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 16207                           
 16208                           ; BSR set to: 1
 16209                           
 16210                           ; BSR set to: 1
 16211  00591C  EC45  F046         	call	_ResetSenseData	;wreg free
 16212  005920  0101               	movlb	1	; () banked
 16213  005922  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 16214  005924                     l518:
 16215                           
 16216                           ; BSR set to: 1
 16217                           
 16218                           ; BSR set to: 1
 16219  005924  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16220  005926  A4D8               	btfss	status,2,c
 16221  005928  0012               	return	
 16222  00592A  D7B6               	goto	l519
 16223  00592C                     __end_of_USBMSDInit:
 16224                           	opt stack 0
 16225                           tosu	equ	0xFFF
 16226                           tosh	equ	0xFFE
 16227                           tosl	equ	0xFFD
 16228                           pclath	equ	0xFFA
 16229                           tblptru	equ	0xFF8
 16230                           tblptrh	equ	0xFF7
 16231                           tblptrl	equ	0xFF6
 16232                           tablat	equ	0xFF5
 16233                           prodh	equ	0xFF4
 16234                           prodl	equ	0xFF3
 16235                           intcon	equ	0xFF2
 16236                           intcon2	equ	0xFF1
 16237                           intcon3	equ	0xFF0
 16238                           indf0	equ	0xFEF
 16239                           postinc0	equ	0xFEE
 16240                           fsr0h	equ	0xFEA
 16241                           fsr0l	equ	0xFE9
 16242                           wreg	equ	0xFE8
 16243                           indf1	equ	0xFE7
 16244                           postdec1	equ	0xFE5
 16245                           plusw1	equ	0xFE3
 16246                           fsr1h	equ	0xFE2
 16247                           fsr1l	equ	0xFE1
 16248                           indf2	equ	0xFDF
 16249                           postinc2	equ	0xFDE
 16250                           postdec2	equ	0xFDD
 16251                           plusw2	equ	0xFDB
 16252                           fsr2h	equ	0xFDA
 16253                           fsr2l	equ	0xFD9
 16254                           status	equ	0xFD8
 16255                           
 16256 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 16257 ;; Defined at:
 16258 ;;		line 46 in file "app_device_custom_hid.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      void 
 16265 ;; Registers used:
 16266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16276 ;;Total ram usage:        0 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    2
 16279 ;; This function calls:
 16280 ;;		_USBEnableEndpoint
 16281 ;;		_USBTransferOnePacket
 16282 ;; This function is called by:
 16283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16284 ;; This function uses a non-reentrant model
 16285 ;;
 16286                           
 16287                           	psect	text74
 16288  0098E6                     __ptext74:
 16289                           	opt stack 0
 16290  0098E6                     _APP_DeviceCustomHIDInitialize:
 16291                           	opt stack 26
 16292                           
 16293                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 16294                           
 16295                           ; BSR set to: 1
 16296                           ;incstack = 0
 16297  0098E6  0E00               	movlw	0
 16298  0098E8  0101               	movlb	1	; () banked
 16299  0098EA  6F77               	movwf	_USBInHandle& (0+255),b
 16300  0098EC  0E00               	movlw	0
 16301  0098EE  6F78               	movwf	(_USBInHandle+1)& (0+255),b
 16302                           
 16303                           ; BSR set to: 1
 16304                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 16305  0098F0  0E1E               	movlw	30
 16306  0098F2  6E09               	movwf	USBEnableEndpoint@options,c
 16307  0098F4  0E01               	movlw	1
 16308  0098F6  ECCB  F04B         	call	_USBEnableEndpoint
 16309                           
 16310                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 16311  0098FA  0E00               	movlw	0
 16312  0098FC  6E01               	movwf	USBTransferOnePacket@dir,c
 16313  0098FE  0E50               	movlw	low _ReceivedDataBuffer
 16314  009900  6E02               	movwf	USBTransferOnePacket@data,c
 16315  009902  0E02               	movlw	high _ReceivedDataBuffer
 16316  009904  6E03               	movwf	USBTransferOnePacket@data+1,c
 16317  009906  0E40               	movlw	64
 16318  009908  6E04               	movwf	USBTransferOnePacket@len,c
 16319  00990A  0E01               	movlw	1
 16320  00990C  EC96  F02C         	call	_USBTransferOnePacket
 16321  009910  C001  F179         	movff	?_USBTransferOnePacket,_USBOutHandle
 16322  009914  C002  F17A         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 16323  009918  0012               	return		;funcret
 16324  00991A                     __end_of_APP_DeviceCustomHIDInitialize:
 16325                           	opt stack 0
 16326                           tosu	equ	0xFFF
 16327                           tosh	equ	0xFFE
 16328                           tosl	equ	0xFFD
 16329                           pclath	equ	0xFFA
 16330                           tblptru	equ	0xFF8
 16331                           tblptrh	equ	0xFF7
 16332                           tblptrl	equ	0xFF6
 16333                           tablat	equ	0xFF5
 16334                           prodh	equ	0xFF4
 16335                           prodl	equ	0xFF3
 16336                           intcon	equ	0xFF2
 16337                           intcon2	equ	0xFF1
 16338                           intcon3	equ	0xFF0
 16339                           indf0	equ	0xFEF
 16340                           postinc0	equ	0xFEE
 16341                           fsr0h	equ	0xFEA
 16342                           fsr0l	equ	0xFE9
 16343                           wreg	equ	0xFE8
 16344                           indf1	equ	0xFE7
 16345                           postdec1	equ	0xFE5
 16346                           plusw1	equ	0xFE3
 16347                           fsr1h	equ	0xFE2
 16348                           fsr1l	equ	0xFE1
 16349                           indf2	equ	0xFDF
 16350                           postinc2	equ	0xFDE
 16351                           postdec2	equ	0xFDD
 16352                           plusw2	equ	0xFDB
 16353                           fsr2h	equ	0xFDA
 16354                           fsr2l	equ	0xFD9
 16355                           status	equ	0xFD8
 16356                           
 16357 ;; *************** function _USBEnableEndpoint *****************
 16358 ;; Defined at:
 16359 ;;		line 878 in file "usb_device.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;  ep              1    wreg     unsigned char 
 16362 ;;  options         1    8[COMRAM] unsigned char 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  ep              1   11[COMRAM] unsigned char 
 16365 ;;  p               2    9[COMRAM] PTR unsigned char 
 16366 ;;		 -> UEP0(1), 
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      void 
 16369 ;; Registers used:
 16370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16376 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16377 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16380 ;;Total ram usage:        4 bytes
 16381 ;; Hardware stack levels used:    1
 16382 ;; Hardware stack levels required when called:    1
 16383 ;; This function calls:
 16384 ;;		_USBConfigureEndpoint
 16385 ;; This function is called by:
 16386 ;;		_APP_DeviceCustomHIDInitialize
 16387 ;;		_APP_DeviceMSDInitialize
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           	psect	text75
 16392  009796                     __ptext75:
 16393                           	opt stack 0
 16394  009796                     _USBEnableEndpoint:
 16395                           	opt stack 26
 16396                           
 16397                           ;incstack = 0
 16398                           ;USBEnableEndpoint@ep stored from wreg
 16399  009796  6E0C               	movwf	USBEnableEndpoint@ep,c
 16400                           
 16401                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 16402  009798  A409               	btfss	USBEnableEndpoint@options,2,c
 16403  00979A  D005               	goto	l178
 16404                           
 16405                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 16406  00979C  0E00               	movlw	0
 16407  00979E  6E01               	movwf	USBConfigureEndpoint@direction,c
 16408  0097A0  500C               	movf	USBEnableEndpoint@ep,w,c
 16409  0097A2  ECE4  F040         	call	_USBConfigureEndpoint
 16410  0097A6                     l178:
 16411                           
 16412                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16413  0097A6  A209               	btfss	USBEnableEndpoint@options,1,c
 16414  0097A8  D005               	goto	l179
 16415                           
 16416                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16417  0097AA  0E01               	movlw	1
 16418  0097AC  6E01               	movwf	USBConfigureEndpoint@direction,c
 16419  0097AE  500C               	movf	USBEnableEndpoint@ep,w,c
 16420  0097B0  ECE4  F040         	call	_USBConfigureEndpoint
 16421  0097B4                     l179:
 16422                           
 16423                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16424  0097B4  500C               	movf	USBEnableEndpoint@ep,w,c
 16425  0097B6  0D01               	mullw	1
 16426  0097B8  0E26               	movlw	38
 16427  0097BA  24F3               	addwf	prodl,w,c
 16428  0097BC  6E0A               	movwf	USBEnableEndpoint@p,c
 16429  0097BE  0E0F               	movlw	15
 16430  0097C0  20F4               	addwfc	prodh,w,c
 16431  0097C2  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16432                           
 16433                           ;usb_device.c: 901: *p = options;
 16434  0097C4  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16435  0097C8  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16436  0097CC  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16437  0097D0  0012               	return		;funcret
 16438  0097D2                     __end_of_USBEnableEndpoint:
 16439                           	opt stack 0
 16440                           tosu	equ	0xFFF
 16441                           tosh	equ	0xFFE
 16442                           tosl	equ	0xFFD
 16443                           pclath	equ	0xFFA
 16444                           tblptru	equ	0xFF8
 16445                           tblptrh	equ	0xFF7
 16446                           tblptrl	equ	0xFF6
 16447                           tablat	equ	0xFF5
 16448                           prodh	equ	0xFF4
 16449                           prodl	equ	0xFF3
 16450                           intcon	equ	0xFF2
 16451                           intcon2	equ	0xFF1
 16452                           intcon3	equ	0xFF0
 16453                           indf0	equ	0xFEF
 16454                           postinc0	equ	0xFEE
 16455                           fsr0h	equ	0xFEA
 16456                           fsr0l	equ	0xFE9
 16457                           wreg	equ	0xFE8
 16458                           indf1	equ	0xFE7
 16459                           postdec1	equ	0xFE5
 16460                           plusw1	equ	0xFE3
 16461                           fsr1h	equ	0xFE2
 16462                           fsr1l	equ	0xFE1
 16463                           indf2	equ	0xFDF
 16464                           postinc2	equ	0xFDE
 16465                           postdec2	equ	0xFDD
 16466                           plusw2	equ	0xFDB
 16467                           fsr2h	equ	0xFDA
 16468                           fsr2l	equ	0xFD9
 16469                           status	equ	0xFD8
 16470                           
 16471 ;; *************** function _USBConfigureEndpoint *****************
 16472 ;; Defined at:
 16473 ;;		line 1545 in file "usb_device.c"
 16474 ;; Parameters:    Size  Location     Type
 16475 ;;  EPNum           1    wreg     unsigned char 
 16476 ;;  direction       1    0[COMRAM] unsigned char 
 16477 ;; Auto vars:     Size  Location     Type
 16478 ;;  EPNum           1    5[COMRAM] unsigned char 
 16479 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16480 ;;		 -> BDT(48), 
 16481 ;; Return value:  Size  Location     Type
 16482 ;;                  1    wreg      void 
 16483 ;; Registers used:
 16484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/0
 16487 ;;		On exit  : 0/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16491 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16493 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16494 ;;Total ram usage:        8 bytes
 16495 ;; Hardware stack levels used:    1
 16496 ;; This function calls:
 16497 ;;		Nothing
 16498 ;; This function is called by:
 16499 ;;		_USBEnableEndpoint
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text76
 16504  0081C8                     __ptext76:
 16505                           	opt stack 0
 16506  0081C8                     _USBConfigureEndpoint:
 16507                           	opt stack 26
 16508                           
 16509                           ;incstack = 0
 16510                           ;USBConfigureEndpoint@EPNum stored from wreg
 16511  0081C8  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16512                           
 16513                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16514  0081CA  0E00               	movlw	0
 16515  0081CC  6E07               	movwf	USBConfigureEndpoint@handle,c
 16516  0081CE  0E0D               	movlw	13
 16517  0081D0  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16518                           
 16519                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16520  0081D2  5001               	movf	USBConfigureEndpoint@direction,w,c
 16521  0081D4  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16522  0081D6  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16523  0081D8  90D8               	bcf	status,0,c
 16524  0081DA  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16525  0081DC  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16526  0081DE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16527  0081E0  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16528  0081E2  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16529  0081E4  90D8               	bcf	status,0,c
 16530  0081E6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16531  0081E8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16532  0081EA  90D8               	bcf	status,0,c
 16533  0081EC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16534  0081EE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16535  0081F0  5002               	movf	??_USBConfigureEndpoint,w,c
 16536  0081F2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16537  0081F4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16538  0081F6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16539  0081F8  90D8               	bcf	status,0,c
 16540  0081FA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16541  0081FC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16542  0081FE  90D8               	bcf	status,0,c
 16543  008200  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16544  008202  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16545  008204  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16546  008206  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16547  008208  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16548  00820A  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16549                           
 16550                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16551  00820C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16552  008210  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16553  008214  9EDF               	bcf	indf2,7,c
 16554                           
 16555                           ;usb_device.c: 1559: if(direction == 0)
 16556  008216  5001               	movf	USBConfigureEndpoint@direction,w,c
 16557  008218  A4D8               	btfss	status,2,c
 16558  00821A  D007               	goto	l214
 16559                           
 16560                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16561  00821C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16562  00821E  0D02               	mullw	2
 16563  008220  0E39               	movlw	low _pBDTEntryOut
 16564  008222  24F3               	addwf	prodl,w,c
 16565  008224  6ED9               	movwf	fsr2l,c
 16566  008226  0E01               	movlw	high _pBDTEntryOut
 16567  008228  D006               	goto	L14
 16568  00822A                     l214:
 16569                           
 16570                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16571  00822A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16572  00822C  0D02               	mullw	2
 16573  00822E  0ED4               	movlw	low _pBDTEntryIn
 16574  008230  24F3               	addwf	prodl,w,c
 16575  008232  6ED9               	movwf	fsr2l,c
 16576  008234  0E00               	movlw	high _pBDTEntryIn
 16577  008236                     L14:
 16578  008236  20F4               	addwfc	prodh,w,c
 16579  008238  6EDA               	movwf	fsr2h,c
 16580  00823A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16581  00823E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16582                           
 16583                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16584  008242  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16585  008246  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16586  00824A  9CDF               	bcf	indf2,6,c
 16587                           
 16588                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16589  00824C  EE20 F004          	lfsr	2,4
 16590  008250  5007               	movf	USBConfigureEndpoint@handle,w,c
 16591  008252  26D9               	addwf	fsr2l,f,c
 16592  008254  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16593  008256  22DA               	addwfc	fsr2h,f,c
 16594  008258  8CDF               	bsf	indf2,6,c
 16595  00825A  0012               	return		;funcret
 16596  00825C                     __end_of_USBConfigureEndpoint:
 16597                           	opt stack 0
 16598                           tosu	equ	0xFFF
 16599                           tosh	equ	0xFFE
 16600                           tosl	equ	0xFFD
 16601                           pclath	equ	0xFFA
 16602                           tblptru	equ	0xFF8
 16603                           tblptrh	equ	0xFF7
 16604                           tblptrl	equ	0xFF6
 16605                           tablat	equ	0xFF5
 16606                           prodh	equ	0xFF4
 16607                           prodl	equ	0xFF3
 16608                           intcon	equ	0xFF2
 16609                           intcon2	equ	0xFF1
 16610                           intcon3	equ	0xFF0
 16611                           indf0	equ	0xFEF
 16612                           postinc0	equ	0xFEE
 16613                           fsr0h	equ	0xFEA
 16614                           fsr0l	equ	0xFE9
 16615                           wreg	equ	0xFE8
 16616                           indf1	equ	0xFE7
 16617                           postdec1	equ	0xFE5
 16618                           plusw1	equ	0xFE3
 16619                           fsr1h	equ	0xFE2
 16620                           fsr1l	equ	0xFE1
 16621                           indf2	equ	0xFDF
 16622                           postinc2	equ	0xFDE
 16623                           postdec2	equ	0xFDD
 16624                           plusw2	equ	0xFDB
 16625                           fsr2h	equ	0xFDA
 16626                           fsr2l	equ	0xFD9
 16627                           status	equ	0xFD8
 16628                           
 16629 ;; *************** function _USBCtrlTrfOutHandler *****************
 16630 ;; Defined at:
 16631 ;;		line 2540 in file "usb_device.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;		None
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;		None
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  1    wreg      void 
 16638 ;; Registers used:
 16639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16640 ;; Tracked objects:
 16641 ;;		On entry : 0/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16649 ;;Total ram usage:        0 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; Hardware stack levels required when called:    2
 16652 ;; This function calls:
 16653 ;;		_USBCtrlTrfRxService
 16654 ;; This function is called by:
 16655 ;;		_USBCtrlEPService
 16656 ;; This function uses a non-reentrant model
 16657 ;;
 16658                           
 16659                           	psect	text77
 16660  008AF6                     __ptext77:
 16661                           	opt stack 0
 16662  008AF6                     _USBCtrlTrfOutHandler:
 16663                           	opt stack 26
 16664                           
 16665                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16666                           
 16667                           ;incstack = 0
 16668  008AF6  0E02               	movlw	2
 16669  008AF8  0100               	movlb	0	; () banked
 16670  008AFA  19F8               	xorwf	_controlTransferState& (0+255),w,b
 16671  008AFC  A4D8               	btfss	status,2,c
 16672  008AFE  D003               	goto	l320
 16673                           
 16674                           ; BSR set to: 0
 16675                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16676  008B00  ECF1  F028         	call	_USBCtrlTrfRxService	;wreg free
 16677                           
 16678                           ;usb_device.c: 2545: }
 16679  008B04  0012               	return	
 16680  008B06                     l320:
 16681                           
 16682                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16683  008B06  0E00               	movlw	0
 16684  008B08  0100               	movlb	0	; () banked
 16685  008B0A  6FF8               	movwf	_controlTransferState& (0+255),b
 16686                           
 16687                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16688  008B0C  0101               	movlb	1	; () banked
 16689  008B0E  518A               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16690  008B10  A4D8               	btfss	status,2,c
 16691  008B12  D020               	goto	l322
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16695  008B14  0100               	movlb	0	; () banked
 16696  008B16  EE20 F001          	lfsr	2,1
 16697  008B1A  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16698  008B1C  26D9               	addwf	fsr2l,f,c
 16699  008B1E  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16700  008B20  22DA               	addwfc	fsr2h,f,c
 16701  008B22  0E08               	movlw	8
 16702  008B24  6EDF               	movwf	indf2,c
 16703                           
 16704                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16705  008B26  EE20 F002          	lfsr	2,2
 16706  008B2A  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16707  008B2C  26D9               	addwf	fsr2l,f,c
 16708  008B2E  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16709  008B30  22DA               	addwfc	fsr2h,f,c
 16710  008B32  0E30               	movlw	48
 16711  008B34  6EDE               	movwf	postinc2,c
 16712  008B36  0E0D               	movlw	13
 16713  008B38  6EDD               	movwf	postdec2,c
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16717  008B3A  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16718  008B3E  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16719  008B42  0E0C               	movlw	12
 16720  008B44  6EDF               	movwf	indf2,c
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16724  008B46  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16725  008B4A  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16726  008B4E  0E00               	movlw	0
 16727  008B50  8EDB               	bsf	plusw2,7,c
 16728                           
 16729                           ;usb_device.c: 2563: }
 16730  008B52  0012               	return	
 16731  008B54                     l322:
 16732                           
 16733                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16734                           
 16735                           ; BSR set to: 0
 16736  008B54  0E00               	movlw	0
 16737  008B56  0101               	movlb	1	; () banked
 16738  008B58  6F8A               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16739                           
 16740                           ; BSR set to: 1
 16741  008B5A  0012               	return	
 16742  008B5C                     __end_of_USBCtrlTrfOutHandler:
 16743                           	opt stack 0
 16744                           tosu	equ	0xFFF
 16745                           tosh	equ	0xFFE
 16746                           tosl	equ	0xFFD
 16747                           pclath	equ	0xFFA
 16748                           tblptru	equ	0xFF8
 16749                           tblptrh	equ	0xFF7
 16750                           tblptrl	equ	0xFF6
 16751                           tablat	equ	0xFF5
 16752                           prodh	equ	0xFF4
 16753                           prodl	equ	0xFF3
 16754                           intcon	equ	0xFF2
 16755                           intcon2	equ	0xFF1
 16756                           intcon3	equ	0xFF0
 16757                           indf0	equ	0xFEF
 16758                           postinc0	equ	0xFEE
 16759                           fsr0h	equ	0xFEA
 16760                           fsr0l	equ	0xFE9
 16761                           wreg	equ	0xFE8
 16762                           indf1	equ	0xFE7
 16763                           postdec1	equ	0xFE5
 16764                           plusw1	equ	0xFE3
 16765                           fsr1h	equ	0xFE2
 16766                           fsr1l	equ	0xFE1
 16767                           indf2	equ	0xFDF
 16768                           postinc2	equ	0xFDE
 16769                           postdec2	equ	0xFDD
 16770                           plusw2	equ	0xFDB
 16771                           fsr2h	equ	0xFDA
 16772                           fsr2l	equ	0xFD9
 16773                           status	equ	0xFD8
 16774                           
 16775 ;; *************** function _USBCtrlTrfRxService *****************
 16776 ;; Defined at:
 16777 ;;		line 1854 in file "usb_device.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;		None
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16782 ;;  i               1    0[COMRAM] unsigned char 
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  1    wreg      void 
 16785 ;; Registers used:
 16786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16796 ;;Total ram usage:        2 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; Hardware stack levels required when called:    1
 16799 ;; This function calls:
 16800 ;;		_USBCtrlEPAllowStatusStage
 16801 ;; This function is called by:
 16802 ;;		_USBCtrlTrfOutHandler
 16803 ;; This function uses a non-reentrant model
 16804 ;;
 16805                           
 16806                           	psect	text78
 16807  0051E2                     __ptext78:
 16808                           	opt stack 0
 16809  0051E2                     _USBCtrlTrfRxService:
 16810                           	opt stack 26
 16811                           
 16812                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16813                           
 16814                           ;incstack = 0
 16815  0051E2  0100               	movlb	0	; () banked
 16816  0051E4  EE20 F001          	lfsr	2,1
 16817  0051E8  51E6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16818  0051EA  26D9               	addwf	fsr2l,f,c
 16819  0051EC  51E7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16820  0051EE  22DA               	addwfc	fsr2h,f,c
 16821  0051F0  50DF               	movf	indf2,w,c
 16822  0051F2  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16826  0051F4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16827  0051F6  0101               	movlb	1	; () banked
 16828  0051F8  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16829  0051FA  0E00               	movlw	0
 16830  0051FC  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16831  0051FE  A0D8               	btfss	status,0,c
 16832                           
 16833                           ; BSR set to: 1
 16834                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16835  005200  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16836                           
 16837                           ; BSR set to: 1
 16838                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16839                           
 16840                           ; BSR set to: 1
 16841  005204  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16842  005206  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16843  005208  0E00               	movlw	0
 16844  00520A  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16845                           
 16846                           ; BSR set to: 1
 16847                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16848  00520C  0E00               	movlw	0
 16849  00520E  6E01               	movwf	USBCtrlTrfRxService@i,c
 16850  005210  D011               	goto	l248
 16851  005212                     
 16852                           ; BSR set to: 1
 16853                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16854                           
 16855                           ; BSR set to: 1
 16856  005212  5001               	movf	USBCtrlTrfRxService@i,w,c
 16857  005214  0D01               	mullw	1
 16858  005216  0E38               	movlw	56
 16859  005218  24F3               	addwf	prodl,w,c
 16860  00521A  6ED9               	movwf	fsr2l,c
 16861  00521C  0E0D               	movlw	13
 16862  00521E  20F4               	addwfc	prodh,w,c
 16863  005220  6EDA               	movwf	fsr2h,c
 16864  005222  C131  FFE1         	movff	_outPipes,fsr1l
 16865  005226  C132  FFE2         	movff	_outPipes+1,fsr1h
 16866  00522A  CFDF FFE7          	movff	indf2,indf1
 16867                           
 16868                           ; BSR set to: 1
 16869  00522E  4B31               	infsnz	_outPipes& (0+255),f,b
 16870  005230  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16871                           
 16872                           ; BSR set to: 1
 16873  005232  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16874  005234                     l248:
 16875                           
 16876                           ; BSR set to: 1
 16877                           
 16878                           ; BSR set to: 1
 16879  005234  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16880  005236  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16881  005238  A0D8               	btfss	status,0,c
 16882  00523A  D7EB               	goto	l249
 16883                           
 16884                           ; BSR set to: 1
 16885                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16886                           
 16887                           ; BSR set to: 1
 16888  00523C  5135               	movf	(_outPipes+4)& (0+255),w,b
 16889  00523E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16890  005240  B4D8               	btfsc	status,2,c
 16891  005242  D033               	goto	l251
 16892                           
 16893                           ; BSR set to: 1
 16894                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16895  005244  0100               	movlb	0	; () banked
 16896  005246  EE20 F001          	lfsr	2,1
 16897  00524A  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16898  00524C  26D9               	addwf	fsr2l,f,c
 16899  00524E  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16900  005250  22DA               	addwfc	fsr2h,f,c
 16901  005252  0E08               	movlw	8
 16902  005254  6EDF               	movwf	indf2,c
 16903                           
 16904                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16905  005256  EE20 F002          	lfsr	2,2
 16906  00525A  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16907  00525C  26D9               	addwf	fsr2l,f,c
 16908  00525E  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16909  005260  22DA               	addwfc	fsr2h,f,c
 16910  005262  0E38               	movlw	56
 16911  005264  6EDE               	movwf	postinc2,c
 16912  005266  0E0D               	movlw	13
 16913  005268  6EDD               	movwf	postdec2,c
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16917  00526A  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16918  00526E  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16919  005272  BCDF               	btfsc	indf2,6,c
 16920  005274  D00D               	goto	l252
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16924  005276  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16925  00527A  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16926  00527E  0E48               	movlw	72
 16927  005280  6EDF               	movwf	indf2,c
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16931  005282  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16932  005286  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16933  00528A  0E00               	movlw	0
 16934  00528C  8EDB               	bsf	plusw2,7,c
 16935                           
 16936                           ;usb_device.c: 1891: }
 16937  00528E  0012               	return	
 16938  005290                     l252:
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16942                           
 16943                           ; BSR set to: 0
 16944  005290  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16945  005294  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16946  005298  0E08               	movlw	8
 16947  00529A  6EDF               	movwf	indf2,c
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16951  00529C  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16952  0052A0  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16953  0052A4  0E00               	movlw	0
 16954  0052A6  8EDB               	bsf	plusw2,7,c
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16958  0052A8  0012               	return	
 16959  0052AA                     l251:
 16960                           
 16961                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16962                           
 16963                           ; BSR set to: 0
 16964  0052AA  0100               	movlb	0	; () banked
 16965  0052AC  EE20 F001          	lfsr	2,1
 16966  0052B0  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16967  0052B2  26D9               	addwf	fsr2l,f,c
 16968  0052B4  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16969  0052B6  22DA               	addwfc	fsr2h,f,c
 16970  0052B8  0E08               	movlw	8
 16971  0052BA  6EDF               	movwf	indf2,c
 16972                           
 16973                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16974  0052BC  EE20 F002          	lfsr	2,2
 16975  0052C0  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16976  0052C2  26D9               	addwf	fsr2l,f,c
 16977  0052C4  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16978  0052C6  22DA               	addwfc	fsr2h,f,c
 16979  0052C8  0E30               	movlw	48
 16980  0052CA  6EDE               	movwf	postinc2,c
 16981  0052CC  0E0D               	movlw	13
 16982  0052CE  6EDD               	movwf	postdec2,c
 16983                           
 16984                           ; BSR set to: 0
 16985                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16986  0052D0  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16987  0052D4  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16988  0052D8  0E04               	movlw	4
 16989  0052DA  6EDF               	movwf	indf2,c
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16993  0052DC  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16994  0052E0  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16995  0052E4  0E00               	movlw	0
 16996  0052E6  8EDB               	bsf	plusw2,7,c
 16997                           
 16998                           ; BSR set to: 0
 16999                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 17000                           
 17001                           ; BSR set to: 0
 17002  0052E8  0101               	movlb	1	; () banked
 17003  0052EA  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17004                           
 17005                           ; BSR set to: 1
 17006                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 17007  0052EC  0100               	movlb	0	; () banked
 17008  0052EE  51F5               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17009  0052F0  A4D8               	btfss	status,2,c
 17010  0052F2  0012               	return	
 17011                           
 17012                           ; BSR set to: 0
 17013                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 17014  0052F4  ECC1  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17015  0052F8  0012               	return	
 17016  0052FA                     __end_of_USBCtrlTrfRxService:
 17017                           	opt stack 0
 17018                           tosu	equ	0xFFF
 17019                           tosh	equ	0xFFE
 17020                           tosl	equ	0xFFD
 17021                           pclath	equ	0xFFA
 17022                           tblptru	equ	0xFF8
 17023                           tblptrh	equ	0xFF7
 17024                           tblptrl	equ	0xFF6
 17025                           tablat	equ	0xFF5
 17026                           prodh	equ	0xFF4
 17027                           prodl	equ	0xFF3
 17028                           intcon	equ	0xFF2
 17029                           intcon2	equ	0xFF1
 17030                           intcon3	equ	0xFF0
 17031                           indf0	equ	0xFEF
 17032                           postinc0	equ	0xFEE
 17033                           fsr0h	equ	0xFEA
 17034                           fsr0l	equ	0xFE9
 17035                           wreg	equ	0xFE8
 17036                           indf1	equ	0xFE7
 17037                           postdec1	equ	0xFE5
 17038                           plusw1	equ	0xFE3
 17039                           fsr1h	equ	0xFE2
 17040                           fsr1l	equ	0xFE1
 17041                           indf2	equ	0xFDF
 17042                           postinc2	equ	0xFDE
 17043                           postdec2	equ	0xFDD
 17044                           plusw2	equ	0xFDB
 17045                           fsr2h	equ	0xFDA
 17046                           fsr2l	equ	0xFD9
 17047                           status	equ	0xFD8
 17048                           
 17049 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 17050 ;; Defined at:
 17051 ;;		line 1418 in file "usb_device.c"
 17052 ;; Parameters:    Size  Location     Type
 17053 ;;		None
 17054 ;; Auto vars:     Size  Location     Type
 17055 ;;		None
 17056 ;; Return value:  Size  Location     Type
 17057 ;;                  1    wreg      void 
 17058 ;; Registers used:
 17059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17060 ;; Tracked objects:
 17061 ;;		On entry : 0/0
 17062 ;;		On exit  : 0/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17069 ;;Total ram usage:        0 bytes
 17070 ;; Hardware stack levels used:    1
 17071 ;; This function calls:
 17072 ;;		Nothing
 17073 ;; This function is called by:
 17074 ;;		_USBDeviceTasks
 17075 ;;		_USBCtrlEPServiceComplete
 17076 ;;		_USBCtrlTrfRxService
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text79
 17081  006B82                     __ptext79:
 17082                           	opt stack 0
 17083  006B82                     _USBCtrlEPAllowStatusStage:
 17084                           	opt stack 26
 17085                           
 17086                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 17087                           
 17088                           ;incstack = 0
 17089  006B82  0100               	movlb	0	; () banked
 17090  006B84  51F4               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 17091  006B86  A4D8               	btfss	status,2,c
 17092  006B88  0012               	return	
 17093                           
 17094                           ; BSR set to: 0
 17095                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 17096  006B8A  0E01               	movlw	1
 17097  006B8C  6FF4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17098                           
 17099                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 17100  006B8E  51F3               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 17101  006B90  A4D8               	btfss	status,2,c
 17102  006B92  0012               	return	
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 17106  006B94  0E01               	movlw	1
 17107  006B96  6FF3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17108                           
 17109                           ; BSR set to: 0
 17110                           ;usb_device.c: 1434: if(controlTransferState == 2)
 17111  006B98  0E02               	movlw	2
 17112  006B9A  19F8               	xorwf	_controlTransferState& (0+255),w,b
 17113  006B9C  A4D8               	btfss	status,2,c
 17114  006B9E  D015               	goto	l202
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 17118  006BA0  EE20 F001          	lfsr	2,1
 17119  006BA4  51D4               	movf	_pBDTEntryIn& (0+255),w,b
 17120  006BA6  26D9               	addwf	fsr2l,f,c
 17121  006BA8  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17122  006BAA  22DA               	addwfc	fsr2h,f,c
 17123  006BAC  0E00               	movlw	0
 17124  006BAE  6EDF               	movwf	indf2,c
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17128  006BB0  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17129  006BB4  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17130  006BB8  0E48               	movlw	72
 17131  006BBA  6EDF               	movwf	indf2,c
 17132                           
 17133                           ; BSR set to: 0
 17134                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17135  006BBC  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17136  006BC0  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17137  006BC4  0E00               	movlw	0
 17138  006BC6  8EDB               	bsf	plusw2,7,c
 17139                           
 17140                           ;usb_device.c: 1439: }
 17141  006BC8  0012               	return	
 17142  006BCA                     l202:
 17143                           
 17144                           ; BSR set to: 0
 17145                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 17146                           
 17147                           ; BSR set to: 0
 17148  006BCA  05F8               	decf	_controlTransferState& (0+255),w,b
 17149  006BCC  A4D8               	btfss	status,2,c
 17150  006BCE  0012               	return	
 17151                           
 17152                           ; BSR set to: 0
 17153                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 17154  006BD0  0E00               	movlw	0
 17155  006BD2  0101               	movlb	1	; () banked
 17156  006BD4  6F8A               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17157                           
 17158                           ; BSR set to: 1
 17159                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 17160  006BD6  0100               	movlb	0	; () banked
 17161  006BD8  EE20 F001          	lfsr	2,1
 17162  006BDC  51E6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17163  006BDE  26D9               	addwf	fsr2l,f,c
 17164  006BE0  51E7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17165  006BE2  22DA               	addwfc	fsr2h,f,c
 17166  006BE4  0E08               	movlw	8
 17167  006BE6  6EDF               	movwf	indf2,c
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 17171  006BE8  EE20 F002          	lfsr	2,2
 17172  006BEC  51E6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17173  006BEE  26D9               	addwf	fsr2l,f,c
 17174  006BF0  51E7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17175  006BF2  22DA               	addwfc	fsr2h,f,c
 17176  006BF4  0E30               	movlw	48
 17177  006BF6  6EDE               	movwf	postinc2,c
 17178  006BF8  0E0D               	movlw	13
 17179  006BFA  6EDD               	movwf	postdec2,c
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 17183  006BFC  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17184  006C00  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17185  006C04  0E04               	movlw	4
 17186  006C06  6EDF               	movwf	indf2,c
 17187                           
 17188                           ; BSR set to: 0
 17189                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17190  006C08  C0E6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17191  006C0C  C0E7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17192  006C10  0E00               	movlw	0
 17193  006C12  8EDB               	bsf	plusw2,7,c
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 17197  006C14  0E01               	movlw	1
 17198  006C16  0101               	movlb	1	; () banked
 17199  006C18  6F8A               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17200                           
 17201                           ; BSR set to: 1
 17202                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 17203  006C1A  0100               	movlb	0	; () banked
 17204  006C1C  EE20 F001          	lfsr	2,1
 17205  006C20  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17206  006C22  26D9               	addwf	fsr2l,f,c
 17207  006C24  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17208  006C26  22DA               	addwfc	fsr2h,f,c
 17209  006C28  0E08               	movlw	8
 17210  006C2A  6EDF               	movwf	indf2,c
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17214  006C2C  EE20 F002          	lfsr	2,2
 17215  006C30  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17216  006C32  26D9               	addwf	fsr2l,f,c
 17217  006C34  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17218  006C36  22DA               	addwfc	fsr2h,f,c
 17219  006C38  0E30               	movlw	48
 17220  006C3A  6EDE               	movwf	postinc2,c
 17221  006C3C  0E0D               	movlw	13
 17222  006C3E  6EDD               	movwf	postdec2,c
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 17226  006C40  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17227  006C44  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17228  006C48  0E80               	movlw	128
 17229  006C4A  6EDF               	movwf	indf2,c
 17230                           
 17231                           ; BSR set to: 0
 17232                           
 17233                           ; BSR set to: 0
 17234                           
 17235                           ; BSR set to: 0
 17236  006C4C  0012               	return	
 17237  006C4E                     __end_of_USBCtrlEPAllowStatusStage:
 17238                           	opt stack 0
 17239                           tosu	equ	0xFFF
 17240                           tosh	equ	0xFFE
 17241                           tosl	equ	0xFFD
 17242                           pclath	equ	0xFFA
 17243                           tblptru	equ	0xFF8
 17244                           tblptrh	equ	0xFF7
 17245                           tblptrl	equ	0xFF6
 17246                           tablat	equ	0xFF5
 17247                           prodh	equ	0xFF4
 17248                           prodl	equ	0xFF3
 17249                           intcon	equ	0xFF2
 17250                           intcon2	equ	0xFF1
 17251                           intcon3	equ	0xFF0
 17252                           indf0	equ	0xFEF
 17253                           postinc0	equ	0xFEE
 17254                           fsr0h	equ	0xFEA
 17255                           fsr0l	equ	0xFE9
 17256                           wreg	equ	0xFE8
 17257                           indf1	equ	0xFE7
 17258                           postdec1	equ	0xFE5
 17259                           plusw1	equ	0xFE3
 17260                           fsr1h	equ	0xFE2
 17261                           fsr1l	equ	0xFE1
 17262                           indf2	equ	0xFDF
 17263                           postinc2	equ	0xFDE
 17264                           postdec2	equ	0xFDD
 17265                           plusw2	equ	0xFDB
 17266                           fsr2h	equ	0xFDA
 17267                           fsr2l	equ	0xFD9
 17268                           status	equ	0xFD8
 17269                           
 17270 ;; *************** function _USBCtrlTrfInHandler *****************
 17271 ;; Defined at:
 17272 ;;		line 2594 in file "usb_device.c"
 17273 ;; Parameters:    Size  Location     Type
 17274 ;;		None
 17275 ;; Auto vars:     Size  Location     Type
 17276 ;;  lastDTS         1    1[COMRAM] unsigned char 
 17277 ;; Return value:  Size  Location     Type
 17278 ;;                  1    wreg      void 
 17279 ;; Registers used:
 17280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17281 ;; Tracked objects:
 17282 ;;		On entry : 0/0
 17283 ;;		On exit  : 0/0
 17284 ;;		Unchanged: 0/0
 17285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17290 ;;Total ram usage:        1 bytes
 17291 ;; Hardware stack levels used:    1
 17292 ;; Hardware stack levels required when called:    1
 17293 ;; This function calls:
 17294 ;;		_USBCtrlTrfTxService
 17295 ;; This function is called by:
 17296 ;;		_USBCtrlEPService
 17297 ;; This function uses a non-reentrant model
 17298 ;;
 17299                           
 17300                           	psect	text80
 17301  006C4E                     __ptext80:
 17302                           	opt stack 0
 17303  006C4E                     _USBCtrlTrfInHandler:
 17304                           	opt stack 27
 17305                           
 17306                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;incstack = 0
 17310  006C4E  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17311  006C52  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17312  006C56  0100               	movlb	0	; () banked
 17313  006C58  0E00               	movlw	0
 17314  006C5A  BCDF               	btfsc	indf2,6,c
 17315  006C5C  0E01               	movlw	1
 17316  006C5E  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17320  006C60  0E04               	movlw	4
 17321  006C62  19D4               	xorwf	_pBDTEntryIn& (0+255),w,b
 17322  006C64  6FD4               	movwf	_pBDTEntryIn& (0+255),b
 17323  006C66  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17324  006C68  6FD5               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 17328  006C6A  0E08               	movlw	8
 17329  006C6C  19FA               	xorwf	_USBDeviceState& (0+255),w,b
 17330  006C6E  A4D8               	btfss	status,2,c
 17331  006C70  D00D               	goto	l329
 17332                           
 17333                           ; BSR set to: 0
 17334                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 17335  006C72  010D               	movlb	13	; () banked
 17336  006C74  5132               	movf	50,w,b	;volatile
 17337  006C76  0B7F               	andlw	127
 17338  006C78  010F               	movlb	15	; () banked
 17339  006C7A  6F38               	movwf	56,b	;volatile
 17340                           
 17341                           ; BSR set to: 15
 17342                           ;usb_device.c: 2609: if(UADDR != 0u)
 17343  006C7C  5138               	movf	56,w,b	;volatile
 17344  006C7E  B4D8               	btfsc	status,2,c
 17345  006C80  D002               	goto	l328
 17346                           
 17347                           ; BSR set to: 15
 17348                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 17349  006C82  0E10               	movlw	16
 17350  006C84  D001               	goto	L15
 17351  006C86                     l328:
 17352                           
 17353                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 17354                           
 17355                           ; BSR set to: 0
 17356  006C86  0E04               	movlw	4
 17357  006C88                     L15:
 17358  006C88  0100               	movlb	0	; () banked
 17359  006C8A  6FFA               	movwf	_USBDeviceState& (0+255),b
 17360  006C8C                     l329:
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 17364                           
 17365                           ; BSR set to: 0
 17366                           
 17367                           ; BSR set to: 0
 17368  006C8C  05F8               	decf	_controlTransferState& (0+255),w,b
 17369  006C8E  A4D8               	btfss	status,2,c
 17370  006C90  D03B               	goto	l330
 17371                           
 17372                           ; BSR set to: 0
 17373                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 17374  006C92  EE20 F002          	lfsr	2,2
 17375  006C96  51D4               	movf	_pBDTEntryIn& (0+255),w,b
 17376  006C98  26D9               	addwf	fsr2l,f,c
 17377  006C9A  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17378  006C9C  22DA               	addwfc	fsr2h,f,c
 17379  006C9E  0E38               	movlw	56
 17380  006CA0  6EDE               	movwf	postinc2,c
 17381  006CA2  0E0D               	movlw	13
 17382  006CA4  6EDD               	movwf	postdec2,c
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 17386  006CA6  ECF0  F034         	call	_USBCtrlTrfTxService	;wreg free
 17387                           
 17388                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 17389  006CAA  0E02               	movlw	2
 17390  006CAC  0100               	movlb	0	; () banked
 17391  006CAE  19F9               	xorwf	_shortPacketStatus& (0+255),w,b
 17392  006CB0  A4D8               	btfss	status,2,c
 17393  006CB2  D00D               	goto	l331
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 17397  006CB4  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17398  006CB8  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17399  006CBC  0E04               	movlw	4
 17400  006CBE  6EDF               	movwf	indf2,c
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17404  006CC0  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17405  006CC4  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17406  006CC8  0E00               	movlw	0
 17407  006CCA  8EDB               	bsf	plusw2,7,c
 17408                           
 17409                           ;usb_device.c: 2635: }
 17410  006CCC  0012               	return	
 17411  006CCE                     l331:
 17412                           
 17413                           ; BSR set to: 0
 17414                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17415                           
 17416                           ; BSR set to: 0
 17417  006CCE  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17418  006CD0  A4D8               	btfss	status,2,c
 17419  006CD2  D00D               	goto	l333
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17423  006CD4  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17424  006CD8  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17425  006CDC  0E48               	movlw	72
 17426  006CDE  6EDF               	movwf	indf2,c
 17427                           
 17428                           ; BSR set to: 0
 17429                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17430  006CE0  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17431  006CE4  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17432  006CE8  0E00               	movlw	0
 17433  006CEA  8EDB               	bsf	plusw2,7,c
 17434                           
 17435                           ;usb_device.c: 2642: }
 17436  006CEC  0012               	return	
 17437  006CEE                     l333:
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17441                           
 17442                           ; BSR set to: 0
 17443  006CEE  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17444  006CF2  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17445  006CF6  0E08               	movlw	8
 17446  006CF8  6EDF               	movwf	indf2,c
 17447                           
 17448                           ; BSR set to: 0
 17449                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17450  006CFA  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 17451  006CFE  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17452  006D02  0E00               	movlw	0
 17453  006D04  8EDB               	bsf	plusw2,7,c
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17457                           
 17458                           ; BSR set to: 0
 17459  006D06  0012               	return	
 17460  006D08                     l330:
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17464  006D08  0101               	movlb	1	; () banked
 17465  006D0A  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 17466                           
 17467                           ; BSR set to: 1
 17468                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17469                           
 17470                           ; BSR set to: 1
 17471  006D0C  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17472                           
 17473                           ; BSR set to: 1
 17474                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 17475                           
 17476                           ; BSR set to: 1
 17477  006D0E  0E00               	movlw	0
 17478  006D10  0100               	movlb	0	; () banked
 17479  006D12  6FF8               	movwf	_controlTransferState& (0+255),b
 17480  006D14  0012               	return	
 17481  006D16                     __end_of_USBCtrlTrfInHandler:
 17482                           	opt stack 0
 17483                           tosu	equ	0xFFF
 17484                           tosh	equ	0xFFE
 17485                           tosl	equ	0xFFD
 17486                           pclath	equ	0xFFA
 17487                           tblptru	equ	0xFF8
 17488                           tblptrh	equ	0xFF7
 17489                           tblptrl	equ	0xFF6
 17490                           tablat	equ	0xFF5
 17491                           prodh	equ	0xFF4
 17492                           prodl	equ	0xFF3
 17493                           intcon	equ	0xFF2
 17494                           intcon2	equ	0xFF1
 17495                           intcon3	equ	0xFF0
 17496                           indf0	equ	0xFEF
 17497                           postinc0	equ	0xFEE
 17498                           fsr0h	equ	0xFEA
 17499                           fsr0l	equ	0xFE9
 17500                           wreg	equ	0xFE8
 17501                           indf1	equ	0xFE7
 17502                           postdec1	equ	0xFE5
 17503                           plusw1	equ	0xFE3
 17504                           fsr1h	equ	0xFE2
 17505                           fsr1l	equ	0xFE1
 17506                           indf2	equ	0xFDF
 17507                           postinc2	equ	0xFDE
 17508                           postdec2	equ	0xFDD
 17509                           plusw2	equ	0xFDB
 17510                           fsr2h	equ	0xFDA
 17511                           fsr2l	equ	0xFD9
 17512                           status	equ	0xFD8
 17513                           
 17514 ;; *************** function _USBCtrlTrfTxService *****************
 17515 ;; Defined at:
 17516 ;;		line 1773 in file "usb_device.c"
 17517 ;; Parameters:    Size  Location     Type
 17518 ;;		None
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  1    wreg      void 
 17523 ;; Registers used:
 17524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/0
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17534 ;;Total ram usage:        1 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; This function calls:
 17537 ;;		Nothing
 17538 ;; This function is called by:
 17539 ;;		_USBCtrlEPAllowDataStage
 17540 ;;		_USBCtrlTrfInHandler
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text81
 17545  0069E0                     __ptext81:
 17546                           	opt stack 0
 17547  0069E0                     _USBCtrlTrfTxService:
 17548                           	opt stack 25
 17549                           
 17550                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;incstack = 0
 17554  0069E0  0E08               	movlw	8
 17555  0069E2  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17556                           
 17557                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17558  0069E4  0100               	movlb	0	; () banked
 17559  0069E6  51D3               	movf	(_inPipes+5)& (0+255),w,b
 17560  0069E8  E110               	bnz	l12177
 17561  0069EA  0E08               	movlw	8
 17562  0069EC  5DD2               	subwf	(_inPipes+4)& (0+255),w,b
 17563  0069EE  B0D8               	btfsc	status,0,c
 17564  0069F0  D00C               	goto	l235
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17568  0069F2  C0D2  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17572  0069F6  51F9               	movf	_shortPacketStatus& (0+255),w,b
 17573  0069F8  A4D8               	btfss	status,2,c
 17574  0069FA  D002               	goto	l233
 17575                           
 17576                           ; BSR set to: 0
 17577                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17578  0069FC  0E01               	movlw	1
 17579  0069FE  D004               	goto	L16
 17580  006A00                     l233:
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17584                           
 17585                           ; BSR set to: 0
 17586  006A00  05F9               	decf	_shortPacketStatus& (0+255),w,b
 17587  006A02  A4D8               	btfss	status,2,c
 17588  006A04  D002               	goto	l235
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17592  006A06  0E02               	movlw	2
 17593  006A08                     L16:
 17594  006A08  6FF9               	movwf	_shortPacketStatus& (0+255),b
 17595  006A0A                     l235:
 17596  006A0A                     l12177:
 17597                           
 17598                           ; BSR set to: 0
 17599                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17600  006A0A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17601  006A0C  5FD2               	subwf	(_inPipes+4)& (0+255),f,b
 17602  006A0E  0E00               	movlw	0
 17603  006A10  5BD3               	subwfb	(_inPipes+5)& (0+255),f,b
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17607  006A12  EE20 F001          	lfsr	2,1
 17608  006A16  51D4               	movf	_pBDTEntryIn& (0+255),w,b
 17609  006A18  26D9               	addwf	fsr2l,f,c
 17610  006A1A  51D5               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17611  006A1C  22DA               	addwfc	fsr2h,f,c
 17612  006A1E  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17616  006A22  0E38               	movlw	56
 17617  006A24  0101               	movlb	1	; () banked
 17618  006A26  6F81               	movwf	_pDst& (0+255),b
 17619  006A28  0E0D               	movlw	13
 17620  006A2A  6F82               	movwf	(_pDst+1)& (0+255),b
 17621                           
 17622                           ; BSR set to: 1
 17623                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17624  006A2C  0100               	movlb	0	; () banked
 17625  006A2E  A1D1               	btfss	(_inPipes+3)& (0+255),0,b
 17626  006A30  D01D               	goto	l237
 17627  006A32  D03C               	goto	l241
 17628  006A34                     
 17629                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17630                           
 17631                           ; BSR set to: 0
 17632  006A34  C0CE  FFF6         	movff	_inPipes,tblptrl
 17633  006A38  C0CF  FFF7         	movff	_inPipes+1,tblptrh
 17634  006A3C  6AF8               	clrf	tblptru,c
 17635  006A3E  C181  FFD9         	movff	_pDst,fsr2l
 17636  006A42  C182  FFDA         	movff	_pDst+1,fsr2h
 17637  006A46  0E0E               	movlw	(high __ramtop+-1)
 17638  006A48  64F7               	cpfsgt	tblptrh,c
 17639  006A4A  D003               	bra	u9347
 17640  006A4C  0008               	tblrd		*
 17641  006A4E  50F5               	movf	tablat,w,c
 17642  006A50  D005               	bra	u9340
 17643  006A52                     u9347:
 17644  006A52  CFF6 FFE9          	movff	tblptrl,fsr0l
 17645  006A56  CFF7 FFEA          	movff	tblptrh,fsr0h
 17646  006A5A  50EF               	movf	indf0,w,c
 17647  006A5C                     u9340:
 17648  006A5C  6EDF               	movwf	indf2,c
 17649  006A5E  0100               	movlb	0	; () banked
 17650  006A60  4BCE               	infsnz	_inPipes& (0+255),f,b
 17651  006A62  2BCF               	incf	(_inPipes+1)& (0+255),f,b
 17652                           
 17653                           ; BSR set to: 0
 17654  006A64  0101               	movlb	1	; () banked
 17655  006A66  4B81               	infsnz	_pDst& (0+255),f,b
 17656  006A68  2B82               	incf	(_pDst+1)& (0+255),f,b
 17657                           
 17658                           ; BSR set to: 1
 17659                           ;usb_device.c: 1816: byteToSend--;
 17660  006A6A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17661  006A6C                     l237:
 17662                           
 17663                           ; BSR set to: 1
 17664  006A6C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17665  006A6E  B4D8               	btfsc	status,2,c
 17666  006A70  0012               	return	
 17667  006A72  D7E0               	goto	l238
 17668  006A74                     
 17669                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17670  006A74  C0CE  FFF6         	movff	_inPipes,tblptrl
 17671  006A78  C0CF  FFF7         	movff	_inPipes+1,tblptrh
 17672  006A7C  6AF8               	clrf	tblptru,c
 17673  006A7E  C181  FFD9         	movff	_pDst,fsr2l
 17674  006A82  C182  FFDA         	movff	_pDst+1,fsr2h
 17675  006A86  0E0E               	movlw	(high __ramtop+-1)
 17676  006A88  64F7               	cpfsgt	tblptrh,c
 17677  006A8A  D003               	bra	u9367
 17678  006A8C  0008               	tblrd		*
 17679  006A8E  50F5               	movf	tablat,w,c
 17680  006A90  D005               	bra	u9360
 17681  006A92                     u9367:
 17682  006A92  CFF6 FFE9          	movff	tblptrl,fsr0l
 17683  006A96  CFF7 FFEA          	movff	tblptrh,fsr0h
 17684  006A9A  50EF               	movf	indf0,w,c
 17685  006A9C                     u9360:
 17686  006A9C  6EDF               	movwf	indf2,c
 17687  006A9E  0100               	movlb	0	; () banked
 17688  006AA0  4BCE               	infsnz	_inPipes& (0+255),f,b
 17689  006AA2  2BCF               	incf	(_inPipes+1)& (0+255),f,b
 17690                           
 17691                           ; BSR set to: 0
 17692  006AA4  0101               	movlb	1	; () banked
 17693  006AA6  4B81               	infsnz	_pDst& (0+255),f,b
 17694  006AA8  2B82               	incf	(_pDst+1)& (0+255),f,b
 17695                           
 17696                           ; BSR set to: 1
 17697                           ;usb_device.c: 1824: byteToSend--;
 17698  006AAA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17699  006AAC                     l241:
 17700                           
 17701                           ; BSR set to: 1
 17702  006AAC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17703  006AAE  B4D8               	btfsc	status,2,c
 17704  006AB0  0012               	return	
 17705  006AB2  D7E0               	goto	l242
 17706  006AB4                     __end_of_USBCtrlTrfTxService:
 17707                           	opt stack 0
 17708                           tosu	equ	0xFFF
 17709                           tosh	equ	0xFFE
 17710                           tosl	equ	0xFFD
 17711                           pclath	equ	0xFFA
 17712                           tblptru	equ	0xFF8
 17713                           tblptrh	equ	0xFF7
 17714                           tblptrl	equ	0xFF6
 17715                           tablat	equ	0xFF5
 17716                           prodh	equ	0xFF4
 17717                           prodl	equ	0xFF3
 17718                           intcon	equ	0xFF2
 17719                           intcon2	equ	0xFF1
 17720                           intcon3	equ	0xFF0
 17721                           indf0	equ	0xFEF
 17722                           postinc0	equ	0xFEE
 17723                           fsr0h	equ	0xFEA
 17724                           fsr0l	equ	0xFE9
 17725                           wreg	equ	0xFE8
 17726                           indf1	equ	0xFE7
 17727                           postdec1	equ	0xFE5
 17728                           plusw1	equ	0xFE3
 17729                           fsr1h	equ	0xFE2
 17730                           fsr1l	equ	0xFE1
 17731                           indf2	equ	0xFDF
 17732                           postinc2	equ	0xFDE
 17733                           postdec2	equ	0xFDD
 17734                           plusw2	equ	0xFDB
 17735                           fsr2h	equ	0xFDA
 17736                           fsr2l	equ	0xFD9
 17737                           status	equ	0xFD8
 17738                           
 17739 ;; *************** function _APP_DeviceMSDTasks *****************
 17740 ;; Defined at:
 17741 ;;		line 110 in file "app_device_msd.c"
 17742 ;; Parameters:    Size  Location     Type
 17743 ;;		None
 17744 ;; Auto vars:     Size  Location     Type
 17745 ;;		None
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  1    wreg      void 
 17748 ;; Registers used:
 17749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17750 ;; Tracked objects:
 17751 ;;		On entry : 0/0
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17759 ;;Total ram usage:        0 bytes
 17760 ;; Hardware stack levels used:    1
 17761 ;; Hardware stack levels required when called:   11
 17762 ;; This function calls:
 17763 ;;		_MSDTasks
 17764 ;; This function is called by:
 17765 ;;		_main
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769                           	psect	text82
 17770  009FCC                     __ptext82:
 17771                           	opt stack 0
 17772  009FCC                     _APP_DeviceMSDTasks:
 17773                           	opt stack 19
 17774                           
 17775                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17776                           
 17777                           ;incstack = 0
 17778  009FCC  0E20               	movlw	32
 17779  009FCE  0100               	movlb	0	; () banked
 17780  009FD0  61FA               	cpfslt	_USBDeviceState& (0+255),b
 17781  009FD2  D001               	goto	l1006
 17782  009FD4  0012               	return	
 17783  009FD6                     l1006:
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17787  009FD6  B265               	btfsc	3941,1,c	;volatile
 17788  009FD8  0012               	return	
 17789                           
 17790                           ; BSR set to: 0
 17791                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17792                           
 17793                           ; BSR set to: 0
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17797  009FDA  ECED  F010         	call	_MSDTasks	;wreg free
 17798  009FDE  0012               	return		;funcret
 17799  009FE0                     __end_of_APP_DeviceMSDTasks:
 17800                           	opt stack 0
 17801                           tosu	equ	0xFFF
 17802                           tosh	equ	0xFFE
 17803                           tosl	equ	0xFFD
 17804                           pclath	equ	0xFFA
 17805                           tblptru	equ	0xFF8
 17806                           tblptrh	equ	0xFF7
 17807                           tblptrl	equ	0xFF6
 17808                           tablat	equ	0xFF5
 17809                           prodh	equ	0xFF4
 17810                           prodl	equ	0xFF3
 17811                           intcon	equ	0xFF2
 17812                           intcon2	equ	0xFF1
 17813                           intcon3	equ	0xFF0
 17814                           indf0	equ	0xFEF
 17815                           postinc0	equ	0xFEE
 17816                           fsr0h	equ	0xFEA
 17817                           fsr0l	equ	0xFE9
 17818                           wreg	equ	0xFE8
 17819                           indf1	equ	0xFE7
 17820                           postdec1	equ	0xFE5
 17821                           plusw1	equ	0xFE3
 17822                           fsr1h	equ	0xFE2
 17823                           fsr1l	equ	0xFE1
 17824                           indf2	equ	0xFDF
 17825                           postinc2	equ	0xFDE
 17826                           postdec2	equ	0xFDD
 17827                           plusw2	equ	0xFDB
 17828                           fsr2h	equ	0xFDA
 17829                           fsr2l	equ	0xFD9
 17830                           status	equ	0xFD8
 17831                           
 17832 ;; *************** function _MSDTasks *****************
 17833 ;; Defined at:
 17834 ;;		line 335 in file "usb_device_msd.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;		None
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;  i               1   81[COMRAM] unsigned char 
 17839 ;; Return value:  Size  Location     Type
 17840 ;;                  1    wreg      unsigned char 
 17841 ;; Registers used:
 17842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/0
 17845 ;;		On exit  : 0/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17849 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17852 ;;Total ram usage:        6 bytes
 17853 ;; Hardware stack levels used:    1
 17854 ;; Hardware stack levels required when called:   10
 17855 ;; This function calls:
 17856 ;;		_MSDProcessCommand
 17857 ;;		_USBStallEndpoint
 17858 ;;		_USBTransferOnePacket
 17859 ;; This function is called by:
 17860 ;;		_APP_DeviceMSDTasks
 17861 ;; This function uses a non-reentrant model
 17862 ;;
 17863                           
 17864                           	psect	text83
 17865  0021DA                     __ptext83:
 17866                           	opt stack 0
 17867  0021DA                     _MSDTasks:
 17868                           	opt stack 19
 17869                           
 17870                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17871                           
 17872                           ;incstack = 0
 17873  0021DA  0E20               	movlw	32
 17874  0021DC  0100               	movlb	0	; () banked
 17875  0021DE  19FA               	xorwf	_USBDeviceState& (0+255),w,b
 17876  0021E0  A4D8               	btfss	status,2,c
 17877  0021E2  0012               	return	
 17878  0021E4  D115               	goto	l554
 17879  0021E6                     
 17880                           ; BSR set to: 0
 17881                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17882                           
 17883                           ; BSR set to: 0
 17884  0021E6  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 17885  0021E8  11E3               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17886  0021EA  B4D8               	btfsc	status,2,c
 17887  0021EC  D006               	goto	u13480
 17888                           
 17889                           ; BSR set to: 0
 17890  0021EE  C0E2  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17891  0021F2  C0E3  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17892  0021F6  BEDF               	btfsc	indf2,7,c
 17893  0021F8  0012               	return	
 17894  0021FA                     u13480:
 17895                           
 17896                           ; BSR set to: 0
 17897                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17898                           
 17899                           ; BSR set to: 0
 17900  0021FA  0E00               	movlw	0
 17901  0021FC  6E52               	movwf	MSDTasks@i,c
 17902  0021FE                     l15911:
 17903                           
 17904                           ; BSR set to: 0
 17905  0021FE  0E1E               	movlw	30
 17906  002200  6452               	cpfsgt	MSDTasks@i,c
 17907  002202  D001               	goto	l559
 17908  002204  D014               	goto	u13500
 17909  002206                     l559:
 17910                           
 17911                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17912                           
 17913                           ; BSR set to: 0
 17914  002206  5052               	movf	MSDTasks@i,w,c
 17915  002208  0D01               	mullw	1
 17916  00220A  0E40               	movlw	64
 17917  00220C  24F3               	addwf	prodl,w,c
 17918  00220E  6ED9               	movwf	fsr2l,c
 17919  002210  0E0D               	movlw	13
 17920  002212  20F4               	addwfc	prodh,w,c
 17921  002214  6EDA               	movwf	fsr2h,c
 17922  002216  5052               	movf	MSDTasks@i,w,c
 17923  002218  0D01               	mullw	1
 17924  00221A  0E00               	movlw	low _gblCBW
 17925  00221C  24F3               	addwf	prodl,w,c
 17926  00221E  6EE1               	movwf	fsr1l,c
 17927  002220  0E01               	movlw	high _gblCBW
 17928  002222  20F4               	addwfc	prodh,w,c
 17929  002224  6EE2               	movwf	fsr1h,c
 17930  002226  CFDF FFE7          	movff	indf2,indf1
 17931  00222A  2A52               	incf	MSDTasks@i,f,c
 17932  00222C  D7E8               	goto	l15911
 17933  00222E                     u13500:
 17934                           
 17935                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17936  00222E  0100               	movlb	0	; () banked
 17937  002230  EE20 F001          	lfsr	2,1
 17938  002234  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 17939  002236  26D9               	addwf	fsr2l,f,c
 17940  002238  51E3               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17941  00223A  22DA               	addwfc	fsr2h,f,c
 17942  00223C  0E1F               	movlw	31
 17943  00223E  18DE               	xorwf	postinc2,w,c
 17944  002240  A4D8               	btfss	status,2,c
 17945  002242  D070               	goto	l561
 17946                           
 17947                           ; BSR set to: 0
 17948  002244  0E55               	movlw	85
 17949  002246  0101               	movlb	1	; () banked
 17950  002248  1900               	xorwf	_gblCBW& (0+255),w,b
 17951  00224A  E16C               	bnz	l561
 17952  00224C  0E53               	movlw	83
 17953  00224E  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17954  002250  E169               	bnz	l561
 17955  002252  0E42               	movlw	66
 17956  002254  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17957  002256  E166               	bnz	l15961
 17958  002258  0E43               	movlw	67
 17959  00225A  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17960  00225C  A4D8               	btfss	status,2,c
 17961  00225E  D062               	goto	l561
 17962                           
 17963                           ; BSR set to: 1
 17964                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17965  002260  0E01               	movlw	1
 17966  002262  6F87               	movwf	_MSDCBWValid& (0+255),b
 17967                           
 17968                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17969  002264  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17970  002266  A4D8               	btfss	status,2,c
 17971  002268  D052               	goto	l562
 17972                           
 17973                           ; BSR set to: 1
 17974  00226A  0E11               	movlw	17
 17975  00226C  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17976  00226E  D04F               	goto	l562
 17977                           
 17978                           ; BSR set to: 1
 17979  002270  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17980  002272  B4D8               	btfsc	status,2,c
 17981  002274  D04C               	goto	l562
 17982                           
 17983                           ; BSR set to: 1
 17984  002276  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17985  00227A  0E3F               	movlw	63
 17986  00227C  164D               	andwf	??_MSDTasks,f,c
 17987  00227E  A4D8               	btfss	status,2,c
 17988  002280  D046               	goto	l562
 17989                           
 17990                           ; BSR set to: 1
 17991                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17992  002282  0E55               	movlw	85
 17993  002284  010D               	movlb	13	; () banked
 17994  002286  6F80               	movwf	128,b	;volatile
 17995  002288  0E53               	movlw	83
 17996  00228A  6F81               	movwf	129,b	;volatile
 17997  00228C  0E42               	movlw	66
 17998  00228E  6F82               	movwf	130,b	;volatile
 17999  002290  0E53               	movlw	83
 18000  002292  6F83               	movwf	131,b	;volatile
 18001                           
 18002                           ; BSR set to: 13
 18003                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 18004  002294  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 18005  002298  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 18006  00229C  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 18007  0022A0  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 18008                           
 18009                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 18010  0022A4  0E00               	movlw	0
 18011  0022A6  6F88               	movwf	136,b	;volatile
 18012  0022A8  0E00               	movlw	0
 18013  0022AA  6F89               	movwf	137,b	;volatile
 18014  0022AC  0E00               	movlw	0
 18015  0022AE  6F8A               	movwf	138,b	;volatile
 18016  0022B0  0E00               	movlw	0
 18017  0022B2  6F8B               	movwf	139,b	;volatile
 18018                           
 18019                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 18020  0022B4  0E00               	movlw	0
 18021  0022B6  6F8C               	movwf	140,b	;volatile
 18022                           
 18023                           ; BSR set to: 13
 18024                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 18025  0022B8  0100               	movlb	0	; () banked
 18026  0022BA  69EF               	setf	_MSDCommandState& (0+255),b
 18027                           
 18028                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 18029  0022BC  0E00               	movlw	0
 18030  0022BE  6FEE               	movwf	_MSDReadState& (0+255),b
 18031                           
 18032                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 18033  0022C0  0E00               	movlw	0
 18034  0022C2  6FED               	movwf	_MSDWriteState& (0+255),b
 18035                           
 18036                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 18037  0022C4  0E00               	movlw	0
 18038  0022C6  6FEC               	movwf	_MSDRetryAttempt& (0+255),b
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 18042  0022C8  0E03               	movlw	3
 18043  0022CA  0101               	movlb	1	; () banked
 18044  0022CC  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 18045  0022CE  B4D8               	btfsc	status,2,c
 18046  0022D0  D008               	goto	l563
 18047                           
 18048                           ; BSR set to: 1
 18049                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 18050  0022D2  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 18051  0022D4  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 18052  0022D6  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 18053  0022D8  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 18054                           
 18055                           ; BSR set to: 1
 18056                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 18057  0022DA  0E00               	movlw	0
 18058  0022DC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18059                           
 18060                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 18061  0022DE  0E00               	movlw	0
 18062  0022E0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18063  0022E2                     l563:
 18064                           
 18065                           ; BSR set to: 1
 18066                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 18067                           
 18068                           ; BSR set to: 1
 18069  0022E2  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 18070  0022E4  D002               	goto	l564
 18071                           
 18072                           ; BSR set to: 1
 18073                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 18074  0022E6  0E01               	movlw	1
 18075  0022E8  D001               	goto	L17
 18076  0022EA                     l564:
 18077                           
 18078                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 18079                           
 18080                           ; BSR set to: 0
 18081  0022EA  0E02               	movlw	2
 18082  0022EC                     L17:
 18083  0022EC  0100               	movlb	0	; () banked
 18084  0022EE  6FF0               	movwf	_MSD_State& (0+255),b
 18085                           
 18086                           ; BSR set to: 0
 18087                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 18088                           
 18089                           ; BSR set to: 0
 18090  0022F0  0101               	movlb	1	; () banked
 18091  0022F2  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18092  0022F4  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18093  0022F6  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18094  0022F8  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18095  0022FA  B4D8               	btfsc	status,2,c
 18096  0022FC  D002               	goto	l566
 18097                           
 18098                           ; BSR set to: 1
 18099                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 18100  0022FE  0E00               	movlw	0
 18101  002300  D001               	goto	L18
 18102  002302                     l566:
 18103                           
 18104                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 18105                           
 18106                           ; BSR set to: 0
 18107  002302  0E01               	movlw	1
 18108  002304                     L18:
 18109  002304  0100               	movlb	0	; () banked
 18110  002306  6FEA               	movwf	_MSDHostNoData& (0+255),b
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 18114                           
 18115                           ; BSR set to: 0
 18116  002308  C10F  F0EF         	movff	_gblCBW+15,_MSDCommandState
 18117                           
 18118                           ;usb_device_msd.c: 454: }
 18119  00230C  0012               	return	
 18120  00230E                     l562:
 18121                           
 18122                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 18123                           
 18124                           ; BSR set to: 0
 18125  00230E  0E01               	movlw	1
 18126  002310  6E01               	movwf	USBStallEndpoint@dir,c
 18127  002312  0E02               	movlw	2
 18128  002314  EC8B  F02A         	call	_USBStallEndpoint
 18129                           
 18130                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 18131  002318  0E00               	movlw	0
 18132  00231A  6E01               	movwf	USBStallEndpoint@dir,c
 18133  00231C  0E02               	movlw	2
 18134  00231E  EC8B  F02A         	call	_USBStallEndpoint
 18135                           
 18136                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 18137  002322  0012               	return	
 18138  002324                     l561:
 18139  002324                     l15961:
 18140                           
 18141                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 18142  002324  0E01               	movlw	1
 18143  002326  6E01               	movwf	USBStallEndpoint@dir,c
 18144  002328  0E02               	movlw	2
 18145  00232A  EC8B  F02A         	call	_USBStallEndpoint
 18146                           
 18147                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 18148  00232E  0E00               	movlw	0
 18149  002330  6E01               	movwf	USBStallEndpoint@dir,c
 18150  002332  0E02               	movlw	2
 18151  002334  EC8B  F02A         	call	_USBStallEndpoint
 18152                           
 18153                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 18154  002338  0E00               	movlw	0
 18155  00233A  0101               	movlb	1	; () banked
 18156  00233C  6F87               	movwf	_MSDCBWValid& (0+255),b
 18157                           
 18158                           ; BSR set to: 1
 18159                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 18160                           
 18161                           ; BSR set to: 1
 18162  00233E  0012               	return	
 18163  002340                     
 18164                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 18165                           
 18166                           ; BSR set to: 1
 18167  002340  EC7D  F029         	call	_MSDProcessCommand	;wreg free
 18168  002344  0AFF               	xorlw	255
 18169  002346  A4D8               	btfss	status,2,c
 18170  002348  0012               	return	
 18171                           
 18172                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 18173  00234A  0E03               	movlw	3
 18174  00234C  0100               	movlb	0	; () banked
 18175  00234E  6FF0               	movwf	_MSD_State& (0+255),b
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 18179  002350  0012               	return	
 18180  002352                     
 18181                           ; BSR set to: 0
 18182                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 18183                           
 18184                           ; BSR set to: 0
 18185  002352  EC7D  F029         	call	_MSDProcessCommand	;wreg free
 18186  002356  0AFF               	xorlw	255
 18187  002358  A4D8               	btfss	status,2,c
 18188  00235A  0012               	return	
 18189                           
 18190                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 18191  00235C  010D               	movlb	13	; () banked
 18192  00235E  518C               	movf	140,w,b	;volatile
 18193  002360  A4D8               	btfss	status,2,c
 18194  002362  D008               	goto	l575
 18195                           
 18196                           ; BSR set to: 13
 18197  002364  5188               	movf	136,w,b	;volatile
 18198  002366  1189               	iorwf	137,w,b	;volatile
 18199  002368  118A               	iorwf	138,w,b	;volatile
 18200  00236A  118B               	iorwf	139,w,b	;volatile
 18201  00236C  B4D8               	btfsc	status,2,c
 18202  00236E  D002               	goto	l575
 18203                           
 18204                           ; BSR set to: 13
 18205                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 18206  002370  0E02               	movlw	2
 18207  002372  6F8C               	movwf	140,b	;volatile
 18208  002374                     l575:
 18209                           
 18210                           ; BSR set to: 13
 18211                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 18212  002374  0E03               	movlw	3
 18213  002376  0100               	movlb	0	; () banked
 18214  002378  6FF0               	movwf	_MSD_State& (0+255),b
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 18218  00237A  0012               	return	
 18219  00237C                     
 18220                           ; BSR set to: 0
 18221                           
 18222                           ; BSR set to: 0
 18223  00237C  C0D8  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 18224  002380  C0D9  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 18225                           
 18226                           ; BSR set to: 0
 18227                           
 18228                           ; BSR set to: 0
 18229                           
 18230                           ; BSR set to: 0
 18231  002384  504E               	movf	_MSDTasks$2372,w,c
 18232  002386  104F               	iorwf	_MSDTasks$2372+1,w,c
 18233  002388  B4D8               	btfsc	status,2,c
 18234  00238A  D00A               	goto	l577
 18235                           
 18236                           ; BSR set to: 0
 18237  00238C  C0D8  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 18238  002390  C0D9  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 18239                           
 18240                           ; BSR set to: 0
 18241                           
 18242                           ; BSR set to: 0
 18243                           
 18244                           ; BSR set to: 0
 18245                           
 18246                           ; BSR set to: 0
 18247  002394  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 18248  002398  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 18249  00239C  BEDF               	btfsc	indf2,7,c
 18250  00239E  0012               	return	
 18251  0023A0                     l577:
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 18255                           
 18256                           ; BSR set to: 0
 18257  0023A0  0E01               	movlw	1
 18258  0023A2  6E01               	movwf	USBTransferOnePacket@dir,c
 18259  0023A4  0E80               	movlw	128
 18260  0023A6  6E02               	movwf	USBTransferOnePacket@data,c
 18261  0023A8  0E0D               	movlw	13
 18262  0023AA  6E03               	movwf	USBTransferOnePacket@data+1,c
 18263  0023AC  0E0D               	movlw	13
 18264  0023AE  6E04               	movwf	USBTransferOnePacket@len,c
 18265  0023B0  0E02               	movlw	2
 18266  0023B2  EC96  F02C         	call	_USBTransferOnePacket
 18267  0023B6  C001  F0E0         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18268  0023BA  C002  F0E1         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18269                           
 18270                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 18271  0023BE  0100               	movlb	0	; () banked
 18272  0023C0  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 18273  0023C2  11E3               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18274  0023C4  B4D8               	btfsc	status,2,c
 18275  0023C6  D006               	goto	u13670
 18276                           
 18277                           ; BSR set to: 0
 18278  0023C8  C0E2  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18279  0023CC  C0E3  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18280  0023D0  BEDF               	btfsc	indf2,7,c
 18281  0023D2  D00F               	goto	l586
 18282  0023D4                     u13670:
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 18286                           
 18287                           ; BSR set to: 0
 18288  0023D4  0E00               	movlw	0
 18289  0023D6  6E01               	movwf	USBTransferOnePacket@dir,c
 18290  0023D8  0E40               	movlw	64
 18291  0023DA  6E02               	movwf	USBTransferOnePacket@data,c
 18292  0023DC  0E0D               	movlw	13
 18293  0023DE  6E03               	movwf	USBTransferOnePacket@data+1,c
 18294  0023E0  0E40               	movlw	64
 18295  0023E2  6E04               	movwf	USBTransferOnePacket@len,c
 18296  0023E4  0E02               	movlw	2
 18297  0023E6  EC96  F02C         	call	_USBTransferOnePacket
 18298  0023EA  C001  F0E2         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 18299  0023EE  C002  F0E3         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 18300  0023F2                     l586:
 18301                           
 18302                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 18303  0023F2  0E00               	movlw	0
 18304  0023F4  0100               	movlb	0	; () banked
 18305  0023F6  6FF0               	movwf	_MSD_State& (0+255),b
 18306                           
 18307                           ;usb_device_msd.c: 513: break;
 18308  0023F8  0012               	return	
 18309  0023FA                     
 18310                           ; BSR set to: 0
 18311                           ;usb_device_msd.c: 518: MSD_State=0x00;
 18312                           
 18313                           ; BSR set to: 0
 18314  0023FA  0E00               	movlw	0
 18315  0023FC  6FF0               	movwf	_MSD_State& (0+255),b
 18316                           
 18317                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 18318  0023FE  0E02               	movlw	2
 18319  002400  010D               	movlb	13	; () banked
 18320  002402  6F8C               	movwf	140,b	;volatile
 18321                           
 18322                           ; BSR set to: 13
 18323                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 18324  002404  0E00               	movlw	0
 18325  002406  6E01               	movwf	USBStallEndpoint@dir,c
 18326  002408  0E02               	movlw	2
 18327  00240A  EC8B  F02A         	call	_USBStallEndpoint
 18328                           
 18329                           ;usb_device_msd.c: 521: }
 18330  00240E  0012               	return	
 18331  002410                     l554:
 18332  002410  0100               	movlb	0	; () banked
 18333  002412  51F0               	movf	_MSD_State& (0+255),w,b
 18334                           
 18335                           ; Switch size 1, requested type "space"
 18336                           ; Number of cases is 4, Range of values is 0 to 3
 18337                           ; switch strategies available:
 18338                           ; Name         Instructions Cycles
 18339                           ; simple_byte           13     7 (average)
 18340                           ;	Chosen strategy is simple_byte
 18341  002414  0A00               	xorlw	0	; case 0
 18342  002416  B4D8               	btfsc	status,2,c
 18343  002418  D6E6               	goto	l555
 18344  00241A  0A01               	xorlw	1	; case 1
 18345  00241C  B4D8               	btfsc	status,2,c
 18346  00241E  D790               	goto	l571
 18347  002420  0A03               	xorlw	3	; case 2
 18348  002422  B4D8               	btfsc	status,2,c
 18349  002424  D796               	goto	l573
 18350  002426  0A01               	xorlw	1	; case 3
 18351  002428  B4D8               	btfsc	status,2,c
 18352  00242A  D7A8               	goto	l576
 18353  00242C  D7E6               	goto	l589
 18354  00242E                     __end_of_MSDTasks:
 18355                           	opt stack 0
 18356                           tosu	equ	0xFFF
 18357                           tosh	equ	0xFFE
 18358                           tosl	equ	0xFFD
 18359                           pclath	equ	0xFFA
 18360                           tblptru	equ	0xFF8
 18361                           tblptrh	equ	0xFF7
 18362                           tblptrl	equ	0xFF6
 18363                           tablat	equ	0xFF5
 18364                           prodh	equ	0xFF4
 18365                           prodl	equ	0xFF3
 18366                           intcon	equ	0xFF2
 18367                           intcon2	equ	0xFF1
 18368                           intcon3	equ	0xFF0
 18369                           indf0	equ	0xFEF
 18370                           postinc0	equ	0xFEE
 18371                           fsr0h	equ	0xFEA
 18372                           fsr0l	equ	0xFE9
 18373                           wreg	equ	0xFE8
 18374                           indf1	equ	0xFE7
 18375                           postdec1	equ	0xFE5
 18376                           plusw1	equ	0xFE3
 18377                           fsr1h	equ	0xFE2
 18378                           fsr1l	equ	0xFE1
 18379                           indf2	equ	0xFDF
 18380                           postinc2	equ	0xFDE
 18381                           postdec2	equ	0xFDD
 18382                           plusw2	equ	0xFDB
 18383                           fsr2h	equ	0xFDA
 18384                           fsr2l	equ	0xFD9
 18385                           status	equ	0xFD8
 18386                           
 18387 ;; *************** function _MSDProcessCommand *****************
 18388 ;; Defined at:
 18389 ;;		line 553 in file "usb_device_msd.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;		None
 18392 ;; Auto vars:     Size  Location     Type
 18393 ;;		None
 18394 ;; Return value:  Size  Location     Type
 18395 ;;                  1    wreg      unsigned char 
 18396 ;; Registers used:
 18397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18398 ;; Tracked objects:
 18399 ;;		On entry : 0/0
 18400 ;;		On exit  : 0/0
 18401 ;;		Unchanged: 0/0
 18402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18405 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18406 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18407 ;;Total ram usage:        5 bytes
 18408 ;; Hardware stack levels used:    1
 18409 ;; Hardware stack levels required when called:    9
 18410 ;; This function calls:
 18411 ;;		_ExternalFlash_MediaDetect
 18412 ;;		_ExternalFlash_MediaInitialize
 18413 ;;		_MSDProcessCommandMediaAbsent
 18414 ;;		_MSDProcessCommandMediaPresent
 18415 ;; This function is called by:
 18416 ;;		_MSDTasks
 18417 ;; This function uses a non-reentrant model
 18418 ;;
 18419                           
 18420                           	psect	text84
 18421  0052FA                     __ptext84:
 18422                           	opt stack 0
 18423  0052FA                     _MSDProcessCommand:
 18424                           	opt stack 19
 18425                           
 18426                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18427                           
 18428                           ;incstack = 0
 18429  0052FA  C1BD  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18430  0052FE  C1BE  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18431  005302  D801               	call	u12778
 18432  005304  D00A               	goto	u12779
 18433  005306                     u12778:
 18434  005306  0005               	push	
 18435  005308  6EFA               	movwf	pclath,c
 18436  00530A  0101               	movlb	1	; () banked
 18437  00530C  51B5               	movf	(_LUN+6)& (0+255),w,b
 18438  00530E  6EFD               	movwf	tosl,c
 18439  005310  51B6               	movf	(_LUN+7)& (0+255),w,b
 18440  005312  6EFE               	movwf	tosh,c
 18441  005314  6AFF               	clrf	tosu,c
 18442  005316  50FA               	movf	pclath,w,c
 18443  005318  0012               	return		;indir
 18444  00531A                     u12779:
 18445  00531A  0900               	iorlw	0
 18446  00531C  B4D8               	btfsc	status,2,c
 18447  00531E  D00C               	goto	u12790
 18448  005320  0101               	movlb	1	; () banked
 18449  005322  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18450  005324  0D01               	mullw	1
 18451  005326  0EEB               	movlw	low _SoftDetach
 18452  005328  24F3               	addwf	prodl,w,c
 18453  00532A  6ED9               	movwf	fsr2l,c
 18454  00532C  0E00               	movlw	high _SoftDetach
 18455  00532E  20F4               	addwfc	prodh,w,c
 18456  005330  6EDA               	movwf	fsr2h,c
 18457  005332  04DE               	decf	postinc2,w,c
 18458  005334  A4D8               	btfss	status,2,c
 18459  005336  D019               	goto	l592
 18460  005338                     u12790:
 18461                           
 18462                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18463                           
 18464                           ; BSR set to: 1
 18465  005338  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18466  00533C  0E01               	movlw	1
 18467  00533E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18468  005340  0E00               	movlw	0
 18469  005342  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18470  005344  2A48               	incf	??_MSDProcessCommand,f,c
 18471  005346  D003               	goto	u12804
 18472  005348                     u12805:
 18473  005348  90D8               	bcf	status,0,c
 18474  00534A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18475  00534C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18476  00534E                     u12804:
 18477  00534E  2E48               	decfsz	??_MSDProcessCommand,f,c
 18478  005350  D7FB               	goto	u12805
 18479  005352  1C49               	comf	??_MSDProcessCommand+1,w,c
 18480  005354  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 18481  005356  1C4A               	comf	??_MSDProcessCommand+2,w,c
 18482  005358  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 18483  00535A  504B               	movf	??_MSDProcessCommand+3,w,c
 18484  00535C  0101               	movlb	1	; () banked
 18485  00535E  177B               	andwf	_gblMediaPresent& (0+255),f,b
 18486  005360  504C               	movf	??_MSDProcessCommand+4,w,c
 18487  005362  177C               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 18488                           
 18489                           ; BSR set to: 1
 18490                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 18491  005364  EC14  F046         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18492                           
 18493                           ;usb_device_msd.c: 563: }
 18494  005368  D04E               	goto	l599
 18495  00536A                     l592:
 18496                           
 18497                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18498  00536A  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18499  00536E  0E01               	movlw	1
 18500  005370  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18501  005372  0E00               	movlw	0
 18502  005374  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18503  005376  2A48               	incf	??_MSDProcessCommand,f,c
 18504  005378  D003               	goto	u12814
 18505  00537A                     u12815:
 18506  00537A  90D8               	bcf	status,0,c
 18507  00537C  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18508  00537E  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18509  005380                     u12814:
 18510  005380  2E48               	decfsz	??_MSDProcessCommand,f,c
 18511  005382  D7FB               	goto	u12815
 18512  005384  0101               	movlb	1	; () banked
 18513  005386  517B               	movf	_gblMediaPresent& (0+255),w,b
 18514  005388  1649               	andwf	??_MSDProcessCommand+1,f,c
 18515  00538A  517C               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18516  00538C  164A               	andwf	??_MSDProcessCommand+2,f,c
 18517  00538E  5049               	movf	??_MSDProcessCommand+1,w,c
 18518  005390  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18519  005392  A4D8               	btfss	status,2,c
 18520  005394  D036               	goto	l596
 18521                           
 18522                           ; BSR set to: 1
 18523                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18524  005396  C1BD  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18525  00539A  C1BE  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18526  00539E  D801               	call	u12838
 18527  0053A0  D009               	goto	u12839
 18528  0053A2                     u12838:
 18529  0053A2  0005               	push	
 18530  0053A4  6EFA               	movwf	pclath,c
 18531  0053A6  51AF               	movf	_LUN& (0+255),w,b
 18532  0053A8  6EFD               	movwf	tosl,c
 18533  0053AA  51B0               	movf	(_LUN+1)& (0+255),w,b
 18534  0053AC  6EFE               	movwf	tosh,c
 18535  0053AE  6AFF               	clrf	tosu,c
 18536  0053B0  50FA               	movf	pclath,w,c
 18537  0053B2  0012               	return		;indir
 18538  0053B4                     u12839:
 18539  0053B4  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18540  0053B6  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18541  0053B8  B4D8               	btfsc	status,2,c
 18542  0053BA  D020               	goto	l597
 18543                           
 18544                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18545  0053BC  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18546  0053C0  0E01               	movlw	1
 18547  0053C2  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18548  0053C4  0E00               	movlw	0
 18549  0053C6  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18550  0053C8  2A48               	incf	??_MSDProcessCommand,f,c
 18551  0053CA  D003               	goto	u12854
 18552  0053CC                     u12855:
 18553  0053CC  90D8               	bcf	status,0,c
 18554  0053CE  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18555  0053D0  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18556  0053D2                     u12854:
 18557  0053D2  2E48               	decfsz	??_MSDProcessCommand,f,c
 18558  0053D4  D7FB               	goto	u12855
 18559  0053D6  5049               	movf	??_MSDProcessCommand+1,w,c
 18560  0053D8  0101               	movlb	1	; () banked
 18561  0053DA  137B               	iorwf	_gblMediaPresent& (0+255),f,b
 18562  0053DC  504A               	movf	??_MSDProcessCommand+2,w,c
 18563  0053DE  137C               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18564                           
 18565                           ; BSR set to: 1
 18566                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18567  0053E0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18568  0053E2  0BF0               	andlw	-16
 18569  0053E4  0906               	iorlw	6
 18570  0053E6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18571                           
 18572                           ; BSR set to: 1
 18573                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18574  0053E8  0E28               	movlw	40
 18575  0053EA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18576                           
 18577                           ; BSR set to: 1
 18578                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18579  0053EC  0E00               	movlw	0
 18580  0053EE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18581                           
 18582                           ; BSR set to: 1
 18583                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18584  0053F0  0E01               	movlw	1
 18585  0053F2  010D               	movlb	13	; () banked
 18586  0053F4  6F8C               	movwf	140,b	;volatile
 18587                           
 18588                           ; BSR set to: 13
 18589                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18590  0053F6  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18591                           
 18592                           ;usb_device_msd.c: 589: }
 18593  0053FA  D005               	goto	l599
 18594  0053FC                     l597:
 18595                           
 18596                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18597  0053FC  EC14  F046         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18598                           
 18599                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18600  005400  D002               	goto	l599
 18601  005402                     l596:
 18602                           
 18603                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18604  005402  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18605  005406                     l599:
 18606                           
 18607                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18608  005406  0100               	movlb	0	; () banked
 18609  005408  51EF               	movf	_MSDCommandState& (0+255),w,b
 18610  00540A  0012               	return	
 18611  00540C                     __end_of_MSDProcessCommand:
 18612                           	opt stack 0
 18613                           tosu	equ	0xFFF
 18614                           tosh	equ	0xFFE
 18615                           tosl	equ	0xFFD
 18616                           pclath	equ	0xFFA
 18617                           tblptru	equ	0xFF8
 18618                           tblptrh	equ	0xFF7
 18619                           tblptrl	equ	0xFF6
 18620                           tablat	equ	0xFF5
 18621                           prodh	equ	0xFF4
 18622                           prodl	equ	0xFF3
 18623                           intcon	equ	0xFF2
 18624                           intcon2	equ	0xFF1
 18625                           intcon3	equ	0xFF0
 18626                           indf0	equ	0xFEF
 18627                           postinc0	equ	0xFEE
 18628                           fsr0h	equ	0xFEA
 18629                           fsr0l	equ	0xFE9
 18630                           wreg	equ	0xFE8
 18631                           indf1	equ	0xFE7
 18632                           postdec1	equ	0xFE5
 18633                           plusw1	equ	0xFE3
 18634                           fsr1h	equ	0xFE2
 18635                           fsr1l	equ	0xFE1
 18636                           indf2	equ	0xFDF
 18637                           postinc2	equ	0xFDE
 18638                           postdec2	equ	0xFDD
 18639                           plusw2	equ	0xFDB
 18640                           fsr2h	equ	0xFDA
 18641                           fsr2l	equ	0xFD9
 18642                           status	equ	0xFD8
 18643                           
 18644 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18645 ;; Defined at:
 18646 ;;		line 635 in file "usb_device_msd.c"
 18647 ;; Parameters:    Size  Location     Type
 18648 ;;		None
 18649 ;; Auto vars:     Size  Location     Type
 18650 ;;		None
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      void 
 18653 ;; Registers used:
 18654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18664 ;;Total ram usage:        0 bytes
 18665 ;; Hardware stack levels used:    1
 18666 ;; Hardware stack levels required when called:    8
 18667 ;; This function calls:
 18668 ;;		_MSDErrorHandler
 18669 ;;		_MSDProcessCommandMediaPresent
 18670 ;;		_ResetSenseData
 18671 ;; This function is called by:
 18672 ;;		_MSDProcessCommand
 18673 ;; This function uses a non-reentrant model
 18674 ;;
 18675                           
 18676                           	psect	text85
 18677  008C28                     __ptext85:
 18678                           	opt stack 0
 18679  008C28                     _MSDProcessCommandMediaAbsent:
 18680                           	opt stack 19
 18681                           
 18682                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;incstack = 0
 18686  008C28  D01E               	goto	l603
 18687  008C2A                     
 18688                           ;usb_device_msd.c: 646: ResetSenseData();
 18689  008C2A  EC45  F046         	call	_ResetSenseData	;wreg free
 18690                           
 18691                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18692  008C2E  0101               	movlb	1	; () banked
 18693  008C30  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18694  008C32  0BF0               	andlw	-16
 18695  008C34  0902               	iorlw	2
 18696  008C36  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18697                           
 18698                           ; BSR set to: 1
 18699                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18700  008C38  0E3A               	movlw	58
 18701  008C3A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18702                           
 18703                           ; BSR set to: 1
 18704                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18705  008C3C  0E00               	movlw	0
 18706  008C3E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18707                           
 18708                           ; BSR set to: 1
 18709                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18710  008C40  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18711                           
 18712                           ;usb_device_msd.c: 655: break;
 18713  008C44  0012               	return	
 18714  008C46                     
 18715                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18716  008C46  0E01               	movlw	1
 18717  008C48  010D               	movlb	13	; () banked
 18718  008C4A  6F8C               	movwf	140,b	;volatile
 18719                           
 18720                           ; BSR set to: 13
 18721                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18722  008C4C  0100               	movlb	0	; () banked
 18723  008C4E  69EF               	setf	_MSDCommandState& (0+255),b
 18724                           
 18725                           ;usb_device_msd.c: 665: break;
 18726  008C50  0012               	return	
 18727  008C52                     
 18728                           ; BSR set to: 0
 18729                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18730                           
 18731                           ; BSR set to: 0
 18732  008C52  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18733                           
 18734                           ;usb_device_msd.c: 671: break;
 18735  008C56  0012               	return	
 18736  008C58                     
 18737                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18738  008C58  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18739                           
 18740                           ;usb_device_msd.c: 677: break;
 18741  008C5C  0012               	return	
 18742  008C5E                     
 18743                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18744  008C5E  0E7F               	movlw	127
 18745  008C60  EC92  F02B         	call	_MSDErrorHandler
 18746                           
 18747                           ;usb_device_msd.c: 685: }
 18748                           
 18749                           ;usb_device_msd.c: 684: break;
 18750  008C64  0012               	return	
 18751  008C66                     l603:
 18752  008C66  0100               	movlb	0	; () banked
 18753  008C68  51EF               	movf	_MSDCommandState& (0+255),w,b
 18754                           
 18755                           ; Switch size 1, requested type "space"
 18756                           ; Number of cases is 5, Range of values is 0 to 253
 18757                           ; switch strategies available:
 18758                           ; Name         Instructions Cycles
 18759                           ; simple_byte           16     9 (average)
 18760                           ;	Chosen strategy is simple_byte
 18761  008C6A  0A00               	xorlw	0	; case 0
 18762  008C6C  B4D8               	btfsc	status,2,c
 18763  008C6E  D7EB               	goto	l606
 18764  008C70  0A03               	xorlw	3	; case 3
 18765  008C72  B4D8               	btfsc	status,2,c
 18766  008C74  D7DA               	goto	l604
 18767  008C76  0A11               	xorlw	17	; case 18
 18768  008C78  B4D8               	btfsc	status,2,c
 18769  008C7A  D7EB               	goto	l608
 18770  008C7C  0A0C               	xorlw	12	; case 30
 18771  008C7E  B4D8               	btfsc	status,2,c
 18772  008C80  D7E2               	goto	l606
 18773  008C82  0AE3               	xorlw	227	; case 253
 18774  008C84  B4D8               	btfsc	status,2,c
 18775  008C86  D7E8               	goto	l609
 18776  008C88  D7EA               	goto	l610
 18777  008C8A                     __end_of_MSDProcessCommandMediaAbsent:
 18778                           	opt stack 0
 18779                           tosu	equ	0xFFF
 18780                           tosh	equ	0xFFE
 18781                           tosl	equ	0xFFD
 18782                           pclath	equ	0xFFA
 18783                           tblptru	equ	0xFF8
 18784                           tblptrh	equ	0xFF7
 18785                           tblptrl	equ	0xFF6
 18786                           tablat	equ	0xFF5
 18787                           prodh	equ	0xFF4
 18788                           prodl	equ	0xFF3
 18789                           intcon	equ	0xFF2
 18790                           intcon2	equ	0xFF1
 18791                           intcon3	equ	0xFF0
 18792                           indf0	equ	0xFEF
 18793                           postinc0	equ	0xFEE
 18794                           fsr0h	equ	0xFEA
 18795                           fsr0l	equ	0xFE9
 18796                           wreg	equ	0xFE8
 18797                           indf1	equ	0xFE7
 18798                           postdec1	equ	0xFE5
 18799                           plusw1	equ	0xFE3
 18800                           fsr1h	equ	0xFE2
 18801                           fsr1l	equ	0xFE1
 18802                           indf2	equ	0xFDF
 18803                           postinc2	equ	0xFDE
 18804                           postdec2	equ	0xFDD
 18805                           plusw2	equ	0xFDB
 18806                           fsr2h	equ	0xFDA
 18807                           fsr2l	equ	0xFD9
 18808                           status	equ	0xFD8
 18809                           
 18810 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18811 ;; Defined at:
 18812 ;;		line 712 in file "usb_device_msd.c"
 18813 ;; Parameters:    Size  Location     Type
 18814 ;;		None
 18815 ;; Auto vars:     Size  Location     Type
 18816 ;;  capacity        4   66[COMRAM] struct .
 18817 ;;  sectorSize      4   62[COMRAM] struct .
 18818 ;;  i               1   70[COMRAM] unsigned char 
 18819 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18820 ;; Return value:  Size  Location     Type
 18821 ;;                  1    wreg      void 
 18822 ;; Registers used:
 18823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18824 ;; Tracked objects:
 18825 ;;		On entry : 0/0
 18826 ;;		On exit  : 0/0
 18827 ;;		Unchanged: 0/0
 18828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18830 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18832 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18833 ;;Total ram usage:       14 bytes
 18834 ;; Hardware stack levels used:    1
 18835 ;; Hardware stack levels required when called:    7
 18836 ;; This function calls:
 18837 ;;		_ExternalFlash_CapacityRead
 18838 ;;		_ExternalFlash_SectorSizeRead
 18839 ;;		_ExternalFlash_WriteProtectStateGet
 18840 ;;		_MSDCheckForErrorCases
 18841 ;;		_MSDComputeDeviceInAndResidue
 18842 ;;		_MSDErrorHandler
 18843 ;;		_MSDReadHandler
 18844 ;;		_MSDWriteHandler
 18845 ;;		_ResetSenseData
 18846 ;;		_USBTransferOnePacket
 18847 ;;		_memcpy
 18848 ;; This function is called by:
 18849 ;;		_MSDProcessCommand
 18850 ;;		_MSDProcessCommandMediaAbsent
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           
 18854                           	psect	text86
 18855  00086C                     __ptext86:
 18856                           	opt stack 0
 18857  00086C                     _MSDProcessCommandMediaPresent:
 18858                           	opt stack 20
 18859                           
 18860                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18861                           
 18862                           ;incstack = 0
 18863  00086C  D1B9               	goto	l614
 18864  00086E                     
 18865                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18866  00086E  EC3F  F019         	call	_MSDReadHandler	;wreg free
 18867  000872  0900               	iorlw	0
 18868  000874  A4D8               	btfss	status,2,c
 18869  000876  0012               	return	
 18870                           
 18871                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18872  000878  0100               	movlb	0	; () banked
 18873  00087A  69EF               	setf	_MSDCommandState& (0+255),b
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18877  00087C  0012               	return	
 18878  00087E                     
 18879                           ; BSR set to: 0
 18880                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18881                           
 18882                           ; BSR set to: 0
 18883  00087E  EC90  F00A         	call	_MSDWriteHandler	;wreg free
 18884  000882  0900               	iorlw	0
 18885  000884  A4D8               	btfss	status,2,c
 18886  000886  0012               	return	
 18887                           
 18888                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18889  000888  0100               	movlb	0	; () banked
 18890  00088A  69EF               	setf	_MSDCommandState& (0+255),b
 18891                           
 18892                           ; BSR set to: 0
 18893                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18894  00088C  0012               	return	
 18895  00088E                     
 18896                           ; BSR set to: 0
 18897                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18898                           
 18899                           ; BSR set to: 0
 18900  00088E  05EA               	decf	_MSDHostNoData& (0+255),w,b
 18901  000890  A4D8               	btfss	status,2,c
 18902  000892  D002               	goto	l621
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18906  000894  69EF               	setf	_MSDCommandState& (0+255),b
 18907                           
 18908                           ;usb_device_msd.c: 751: break;
 18909  000896  0012               	return	
 18910  000898                     l621:
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18914  000898  C112  F0DF         	movff	_gblCBW+18,_TransferLength+1
 18915                           
 18916                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18917  00089C  C113  F0DE         	movff	_gblCBW+19,_TransferLength
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18921  0008A0  C0DE  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18922  0008A4  C0DF  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18923  0008A8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18924  0008AA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18925  0008AC  EC52  F032         	call	_MSDCheckForErrorCases	;wreg free
 18926  0008B0  0900               	iorlw	0
 18927  0008B2  A4D8               	btfss	status,2,c
 18928  0008B4  0012               	return	
 18929                           
 18930                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18931                           
 18932                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18933  0008B6  0E00               	movlw	0
 18934  0008B8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18935  0008BA  0E24               	movlw	36
 18936  0008BC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18937  0008BE  EC4B  F040         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18938                           
 18939                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18940  0008C2  0E00               	movlw	0
 18941  0008C4  6E01               	movwf	memcpy@d1,c
 18942  0008C6  0E06               	movlw	6
 18943  0008C8  6E02               	movwf	memcpy@d1+1,c
 18944  0008CA  0E49               	movlw	low _inq_resp
 18945  0008CC  6E03               	movwf	memcpy@s1,c
 18946  0008CE  0EBF               	movlw	high _inq_resp
 18947  0008D0  6E04               	movwf	memcpy@s1+1,c
 18948  0008D2  5003               	movf	memcpy@s1,w,c
 18949  0008D4  1004               	iorwf	memcpy@s1+1,w,c
 18950  0008D6  A4D8               	btfss	status,2,c
 18951  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18952  0008DA  6E05               	movwf	memcpy@s1+2,c
 18953  0008DC  0E00               	movlw	0
 18954  0008DE  6E07               	movwf	memcpy@n+1,c
 18955  0008E0  0E24               	movlw	36
 18956  0008E2  6E06               	movwf	memcpy@n,c
 18957  0008E4  ECE1  F045         	call	_memcpy	;wreg free
 18958                           
 18959                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18960  0008E8  0EFD               	movlw	253
 18961  0008EA  0100               	movlb	0	; () banked
 18962  0008EC  6FEF               	movwf	_MSDCommandState& (0+255),b
 18963                           
 18964                           ;usb_device_msd.c: 773: break;
 18965  0008EE  0012               	return	
 18966  0008F0                     
 18967                           ; BSR set to: 0
 18968                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18969                           
 18970                           ; BSR set to: 0
 18971  0008F0  C1BD  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18972  0008F4  C1BE  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18973  0008F8  D801               	call	u10908
 18974  0008FA  D00A               	goto	u10909
 18975  0008FC                     u10908:
 18976  0008FC  0005               	push	
 18977  0008FE  6EFA               	movwf	pclath,c
 18978  000900  0101               	movlb	1	; () banked
 18979  000902  51B1               	movf	(_LUN+2)& (0+255),w,b
 18980  000904  6EFD               	movwf	tosl,c
 18981  000906  51B2               	movf	(_LUN+3)& (0+255),w,b
 18982  000908  6EFE               	movwf	tosh,c
 18983  00090A  6AFF               	clrf	tosu,c
 18984  00090C  50FA               	movf	pclath,w,c
 18985  00090E  0012               	return		;indir
 18986  000910                     u10909:
 18987  000910  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18988  000914  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18989  000918  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18990  00091C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18991                           
 18992                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18993  000920  C1BD  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18994  000924  C1BE  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18995  000928  D801               	call	u10918
 18996  00092A  D00A               	goto	u10919
 18997  00092C                     u10918:
 18998  00092C  0005               	push	
 18999  00092E  6EFA               	movwf	pclath,c
 19000  000930  0101               	movlb	1	; () banked
 19001  000932  51B3               	movf	(_LUN+4)& (0+255),w,b
 19002  000934  6EFD               	movwf	tosl,c
 19003  000936  51B4               	movf	(_LUN+5)& (0+255),w,b
 19004  000938  6EFE               	movwf	tosh,c
 19005  00093A  6AFF               	clrf	tosu,c
 19006  00093C  50FA               	movf	pclath,w,c
 19007  00093E  0012               	return		;indir
 19008  000940                     u10919:
 19009  000940  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 19010  000944  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 19011  000948  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 19012  00094A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 19013                           
 19014                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 19015  00094C  EE26 F000          	lfsr	2,1536
 19016  000950  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 19017                           
 19018                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 19019  000954  EE26 F001          	lfsr	2,1537	;volatile
 19020  000958  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 19021                           
 19022                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 19023  00095C  EE26 F002          	lfsr	2,1538	;volatile
 19024  000960  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 19025                           
 19026                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 19027  000964  EE26 F003          	lfsr	2,1539	;volatile
 19028  000968  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 19029                           
 19030                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 19031  00096C  EE26 F004          	lfsr	2,1540	;volatile
 19032  000970  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 19033                           
 19034                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 19035  000974  EE26 F005          	lfsr	2,1541	;volatile
 19036  000978  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 19037                           
 19038                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 19039  00097C  EE26 F006          	lfsr	2,1542	;volatile
 19040  000980  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 19041                           
 19042                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 19043  000984  EE26 F007          	lfsr	2,1543	;volatile
 19044  000988  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 19045                           
 19046                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 19047  00098C  0E00               	movlw	0
 19048  00098E  0100               	movlb	0	; () banked
 19049  000990  6FDF               	movwf	(_TransferLength+1)& (0+255),b
 19050  000992  0E08               	movlw	8
 19051  000994  6FDE               	movwf	_TransferLength& (0+255),b
 19052                           
 19053                           ; BSR set to: 0
 19054                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 19055  000996  0E00               	movlw	0
 19056  000998  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19057  00099A  0E08               	movlw	8
 19058  00099C  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19059  00099E  EC4B  F040         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19060                           
 19061                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 19062  0009A2  0EFD               	movlw	253
 19063  0009A4  0100               	movlb	0	; () banked
 19064  0009A6  6FEF               	movwf	_MSDCommandState& (0+255),b
 19065                           
 19066                           ;usb_device_msd.c: 802: break;
 19067  0009A8  0012               	return	
 19068  0009AA                     
 19069                           ; BSR set to: 0
 19070                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 19071                           
 19072                           ; BSR set to: 0
 19073  0009AA  05EA               	decf	_MSDHostNoData& (0+255),w,b
 19074  0009AC  A4D8               	btfss	status,2,c
 19075  0009AE  D002               	goto	l625
 19076                           
 19077                           ; BSR set to: 0
 19078                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 19079  0009B0  69EF               	setf	_MSDCommandState& (0+255),b
 19080                           
 19081                           ;usb_device_msd.c: 814: break;
 19082  0009B2  0012               	return	
 19083  0009B4                     l625:
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 19087                           
 19088                           ; BSR set to: 0
 19089  0009B4  0E00               	movlw	0
 19090  0009B6  6FDF               	movwf	(_TransferLength+1)& (0+255),b
 19091  0009B8  0E12               	movlw	18
 19092  0009BA  6FDE               	movwf	_TransferLength& (0+255),b
 19093                           
 19094                           ; BSR set to: 0
 19095                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 19096  0009BC  0E00               	movlw	0
 19097  0009BE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19098  0009C0  0E12               	movlw	18
 19099  0009C2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19100  0009C4  EC4B  F040         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19101                           
 19102                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 19103  0009C8  0E00               	movlw	0
 19104  0009CA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19105  0009CC                     l13781:
 19106  0009CC  0E11               	movlw	17
 19107  0009CE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 19108  0009D0  D001               	goto	l626
 19109  0009D2  D014               	goto	u10940
 19110  0009D4                     l626:
 19111                           
 19112                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 19113  0009D4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19114  0009D6  0D01               	mullw	1
 19115  0009D8  0E1F               	movlw	low _gblSenseData
 19116  0009DA  24F3               	addwf	prodl,w,c
 19117  0009DC  6ED9               	movwf	fsr2l,c
 19118  0009DE  0E01               	movlw	high _gblSenseData
 19119  0009E0  20F4               	addwfc	prodh,w,c
 19120  0009E2  6EDA               	movwf	fsr2h,c
 19121  0009E4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19122  0009E6  0D01               	mullw	1
 19123  0009E8  0E00               	movlw	0
 19124  0009EA  24F3               	addwf	prodl,w,c
 19125  0009EC  6EE1               	movwf	fsr1l,c
 19126  0009EE  0E06               	movlw	6
 19127  0009F0  20F4               	addwfc	prodh,w,c
 19128  0009F2  6EE2               	movwf	fsr1h,c
 19129  0009F4  CFDF FFE7          	movff	indf2,indf1
 19130  0009F8  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19131  0009FA  D7E8               	goto	l13781
 19132  0009FC                     u10940:
 19133                           
 19134                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 19135  0009FC  0EFD               	movlw	253
 19136  0009FE  0100               	movlb	0	; () banked
 19137  000A00  6FEF               	movwf	_MSDCommandState& (0+255),b
 19138                           
 19139                           ;usb_device_msd.c: 827: break;
 19140  000A02  0012               	return	
 19141  000A04                     l628:
 19142                           
 19143                           ; BSR set to: 0
 19144                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 19145  000A04  0E03               	movlw	3
 19146  000A06  CFE8 F600          	movff	wreg,1536
 19147                           
 19148                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 19149  000A0A  0E00               	movlw	0
 19150  000A0C  CFE8 F601          	movff	wreg,1537	;volatile
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 19154  000A10  C1BD  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19155  000A14  C1BE  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19156  000A18  D801               	call	u10958
 19157  000A1A  D00A               	goto	u10959
 19158  000A1C                     u10958:
 19159  000A1C  0005               	push	
 19160  000A1E  6EFA               	movwf	pclath,c
 19161  000A20  0101               	movlb	1	; () banked
 19162  000A22  51B9               	movf	(_LUN+10)& (0+255),w,b
 19163  000A24  6EFD               	movwf	tosl,c
 19164  000A26  51BA               	movf	(_LUN+11)& (0+255),w,b
 19165  000A28  6EFE               	movwf	tosh,c
 19166  000A2A  6AFF               	clrf	tosu,c
 19167  000A2C  50FA               	movf	pclath,w,c
 19168  000A2E  0012               	return		;indir
 19169  000A30                     u10959:
 19170  000A30  0900               	iorlw	0
 19171  000A32  A4D8               	btfss	status,2,c
 19172  000A34  D004               	goto	l630
 19173  000A36  0E00               	movlw	0
 19174  000A38  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19175  000A3A  0E00               	movlw	0
 19176  000A3C  D003               	goto	L19
 19177  000A3E                     l630:
 19178  000A3E  0E00               	movlw	0
 19179  000A40  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19180  000A42  0E80               	movlw	128
 19181  000A44                     L19:
 19182  000A44  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 19183  000A46  EE26 F002          	lfsr	2,1538	;volatile
 19184  000A4A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 19185                           
 19186                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 19187  000A4E  0E00               	movlw	0
 19188  000A50  CFE8 F603          	movff	wreg,1539	;volatile
 19189                           
 19190                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 19191  000A54  0E00               	movlw	0
 19192  000A56  0100               	movlb	0	; () banked
 19193  000A58  6FDF               	movwf	(_TransferLength+1)& (0+255),b
 19194  000A5A  0E04               	movlw	4
 19195  000A5C  6FDE               	movwf	_TransferLength& (0+255),b
 19196                           
 19197                           ; BSR set to: 0
 19198                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 19199  000A5E  0E00               	movlw	0
 19200  000A60  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19201  000A62  0E04               	movlw	4
 19202  000A64  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19203  000A66  EC4B  F040         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19204                           
 19205                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 19206  000A6A  0EFD               	movlw	253
 19207  000A6C  0100               	movlb	0	; () banked
 19208  000A6E  6FEF               	movwf	_MSDCommandState& (0+255),b
 19209                           
 19210                           ;usb_device_msd.c: 839: break;
 19211  000A70  0012               	return	
 19212  000A72                     
 19213                           ; BSR set to: 0
 19214                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 19215                           
 19216                           ; BSR set to: 0
 19217  000A72  0101               	movlb	1	; () banked
 19218  000A74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19219  000A76  0BF0               	andlw	-16
 19220  000A78  0905               	iorlw	5
 19221  000A7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19222                           
 19223                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 19224  000A7C  0E20               	movlw	32
 19225  000A7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19226                           
 19227                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 19228  000A80  0E00               	movlw	0
 19229  000A82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19230                           
 19231                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 19232  000A84  0E01               	movlw	1
 19233  000A86  010D               	movlb	13	; () banked
 19234  000A88  6F8C               	movwf	140,b	;volatile
 19235                           
 19236                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 19237  000A8A  0E00               	movlw	0
 19238  000A8C  6F88               	movwf	136,b	;volatile
 19239  000A8E  0E00               	movlw	0
 19240  000A90  6F89               	movwf	137,b	;volatile
 19241  000A92  0E00               	movlw	0
 19242  000A94  6F8A               	movwf	138,b	;volatile
 19243  000A96  0E00               	movlw	0
 19244  000A98  6F8B               	movwf	139,b	;volatile
 19245                           
 19246                           ; BSR set to: 13
 19247                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 19248  000A9A  0100               	movlb	0	; () banked
 19249  000A9C  69EF               	setf	_MSDCommandState& (0+255),b
 19250                           
 19251                           ;usb_device_msd.c: 848: break;
 19252  000A9E  0012               	return	
 19253  000AA0                     
 19254                           ; BSR set to: 0
 19255                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 19256                           
 19257                           ; BSR set to: 0
 19258  000AA0  0E00               	movlw	0
 19259  000AA2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 19260  000AA4  0E00               	movlw	0
 19261  000AA6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 19262  000AA8  0E00               	movlw	0
 19263  000AAA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 19264  000AAC  0E00               	movlw	0
 19265  000AAE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 19266  000AB0  EC52  F032         	call	_MSDCheckForErrorCases	;wreg free
 19267  000AB4  0900               	iorlw	0
 19268  000AB6  A4D8               	btfss	status,2,c
 19269  000AB8  0012               	return	
 19270                           
 19271                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 19272                           
 19273                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 19274  000ABA  0101               	movlb	1	; () banked
 19275  000ABC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19276  000ABE  0B0F               	andlw	15
 19277  000AC0  0A06               	xorlw	6
 19278  000AC2  A4D8               	btfss	status,2,c
 19279  000AC4  D007               	goto	l636
 19280                           
 19281                           ; BSR set to: 1
 19282  000AC6  010D               	movlb	13	; () banked
 19283  000AC8  058C               	decf	140,w,b	;volatile
 19284  000ACA  A4D8               	btfss	status,2,c
 19285  000ACC  D003               	goto	l636
 19286                           
 19287                           ; BSR set to: 13
 19288                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 19289  000ACE  0100               	movlb	0	; () banked
 19290  000AD0  69EF               	setf	_MSDCommandState& (0+255),b
 19291                           
 19292                           ;usb_device_msd.c: 870: }
 19293  000AD2  0012               	return	
 19294  000AD4                     l636:
 19295                           
 19296                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 19297                           
 19298                           ; BSR set to: 0
 19299  000AD4  EC45  F046         	call	_ResetSenseData	;wreg free
 19300                           
 19301                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 19302  000AD8  0E00               	movlw	0
 19303  000ADA  010D               	movlb	13	; () banked
 19304  000ADC  6F88               	movwf	136,b	;volatile
 19305  000ADE  0E00               	movlw	0
 19306  000AE0  6F89               	movwf	137,b	;volatile
 19307  000AE2  0E00               	movlw	0
 19308  000AE4  6F8A               	movwf	138,b	;volatile
 19309  000AE6  0E00               	movlw	0
 19310  000AE8  6F8B               	movwf	139,b	;volatile
 19311                           
 19312                           ; BSR set to: 13
 19313                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 19314  000AEA  0100               	movlb	0	; () banked
 19315  000AEC  69EF               	setf	_MSDCommandState& (0+255),b
 19316                           
 19317                           ; BSR set to: 0
 19318                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 19319  000AEE  0012               	return	
 19320  000AF0                     
 19321                           ; BSR set to: 0
 19322                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 19323                           
 19324                           ; BSR set to: 0
 19325                           
 19326                           ; BSR set to: 0
 19327  000AF0  0E00               	movlw	0
 19328  000AF2  010D               	movlb	13	; () banked
 19329  000AF4  6F88               	movwf	136,b	;volatile
 19330  000AF6  0E00               	movlw	0
 19331  000AF8  6F89               	movwf	137,b	;volatile
 19332  000AFA  0E00               	movlw	0
 19333  000AFC  6F8A               	movwf	138,b	;volatile
 19334  000AFE  0E00               	movlw	0
 19335  000B00  6F8B               	movwf	139,b	;volatile
 19336                           
 19337                           ; BSR set to: 13
 19338                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 19339  000B02  0100               	movlb	0	; () banked
 19340  000B04  69EF               	setf	_MSDCommandState& (0+255),b
 19341                           
 19342                           ;usb_device_msd.c: 885: break;
 19343  000B06  0012               	return	
 19344  000B08                     
 19345                           ; BSR set to: 0
 19346                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 19347                           
 19348                           ; BSR set to: 0
 19349  000B08  51E0               	movf	_USBMSDInHandle& (0+255),w,b
 19350  000B0A  11E1               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19351  000B0C  B4D8               	btfsc	status,2,c
 19352  000B0E  D006               	goto	u11010
 19353                           
 19354                           ; BSR set to: 0
 19355  000B10  C0E0  FFD9         	movff	_USBMSDInHandle,fsr2l
 19356  000B14  C0E1  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19357  000B18  BEDF               	btfsc	indf2,7,c
 19358  000B1A  0012               	return	
 19359  000B1C                     u11010:
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 19363                           
 19364                           ; BSR set to: 0
 19365  000B1C  0101               	movlb	1	; () banked
 19366  000B1E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 19367  000B20  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19368  000B22  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19369  000B24  E104               	bnz	u11020
 19370  000B26  0E40               	movlw	64
 19371  000B28  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 19372  000B2A  A0D8               	btfss	status,0,c
 19373  000B2C  D009               	goto	l644
 19374  000B2E                     u11020:
 19375                           
 19376                           ; BSR set to: 1
 19377                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 19378  000B2E  0E40               	movlw	64
 19379  000B30  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 19380                           
 19381                           ; BSR set to: 1
 19382                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 19383  000B32  0E40               	movlw	64
 19384  000B34  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19385  000B36  0E00               	movlw	0
 19386  000B38  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19387  000B3A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19388  000B3C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19389                           
 19390                           ;usb_device_msd.c: 900: }
 19391  000B3E  D00A               	goto	l645
 19392  000B40                     l644:
 19393                           
 19394                           ; BSR set to: 1
 19395                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 19396  000B40  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 19397                           
 19398                           ; BSR set to: 1
 19399                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 19400  000B44  0E00               	movlw	0
 19401  000B46  6F08               	movwf	(_gblCBW+8)& (0+255),b
 19402  000B48  0E00               	movlw	0
 19403  000B4A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 19404  000B4C  0E00               	movlw	0
 19405  000B4E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 19406  000B50  0E00               	movlw	0
 19407  000B52  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19408  000B54                     l645:
 19409                           
 19410                           ; BSR set to: 1
 19411                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19412                           
 19413                           ; BSR set to: 1
 19414  000B54  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19415  000B56  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19416  000B58  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19417  000B5A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19418  000B5C  0100               	movlb	0	; () banked
 19419  000B5E  5DDE               	subwf	_TransferLength& (0+255),w,b
 19420  000B60  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19421  000B62  59DF               	subwfb	(_TransferLength+1)& (0+255),w,b
 19422  000B64  A0D8               	btfss	status,0,c
 19423  000B66  D005               	goto	l646
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19427  000B68  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19428  000B6A  5FDE               	subwf	_TransferLength& (0+255),f,b
 19429  000B6C  0E00               	movlw	0
 19430  000B6E  5BDF               	subwfb	(_TransferLength+1)& (0+255),f,b
 19431                           
 19432                           ;usb_device_msd.c: 918: }
 19433  000B70  D01A               	goto	u11050
 19434  000B72                     l646:
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19438                           
 19439                           ; BSR set to: 0
 19440  000B72  0E00               	movlw	0
 19441  000B74  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19442  000B76  D013               	goto	l648
 19443  000B78                     
 19444                           ; BSR set to: 0
 19445                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19446                           
 19447                           ; BSR set to: 0
 19448  000B78  51DE               	movf	_TransferLength& (0+255),w,b
 19449  000B7A  11DF               	iorwf	(_TransferLength+1)& (0+255),w,b
 19450  000B7C  B4D8               	btfsc	status,2,c
 19451  000B7E  D004               	goto	l650
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19455  000B80  07DE               	decf	_TransferLength& (0+255),f,b
 19456  000B82  A0D8               	btfss	status,0,c
 19457  000B84  07DF               	decf	(_TransferLength+1)& (0+255),f,b
 19458                           
 19459                           ;usb_device_msd.c: 932: }
 19460  000B86  D00A               	goto	l651
 19461  000B88                     l650:
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19465                           
 19466                           ; BSR set to: 0
 19467  000B88  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19468  000B8A  0D01               	mullw	1
 19469  000B8C  0E00               	movlw	0
 19470  000B8E  24F3               	addwf	prodl,w,c
 19471  000B90  6ED9               	movwf	fsr2l,c
 19472  000B92  0E06               	movlw	6
 19473  000B94  20F4               	addwfc	prodh,w,c
 19474  000B96  6EDA               	movwf	fsr2h,c
 19475  000B98  0E00               	movlw	0
 19476  000B9A  6EDF               	movwf	indf2,c
 19477  000B9C                     l651:
 19478                           
 19479                           ; BSR set to: 0
 19480                           
 19481                           ; BSR set to: 0
 19482  000B9C  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19483  000B9E                     l648:
 19484                           
 19485                           ; BSR set to: 0
 19486                           
 19487                           ; BSR set to: 0
 19488  000B9E  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19489  000BA0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 19490  000BA2  A0D8               	btfss	status,0,c
 19491  000BA4  D7E9               	goto	l649
 19492  000BA6                     u11050:
 19493                           
 19494                           ; BSR set to: 0
 19495                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 19496                           
 19497                           ; BSR set to: 0
 19498                           
 19499                           ; BSR set to: 0
 19500  000BA6  0E01               	movlw	1
 19501  000BA8  6E01               	movwf	USBTransferOnePacket@dir,c
 19502  000BAA  0E00               	movlw	0
 19503  000BAC  6E02               	movwf	USBTransferOnePacket@data,c
 19504  000BAE  0E06               	movlw	6
 19505  000BB0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19506  000BB2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19507  000BB6  0E02               	movlw	2
 19508  000BB8  EC96  F02C         	call	_USBTransferOnePacket
 19509  000BBC  C001  F0E0         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19510  000BC0  C002  F0E1         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19511                           
 19512                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19513  000BC4  0101               	movlb	1	; () banked
 19514  000BC6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19515  000BC8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19516  000BCA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19517  000BCC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19518  000BCE  A4D8               	btfss	status,2,c
 19519  000BD0  0012               	return	
 19520                           
 19521                           ; BSR set to: 1
 19522                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19523  000BD2  0100               	movlb	0	; () banked
 19524  000BD4  69EF               	setf	_MSDCommandState& (0+255),b
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19528                           
 19529                           ; BSR set to: 0
 19530                           
 19531                           ;usb_device_msd.c: 949: break;
 19532  000BD6  0012               	return	
 19533  000BD8                     
 19534                           ; BSR set to: 0
 19535                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19536                           
 19537                           ; BSR set to: 0
 19538                           
 19539                           ;usb_device_msd.c: 954: default:
 19540                           
 19541                           ; BSR set to: 0
 19542  000BD8  0E7F               	movlw	127
 19543  000BDA  EC92  F02B         	call	_MSDErrorHandler
 19544                           
 19545                           ;usb_device_msd.c: 960: }
 19546                           
 19547                           ;usb_device_msd.c: 959: break;
 19548  000BDE  0012               	return	
 19549  000BE0                     l614:
 19550  000BE0  0100               	movlb	0	; () banked
 19551  000BE2  51EF               	movf	_MSDCommandState& (0+255),w,b
 19552                           
 19553                           ; Switch size 1, requested type "space"
 19554                           ; Number of cases is 12, Range of values is 0 to 254
 19555                           ; switch strategies available:
 19556                           ; Name         Instructions Cycles
 19557                           ; simple_byte           37    19 (average)
 19558                           ;	Chosen strategy is simple_byte
 19559  000BE4  0A00               	xorlw	0	; case 0
 19560  000BE6  B4D8               	btfsc	status,2,c
 19561  000BE8  D75B               	goto	l634
 19562  000BEA  0A03               	xorlw	3	; case 3
 19563  000BEC  B4D8               	btfsc	status,2,c
 19564  000BEE  D6DD               	goto	l624
 19565  000BF0  0A11               	xorlw	17	; case 18
 19566  000BF2  B4D8               	btfsc	status,2,c
 19567  000BF4  D64C               	goto	l620
 19568  000BF6  0A08               	xorlw	8	; case 26
 19569  000BF8  B4D8               	btfsc	status,2,c
 19570  000BFA  D704               	goto	l628
 19571  000BFC  0A01               	xorlw	1	; case 27
 19572  000BFE  B4D8               	btfsc	status,2,c
 19573  000C00  D777               	goto	l638
 19574  000C02  0A05               	xorlw	5	; case 30
 19575  000C04  B4D8               	btfsc	status,2,c
 19576  000C06  D735               	goto	l633
 19577  000C08  0A3B               	xorlw	59	; case 37
 19578  000C0A  B4D8               	btfsc	status,2,c
 19579  000C0C  D671               	goto	l623
 19580  000C0E  0A0D               	xorlw	13	; case 40
 19581  000C10  B4D8               	btfsc	status,2,c
 19582  000C12  D62D               	goto	l615
 19583  000C14  0A02               	xorlw	2	; case 42
 19584  000C16  B4D8               	btfsc	status,2,c
 19585  000C18  D632               	goto	l618
 19586  000C1A  0A05               	xorlw	5	; case 47
 19587  000C1C  B4D8               	btfsc	status,2,c
 19588  000C1E  D768               	goto	l638
 19589  000C20  0AD2               	xorlw	210	; case 253
 19590  000C22  B4D8               	btfsc	status,2,c
 19591  000C24  D771               	goto	l640
 19592  000C26  0A03               	xorlw	3	; case 254
 19593  000C28  D7D7               	goto	l654
 19594  000C2A                     __end_of_MSDProcessCommandMediaPresent:
 19595                           	opt stack 0
 19596                           tosu	equ	0xFFF
 19597                           tosh	equ	0xFFE
 19598                           tosl	equ	0xFFD
 19599                           pclath	equ	0xFFA
 19600                           tblptru	equ	0xFF8
 19601                           tblptrh	equ	0xFF7
 19602                           tblptrl	equ	0xFF6
 19603                           tablat	equ	0xFF5
 19604                           prodh	equ	0xFF4
 19605                           prodl	equ	0xFF3
 19606                           intcon	equ	0xFF2
 19607                           intcon2	equ	0xFF1
 19608                           intcon3	equ	0xFF0
 19609                           indf0	equ	0xFEF
 19610                           postinc0	equ	0xFEE
 19611                           fsr0h	equ	0xFEA
 19612                           fsr0l	equ	0xFE9
 19613                           wreg	equ	0xFE8
 19614                           indf1	equ	0xFE7
 19615                           postdec1	equ	0xFE5
 19616                           plusw1	equ	0xFE3
 19617                           fsr1h	equ	0xFE2
 19618                           fsr1l	equ	0xFE1
 19619                           indf2	equ	0xFDF
 19620                           postinc2	equ	0xFDE
 19621                           postdec2	equ	0xFDD
 19622                           plusw2	equ	0xFDB
 19623                           fsr2h	equ	0xFDA
 19624                           fsr2l	equ	0xFD9
 19625                           status	equ	0xFD8
 19626                           
 19627 ;; *************** function _MSDWriteHandler *****************
 19628 ;; Defined at:
 19629 ;;		line 1188 in file "usb_device_msd.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;		None
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;		None
 19634 ;; Return value:  Size  Location     Type
 19635 ;;                  1    wreg      unsigned char 
 19636 ;; Registers used:
 19637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19645 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19646 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19647 ;;Total ram usage:        5 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:    6
 19650 ;; This function calls:
 19651 ;;		_ExternalFlash_SectorWrite
 19652 ;;		_ExternalFlash_WriteProtectStateGet
 19653 ;;		_MSDCheckForErrorCases
 19654 ;;		_USBStallEndpoint
 19655 ;;		_USBTransferOnePacket
 19656 ;; This function is called by:
 19657 ;;		_MSDProcessCommandMediaPresent
 19658 ;; This function uses a non-reentrant model
 19659 ;;
 19660                           
 19661                           	psect	text87
 19662  001520                     __ptext87:
 19663                           	opt stack 0
 19664  001520                     _MSDWriteHandler:
 19665                           	opt stack 20
 19666                           
 19667                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19668                           
 19669                           ;incstack = 0
 19670  001520  D146               	goto	l684
 19671  001522                     l685:
 19672                           
 19673                           ; BSR set to: 0
 19674                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19675  001522  C111  F15A         	movff	_gblCBW+17,_LBA+3
 19676                           
 19677                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19678  001526  C112  F159         	movff	_gblCBW+18,_LBA+2
 19679                           
 19680                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19681  00152A  C113  F158         	movff	_gblCBW+19,_LBA+1
 19682                           
 19683                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19684  00152E  C114  F157         	movff	_gblCBW+20,_LBA
 19685                           
 19686                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19687  001532  C116  F0DF         	movff	_gblCBW+22,_TransferLength+1
 19688                           
 19689                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19690  001536  C117  F0DE         	movff	_gblCBW+23,_TransferLength
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19694  00153A  51DE               	movf	_TransferLength& (0+255),w,b
 19695  00153C  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19696  00153E  51DF               	movf	(_TransferLength+1)& (0+255),w,b
 19697  001540  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19698  001542  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19699  001544  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19700  001546  0E09               	movlw	9
 19701  001548                     u9495:
 19702  001548  90D8               	bcf	status,0,c
 19703  00154A  3630               	rlcf	??_MSDWriteHandler,f,c
 19704  00154C  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19705  00154E  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19706  001550  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19707  001552  2EE8               	decfsz	wreg,f,c
 19708  001554  D7F9               	goto	u9495
 19709  001556  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19710  00155A  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19711  00155E  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19712  001562  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19713  001566  EC52  F032         	call	_MSDCheckForErrorCases	;wreg free
 19714  00156A  0900               	iorlw	0
 19715  00156C  A4D8               	btfss	status,2,c
 19716  00156E  D131               	goto	l687
 19717                           
 19718                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19719                           
 19720                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19721  001570  C1BD  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19722  001574  C1BE  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19723  001578  D801               	call	u9518
 19724  00157A  D00A               	goto	u9519
 19725  00157C                     u9518:
 19726  00157C  0005               	push	
 19727  00157E  6EFA               	movwf	pclath,c
 19728  001580  0101               	movlb	1	; () banked
 19729  001582  51B9               	movf	(_LUN+10)& (0+255),w,b
 19730  001584  6EFD               	movwf	tosl,c
 19731  001586  51BA               	movf	(_LUN+11)& (0+255),w,b
 19732  001588  6EFE               	movwf	tosh,c
 19733  00158A  6AFF               	clrf	tosu,c
 19734  00158C  50FA               	movf	pclath,w,c
 19735  00158E  0012               	return		;indir
 19736  001590                     u9519:
 19737  001590  0900               	iorlw	0
 19738  001592  B4D8               	btfsc	status,2,c
 19739  001594  D016               	goto	l688
 19740                           
 19741                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19742  001596  0E01               	movlw	1
 19743  001598  010D               	movlb	13	; () banked
 19744  00159A  6F8C               	movwf	140,b	;volatile
 19745                           
 19746                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19747  00159C  0101               	movlb	1	; () banked
 19748  00159E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19749  0015A0  0BF0               	andlw	-16
 19750  0015A2  0907               	iorlw	7
 19751  0015A4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19752                           
 19753                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19754  0015A6  0E27               	movlw	39
 19755  0015A8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19756                           
 19757                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19758  0015AA  0E00               	movlw	0
 19759  0015AC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19760                           
 19761                           ; BSR set to: 1
 19762                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19763  0015AE  0E00               	movlw	0
 19764  0015B0  6E01               	movwf	USBStallEndpoint@dir,c
 19765  0015B2  0E02               	movlw	2
 19766  0015B4  EC8B  F02A         	call	_USBStallEndpoint
 19767                           
 19768                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19769  0015B8  0E00               	movlw	0
 19770  0015BA  0100               	movlb	0	; () banked
 19771  0015BC  6FED               	movwf	_MSDWriteState& (0+255),b
 19772                           
 19773                           ; BSR set to: 0
 19774                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19775  0015BE  51ED               	movf	_MSDWriteState& (0+255),w,b
 19776                           
 19777                           ; BSR set to: 0
 19778  0015C0  0012               	return	
 19779  0015C2                     l688:
 19780                           
 19781                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19782                           
 19783                           ; BSR set to: 0
 19784  0015C2  0E01               	movlw	1
 19785  0015C4  0100               	movlb	0	; () banked
 19786  0015C6  6FF0               	movwf	_MSD_State& (0+255),b
 19787  0015C8                     
 19788                           ; BSR set to: 0
 19789                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19790                           
 19791                           ; BSR set to: 0
 19792  0015C8  51DE               	movf	_TransferLength& (0+255),w,b
 19793  0015CA  11DF               	iorwf	(_TransferLength+1)& (0+255),w,b
 19794  0015CC  A4D8               	btfss	status,2,c
 19795  0015CE  D002               	goto	l691
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19799  0015D0  0E00               	movlw	0
 19800  0015D2  D056               	goto	L20
 19801  0015D4                     l691:
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19805                           
 19806                           ; BSR set to: 0
 19807  0015D4  0E03               	movlw	3
 19808  0015D6  6FED               	movwf	_MSDWriteState& (0+255),b
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19812  0015D8  0E00               	movlw	0
 19813  0015DA  0101               	movlb	1	; () banked
 19814  0015DC  6F7F               	movwf	_ptrNextData& (0+255),b
 19815  0015DE  0E06               	movlw	6
 19816  0015E0  6F80               	movwf	(_ptrNextData+1)& (0+255),b
 19817                           
 19818                           ; BSR set to: 1
 19819                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19820  0015E2  0E00               	movlw	0
 19821  0015E4  010D               	movlb	13	; () banked
 19822  0015E6  6F88               	movwf	136,b	;volatile
 19823  0015E8  0E02               	movlw	2
 19824  0015EA  6F89               	movwf	137,b	;volatile
 19825  0015EC  0E00               	movlw	0
 19826  0015EE  6F8A               	movwf	138,b	;volatile
 19827  0015F0  0E00               	movlw	0
 19828  0015F2  6F8B               	movwf	139,b	;volatile
 19829  0015F4                     l692:
 19830                           
 19831                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19832  0015F4  010D               	movlb	13	; () banked
 19833  0015F6  5188               	movf	136,w,b	;volatile
 19834  0015F8  1189               	iorwf	137,w,b	;volatile
 19835  0015FA  118A               	iorwf	138,w,b	;volatile
 19836  0015FC  118B               	iorwf	139,w,b	;volatile
 19837  0015FE  B4D8               	btfsc	status,2,c
 19838  001600  D01E               	goto	l693
 19839                           
 19840                           ; BSR set to: 13
 19841                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19842  001602  0100               	movlb	0	; () banked
 19843  001604  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 19844  001606  11E3               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19845  001608  B4D8               	btfsc	status,2,c
 19846  00160A  D006               	goto	l694
 19847                           
 19848                           ; BSR set to: 0
 19849  00160C  C0E2  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19850  001610  C0E3  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19851  001614  BEDF               	btfsc	indf2,7,c
 19852  001616  D0DD               	goto	l687
 19853  001618                     l694:
 19854                           
 19855                           ; BSR set to: 0
 19856                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19857                           
 19858                           ; BSR set to: 0
 19859  001618  0E00               	movlw	0
 19860  00161A  6E01               	movwf	USBTransferOnePacket@dir,c
 19861  00161C  C17F  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19862  001620  C180  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19863  001624  0E40               	movlw	64
 19864  001626  6E04               	movwf	USBTransferOnePacket@len,c
 19865  001628  0E02               	movlw	2
 19866  00162A  EC96  F02C         	call	_USBTransferOnePacket
 19867  00162E  C001  F0E2         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19868  001632  C002  F0E3         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19869                           
 19870                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19871  001636  0E04               	movlw	4
 19872  001638  0100               	movlb	0	; () banked
 19873  00163A  6FED               	movwf	_MSDWriteState& (0+255),b
 19874                           
 19875                           ;usb_device_msd.c: 1260: }
 19876  00163C  D023               	goto	l695
 19877  00163E                     l693:
 19878                           
 19879                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19880                           
 19881                           ; BSR set to: 0
 19882  00163E  C1BD  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19883  001642  C1BE  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19884  001646  D801               	call	u9578
 19885  001648  D00A               	goto	u9579
 19886  00164A                     u9578:
 19887  00164A  0005               	push	
 19888  00164C  6EFA               	movwf	pclath,c
 19889  00164E  0101               	movlb	1	; () banked
 19890  001650  51B9               	movf	(_LUN+10)& (0+255),w,b
 19891  001652  6EFD               	movwf	tosl,c
 19892  001654  51BA               	movf	(_LUN+11)& (0+255),w,b
 19893  001656  6EFE               	movwf	tosh,c
 19894  001658  6AFF               	clrf	tosu,c
 19895  00165A  50FA               	movf	pclath,w,c
 19896  00165C  0012               	return		;indir
 19897  00165E                     u9579:
 19898  00165E  0900               	iorlw	0
 19899  001660  B4D8               	btfsc	status,2,c
 19900  001662  D00C               	goto	l696
 19901                           
 19902                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19903  001664  0E01               	movlw	1
 19904  001666  010D               	movlb	13	; () banked
 19905  001668  6F8C               	movwf	140,b	;volatile
 19906                           
 19907                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19908  00166A  0101               	movlb	1	; () banked
 19909  00166C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19910  00166E  0BF0               	andlw	-16
 19911  001670  0902               	iorlw	2
 19912  001672  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19913                           
 19914                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19915  001674  0E27               	movlw	39
 19916  001676  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19917                           
 19918                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19919  001678  0E00               	movlw	0
 19920  00167A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19921  00167C                     l696:
 19922                           
 19923                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19924  00167C  0E02               	movlw	2
 19925  00167E  D095               	goto	L22
 19926  001680                     L20:
 19927  001680  6FED               	movwf	_MSDWriteState& (0+255),b
 19928                           
 19929                           ;usb_device_msd.c: 1280: break;
 19930  001682  D0A7               	goto	l687
 19931  001684                     l695:
 19932                           
 19933                           ; BSR set to: 0
 19934                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19935                           
 19936                           ; BSR set to: 0
 19937                           
 19938                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19939                           
 19940                           ; BSR set to: 0
 19941  001684  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 19942  001686  11E3               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19943  001688  B4D8               	btfsc	status,2,c
 19944  00168A  D006               	goto	l698
 19945                           
 19946                           ; BSR set to: 0
 19947  00168C  C0E2  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19948  001690  C0E3  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19949  001694  BEDF               	btfsc	indf2,7,c
 19950  001696  D09D               	goto	l687
 19951  001698                     l698:
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19955                           
 19956                           ; BSR set to: 0
 19957  001698  EE20 F001          	lfsr	2,1
 19958  00169C  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 19959  00169E  26D9               	addwf	fsr2l,f,c
 19960  0016A0  51E3               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19961  0016A2  22DA               	addwfc	fsr2h,f,c
 19962  0016A4  50DF               	movf	indf2,w,c
 19963  0016A6  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19964  0016A8  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19965  0016AC  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19966  0016AE  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19967  0016B0  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19968  0016B2  5031               	movf	??_MSDWriteHandler+1,w,c
 19969  0016B4  0101               	movlb	1	; () banked
 19970  0016B6  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19971  0016B8  5032               	movf	??_MSDWriteHandler+2,w,c
 19972  0016BA  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19973  0016BC  5033               	movf	??_MSDWriteHandler+3,w,c
 19974  0016BE  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19975  0016C0  5034               	movf	??_MSDWriteHandler+4,w,c
 19976  0016C2  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19977                           
 19978                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19979  0016C4  0100               	movlb	0	; () banked
 19980  0016C6  EE20 F001          	lfsr	2,1
 19981  0016CA  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 19982  0016CC  26D9               	addwf	fsr2l,f,c
 19983  0016CE  51E3               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19984  0016D0  22DA               	addwfc	fsr2h,f,c
 19985  0016D2  50DF               	movf	indf2,w,c
 19986  0016D4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19987  0016D6  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19988  0016DA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19989  0016DC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19990  0016DE  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19991  0016E0  5031               	movf	??_MSDWriteHandler+1,w,c
 19992  0016E2  010D               	movlb	13	; () banked
 19993  0016E4  5F88               	subwf	136,f,b	;volatile
 19994  0016E6  5032               	movf	??_MSDWriteHandler+2,w,c
 19995  0016E8  5B89               	subwfb	137,f,b	;volatile
 19996  0016EA  5033               	movf	??_MSDWriteHandler+3,w,c
 19997  0016EC  5B8A               	subwfb	138,f,b	;volatile
 19998  0016EE  5034               	movf	??_MSDWriteHandler+4,w,c
 19999  0016F0  5B8B               	subwfb	139,f,b	;volatile
 20000                           
 20001                           ; BSR set to: 13
 20002                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 20003  0016F2  0E40               	movlw	64
 20004  0016F4  0101               	movlb	1	; () banked
 20005  0016F6  277F               	addwf	_ptrNextData& (0+255),f,b
 20006  0016F8  0E00               	movlw	0
 20007  0016FA  2380               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20008                           
 20009                           ; BSR set to: 1
 20010                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 20011  0016FC  0E03               	movlw	3
 20012  0016FE  D055               	goto	L22
 20013  001700                     
 20014                           ; BSR set to: 0
 20015                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 20016                           
 20017                           ; BSR set to: 0
 20018  001700  010D               	movlb	13	; () banked
 20019  001702  518C               	movf	140,w,b	;volatile
 20020  001704  A4D8               	btfss	status,2,c
 20021  001706  D03B               	goto	l703
 20022                           
 20023                           ; BSR set to: 13
 20024                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 20025  001708  C1BD  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 20026  00170C  C1BE  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 20027  001710  C157  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 20028  001714  C158  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 20029  001718  C159  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 20030  00171C  C15A  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 20031  001720  0E00               	movlw	0
 20032  001722  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 20033  001724  0E06               	movlw	6
 20034  001726  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 20035  001728  0101               	movlb	1	; () banked
 20036  00172A  5157               	movf	_LBA& (0+255),w,b
 20037  00172C  1158               	iorwf	(_LBA+1)& (0+255),w,b
 20038  00172E  1159               	iorwf	(_LBA+2)& (0+255),w,b
 20039  001730  115A               	iorwf	(_LBA+3)& (0+255),w,b
 20040  001732  A4D8               	btfss	status,2,c
 20041  001734  D002               	goto	u9620
 20042  001736  0E01               	movlw	1
 20043  001738  D001               	goto	u9630
 20044  00173A                     u9620:
 20045  00173A  0E00               	movlw	0
 20046  00173C                     u9630:
 20047  00173C  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 20048  00173E  D801               	call	u9648
 20049  001740  D009               	goto	u9649
 20050  001742                     u9648:
 20051  001742  0005               	push	
 20052  001744  6EFA               	movwf	pclath,c
 20053  001746  51BB               	movf	(_LUN+12)& (0+255),w,b
 20054  001748  6EFD               	movwf	tosl,c
 20055  00174A  51BC               	movf	(_LUN+13)& (0+255),w,b
 20056  00174C  6EFE               	movwf	tosh,c
 20057  00174E  6AFF               	clrf	tosu,c
 20058  001750  50FA               	movf	pclath,w,c
 20059  001752  0012               	return		;indir
 20060  001754                     u9649:
 20061  001754  06E8               	decf	wreg,f,c
 20062  001756  B4D8               	btfsc	status,2,c
 20063  001758  D012               	goto	l703
 20064                           
 20065                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 20066  00175A  0E64               	movlw	100
 20067  00175C  0100               	movlb	0	; () banked
 20068  00175E  61EC               	cpfslt	_MSDRetryAttempt& (0+255),b
 20069  001760  D002               	goto	l702
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 20073  001762  2BEC               	incf	_MSDRetryAttempt& (0+255),f,b
 20074                           
 20075                           ;usb_device_msd.c: 1314: break;
 20076  001764  D036               	goto	l687
 20077  001766                     l702:
 20078                           
 20079                           ; BSR set to: 0
 20080                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 20081                           
 20082                           ; BSR set to: 0
 20083  001766  0E01               	movlw	1
 20084  001768  010D               	movlb	13	; () banked
 20085  00176A  6F8C               	movwf	140,b	;volatile
 20086                           
 20087                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 20088  00176C  0101               	movlb	1	; () banked
 20089  00176E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20090  001770  0BF0               	andlw	-16
 20091  001772  0903               	iorlw	3
 20092  001774  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20093                           
 20094                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 20095  001776  0E00               	movlw	0
 20096  001778  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20097                           
 20098                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 20099  00177A  0E00               	movlw	0
 20100  00177C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20101  00177E                     l703:
 20102                           
 20103                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 20104                           
 20105                           ; BSR set to: 1
 20106                           
 20107                           ; BSR set to: 1
 20108                           
 20109                           ; BSR set to: 1
 20110  00177E  0E01               	movlw	1
 20111  001780  0101               	movlb	1	; () banked
 20112  001782  2757               	addwf	_LBA& (0+255),f,b
 20113  001784  0E00               	movlw	0
 20114  001786  2358               	addwfc	(_LBA+1)& (0+255),f,b
 20115  001788  2359               	addwfc	(_LBA+2)& (0+255),f,b
 20116  00178A  235A               	addwfc	(_LBA+3)& (0+255),f,b
 20117                           
 20118                           ; BSR set to: 1
 20119                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 20120  00178C  0100               	movlb	0	; () banked
 20121  00178E  07DE               	decf	_TransferLength& (0+255),f,b
 20122  001790  A0D8               	btfss	status,0,c
 20123  001792  07DF               	decf	(_TransferLength+1)& (0+255),f,b
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 20127  001794  0E01               	movlw	1
 20128  001796  D774               	goto	L20
 20129  001798                     
 20130                           ; BSR set to: 0
 20131                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 20132                           
 20133                           ; BSR set to: 0
 20134  001798  0E02               	movlw	2
 20135  00179A  010D               	movlb	13	; () banked
 20136  00179C  6F8C               	movwf	140,b	;volatile
 20137                           
 20138                           ; BSR set to: 13
 20139                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 20140  00179E  0E00               	movlw	0
 20141  0017A0  6E01               	movwf	USBStallEndpoint@dir,c
 20142  0017A2  0E02               	movlw	2
 20143  0017A4  EC8B  F02A         	call	_USBStallEndpoint
 20144                           
 20145                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 20146  0017A8  0E00               	movlw	0
 20147  0017AA                     L22:
 20148  0017AA  0100               	movlb	0	; () banked
 20149  0017AC  D769               	goto	L20
 20150  0017AE                     l684:
 20151                           
 20152                           ; BSR set to: 0
 20153  0017AE  0100               	movlb	0	; () banked
 20154  0017B0  51ED               	movf	_MSDWriteState& (0+255),w,b
 20155                           
 20156                           ; Switch size 1, requested type "space"
 20157                           ; Number of cases is 5, Range of values is 0 to 4
 20158                           ; switch strategies available:
 20159                           ; Name         Instructions Cycles
 20160                           ; simple_byte           16     9 (average)
 20161                           ;	Chosen strategy is simple_byte
 20162  0017B2  0A00               	xorlw	0	; case 0
 20163  0017B4  B4D8               	btfsc	status,2,c
 20164  0017B6  D6B5               	goto	l685
 20165  0017B8  0A01               	xorlw	1	; case 1
 20166  0017BA  B4D8               	btfsc	status,2,c
 20167  0017BC  D705               	goto	l690
 20168  0017BE  0A03               	xorlw	3	; case 2
 20169  0017C0  B4D8               	btfsc	status,2,c
 20170  0017C2  D79E               	goto	l699
 20171  0017C4  0A01               	xorlw	1	; case 3
 20172  0017C6  B4D8               	btfsc	status,2,c
 20173  0017C8  D715               	goto	l692
 20174  0017CA  0A07               	xorlw	7	; case 4
 20175  0017CC  B4D8               	btfsc	status,2,c
 20176  0017CE  D75A               	goto	l695
 20177  0017D0  D7E3               	goto	l704
 20178  0017D2                     l687:
 20179                           
 20180                           ;usb_device_msd.c: 1347: return MSDWriteState;
 20181                           
 20182                           ; BSR set to: 0
 20183  0017D2  0100               	movlb	0	; () banked
 20184  0017D4  51ED               	movf	_MSDWriteState& (0+255),w,b
 20185  0017D6  0012               	return	
 20186  0017D8                     __end_of_MSDWriteHandler:
 20187                           	opt stack 0
 20188                           tosu	equ	0xFFF
 20189                           tosh	equ	0xFFE
 20190                           tosl	equ	0xFFD
 20191                           pclath	equ	0xFFA
 20192                           tblptru	equ	0xFF8
 20193                           tblptrh	equ	0xFF7
 20194                           tblptrl	equ	0xFF6
 20195                           tablat	equ	0xFF5
 20196                           prodh	equ	0xFF4
 20197                           prodl	equ	0xFF3
 20198                           intcon	equ	0xFF2
 20199                           intcon2	equ	0xFF1
 20200                           intcon3	equ	0xFF0
 20201                           indf0	equ	0xFEF
 20202                           postinc0	equ	0xFEE
 20203                           fsr0h	equ	0xFEA
 20204                           fsr0l	equ	0xFE9
 20205                           wreg	equ	0xFE8
 20206                           indf1	equ	0xFE7
 20207                           postdec1	equ	0xFE5
 20208                           plusw1	equ	0xFE3
 20209                           fsr1h	equ	0xFE2
 20210                           fsr1l	equ	0xFE1
 20211                           indf2	equ	0xFDF
 20212                           postinc2	equ	0xFDE
 20213                           postdec2	equ	0xFDD
 20214                           plusw2	equ	0xFDB
 20215                           fsr2h	equ	0xFDA
 20216                           fsr2l	equ	0xFD9
 20217                           status	equ	0xFD8
 20218                           
 20219 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 20220 ;; Defined at:
 20221 ;;		line 34 in file "external_flash.c"
 20222 ;; Parameters:    Size  Location     Type
 20223 ;;  config          2    0[COMRAM] PTR void 
 20224 ;;		 -> NULL(0), 
 20225 ;; Auto vars:     Size  Location     Type
 20226 ;;		None
 20227 ;; Return value:  Size  Location     Type
 20228 ;;                  1    wreg      unsigned char 
 20229 ;; Registers used:
 20230 ;;		wreg
 20231 ;; Tracked objects:
 20232 ;;		On entry : 0/0
 20233 ;;		On exit  : 0/0
 20234 ;;		Unchanged: 0/0
 20235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20240 ;;Total ram usage:        2 bytes
 20241 ;; Hardware stack levels used:    1
 20242 ;; This function calls:
 20243 ;;		Nothing
 20244 ;; This function is called by:
 20245 ;;		_MSDWriteHandler
 20246 ;;		_MSDProcessCommandMediaPresent
 20247 ;; This function uses a non-reentrant model
 20248 ;;
 20249                           
 20250                           	psect	text88
 20251  00A134                     __ptext88:
 20252                           	opt stack 0
 20253  00A134                     _ExternalFlash_WriteProtectStateGet:
 20254                           	opt stack 25
 20255                           
 20256                           ;external_flash.c: 37: return 0;
 20257                           
 20258                           ; BSR set to: 0
 20259                           ;incstack = 0
 20260  00A134  0E00               	movlw	0
 20261  00A136  0012               	return	
 20262  00A138                     __end_of_ExternalFlash_WriteProtectStateGet:
 20263                           	opt stack 0
 20264                           tosu	equ	0xFFF
 20265                           tosh	equ	0xFFE
 20266                           tosl	equ	0xFFD
 20267                           pclath	equ	0xFFA
 20268                           tblptru	equ	0xFF8
 20269                           tblptrh	equ	0xFF7
 20270                           tblptrl	equ	0xFF6
 20271                           tablat	equ	0xFF5
 20272                           prodh	equ	0xFF4
 20273                           prodl	equ	0xFF3
 20274                           intcon	equ	0xFF2
 20275                           intcon2	equ	0xFF1
 20276                           intcon3	equ	0xFF0
 20277                           indf0	equ	0xFEF
 20278                           postinc0	equ	0xFEE
 20279                           fsr0h	equ	0xFEA
 20280                           fsr0l	equ	0xFE9
 20281                           wreg	equ	0xFE8
 20282                           indf1	equ	0xFE7
 20283                           postdec1	equ	0xFE5
 20284                           plusw1	equ	0xFE3
 20285                           fsr1h	equ	0xFE2
 20286                           fsr1l	equ	0xFE1
 20287                           indf2	equ	0xFDF
 20288                           postinc2	equ	0xFDE
 20289                           postdec2	equ	0xFDD
 20290                           plusw2	equ	0xFDB
 20291                           fsr2h	equ	0xFDA
 20292                           fsr2l	equ	0xFD9
 20293                           status	equ	0xFD8
 20294                           
 20295 ;; *************** function _ExternalFlash_SectorWrite *****************
 20296 ;; Defined at:
 20297 ;;		line 56 in file "external_flash.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;  config          2   36[COMRAM] PTR void 
 20300 ;;		 -> NULL(0), 
 20301 ;;  sector_addr     4   38[COMRAM] unsigned long 
 20302 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 20303 ;;		 -> msd_buffer(512), 
 20304 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;  page            2   45[COMRAM] unsigned int 
 20307 ;; Return value:  Size  Location     Type
 20308 ;;                  1    wreg      unsigned char 
 20309 ;; Registers used:
 20310 ;;		wreg, status,2, status,0, cstack
 20311 ;; Tracked objects:
 20312 ;;		On entry : 0/0
 20313 ;;		On exit  : 0/0
 20314 ;;		Unchanged: 0/0
 20315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20316 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20319 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20320 ;;Total ram usage:       11 bytes
 20321 ;; Hardware stack levels used:    1
 20322 ;; Hardware stack levels required when called:    5
 20323 ;; This function calls:
 20324 ;;		_flash_sector_write
 20325 ;; This function is called by:
 20326 ;;		_MSDWriteHandler
 20327 ;; This function uses a non-reentrant model
 20328 ;;
 20329                           
 20330                           	psect	text89
 20331  00994E                     __ptext89:
 20332                           	opt stack 0
 20333  00994E                     _ExternalFlash_SectorWrite:
 20334                           	opt stack 20
 20335                           
 20336                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 20337                           
 20338                           ;incstack = 0
 20339  00994E  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 20340  009952  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 20341                           
 20342                           ;external_flash.c: 61: if(sector_addr >= 8192)
 20343  009956  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 20344  009958  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 20345  00995A  E104               	bnz	u8930
 20346  00995C  0E20               	movlw	32
 20347  00995E  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 20348  009960  A0D8               	btfss	status,0,c
 20349  009962  D002               	goto	l1930
 20350  009964                     u8930:
 20351                           
 20352                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 20353  009964  0E00               	movlw	0
 20354  009966  0012               	return	
 20355  009968                     l1930:
 20356                           
 20357                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 20358  009968  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 20359  00996C  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 20360  009970  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 20361  009974  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 20362  009978  ECBD  F048         	call	_flash_sector_write	;wreg free
 20363                           
 20364                           ;external_flash.c: 69: return 1;
 20365  00997C  0E01               	movlw	1
 20366  00997E  0012               	return	
 20367  009980                     __end_of_ExternalFlash_SectorWrite:
 20368                           	opt stack 0
 20369                           tosu	equ	0xFFF
 20370                           tosh	equ	0xFFE
 20371                           tosl	equ	0xFFD
 20372                           pclath	equ	0xFFA
 20373                           tblptru	equ	0xFF8
 20374                           tblptrh	equ	0xFF7
 20375                           tblptrl	equ	0xFF6
 20376                           tablat	equ	0xFF5
 20377                           prodh	equ	0xFF4
 20378                           prodl	equ	0xFF3
 20379                           intcon	equ	0xFF2
 20380                           intcon2	equ	0xFF1
 20381                           intcon3	equ	0xFF0
 20382                           indf0	equ	0xFEF
 20383                           postinc0	equ	0xFEE
 20384                           fsr0h	equ	0xFEA
 20385                           fsr0l	equ	0xFE9
 20386                           wreg	equ	0xFE8
 20387                           indf1	equ	0xFE7
 20388                           postdec1	equ	0xFE5
 20389                           plusw1	equ	0xFE3
 20390                           fsr1h	equ	0xFE2
 20391                           fsr1l	equ	0xFE1
 20392                           indf2	equ	0xFDF
 20393                           postinc2	equ	0xFDE
 20394                           postdec2	equ	0xFDD
 20395                           plusw2	equ	0xFDB
 20396                           fsr2h	equ	0xFDA
 20397                           fsr2l	equ	0xFD9
 20398                           status	equ	0xFD8
 20399                           
 20400 ;; *************** function _MSDReadHandler *****************
 20401 ;; Defined at:
 20402 ;;		line 1038 in file "usb_device_msd.c"
 20403 ;; Parameters:    Size  Location     Type
 20404 ;;		None
 20405 ;; Auto vars:     Size  Location     Type
 20406 ;;		None
 20407 ;; Return value:  Size  Location     Type
 20408 ;;                  1    wreg      unsigned char 
 20409 ;; Registers used:
 20410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20411 ;; Tracked objects:
 20412 ;;		On entry : 0/0
 20413 ;;		On exit  : 0/0
 20414 ;;		Unchanged: 0/0
 20415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20420 ;;Total ram usage:        4 bytes
 20421 ;; Hardware stack levels used:    1
 20422 ;; Hardware stack levels required when called:    6
 20423 ;; This function calls:
 20424 ;;		_ExternalFlash_SectorRead
 20425 ;;		_MSDCheckForErrorCases
 20426 ;;		_USBStallEndpoint
 20427 ;;		_USBTransferOnePacket
 20428 ;; This function is called by:
 20429 ;;		_MSDProcessCommandMediaPresent
 20430 ;; This function uses a non-reentrant model
 20431 ;;
 20432                           
 20433                           	psect	text90
 20434  00327E                     __ptext90:
 20435                           	opt stack 0
 20436  00327E                     _MSDReadHandler:
 20437                           	opt stack 20
 20438                           
 20439                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20440                           
 20441                           ;incstack = 0
 20442  00327E  D0D7               	goto	l665
 20443  003280                     l666:
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20447  003280  C111  F15A         	movff	_gblCBW+17,_LBA+3
 20448                           
 20449                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20450  003284  C112  F159         	movff	_gblCBW+18,_LBA+2
 20451                           
 20452                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20453  003288  C113  F158         	movff	_gblCBW+19,_LBA+1
 20454                           
 20455                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20456  00328C  C114  F157         	movff	_gblCBW+20,_LBA
 20457                           
 20458                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20459  003290  C116  F0DF         	movff	_gblCBW+22,_TransferLength+1
 20460                           
 20461                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20462  003294  C117  F0DE         	movff	_gblCBW+23,_TransferLength
 20463                           
 20464                           ; BSR set to: 0
 20465                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20466  003298  51DE               	movf	_TransferLength& (0+255),w,b
 20467  00329A  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20468  00329C  51DF               	movf	(_TransferLength+1)& (0+255),w,b
 20469  00329E  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20470  0032A0  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20471  0032A2  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20472  0032A4  0E09               	movlw	9
 20473  0032A6                     u9385:
 20474  0032A6  90D8               	bcf	status,0,c
 20475  0032A8  3636               	rlcf	??_MSDReadHandler,f,c
 20476  0032AA  3637               	rlcf	??_MSDReadHandler+1,f,c
 20477  0032AC  3638               	rlcf	??_MSDReadHandler+2,f,c
 20478  0032AE  3639               	rlcf	??_MSDReadHandler+3,f,c
 20479  0032B0  2EE8               	decfsz	wreg,f,c
 20480  0032B2  D7F9               	goto	u9385
 20481  0032B4  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 20482  0032B8  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20483  0032BC  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20484  0032C0  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20485  0032C4  EC52  F032         	call	_MSDCheckForErrorCases	;wreg free
 20486  0032C8  0900               	iorlw	0
 20487  0032CA  A4D8               	btfss	status,2,c
 20488  0032CC  D0C2               	goto	l668
 20489                           
 20490                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 20491                           
 20492                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 20493  0032CE  0E01               	movlw	1
 20494  0032D0  0100               	movlb	0	; () banked
 20495  0032D2  6FEE               	movwf	_MSDReadState& (0+255),b
 20496  0032D4                     
 20497                           ; BSR set to: 0
 20498                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20499                           
 20500                           ; BSR set to: 0
 20501  0032D4  51DE               	movf	_TransferLength& (0+255),w,b
 20502  0032D6  11DF               	iorwf	(_TransferLength+1)& (0+255),w,b
 20503  0032D8  A4D8               	btfss	status,2,c
 20504  0032DA  D002               	goto	l670
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20508  0032DC  0E00               	movlw	0
 20509  0032DE  D046               	goto	L23
 20510  0032E0                     l670:
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20514                           
 20515                           ; BSR set to: 0
 20516  0032E0  07DE               	decf	_TransferLength& (0+255),f,b
 20517  0032E2  A0D8               	btfss	status,0,c
 20518  0032E4  07DF               	decf	(_TransferLength+1)& (0+255),f,b
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20522  0032E6  0E02               	movlw	2
 20523  0032E8  6FEE               	movwf	_MSDReadState& (0+255),b
 20524  0032EA                     
 20525                           ; BSR set to: 0
 20526                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20527                           
 20528                           ; BSR set to: 0
 20529  0032EA  51E0               	movf	_USBMSDInHandle& (0+255),w,b
 20530  0032EC  11E1               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20531  0032EE  B4D8               	btfsc	status,2,c
 20532  0032F0  D006               	goto	l672
 20533                           
 20534                           ; BSR set to: 0
 20535  0032F2  C0E0  FFD9         	movff	_USBMSDInHandle,fsr2l
 20536  0032F6  C0E1  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20537  0032FA  BEDF               	btfsc	indf2,7,c
 20538  0032FC  D0AA               	goto	l668
 20539  0032FE                     l672:
 20540                           
 20541                           ; BSR set to: 0
 20542                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20543                           
 20544                           ; BSR set to: 0
 20545  0032FE  C1BD  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20546  003302  C1BE  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20547  003306  C157  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20548  00330A  C158  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20549  00330E  C159  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20550  003312  C15A  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20551  003316  0E00               	movlw	0
 20552  003318  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20553  00331A  0E06               	movlw	6
 20554  00331C  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20555  00331E  D801               	call	u9438
 20556  003320  D00A               	goto	u9439
 20557  003322                     u9438:
 20558  003322  0005               	push	
 20559  003324  6EFA               	movwf	pclath,c
 20560  003326  0101               	movlb	1	; () banked
 20561  003328  51B7               	movf	(_LUN+8)& (0+255),w,b
 20562  00332A  6EFD               	movwf	tosl,c
 20563  00332C  51B8               	movf	(_LUN+9)& (0+255),w,b
 20564  00332E  6EFE               	movwf	tosh,c
 20565  003330  6AFF               	clrf	tosu,c
 20566  003332  50FA               	movf	pclath,w,c
 20567  003334  0012               	return		;indir
 20568  003336                     u9439:
 20569  003336  06E8               	decf	wreg,f,c
 20570  003338  B4D8               	btfsc	status,2,c
 20571  00333A  D01A               	goto	l675
 20572                           
 20573                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20574  00333C  0E64               	movlw	100
 20575  00333E  0100               	movlb	0	; () banked
 20576  003340  61EC               	cpfslt	_MSDRetryAttempt& (0+255),b
 20577  003342  D002               	goto	l674
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20581  003344  2BEC               	incf	_MSDRetryAttempt& (0+255),f,b
 20582                           
 20583                           ;usb_device_msd.c: 1088: break;
 20584  003346  D085               	goto	l668
 20585  003348                     l674:
 20586                           
 20587                           ; BSR set to: 0
 20588                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20589                           
 20590                           ; BSR set to: 0
 20591  003348  0E02               	movlw	2
 20592  00334A  010D               	movlb	13	; () banked
 20593  00334C  6F8C               	movwf	140,b	;volatile
 20594                           
 20595                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20596  00334E  0101               	movlb	1	; () banked
 20597  003350  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20598  003352  0BF0               	andlw	-16
 20599  003354  0903               	iorlw	3
 20600  003356  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20601                           
 20602                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20603  003358  0E00               	movlw	0
 20604  00335A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20605                           
 20606                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20607  00335C  0E00               	movlw	0
 20608  00335E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20609                           
 20610                           ; BSR set to: 1
 20611                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20612  003360  0E01               	movlw	1
 20613  003362  6E01               	movwf	USBStallEndpoint@dir,c
 20614  003364  0E02               	movlw	2
 20615  003366  EC8B  F02A         	call	_USBStallEndpoint
 20616  00336A  D05E               	goto	l12275
 20617  00336C                     L23:
 20618  00336C  6FEE               	movwf	_MSDReadState& (0+255),b
 20619                           
 20620                           ;usb_device_msd.c: 1109: break;
 20621  00336E  D071               	goto	l668
 20622  003370                     l675:
 20623                           
 20624                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20625                           
 20626                           ; BSR set to: 0
 20627                           
 20628                           ; BSR set to: 0
 20629  003370  0E01               	movlw	1
 20630  003372  0101               	movlb	1	; () banked
 20631  003374  2757               	addwf	_LBA& (0+255),f,b
 20632  003376  0E00               	movlw	0
 20633  003378  2358               	addwfc	(_LBA+1)& (0+255),f,b
 20634  00337A  2359               	addwfc	(_LBA+2)& (0+255),f,b
 20635  00337C  235A               	addwfc	(_LBA+3)& (0+255),f,b
 20636                           
 20637                           ; BSR set to: 1
 20638                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20639  00337E  0E00               	movlw	0
 20640  003380  010D               	movlb	13	; () banked
 20641  003382  6F88               	movwf	136,b	;volatile
 20642  003384  0E02               	movlw	2
 20643  003386  6F89               	movwf	137,b	;volatile
 20644  003388  0E00               	movlw	0
 20645  00338A  6F8A               	movwf	138,b	;volatile
 20646  00338C  0E00               	movlw	0
 20647  00338E  6F8B               	movwf	139,b	;volatile
 20648                           
 20649                           ; BSR set to: 13
 20650                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20651  003390  0E00               	movlw	0
 20652  003392  0101               	movlb	1	; () banked
 20653  003394  6F7F               	movwf	_ptrNextData& (0+255),b
 20654  003396  0E06               	movlw	6
 20655  003398  6F80               	movwf	(_ptrNextData+1)& (0+255),b
 20656                           
 20657                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20658  00339A  0E03               	movlw	3
 20659  00339C  0100               	movlb	0	; () banked
 20660  00339E  6FEE               	movwf	_MSDReadState& (0+255),b
 20661  0033A0                     
 20662                           ; BSR set to: 0
 20663                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20664                           
 20665                           ; BSR set to: 0
 20666  0033A0  010D               	movlb	13	; () banked
 20667  0033A2  5188               	movf	136,w,b	;volatile
 20668  0033A4  1189               	iorwf	137,w,b	;volatile
 20669  0033A6  118A               	iorwf	138,w,b	;volatile
 20670  0033A8  118B               	iorwf	139,w,b	;volatile
 20671  0033AA  A4D8               	btfss	status,2,c
 20672  0033AC  D002               	goto	l677
 20673                           
 20674                           ; BSR set to: 13
 20675                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20676  0033AE  0E01               	movlw	1
 20677  0033B0  D03C               	goto	L25
 20678  0033B2                     l677:
 20679                           
 20680                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20681                           
 20682                           ; BSR set to: 0
 20683  0033B2  0E04               	movlw	4
 20684  0033B4  0100               	movlb	0	; () banked
 20685  0033B6  6FEE               	movwf	_MSDReadState& (0+255),b
 20686  0033B8                     
 20687                           ; BSR set to: 0
 20688                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20689                           
 20690                           ; BSR set to: 0
 20691  0033B8  51E0               	movf	_USBMSDInHandle& (0+255),w,b
 20692  0033BA  11E1               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20693  0033BC  B4D8               	btfsc	status,2,c
 20694  0033BE  D006               	goto	l679
 20695                           
 20696                           ; BSR set to: 0
 20697  0033C0  C0E0  FFD9         	movff	_USBMSDInHandle,fsr2l
 20698  0033C4  C0E1  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20699  0033C8  BEDF               	btfsc	indf2,7,c
 20700  0033CA  D043               	goto	l668
 20701  0033CC                     l679:
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20705                           
 20706                           ; BSR set to: 0
 20707  0033CC  0E01               	movlw	1
 20708  0033CE  6E01               	movwf	USBTransferOnePacket@dir,c
 20709  0033D0  C17F  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20710  0033D4  C180  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20711  0033D8  0E40               	movlw	64
 20712  0033DA  6E04               	movwf	USBTransferOnePacket@len,c
 20713  0033DC  0E02               	movlw	2
 20714  0033DE  EC96  F02C         	call	_USBTransferOnePacket
 20715  0033E2  C001  F0E0         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20716  0033E6  C002  F0E1         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20717                           
 20718                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20719  0033EA  0E03               	movlw	3
 20720  0033EC  0100               	movlb	0	; () banked
 20721  0033EE  6FEE               	movwf	_MSDReadState& (0+255),b
 20722                           
 20723                           ; BSR set to: 0
 20724                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20725  0033F0  0E40               	movlw	64
 20726  0033F2  0101               	movlb	1	; () banked
 20727  0033F4  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20728  0033F6  0E00               	movlw	0
 20729  0033F8  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20730  0033FA  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20731  0033FC  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20735  0033FE  0E40               	movlw	64
 20736  003400  010D               	movlb	13	; () banked
 20737  003402  5F88               	subwf	136,f,b	;volatile
 20738  003404  0E00               	movlw	0
 20739  003406  5B89               	subwfb	137,f,b	;volatile
 20740  003408  5B8A               	subwfb	138,f,b	;volatile
 20741  00340A  5B8B               	subwfb	139,f,b	;volatile
 20742                           
 20743                           ; BSR set to: 13
 20744                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20745  00340C  0E40               	movlw	64
 20746  00340E  0101               	movlb	1	; () banked
 20747  003410  277F               	addwf	_ptrNextData& (0+255),f,b
 20748  003412  0E00               	movlw	0
 20749  003414  2380               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20750                           
 20751                           ;usb_device_msd.c: 1149: break;
 20752  003416  D01D               	goto	l668
 20753  003418                     
 20754                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20755                           
 20756                           ; BSR set to: 1
 20757  003418  0E02               	movlw	2
 20758  00341A  010D               	movlb	13	; () banked
 20759  00341C  6F8C               	movwf	140,b	;volatile
 20760                           
 20761                           ; BSR set to: 13
 20762                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20763  00341E  0E01               	movlw	1
 20764  003420  6E01               	movwf	USBStallEndpoint@dir,c
 20765  003422  0E02               	movlw	2
 20766  003424  EC8B  F02A         	call	_USBStallEndpoint
 20767  003428                     l12275:
 20768                           
 20769                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20770  003428  0E00               	movlw	0
 20771  00342A                     L25:
 20772  00342A  0100               	movlb	0	; () banked
 20773  00342C  D79F               	goto	L23
 20774  00342E                     l665:
 20775                           
 20776                           ; BSR set to: 0
 20777  00342E  0100               	movlb	0	; () banked
 20778  003430  51EE               	movf	_MSDReadState& (0+255),w,b
 20779                           
 20780                           ; Switch size 1, requested type "space"
 20781                           ; Number of cases is 5, Range of values is 0 to 4
 20782                           ; switch strategies available:
 20783                           ; Name         Instructions Cycles
 20784                           ; simple_byte           16     9 (average)
 20785                           ;	Chosen strategy is simple_byte
 20786  003432  0A00               	xorlw	0	; case 0
 20787  003434  B4D8               	btfsc	status,2,c
 20788  003436  D724               	goto	l666
 20789  003438  0A01               	xorlw	1	; case 1
 20790  00343A  B4D8               	btfsc	status,2,c
 20791  00343C  D74B               	goto	l669
 20792  00343E  0A03               	xorlw	3	; case 2
 20793  003440  B4D8               	btfsc	status,2,c
 20794  003442  D753               	goto	l671
 20795  003444  0A01               	xorlw	1	; case 3
 20796  003446  B4D8               	btfsc	status,2,c
 20797  003448  D7AB               	goto	l676
 20798  00344A  0A07               	xorlw	7	; case 4
 20799  00344C  B4D8               	btfsc	status,2,c
 20800  00344E  D7B4               	goto	l678
 20801  003450  D7E3               	goto	l680
 20802  003452                     l668:
 20803                           
 20804                           ;usb_device_msd.c: 1161: return MSDReadState;
 20805                           
 20806                           ; BSR set to: 0
 20807  003452  0100               	movlb	0	; () banked
 20808  003454  51EE               	movf	_MSDReadState& (0+255),w,b
 20809  003456  0012               	return	
 20810  003458                     __end_of_MSDReadHandler:
 20811                           	opt stack 0
 20812                           tosu	equ	0xFFF
 20813                           tosh	equ	0xFFE
 20814                           tosl	equ	0xFFD
 20815                           pclath	equ	0xFFA
 20816                           tblptru	equ	0xFF8
 20817                           tblptrh	equ	0xFF7
 20818                           tblptrl	equ	0xFF6
 20819                           tablat	equ	0xFF5
 20820                           prodh	equ	0xFF4
 20821                           prodl	equ	0xFF3
 20822                           intcon	equ	0xFF2
 20823                           intcon2	equ	0xFF1
 20824                           intcon3	equ	0xFF0
 20825                           indf0	equ	0xFEF
 20826                           postinc0	equ	0xFEE
 20827                           fsr0h	equ	0xFEA
 20828                           fsr0l	equ	0xFE9
 20829                           wreg	equ	0xFE8
 20830                           indf1	equ	0xFE7
 20831                           postdec1	equ	0xFE5
 20832                           plusw1	equ	0xFE3
 20833                           fsr1h	equ	0xFE2
 20834                           fsr1l	equ	0xFE1
 20835                           indf2	equ	0xFDF
 20836                           postinc2	equ	0xFDE
 20837                           postdec2	equ	0xFDD
 20838                           plusw2	equ	0xFDB
 20839                           fsr2h	equ	0xFDA
 20840                           fsr2l	equ	0xFD9
 20841                           status	equ	0xFD8
 20842                           
 20843 ;; *************** function _MSDCheckForErrorCases *****************
 20844 ;; Defined at:
 20845 ;;		line 1434 in file "usb_device_msd.c"
 20846 ;; Parameters:    Size  Location     Type
 20847 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20848 ;; Auto vars:     Size  Location     Type
 20849 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20850 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20851 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20852 ;; Return value:  Size  Location     Type
 20853 ;;                  1    wreg      unsigned char 
 20854 ;; Registers used:
 20855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20856 ;; Tracked objects:
 20857 ;;		On entry : 0/0
 20858 ;;		On exit  : 0/0
 20859 ;;		Unchanged: 0/0
 20860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20862 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20864 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20865 ;;Total ram usage:        7 bytes
 20866 ;; Hardware stack levels used:    1
 20867 ;; Hardware stack levels required when called:    2
 20868 ;; This function calls:
 20869 ;;		_MSDErrorHandler
 20870 ;; This function is called by:
 20871 ;;		_MSDProcessCommandMediaPresent
 20872 ;;		_MSDReadHandler
 20873 ;;		_MSDWriteHandler
 20874 ;; This function uses a non-reentrant model
 20875 ;;
 20876                           
 20877                           	psect	text91
 20878  0064A4                     __ptext91:
 20879                           	opt stack 0
 20880  0064A4                     _MSDCheckForErrorCases:
 20881                           	opt stack 23
 20882                           
 20883                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;incstack = 0
 20887  0064A4  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20888  0064A6  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20889  0064A8  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20890  0064AA  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20891  0064AC  A4D8               	btfss	status,2,c
 20892  0064AE  D002               	goto	l710
 20893                           
 20894                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20895  0064B0  0E01               	movlw	1
 20896  0064B2  D001               	goto	L26
 20897  0064B4                     l710:
 20898                           
 20899                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20900  0064B4  0E00               	movlw	0
 20901  0064B6                     L26:
 20902  0064B6  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20903                           
 20904                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20905  0064B8  0100               	movlb	0	; () banked
 20906  0064BA  05EA               	decf	_MSDHostNoData& (0+255),w,b
 20907  0064BC  A4D8               	btfss	status,2,c
 20908  0064BE  D005               	goto	l712
 20909                           
 20910                           ; BSR set to: 0
 20911  0064C0  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20912  0064C2  A4D8               	btfss	status,2,c
 20913  0064C4  D002               	goto	l712
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20917  0064C6  0E00               	movlw	0
 20918                           
 20919                           ; BSR set to: 0
 20920  0064C8  0012               	return	
 20921  0064CA                     l712:
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20925                           
 20926                           ; BSR set to: 0
 20927  0064CA  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20928  0064CC  0101               	movlb	1	; () banked
 20929  0064CE  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20930  0064D0  E11A               	bnz	l11639
 20931  0064D2  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20932  0064D4  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20933  0064D6  E117               	bnz	l11639
 20934  0064D8  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20935  0064DA  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20936  0064DC  E114               	bnz	l11639
 20937  0064DE  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20938  0064E0  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20939  0064E2  A4D8               	btfss	status,2,c
 20940  0064E4  D010               	goto	l718
 20941                           
 20942                           ; BSR set to: 1
 20943                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20944  0064E6  0100               	movlb	0	; () banked
 20945  0064E8  05F0               	decf	_MSD_State& (0+255),w,b
 20946  0064EA  A4D8               	btfss	status,2,c
 20947  0064EC  D006               	goto	l715
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20951  0064EE  0E2A               	movlw	42
 20952  0064F0  19EF               	xorwf	_MSDCommandState& (0+255),w,b
 20953  0064F2  B4D8               	btfsc	status,2,c
 20954  0064F4  D008               	goto	l718
 20955                           
 20956                           ; BSR set to: 0
 20957                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20958  0064F6  0E00               	movlw	0
 20959                           
 20960                           ; BSR set to: 0
 20961  0064F8  0012               	return	
 20962  0064FA                     l715:
 20963                           
 20964                           ; BSR set to: 0
 20965                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20966                           
 20967                           ; BSR set to: 0
 20968  0064FA  0E2A               	movlw	42
 20969  0064FC  19EF               	xorwf	_MSDCommandState& (0+255),w,b
 20970  0064FE  A4D8               	btfss	status,2,c
 20971  006500  D002               	goto	l718
 20972                           
 20973                           ; BSR set to: 0
 20974                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20975  006502  0E00               	movlw	0
 20976                           
 20977                           ; BSR set to: 0
 20978  006504  0012               	return	
 20979  006506                     l718:
 20980  006506                     l11639:
 20981                           
 20982                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20983  006506  0101               	movlb	1	; () banked
 20984  006508  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20985  00650A  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20986  00650C  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20987  00650E  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20988  006510  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20989  006512  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20990  006514  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20991  006516  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20992  006518  B0D8               	btfsc	status,0,c
 20993  00651A  D002               	goto	l719
 20994                           
 20995                           ; BSR set to: 1
 20996                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20997  00651C  0E01               	movlw	1
 20998  00651E  D001               	goto	L27
 20999  006520                     l719:
 21000                           
 21001                           ; BSR set to: 1
 21002                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 21003                           
 21004                           ; BSR set to: 1
 21005  006520  0E00               	movlw	0
 21006  006522                     L27:
 21007  006522  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 21008                           
 21009                           ; BSR set to: 1
 21010                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 21011                           
 21012                           ; BSR set to: 1
 21013  006524  0E02               	movlw	2
 21014  006526  0100               	movlb	0	; () banked
 21015  006528  19F0               	xorwf	_MSD_State& (0+255),w,b
 21016  00652A  A4D8               	btfss	status,2,c
 21017  00652C  D014               	goto	l721
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 21021  00652E  0E2A               	movlw	42
 21022  006530  19EF               	xorwf	_MSDCommandState& (0+255),w,b
 21023  006532  B4D8               	btfsc	status,2,c
 21024  006534  D005               	goto	l722
 21025                           
 21026                           ; BSR set to: 0
 21027  006536  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 21028  006538  A4D8               	btfss	status,2,c
 21029  00653A  D002               	goto	l722
 21030  00653C                     u8650:
 21031                           
 21032                           ; BSR set to: 0
 21033                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 21034  00653C  0E05               	movlw	5
 21035  00653E  D01D               	goto	L30
 21036  006540                     l722:
 21037                           
 21038                           ; BSR set to: 0
 21039                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 21040                           
 21041                           ; BSR set to: 0
 21042  006540  05EA               	decf	_MSDHostNoData& (0+255),w,b
 21043  006542  B4D8               	btfsc	status,2,c
 21044  006544  D00F               	goto	u8700
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 21048                           
 21049                           ; BSR set to: 0
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 21053  006546  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21054  006548  B4D8               	btfsc	status,2,c
 21055  00654A  D003               	goto	u8680
 21056                           
 21057                           ; BSR set to: 0
 21058                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 21059                           
 21060                           ; BSR set to: 0
 21061                           
 21062                           ; BSR set to: 0
 21063                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 21064  00654C  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21065  00654E  A4D8               	btfss	status,2,c
 21066  006550  D7F5               	goto	u8650
 21067  006552                     u8680:
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 21071  006552  0E04               	movlw	4
 21072  006554  D012               	goto	L30
 21073  006556                     l721:
 21074                           
 21075                           ; BSR set to: 0
 21076                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 21077                           
 21078                           ; BSR set to: 0
 21079  006556  0E2A               	movlw	42
 21080  006558  19EF               	xorwf	_MSDCommandState& (0+255),w,b
 21081  00655A  B4D8               	btfsc	status,2,c
 21082  00655C  D00D               	goto	l737
 21083                           
 21084                           ; BSR set to: 0
 21085                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 21086                           
 21087                           ; BSR set to: 0
 21088                           
 21089                           ; BSR set to: 0
 21090                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 21091  00655E  05EA               	decf	_MSDHostNoData& (0+255),w,b
 21092  006560  A4D8               	btfss	status,2,c
 21093  006562  D002               	goto	l733
 21094  006564                     u8700:
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 21098  006564  0E01               	movlw	1
 21099  006566  D009               	goto	L30
 21100  006568                     l733:
 21101                           
 21102                           ; BSR set to: 0
 21103                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 21104                           
 21105                           ; BSR set to: 0
 21106  006568  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21107  00656A  B4D8               	btfsc	status,2,c
 21108  00656C  D003               	goto	u8720
 21109                           
 21110                           ; BSR set to: 0
 21111                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 21112                           
 21113                           ; BSR set to: 0
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 21117  00656E  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21118  006570  A4D8               	btfss	status,2,c
 21119  006572  D002               	goto	l737
 21120  006574                     u8720:
 21121                           
 21122                           ; BSR set to: 0
 21123                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 21124  006574  0E02               	movlw	2
 21125  006576  D001               	goto	L30
 21126  006578                     l737:
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 21130                           
 21131                           ; BSR set to: 0
 21132  006578  0E03               	movlw	3
 21133  00657A                     L30:
 21134  00657A  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 21135                           
 21136                           ; BSR set to: 0
 21137                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 21138                           
 21139                           ; BSR set to: 0
 21140                           
 21141                           ; BSR set to: 0
 21142                           
 21143                           ; BSR set to: 0
 21144                           
 21145                           ; BSR set to: 0
 21146                           
 21147                           ; BSR set to: 0
 21148  00657C  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21149  00657E  EC92  F02B         	call	_MSDErrorHandler
 21150                           
 21151                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 21152  006582  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21153  006584  0012               	return	
 21154  006586                     __end_of_MSDCheckForErrorCases:
 21155                           	opt stack 0
 21156                           tosu	equ	0xFFF
 21157                           tosh	equ	0xFFE
 21158                           tosl	equ	0xFFD
 21159                           pclath	equ	0xFFA
 21160                           tblptru	equ	0xFF8
 21161                           tblptrh	equ	0xFF7
 21162                           tblptrl	equ	0xFF6
 21163                           tablat	equ	0xFF5
 21164                           prodh	equ	0xFF4
 21165                           prodl	equ	0xFF3
 21166                           intcon	equ	0xFF2
 21167                           intcon2	equ	0xFF1
 21168                           intcon3	equ	0xFF0
 21169                           indf0	equ	0xFEF
 21170                           postinc0	equ	0xFEE
 21171                           fsr0h	equ	0xFEA
 21172                           fsr0l	equ	0xFE9
 21173                           wreg	equ	0xFE8
 21174                           indf1	equ	0xFE7
 21175                           postdec1	equ	0xFE5
 21176                           plusw1	equ	0xFE3
 21177                           fsr1h	equ	0xFE2
 21178                           fsr1l	equ	0xFE1
 21179                           indf2	equ	0xFDF
 21180                           postinc2	equ	0xFDE
 21181                           postdec2	equ	0xFDD
 21182                           plusw2	equ	0xFDB
 21183                           fsr2h	equ	0xFDA
 21184                           fsr2l	equ	0xFD9
 21185                           status	equ	0xFD8
 21186                           
 21187 ;; *************** function _MSDErrorHandler *****************
 21188 ;; Defined at:
 21189 ;;		line 1577 in file "usb_device_msd.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;  ErrorCase       1    wreg     unsigned char 
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 21194 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 21195 ;; Return value:  Size  Location     Type
 21196 ;;                  1    wreg      void 
 21197 ;; Registers used:
 21198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21199 ;; Tracked objects:
 21200 ;;		On entry : 0/0
 21201 ;;		On exit  : 0/0
 21202 ;;		Unchanged: 0/0
 21203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21208 ;;Total ram usage:        2 bytes
 21209 ;; Hardware stack levels used:    1
 21210 ;; Hardware stack levels required when called:    1
 21211 ;; This function calls:
 21212 ;;		_ResetSenseData
 21213 ;;		_USBStallEndpoint
 21214 ;; This function is called by:
 21215 ;;		_MSDProcessCommandMediaAbsent
 21216 ;;		_MSDProcessCommandMediaPresent
 21217 ;;		_MSDCheckForErrorCases
 21218 ;; This function uses a non-reentrant model
 21219 ;;
 21220                           
 21221                           	psect	text92
 21222  005724                     __ptext92:
 21223                           	opt stack 0
 21224  005724                     _MSDErrorHandler:
 21225                           	opt stack 23
 21226                           
 21227                           ;incstack = 0
 21228                           ;MSDErrorHandler@ErrorCase stored from wreg
 21229  005724  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 21230                           
 21231                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 21232  005726  0100               	movlb	0	; () banked
 21233  005728  51E0               	movf	_USBMSDInHandle& (0+255),w,b
 21234  00572A  11E1               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21235  00572C  B4D8               	btfsc	status,2,c
 21236  00572E  D006               	goto	u8100
 21237                           
 21238                           ; BSR set to: 0
 21239  005730  C0E0  FFD9         	movff	_USBMSDInHandle,fsr2l
 21240  005734  C0E1  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21241  005738  BEDF               	btfsc	indf2,7,c
 21242  00573A  0012               	return	
 21243  00573C                     u8100:
 21244                           
 21245                           ; BSR set to: 0
 21246                           
 21247                           ; BSR set to: 0
 21248  00573C  51E2               	movf	_USBMSDOutHandle& (0+255),w,b
 21249  00573E  11E3               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21250  005740  B4D8               	btfsc	status,2,c
 21251  005742  D006               	goto	l741
 21252                           
 21253                           ; BSR set to: 0
 21254  005744  C0E2  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21255  005748  C0E3  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21256  00574C  BEDF               	btfsc	indf2,7,c
 21257  00574E  0012               	return	
 21258  005750                     l741:
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 21262  005750  C0F0  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 21263                           
 21264                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 21265  005754  69EF               	setf	_MSDCommandState& (0+255),b
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 21269  005756  0E00               	movlw	0
 21270  005758  6FEE               	movwf	_MSDReadState& (0+255),b
 21271                           
 21272                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 21273  00575A  0E00               	movlw	0
 21274  00575C  6FED               	movwf	_MSDWriteState& (0+255),b
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 21278  00575E  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 21279  005762  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 21280  005766  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 21281  00576A  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 21282                           
 21283                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 21284  00576E  0E01               	movlw	1
 21285  005770  010D               	movlb	13	; () banked
 21286  005772  6F8C               	movwf	140,b	;volatile
 21287                           
 21288                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 21289  005774  0E03               	movlw	3
 21290  005776  0100               	movlb	0	; () banked
 21291  005778  6FF0               	movwf	_MSD_State& (0+255),b
 21292                           
 21293                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 21294  00577A  D043               	goto	l747
 21295  00577C                     
 21296                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 21297                           
 21298                           ; BSR set to: 0
 21299  00577C  0E02               	movlw	2
 21300  00577E  010D               	movlb	13	; () banked
 21301  005780  6F8C               	movwf	140,b	;volatile
 21302                           
 21303                           ;usb_device_msd.c: 1607: break;
 21304  005782  0012               	return	
 21305  005784                     
 21306                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 21307                           
 21308                           ; BSR set to: 13
 21309  005784  0E01               	movlw	1
 21310  005786  6E01               	movwf	USBStallEndpoint@dir,c
 21311  005788  0E02               	movlw	2
 21312  00578A  EC8B  F02A         	call	_USBStallEndpoint
 21313                           
 21314                           ;usb_device_msd.c: 1611: break;
 21315  00578E  0012               	return	
 21316  005790                     
 21317                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 21318  005790  0E02               	movlw	2
 21319  005792  010D               	movlb	13	; () banked
 21320  005794  6F8C               	movwf	140,b	;volatile
 21321                           
 21322                           ; BSR set to: 13
 21323                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 21324  005796  0E01               	movlw	1
 21325  005798  6E01               	movwf	USBStallEndpoint@dir,c
 21326  00579A  0E02               	movlw	2
 21327  00579C  EC8B  F02A         	call	_USBStallEndpoint
 21328                           
 21329                           ;usb_device_msd.c: 1616: break;
 21330  0057A0  0012               	return	
 21331  0057A2                     
 21332                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 21333  0057A2  0E00               	movlw	0
 21334  0057A4  6E01               	movwf	USBStallEndpoint@dir,c
 21335  0057A6  0E02               	movlw	2
 21336  0057A8  EC8B  F02A         	call	_USBStallEndpoint
 21337                           
 21338                           ;usb_device_msd.c: 1620: break;
 21339  0057AC  0012               	return	
 21340  0057AE                     
 21341                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 21342  0057AE  0E02               	movlw	2
 21343  0057B0  010D               	movlb	13	; () banked
 21344  0057B2  6F8C               	movwf	140,b	;volatile
 21345                           
 21346                           ; BSR set to: 13
 21347                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 21348  0057B4  0E00               	movlw	0
 21349  0057B6  6E01               	movwf	USBStallEndpoint@dir,c
 21350  0057B8  0E02               	movlw	2
 21351  0057BA  EC8B  F02A         	call	_USBStallEndpoint
 21352                           
 21353                           ;usb_device_msd.c: 1625: break;
 21354  0057BE  0012               	return	
 21355  0057C0                     
 21356                           ;usb_device_msd.c: 1628: ResetSenseData();
 21357  0057C0  EC45  F046         	call	_ResetSenseData	;wreg free
 21358                           
 21359                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 21360  0057C4  0101               	movlb	1	; () banked
 21361  0057C6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21362  0057C8  0BF0               	andlw	-16
 21363  0057CA  0905               	iorlw	5
 21364  0057CC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 21368  0057CE  0E20               	movlw	32
 21369  0057D0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21370                           
 21371                           ; BSR set to: 1
 21372                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 21373  0057D2  0E00               	movlw	0
 21374  0057D4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21375                           
 21376                           ; BSR set to: 1
 21377                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 21378  0057D6  0E02               	movlw	2
 21379  0057D8  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 21380  0057DA  A4D8               	btfss	status,2,c
 21381  0057DC  D00C               	goto	l755
 21382                           
 21383                           ; BSR set to: 1
 21384  0057DE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21385  0057E0  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21386  0057E2  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 21387  0057E4  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 21388  0057E6  B4D8               	btfsc	status,2,c
 21389  0057E8  D006               	goto	l755
 21390                           
 21391                           ; BSR set to: 1
 21392                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 21393  0057EA  0E00               	movlw	0
 21394  0057EC  6E01               	movwf	USBStallEndpoint@dir,c
 21395  0057EE  0E02               	movlw	2
 21396  0057F0  EC8B  F02A         	call	_USBStallEndpoint
 21397                           
 21398                           ;usb_device_msd.c: 1636: }
 21399  0057F4  0012               	return	
 21400  0057F6                     l755:
 21401                           
 21402                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 21403  0057F6  0E01               	movlw	1
 21404  0057F8  6E01               	movwf	USBStallEndpoint@dir,c
 21405  0057FA  0E02               	movlw	2
 21406  0057FC  EC8B  F02A         	call	_USBStallEndpoint
 21407                           
 21408                           ;usb_device_msd.c: 1644: }
 21409                           
 21410                           ;usb_device_msd.c: 1643: break;
 21411                           
 21412                           ;usb_device_msd.c: 1642: default:
 21413                           
 21414                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21415  005800  0012               	return	
 21416  005802                     l747:
 21417  005802  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21418                           
 21419                           ; Switch size 1, requested type "space"
 21420                           ; Number of cases is 6, Range of values is 1 to 127
 21421                           ; switch strategies available:
 21422                           ; Name         Instructions Cycles
 21423                           ; simple_byte           19    10 (average)
 21424                           ;	Chosen strategy is simple_byte
 21425  005804  0A01               	xorlw	1	; case 1
 21426  005806  B4D8               	btfsc	status,2,c
 21427  005808  D7B9               	goto	l748
 21428  00580A  0A03               	xorlw	3	; case 2
 21429  00580C  B4D8               	btfsc	status,2,c
 21430  00580E  D7BA               	goto	l750
 21431  005810  0A01               	xorlw	1	; case 3
 21432  005812  B4D8               	btfsc	status,2,c
 21433  005814  D7BD               	goto	l751
 21434  005816  0A07               	xorlw	7	; case 4
 21435  005818  B4D8               	btfsc	status,2,c
 21436  00581A  D7C3               	goto	l752
 21437  00581C  0A01               	xorlw	1	; case 5
 21438  00581E  B4D8               	btfsc	status,2,c
 21439  005820  D7C6               	goto	l753
 21440  005822  0A7A               	xorlw	122	; case 127
 21441  005824  A4D8               	btfss	status,2,c
 21442  005826  0012               	return	
 21443  005828  D7CB               	goto	l754
 21444  00582A                     __end_of_MSDErrorHandler:
 21445                           	opt stack 0
 21446                           tosu	equ	0xFFF
 21447                           tosh	equ	0xFFE
 21448                           tosl	equ	0xFFD
 21449                           pclath	equ	0xFFA
 21450                           tblptru	equ	0xFF8
 21451                           tblptrh	equ	0xFF7
 21452                           tblptrl	equ	0xFF6
 21453                           tablat	equ	0xFF5
 21454                           prodh	equ	0xFF4
 21455                           prodl	equ	0xFF3
 21456                           intcon	equ	0xFF2
 21457                           intcon2	equ	0xFF1
 21458                           intcon3	equ	0xFF0
 21459                           indf0	equ	0xFEF
 21460                           postinc0	equ	0xFEE
 21461                           fsr0h	equ	0xFEA
 21462                           fsr0l	equ	0xFE9
 21463                           wreg	equ	0xFE8
 21464                           indf1	equ	0xFE7
 21465                           postdec1	equ	0xFE5
 21466                           plusw1	equ	0xFE3
 21467                           fsr1h	equ	0xFE2
 21468                           fsr1l	equ	0xFE1
 21469                           indf2	equ	0xFDF
 21470                           postinc2	equ	0xFDE
 21471                           postdec2	equ	0xFDD
 21472                           plusw2	equ	0xFDB
 21473                           fsr2h	equ	0xFDA
 21474                           fsr2l	equ	0xFD9
 21475                           status	equ	0xFD8
 21476                           
 21477 ;; *************** function _USBStallEndpoint *****************
 21478 ;; Defined at:
 21479 ;;		line 1073 in file "usb_device.c"
 21480 ;; Parameters:    Size  Location     Type
 21481 ;;  ep              1    wreg     unsigned char 
 21482 ;;  dir             1    0[COMRAM] unsigned char 
 21483 ;; Auto vars:     Size  Location     Type
 21484 ;;  ep              1    5[COMRAM] unsigned char 
 21485 ;;  p               2    6[COMRAM] PTR struct __BDT
 21486 ;;		 -> BDT(48), 
 21487 ;; Return value:  Size  Location     Type
 21488 ;;                  1    wreg      void 
 21489 ;; Registers used:
 21490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21491 ;; Tracked objects:
 21492 ;;		On entry : 0/0
 21493 ;;		On exit  : 0/0
 21494 ;;		Unchanged: 0/0
 21495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21496 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21497 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21499 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21500 ;;Total ram usage:        8 bytes
 21501 ;; Hardware stack levels used:    1
 21502 ;; This function calls:
 21503 ;;		Nothing
 21504 ;; This function is called by:
 21505 ;;		_MSDTasks
 21506 ;;		_MSDReadHandler
 21507 ;;		_MSDWriteHandler
 21508 ;;		_MSDErrorHandler
 21509 ;;		_MSDTransferTerminated
 21510 ;; This function uses a non-reentrant model
 21511 ;;
 21512                           
 21513                           	psect	text93
 21514  005516                     __ptext93:
 21515                           	opt stack 0
 21516  005516                     _USBStallEndpoint:
 21517                           	opt stack 27
 21518                           
 21519                           ;incstack = 0
 21520                           ;USBStallEndpoint@ep stored from wreg
 21521  005516  6E06               	movwf	USBStallEndpoint@ep,c
 21522                           
 21523                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21524  005518  5006               	movf	USBStallEndpoint@ep,w,c
 21525  00551A  A4D8               	btfss	status,2,c
 21526  00551C  D02C               	goto	l191
 21527                           
 21528                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21529  00551E  0100               	movlb	0	; () banked
 21530  005520  EE20 F001          	lfsr	2,1
 21531  005524  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21532  005526  26D9               	addwf	fsr2l,f,c
 21533  005528  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21534  00552A  22DA               	addwfc	fsr2h,f,c
 21535  00552C  0E08               	movlw	8
 21536  00552E  6EDF               	movwf	indf2,c
 21537                           
 21538                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21539  005530  EE20 F002          	lfsr	2,2
 21540  005534  51E4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21541  005536  26D9               	addwf	fsr2l,f,c
 21542  005538  51E5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21543  00553A  22DA               	addwfc	fsr2h,f,c
 21544  00553C  0E30               	movlw	48
 21545  00553E  6EDE               	movwf	postinc2,c
 21546  005540  0E0D               	movlw	13
 21547  005542  6EDD               	movwf	postdec2,c
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21551  005544  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21552  005548  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21553  00554C  0E0C               	movlw	12
 21554  00554E  6EDF               	movwf	indf2,c
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21558  005550  C0E4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21559  005554  C0E5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21560  005558  0E00               	movlw	0
 21561  00555A  8EDB               	bsf	plusw2,7,c
 21562                           
 21563                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21564  00555C  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 21565  005560  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21566  005564  0E04               	movlw	4
 21567  005566  6EDF               	movwf	indf2,c
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21571  005568  C0D4  FFD9         	movff	_pBDTEntryIn,fsr2l
 21572  00556C  C0D5  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21573  005570  0E00               	movlw	0
 21574  005572  8EDB               	bsf	plusw2,7,c
 21575                           
 21576                           ;usb_device.c: 1089: }
 21577  005574  0012               	return	
 21578  005576                     l191:
 21579                           
 21580                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21581                           
 21582                           ; BSR set to: 0
 21583  005576  5001               	movf	USBStallEndpoint@dir,w,c
 21584  005578  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21585  00557A  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21586  00557C  90D8               	bcf	status,0,c
 21587  00557E  3602               	rlcf	??_USBStallEndpoint,f,c
 21588  005580  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21589  005582  5006               	movf	USBStallEndpoint@ep,w,c
 21590  005584  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21591  005586  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21592  005588  90D8               	bcf	status,0,c
 21593  00558A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21594  00558C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21595  00558E  90D8               	bcf	status,0,c
 21596  005590  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21597  005592  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21598  005594  5002               	movf	??_USBStallEndpoint,w,c
 21599  005596  2604               	addwf	??_USBStallEndpoint+2,f,c
 21600  005598  5003               	movf	??_USBStallEndpoint+1,w,c
 21601  00559A  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21602  00559C  90D8               	bcf	status,0,c
 21603  00559E  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21604  0055A0  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21605  0055A2  90D8               	bcf	status,0,c
 21606  0055A4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21607  0055A6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21608  0055A8  0E00               	movlw	0
 21609  0055AA  2404               	addwf	??_USBStallEndpoint+2,w,c
 21610  0055AC  6E07               	movwf	USBStallEndpoint@p,c
 21611  0055AE  0E0D               	movlw	13
 21612  0055B0  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21613  0055B2  6E08               	movwf	USBStallEndpoint@p+1,c
 21614                           
 21615                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21616  0055B4  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21617  0055B8  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21618  0055BC  0E00               	movlw	0
 21619  0055BE  84DB               	bsf	plusw2,2,c
 21620                           
 21621                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21622  0055C0  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21623  0055C4  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21624  0055C8  0E00               	movlw	0
 21625  0055CA  8EDB               	bsf	plusw2,7,c
 21626                           
 21627                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21628  0055CC  5006               	movf	USBStallEndpoint@ep,w,c
 21629  0055CE  0D04               	mullw	4
 21630  0055D0  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21631  0055D4  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21632  0055D8  5001               	movf	USBStallEndpoint@dir,w,c
 21633  0055DA  0D02               	mullw	2
 21634  0055DC  50F3               	movf	prodl,w,c
 21635  0055DE  2602               	addwf	??_USBStallEndpoint,f,c
 21636  0055E0  50F4               	movf	prodh,w,c
 21637  0055E2  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21638  0055E4  90D8               	bcf	status,0,c
 21639  0055E6  3602               	rlcf	??_USBStallEndpoint,f,c
 21640  0055E8  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21641  0055EA  90D8               	bcf	status,0,c
 21642  0055EC  3602               	rlcf	??_USBStallEndpoint,f,c
 21643  0055EE  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21644  0055F0  0E04               	movlw	4
 21645  0055F2  2602               	addwf	??_USBStallEndpoint,f,c
 21646  0055F4  0E00               	movlw	0
 21647  0055F6  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21648  0055F8  0E00               	movlw	0
 21649  0055FA  2402               	addwf	??_USBStallEndpoint,w,c
 21650  0055FC  6E07               	movwf	USBStallEndpoint@p,c
 21651  0055FE  0E0D               	movlw	13
 21652  005600  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21653  005602  6E08               	movwf	USBStallEndpoint@p+1,c
 21654                           
 21655                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21656  005604  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21657  005608  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21658  00560C  0E00               	movlw	0
 21659  00560E  84DB               	bsf	plusw2,2,c
 21660                           
 21661                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21662  005610  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21663  005614  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21664  005618  0E00               	movlw	0
 21665  00561A  8EDB               	bsf	plusw2,7,c
 21666  00561C  0012               	return	
 21667  00561E                     __end_of_USBStallEndpoint:
 21668                           	opt stack 0
 21669                           tosu	equ	0xFFF
 21670                           tosh	equ	0xFFE
 21671                           tosl	equ	0xFFD
 21672                           pclath	equ	0xFFA
 21673                           tblptru	equ	0xFF8
 21674                           tblptrh	equ	0xFF7
 21675                           tblptrl	equ	0xFF6
 21676                           tablat	equ	0xFF5
 21677                           prodh	equ	0xFF4
 21678                           prodl	equ	0xFF3
 21679                           intcon	equ	0xFF2
 21680                           intcon2	equ	0xFF1
 21681                           intcon3	equ	0xFF0
 21682                           indf0	equ	0xFEF
 21683                           postinc0	equ	0xFEE
 21684                           fsr0h	equ	0xFEA
 21685                           fsr0l	equ	0xFE9
 21686                           wreg	equ	0xFE8
 21687                           indf1	equ	0xFE7
 21688                           postdec1	equ	0xFE5
 21689                           plusw1	equ	0xFE3
 21690                           fsr1h	equ	0xFE2
 21691                           fsr1l	equ	0xFE1
 21692                           indf2	equ	0xFDF
 21693                           postinc2	equ	0xFDE
 21694                           postdec2	equ	0xFDD
 21695                           plusw2	equ	0xFDB
 21696                           fsr2h	equ	0xFDA
 21697                           fsr2l	equ	0xFD9
 21698                           status	equ	0xFD8
 21699                           
 21700 ;; *************** function _ResetSenseData *****************
 21701 ;; Defined at:
 21702 ;;		line 1373 in file "usb_device_msd.c"
 21703 ;; Parameters:    Size  Location     Type
 21704 ;;		None
 21705 ;; Auto vars:     Size  Location     Type
 21706 ;;		None
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  1    wreg      void 
 21709 ;; Registers used:
 21710 ;;		wreg, status,2
 21711 ;; Tracked objects:
 21712 ;;		On entry : 0/0
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21720 ;;Total ram usage:        0 bytes
 21721 ;; Hardware stack levels used:    1
 21722 ;; This function calls:
 21723 ;;		Nothing
 21724 ;; This function is called by:
 21725 ;;		_USBMSDInit
 21726 ;;		_MSDProcessCommandMediaAbsent
 21727 ;;		_MSDProcessCommandMediaPresent
 21728 ;;		_MSDErrorHandler
 21729 ;; This function uses a non-reentrant model
 21730 ;;
 21731                           
 21732                           	psect	text94
 21733  008C8A                     __ptext94:
 21734                           	opt stack 0
 21735  008C8A                     _ResetSenseData:
 21736                           	opt stack 26
 21737                           
 21738                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21739                           
 21740                           ;incstack = 0
 21741  008C8A  0101               	movlb	1	; () banked
 21742  008C8C  911F               	bcf	_gblSenseData& (0+255),0,b
 21743  008C8E  931F               	bcf	_gblSenseData& (0+255),1,b
 21744  008C90  951F               	bcf	_gblSenseData& (0+255),2,b
 21745  008C92  971F               	bcf	_gblSenseData& (0+255),3,b
 21746  008C94  891F               	bsf	_gblSenseData& (0+255),4,b
 21747  008C96  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21748  008C98  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21749                           
 21750                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21751  008C9A  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21755  008C9C  0E00               	movlw	0
 21756  008C9E  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21757                           
 21758                           ; BSR set to: 1
 21759                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21760  008CA0  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21761  008CA2  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21762  008CA4  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21763  008CA6  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21764                           
 21765                           ; BSR set to: 1
 21766                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21767  008CA8  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21768                           
 21769                           ; BSR set to: 1
 21770                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21771  008CAA  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21772                           
 21773                           ; BSR set to: 1
 21774                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21775  008CAC  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21776                           
 21777                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21778  008CAE  0E00               	movlw	0
 21779  008CB0  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21780                           
 21781                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21782  008CB2  0E00               	movlw	0
 21783  008CB4  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21784                           
 21785                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21786  008CB6  0E00               	movlw	0
 21787  008CB8  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21788                           
 21789                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21790  008CBA  0E00               	movlw	0
 21791  008CBC  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21792                           
 21793                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21794  008CBE  0E0A               	movlw	10
 21795  008CC0  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21796                           
 21797                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21798  008CC2  0E00               	movlw	0
 21799  008CC4  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21800  008CC6  0E00               	movlw	0
 21801  008CC8  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21802  008CCA  0E00               	movlw	0
 21803  008CCC  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21804  008CCE  0E00               	movlw	0
 21805  008CD0  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21806                           
 21807                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21808  008CD2  0E00               	movlw	0
 21809  008CD4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21810                           
 21811                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21812  008CD6  0E00               	movlw	0
 21813  008CD8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21814                           
 21815                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21816  008CDA  0E00               	movlw	0
 21817  008CDC  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21818                           
 21819                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21820  008CDE  0E00               	movlw	0
 21821  008CE0  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21822                           
 21823                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21824  008CE2  0E00               	movlw	0
 21825  008CE4  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21826                           
 21827                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21828  008CE6  0E00               	movlw	0
 21829  008CE8  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21830                           
 21831                           ; BSR set to: 1
 21832  008CEA  0012               	return		;funcret
 21833  008CEC                     __end_of_ResetSenseData:
 21834                           	opt stack 0
 21835                           tosu	equ	0xFFF
 21836                           tosh	equ	0xFFE
 21837                           tosl	equ	0xFFD
 21838                           pclath	equ	0xFFA
 21839                           tblptru	equ	0xFF8
 21840                           tblptrh	equ	0xFF7
 21841                           tblptrl	equ	0xFF6
 21842                           tablat	equ	0xFF5
 21843                           prodh	equ	0xFF4
 21844                           prodl	equ	0xFF3
 21845                           intcon	equ	0xFF2
 21846                           intcon2	equ	0xFF1
 21847                           intcon3	equ	0xFF0
 21848                           indf0	equ	0xFEF
 21849                           postinc0	equ	0xFEE
 21850                           fsr0h	equ	0xFEA
 21851                           fsr0l	equ	0xFE9
 21852                           wreg	equ	0xFE8
 21853                           indf1	equ	0xFE7
 21854                           postdec1	equ	0xFE5
 21855                           plusw1	equ	0xFE3
 21856                           fsr1h	equ	0xFE2
 21857                           fsr1l	equ	0xFE1
 21858                           indf2	equ	0xFDF
 21859                           postinc2	equ	0xFDE
 21860                           postdec2	equ	0xFDD
 21861                           plusw2	equ	0xFDB
 21862                           fsr2h	equ	0xFDA
 21863                           fsr2l	equ	0xFD9
 21864                           status	equ	0xFD8
 21865                           
 21866 ;; *************** function _ExternalFlash_SectorRead *****************
 21867 ;; Defined at:
 21868 ;;		line 40 in file "external_flash.c"
 21869 ;; Parameters:    Size  Location     Type
 21870 ;;  config          2   43[COMRAM] PTR void 
 21871 ;;		 -> NULL(0), 
 21872 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21873 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21874 ;;		 -> msd_buffer(512), 
 21875 ;; Auto vars:     Size  Location     Type
 21876 ;;  page            2   51[COMRAM] unsigned int 
 21877 ;; Return value:  Size  Location     Type
 21878 ;;                  1    wreg      unsigned char 
 21879 ;; Registers used:
 21880 ;;		wreg, status,2, status,0, cstack
 21881 ;; Tracked objects:
 21882 ;;		On entry : 0/0
 21883 ;;		On exit  : 0/0
 21884 ;;		Unchanged: 0/0
 21885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21889 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21890 ;;Total ram usage:       10 bytes
 21891 ;; Hardware stack levels used:    1
 21892 ;; Hardware stack levels required when called:    5
 21893 ;; This function calls:
 21894 ;;		_flash_sector_read
 21895 ;; This function is called by:
 21896 ;;		_MSDReadHandler
 21897 ;; This function uses a non-reentrant model
 21898 ;;
 21899                           
 21900                           	psect	text95
 21901  009980                     __ptext95:
 21902                           	opt stack 0
 21903  009980                     _ExternalFlash_SectorRead:
 21904                           	opt stack 20
 21905                           
 21906                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21907                           
 21908                           ; BSR set to: 1
 21909                           ;incstack = 0
 21910  009980  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21911  009984  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21912                           
 21913                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21914  009988  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21915  00998A  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21916  00998C  E104               	bnz	u8920
 21917  00998E  0E20               	movlw	32
 21918  009990  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21919  009992  A0D8               	btfss	status,0,c
 21920  009994  D002               	goto	l1926
 21921  009996                     u8920:
 21922                           
 21923                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21924  009996  0E00               	movlw	0
 21925  009998  0012               	return	
 21926  00999A                     l1926:
 21927                           
 21928                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21929  00999A  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21930  00999E  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21931  0099A2  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21932  0099A6  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21933  0099AA  ECD9  F04C         	call	_flash_sector_read	;wreg free
 21934                           
 21935                           ;external_flash.c: 53: return 1;
 21936  0099AE  0E01               	movlw	1
 21937  0099B0  0012               	return	
 21938  0099B2                     __end_of_ExternalFlash_SectorRead:
 21939                           	opt stack 0
 21940                           tosu	equ	0xFFF
 21941                           tosh	equ	0xFFE
 21942                           tosl	equ	0xFFD
 21943                           pclath	equ	0xFFA
 21944                           tblptru	equ	0xFF8
 21945                           tblptrh	equ	0xFF7
 21946                           tblptrl	equ	0xFF6
 21947                           tablat	equ	0xFF5
 21948                           prodh	equ	0xFF4
 21949                           prodl	equ	0xFF3
 21950                           intcon	equ	0xFF2
 21951                           intcon2	equ	0xFF1
 21952                           intcon3	equ	0xFF0
 21953                           indf0	equ	0xFEF
 21954                           postinc0	equ	0xFEE
 21955                           fsr0h	equ	0xFEA
 21956                           fsr0l	equ	0xFE9
 21957                           wreg	equ	0xFE8
 21958                           indf1	equ	0xFE7
 21959                           postdec1	equ	0xFE5
 21960                           plusw1	equ	0xFE3
 21961                           fsr1h	equ	0xFE2
 21962                           fsr1l	equ	0xFE1
 21963                           indf2	equ	0xFDF
 21964                           postinc2	equ	0xFDE
 21965                           postdec2	equ	0xFDD
 21966                           plusw2	equ	0xFDB
 21967                           fsr2h	equ	0xFDA
 21968                           fsr2l	equ	0xFD9
 21969                           status	equ	0xFD8
 21970                           
 21971 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21972 ;; Defined at:
 21973 ;;		line 993 in file "usb_device_msd.c"
 21974 ;; Parameters:    Size  Location     Type
 21975 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21976 ;; Auto vars:     Size  Location     Type
 21977 ;;		None
 21978 ;; Return value:  Size  Location     Type
 21979 ;;                  1    wreg      void 
 21980 ;; Registers used:
 21981 ;;		wreg, status,2, status,0
 21982 ;; Tracked objects:
 21983 ;;		On entry : 0/0
 21984 ;;		On exit  : 0/0
 21985 ;;		Unchanged: 0/0
 21986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21989 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21991 ;;Total ram usage:        6 bytes
 21992 ;; Hardware stack levels used:    1
 21993 ;; This function calls:
 21994 ;;		Nothing
 21995 ;; This function is called by:
 21996 ;;		_MSDProcessCommandMediaPresent
 21997 ;; This function uses a non-reentrant model
 21998 ;;
 21999                           
 22000                           	psect	text96
 22001  008096                     __ptext96:
 22002                           	opt stack 0
 22003  008096                     _MSDComputeDeviceInAndResidue:
 22004                           	opt stack 26
 22005                           
 22006                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 22007                           
 22008                           ;incstack = 0
 22009  008096  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 22010  008098  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22011  00809A  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 22012  00809C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22013  00809E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22014  0080A0  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22015  0080A2  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 22016  0080A4  0101               	movlb	1	; () banked
 22017  0080A6  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 22018  0080A8  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 22019  0080AA  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 22020  0080AC  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 22021  0080AE  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 22022  0080B0  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 22023  0080B2  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 22024  0080B4  B0D8               	btfsc	status,0,c
 22025  0080B6  D00E               	goto	l659
 22026                           
 22027                           ; BSR set to: 1
 22028                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 22029  0080B8  0E00               	movlw	0
 22030  0080BA  010D               	movlb	13	; () banked
 22031  0080BC  6F88               	movwf	136,b	;volatile
 22032  0080BE  0E00               	movlw	0
 22033  0080C0  6F89               	movwf	137,b	;volatile
 22034  0080C2  0E00               	movlw	0
 22035  0080C4  6F8A               	movwf	138,b	;volatile
 22036  0080C6  0E00               	movlw	0
 22037  0080C8  6F8B               	movwf	139,b	;volatile
 22038                           
 22039                           ; BSR set to: 13
 22040                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 22041  0080CA  C108  F0DE         	movff	_gblCBW+8,_TransferLength
 22042  0080CE  C109  F0DF         	movff	_gblCBW+9,_TransferLength+1
 22043                           
 22044                           ;usb_device_msd.c: 1002: }
 22045  0080D2  0012               	return	
 22046  0080D4                     l659:
 22047                           
 22048                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 22049                           
 22050                           ; BSR set to: 13
 22051  0080D4  0100               	movlb	0	; () banked
 22052  0080D6  51DE               	movf	_TransferLength& (0+255),w,b
 22053  0080D8  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 22054  0080DA  51DF               	movf	(_TransferLength+1)& (0+255),w,b
 22055  0080DC  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 22056  0080DE  B0D8               	btfsc	status,0,c
 22057  0080E0  D004               	goto	l661
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 22061  0080E2  C001  F0DE         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 22062  0080E6  C002  F0DF         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 22063  0080EA                     l661:
 22064                           
 22065                           ; BSR set to: 0
 22066                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 22067                           
 22068                           ; BSR set to: 0
 22069  0080EA  51DE               	movf	_TransferLength& (0+255),w,b
 22070  0080EC  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22071  0080EE  51DF               	movf	(_TransferLength+1)& (0+255),w,b
 22072  0080F0  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22073  0080F2  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22074  0080F4  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22075  0080F6  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 22076  0080F8  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 22077  0080FA  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 22078  0080FC  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 22079  0080FE  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 22080  008100  0E00               	movlw	0
 22081  008102  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 22082  008104  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 22083  008106  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 22084  008108  0101               	movlb	1	; () banked
 22085  00810A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22086  00810C  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 22087  00810E  010D               	movlb	13	; () banked
 22088  008110  6F88               	movwf	136,b	;volatile
 22089  008112  0101               	movlb	1	; () banked
 22090  008114  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22091  008116  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 22092  008118  010D               	movlb	13	; () banked
 22093  00811A  6F89               	movwf	137,b	;volatile
 22094  00811C  0101               	movlb	1	; () banked
 22095  00811E  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22096  008120  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 22097  008122  010D               	movlb	13	; () banked
 22098  008124  6F8A               	movwf	138,b	;volatile
 22099  008126  0101               	movlb	1	; () banked
 22100  008128  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22101  00812A  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 22102  00812C  010D               	movlb	13	; () banked
 22103  00812E  6F8B               	movwf	139,b	;volatile
 22104  008130  0012               	return	
 22105  008132                     __end_of_MSDComputeDeviceInAndResidue:
 22106                           	opt stack 0
 22107                           tosu	equ	0xFFF
 22108                           tosh	equ	0xFFE
 22109                           tosl	equ	0xFFD
 22110                           pclath	equ	0xFFA
 22111                           tblptru	equ	0xFF8
 22112                           tblptrh	equ	0xFF7
 22113                           tblptrl	equ	0xFF6
 22114                           tablat	equ	0xFF5
 22115                           prodh	equ	0xFF4
 22116                           prodl	equ	0xFF3
 22117                           intcon	equ	0xFF2
 22118                           intcon2	equ	0xFF1
 22119                           intcon3	equ	0xFF0
 22120                           indf0	equ	0xFEF
 22121                           postinc0	equ	0xFEE
 22122                           fsr0h	equ	0xFEA
 22123                           fsr0l	equ	0xFE9
 22124                           wreg	equ	0xFE8
 22125                           indf1	equ	0xFE7
 22126                           postdec1	equ	0xFE5
 22127                           plusw1	equ	0xFE3
 22128                           fsr1h	equ	0xFE2
 22129                           fsr1l	equ	0xFE1
 22130                           indf2	equ	0xFDF
 22131                           postinc2	equ	0xFDE
 22132                           postdec2	equ	0xFDD
 22133                           plusw2	equ	0xFDB
 22134                           fsr2h	equ	0xFDA
 22135                           fsr2l	equ	0xFD9
 22136                           status	equ	0xFD8
 22137                           
 22138 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 22139 ;; Defined at:
 22140 ;;		line 18 in file "external_flash.c"
 22141 ;; Parameters:    Size  Location     Type
 22142 ;;  config          2    0[COMRAM] PTR void 
 22143 ;;		 -> NULL(0), 
 22144 ;; Auto vars:     Size  Location     Type
 22145 ;;		None
 22146 ;; Return value:  Size  Location     Type
 22147 ;;                  2    0[COMRAM] unsigned int 
 22148 ;; Registers used:
 22149 ;;		wreg, status,2
 22150 ;; Tracked objects:
 22151 ;;		On entry : 0/0
 22152 ;;		On exit  : 0/0
 22153 ;;		Unchanged: 0/0
 22154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22159 ;;Total ram usage:        2 bytes
 22160 ;; Hardware stack levels used:    1
 22161 ;; This function calls:
 22162 ;;		Nothing
 22163 ;; This function is called by:
 22164 ;;		_MSDProcessCommandMediaPresent
 22165 ;; This function uses a non-reentrant model
 22166 ;;
 22167                           
 22168                           	psect	text97
 22169  00A0A8                     __ptext97:
 22170                           	opt stack 0
 22171  00A0A8                     _ExternalFlash_SectorSizeRead:
 22172                           	opt stack 26
 22173                           
 22174                           ;external_flash.c: 20: return 512;
 22175                           
 22176                           ; BSR set to: 13
 22177                           ;incstack = 0
 22178  00A0A8  0E02               	movlw	2
 22179  00A0AA  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 22180  00A0AC  0E00               	movlw	0
 22181  00A0AE  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 22182  00A0B0  0012               	return	
 22183  00A0B2                     __end_of_ExternalFlash_SectorSizeRead:
 22184                           	opt stack 0
 22185                           tosu	equ	0xFFF
 22186                           tosh	equ	0xFFE
 22187                           tosl	equ	0xFFD
 22188                           pclath	equ	0xFFA
 22189                           tblptru	equ	0xFF8
 22190                           tblptrh	equ	0xFF7
 22191                           tblptrl	equ	0xFF6
 22192                           tablat	equ	0xFF5
 22193                           prodh	equ	0xFF4
 22194                           prodl	equ	0xFF3
 22195                           intcon	equ	0xFF2
 22196                           intcon2	equ	0xFF1
 22197                           intcon3	equ	0xFF0
 22198                           indf0	equ	0xFEF
 22199                           postinc0	equ	0xFEE
 22200                           fsr0h	equ	0xFEA
 22201                           fsr0l	equ	0xFE9
 22202                           wreg	equ	0xFE8
 22203                           indf1	equ	0xFE7
 22204                           postdec1	equ	0xFE5
 22205                           plusw1	equ	0xFE3
 22206                           fsr1h	equ	0xFE2
 22207                           fsr1l	equ	0xFE1
 22208                           indf2	equ	0xFDF
 22209                           postinc2	equ	0xFDE
 22210                           postdec2	equ	0xFDD
 22211                           plusw2	equ	0xFDB
 22212                           fsr2h	equ	0xFDA
 22213                           fsr2l	equ	0xFD9
 22214                           status	equ	0xFD8
 22215                           
 22216 ;; *************** function _ExternalFlash_CapacityRead *****************
 22217 ;; Defined at:
 22218 ;;		line 23 in file "external_flash.c"
 22219 ;; Parameters:    Size  Location     Type
 22220 ;;  config          2    0[COMRAM] PTR void 
 22221 ;;		 -> NULL(0), 
 22222 ;; Auto vars:     Size  Location     Type
 22223 ;;		None
 22224 ;; Return value:  Size  Location     Type
 22225 ;;                  4    0[COMRAM] unsigned long 
 22226 ;; Registers used:
 22227 ;;		wreg, status,2
 22228 ;; Tracked objects:
 22229 ;;		On entry : 0/0
 22230 ;;		On exit  : 0/0
 22231 ;;		Unchanged: 0/0
 22232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22233 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22237 ;;Total ram usage:        4 bytes
 22238 ;; Hardware stack levels used:    1
 22239 ;; This function calls:
 22240 ;;		Nothing
 22241 ;; This function is called by:
 22242 ;;		_MSDProcessCommandMediaPresent
 22243 ;; This function uses a non-reentrant model
 22244 ;;
 22245                           
 22246                           	psect	text98
 22247  009FE0                     __ptext98:
 22248                           	opt stack 0
 22249  009FE0                     _ExternalFlash_CapacityRead:
 22250                           	opt stack 26
 22251                           
 22252                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 22253                           
 22254                           ;incstack = 0
 22255  009FE0  0EFF               	movlw	255
 22256  009FE2  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 22257  009FE4  0E1F               	movlw	31
 22258  009FE6  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 22259  009FE8  0E00               	movlw	0
 22260  009FEA  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 22261  009FEC  0E00               	movlw	0
 22262  009FEE  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 22263  009FF0  0012               	return	
 22264  009FF2                     __end_of_ExternalFlash_CapacityRead:
 22265                           	opt stack 0
 22266                           tosu	equ	0xFFF
 22267                           tosh	equ	0xFFE
 22268                           tosl	equ	0xFFD
 22269                           pclath	equ	0xFFA
 22270                           tblptru	equ	0xFF8
 22271                           tblptrh	equ	0xFF7
 22272                           tblptrl	equ	0xFF6
 22273                           tablat	equ	0xFF5
 22274                           prodh	equ	0xFF4
 22275                           prodl	equ	0xFF3
 22276                           intcon	equ	0xFF2
 22277                           intcon2	equ	0xFF1
 22278                           intcon3	equ	0xFF0
 22279                           indf0	equ	0xFEF
 22280                           postinc0	equ	0xFEE
 22281                           fsr0h	equ	0xFEA
 22282                           fsr0l	equ	0xFE9
 22283                           wreg	equ	0xFE8
 22284                           indf1	equ	0xFE7
 22285                           postdec1	equ	0xFE5
 22286                           plusw1	equ	0xFE3
 22287                           fsr1h	equ	0xFE2
 22288                           fsr1l	equ	0xFE1
 22289                           indf2	equ	0xFDF
 22290                           postinc2	equ	0xFDE
 22291                           postdec2	equ	0xFDD
 22292                           plusw2	equ	0xFDB
 22293                           fsr2h	equ	0xFDA
 22294                           fsr2l	equ	0xFD9
 22295                           status	equ	0xFD8
 22296                           
 22297 ;; *************** function _ExternalFlash_MediaInitialize *****************
 22298 ;; Defined at:
 22299 ;;		line 10 in file "external_flash.c"
 22300 ;; Parameters:    Size  Location     Type
 22301 ;;  config          2    0[COMRAM] PTR void 
 22302 ;;		 -> NULL(0), 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;		None
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  2    0[COMRAM] PTR struct .
 22307 ;; Registers used:
 22308 ;;		wreg, status,2, status,0
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22318 ;;Total ram usage:        2 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; This function calls:
 22321 ;;		Nothing
 22322 ;; This function is called by:
 22323 ;;		_USBMSDInit
 22324 ;;		_MSDProcessCommand
 22325 ;; This function uses a non-reentrant model
 22326 ;;
 22327                           
 22328                           	psect	text99
 22329  009EFA                     __ptext99:
 22330                           	opt stack 0
 22331  009EFA                     _ExternalFlash_MediaInitialize:
 22332                           	opt stack 26
 22333                           
 22334                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 22335                           
 22336                           ;incstack = 0
 22337  009EFA  0101               	movlb	1	; () banked
 22338  009EFC  81A5               	bsf	(_mediaInformation+1)& (0+255),0,b
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 22342  009EFE  0E02               	movlw	2
 22343  009F00  6FA7               	movwf	(_mediaInformation+3)& (0+255),b
 22344  009F02  0E00               	movlw	0
 22345  009F04  6FA6               	movwf	(_mediaInformation+2)& (0+255),b
 22346                           
 22347                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 22348  009F06  0E00               	movlw	0
 22349  009F08  6FA4               	movwf	_mediaInformation& (0+255),b
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;external_flash.c: 15: return &mediaInformation;
 22353  009F0A  0EA4               	movlw	low _mediaInformation
 22354  009F0C  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 22355  009F0E  0E01               	movlw	high _mediaInformation
 22356  009F10  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 22357  009F12  0012               	return	
 22358  009F14                     __end_of_ExternalFlash_MediaInitialize:
 22359                           	opt stack 0
 22360                           tosu	equ	0xFFF
 22361                           tosh	equ	0xFFE
 22362                           tosl	equ	0xFFD
 22363                           pclath	equ	0xFFA
 22364                           tblptru	equ	0xFF8
 22365                           tblptrh	equ	0xFF7
 22366                           tblptrl	equ	0xFF6
 22367                           tablat	equ	0xFF5
 22368                           prodh	equ	0xFF4
 22369                           prodl	equ	0xFF3
 22370                           intcon	equ	0xFF2
 22371                           intcon2	equ	0xFF1
 22372                           intcon3	equ	0xFF0
 22373                           indf0	equ	0xFEF
 22374                           postinc0	equ	0xFEE
 22375                           fsr0h	equ	0xFEA
 22376                           fsr0l	equ	0xFE9
 22377                           wreg	equ	0xFE8
 22378                           indf1	equ	0xFE7
 22379                           postdec1	equ	0xFE5
 22380                           plusw1	equ	0xFE3
 22381                           fsr1h	equ	0xFE2
 22382                           fsr1l	equ	0xFE1
 22383                           indf2	equ	0xFDF
 22384                           postinc2	equ	0xFDE
 22385                           postdec2	equ	0xFDD
 22386                           plusw2	equ	0xFDB
 22387                           fsr2h	equ	0xFDA
 22388                           fsr2l	equ	0xFD9
 22389                           status	equ	0xFD8
 22390                           
 22391 ;; *************** function _ExternalFlash_MediaDetect *****************
 22392 ;; Defined at:
 22393 ;;		line 29 in file "external_flash.c"
 22394 ;; Parameters:    Size  Location     Type
 22395 ;;  config          2    0[COMRAM] PTR void 
 22396 ;;		 -> NULL(0), 
 22397 ;; Auto vars:     Size  Location     Type
 22398 ;;		None
 22399 ;; Return value:  Size  Location     Type
 22400 ;;                  1    wreg      unsigned char 
 22401 ;; Registers used:
 22402 ;;		wreg
 22403 ;; Tracked objects:
 22404 ;;		On entry : 0/0
 22405 ;;		On exit  : 0/0
 22406 ;;		Unchanged: 0/0
 22407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22412 ;;Total ram usage:        2 bytes
 22413 ;; Hardware stack levels used:    1
 22414 ;; This function calls:
 22415 ;;		Nothing
 22416 ;; This function is called by:
 22417 ;;		_USBMSDInit
 22418 ;;		_MSDProcessCommand
 22419 ;; This function uses a non-reentrant model
 22420 ;;
 22421                           
 22422                           	psect	text100
 22423  00A138                     __ptext100:
 22424                           	opt stack 0
 22425  00A138                     _ExternalFlash_MediaDetect:
 22426                           	opt stack 26
 22427                           
 22428                           ;external_flash.c: 31: return 1;
 22429                           
 22430                           ; BSR set to: 1
 22431                           ;incstack = 0
 22432  00A138  0E01               	movlw	1
 22433  00A13A  0012               	return	
 22434  00A13C                     __end_of_ExternalFlash_MediaDetect:
 22435                           	opt stack 0
 22436                           tosu	equ	0xFFF
 22437                           tosh	equ	0xFFE
 22438                           tosl	equ	0xFFD
 22439                           pclath	equ	0xFFA
 22440                           tblptru	equ	0xFF8
 22441                           tblptrh	equ	0xFF7
 22442                           tblptrl	equ	0xFF6
 22443                           tablat	equ	0xFF5
 22444                           prodh	equ	0xFF4
 22445                           prodl	equ	0xFF3
 22446                           intcon	equ	0xFF2
 22447                           intcon2	equ	0xFF1
 22448                           intcon3	equ	0xFF0
 22449                           indf0	equ	0xFEF
 22450                           postinc0	equ	0xFEE
 22451                           fsr0h	equ	0xFEA
 22452                           fsr0l	equ	0xFE9
 22453                           wreg	equ	0xFE8
 22454                           indf1	equ	0xFE7
 22455                           postdec1	equ	0xFE5
 22456                           plusw1	equ	0xFE3
 22457                           fsr1h	equ	0xFE2
 22458                           fsr1l	equ	0xFE1
 22459                           indf2	equ	0xFDF
 22460                           postinc2	equ	0xFDE
 22461                           postdec2	equ	0xFDD
 22462                           plusw2	equ	0xFDB
 22463                           fsr2h	equ	0xFDA
 22464                           fsr2l	equ	0xFD9
 22465                           status	equ	0xFD8
 22466                           
 22467 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 22468 ;; Defined at:
 22469 ;;		line 73 in file "app_device_custom_hid.c"
 22470 ;; Parameters:    Size  Location     Type
 22471 ;;		None
 22472 ;; Auto vars:     Size  Location     Type
 22473 ;;  idx             1    0        unsigned char 
 22474 ;; Return value:  Size  Location     Type
 22475 ;;                  1    wreg      void 
 22476 ;; Registers used:
 22477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22478 ;; Tracked objects:
 22479 ;;		On entry : 0/0
 22480 ;;		On exit  : 0/0
 22481 ;;		Unchanged: 0/0
 22482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22487 ;;Total ram usage:        0 bytes
 22488 ;; Hardware stack levels used:    1
 22489 ;; Hardware stack levels required when called:   12
 22490 ;; This function calls:
 22491 ;;		_USBTransferOnePacket
 22492 ;;		_api_parse
 22493 ;;		_api_prepare
 22494 ;; This function is called by:
 22495 ;;		_main
 22496 ;; This function uses a non-reentrant model
 22497 ;;
 22498                           
 22499                           	psect	text101
 22500  007A48                     __ptext101:
 22501                           	opt stack 0
 22502  007A48                     _APP_DeviceCustomHIDTasks:
 22503                           	opt stack 18
 22504                           
 22505                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22506                           
 22507                           ;incstack = 0
 22508  007A48  0E20               	movlw	32
 22509  007A4A  0100               	movlb	0	; () banked
 22510  007A4C  61FA               	cpfslt	_USBDeviceState& (0+255),b
 22511  007A4E  D001               	goto	l964
 22512  007A50  0012               	return	
 22513  007A52                     l964:
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 22517  007A52  B265               	btfsc	3941,1,c	;volatile
 22518  007A54  0012               	return	
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22522                           
 22523                           ; BSR set to: 0
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 22527  007A56  0101               	movlb	1	; () banked
 22528  007A58  5179               	movf	_USBOutHandle& (0+255),w,b
 22529  007A5A  117A               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22530  007A5C  B4D8               	btfsc	status,2,c
 22531  007A5E  D006               	goto	u14400
 22532                           
 22533                           ; BSR set to: 1
 22534  007A60  C179  FFD9         	movff	_USBOutHandle,fsr2l
 22535  007A64  C17A  FFDA         	movff	_USBOutHandle+1,fsr2h
 22536  007A68  BEDF               	btfsc	indf2,7,c
 22537  007A6A  0012               	return	
 22538  007A6C                     u14400:
 22539                           
 22540                           ; BSR set to: 1
 22541                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22542                           
 22543                           ; BSR set to: 1
 22544  007A6C  5177               	movf	_USBInHandle& (0+255),w,b
 22545  007A6E  1178               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22546  007A70  B4D8               	btfsc	status,2,c
 22547  007A72  D006               	goto	u14420
 22548                           
 22549                           ; BSR set to: 1
 22550  007A74  C177  FFD9         	movff	_USBInHandle,fsr2l
 22551  007A78  C178  FFDA         	movff	_USBInHandle+1,fsr2h
 22552  007A7C  BEDF               	btfsc	indf2,7,c
 22553  007A7E  D01A               	goto	l970
 22554  007A80                     u14420:
 22555                           
 22556                           ; BSR set to: 1
 22557                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 22558                           
 22559                           ; BSR set to: 1
 22560  007A80  0E50               	movlw	low _ReceivedDataBuffer
 22561  007A82  0100               	movlb	0	; () banked
 22562  007A84  6FB2               	movwf	api_prepare@inBuffer& (0+255),b
 22563  007A86  0E02               	movlw	high _ReceivedDataBuffer
 22564  007A88  6FB3               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 22565  007A8A  0E80               	movlw	low _ToSendDataBuffer
 22566  007A8C  6FB4               	movwf	api_prepare@outBuffer& (0+255),b
 22567  007A8E  0E03               	movlw	high _ToSendDataBuffer
 22568  007A90  6FB5               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 22569  007A92  ECBA  F01F         	call	_api_prepare	;wreg free
 22570                           
 22571                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22572  007A96  0E01               	movlw	1
 22573  007A98  6E01               	movwf	USBTransferOnePacket@dir,c
 22574  007A9A  0E80               	movlw	low _ToSendDataBuffer
 22575  007A9C  6E02               	movwf	USBTransferOnePacket@data,c
 22576  007A9E  0E03               	movlw	high _ToSendDataBuffer
 22577  007AA0  6E03               	movwf	USBTransferOnePacket@data+1,c
 22578  007AA2  0E40               	movlw	64
 22579  007AA4  6E04               	movwf	USBTransferOnePacket@len,c
 22580  007AA6  0E01               	movlw	1
 22581  007AA8  EC96  F02C         	call	_USBTransferOnePacket
 22582  007AAC  C001  F177         	movff	?_USBTransferOnePacket,_USBInHandle
 22583  007AB0  C002  F178         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22584  007AB4                     l970:
 22585                           
 22586                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 22587  007AB4  0E50               	movlw	low _ReceivedDataBuffer
 22588  007AB6  0100               	movlb	0	; () banked
 22589  007AB8  6FA4               	movwf	api_parse@inBuffer& (0+255),b
 22590  007ABA  0E02               	movlw	high _ReceivedDataBuffer
 22591  007ABC  6FA5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22592  007ABE  0E40               	movlw	64
 22593  007AC0  6FA6               	movwf	api_parse@receivedDataLength& (0+255),b
 22594  007AC2  0E80               	movlw	low _ToSendDataBuffer
 22595  007AC4  6FA7               	movwf	api_parse@outBuffer& (0+255),b
 22596  007AC6  0E03               	movlw	high _ToSendDataBuffer
 22597  007AC8  6FA8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 22598  007ACA  ECC8  F027         	call	_api_parse	;wreg free
 22599                           
 22600                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22601  007ACE  0E00               	movlw	0
 22602  007AD0  6E01               	movwf	USBTransferOnePacket@dir,c
 22603  007AD2  0E50               	movlw	low _ReceivedDataBuffer
 22604  007AD4  6E02               	movwf	USBTransferOnePacket@data,c
 22605  007AD6  0E02               	movlw	high _ReceivedDataBuffer
 22606  007AD8  6E03               	movwf	USBTransferOnePacket@data+1,c
 22607  007ADA  0E40               	movlw	64
 22608  007ADC  6E04               	movwf	USBTransferOnePacket@len,c
 22609  007ADE  0E01               	movlw	1
 22610  007AE0  EC96  F02C         	call	_USBTransferOnePacket
 22611  007AE4  C001  F179         	movff	?_USBTransferOnePacket,_USBOutHandle
 22612  007AE8  C002  F17A         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22613  007AEC  0012               	return	
 22614  007AEE                     __end_of_APP_DeviceCustomHIDTasks:
 22615                           	opt stack 0
 22616                           tosu	equ	0xFFF
 22617                           tosh	equ	0xFFE
 22618                           tosl	equ	0xFFD
 22619                           pclath	equ	0xFFA
 22620                           tblptru	equ	0xFF8
 22621                           tblptrh	equ	0xFF7
 22622                           tblptrl	equ	0xFF6
 22623                           tablat	equ	0xFF5
 22624                           prodh	equ	0xFF4
 22625                           prodl	equ	0xFF3
 22626                           intcon	equ	0xFF2
 22627                           intcon2	equ	0xFF1
 22628                           intcon3	equ	0xFF0
 22629                           indf0	equ	0xFEF
 22630                           postinc0	equ	0xFEE
 22631                           fsr0h	equ	0xFEA
 22632                           fsr0l	equ	0xFE9
 22633                           wreg	equ	0xFE8
 22634                           indf1	equ	0xFE7
 22635                           postdec1	equ	0xFE5
 22636                           plusw1	equ	0xFE3
 22637                           fsr1h	equ	0xFE2
 22638                           fsr1l	equ	0xFE1
 22639                           indf2	equ	0xFDF
 22640                           postinc2	equ	0xFDE
 22641                           postdec2	equ	0xFDD
 22642                           plusw2	equ	0xFDB
 22643                           fsr2h	equ	0xFDA
 22644                           fsr2l	equ	0xFD9
 22645                           status	equ	0xFD8
 22646                           
 22647 ;; *************** function _api_prepare *****************
 22648 ;; Defined at:
 22649 ;;		line 58 in file "api.c"
 22650 ;; Parameters:    Size  Location     Type
 22651 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22652 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 22653 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22654 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 22655 ;; Auto vars:     Size  Location     Type
 22656 ;;  command         1   86[BANK0 ] enum E6715
 22657 ;; Return value:  Size  Location     Type
 22658 ;;                  1    wreg      void 
 22659 ;; Registers used:
 22660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22661 ;; Tracked objects:
 22662 ;;		On entry : 0/0
 22663 ;;		On exit  : 0/0
 22664 ;;		Unchanged: 0/0
 22665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22666 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22669 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22670 ;;Total ram usage:        5 bytes
 22671 ;; Hardware stack levels used:    1
 22672 ;; Hardware stack levels required when called:   10
 22673 ;; This function calls:
 22674 ;;		__fill_buffer_find_file
 22675 ;;		__fill_buffer_get_bootloader_details
 22676 ;;		__fill_buffer_get_configuration
 22677 ;;		__fill_buffer_get_display
 22678 ;;		__fill_buffer_get_file_details
 22679 ;;		__fill_buffer_get_status
 22680 ;;		__fill_buffer_read_buffer
 22681 ;;		__fill_buffer_read_file
 22682 ;;		_memcpy
 22683 ;; This function is called by:
 22684 ;;		_main
 22685 ;;		_APP_DeviceCustomHIDTasks
 22686 ;; This function uses a non-reentrant model
 22687 ;;
 22688                           
 22689                           	psect	text102
 22690  003F74                     __ptext102:
 22691                           	opt stack 0
 22692  003F74                     _api_prepare:
 22693                           	opt stack 20
 22694                           
 22695                           ;api.c: 60: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22696                           
 22697                           ;incstack = 0
 22698  003F74  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22699  003F78  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22700  003F7C  50DF               	movf	indf2,w,c
 22701  003F7E  0100               	movlb	0	; () banked
 22702  003F80  6FB6               	movwf	api_prepare@command& (0+255),b
 22703                           
 22704                           ; BSR set to: 0
 22705                           ;api.c: 62: if(command>0x7F)
 22706  003F82  0E7F               	movlw	127
 22707  003F84  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22708  003F86  D096               	goto	l2772
 22709  003F88  D03C               	goto	l2764
 22710  003F8A                     
 22711                           ; BSR set to: 0
 22712                           ;api.c: 77: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22713                           
 22714                           ; BSR set to: 0
 22715  003F8A  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22716  003F8E  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22717  003F92  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22718  003F96  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22719  003F9A  ECC3  F043         	call	__fill_buffer_get_file_details	;wreg free
 22720                           
 22721                           ;api.c: 78: break;
 22722  003F9E  0012               	return	
 22723  003FA0                     
 22724                           ;api.c: 82: _fill_buffer_find_file(inBuffer, outBuffer);
 22725  003FA0  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22726  003FA4  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22727  003FA8  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22728  003FAC  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22729  003FB0  EC6D  F03E         	call	__fill_buffer_find_file	;wreg free
 22730                           
 22731                           ;api.c: 83: break;
 22732  003FB4  0012               	return	
 22733  003FB6                     
 22734                           ;api.c: 87: _fill_buffer_read_file(inBuffer, outBuffer);
 22735  003FB6  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22736  003FBA  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22737  003FBE  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22738  003FC2  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22739  003FC6  EC49  F014         	call	__fill_buffer_read_file	;wreg free
 22740                           
 22741                           ;api.c: 88: break;
 22742  003FCA  0012               	return	
 22743  003FCC                     
 22744                           ;api.c: 92: _fill_buffer_read_buffer(inBuffer, outBuffer);
 22745  003FCC  C0B2  F02B         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 22746  003FD0  C0B3  F02C         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 22747  003FD4  C0B4  F02D         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 22748  003FD8  C0B5  F02E         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 22749  003FDC  EC94  F02F         	call	__fill_buffer_read_buffer	;wreg free
 22750                           
 22751                           ;api.c: 93: break;
 22752  003FE0  0012               	return	
 22753  003FE2                     
 22754                           ;api.c: 96: outBuffer[0] = 0x99;
 22755  003FE2  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22756  003FE6  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22757  003FEA  0E99               	movlw	153
 22758  003FEC  6EDF               	movwf	indf2,c
 22759                           
 22760                           ;api.c: 97: outBuffer[1] = 0x99;
 22761  003FEE  0100               	movlb	0	; () banked
 22762  003FF0  EE20 F001          	lfsr	2,1
 22763  003FF4  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22764  003FF6  26D9               	addwf	fsr2l,f,c
 22765  003FF8  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22766  003FFA  22DA               	addwfc	fsr2h,f,c
 22767  003FFC  0E99               	movlw	153
 22768  003FFE  6EDF               	movwf	indf2,c
 22769                           
 22770                           ;api.c: 98: }
 22771  004000  0012               	return	
 22772  004002                     l2764:
 22773                           
 22774                           ; BSR set to: 0
 22775                           
 22776                           ; BSR set to: 0
 22777  004002  51B6               	movf	api_prepare@command& (0+255),w,b
 22778                           
 22779                           ; Switch size 1, requested type "space"
 22780                           ; Number of cases is 4, Range of values is 128 to 131
 22781                           ; switch strategies available:
 22782                           ; Name         Instructions Cycles
 22783                           ; simple_byte           13     7 (average)
 22784                           ;	Chosen strategy is simple_byte
 22785  004004  0A80               	xorlw	128	; case 128
 22786  004006  B4D8               	btfsc	status,2,c
 22787  004008  D7C0               	goto	l2765
 22788  00400A  0A01               	xorlw	1	; case 129
 22789  00400C  B4D8               	btfsc	status,2,c
 22790  00400E  D7C8               	goto	l2767
 22791  004010  0A03               	xorlw	3	; case 130
 22792  004012  B4D8               	btfsc	status,2,c
 22793  004014  D7D0               	goto	l2768
 22794  004016  0A01               	xorlw	1	; case 131
 22795  004018  B4D8               	btfsc	status,2,c
 22796  00401A  D7D8               	goto	l2769
 22797  00401C  D7E2               	goto	l2770
 22798  00401E                     
 22799                           ; BSR set to: 0
 22800                           ;api.c: 111: _fill_buffer_get_status(outBuffer);
 22801                           
 22802                           ; BSR set to: 0
 22803  00401E  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22804  004022  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22805  004026  ECC3  F032         	call	__fill_buffer_get_status	;wreg free
 22806                           
 22807                           ;api.c: 112: break;
 22808  00402A  0012               	return	
 22809  00402C                     
 22810                           ;api.c: 116: _fill_buffer_get_display(outBuffer, 0);
 22811  00402C  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22812  004030  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22813  004034  0E00               	movlw	0
 22814  004036  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22815  004038  EC72  F03B         	call	__fill_buffer_get_display	;wreg free
 22816                           
 22817                           ;api.c: 117: break;
 22818  00403C  0012               	return	
 22819  00403E                     
 22820                           ;api.c: 121: _fill_buffer_get_display(outBuffer, 1);
 22821  00403E  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22822  004042  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22823  004046  0E01               	movlw	1
 22824  004048  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22825  00404A  EC72  F03B         	call	__fill_buffer_get_display	;wreg free
 22826                           
 22827                           ;api.c: 122: break;
 22828  00404E  0012               	return	
 22829  004050                     
 22830                           ;api.c: 126: _fill_buffer_get_bootloader_details(outBuffer);
 22831  004050  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22832  004054  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22833  004058  EC59  F017         	call	__fill_buffer_get_bootloader_details	;wreg free
 22834                           
 22835                           ;api.c: 127: break;
 22836  00405C  0012               	return	
 22837  00405E                     
 22838                           ;api.c: 131: _fill_buffer_get_configuration(outBuffer);
 22839  00405E  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22840  004062  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22841  004066  EC5E  F03F         	call	__fill_buffer_get_configuration	;wreg free
 22842                           
 22843                           ;api.c: 132: break;
 22844  00406A  0012               	return	
 22845  00406C                     
 22846                           ;api.c: 136: memcpy(outBuffer, inBuffer, 64);
 22847  00406C  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22848  004070  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22849  004074  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22850  004078  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22851  00407C  5003               	movf	memcpy@s1,w,c
 22852  00407E  1004               	iorwf	memcpy@s1+1,w,c
 22853  004080  A4D8               	btfss	status,2,c
 22854  004082  0E20               	movlw	32
 22855  004084  6E05               	movwf	memcpy@s1+2,c
 22856  004086  0E00               	movlw	0
 22857  004088  6E07               	movwf	memcpy@n+1,c
 22858  00408A  0E40               	movlw	64
 22859  00408C  6E06               	movwf	memcpy@n,c
 22860  00408E  ECE1  F045         	call	_memcpy	;wreg free
 22861                           
 22862                           ;api.c: 137: break;
 22863  004092  0012               	return	
 22864  004094                     
 22865                           ;api.c: 140: outBuffer[0] = 0x99;
 22866  004094  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22867  004098  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22868  00409C  0E99               	movlw	153
 22869  00409E  6EDF               	movwf	indf2,c
 22870                           
 22871                           ;api.c: 141: outBuffer[1] = 0x99;
 22872  0040A0  0100               	movlb	0	; () banked
 22873  0040A2  EE20 F001          	lfsr	2,1
 22874  0040A6  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22875  0040A8  26D9               	addwf	fsr2l,f,c
 22876  0040AA  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22877  0040AC  22DA               	addwfc	fsr2h,f,c
 22878  0040AE  0E99               	movlw	153
 22879  0040B0  6EDF               	movwf	indf2,c
 22880                           
 22881                           ;api.c: 142: }
 22882  0040B2  0012               	return	
 22883  0040B4                     l2772:
 22884                           
 22885                           ; BSR set to: 0
 22886                           
 22887                           ; BSR set to: 0
 22888  0040B4  51B6               	movf	api_prepare@command& (0+255),w,b
 22889                           
 22890                           ; Switch size 1, requested type "space"
 22891                           ; Number of cases is 7, Range of values is 0 to 32
 22892                           ; switch strategies available:
 22893                           ; Name         Instructions Cycles
 22894                           ; simple_byte           22    12 (average)
 22895                           ;	Chosen strategy is simple_byte
 22896  0040B6  0A00               	xorlw	0	; case 0
 22897  0040B8  B4D8               	btfsc	status,2,c
 22898  0040BA  0012               	return	
 22899  0040BC  0A10               	xorlw	16	; case 16
 22900  0040BE  B4D8               	btfsc	status,2,c
 22901  0040C0  D7AE               	goto	l2775
 22902  0040C2  0A01               	xorlw	1	; case 17
 22903  0040C4  B4D8               	btfsc	status,2,c
 22904  0040C6  D7B2               	goto	l2776
 22905  0040C8  0A03               	xorlw	3	; case 18
 22906  0040CA  B4D8               	btfsc	status,2,c
 22907  0040CC  D7B8               	goto	l2777
 22908  0040CE  0A01               	xorlw	1	; case 19
 22909  0040D0  B4D8               	btfsc	status,2,c
 22910  0040D2  D7BE               	goto	l2778
 22911  0040D4  0A06               	xorlw	6	; case 21
 22912  0040D6  B4D8               	btfsc	status,2,c
 22913  0040D8  D7C2               	goto	l2779
 22914  0040DA  0A35               	xorlw	53	; case 32
 22915  0040DC  B4D8               	btfsc	status,2,c
 22916  0040DE  D7C6               	goto	l2780
 22917  0040E0  D7D9               	goto	l2781
 22918  0040E2                     __end_of_api_prepare:
 22919                           	opt stack 0
 22920                           tosu	equ	0xFFF
 22921                           tosh	equ	0xFFE
 22922                           tosl	equ	0xFFD
 22923                           pclath	equ	0xFFA
 22924                           tblptru	equ	0xFF8
 22925                           tblptrh	equ	0xFF7
 22926                           tblptrl	equ	0xFF6
 22927                           tablat	equ	0xFF5
 22928                           prodh	equ	0xFF4
 22929                           prodl	equ	0xFF3
 22930                           intcon	equ	0xFF2
 22931                           intcon2	equ	0xFF1
 22932                           intcon3	equ	0xFF0
 22933                           indf0	equ	0xFEF
 22934                           postinc0	equ	0xFEE
 22935                           fsr0h	equ	0xFEA
 22936                           fsr0l	equ	0xFE9
 22937                           wreg	equ	0xFE8
 22938                           indf1	equ	0xFE7
 22939                           postdec1	equ	0xFE5
 22940                           plusw1	equ	0xFE3
 22941                           fsr1h	equ	0xFE2
 22942                           fsr1l	equ	0xFE1
 22943                           indf2	equ	0xFDF
 22944                           postinc2	equ	0xFDE
 22945                           postdec2	equ	0xFDD
 22946                           plusw2	equ	0xFDB
 22947                           fsr2h	equ	0xFDA
 22948                           fsr2l	equ	0xFD9
 22949                           status	equ	0xFD8
 22950                           
 22951 ;; *************** function __fill_buffer_read_file *****************
 22952 ;; Defined at:
 22953 ;;		line 414 in file "api.c"
 22954 ;; Parameters:    Size  Location     Type
 22955 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22956 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 22957 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22958 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 22959 ;; Auto vars:     Size  Location     Type
 22960 ;;  start           4   78[BANK0 ] unsigned long 
 22961 ;;  data_length     4   74[BANK0 ] unsigned long 
 22962 ;;  file_size       4   70[BANK0 ] unsigned long 
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1    wreg      void 
 22965 ;; Registers used:
 22966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22973 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22974 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22975 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22976 ;;Total ram usage:       20 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; Hardware stack levels required when called:    9
 22979 ;; This function calls:
 22980 ;;		_fat_get_file_size
 22981 ;;		_fat_read_from_file
 22982 ;; This function is called by:
 22983 ;;		_api_prepare
 22984 ;; This function uses a non-reentrant model
 22985 ;;
 22986                           
 22987                           	psect	text103
 22988  002892                     __ptext103:
 22989                           	opt stack 0
 22990  002892                     __fill_buffer_read_file:
 22991                           	opt stack 20
 22992                           
 22993                           ;api.c: 416: uint32_t start;;api.c: 417: uint32_t file_size;;api.c: 418: uint32_t data_l
      +                          ength;;api.c: 421: outBuffer[0] = DATAREQUEST_READ_FILE;
 22994                           
 22995                           ;incstack = 0
 22996  002892  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22997  002896  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22998  00289A  0E82               	movlw	130
 22999  00289C  6EDF               	movwf	indf2,c
 23000                           
 23001                           ;api.c: 424: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23002  00289E  0100               	movlb	0	; () banked
 23003  0028A0  EE20 F001          	lfsr	2,1
 23004  0028A4  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23005  0028A6  26D9               	addwf	fsr2l,f,c
 23006  0028A8  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23007  0028AA  22DA               	addwfc	fsr2h,f,c
 23008  0028AC  0EC1               	movlw	193
 23009  0028AE  6EDF               	movwf	indf2,c
 23010                           
 23011                           ; BSR set to: 0
 23012                           ;api.c: 425: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23013  0028B0  EE20 F002          	lfsr	2,2
 23014  0028B4  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23015  0028B6  26D9               	addwf	fsr2l,f,c
 23016  0028B8  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23017  0028BA  22DA               	addwfc	fsr2h,f,c
 23018  0028BC  0E25               	movlw	37
 23019  0028BE  6EDF               	movwf	indf2,c
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;api.c: 428: outBuffer[3] = inBuffer[1];
 23023  0028C0  EE20 F001          	lfsr	2,1
 23024  0028C4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23025  0028C6  26D9               	addwf	fsr2l,f,c
 23026  0028C8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23027  0028CA  22DA               	addwfc	fsr2h,f,c
 23028  0028CC  EE10 F003          	lfsr	1,3
 23029  0028D0  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23030  0028D2  26E1               	addwf	fsr1l,f,c
 23031  0028D4  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23032  0028D6  22E2               	addwfc	fsr1h,f,c
 23033  0028D8  CFDF FFE7          	movff	indf2,indf1
 23034                           
 23035                           ; BSR set to: 0
 23036                           ;api.c: 431: outBuffer[4] = inBuffer[2];
 23037  0028DC  EE20 F002          	lfsr	2,2
 23038  0028E0  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23039  0028E2  26D9               	addwf	fsr2l,f,c
 23040  0028E4  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23041  0028E6  22DA               	addwfc	fsr2h,f,c
 23042  0028E8  EE10 F004          	lfsr	1,4
 23043  0028EC  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23044  0028EE  26E1               	addwf	fsr1l,f,c
 23045  0028F0  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23046  0028F2  22E2               	addwfc	fsr1h,f,c
 23047  0028F4  CFDF FFE7          	movff	indf2,indf1
 23048                           
 23049                           ; BSR set to: 0
 23050                           ;api.c: 432: outBuffer[5] = inBuffer[3];
 23051  0028F8  EE20 F003          	lfsr	2,3
 23052  0028FC  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23053  0028FE  26D9               	addwf	fsr2l,f,c
 23054  002900  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23055  002902  22DA               	addwfc	fsr2h,f,c
 23056  002904  EE10 F005          	lfsr	1,5
 23057  002908  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23058  00290A  26E1               	addwf	fsr1l,f,c
 23059  00290C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23060  00290E  22E2               	addwfc	fsr1h,f,c
 23061  002910  CFDF FFE7          	movff	indf2,indf1
 23062                           
 23063                           ; BSR set to: 0
 23064                           ;api.c: 433: outBuffer[6] = inBuffer[4];
 23065  002914  EE20 F004          	lfsr	2,4
 23066  002918  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23067  00291A  26D9               	addwf	fsr2l,f,c
 23068  00291C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23069  00291E  22DA               	addwfc	fsr2h,f,c
 23070  002920  EE10 F006          	lfsr	1,6
 23071  002924  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23072  002926  26E1               	addwf	fsr1l,f,c
 23073  002928  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23074  00292A  22E2               	addwfc	fsr1h,f,c
 23075  00292C  CFDF FFE7          	movff	indf2,indf1
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;api.c: 434: outBuffer[7] = inBuffer[5];
 23079  002930  EE20 F005          	lfsr	2,5
 23080  002934  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23081  002936  26D9               	addwf	fsr2l,f,c
 23082  002938  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23083  00293A  22DA               	addwfc	fsr2h,f,c
 23084  00293C  EE10 F007          	lfsr	1,7
 23085  002940  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23086  002942  26E1               	addwf	fsr1l,f,c
 23087  002944  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23088  002946  22E2               	addwfc	fsr1h,f,c
 23089  002948  CFDF FFE7          	movff	indf2,indf1
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;api.c: 437: start = inBuffer[2];
 23093  00294C  EE20 F002          	lfsr	2,2
 23094  002950  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23095  002952  26D9               	addwf	fsr2l,f,c
 23096  002954  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23097  002956  22DA               	addwfc	fsr2h,f,c
 23098  002958  50DF               	movf	indf2,w,c
 23099  00295A  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23100  00295C  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23101  00295E  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 23102  002960  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 23103  002962  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 23104  002964  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 23105                           
 23106                           ; BSR set to: 0
 23107                           ;api.c: 438: start <<= 8;
 23108  002966  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23109  00296A  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23110  00296E  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23111  002972  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23112                           
 23113                           ; BSR set to: 0
 23114                           ;api.c: 439: start |= inBuffer[3];
 23115  002974  EE20 F003          	lfsr	2,3
 23116  002978  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23117  00297A  26D9               	addwf	fsr2l,f,c
 23118  00297C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23119  00297E  22DA               	addwfc	fsr2h,f,c
 23120  002980  50DF               	movf	indf2,w,c
 23121  002982  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23122  002984  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23123  002986  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23124                           
 23125                           ; BSR set to: 0
 23126                           ;api.c: 440: start <<= 8;
 23127  002988  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23128  00298C  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23129  002990  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23130  002994  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23131                           
 23132                           ; BSR set to: 0
 23133                           ;api.c: 441: start |= inBuffer[4];
 23134  002996  EE20 F004          	lfsr	2,4
 23135  00299A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23136  00299C  26D9               	addwf	fsr2l,f,c
 23137  00299E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23138  0029A0  22DA               	addwfc	fsr2h,f,c
 23139  0029A2  50DF               	movf	indf2,w,c
 23140  0029A4  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23141  0029A6  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23142  0029A8  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23143                           
 23144                           ; BSR set to: 0
 23145                           ;api.c: 442: start <<= 8;
 23146  0029AA  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23147  0029AE  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23148  0029B2  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23149  0029B6  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;api.c: 443: start |= inBuffer[5];
 23153  0029B8  EE20 F005          	lfsr	2,5
 23154  0029BC  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23155  0029BE  26D9               	addwf	fsr2l,f,c
 23156  0029C0  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23157  0029C2  22DA               	addwfc	fsr2h,f,c
 23158  0029C4  50DF               	movf	indf2,w,c
 23159  0029C6  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23160  0029C8  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23161  0029CA  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;api.c: 446: file_size = fat_get_file_size(inBuffer[1]);
 23165  0029CC  EE20 F001          	lfsr	2,1
 23166  0029D0  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23167  0029D2  26D9               	addwf	fsr2l,f,c
 23168  0029D4  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23169  0029D6  22DA               	addwfc	fsr2h,f,c
 23170  0029D8  50DF               	movf	indf2,w,c
 23171  0029DA  ECA5  F044         	call	_fat_get_file_size
 23172  0029DE  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 23173  0029E2  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 23174  0029E6  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 23175  0029EA  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 23176                           
 23177                           ;api.c: 447: data_length = file_size - start;
 23178  0029EE  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 23179  0029F2  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 23180  0029F6  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 23181  0029FA  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 23182  0029FE  0100               	movlb	0	; () banked
 23183  002A00  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 23184  002A02  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 23185  002A04  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 23186  002A06  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 23187  002A08  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 23188  002A0A  0E00               	movlw	0
 23189  002A0C  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 23190  002A0E  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 23191  002A10  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 23192  002A12  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 23193  002A14  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 23194  002A16  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 23195  002A18  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 23196  002A1A  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 23197  002A1C  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 23198  002A1E  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 23199  002A20  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 23200  002A22  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 23201  002A24  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 23202  002A26  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 23203  002A28  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 23204                           
 23205                           ; BSR set to: 0
 23206                           ;api.c: 448: if(data_length>54)
 23207  002A2A  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 23208  002A2C  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 23209  002A2E  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 23210  002A30  E104               	bnz	u13230
 23211  002A32  0E37               	movlw	55
 23212  002A34  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 23213  002A36  A0D8               	btfss	status,0,c
 23214  002A38  D008               	goto	l2834
 23215  002A3A                     u13230:
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;api.c: 449: {;api.c: 451: data_length = 54;
 23219  002A3A  0E36               	movlw	54
 23220  002A3C  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 23221  002A3E  0E00               	movlw	0
 23222  002A40  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 23223  002A42  0E00               	movlw	0
 23224  002A44  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 23225  002A46  0E00               	movlw	0
 23226  002A48  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 23227  002A4A                     l2834:
 23228                           
 23229                           ; BSR set to: 0
 23230                           ;api.c: 452: };api.c: 455: outBuffer[8] = (uint8_t) data_length;
 23231                           
 23232                           ; BSR set to: 0
 23233  002A4A  EE20 F008          	lfsr	2,8
 23234  002A4E  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23235  002A50  26D9               	addwf	fsr2l,f,c
 23236  002A52  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23237  002A54  22DA               	addwfc	fsr2h,f,c
 23238  002A56  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 23239                           
 23240                           ; BSR set to: 0
 23241                           ;api.c: 458: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 23242  002A5A  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 23243  002A5E  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 23244  002A62  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 23245  002A66  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 23246  002A6A  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 23247  002A6E  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 23248  002A72  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 23249  002A76  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 23250  002A7A  0E0A               	movlw	10
 23251  002A7C  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23252  002A7E  6F76               	movwf	fat_read_from_file@data& (0+255),b
 23253  002A80  0E00               	movlw	0
 23254  002A82  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23255  002A84  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 23256  002A86  EE20 F001          	lfsr	2,1
 23257  002A8A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23258  002A8C  26D9               	addwf	fsr2l,f,c
 23259  002A8E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23260  002A90  22DA               	addwfc	fsr2h,f,c
 23261  002A92  50DF               	movf	indf2,w,c
 23262  002A94  EC88  F030         	call	_fat_read_from_file
 23263  002A98  0100               	movlb	0	; () banked
 23264  002A9A  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23265  002A9C  EE20 F009          	lfsr	2,9
 23266  002AA0  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23267  002AA2  26D9               	addwf	fsr2l,f,c
 23268  002AA4  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23269  002AA6  22DA               	addwfc	fsr2h,f,c
 23270  002AA8  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 23271                           
 23272                           ; BSR set to: 0
 23273  002AAC  0012               	return		;funcret
 23274  002AAE                     __end_of__fill_buffer_read_file:
 23275                           	opt stack 0
 23276                           tosu	equ	0xFFF
 23277                           tosh	equ	0xFFE
 23278                           tosl	equ	0xFFD
 23279                           pclath	equ	0xFFA
 23280                           tblptru	equ	0xFF8
 23281                           tblptrh	equ	0xFF7
 23282                           tblptrl	equ	0xFF6
 23283                           tablat	equ	0xFF5
 23284                           prodh	equ	0xFF4
 23285                           prodl	equ	0xFF3
 23286                           intcon	equ	0xFF2
 23287                           intcon2	equ	0xFF1
 23288                           intcon3	equ	0xFF0
 23289                           indf0	equ	0xFEF
 23290                           postinc0	equ	0xFEE
 23291                           fsr0h	equ	0xFEA
 23292                           fsr0l	equ	0xFE9
 23293                           wreg	equ	0xFE8
 23294                           indf1	equ	0xFE7
 23295                           postdec1	equ	0xFE5
 23296                           plusw1	equ	0xFE3
 23297                           fsr1h	equ	0xFE2
 23298                           fsr1l	equ	0xFE1
 23299                           indf2	equ	0xFDF
 23300                           postinc2	equ	0xFDE
 23301                           postdec2	equ	0xFDD
 23302                           plusw2	equ	0xFDB
 23303                           fsr2h	equ	0xFDA
 23304                           fsr2l	equ	0xFD9
 23305                           status	equ	0xFD8
 23306                           
 23307 ;; *************** function _fat_read_from_file *****************
 23308 ;; Defined at:
 23309 ;;		line 751 in file "fat16.c"
 23310 ;; Parameters:    Size  Location     Type
 23311 ;;  file_number     1    wreg     unsigned char 
 23312 ;;  start_byte      4   14[BANK0 ] unsigned long 
 23313 ;;  length          4   18[BANK0 ] unsigned long 
 23314 ;;  data            2   22[BANK0 ] PTR unsigned char 
 23315 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 23316 ;; Auto vars:     Size  Location     Type
 23317 ;;  file_number     1   24[BANK0 ] unsigned char 
 23318 ;;  root           32   30[BANK0 ] struct .
 23319 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 23320 ;;  cluster         2   25[BANK0 ] unsigned int 
 23321 ;;  return_code     1   29[BANK0 ] unsigned char 
 23322 ;; Return value:  Size  Location     Type
 23323 ;;                  1    wreg      unsigned char 
 23324 ;; Registers used:
 23325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23326 ;; Tracked objects:
 23327 ;;		On entry : 0/0
 23328 ;;		On exit  : 0/0
 23329 ;;		Unchanged: 0/0
 23330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23331 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23332 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23334 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23335 ;;Total ram usage:       52 bytes
 23336 ;; Hardware stack levels used:    1
 23337 ;; Hardware stack levels required when called:    8
 23338 ;; This function calls:
 23339 ;;		_fat_get_file_information
 23340 ;;		_fat_read_from_file_fast
 23341 ;; This function is called by:
 23342 ;;		__fill_buffer_read_file
 23343 ;; This function uses a non-reentrant model
 23344 ;;
 23345                           
 23346                           	psect	text104
 23347  006110                     __ptext104:
 23348                           	opt stack 0
 23349  006110                     _fat_read_from_file:
 23350                           	opt stack 20
 23351                           
 23352                           ; BSR set to: 0
 23353                           ;incstack = 0
 23354                           ;fat_read_from_file@file_number stored from wreg
 23355  006110  0100               	movlb	0	; () banked
 23356  006112  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 23357                           
 23358                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 23359  006114  0E7E               	movlw	low fat_read_from_file@root
 23360  006116  6E30               	movwf	fat_get_file_information@data,c
 23361  006118  0E00               	movlw	high fat_read_from_file@root
 23362  00611A  6E31               	movwf	fat_get_file_information@data+1,c
 23363  00611C  0100               	movlb	0	; () banked
 23364  00611E  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 23365  006120  ECFC  F043         	call	_fat_get_file_information
 23366  006124  0100               	movlb	0	; () banked
 23367  006126  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;fat16.c: 760: if(return_code!=0x00)
 23371  006128  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 23372  00612A  B4D8               	btfsc	status,2,c
 23373  00612C  D002               	goto	l2121
 23374                           
 23375                           ; BSR set to: 0
 23376                           ;fat16.c: 761: {;fat16.c: 763: return return_code;
 23377  00612E  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 23378                           
 23379                           ; BSR set to: 0
 23380  006130  0012               	return	
 23381  006132                     l2121:
 23382                           
 23383                           ; BSR set to: 0
 23384                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 23385                           
 23386                           ; BSR set to: 0
 23387  006132  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 23388  006134  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23389  006136  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23390  006138  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23391  00613A  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23392  00613C  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23393  00613E  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23394  006140  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23395  006142  B0D8               	btfsc	status,0,c
 23396  006144  D002               	goto	l2123
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;
 23400  006146  0EFF               	movlw	255
 23401                           
 23402                           ; BSR set to: 0
 23403  006148  0012               	return	
 23404  00614A                     l2123:
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 23408                           
 23409                           ; BSR set to: 0
 23410  00614A  5172               	movf	fat_read_from_file@length& (0+255),w,b
 23411  00614C  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 23412  00614E  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 23413  006150  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 23414  006152  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23415  006154  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 23416  006156  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 23417  006158  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23418  00615A  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 23419  00615C  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 23420  00615E  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23421  006160  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 23422  006162  505C               	movf	??_fat_read_from_file,w,c
 23423  006164  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23424  006166  505D               	movf	??_fat_read_from_file+1,w,c
 23425  006168  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23426  00616A  505E               	movf	??_fat_read_from_file+2,w,c
 23427  00616C  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23428  00616E  505F               	movf	??_fat_read_from_file+3,w,c
 23429  006170  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23430  006172  B0D8               	btfsc	status,0,c
 23431  006174  D01D               	goto	l2124
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 23435  006176  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 23436  00617A  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 23437  00617E  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 23438  006182  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 23439  006186  1E5C               	comf	??_fat_read_from_file,f,c
 23440  006188  1E5D               	comf	??_fat_read_from_file+1,f,c
 23441  00618A  1E5E               	comf	??_fat_read_from_file+2,f,c
 23442  00618C  1E5F               	comf	??_fat_read_from_file+3,f,c
 23443  00618E  2A5C               	incf	??_fat_read_from_file,f,c
 23444  006190  0E00               	movlw	0
 23445  006192  225D               	addwfc	??_fat_read_from_file+1,f,c
 23446  006194  225E               	addwfc	??_fat_read_from_file+2,f,c
 23447  006196  225F               	addwfc	??_fat_read_from_file+3,f,c
 23448  006198  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 23449  00619A  245C               	addwf	??_fat_read_from_file,w,c
 23450  00619C  6F72               	movwf	fat_read_from_file@length& (0+255),b
 23451  00619E  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 23452  0061A0  205D               	addwfc	??_fat_read_from_file+1,w,c
 23453  0061A2  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 23454  0061A4  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 23455  0061A6  205E               	addwfc	??_fat_read_from_file+2,w,c
 23456  0061A8  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 23457  0061AA  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 23458  0061AC  205F               	addwfc	??_fat_read_from_file+3,w,c
 23459  0061AE  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 23460  0061B0                     l2124:
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 23464                           
 23465                           ; BSR set to: 0
 23466  0061B0  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 23467  0061B4  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 23468                           
 23469                           ; BSR set to: 0
 23470                           ;fat16.c: 781: cluster_number = 0;
 23471  0061B8  0E00               	movlw	0
 23472  0061BA  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 23473  0061BC  0E00               	movlw	0
 23474  0061BE  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 23478  0061C0  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 23479  0061C4  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 23480  0061C8  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 23481  0061CC  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 23482  0061D0  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 23483  0061D4  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 23484  0061D8  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 23485  0061DC  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 23486  0061E0  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 23487  0061E4  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 23488  0061E8  0E79               	movlw	low fat_read_from_file@cluster
 23489  0061EA  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 23490  0061EC  0E00               	movlw	high fat_read_from_file@cluster
 23491  0061EE  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 23492  0061F0  0E7B               	movlw	low fat_read_from_file@cluster_number
 23493  0061F2  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 23494  0061F4  0E00               	movlw	high fat_read_from_file@cluster_number
 23495  0061F6  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 23496  0061F8  EC36  F013         	call	_fat_read_from_file_fast	;wreg free
 23497  0061FC  0012               	return	
 23498  0061FE                     __end_of_fat_read_from_file:
 23499                           	opt stack 0
 23500                           tosu	equ	0xFFF
 23501                           tosh	equ	0xFFE
 23502                           tosl	equ	0xFFD
 23503                           pclath	equ	0xFFA
 23504                           tblptru	equ	0xFF8
 23505                           tblptrh	equ	0xFF7
 23506                           tblptrl	equ	0xFF6
 23507                           tablat	equ	0xFF5
 23508                           prodh	equ	0xFF4
 23509                           prodl	equ	0xFF3
 23510                           intcon	equ	0xFF2
 23511                           intcon2	equ	0xFF1
 23512                           intcon3	equ	0xFF0
 23513                           indf0	equ	0xFEF
 23514                           postinc0	equ	0xFEE
 23515                           fsr0h	equ	0xFEA
 23516                           fsr0l	equ	0xFE9
 23517                           wreg	equ	0xFE8
 23518                           indf1	equ	0xFE7
 23519                           postdec1	equ	0xFE5
 23520                           plusw1	equ	0xFE3
 23521                           fsr1h	equ	0xFE2
 23522                           fsr1l	equ	0xFE1
 23523                           indf2	equ	0xFDF
 23524                           postinc2	equ	0xFDE
 23525                           postdec2	equ	0xFDD
 23526                           plusw2	equ	0xFDB
 23527                           fsr2h	equ	0xFDA
 23528                           fsr2l	equ	0xFD9
 23529                           status	equ	0xFD8
 23530                           
 23531 ;; *************** function _fat_read_from_file_fast *****************
 23532 ;; Defined at:
 23533 ;;		line 787 in file "fat16.c"
 23534 ;; Parameters:    Size  Location     Type
 23535 ;;  start_byte      4   65[COMRAM] unsigned long 
 23536 ;;  length          4   69[COMRAM] unsigned long 
 23537 ;;  data            2   73[COMRAM] PTR unsigned char 
 23538 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), ToSendDataBuffer(64), 
 23539 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23540 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23541 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23542 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23543 ;; Auto vars:     Size  Location     Type
 23544 ;;  position        4   10[BANK0 ] unsigned long 
 23545 ;;  read_length     2    8[BANK0 ] unsigned int 
 23546 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23547 ;;  offset          2    4[BANK0 ] unsigned int 
 23548 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23549 ;;  sector          2    0[BANK0 ] unsigned int 
 23550 ;; Return value:  Size  Location     Type
 23551 ;;                  1    wreg      unsigned char 
 23552 ;; Registers used:
 23553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23554 ;; Tracked objects:
 23555 ;;		On entry : 0/0
 23556 ;;		On exit  : 0/0
 23557 ;;		Unchanged: 0/0
 23558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23559 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23560 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23561 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23562 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23563 ;;Total ram usage:       40 bytes
 23564 ;; Hardware stack levels used:    1
 23565 ;; Hardware stack levels required when called:    7
 23566 ;; This function calls:
 23567 ;;		__data_sector_from_cluster
 23568 ;;		__find_nth_cluster
 23569 ;;		__read_fat
 23570 ;;		_flash_partial_read
 23571 ;; This function is called by:
 23572 ;;		_fat_read_from_file
 23573 ;;		__bootloader_verify_file
 23574 ;;		__bootloader_program
 23575 ;; This function uses a non-reentrant model
 23576 ;;
 23577                           
 23578                           	psect	text105
 23579  00266C                     __ptext105:
 23580                           	opt stack 0
 23581  00266C                     _fat_read_from_file_fast:
 23582                           	opt stack 21
 23583                           
 23584                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23585                           
 23586                           ;incstack = 0
 23587  00266C  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23588  002670  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23589  002674  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23590  002678  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23591  00267C  0E0A               	movlw	10
 23592  00267E  D005               	goto	u11180
 23593  002680                     u11185:
 23594  002680  90D8               	bcf	status,0,c
 23595  002682  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23596  002684  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23597  002686  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23598  002688  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23599  00268A                     u11180:
 23600  00268A  2EE8               	decfsz	wreg,f,c
 23601  00268C  D7F9               	goto	u11185
 23602  00268E  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23603  002692  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23604                           
 23605                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 23606  002696  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23607  00269A  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23608  00269E  50DE               	movf	postinc2,w,c
 23609  0026A0  0100               	movlb	0	; () banked
 23610  0026A2  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23611  0026A4  50DE               	movf	postinc2,w,c
 23612  0026A6  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23613  0026A8  B0D8               	btfsc	status,0,c
 23614  0026AA  D002               	goto	l2127
 23615                           
 23616                           ; BSR set to: 0
 23617                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 23618  0026AC  0EFF               	movlw	255
 23619                           
 23620                           ; BSR set to: 0
 23621  0026AE  0012               	return	
 23622  0026B0                     l2127:
 23623                           
 23624                           ; BSR set to: 0
 23625                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23626                           
 23627                           ; BSR set to: 0
 23628  0026B0  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23629  0026B4  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23630  0026B8  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23631  0026BC  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23632  0026C0  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23633  0026C4  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23634  0026C8  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23635  0026CC  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23636  0026D0  1E50               	comf	??_fat_read_from_file_fast,f,c
 23637  0026D2  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23638  0026D4  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23639  0026D6  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23640  0026D8  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23641  0026DA  2450               	addwf	??_fat_read_from_file_fast,w,c
 23642  0026DC  6E3A               	movwf	__find_nth_cluster@n,c
 23643  0026DE  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23644  0026E0  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23645  0026E2  6E3B               	movwf	__find_nth_cluster@n+1,c
 23646  0026E4  ECFC  F03F         	call	__find_nth_cluster	;wreg free
 23647  0026E8  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23648  0026EC  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23649  0026F0  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23650  0026F4  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23651                           
 23652                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 23653  0026F8  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23654  0026FC  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23655  002700  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23656  002704  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23657                           
 23658                           ;fat16.c: 813: working_cluster = (*cluster);
 23659  002708  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23660  00270C  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23661  002710  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23662  002714  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23663                           
 23664                           ;fat16.c: 816: position = (needed_cluster << 9);
 23665  002718  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23666  00271C  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23667  002720  0E09               	movlw	9
 23668  002722                     u11205:
 23669  002722  90D8               	bcf	status,0,c
 23670  002724  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23671  002726  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23672  002728  2EE8               	decfsz	wreg,f,c
 23673  00272A  D7FB               	goto	u11205
 23674  00272C  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23675  002730  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23676  002734  0100               	movlb	0	; () banked
 23677  002736  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23678  002738  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23679                           
 23680                           ; BSR set to: 0
 23681                           ;fat16.c: 817: offset = start_byte - position;
 23682  00273A  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23683  00273E  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23684  002742  1E50               	comf	??_fat_read_from_file_fast,f,c
 23685  002744  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23686  002746  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23687  002748  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23688  00274A  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23689  00274C  2450               	addwf	??_fat_read_from_file_fast,w,c
 23690  00274E  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23691  002750  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23692  002752  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23693  002754  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;fat16.c: 820: position = 0;
 23697  002756  0E00               	movlw	0
 23698  002758  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23699  00275A  0E00               	movlw	0
 23700  00275C  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23701  00275E  0E00               	movlw	0
 23702  002760  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23703  002762  0E00               	movlw	0
 23704  002764  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23705                           
 23706                           ;fat16.c: 821: while(position < length)
 23707  002766  D089               	goto	l2129
 23708  002768                     
 23709                           ; BSR set to: 0
 23710                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 23711                           
 23712                           ; BSR set to: 0
 23713  002768  0E02               	movlw	2
 23714  00276A  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23715  00276C  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23716  00276E  A4D8               	btfss	status,2,c
 23717  002770  D00F               	goto	l2131
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 23721  002772  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23722  002776  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23723  00277A  ECE8  F048         	call	__read_fat	;wreg free
 23724  00277E  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23725  002782  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23726                           
 23727                           ;fat16.c: 828: offset = 0;
 23728  002786  0E00               	movlw	0
 23729  002788  0100               	movlb	0	; () banked
 23730  00278A  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23731  00278C  0E00               	movlw	0
 23732  00278E  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23733  002790                     l2131:
 23734                           
 23735                           ; BSR set to: 0
 23736                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 23737                           
 23738                           ; BSR set to: 0
 23739  002790  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23740  002794  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23741  002798  EC29  F050         	call	__data_sector_from_cluster	;wreg free
 23742  00279C  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23743  0027A0  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23744                           
 23745                           ;fat16.c: 835: read_length = 512 - offset;
 23746  0027A4  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23747  0027A8  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23748  0027AC  1E50               	comf	??_fat_read_from_file_fast,f,c
 23749  0027AE  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23750  0027B0  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23751  0027B2  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23752  0027B4  0E00               	movlw	0
 23753  0027B6  2450               	addwf	??_fat_read_from_file_fast,w,c
 23754  0027B8  0100               	movlb	0	; () banked
 23755  0027BA  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23756  0027BC  0E02               	movlw	2
 23757  0027BE  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23758  0027C0  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;fat16.c: 836: if(read_length > (length-position))
 23762  0027C2  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23763  0027C4  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23764  0027C6  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23765  0027C8  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23766  0027CA  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23767  0027CC  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23768  0027CE  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23769  0027D2  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23770  0027D6  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23771  0027DA  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23772  0027DE  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23773  0027E0  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23774  0027E2  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23775  0027E4  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23776  0027E6  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23777  0027E8  0E00               	movlw	0
 23778  0027EA  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23779  0027EC  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23780  0027EE  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23781  0027F0  5046               	movf	fat_read_from_file_fast@length,w,c
 23782  0027F2  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23783  0027F4  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23784  0027F6  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23785  0027F8  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23786  0027FA  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23787  0027FC  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23788  0027FE  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23789  002800  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23790  002802  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23791  002804  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23792  002806  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23793  002808  5050               	movf	??_fat_read_from_file_fast,w,c
 23794  00280A  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23795  00280C  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23796  00280E  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23797  002810  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23798  002812  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23799  002814  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23800  002816  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23801  002818  B0D8               	btfsc	status,0,c
 23802  00281A  D00E               	goto	l2132
 23803                           
 23804                           ; BSR set to: 0
 23805                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 23806  00281C  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23807  002820  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23808  002824  1E50               	comf	??_fat_read_from_file_fast,f,c
 23809  002826  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23810  002828  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23811  00282A  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23812  00282C  5046               	movf	fat_read_from_file_fast@length,w,c
 23813  00282E  2450               	addwf	??_fat_read_from_file_fast,w,c
 23814  002830  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23815  002832  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23816  002834  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23817  002836  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23818  002838                     l2132:
 23819                           
 23820                           ; BSR set to: 0
 23821                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23822                           
 23823                           ; BSR set to: 0
 23824  002838  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23825  00283C  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23826  002840  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23827  002844  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23828  002848  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23829  00284C  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23830  002850  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23831  002852  244A               	addwf	fat_read_from_file_fast@data,w,c
 23832  002854  6E2E               	movwf	flash_partial_read@data,c
 23833  002856  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23834  002858  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23835  00285A  6E2F               	movwf	flash_partial_read@data+1,c
 23836  00285C  ECF2  F04C         	call	_flash_partial_read	;wreg free
 23837                           
 23838                           ;fat16.c: 846: position += read_length;
 23839  002860  0100               	movlb	0	; () banked
 23840  002862  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23841  002864  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23842  002866  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23843  002868  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23844  00286A  0E00               	movlw	0
 23845  00286C  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23846  00286E  0E00               	movlw	0
 23847  002870  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23848                           
 23849                           ; BSR set to: 0
 23850                           ;fat16.c: 847: offset += read_length;
 23851  002872  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23852  002874  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23853  002876  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23854  002878  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23855  00287A                     l2129:
 23856                           
 23857                           ; BSR set to: 0
 23858                           
 23859                           ; BSR set to: 0
 23860  00287A  5046               	movf	fat_read_from_file_fast@length,w,c
 23861  00287C  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23862  00287E  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23863  002880  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23864  002882  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23865  002884  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23866  002886  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23867  002888  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23868  00288A  A0D8               	btfss	status,0,c
 23869  00288C  D76D               	goto	l2130
 23870                           
 23871                           ; BSR set to: 0
 23872                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 23873                           
 23874                           ; BSR set to: 0
 23875  00288E  0E00               	movlw	0
 23876  002890  0012               	return	
 23877  002892                     __end_of_fat_read_from_file_fast:
 23878                           	opt stack 0
 23879                           tosu	equ	0xFFF
 23880                           tosh	equ	0xFFE
 23881                           tosl	equ	0xFFD
 23882                           pclath	equ	0xFFA
 23883                           tblptru	equ	0xFF8
 23884                           tblptrh	equ	0xFF7
 23885                           tblptrl	equ	0xFF6
 23886                           tablat	equ	0xFF5
 23887                           prodh	equ	0xFF4
 23888                           prodl	equ	0xFF3
 23889                           intcon	equ	0xFF2
 23890                           intcon2	equ	0xFF1
 23891                           intcon3	equ	0xFF0
 23892                           indf0	equ	0xFEF
 23893                           postinc0	equ	0xFEE
 23894                           fsr0h	equ	0xFEA
 23895                           fsr0l	equ	0xFE9
 23896                           wreg	equ	0xFE8
 23897                           indf1	equ	0xFE7
 23898                           postdec1	equ	0xFE5
 23899                           plusw1	equ	0xFE3
 23900                           fsr1h	equ	0xFE2
 23901                           fsr1l	equ	0xFE1
 23902                           indf2	equ	0xFDF
 23903                           postinc2	equ	0xFDE
 23904                           postdec2	equ	0xFDD
 23905                           plusw2	equ	0xFDB
 23906                           fsr2h	equ	0xFDA
 23907                           fsr2l	equ	0xFD9
 23908                           status	equ	0xFD8
 23909                           
 23910 ;; *************** function __fill_buffer_read_buffer *****************
 23911 ;; Defined at:
 23912 ;;		line 461 in file "api.c"
 23913 ;; Parameters:    Size  Location     Type
 23914 ;;  inBuffer        2   42[COMRAM] PTR unsigned char 
 23915 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 23916 ;;  outBuffer       2   44[COMRAM] PTR unsigned char 
 23917 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 23918 ;; Auto vars:     Size  Location     Type
 23919 ;;  data_length     2   50[COMRAM] unsigned int 
 23920 ;;  start           2   48[COMRAM] unsigned int 
 23921 ;; Return value:  Size  Location     Type
 23922 ;;                  1    wreg      void 
 23923 ;; Registers used:
 23924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23925 ;; Tracked objects:
 23926 ;;		On entry : 0/0
 23927 ;;		On exit  : 0/0
 23928 ;;		Unchanged: 0/0
 23929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23931 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23933 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23934 ;;Total ram usage:       10 bytes
 23935 ;; Hardware stack levels used:    1
 23936 ;; Hardware stack levels required when called:    6
 23937 ;; This function calls:
 23938 ;;		_fat_read_from_buffer
 23939 ;; This function is called by:
 23940 ;;		_api_prepare
 23941 ;; This function uses a non-reentrant model
 23942 ;;
 23943                           
 23944                           	psect	text106
 23945  005F28                     __ptext106:
 23946                           	opt stack 0
 23947  005F28                     __fill_buffer_read_buffer:
 23948                           	opt stack 23
 23949                           
 23950                           ;api.c: 463: uint16_t start;;api.c: 464: uint16_t data_length;;api.c: 467: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 23951                           
 23952                           ; BSR set to: 0
 23953                           ;incstack = 0
 23954  005F28  C02D  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 23955  005F2C  C02E  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 23956  005F30  0E83               	movlw	131
 23957  005F32  6EDF               	movwf	indf2,c
 23958                           
 23959                           ;api.c: 470: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23960  005F34  EE20 F001          	lfsr	2,1
 23961  005F38  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23962  005F3A  26D9               	addwf	fsr2l,f,c
 23963  005F3C  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23964  005F3E  22DA               	addwfc	fsr2h,f,c
 23965  005F40  0EC1               	movlw	193
 23966  005F42  6EDF               	movwf	indf2,c
 23967                           
 23968                           ;api.c: 471: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23969  005F44  EE20 F002          	lfsr	2,2
 23970  005F48  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23971  005F4A  26D9               	addwf	fsr2l,f,c
 23972  005F4C  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23973  005F4E  22DA               	addwfc	fsr2h,f,c
 23974  005F50  0E25               	movlw	37
 23975  005F52  6EDF               	movwf	indf2,c
 23976                           
 23977                           ;api.c: 474: outBuffer[3] = inBuffer[1];
 23978  005F54  EE20 F001          	lfsr	2,1
 23979  005F58  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23980  005F5A  26D9               	addwf	fsr2l,f,c
 23981  005F5C  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23982  005F5E  22DA               	addwfc	fsr2h,f,c
 23983  005F60  EE10 F003          	lfsr	1,3
 23984  005F64  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23985  005F66  26E1               	addwf	fsr1l,f,c
 23986  005F68  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23987  005F6A  22E2               	addwfc	fsr1h,f,c
 23988  005F6C  CFDF FFE7          	movff	indf2,indf1
 23989                           
 23990                           ;api.c: 475: outBuffer[4] = inBuffer[2];
 23991  005F70  EE20 F002          	lfsr	2,2
 23992  005F74  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23993  005F76  26D9               	addwf	fsr2l,f,c
 23994  005F78  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23995  005F7A  22DA               	addwfc	fsr2h,f,c
 23996  005F7C  EE10 F004          	lfsr	1,4
 23997  005F80  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23998  005F82  26E1               	addwf	fsr1l,f,c
 23999  005F84  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 24000  005F86  22E2               	addwfc	fsr1h,f,c
 24001  005F88  CFDF FFE7          	movff	indf2,indf1
 24002                           
 24003                           ;api.c: 478: start = inBuffer[1];
 24004  005F8C  EE20 F001          	lfsr	2,1
 24005  005F90  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 24006  005F92  26D9               	addwf	fsr2l,f,c
 24007  005F94  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 24008  005F96  22DA               	addwfc	fsr2h,f,c
 24009  005F98  50DF               	movf	indf2,w,c
 24010  005F9A  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 24011  005F9C  502F               	movf	??__fill_buffer_read_buffer,w,c
 24012  005F9E  6E31               	movwf	__fill_buffer_read_buffer@start,c
 24013  005FA0  6A32               	clrf	__fill_buffer_read_buffer@start+1,c
 24014                           
 24015                           ;api.c: 479: start <<= 8;
 24016  005FA2  5031               	movf	__fill_buffer_read_buffer@start,w,c
 24017  005FA4  6E32               	movwf	__fill_buffer_read_buffer@start+1,c
 24018  005FA6  6A31               	clrf	__fill_buffer_read_buffer@start,c
 24019                           
 24020                           ;api.c: 480: start |= inBuffer[2];
 24021  005FA8  EE20 F002          	lfsr	2,2
 24022  005FAC  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 24023  005FAE  26D9               	addwf	fsr2l,f,c
 24024  005FB0  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 24025  005FB2  22DA               	addwfc	fsr2h,f,c
 24026  005FB4  50DF               	movf	indf2,w,c
 24027  005FB6  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 24028  005FB8  502F               	movf	??__fill_buffer_read_buffer,w,c
 24029  005FBA  1231               	iorwf	__fill_buffer_read_buffer@start,f,c
 24030                           
 24031                           ;api.c: 483: data_length = 512 - start;
 24032  005FBC  C031  F02F         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 24033  005FC0  C032  F030         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 24034  005FC4  1E2F               	comf	??__fill_buffer_read_buffer,f,c
 24035  005FC6  1E30               	comf	??__fill_buffer_read_buffer+1,f,c
 24036  005FC8  4A2F               	infsnz	??__fill_buffer_read_buffer,f,c
 24037  005FCA  2A30               	incf	??__fill_buffer_read_buffer+1,f,c
 24038  005FCC  0E00               	movlw	0
 24039  005FCE  242F               	addwf	??__fill_buffer_read_buffer,w,c
 24040  005FD0  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 24041  005FD2  0E02               	movlw	2
 24042  005FD4  2030               	addwfc	??__fill_buffer_read_buffer+1,w,c
 24043  005FD6  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 24044                           
 24045                           ;api.c: 484: if(data_length>54)
 24046  005FD8  5034               	movf	__fill_buffer_read_buffer@data_length+1,w,c
 24047  005FDA  E104               	bnz	u13240
 24048  005FDC  0E37               	movlw	55
 24049  005FDE  5C33               	subwf	__fill_buffer_read_buffer@data_length,w,c
 24050  005FE0  A0D8               	btfss	status,0,c
 24051  005FE2  D004               	goto	l2838
 24052  005FE4                     u13240:
 24053                           
 24054                           ;api.c: 485: {;api.c: 487: data_length = 58;
 24055  005FE4  0E00               	movlw	0
 24056  005FE6  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 24057  005FE8  0E3A               	movlw	58
 24058  005FEA  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 24059  005FEC                     l2838:
 24060                           
 24061                           ;api.c: 488: };api.c: 491: outBuffer[5] = (uint8_t) data_length;
 24062  005FEC  EE20 F005          	lfsr	2,5
 24063  005FF0  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 24064  005FF2  26D9               	addwf	fsr2l,f,c
 24065  005FF4  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 24066  005FF6  22DA               	addwfc	fsr2h,f,c
 24067  005FF8  C033  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 24068                           
 24069                           ;api.c: 494: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 24070  005FFC  C031  F025         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 24071  006000  C032  F026         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 24072  006004  C033  F027         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 24073  006008  C034  F028         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 24074  00600C  0E06               	movlw	6
 24075  00600E  242D               	addwf	__fill_buffer_read_buffer@outBuffer,w,c
 24076  006010  6E29               	movwf	fat_read_from_buffer@data,c
 24077  006012  0E00               	movlw	0
 24078  006014  202E               	addwfc	__fill_buffer_read_buffer@outBuffer+1,w,c
 24079  006016  6E2A               	movwf	fat_read_from_buffer@data+1,c
 24080  006018  EC27  F04F         	call	_fat_read_from_buffer	;wreg free
 24081  00601C  0012               	return		;funcret
 24082  00601E                     __end_of__fill_buffer_read_buffer:
 24083                           	opt stack 0
 24084                           tosu	equ	0xFFF
 24085                           tosh	equ	0xFFE
 24086                           tosl	equ	0xFFD
 24087                           pclath	equ	0xFFA
 24088                           tblptru	equ	0xFF8
 24089                           tblptrh	equ	0xFF7
 24090                           tblptrl	equ	0xFF6
 24091                           tablat	equ	0xFF5
 24092                           prodh	equ	0xFF4
 24093                           prodl	equ	0xFF3
 24094                           intcon	equ	0xFF2
 24095                           intcon2	equ	0xFF1
 24096                           intcon3	equ	0xFF0
 24097                           indf0	equ	0xFEF
 24098                           postinc0	equ	0xFEE
 24099                           fsr0h	equ	0xFEA
 24100                           fsr0l	equ	0xFE9
 24101                           wreg	equ	0xFE8
 24102                           indf1	equ	0xFE7
 24103                           postdec1	equ	0xFE5
 24104                           plusw1	equ	0xFE3
 24105                           fsr1h	equ	0xFE2
 24106                           fsr1l	equ	0xFE1
 24107                           indf2	equ	0xFDF
 24108                           postinc2	equ	0xFDE
 24109                           postdec2	equ	0xFDD
 24110                           plusw2	equ	0xFDB
 24111                           fsr2h	equ	0xFDA
 24112                           fsr2l	equ	0xFD9
 24113                           status	equ	0xFD8
 24114                           
 24115 ;; *************** function _fat_read_from_buffer *****************
 24116 ;; Defined at:
 24117 ;;		line 1498 in file "fat16.c"
 24118 ;; Parameters:    Size  Location     Type
 24119 ;;  start           2   36[COMRAM] unsigned int 
 24120 ;;  length          2   38[COMRAM] unsigned int 
 24121 ;;  data            2   40[COMRAM] PTR unsigned char 
 24122 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 24123 ;; Auto vars:     Size  Location     Type
 24124 ;;		None
 24125 ;; Return value:  Size  Location     Type
 24126 ;;                  1    wreg      void 
 24127 ;; Registers used:
 24128 ;;		wreg, status,2, status,0, cstack
 24129 ;; Tracked objects:
 24130 ;;		On entry : 0/0
 24131 ;;		On exit  : 0/0
 24132 ;;		Unchanged: 0/0
 24133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24134 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24138 ;;Total ram usage:        6 bytes
 24139 ;; Hardware stack levels used:    1
 24140 ;; Hardware stack levels required when called:    5
 24141 ;; This function calls:
 24142 ;;		_flash_read_from_buffer
 24143 ;; This function is called by:
 24144 ;;		__fill_buffer_read_buffer
 24145 ;; This function uses a non-reentrant model
 24146 ;;
 24147                           
 24148                           	psect	text107
 24149  009E4E                     __ptext107:
 24150                           	opt stack 0
 24151  009E4E                     _fat_read_from_buffer:
 24152                           	opt stack 23
 24153                           
 24154                           ;fat16.c: 1500: flash_read_from_buffer(start, length, data);
 24155                           
 24156                           ;incstack = 0
 24157  009E4E  C025  F01F         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 24158  009E52  C026  F020         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 24159  009E56  C027  F021         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 24160  009E5A  C028  F022         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 24161  009E5E  C029  F023         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 24162  009E62  C02A  F024         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 24163  009E66  EC53  F04D         	call	_flash_read_from_buffer	;wreg free
 24164  009E6A  0012               	return		;funcret
 24165  009E6C                     __end_of_fat_read_from_buffer:
 24166                           	opt stack 0
 24167                           tosu	equ	0xFFF
 24168                           tosh	equ	0xFFE
 24169                           tosl	equ	0xFFD
 24170                           pclath	equ	0xFFA
 24171                           tblptru	equ	0xFF8
 24172                           tblptrh	equ	0xFF7
 24173                           tblptrl	equ	0xFF6
 24174                           tablat	equ	0xFF5
 24175                           prodh	equ	0xFF4
 24176                           prodl	equ	0xFF3
 24177                           intcon	equ	0xFF2
 24178                           intcon2	equ	0xFF1
 24179                           intcon3	equ	0xFF0
 24180                           indf0	equ	0xFEF
 24181                           postinc0	equ	0xFEE
 24182                           fsr0h	equ	0xFEA
 24183                           fsr0l	equ	0xFE9
 24184                           wreg	equ	0xFE8
 24185                           indf1	equ	0xFE7
 24186                           postdec1	equ	0xFE5
 24187                           plusw1	equ	0xFE3
 24188                           fsr1h	equ	0xFE2
 24189                           fsr1l	equ	0xFE1
 24190                           indf2	equ	0xFDF
 24191                           postinc2	equ	0xFDE
 24192                           postdec2	equ	0xFDD
 24193                           plusw2	equ	0xFDB
 24194                           fsr2h	equ	0xFDA
 24195                           fsr2l	equ	0xFD9
 24196                           status	equ	0xFD8
 24197                           
 24198 ;; *************** function _flash_read_from_buffer *****************
 24199 ;; Defined at:
 24200 ;;		line 546 in file "flash.c"
 24201 ;; Parameters:    Size  Location     Type
 24202 ;;  start           2   30[COMRAM] unsigned int 
 24203 ;;  length          2   32[COMRAM] unsigned int 
 24204 ;;  data            2   34[COMRAM] PTR unsigned char 
 24205 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 24206 ;; Auto vars:     Size  Location     Type
 24207 ;;		None
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  1    wreg      void 
 24210 ;; Registers used:
 24211 ;;		wreg, status,2, status,0, cstack
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/0
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24217 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24220 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24221 ;;Total ram usage:        6 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:    4
 24224 ;; This function calls:
 24225 ;;		__flash_buffer_read
 24226 ;;		_spi_set_configuration
 24227 ;; This function is called by:
 24228 ;;		_fat_read_from_buffer
 24229 ;; This function uses a non-reentrant model
 24230 ;;
 24231                           
 24232                           	psect	text108
 24233  009AA6                     __ptext108:
 24234                           	opt stack 0
 24235  009AA6                     _flash_read_from_buffer:
 24236                           	opt stack 23
 24237                           
 24238                           ;flash.c: 549: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 24239                           
 24240                           ;incstack = 0
 24241  009AA6  0E00               	movlw	0
 24242  009AA8  EC06  F02A         	call	_spi_set_configuration
 24243                           
 24244                           ;flash.c: 551: _flash_buffer_read(start, length, data, FLASH_BUFFER_2);
 24245  009AAC  C01F  F014         	movff	flash_read_from_buffer@start,__flash_buffer_read@start
 24246  009AB0  C020  F015         	movff	flash_read_from_buffer@start+1,__flash_buffer_read@start+1
 24247  009AB4  C021  F016         	movff	flash_read_from_buffer@length,__flash_buffer_read@length
 24248  009AB8  C022  F017         	movff	flash_read_from_buffer@length+1,__flash_buffer_read@length+1
 24249  009ABC  C023  F018         	movff	flash_read_from_buffer@data,__flash_buffer_read@data
 24250  009AC0  C024  F019         	movff	flash_read_from_buffer@data+1,__flash_buffer_read@data+1
 24251  009AC4  0E01               	movlw	1
 24252  009AC6  6E1A               	movwf	__flash_buffer_read@buffer,c
 24253  009AC8  ECE3  F049         	call	__flash_buffer_read	;wreg free
 24254                           
 24255                           ;flash.c: 554: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24256  009ACC  0E01               	movlw	1
 24257  009ACE  EC06  F02A         	call	_spi_set_configuration
 24258  009AD2  0012               	return		;funcret
 24259  009AD4                     __end_of_flash_read_from_buffer:
 24260                           	opt stack 0
 24261                           tosu	equ	0xFFF
 24262                           tosh	equ	0xFFE
 24263                           tosl	equ	0xFFD
 24264                           pclath	equ	0xFFA
 24265                           tblptru	equ	0xFF8
 24266                           tblptrh	equ	0xFF7
 24267                           tblptrl	equ	0xFF6
 24268                           tablat	equ	0xFF5
 24269                           prodh	equ	0xFF4
 24270                           prodl	equ	0xFF3
 24271                           intcon	equ	0xFF2
 24272                           intcon2	equ	0xFF1
 24273                           intcon3	equ	0xFF0
 24274                           indf0	equ	0xFEF
 24275                           postinc0	equ	0xFEE
 24276                           fsr0h	equ	0xFEA
 24277                           fsr0l	equ	0xFE9
 24278                           wreg	equ	0xFE8
 24279                           indf1	equ	0xFE7
 24280                           postdec1	equ	0xFE5
 24281                           plusw1	equ	0xFE3
 24282                           fsr1h	equ	0xFE2
 24283                           fsr1l	equ	0xFE1
 24284                           indf2	equ	0xFDF
 24285                           postinc2	equ	0xFDE
 24286                           postdec2	equ	0xFDD
 24287                           plusw2	equ	0xFDB
 24288                           fsr2h	equ	0xFDA
 24289                           fsr2l	equ	0xFD9
 24290                           status	equ	0xFD8
 24291                           
 24292 ;; *************** function __flash_buffer_read *****************
 24293 ;; Defined at:
 24294 ;;		line 332 in file "flash.c"
 24295 ;; Parameters:    Size  Location     Type
 24296 ;;  start           2   19[COMRAM] unsigned int 
 24297 ;;  length          2   21[COMRAM] unsigned int 
 24298 ;;  data            2   23[COMRAM] PTR unsigned char 
 24299 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 24300 ;;  buffer          1   25[COMRAM] enum E6906
 24301 ;; Auto vars:     Size  Location     Type
 24302 ;;  command         4   26[COMRAM] unsigned char [4]
 24303 ;; Return value:  Size  Location     Type
 24304 ;;                  1    wreg      void 
 24305 ;; Registers used:
 24306 ;;		wreg, status,2, status,0, cstack
 24307 ;; Tracked objects:
 24308 ;;		On entry : 0/0
 24309 ;;		On exit  : 0/0
 24310 ;;		Unchanged: 0/0
 24311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24312 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24315 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24316 ;;Total ram usage:       11 bytes
 24317 ;; Hardware stack levels used:    1
 24318 ;; Hardware stack levels required when called:    3
 24319 ;; This function calls:
 24320 ;;		__flash_is_busy
 24321 ;;		_spi_tx_rx
 24322 ;; This function is called by:
 24323 ;;		_flash_read_from_buffer
 24324 ;; This function uses a non-reentrant model
 24325 ;;
 24326                           
 24327                           	psect	text109
 24328  0093C6                     __ptext109:
 24329                           	opt stack 0
 24330  0093C6                     __flash_buffer_read:
 24331                           	opt stack 23
 24332                           
 24333                           ;flash.c: 334: uint8_t command[4];;flash.c: 337: while(_flash_is_busy());
 24334                           
 24335                           ;incstack = 0
 24336  0093C6  ECF6  F04E         	call	__flash_is_busy	;wreg free
 24337  0093CA  0900               	iorlw	0
 24338  0093CC  A4D8               	btfss	status,2,c
 24339  0093CE  D7FB               	goto	__flash_buffer_read
 24340                           
 24341                           ;flash.c: 340: if(buffer==FLASH_BUFFER_1)
 24342  0093D0  501A               	movf	__flash_buffer_read@buffer,w,c
 24343  0093D2  A4D8               	btfss	status,2,c
 24344  0093D4  D002               	goto	l1846
 24345                           
 24346                           ;flash.c: 341: command[0] = 0xD1;
 24347  0093D6  0ED1               	movlw	209
 24348  0093D8  6E1B               	movwf	__flash_buffer_read@command,c
 24349  0093DA                     l1846:
 24350                           
 24351                           ;flash.c: 342: if(buffer==FLASH_BUFFER_2)
 24352  0093DA  041A               	decf	__flash_buffer_read@buffer,w,c
 24353  0093DC  A4D8               	btfss	status,2,c
 24354  0093DE  D002               	goto	l1847
 24355                           
 24356                           ;flash.c: 343: command[0] = 0xD3;
 24357  0093E0  0ED3               	movlw	211
 24358  0093E2  6E1B               	movwf	__flash_buffer_read@command,c
 24359  0093E4                     l1847:
 24360                           
 24361                           ;flash.c: 344: command[1] = 0x00;
 24362  0093E4  0E00               	movlw	0
 24363  0093E6  6E1C               	movwf	__flash_buffer_read@command+1,c
 24364                           
 24365                           ;flash.c: 345: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 24366  0093E8  5015               	movf	__flash_buffer_read@start+1,w,c
 24367  0093EA  6E1D               	movwf	__flash_buffer_read@command+2,c
 24368                           
 24369                           ;flash.c: 346: command[3] = ((unsigned char)((start)&0xFF));
 24370  0093EC  C014  F01E         	movff	__flash_buffer_read@start,__flash_buffer_read@command+3
 24371                           
 24372                           ;flash.c: 349: spi_tx_rx(command, 4, data, length);
 24373  0093F0  0E1B               	movlw	low __flash_buffer_read@command
 24374  0093F2  6E01               	movwf	spi_tx_rx@command,c
 24375  0093F4  0E00               	movlw	high __flash_buffer_read@command
 24376  0093F6  6E02               	movwf	spi_tx_rx@command+1,c
 24377  0093F8  0E00               	movlw	0
 24378  0093FA  6E04               	movwf	spi_tx_rx@command_length+1,c
 24379  0093FC  0E04               	movlw	4
 24380  0093FE  6E03               	movwf	spi_tx_rx@command_length,c
 24381  009400  C018  F005         	movff	__flash_buffer_read@data,spi_tx_rx@data
 24382  009404  C019  F006         	movff	__flash_buffer_read@data+1,spi_tx_rx@data+1
 24383  009408  C016  F007         	movff	__flash_buffer_read@length,spi_tx_rx@data_length
 24384  00940C  C017  F008         	movff	__flash_buffer_read@length+1,spi_tx_rx@data_length+1
 24385  009410  EC2E  F041         	call	_spi_tx_rx	;wreg free
 24386  009414  0012               	return		;funcret
 24387  009416                     __end_of__flash_buffer_read:
 24388                           	opt stack 0
 24389                           tosu	equ	0xFFF
 24390                           tosh	equ	0xFFE
 24391                           tosl	equ	0xFFD
 24392                           pclath	equ	0xFFA
 24393                           tblptru	equ	0xFF8
 24394                           tblptrh	equ	0xFF7
 24395                           tblptrl	equ	0xFF6
 24396                           tablat	equ	0xFF5
 24397                           prodh	equ	0xFF4
 24398                           prodl	equ	0xFF3
 24399                           intcon	equ	0xFF2
 24400                           intcon2	equ	0xFF1
 24401                           intcon3	equ	0xFF0
 24402                           indf0	equ	0xFEF
 24403                           postinc0	equ	0xFEE
 24404                           fsr0h	equ	0xFEA
 24405                           fsr0l	equ	0xFE9
 24406                           wreg	equ	0xFE8
 24407                           indf1	equ	0xFE7
 24408                           postdec1	equ	0xFE5
 24409                           plusw1	equ	0xFE3
 24410                           fsr1h	equ	0xFE2
 24411                           fsr1l	equ	0xFE1
 24412                           indf2	equ	0xFDF
 24413                           postinc2	equ	0xFDE
 24414                           postdec2	equ	0xFDD
 24415                           plusw2	equ	0xFDB
 24416                           fsr2h	equ	0xFDA
 24417                           fsr2l	equ	0xFD9
 24418                           status	equ	0xFD8
 24419                           
 24420 ;; *************** function __fill_buffer_get_status *****************
 24421 ;; Defined at:
 24422 ;;		line 223 in file "api.c"
 24423 ;; Parameters:    Size  Location     Type
 24424 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24425 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 24426 ;; Auto vars:     Size  Location     Type
 24427 ;;		None
 24428 ;; Return value:  Size  Location     Type
 24429 ;;                  1    wreg      void 
 24430 ;; Registers used:
 24431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24432 ;; Tracked objects:
 24433 ;;		On entry : 0/0
 24434 ;;		On exit  : 0/0
 24435 ;;		Unchanged: 0/0
 24436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24441 ;;Total ram usage:        2 bytes
 24442 ;; Hardware stack levels used:    1
 24443 ;; Hardware stack levels required when called:    4
 24444 ;; This function calls:
 24445 ;;		_flash_is_busy
 24446 ;;		_ui_get_status
 24447 ;; This function is called by:
 24448 ;;		_api_prepare
 24449 ;; This function uses a non-reentrant model
 24450 ;;
 24451                           
 24452                           	psect	text110
 24453  006586                     __ptext110:
 24454                           	opt stack 0
 24455  006586                     __fill_buffer_get_status:
 24456                           	opt stack 25
 24457                           
 24458                           ;api.c: 226: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24459                           
 24460                           ;incstack = 0
 24461  006586  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24462  00658A  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24463  00658E  0E10               	movlw	16
 24464  006590  6EDF               	movwf	indf2,c
 24465                           
 24466                           ;api.c: 229: outBuffer[1] = 0xC125 >> 8;
 24467  006592  EE20 F001          	lfsr	2,1
 24468  006596  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24469  006598  26D9               	addwf	fsr2l,f,c
 24470  00659A  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24471  00659C  22DA               	addwfc	fsr2h,f,c
 24472  00659E  0EC1               	movlw	193
 24473  0065A0  6EDF               	movwf	indf2,c
 24474                           
 24475                           ;api.c: 230: outBuffer[2] = (uint8_t) 0xC125;
 24476  0065A2  EE20 F002          	lfsr	2,2
 24477  0065A6  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24478  0065A8  26D9               	addwf	fsr2l,f,c
 24479  0065AA  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24480  0065AC  22DA               	addwfc	fsr2h,f,c
 24481  0065AE  0E25               	movlw	37
 24482  0065B0  6EDF               	movwf	indf2,c
 24483                           
 24484                           ;api.c: 233: outBuffer[3] = (uint8_t) flash_is_busy();
 24485  0065B2  EE20 F003          	lfsr	2,3
 24486  0065B6  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24487  0065B8  26D9               	addwf	fsr2l,f,c
 24488  0065BA  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24489  0065BC  22DA               	addwfc	fsr2h,f,c
 24490  0065BE  ECC6  F04F         	call	_flash_is_busy	;wreg free
 24491  0065C2  6EDF               	movwf	indf2,c
 24492                           
 24493                           ;api.c: 236: outBuffer[4] = 0x00;
 24494  0065C4  EE20 F004          	lfsr	2,4
 24495  0065C8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24496  0065CA  26D9               	addwf	fsr2l,f,c
 24497  0065CC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24498  0065CE  22DA               	addwfc	fsr2h,f,c
 24499  0065D0  0E00               	movlw	0
 24500  0065D2  6EDF               	movwf	indf2,c
 24501                           
 24502                           ;api.c: 237: outBuffer[5] = 0x04;
 24503  0065D4  EE20 F005          	lfsr	2,5
 24504  0065D8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24505  0065DA  26D9               	addwf	fsr2l,f,c
 24506  0065DC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24507  0065DE  22DA               	addwfc	fsr2h,f,c
 24508  0065E0  0E04               	movlw	4
 24509  0065E2  6EDF               	movwf	indf2,c
 24510                           
 24511                           ;api.c: 238: outBuffer[6] = 0x02;
 24512  0065E4  EE20 F006          	lfsr	2,6
 24513  0065E8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24514  0065EA  26D9               	addwf	fsr2l,f,c
 24515  0065EC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24516  0065EE  22DA               	addwfc	fsr2h,f,c
 24517  0065F0  0E02               	movlw	2
 24518  0065F2  6EDF               	movwf	indf2,c
 24519                           
 24520                           ;api.c: 241: outBuffer[7] = ui_get_status();
 24521  0065F4  EE20 F007          	lfsr	2,7
 24522  0065F8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24523  0065FA  26D9               	addwf	fsr2l,f,c
 24524  0065FC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24525  0065FE  22DA               	addwfc	fsr2h,f,c
 24526  006600  EC94  F050         	call	_ui_get_status	;wreg free
 24527  006604  6EDF               	movwf	indf2,c
 24528                           
 24529                           ;api.c: 244: outBuffer[8] = os.encoderCount;
 24530  006606  EE20 F008          	lfsr	2,8
 24531  00660A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24532  00660C  26D9               	addwf	fsr2l,f,c
 24533  00660E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24534  006610  22DA               	addwfc	fsr2h,f,c
 24535  006612  C0C1  FFDF         	movff	_os,indf2
 24536                           
 24537                           ;api.c: 245: outBuffer[9] = os.buttonCount;
 24538  006616  EE20 F009          	lfsr	2,9
 24539  00661A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24540  00661C  26D9               	addwf	fsr2l,f,c
 24541  00661E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24542  006620  22DA               	addwfc	fsr2h,f,c
 24543  006622  C0C2  FFDF         	movff	_os+1,indf2
 24544                           
 24545                           ;api.c: 246: outBuffer[10] = os.timeSlot;
 24546  006626  EE20 F00A          	lfsr	2,10
 24547  00662A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24548  00662C  26D9               	addwf	fsr2l,f,c
 24549  00662E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24550  006630  22DA               	addwfc	fsr2h,f,c
 24551  006632  C0C3  FFDF         	movff	_os+2,indf2
 24552                           
 24553                           ;api.c: 247: outBuffer[11] = os.done;
 24554  006636  EE20 F00B          	lfsr	2,11
 24555  00663A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24556  00663C  26D9               	addwf	fsr2l,f,c
 24557  00663E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24558  006640  22DA               	addwfc	fsr2h,f,c
 24559  006642  C0C4  FFDF         	movff	_os+3,indf2
 24560                           
 24561                           ;api.c: 248: outBuffer[12] = os.bootloader_mode;
 24562  006646  EE20 F00C          	lfsr	2,12
 24563  00664A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24564  00664C  26D9               	addwf	fsr2l,f,c
 24565  00664E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24566  006650  22DA               	addwfc	fsr2h,f,c
 24567  006652  C0C5  FFDF         	movff	_os+4,indf2
 24568                           
 24569                           ;api.c: 249: outBuffer[13] = os.display_mode;
 24570  006656  EE20 F00D          	lfsr	2,13
 24571  00665A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24572  00665C  26D9               	addwf	fsr2l,f,c
 24573  00665E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24574  006660  22DA               	addwfc	fsr2h,f,c
 24575  006662  C0C6  FFDF         	movff	_os+5,indf2
 24576  006666  0012               	return		;funcret
 24577  006668                     __end_of__fill_buffer_get_status:
 24578                           	opt stack 0
 24579                           tosu	equ	0xFFF
 24580                           tosh	equ	0xFFE
 24581                           tosl	equ	0xFFD
 24582                           pclath	equ	0xFFA
 24583                           tblptru	equ	0xFF8
 24584                           tblptrh	equ	0xFF7
 24585                           tblptrl	equ	0xFF6
 24586                           tablat	equ	0xFF5
 24587                           prodh	equ	0xFF4
 24588                           prodl	equ	0xFF3
 24589                           intcon	equ	0xFF2
 24590                           intcon2	equ	0xFF1
 24591                           intcon3	equ	0xFF0
 24592                           indf0	equ	0xFEF
 24593                           postinc0	equ	0xFEE
 24594                           fsr0h	equ	0xFEA
 24595                           fsr0l	equ	0xFE9
 24596                           wreg	equ	0xFE8
 24597                           indf1	equ	0xFE7
 24598                           postdec1	equ	0xFE5
 24599                           plusw1	equ	0xFE3
 24600                           fsr1h	equ	0xFE2
 24601                           fsr1l	equ	0xFE1
 24602                           indf2	equ	0xFDF
 24603                           postinc2	equ	0xFDE
 24604                           postdec2	equ	0xFDD
 24605                           plusw2	equ	0xFDB
 24606                           fsr2h	equ	0xFDA
 24607                           fsr2l	equ	0xFD9
 24608                           status	equ	0xFD8
 24609                           
 24610 ;; *************** function _flash_is_busy *****************
 24611 ;; Defined at:
 24612 ;;		line 378 in file "flash.c"
 24613 ;; Parameters:    Size  Location     Type
 24614 ;;		None
 24615 ;; Auto vars:     Size  Location     Type
 24616 ;;  result          1   19[COMRAM] unsigned char 
 24617 ;; Return value:  Size  Location     Type
 24618 ;;                  1    wreg      unsigned char 
 24619 ;; Registers used:
 24620 ;;		wreg, status,2, status,0, cstack
 24621 ;; Tracked objects:
 24622 ;;		On entry : 0/0
 24623 ;;		On exit  : 0/0
 24624 ;;		Unchanged: 0/0
 24625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24630 ;;Total ram usage:        1 bytes
 24631 ;; Hardware stack levels used:    1
 24632 ;; Hardware stack levels required when called:    3
 24633 ;; This function calls:
 24634 ;;		__flash_is_busy
 24635 ;;		_spi_set_configuration
 24636 ;; This function is called by:
 24637 ;;		__fill_buffer_get_status
 24638 ;; This function uses a non-reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text111
 24642  009F8C                     __ptext111:
 24643                           	opt stack 0
 24644  009F8C                     _flash_is_busy:
 24645                           	opt stack 25
 24646                           
 24647                           ;flash.c: 380: uint8_t result;;flash.c: 383: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 24648                           
 24649                           ;incstack = 0
 24650  009F8C  0E00               	movlw	0
 24651  009F8E  EC06  F02A         	call	_spi_set_configuration
 24652                           
 24653                           ;flash.c: 386: result = _flash_is_busy();
 24654  009F92  ECF6  F04E         	call	__flash_is_busy	;wreg free
 24655  009F96  6E14               	movwf	flash_is_busy@result,c
 24656                           
 24657                           ;flash.c: 389: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24658  009F98  0E01               	movlw	1
 24659  009F9A  EC06  F02A         	call	_spi_set_configuration
 24660                           
 24661                           ;flash.c: 392: return result;
 24662  009F9E  5014               	movf	flash_is_busy@result,w,c
 24663  009FA0  0012               	return	
 24664  009FA2                     __end_of_flash_is_busy:
 24665                           	opt stack 0
 24666                           tosu	equ	0xFFF
 24667                           tosh	equ	0xFFE
 24668                           tosl	equ	0xFFD
 24669                           pclath	equ	0xFFA
 24670                           tblptru	equ	0xFF8
 24671                           tblptrh	equ	0xFF7
 24672                           tblptrl	equ	0xFF6
 24673                           tablat	equ	0xFF5
 24674                           prodh	equ	0xFF4
 24675                           prodl	equ	0xFF3
 24676                           intcon	equ	0xFF2
 24677                           intcon2	equ	0xFF1
 24678                           intcon3	equ	0xFF0
 24679                           indf0	equ	0xFEF
 24680                           postinc0	equ	0xFEE
 24681                           fsr0h	equ	0xFEA
 24682                           fsr0l	equ	0xFE9
 24683                           wreg	equ	0xFE8
 24684                           indf1	equ	0xFE7
 24685                           postdec1	equ	0xFE5
 24686                           plusw1	equ	0xFE3
 24687                           fsr1h	equ	0xFE2
 24688                           fsr1l	equ	0xFE1
 24689                           indf2	equ	0xFDF
 24690                           postinc2	equ	0xFDE
 24691                           postdec2	equ	0xFDD
 24692                           plusw2	equ	0xFDB
 24693                           fsr2h	equ	0xFDA
 24694                           fsr2l	equ	0xFD9
 24695                           status	equ	0xFD8
 24696                           
 24697 ;; *************** function __fill_buffer_get_file_details *****************
 24698 ;; Defined at:
 24699 ;;		line 375 in file "api.c"
 24700 ;; Parameters:    Size  Location     Type
 24701 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 24702 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 24703 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 24704 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 24705 ;; Auto vars:     Size  Location     Type
 24706 ;;  file_number     1   60[COMRAM] unsigned char 
 24707 ;; Return value:  Size  Location     Type
 24708 ;;                  1    wreg      void 
 24709 ;; Registers used:
 24710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24711 ;; Tracked objects:
 24712 ;;		On entry : 0/0
 24713 ;;		On exit  : 0/0
 24714 ;;		Unchanged: 0/0
 24715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24719 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24720 ;;Total ram usage:        6 bytes
 24721 ;; Hardware stack levels used:    1
 24722 ;; Hardware stack levels required when called:    6
 24723 ;; This function calls:
 24724 ;;		_fat_get_file_information
 24725 ;; This function is called by:
 24726 ;;		_api_prepare
 24727 ;; This function uses a non-reentrant model
 24728 ;;
 24729                           
 24730                           	psect	text112
 24731  008786                     __ptext112:
 24732                           	opt stack 0
 24733  008786                     __fill_buffer_get_file_details:
 24734                           	opt stack 23
 24735                           
 24736                           ;api.c: 377: uint8_t file_number = inBuffer[1];
 24737                           
 24738                           ;incstack = 0
 24739  008786  EE20 F001          	lfsr	2,1
 24740  00878A  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 24741  00878C  26D9               	addwf	fsr2l,f,c
 24742  00878E  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 24743  008790  22DA               	addwfc	fsr2h,f,c
 24744  008792  50DF               	movf	indf2,w,c
 24745  008794  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 24746                           
 24747                           ;api.c: 380: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 24748  008796  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 24749  00879A  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 24750  00879E  0E80               	movlw	128
 24751  0087A0  6EDF               	movwf	indf2,c
 24752                           
 24753                           ;api.c: 383: outBuffer[1] = 0xC125 >> 8;
 24754  0087A2  EE20 F001          	lfsr	2,1
 24755  0087A6  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24756  0087A8  26D9               	addwf	fsr2l,f,c
 24757  0087AA  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24758  0087AC  22DA               	addwfc	fsr2h,f,c
 24759  0087AE  0EC1               	movlw	193
 24760  0087B0  6EDF               	movwf	indf2,c
 24761                           
 24762                           ;api.c: 384: outBuffer[2] = (uint8_t) 0xC125;
 24763  0087B2  EE20 F002          	lfsr	2,2
 24764  0087B6  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24765  0087B8  26D9               	addwf	fsr2l,f,c
 24766  0087BA  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24767  0087BC  22DA               	addwfc	fsr2h,f,c
 24768  0087BE  0E25               	movlw	37
 24769  0087C0  6EDF               	movwf	indf2,c
 24770                           
 24771                           ;api.c: 387: outBuffer[3] = file_number;
 24772  0087C2  EE20 F003          	lfsr	2,3
 24773  0087C6  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24774  0087C8  26D9               	addwf	fsr2l,f,c
 24775  0087CA  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24776  0087CC  22DA               	addwfc	fsr2h,f,c
 24777  0087CE  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 24778                           
 24779                           ;api.c: 390: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 24780  0087D2  0E05               	movlw	5
 24781  0087D4  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 24782  0087D6  6E30               	movwf	fat_get_file_information@data,c
 24783  0087D8  0E00               	movlw	0
 24784  0087DA  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 24785  0087DC  6E31               	movwf	fat_get_file_information@data+1,c
 24786  0087DE  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 24787  0087E0  ECFC  F043         	call	_fat_get_file_information
 24788  0087E4  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 24789  0087E6  EE20 F004          	lfsr	2,4
 24790  0087EA  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24791  0087EC  26D9               	addwf	fsr2l,f,c
 24792  0087EE  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24793  0087F0  22DA               	addwfc	fsr2h,f,c
 24794  0087F2  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 24795  0087F6  0012               	return		;funcret
 24796  0087F8                     __end_of__fill_buffer_get_file_details:
 24797                           	opt stack 0
 24798                           tosu	equ	0xFFF
 24799                           tosh	equ	0xFFE
 24800                           tosl	equ	0xFFD
 24801                           pclath	equ	0xFFA
 24802                           tblptru	equ	0xFF8
 24803                           tblptrh	equ	0xFF7
 24804                           tblptrl	equ	0xFF6
 24805                           tablat	equ	0xFF5
 24806                           prodh	equ	0xFF4
 24807                           prodl	equ	0xFF3
 24808                           intcon	equ	0xFF2
 24809                           intcon2	equ	0xFF1
 24810                           intcon3	equ	0xFF0
 24811                           indf0	equ	0xFEF
 24812                           postinc0	equ	0xFEE
 24813                           fsr0h	equ	0xFEA
 24814                           fsr0l	equ	0xFE9
 24815                           wreg	equ	0xFE8
 24816                           indf1	equ	0xFE7
 24817                           postdec1	equ	0xFE5
 24818                           plusw1	equ	0xFE3
 24819                           fsr1h	equ	0xFE2
 24820                           fsr1l	equ	0xFE1
 24821                           indf2	equ	0xFDF
 24822                           postinc2	equ	0xFDE
 24823                           postdec2	equ	0xFDD
 24824                           plusw2	equ	0xFDB
 24825                           fsr2h	equ	0xFDA
 24826                           fsr2l	equ	0xFD9
 24827                           status	equ	0xFD8
 24828                           
 24829 ;; *************** function __fill_buffer_get_display *****************
 24830 ;; Defined at:
 24831 ;;		line 253 in file "api.c"
 24832 ;; Parameters:    Size  Location     Type
 24833 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24834 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 24835 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;  position        1   15[COMRAM] unsigned char 
 24838 ;;  start_line      1   14[COMRAM] unsigned char 
 24839 ;;  line            1   13[COMRAM] unsigned char 
 24840 ;;  cntr            1   12[COMRAM] unsigned char 
 24841 ;; Return value:  Size  Location     Type
 24842 ;;                  1    wreg      void 
 24843 ;; Registers used:
 24844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24845 ;; Tracked objects:
 24846 ;;		On entry : 0/0
 24847 ;;		On exit  : 0/0
 24848 ;;		Unchanged: 0/0
 24849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24850 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24851 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24852 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24853 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24854 ;;Total ram usage:       12 bytes
 24855 ;; Hardware stack levels used:    1
 24856 ;; Hardware stack levels required when called:    1
 24857 ;; This function calls:
 24858 ;;		_display_get_character
 24859 ;; This function is called by:
 24860 ;;		_api_prepare
 24861 ;; This function uses a non-reentrant model
 24862 ;;
 24863                           
 24864                           	psect	text113
 24865  0076E4                     __ptext113:
 24866                           	opt stack 0
 24867  0076E4                     __fill_buffer_get_display:
 24868                           	opt stack 28
 24869                           
 24870                           ;api.c: 255: uint8_t cntr;;api.c: 256: uint8_t line;;api.c: 257: uint8_t start_line;;api
      +                          .c: 258: uint8_t position;;api.c: 261: if(secondHalf)
 24871                           
 24872                           ;incstack = 0
 24873  0076E4  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24874  0076E6  B4D8               	btfsc	status,2,c
 24875  0076E8  D006               	goto	l2804
 24876                           
 24877                           ;api.c: 262: {;api.c: 263: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24878  0076EA  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24879  0076EE  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24880  0076F2  0E12               	movlw	18
 24881  0076F4  D005               	goto	L31
 24882  0076F6                     l2804:
 24883                           
 24884                           ;api.c: 265: else;api.c: 266: {;api.c: 267: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24885  0076F6  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24886  0076FA  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24887  0076FE  0E11               	movlw	17
 24888  007700                     L31:
 24889  007700  6EDF               	movwf	indf2,c
 24890                           
 24891                           ;api.c: 268: };api.c: 271: outBuffer[1] = 0xC125 >> 8;
 24892  007702  EE20 F001          	lfsr	2,1
 24893  007706  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24894  007708  26D9               	addwf	fsr2l,f,c
 24895  00770A  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24896  00770C  22DA               	addwfc	fsr2h,f,c
 24897  00770E  0EC1               	movlw	193
 24898  007710  6EDF               	movwf	indf2,c
 24899                           
 24900                           ;api.c: 272: outBuffer[2] = (uint8_t) 0xC125;
 24901  007712  EE20 F002          	lfsr	2,2
 24902  007716  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24903  007718  26D9               	addwf	fsr2l,f,c
 24904  00771A  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24905  00771C  22DA               	addwfc	fsr2h,f,c
 24906  00771E  0E25               	movlw	37
 24907  007720  6EDF               	movwf	indf2,c
 24908                           
 24909                           ;api.c: 275: cntr = 3;
 24910  007722  0E03               	movlw	3
 24911  007724  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24912                           
 24913                           ;api.c: 276: if(secondHalf)
 24914  007726  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24915  007728  B4D8               	btfsc	status,2,c
 24916  00772A  D002               	goto	l2806
 24917                           
 24918                           ;api.c: 277: {;api.c: 278: start_line = 2;
 24919  00772C  0E02               	movlw	2
 24920  00772E  D001               	goto	L32
 24921  007730                     l2806:
 24922                           
 24923                           ;api.c: 280: else;api.c: 281: {;api.c: 282: start_line = 0;
 24924  007730  0E00               	movlw	0
 24925  007732                     L32:
 24926  007732  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24927                           
 24928                           ;api.c: 283: };api.c: 284: for(line=start_line; line<start_line+2; ++line)
 24929  007734  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24930  007738  D01A               	goto	l2808
 24931  00773A                     
 24932                           ;api.c: 285: {;api.c: 286: for(position=0; position<20; ++position)
 24933  00773A  0E00               	movlw	0
 24934  00773C  6E10               	movwf	__fill_buffer_get_display@position,c
 24935  00773E                     l15573:
 24936  00773E  0E13               	movlw	19
 24937  007740  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24938  007742  D001               	goto	l2810
 24939  007744  D013               	goto	u13280
 24940  007746                     l2810:
 24941                           
 24942                           ;api.c: 287: {;api.c: 288: outBuffer[cntr] = display_get_character(line, position);
 24943  007746  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24944  00774A  500E               	movf	__fill_buffer_get_display@line,w,c
 24945  00774C  ECEF  F04D         	call	_display_get_character
 24946  007750  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24947  007752  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24948  007754  0D01               	mullw	1
 24949  007756  50F3               	movf	prodl,w,c
 24950  007758  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24951  00775A  6ED9               	movwf	fsr2l,c
 24952  00775C  50F4               	movf	prodh,w,c
 24953  00775E  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24954  007760  6EDA               	movwf	fsr2h,c
 24955  007762  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24956                           
 24957                           ;api.c: 289: ++cntr;
 24958  007766  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24959  007768  2A10               	incf	__fill_buffer_get_display@position,f,c
 24960  00776A  D7E9               	goto	l15573
 24961  00776C                     u13280:
 24962  00776C  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24963  00776E                     l2808:
 24964  00776E  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24965  007770  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24966  007772  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24967  007774  0E02               	movlw	2
 24968  007776  2608               	addwf	??__fill_buffer_get_display,f,c
 24969  007778  0E00               	movlw	0
 24970  00777A  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24971  00777C  500E               	movf	__fill_buffer_get_display@line,w,c
 24972  00777E  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24973  007780  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24974  007782  5008               	movf	??__fill_buffer_get_display,w,c
 24975  007784  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24976  007786  500B               	movf	??__fill_buffer_get_display+3,w,c
 24977  007788  0A80               	xorlw	128
 24978  00778A  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24979  00778C  5009               	movf	??__fill_buffer_get_display+1,w,c
 24980  00778E  0A80               	xorlw	128
 24981  007790  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24982  007792  B0D8               	btfsc	status,0,c
 24983  007794  0012               	return	
 24984  007796  D7D1               	goto	l2809
 24985  007798                     __end_of__fill_buffer_get_display:
 24986                           	opt stack 0
 24987                           tosu	equ	0xFFF
 24988                           tosh	equ	0xFFE
 24989                           tosl	equ	0xFFD
 24990                           pclath	equ	0xFFA
 24991                           tblptru	equ	0xFF8
 24992                           tblptrh	equ	0xFF7
 24993                           tblptrl	equ	0xFF6
 24994                           tablat	equ	0xFF5
 24995                           prodh	equ	0xFF4
 24996                           prodl	equ	0xFF3
 24997                           intcon	equ	0xFF2
 24998                           intcon2	equ	0xFF1
 24999                           intcon3	equ	0xFF0
 25000                           indf0	equ	0xFEF
 25001                           postinc0	equ	0xFEE
 25002                           fsr0h	equ	0xFEA
 25003                           fsr0l	equ	0xFE9
 25004                           wreg	equ	0xFE8
 25005                           indf1	equ	0xFE7
 25006                           postdec1	equ	0xFE5
 25007                           plusw1	equ	0xFE3
 25008                           fsr1h	equ	0xFE2
 25009                           fsr1l	equ	0xFE1
 25010                           indf2	equ	0xFDF
 25011                           postinc2	equ	0xFDE
 25012                           postdec2	equ	0xFDD
 25013                           plusw2	equ	0xFDB
 25014                           fsr2h	equ	0xFDA
 25015                           fsr2l	equ	0xFD9
 25016                           status	equ	0xFD8
 25017                           
 25018 ;; *************** function _display_get_character *****************
 25019 ;; Defined at:
 25020 ;;		line 76 in file "display.c"
 25021 ;; Parameters:    Size  Location     Type
 25022 ;;  line            1    wreg     unsigned char 
 25023 ;;  position        1    0[COMRAM] unsigned char 
 25024 ;; Auto vars:     Size  Location     Type
 25025 ;;  line            1    3[COMRAM] unsigned char 
 25026 ;; Return value:  Size  Location     Type
 25027 ;;                  1    wreg      unsigned char 
 25028 ;; Registers used:
 25029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25030 ;; Tracked objects:
 25031 ;;		On entry : 0/0
 25032 ;;		On exit  : 0/0
 25033 ;;		Unchanged: 0/0
 25034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25035 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25039 ;;Total ram usage:        4 bytes
 25040 ;; Hardware stack levels used:    1
 25041 ;; This function calls:
 25042 ;;		Nothing
 25043 ;; This function is called by:
 25044 ;;		__fill_buffer_get_display
 25045 ;; This function uses a non-reentrant model
 25046 ;;
 25047                           
 25048                           	psect	text114
 25049  009BDE                     __ptext114:
 25050                           	opt stack 0
 25051  009BDE                     _display_get_character:
 25052                           	opt stack 28
 25053                           
 25054                           ;incstack = 0
 25055                           ;display_get_character@line stored from wreg
 25056  009BDE  6E04               	movwf	display_get_character@line,c
 25057                           
 25058                           ;display.c: 78: return display_content[line][position];
 25059  009BE0  5004               	movf	display_get_character@line,w,c
 25060  009BE2  0D14               	mullw	20
 25061  009BE4  0E00               	movlw	low _display_content
 25062  009BE6  6E02               	movwf	??_display_get_character& (0+255),c
 25063  009BE8  0E02               	movlw	high _display_content
 25064  009BEA  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25065  009BEC  50F3               	movf	prodl,w,c
 25066  009BEE  2602               	addwf	??_display_get_character,f,c
 25067  009BF0  50F4               	movf	prodh,w,c
 25068  009BF2  2203               	addwfc	??_display_get_character+1,f,c
 25069  009BF4  5001               	movf	display_get_character@position,w,c
 25070  009BF6  0D01               	mullw	1
 25071  009BF8  50F3               	movf	prodl,w,c
 25072  009BFA  2402               	addwf	??_display_get_character,w,c
 25073  009BFC  6ED9               	movwf	fsr2l,c
 25074  009BFE  50F4               	movf	prodh,w,c
 25075  009C00  2003               	addwfc	??_display_get_character+1,w,c
 25076  009C02  6EDA               	movwf	fsr2h,c
 25077  009C04  50DF               	movf	indf2,w,c
 25078  009C06  0012               	return	
 25079  009C08                     __end_of_display_get_character:
 25080                           	opt stack 0
 25081                           tosu	equ	0xFFF
 25082                           tosh	equ	0xFFE
 25083                           tosl	equ	0xFFD
 25084                           pclath	equ	0xFFA
 25085                           tblptru	equ	0xFF8
 25086                           tblptrh	equ	0xFF7
 25087                           tblptrl	equ	0xFF6
 25088                           tablat	equ	0xFF5
 25089                           prodh	equ	0xFF4
 25090                           prodl	equ	0xFF3
 25091                           intcon	equ	0xFF2
 25092                           intcon2	equ	0xFF1
 25093                           intcon3	equ	0xFF0
 25094                           indf0	equ	0xFEF
 25095                           postinc0	equ	0xFEE
 25096                           fsr0h	equ	0xFEA
 25097                           fsr0l	equ	0xFE9
 25098                           wreg	equ	0xFE8
 25099                           indf1	equ	0xFE7
 25100                           postdec1	equ	0xFE5
 25101                           plusw1	equ	0xFE3
 25102                           fsr1h	equ	0xFE2
 25103                           fsr1l	equ	0xFE1
 25104                           indf2	equ	0xFDF
 25105                           postinc2	equ	0xFDE
 25106                           postdec2	equ	0xFDD
 25107                           plusw2	equ	0xFDB
 25108                           fsr2h	equ	0xFDA
 25109                           fsr2l	equ	0xFD9
 25110                           status	equ	0xFD8
 25111                           
 25112 ;; *************** function __fill_buffer_get_configuration *****************
 25113 ;; Defined at:
 25114 ;;		line 354 in file "api.c"
 25115 ;; Parameters:    Size  Location     Type
 25116 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 25117 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 25118 ;; Auto vars:     Size  Location     Type
 25119 ;;		None
 25120 ;; Return value:  Size  Location     Type
 25121 ;;                  1    wreg      void 
 25122 ;; Registers used:
 25123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25124 ;; Tracked objects:
 25125 ;;		On entry : 0/0
 25126 ;;		On exit  : 0/0
 25127 ;;		Unchanged: 0/0
 25128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25133 ;;Total ram usage:        2 bytes
 25134 ;; Hardware stack levels used:    1
 25135 ;; This function calls:
 25136 ;;		Nothing
 25137 ;; This function is called by:
 25138 ;;		_api_prepare
 25139 ;; This function uses a non-reentrant model
 25140 ;;
 25141                           
 25142                           	psect	text115
 25143  007EBC                     __ptext115:
 25144                           	opt stack 0
 25145  007EBC                     __fill_buffer_get_configuration:
 25146                           	opt stack 29
 25147                           
 25148                           ;api.c: 357: outBuffer[0] = DATAREQUEST_GET_CONFIGURATION;
 25149                           
 25150                           ;incstack = 0
 25151  007EBC  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 25152  007EC0  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 25153  007EC4  0E15               	movlw	21
 25154  007EC6  6EDF               	movwf	indf2,c
 25155                           
 25156                           ;api.c: 360: outBuffer[1] = 0xC125 >> 8;
 25157  007EC8  EE20 F001          	lfsr	2,1
 25158  007ECC  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25159  007ECE  26D9               	addwf	fsr2l,f,c
 25160  007ED0  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25161  007ED2  22DA               	addwfc	fsr2h,f,c
 25162  007ED4  0EC1               	movlw	193
 25163  007ED6  6EDF               	movwf	indf2,c
 25164                           
 25165                           ;api.c: 361: outBuffer[2] = (uint8_t) 0xC125;
 25166  007ED8  EE20 F002          	lfsr	2,2
 25167  007EDC  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25168  007EDE  26D9               	addwf	fsr2l,f,c
 25169  007EE0  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25170  007EE2  22DA               	addwfc	fsr2h,f,c
 25171  007EE4  0E25               	movlw	37
 25172  007EE6  6EDF               	movwf	indf2,c
 25173                           
 25174                           ;api.c: 364: outBuffer[3] = os.communicationSettings.spiMode;
 25175  007EE8  EE20 F003          	lfsr	2,3
 25176  007EEC  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25177  007EEE  26D9               	addwf	fsr2l,f,c
 25178  007EF0  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25179  007EF2  22DA               	addwfc	fsr2h,f,c
 25180  007EF4  C0C7  FFDF         	movff	_os+6,indf2
 25181                           
 25182                           ;api.c: 365: outBuffer[4] = os.communicationSettings.spiFrequency;
 25183  007EF8  EE20 F004          	lfsr	2,4
 25184  007EFC  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25185  007EFE  26D9               	addwf	fsr2l,f,c
 25186  007F00  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25187  007F02  22DA               	addwfc	fsr2h,f,c
 25188  007F04  C0C8  FFDF         	movff	_os+7,indf2
 25189                           
 25190                           ;api.c: 366: outBuffer[5] = os.communicationSettings.spiPolarity;
 25191  007F08  EE20 F005          	lfsr	2,5
 25192  007F0C  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25193  007F0E  26D9               	addwf	fsr2l,f,c
 25194  007F10  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25195  007F12  22DA               	addwfc	fsr2h,f,c
 25196  007F14  C0C9  FFDF         	movff	_os+8,indf2
 25197                           
 25198                           ;api.c: 369: outBuffer[6] = os.communicationSettings.i2cMode;
 25199  007F18  EE20 F006          	lfsr	2,6
 25200  007F1C  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25201  007F1E  26D9               	addwf	fsr2l,f,c
 25202  007F20  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25203  007F22  22DA               	addwfc	fsr2h,f,c
 25204  007F24  C0CA  FFDF         	movff	_os+9,indf2
 25205                           
 25206                           ;api.c: 370: outBuffer[7] = os.communicationSettings.i2cFrequency;
 25207  007F28  EE20 F007          	lfsr	2,7
 25208  007F2C  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25209  007F2E  26D9               	addwf	fsr2l,f,c
 25210  007F30  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25211  007F32  22DA               	addwfc	fsr2h,f,c
 25212  007F34  C0CB  FFDF         	movff	_os+10,indf2
 25213                           
 25214                           ;api.c: 371: outBuffer[8] = os.communicationSettings.i2cSlaveModeSlaveAddress;
 25215  007F38  EE20 F008          	lfsr	2,8
 25216  007F3C  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25217  007F3E  26D9               	addwf	fsr2l,f,c
 25218  007F40  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25219  007F42  22DA               	addwfc	fsr2h,f,c
 25220  007F44  C0CC  FFDF         	movff	_os+11,indf2
 25221                           
 25222                           ;api.c: 372: outBuffer[9] = os.communicationSettings.i2cMasterModeSlaveAddress;
 25223  007F48  EE20 F009          	lfsr	2,9
 25224  007F4C  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25225  007F4E  26D9               	addwf	fsr2l,f,c
 25226  007F50  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25227  007F52  22DA               	addwfc	fsr2h,f,c
 25228  007F54  C0CD  FFDF         	movff	_os+12,indf2
 25229  007F58  0012               	return		;funcret
 25230  007F5A                     __end_of__fill_buffer_get_configuration:
 25231                           	opt stack 0
 25232                           tosu	equ	0xFFF
 25233                           tosh	equ	0xFFE
 25234                           tosl	equ	0xFFD
 25235                           pclath	equ	0xFFA
 25236                           tblptru	equ	0xFF8
 25237                           tblptrh	equ	0xFF7
 25238                           tblptrl	equ	0xFF6
 25239                           tablat	equ	0xFF5
 25240                           prodh	equ	0xFF4
 25241                           prodl	equ	0xFF3
 25242                           intcon	equ	0xFF2
 25243                           intcon2	equ	0xFF1
 25244                           intcon3	equ	0xFF0
 25245                           indf0	equ	0xFEF
 25246                           postinc0	equ	0xFEE
 25247                           fsr0h	equ	0xFEA
 25248                           fsr0l	equ	0xFE9
 25249                           wreg	equ	0xFE8
 25250                           indf1	equ	0xFE7
 25251                           postdec1	equ	0xFE5
 25252                           plusw1	equ	0xFE3
 25253                           fsr1h	equ	0xFE2
 25254                           fsr1l	equ	0xFE1
 25255                           indf2	equ	0xFDF
 25256                           postinc2	equ	0xFDE
 25257                           postdec2	equ	0xFDD
 25258                           plusw2	equ	0xFDB
 25259                           fsr2h	equ	0xFDA
 25260                           fsr2l	equ	0xFD9
 25261                           status	equ	0xFD8
 25262                           
 25263 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25264 ;; Defined at:
 25265 ;;		line 294 in file "api.c"
 25266 ;; Parameters:    Size  Location     Type
 25267 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25268 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 25269 ;; Auto vars:     Size  Location     Type
 25270 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25271 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25272 ;;  cntr            1   10[COMRAM] unsigned char 
 25273 ;;  data_length     1    9[COMRAM] unsigned char 
 25274 ;; Return value:  Size  Location     Type
 25275 ;;                  1    wreg      void 
 25276 ;; Registers used:
 25277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25278 ;; Tracked objects:
 25279 ;;		On entry : 0/0
 25280 ;;		On exit  : 0/0
 25281 ;;		Unchanged: 0/0
 25282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25284 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25285 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25286 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25287 ;;Total ram usage:       13 bytes
 25288 ;; Hardware stack levels used:    1
 25289 ;; Hardware stack levels required when called:    1
 25290 ;; This function calls:
 25291 ;;		_bootloader_get_entries
 25292 ;;		_bootloader_get_error
 25293 ;;		_bootloader_get_file_size
 25294 ;;		_bootloader_get_flashPagesWritten
 25295 ;;		_bootloader_get_rec_address
 25296 ;;		_bootloader_get_rec_checksum
 25297 ;;		_bootloader_get_rec_checksumCheck
 25298 ;;		_bootloader_get_rec_data
 25299 ;;		_bootloader_get_rec_dataLength
 25300 ;;		_bootloader_get_rec_recordType
 25301 ;;		_bootloader_get_total_entries
 25302 ;; This function is called by:
 25303 ;;		_api_prepare
 25304 ;; This function uses a non-reentrant model
 25305 ;;
 25306                           
 25307                           	psect	text116
 25308  002EB2                     __ptext116:
 25309                           	opt stack 0
 25310  002EB2                     __fill_buffer_get_bootloader_details:
 25311                           	opt stack 28
 25312                           
 25313                           ;api.c: 296: uint8_t cntr;;api.c: 297: uint8_t data_length;;api.c: 298: uint16_t buffer_
      +                          small;;api.c: 299: uint32_t buffer_large;;api.c: 302: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25314                           
 25315                           ;incstack = 0
 25316  002EB2  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25317  002EB6  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25318  002EBA  0E13               	movlw	19
 25319  002EBC  6EDF               	movwf	indf2,c
 25320                           
 25321                           ;api.c: 305: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25322  002EBE  EE20 F001          	lfsr	2,1
 25323  002EC2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25324  002EC4  26D9               	addwf	fsr2l,f,c
 25325  002EC6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25326  002EC8  22DA               	addwfc	fsr2h,f,c
 25327  002ECA  0EC1               	movlw	193
 25328  002ECC  6EDF               	movwf	indf2,c
 25329                           
 25330                           ;api.c: 306: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25331  002ECE  EE20 F002          	lfsr	2,2
 25332  002ED2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25333  002ED4  26D9               	addwf	fsr2l,f,c
 25334  002ED6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25335  002ED8  22DA               	addwfc	fsr2h,f,c
 25336  002EDA  0E25               	movlw	37
 25337  002EDC  6EDF               	movwf	indf2,c
 25338                           
 25339                           ;api.c: 309: buffer_large = bootloader_get_file_size();
 25340  002EDE  ECF9  F04F         	call	_bootloader_get_file_size	;wreg free
 25341  002EE2  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25342  002EE6  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25343  002EEA  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25344  002EEE  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25345                           
 25346                           ;api.c: 310: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25347  002EF2  EE20 F003          	lfsr	2,3
 25348  002EF6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25349  002EF8  26D9               	addwf	fsr2l,f,c
 25350  002EFA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25351  002EFC  22DA               	addwfc	fsr2h,f,c
 25352  002EFE  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25353  002F00  6EDF               	movwf	indf2,c
 25354                           
 25355                           ;api.c: 311: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25356  002F02  EE20 F004          	lfsr	2,4
 25357  002F06  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25358  002F08  26D9               	addwf	fsr2l,f,c
 25359  002F0A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25360  002F0C  22DA               	addwfc	fsr2h,f,c
 25361  002F0E  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25362                           
 25363                           ;api.c: 312: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25364  002F12  EE20 F005          	lfsr	2,5
 25365  002F16  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25366  002F18  26D9               	addwf	fsr2l,f,c
 25367  002F1A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25368  002F1C  22DA               	addwfc	fsr2h,f,c
 25369  002F1E  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25370  002F20  6EDF               	movwf	indf2,c
 25371                           
 25372                           ;api.c: 313: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25373  002F22  EE20 F006          	lfsr	2,6
 25374  002F26  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25375  002F28  26D9               	addwf	fsr2l,f,c
 25376  002F2A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25377  002F2C  22DA               	addwfc	fsr2h,f,c
 25378  002F2E  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25379                           
 25380                           ;api.c: 315: buffer_small = bootloader_get_entries();
 25381  002F32  EC63  F050         	call	_bootloader_get_entries	;wreg free
 25382  002F36  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25383  002F3A  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25384                           
 25385                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25386  002F3E  EE20 F007          	lfsr	2,7
 25387  002F42  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25388  002F44  26D9               	addwf	fsr2l,f,c
 25389  002F46  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25390  002F48  22DA               	addwfc	fsr2h,f,c
 25391  002F4A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25392  002F4C  6EDF               	movwf	indf2,c
 25393                           
 25394                           ;api.c: 317: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25395  002F4E  EE20 F008          	lfsr	2,8
 25396  002F52  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25397  002F54  26D9               	addwf	fsr2l,f,c
 25398  002F56  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25399  002F58  22DA               	addwfc	fsr2h,f,c
 25400  002F5A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25401                           
 25402                           ;api.c: 319: buffer_small = bootloader_get_total_entries();
 25403  002F5E  EC6D  F050         	call	_bootloader_get_total_entries	;wreg free
 25404  002F62  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25405  002F66  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25406                           
 25407                           ;api.c: 320: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25408  002F6A  EE20 F009          	lfsr	2,9
 25409  002F6E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25410  002F70  26D9               	addwf	fsr2l,f,c
 25411  002F72  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25412  002F74  22DA               	addwfc	fsr2h,f,c
 25413  002F76  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25414  002F78  6EDF               	movwf	indf2,c
 25415                           
 25416                           ;api.c: 321: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25417  002F7A  EE20 F00A          	lfsr	2,10
 25418  002F7E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25419  002F80  26D9               	addwf	fsr2l,f,c
 25420  002F82  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25421  002F84  22DA               	addwfc	fsr2h,f,c
 25422  002F86  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25423                           
 25424                           ;api.c: 323: outBuffer[11] = (uint8_t) bootloader_get_error();
 25425  002F8A  EE20 F00B          	lfsr	2,11
 25426  002F8E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25427  002F90  26D9               	addwf	fsr2l,f,c
 25428  002F92  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25429  002F94  22DA               	addwfc	fsr2h,f,c
 25430  002F96  EC97  F050         	call	_bootloader_get_error	;wreg free
 25431  002F9A  6EDF               	movwf	indf2,c
 25432                           
 25433                           ;api.c: 325: buffer_small = bootloader_get_flashPagesWritten();
 25434  002F9C  EC68  F050         	call	_bootloader_get_flashPagesWritten	;wreg free
 25435  002FA0  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25436  002FA4  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25437                           
 25438                           ;api.c: 326: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25439  002FA8  EE20 F00C          	lfsr	2,12
 25440  002FAC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25441  002FAE  26D9               	addwf	fsr2l,f,c
 25442  002FB0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25443  002FB2  22DA               	addwfc	fsr2h,f,c
 25444  002FB4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25445  002FB6  6EDF               	movwf	indf2,c
 25446                           
 25447                           ;api.c: 327: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25448  002FB8  EE20 F00D          	lfsr	2,13
 25449  002FBC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25450  002FBE  26D9               	addwf	fsr2l,f,c
 25451  002FC0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25452  002FC2  22DA               	addwfc	fsr2h,f,c
 25453  002FC4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25454                           
 25455                           ;api.c: 330: buffer_small = bootloader_get_rec_dataLength();
 25456  002FC8  EC59  F050         	call	_bootloader_get_rec_dataLength	;wreg free
 25457  002FCC  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25458  002FD0  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25459                           
 25460                           ;api.c: 331: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25461  002FD4  EE20 F00E          	lfsr	2,14
 25462  002FD8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25463  002FDA  26D9               	addwf	fsr2l,f,c
 25464  002FDC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25465  002FDE  22DA               	addwfc	fsr2h,f,c
 25466  002FE0  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25467  002FE2  6EDF               	movwf	indf2,c
 25468                           
 25469                           ;api.c: 332: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25470  002FE4  EE20 F00F          	lfsr	2,15
 25471  002FE8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25472  002FEA  26D9               	addwf	fsr2l,f,c
 25473  002FEC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25474  002FEE  22DA               	addwfc	fsr2h,f,c
 25475  002FF0  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25476                           
 25477                           ;api.c: 334: buffer_small = bootloader_get_rec_address();
 25478  002FF4  EC5E  F050         	call	_bootloader_get_rec_address	;wreg free
 25479  002FF8  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25480  002FFC  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25481                           
 25482                           ;api.c: 335: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25483  003000  EE20 F010          	lfsr	2,16
 25484  003004  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25485  003006  26D9               	addwf	fsr2l,f,c
 25486  003008  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25487  00300A  22DA               	addwfc	fsr2h,f,c
 25488  00300C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25489  00300E  6EDF               	movwf	indf2,c
 25490                           
 25491                           ;api.c: 336: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25492  003010  EE20 F011          	lfsr	2,17
 25493  003014  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25494  003016  26D9               	addwf	fsr2l,f,c
 25495  003018  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25496  00301A  22DA               	addwfc	fsr2h,f,c
 25497  00301C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25498                           
 25499                           ;api.c: 338: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25500  003020  EE20 F012          	lfsr	2,18
 25501  003024  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25502  003026  26D9               	addwf	fsr2l,f,c
 25503  003028  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25504  00302A  22DA               	addwfc	fsr2h,f,c
 25505  00302C  EC8B  F050         	call	_bootloader_get_rec_recordType	;wreg free
 25506  003030  6EDF               	movwf	indf2,c
 25507                           
 25508                           ;api.c: 339: outBuffer[19] = bootloader_get_rec_checksum();
 25509  003032  EE20 F013          	lfsr	2,19
 25510  003036  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25511  003038  26D9               	addwf	fsr2l,f,c
 25512  00303A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25513  00303C  22DA               	addwfc	fsr2h,f,c
 25514  00303E  EC91  F050         	call	_bootloader_get_rec_checksum	;wreg free
 25515  003042  6EDF               	movwf	indf2,c
 25516                           
 25517                           ;api.c: 340: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25518  003044  EE20 F014          	lfsr	2,20
 25519  003048  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25520  00304A  26D9               	addwf	fsr2l,f,c
 25521  00304C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25522  00304E  22DA               	addwfc	fsr2h,f,c
 25523  003050  EC8E  F050         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25524  003054  6EDF               	movwf	indf2,c
 25525                           
 25526                           ;api.c: 342: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25527  003056  EC59  F050         	call	_bootloader_get_rec_dataLength	;wreg free
 25528  00305A  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25529  00305C  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25530                           
 25531                           ;api.c: 343: if(data_length>43)
 25532  00305E  0E2B               	movlw	43
 25533  003060  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25534  003062  D002               	goto	l2816
 25535                           
 25536                           ;api.c: 344: {;api.c: 346: data_length = 43;
 25537  003064  0E2B               	movlw	43
 25538  003066  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25539  003068                     l2816:
 25540                           
 25541                           ;api.c: 347: };api.c: 348: for(cntr=0; cntr<data_length; ++cntr)
 25542  003068  0E00               	movlw	0
 25543  00306A  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25544  00306C  D014               	goto	l2817
 25545  00306E                     
 25546                           ;api.c: 349: {;api.c: 350: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25547  00306E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25548  003070  ECD1  F04F         	call	_bootloader_get_rec_data
 25549  003074  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25550  003076  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25551  003078  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25552  00307A  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25553  00307C  0E15               	movlw	21
 25554  00307E  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25555  003080  0E00               	movlw	0
 25556  003082  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25557  003084  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25558  003086  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25559  003088  6ED9               	movwf	fsr2l,c
 25560  00308A  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25561  00308C  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25562  00308E  6EDA               	movwf	fsr2h,c
 25563  003090  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25564  003094  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25565  003096                     l2817:
 25566  003096  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25567  003098  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25568  00309A  B0D8               	btfsc	status,0,c
 25569  00309C  0012               	return	
 25570  00309E  D7E7               	goto	l2818
 25571  0030A0                     __end_of__fill_buffer_get_bootloader_details:
 25572                           	opt stack 0
 25573                           tosu	equ	0xFFF
 25574                           tosh	equ	0xFFE
 25575                           tosl	equ	0xFFD
 25576                           pclath	equ	0xFFA
 25577                           tblptru	equ	0xFF8
 25578                           tblptrh	equ	0xFF7
 25579                           tblptrl	equ	0xFF6
 25580                           tablat	equ	0xFF5
 25581                           prodh	equ	0xFF4
 25582                           prodl	equ	0xFF3
 25583                           intcon	equ	0xFF2
 25584                           intcon2	equ	0xFF1
 25585                           intcon3	equ	0xFF0
 25586                           indf0	equ	0xFEF
 25587                           postinc0	equ	0xFEE
 25588                           fsr0h	equ	0xFEA
 25589                           fsr0l	equ	0xFE9
 25590                           wreg	equ	0xFE8
 25591                           indf1	equ	0xFE7
 25592                           postdec1	equ	0xFE5
 25593                           plusw1	equ	0xFE3
 25594                           fsr1h	equ	0xFE2
 25595                           fsr1l	equ	0xFE1
 25596                           indf2	equ	0xFDF
 25597                           postinc2	equ	0xFDE
 25598                           postdec2	equ	0xFDD
 25599                           plusw2	equ	0xFDB
 25600                           fsr2h	equ	0xFDA
 25601                           fsr2l	equ	0xFD9
 25602                           status	equ	0xFD8
 25603                           
 25604 ;; *************** function _bootloader_get_rec_recordType *****************
 25605 ;; Defined at:
 25606 ;;		line 494 in file "bootloader.c"
 25607 ;; Parameters:    Size  Location     Type
 25608 ;;		None
 25609 ;; Auto vars:     Size  Location     Type
 25610 ;;		None
 25611 ;; Return value:  Size  Location     Type
 25612 ;;                  1    wreg      enum E6776
 25613 ;; Registers used:
 25614 ;;		wreg, status,2
 25615 ;; Tracked objects:
 25616 ;;		On entry : 0/0
 25617 ;;		On exit  : 0/0
 25618 ;;		Unchanged: 0/0
 25619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25624 ;;Total ram usage:        0 bytes
 25625 ;; Hardware stack levels used:    1
 25626 ;; This function calls:
 25627 ;;		Nothing
 25628 ;; This function is called by:
 25629 ;;		__fill_buffer_get_bootloader_details
 25630 ;; This function uses a non-reentrant model
 25631 ;;
 25632                           
 25633                           	psect	text117
 25634  00A116                     __ptext117:
 25635                           	opt stack 0
 25636  00A116                     _bootloader_get_rec_recordType:
 25637                           	opt stack 28
 25638                           
 25639                           ;bootloader.c: 496: return hex_file_entry.recordType;
 25640                           
 25641                           ;incstack = 0
 25642  00A116  0101               	movlb	1	; () banked
 25643  00A118  5191               	movf	(_hex_file_entry+4)& (0+255),w,b
 25644  00A11A  0012               	return	
 25645  00A11C                     __end_of_bootloader_get_rec_recordType:
 25646                           	opt stack 0
 25647                           tosu	equ	0xFFF
 25648                           tosh	equ	0xFFE
 25649                           tosl	equ	0xFFD
 25650                           pclath	equ	0xFFA
 25651                           tblptru	equ	0xFF8
 25652                           tblptrh	equ	0xFF7
 25653                           tblptrl	equ	0xFF6
 25654                           tablat	equ	0xFF5
 25655                           prodh	equ	0xFF4
 25656                           prodl	equ	0xFF3
 25657                           intcon	equ	0xFF2
 25658                           intcon2	equ	0xFF1
 25659                           intcon3	equ	0xFF0
 25660                           indf0	equ	0xFEF
 25661                           postinc0	equ	0xFEE
 25662                           fsr0h	equ	0xFEA
 25663                           fsr0l	equ	0xFE9
 25664                           wreg	equ	0xFE8
 25665                           indf1	equ	0xFE7
 25666                           postdec1	equ	0xFE5
 25667                           plusw1	equ	0xFE3
 25668                           fsr1h	equ	0xFE2
 25669                           fsr1l	equ	0xFE1
 25670                           indf2	equ	0xFDF
 25671                           postinc2	equ	0xFDE
 25672                           postdec2	equ	0xFDD
 25673                           plusw2	equ	0xFDB
 25674                           fsr2h	equ	0xFDA
 25675                           fsr2l	equ	0xFD9
 25676                           status	equ	0xFD8
 25677                           
 25678 ;; *************** function _bootloader_get_rec_dataLength *****************
 25679 ;; Defined at:
 25680 ;;		line 483 in file "bootloader.c"
 25681 ;; Parameters:    Size  Location     Type
 25682 ;;		None
 25683 ;; Auto vars:     Size  Location     Type
 25684 ;;		None
 25685 ;; Return value:  Size  Location     Type
 25686 ;;                  2    0[COMRAM] unsigned int 
 25687 ;; Registers used:
 25688 ;;		None
 25689 ;; Tracked objects:
 25690 ;;		On entry : 0/0
 25691 ;;		On exit  : 0/0
 25692 ;;		Unchanged: 0/0
 25693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25698 ;;Total ram usage:        2 bytes
 25699 ;; Hardware stack levels used:    1
 25700 ;; This function calls:
 25701 ;;		Nothing
 25702 ;; This function is called by:
 25703 ;;		__fill_buffer_get_bootloader_details
 25704 ;; This function uses a non-reentrant model
 25705 ;;
 25706                           
 25707                           	psect	text118
 25708  00A0B2                     __ptext118:
 25709                           	opt stack 0
 25710  00A0B2                     _bootloader_get_rec_dataLength:
 25711                           	opt stack 28
 25712                           
 25713                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 25714                           
 25715                           ; BSR set to: 1
 25716                           ;incstack = 0
 25717  00A0B2  C18D  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25718  00A0B6  C18E  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25719  00A0BA  0012               	return		;funcret
 25720  00A0BC                     __end_of_bootloader_get_rec_dataLength:
 25721                           	opt stack 0
 25722                           tosu	equ	0xFFF
 25723                           tosh	equ	0xFFE
 25724                           tosl	equ	0xFFD
 25725                           pclath	equ	0xFFA
 25726                           tblptru	equ	0xFF8
 25727                           tblptrh	equ	0xFF7
 25728                           tblptrl	equ	0xFF6
 25729                           tablat	equ	0xFF5
 25730                           prodh	equ	0xFF4
 25731                           prodl	equ	0xFF3
 25732                           intcon	equ	0xFF2
 25733                           intcon2	equ	0xFF1
 25734                           intcon3	equ	0xFF0
 25735                           indf0	equ	0xFEF
 25736                           postinc0	equ	0xFEE
 25737                           fsr0h	equ	0xFEA
 25738                           fsr0l	equ	0xFE9
 25739                           wreg	equ	0xFE8
 25740                           indf1	equ	0xFE7
 25741                           postdec1	equ	0xFE5
 25742                           plusw1	equ	0xFE3
 25743                           fsr1h	equ	0xFE2
 25744                           fsr1l	equ	0xFE1
 25745                           indf2	equ	0xFDF
 25746                           postinc2	equ	0xFDE
 25747                           postdec2	equ	0xFDD
 25748                           plusw2	equ	0xFDB
 25749                           fsr2h	equ	0xFDA
 25750                           fsr2l	equ	0xFD9
 25751                           status	equ	0xFD8
 25752                           
 25753 ;; *************** function _bootloader_get_rec_data *****************
 25754 ;; Defined at:
 25755 ;;		line 499 in file "bootloader.c"
 25756 ;; Parameters:    Size  Location     Type
 25757 ;;  index           1    wreg     unsigned char 
 25758 ;; Auto vars:     Size  Location     Type
 25759 ;;  index           1    0[COMRAM] unsigned char 
 25760 ;; Return value:  Size  Location     Type
 25761 ;;                  1    wreg      unsigned char 
 25762 ;; Registers used:
 25763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25764 ;; Tracked objects:
 25765 ;;		On entry : 0/0
 25766 ;;		On exit  : 0/0
 25767 ;;		Unchanged: 0/0
 25768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25773 ;;Total ram usage:        1 bytes
 25774 ;; Hardware stack levels used:    1
 25775 ;; This function calls:
 25776 ;;		Nothing
 25777 ;; This function is called by:
 25778 ;;		__fill_buffer_get_bootloader_details
 25779 ;; This function uses a non-reentrant model
 25780 ;;
 25781                           
 25782                           	psect	text119
 25783  009FA2                     __ptext119:
 25784                           	opt stack 0
 25785  009FA2                     _bootloader_get_rec_data:
 25786                           	opt stack 28
 25787                           
 25788                           ;incstack = 0
 25789                           ;bootloader_get_rec_data@index stored from wreg
 25790  009FA2  6E01               	movwf	bootloader_get_rec_data@index,c
 25791                           
 25792                           ;bootloader.c: 501: return hex_file_entry.data[index];
 25793  009FA4  5001               	movf	bootloader_get_rec_data@index,w,c
 25794  009FA6  0D01               	mullw	1
 25795  009FA8  0E92               	movlw	low (_hex_file_entry+5)
 25796  009FAA  24F3               	addwf	prodl,w,c
 25797  009FAC  6ED9               	movwf	fsr2l,c
 25798  009FAE  0E01               	movlw	high (_hex_file_entry+5)
 25799  009FB0  20F4               	addwfc	prodh,w,c
 25800  009FB2  6EDA               	movwf	fsr2h,c
 25801  009FB4  50DF               	movf	indf2,w,c
 25802  009FB6  0012               	return	
 25803  009FB8                     __end_of_bootloader_get_rec_data:
 25804                           	opt stack 0
 25805                           tosu	equ	0xFFF
 25806                           tosh	equ	0xFFE
 25807                           tosl	equ	0xFFD
 25808                           pclath	equ	0xFFA
 25809                           tblptru	equ	0xFF8
 25810                           tblptrh	equ	0xFF7
 25811                           tblptrl	equ	0xFF6
 25812                           tablat	equ	0xFF5
 25813                           prodh	equ	0xFF4
 25814                           prodl	equ	0xFF3
 25815                           intcon	equ	0xFF2
 25816                           intcon2	equ	0xFF1
 25817                           intcon3	equ	0xFF0
 25818                           indf0	equ	0xFEF
 25819                           postinc0	equ	0xFEE
 25820                           fsr0h	equ	0xFEA
 25821                           fsr0l	equ	0xFE9
 25822                           wreg	equ	0xFE8
 25823                           indf1	equ	0xFE7
 25824                           postdec1	equ	0xFE5
 25825                           plusw1	equ	0xFE3
 25826                           fsr1h	equ	0xFE2
 25827                           fsr1l	equ	0xFE1
 25828                           indf2	equ	0xFDF
 25829                           postinc2	equ	0xFDE
 25830                           postdec2	equ	0xFDD
 25831                           plusw2	equ	0xFDB
 25832                           fsr2h	equ	0xFDA
 25833                           fsr2l	equ	0xFD9
 25834                           status	equ	0xFD8
 25835                           
 25836 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25837 ;; Defined at:
 25838 ;;		line 509 in file "bootloader.c"
 25839 ;; Parameters:    Size  Location     Type
 25840 ;;		None
 25841 ;; Auto vars:     Size  Location     Type
 25842 ;;		None
 25843 ;; Return value:  Size  Location     Type
 25844 ;;                  1    wreg      unsigned char 
 25845 ;; Registers used:
 25846 ;;		wreg, status,2
 25847 ;; Tracked objects:
 25848 ;;		On entry : 0/0
 25849 ;;		On exit  : 0/0
 25850 ;;		Unchanged: 0/0
 25851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25856 ;;Total ram usage:        0 bytes
 25857 ;; Hardware stack levels used:    1
 25858 ;; This function calls:
 25859 ;;		Nothing
 25860 ;; This function is called by:
 25861 ;;		__fill_buffer_get_bootloader_details
 25862 ;; This function uses a non-reentrant model
 25863 ;;
 25864                           
 25865                           	psect	text120
 25866  00A11C                     __ptext120:
 25867                           	opt stack 0
 25868  00A11C                     _bootloader_get_rec_checksumCheck:
 25869                           	opt stack 28
 25870                           
 25871                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 25872                           
 25873                           ;incstack = 0
 25874  00A11C  0101               	movlb	1	; () banked
 25875  00A11E  51A3               	movf	(_hex_file_entry+22)& (0+255),w,b
 25876  00A120  0012               	return	
 25877  00A122                     __end_of_bootloader_get_rec_checksumCheck:
 25878                           	opt stack 0
 25879                           tosu	equ	0xFFF
 25880                           tosh	equ	0xFFE
 25881                           tosl	equ	0xFFD
 25882                           pclath	equ	0xFFA
 25883                           tblptru	equ	0xFF8
 25884                           tblptrh	equ	0xFF7
 25885                           tblptrl	equ	0xFF6
 25886                           tablat	equ	0xFF5
 25887                           prodh	equ	0xFF4
 25888                           prodl	equ	0xFF3
 25889                           intcon	equ	0xFF2
 25890                           intcon2	equ	0xFF1
 25891                           intcon3	equ	0xFF0
 25892                           indf0	equ	0xFEF
 25893                           postinc0	equ	0xFEE
 25894                           fsr0h	equ	0xFEA
 25895                           fsr0l	equ	0xFE9
 25896                           wreg	equ	0xFE8
 25897                           indf1	equ	0xFE7
 25898                           postdec1	equ	0xFE5
 25899                           plusw1	equ	0xFE3
 25900                           fsr1h	equ	0xFE2
 25901                           fsr1l	equ	0xFE1
 25902                           indf2	equ	0xFDF
 25903                           postinc2	equ	0xFDE
 25904                           postdec2	equ	0xFDD
 25905                           plusw2	equ	0xFDB
 25906                           fsr2h	equ	0xFDA
 25907                           fsr2l	equ	0xFD9
 25908                           status	equ	0xFD8
 25909                           
 25910 ;; *************** function _bootloader_get_rec_checksum *****************
 25911 ;; Defined at:
 25912 ;;		line 504 in file "bootloader.c"
 25913 ;; Parameters:    Size  Location     Type
 25914 ;;		None
 25915 ;; Auto vars:     Size  Location     Type
 25916 ;;		None
 25917 ;; Return value:  Size  Location     Type
 25918 ;;                  1    wreg      unsigned char 
 25919 ;; Registers used:
 25920 ;;		wreg, status,2
 25921 ;; Tracked objects:
 25922 ;;		On entry : 0/0
 25923 ;;		On exit  : 0/0
 25924 ;;		Unchanged: 0/0
 25925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25930 ;;Total ram usage:        0 bytes
 25931 ;; Hardware stack levels used:    1
 25932 ;; This function calls:
 25933 ;;		Nothing
 25934 ;; This function is called by:
 25935 ;;		__fill_buffer_get_bootloader_details
 25936 ;; This function uses a non-reentrant model
 25937 ;;
 25938                           
 25939                           	psect	text121
 25940  00A122                     __ptext121:
 25941                           	opt stack 0
 25942  00A122                     _bootloader_get_rec_checksum:
 25943                           	opt stack 28
 25944                           
 25945                           ;bootloader.c: 506: return hex_file_entry.checksum;
 25946                           
 25947                           ; BSR set to: 1
 25948                           ;incstack = 0
 25949  00A122  0101               	movlb	1	; () banked
 25950  00A124  51A2               	movf	(_hex_file_entry+21)& (0+255),w,b
 25951  00A126  0012               	return	
 25952  00A128                     __end_of_bootloader_get_rec_checksum:
 25953                           	opt stack 0
 25954                           tosu	equ	0xFFF
 25955                           tosh	equ	0xFFE
 25956                           tosl	equ	0xFFD
 25957                           pclath	equ	0xFFA
 25958                           tblptru	equ	0xFF8
 25959                           tblptrh	equ	0xFF7
 25960                           tblptrl	equ	0xFF6
 25961                           tablat	equ	0xFF5
 25962                           prodh	equ	0xFF4
 25963                           prodl	equ	0xFF3
 25964                           intcon	equ	0xFF2
 25965                           intcon2	equ	0xFF1
 25966                           intcon3	equ	0xFF0
 25967                           indf0	equ	0xFEF
 25968                           postinc0	equ	0xFEE
 25969                           fsr0h	equ	0xFEA
 25970                           fsr0l	equ	0xFE9
 25971                           wreg	equ	0xFE8
 25972                           indf1	equ	0xFE7
 25973                           postdec1	equ	0xFE5
 25974                           plusw1	equ	0xFE3
 25975                           fsr1h	equ	0xFE2
 25976                           fsr1l	equ	0xFE1
 25977                           indf2	equ	0xFDF
 25978                           postinc2	equ	0xFDE
 25979                           postdec2	equ	0xFDD
 25980                           plusw2	equ	0xFDB
 25981                           fsr2h	equ	0xFDA
 25982                           fsr2l	equ	0xFD9
 25983                           status	equ	0xFD8
 25984                           
 25985 ;; *************** function __fill_buffer_find_file *****************
 25986 ;; Defined at:
 25987 ;;		line 393 in file "api.c"
 25988 ;; Parameters:    Size  Location     Type
 25989 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 25990 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25991 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25992 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 25993 ;; Auto vars:     Size  Location     Type
 25994 ;;  cntr            1   62[COMRAM] unsigned char 
 25995 ;; Return value:  Size  Location     Type
 25996 ;;                  1    wreg      void 
 25997 ;; Registers used:
 25998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25999 ;; Tracked objects:
 26000 ;;		On entry : 0/0
 26001 ;;		On exit  : 0/0
 26002 ;;		Unchanged: 0/0
 26003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26006 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26007 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26008 ;;Total ram usage:        9 bytes
 26009 ;; Hardware stack levels used:    1
 26010 ;; Hardware stack levels required when called:    6
 26011 ;; This function calls:
 26012 ;;		_fat_find_file
 26013 ;; This function is called by:
 26014 ;;		_api_prepare
 26015 ;; This function uses a non-reentrant model
 26016 ;;
 26017                           
 26018                           	psect	text122
 26019  007CDA                     __ptext122:
 26020                           	opt stack 0
 26021  007CDA                     __fill_buffer_find_file:
 26022                           	opt stack 23
 26023                           
 26024                           ;api.c: 395: uint8_t cntr;;api.c: 398: outBuffer[0] = DATAREQUEST_FIND_FILE;
 26025                           
 26026                           ; BSR set to: 1
 26027                           ;incstack = 0
 26028  007CDA  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 26029  007CDE  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 26030  007CE2  0E81               	movlw	129
 26031  007CE4  6EDF               	movwf	indf2,c
 26032                           
 26033                           ;api.c: 401: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 26034  007CE6  EE20 F001          	lfsr	2,1
 26035  007CEA  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 26036  007CEC  26D9               	addwf	fsr2l,f,c
 26037  007CEE  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26038  007CF0  22DA               	addwfc	fsr2h,f,c
 26039  007CF2  0EC1               	movlw	193
 26040  007CF4  6EDF               	movwf	indf2,c
 26041                           
 26042                           ;api.c: 402: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 26043  007CF6  EE20 F002          	lfsr	2,2
 26044  007CFA  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 26045  007CFC  26D9               	addwf	fsr2l,f,c
 26046  007CFE  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26047  007D00  22DA               	addwfc	fsr2h,f,c
 26048  007D02  0E25               	movlw	37
 26049  007D04  6EDF               	movwf	indf2,c
 26050                           
 26051                           ;api.c: 405: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 26052  007D06  0E01               	movlw	1
 26053  007D08  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26054  007D0A  6E2C               	movwf	fat_find_file@name,c
 26055  007D0C  0E00               	movlw	0
 26056  007D0E  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26057  007D10  6E2D               	movwf	fat_find_file@name+1,c
 26058  007D12  0E09               	movlw	9
 26059  007D14  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26060  007D16  6E2E               	movwf	fat_find_file@extension,c
 26061  007D18  0E00               	movlw	0
 26062  007D1A  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26063  007D1C  6E2F               	movwf	fat_find_file@extension+1,c
 26064  007D1E  ECA4  F033         	call	_fat_find_file	;wreg free
 26065  007D22  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 26066  007D24  EE20 F003          	lfsr	2,3
 26067  007D28  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 26068  007D2A  26D9               	addwf	fsr2l,f,c
 26069  007D2C  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26070  007D2E  22DA               	addwfc	fsr2h,f,c
 26071  007D30  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 26072                           
 26073                           ;api.c: 408: for(cntr=0; cntr<11; ++cntr)
 26074  007D34  0E00               	movlw	0
 26075  007D36  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 26076  007D38                     l15445:
 26077  007D38  0E0A               	movlw	10
 26078  007D3A  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 26079  007D3C  D001               	goto	l2829
 26080  007D3E  0012               	return	
 26081  007D40                     l2829:
 26082                           
 26083                           ;api.c: 409: {;api.c: 410: outBuffer[cntr+12] = inBuffer[cntr+1];
 26084  007D40  503F               	movf	__fill_buffer_find_file@cntr,w,c
 26085  007D42  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 26086  007D44  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 26087  007D46  0E01               	movlw	1
 26088  007D48  263B               	addwf	??__fill_buffer_find_file,f,c
 26089  007D4A  0E00               	movlw	0
 26090  007D4C  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 26091  007D4E  503B               	movf	??__fill_buffer_find_file,w,c
 26092  007D50  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26093  007D52  6ED9               	movwf	fsr2l,c
 26094  007D54  503C               	movf	??__fill_buffer_find_file+1,w,c
 26095  007D56  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26096  007D58  6EDA               	movwf	fsr2h,c
 26097  007D5A  503F               	movf	__fill_buffer_find_file@cntr,w,c
 26098  007D5C  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 26099  007D5E  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 26100  007D60  0E0C               	movlw	12
 26101  007D62  263D               	addwf	??__fill_buffer_find_file+2,f,c
 26102  007D64  0E00               	movlw	0
 26103  007D66  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 26104  007D68  503D               	movf	??__fill_buffer_find_file+2,w,c
 26105  007D6A  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 26106  007D6C  6EE1               	movwf	fsr1l,c
 26107  007D6E  503E               	movf	??__fill_buffer_find_file+3,w,c
 26108  007D70  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 26109  007D72  6EE2               	movwf	fsr1h,c
 26110  007D74  CFDF FFE7          	movff	indf2,indf1
 26111  007D78  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 26112  007D7A  D7DE               	goto	l15445
 26113  007D7C                     __end_of__fill_buffer_find_file:
 26114                           	opt stack 0
 26115                           tosu	equ	0xFFF
 26116                           tosh	equ	0xFFE
 26117                           tosl	equ	0xFFD
 26118                           pclath	equ	0xFFA
 26119                           tblptru	equ	0xFF8
 26120                           tblptrh	equ	0xFF7
 26121                           tblptrl	equ	0xFF6
 26122                           tablat	equ	0xFF5
 26123                           prodh	equ	0xFF4
 26124                           prodl	equ	0xFF3
 26125                           intcon	equ	0xFF2
 26126                           intcon2	equ	0xFF1
 26127                           intcon3	equ	0xFF0
 26128                           indf0	equ	0xFEF
 26129                           postinc0	equ	0xFEE
 26130                           fsr0h	equ	0xFEA
 26131                           fsr0l	equ	0xFE9
 26132                           wreg	equ	0xFE8
 26133                           indf1	equ	0xFE7
 26134                           postdec1	equ	0xFE5
 26135                           plusw1	equ	0xFE3
 26136                           fsr1h	equ	0xFE2
 26137                           fsr1l	equ	0xFE1
 26138                           indf2	equ	0xFDF
 26139                           postinc2	equ	0xFDE
 26140                           postdec2	equ	0xFDD
 26141                           plusw2	equ	0xFDB
 26142                           fsr2h	equ	0xFDA
 26143                           fsr2l	equ	0xFD9
 26144                           status	equ	0xFD8
 26145                           
 26146 ;; *************** function _api_parse *****************
 26147 ;; Defined at:
 26148 ;;		line 146 in file "api.c"
 26149 ;; Parameters:    Size  Location     Type
 26150 ;;  inBuffer        2   68[BANK0 ] PTR unsigned char 
 26151 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 26152 ;;  receivedData    1   70[BANK0 ] unsigned char 
 26153 ;;  outBuffer       2   71[BANK0 ] PTR unsigned char 
 26154 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 26155 ;; Auto vars:     Size  Location     Type
 26156 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 26157 ;;		 -> api_parse@out_idx(1), 
 26158 ;;  out_idx         1   78[BANK0 ] unsigned char 
 26159 ;;  in_idx          1   77[BANK0 ] unsigned char 
 26160 ;; Return value:  Size  Location     Type
 26161 ;;                  1    wreg      void 
 26162 ;; Registers used:
 26163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26164 ;; Tracked objects:
 26165 ;;		On entry : 0/0
 26166 ;;		On exit  : 0/0
 26167 ;;		Unchanged: 0/0
 26168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26169 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26170 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26171 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26172 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26173 ;;Total ram usage:       11 bytes
 26174 ;; Hardware stack levels used:    1
 26175 ;; Hardware stack levels required when called:   11
 26176 ;; This function calls:
 26177 ;;		__parse_command_long
 26178 ;;		__parse_command_short
 26179 ;; This function is called by:
 26180 ;;		_main
 26181 ;;		_APP_DeviceCustomHIDTasks
 26182 ;; This function uses a non-reentrant model
 26183 ;;
 26184                           
 26185                           	psect	text123
 26186  004F90                     __ptext123:
 26187                           	opt stack 0
 26188  004F90                     _api_parse:
 26189                           	opt stack 19
 26190                           
 26191                           ;api.c: 150: uint8_t in_idx;;api.c: 151: uint8_t out_idx;;api.c: 152: uint8_t *out_idx_p
      +                          tr;;api.c: 154: out_idx = 0;
 26192                           
 26193                           ;incstack = 0
 26194  004F90  0E00               	movlw	0
 26195  004F92  0100               	movlb	0	; () banked
 26196  004F94  6FAE               	movwf	api_parse@out_idx& (0+255),b
 26197                           
 26198                           ; BSR set to: 0
 26199                           ;api.c: 155: out_idx_ptr = &out_idx;
 26200  004F96  0EAE               	movlw	low api_parse@out_idx
 26201  004F98  6FAB               	movwf	api_parse@out_idx_ptr& (0+255),b
 26202  004F9A  0E00               	movlw	high api_parse@out_idx
 26203  004F9C  6FAC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 26204                           
 26205                           ; BSR set to: 0
 26206                           ;api.c: 157: if(inBuffer[0]>0x7F)
 26207  004F9E  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26208  004FA2  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26209  004FA6  0E7F               	movlw	127
 26210  004FA8  64DF               	cpfsgt	indf2,c
 26211  004FAA  D001               	goto	l2785
 26212  004FAC  0012               	return	
 26213  004FAE                     l2785:
 26214                           
 26215                           ; BSR set to: 0
 26216                           ;api.c: 162: };api.c: 164: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 26217                           
 26218                           ; BSR set to: 0
 26219  004FAE  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26220  004FB2  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26221  004FB6  0E20               	movlw	32
 26222  004FB8  18DE               	xorwf	postinc2,w,c
 26223  004FBA  B4D8               	btfsc	status,2,c
 26224  004FBC  0012               	return	
 26225                           
 26226                           ; BSR set to: 0
 26227                           ;api.c: 169: };api.c: 171: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 26228                           
 26229                           ; BSR set to: 0
 26230                           
 26231                           ; BSR set to: 0
 26232                           ;api.c: 165: {;api.c: 168: return;
 26233  004FBE  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26234  004FC2  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26235  004FC6  50DF               	movf	indf2,w,c
 26236  004FC8  A4D8               	btfss	status,2,c
 26237  004FCA  D018               	goto	l2788
 26238                           
 26239                           ; BSR set to: 0
 26240                           ;api.c: 172: {;api.c: 174: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 26241  004FCC  C0A7  FFD9         	movff	api_parse@outBuffer,fsr2l
 26242  004FD0  C0A8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 26243  004FD4  0E00               	movlw	0
 26244  004FD6  6EDF               	movwf	indf2,c
 26245                           
 26246                           ; BSR set to: 0
 26247                           ;api.c: 177: outBuffer[1] = 0xC125 >> 8;
 26248  004FD8  EE20 F001          	lfsr	2,1
 26249  004FDC  51A7               	movf	api_parse@outBuffer& (0+255),w,b
 26250  004FDE  26D9               	addwf	fsr2l,f,c
 26251  004FE0  51A8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26252  004FE2  22DA               	addwfc	fsr2h,f,c
 26253  004FE4  0EC1               	movlw	193
 26254  004FE6  6EDF               	movwf	indf2,c
 26255                           
 26256                           ; BSR set to: 0
 26257                           ;api.c: 178: outBuffer[2] = (uint8_t) 0xC125;
 26258  004FE8  EE20 F002          	lfsr	2,2
 26259  004FEC  51A7               	movf	api_parse@outBuffer& (0+255),w,b
 26260  004FEE  26D9               	addwf	fsr2l,f,c
 26261  004FF0  51A8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26262  004FF2  22DA               	addwfc	fsr2h,f,c
 26263  004FF4  0E25               	movlw	37
 26264  004FF6  6EDF               	movwf	indf2,c
 26265                           
 26266                           ; BSR set to: 0
 26267                           ;api.c: 181: out_idx = 3;
 26268  004FF8  0E03               	movlw	3
 26269  004FFA  6FAE               	movwf	api_parse@out_idx& (0+255),b
 26270  004FFC                     l2788:
 26271                           
 26272                           ; BSR set to: 0
 26273                           ;api.c: 182: };api.c: 184: in_idx = 1;
 26274                           
 26275                           ; BSR set to: 0
 26276  004FFC  0E01               	movlw	1
 26277  004FFE  6FAD               	movwf	api_parse@in_idx& (0+255),b
 26278                           
 26279                           ;api.c: 185: while(in_idx<receivedDataLength)
 26280  005000  D057               	goto	l2794
 26281  005002                     
 26282                           ; BSR set to: 0
 26283                           ;api.c: 186: {;api.c: 188: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 26284                           
 26285                           ; BSR set to: 0
 26286  005002  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26287  005004  0D01               	mullw	1
 26288  005006  50F3               	movf	prodl,w,c
 26289  005008  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26290  00500A  6ED9               	movwf	fsr2l,c
 26291  00500C  50F4               	movf	prodh,w,c
 26292  00500E  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26293  005010  6EDA               	movwf	fsr2h,c
 26294  005012  0E99               	movlw	153
 26295  005014  18DE               	xorwf	postinc2,w,c
 26296  005016  B4D8               	btfsc	status,2,c
 26297  005018  0012               	return	
 26298  00501A  D02F               	goto	l2792
 26299  00501C                     
 26300                           ; BSR set to: 0
 26301                           ;api.c: 196: _parse_command_short(inBuffer[in_idx]);
 26302                           
 26303                           ; BSR set to: 0
 26304  00501C  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26305  00501E  0D01               	mullw	1
 26306  005020  50F3               	movf	prodl,w,c
 26307  005022  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26308  005024  6ED9               	movwf	fsr2l,c
 26309  005026  50F4               	movf	prodh,w,c
 26310  005028  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26311  00502A  6EDA               	movwf	fsr2h,c
 26312  00502C  50DF               	movf	indf2,w,c
 26313  00502E  EC8B  F036         	call	__parse_command_short
 26314  005032  D00B               	goto	l16077
 26315  005034                     
 26316                           ; BSR set to: 0
 26317                           ;api.c: 201: _parse_command_short(inBuffer[in_idx]);
 26318                           
 26319                           ; BSR set to: 0
 26320  005034  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26321  005036  0D01               	mullw	1
 26322  005038  50F3               	movf	prodl,w,c
 26323  00503A  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26324  00503C  6ED9               	movwf	fsr2l,c
 26325  00503E  50F4               	movf	prodh,w,c
 26326  005040  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26327  005042  6EDA               	movwf	fsr2h,c
 26328  005044  50DF               	movf	indf2,w,c
 26329  005046  EC8B  F036         	call	__parse_command_short
 26330  00504A                     l16077:
 26331                           
 26332                           ;api.c: 202: ++in_idx;
 26333  00504A  0100               	movlb	0	; () banked
 26334  00504C  2BAD               	incf	api_parse@in_idx& (0+255),f,b
 26335                           
 26336                           ;api.c: 203: break;
 26337  00504E  D030               	goto	l2794
 26338  005050                     
 26339                           ; BSR set to: 0
 26340                           ;api.c: 206: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 26341                           
 26342                           ; BSR set to: 0
 26343  005050  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26344  005052  0D01               	mullw	1
 26345  005054  50F3               	movf	prodl,w,c
 26346  005056  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26347  005058  6F9D               	movwf	__parse_command_long@data& (0+255),b
 26348  00505A  50F4               	movf	prodh,w,c
 26349  00505C  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26350  00505E  6F9E               	movwf	(__parse_command_long@data+1)& (0+255),b
 26351  005060  C0A7  F09F         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 26352  005064  C0A8  F0A0         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 26353  005068  C0AB  F0A1         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 26354  00506C  C0AC  F0A2         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 26355  005070  ECEC  F00B         	call	__parse_command_long	;wreg free
 26356  005074  0100               	movlb	0	; () banked
 26357  005076  27AD               	addwf	api_parse@in_idx& (0+255),f,b
 26358                           
 26359                           ;api.c: 207: break;
 26360  005078  D01B               	goto	l2794
 26361  00507A                     l2792:
 26362                           
 26363                           ; BSR set to: 0
 26364                           
 26365                           ; BSR set to: 0
 26366  00507A  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26367  00507C  0D01               	mullw	1
 26368  00507E  50F3               	movf	prodl,w,c
 26369  005080  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26370  005082  6ED9               	movwf	fsr2l,c
 26371  005084  50F4               	movf	prodh,w,c
 26372  005086  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26373  005088  6EDA               	movwf	fsr2h,c
 26374  00508A  50DF               	movf	indf2,w,c
 26375  00508C  0BF0               	andlw	240
 26376  00508E  6FA9               	movwf	??_api_parse& (0+255),b
 26377  005090  6BAA               	clrf	(??_api_parse+1)& (0+255),b
 26378                           
 26379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26380                           ; Switch size 1, requested type "space"
 26381                           ; Number of cases is 1, Range of values is 0 to 0
 26382                           ; switch strategies available:
 26383                           ; Name         Instructions Cycles
 26384                           ; simple_byte            4     3 (average)
 26385                           ;	Chosen strategy is simple_byte
 26386  005092  51AA               	movf	(??_api_parse+1)& (0+255),w,b
 26387  005094  0A00               	xorlw	0	; case 0
 26388  005096  A4D8               	btfss	status,2,c
 26389  005098  0012               	return	
 26390                           
 26391                           ; BSR set to: 0
 26392                           ; Switch size 1, requested type "space"
 26393                           ; Number of cases is 3, Range of values is 32 to 80
 26394                           ; switch strategies available:
 26395                           ; Name         Instructions Cycles
 26396                           ; simple_byte           10     6 (average)
 26397                           ;	Chosen strategy is simple_byte
 26398  00509A  51A9               	movf	??_api_parse& (0+255),w,b
 26399  00509C  0A20               	xorlw	32	; case 32
 26400  00509E  B4D8               	btfsc	status,2,c
 26401  0050A0  D7BD               	goto	l2793
 26402  0050A2  0A10               	xorlw	16	; case 48
 26403  0050A4  B4D8               	btfsc	status,2,c
 26404  0050A6  D7C6               	goto	l2795
 26405  0050A8  0A60               	xorlw	96	; case 80
 26406  0050AA  A4D8               	btfss	status,2,c
 26407  0050AC  0012               	return	
 26408  0050AE  D7D0               	goto	l2796
 26409  0050B0                     l2794:
 26410                           
 26411                           ; BSR set to: 0
 26412                           
 26413                           ; BSR set to: 0
 26414                           
 26415                           ; BSR set to: 0
 26416  0050B0  51A6               	movf	api_parse@receivedDataLength& (0+255),w,b
 26417  0050B2  5DAD               	subwf	api_parse@in_idx& (0+255),w,b
 26418  0050B4  B0D8               	btfsc	status,0,c
 26419  0050B6  0012               	return	
 26420  0050B8  D7A4               	goto	l2790
 26421  0050BA                     __end_of_api_parse:
 26422                           	opt stack 0
 26423                           tosu	equ	0xFFF
 26424                           tosh	equ	0xFFE
 26425                           tosl	equ	0xFFD
 26426                           pclath	equ	0xFFA
 26427                           tblptru	equ	0xFF8
 26428                           tblptrh	equ	0xFF7
 26429                           tblptrl	equ	0xFF6
 26430                           tablat	equ	0xFF5
 26431                           prodh	equ	0xFF4
 26432                           prodl	equ	0xFF3
 26433                           intcon	equ	0xFF2
 26434                           intcon2	equ	0xFF1
 26435                           intcon3	equ	0xFF0
 26436                           indf0	equ	0xFEF
 26437                           postinc0	equ	0xFEE
 26438                           fsr0h	equ	0xFEA
 26439                           fsr0l	equ	0xFE9
 26440                           wreg	equ	0xFE8
 26441                           indf1	equ	0xFE7
 26442                           postdec1	equ	0xFE5
 26443                           plusw1	equ	0xFE3
 26444                           fsr1h	equ	0xFE2
 26445                           fsr1l	equ	0xFE1
 26446                           indf2	equ	0xFDF
 26447                           postinc2	equ	0xFDE
 26448                           postdec2	equ	0xFDD
 26449                           plusw2	equ	0xFDB
 26450                           fsr2h	equ	0xFDA
 26451                           fsr2l	equ	0xFD9
 26452                           status	equ	0xFD8
 26453                           
 26454 ;; *************** function __parse_command_short *****************
 26455 ;; Defined at:
 26456 ;;		line 498 in file "api.c"
 26457 ;; Parameters:    Size  Location     Type
 26458 ;;  cmd             1    wreg     unsigned char 
 26459 ;; Auto vars:     Size  Location     Type
 26460 ;;  cmd             1   35[COMRAM] unsigned char 
 26461 ;; Return value:  Size  Location     Type
 26462 ;;                  1    wreg      void 
 26463 ;; Registers used:
 26464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26465 ;; Tracked objects:
 26466 ;;		On entry : 0/0
 26467 ;;		On exit  : 0/0
 26468 ;;		Unchanged: 0/0
 26469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26474 ;;Total ram usage:        1 bytes
 26475 ;; Hardware stack levels used:    1
 26476 ;; Hardware stack levels required when called:    7
 26477 ;; This function calls:
 26478 ;;		_i2c_eeprom_writeByte
 26479 ;;		_reboot
 26480 ;;		_system_delay_ms
 26481 ;; This function is called by:
 26482 ;;		_api_parse
 26483 ;; This function uses a non-reentrant model
 26484 ;;
 26485                           
 26486                           	psect	text124
 26487  006D16                     __ptext124:
 26488                           	opt stack 0
 26489  006D16                     __parse_command_short:
 26490                           	opt stack 22
 26491                           
 26492                           ; BSR set to: 0
 26493                           ;incstack = 0
 26494                           ;__parse_command_short@cmd stored from wreg
 26495  006D16  6E24               	movwf	__parse_command_short@cmd,c
 26496                           
 26497                           ;api.c: 500: switch(cmd)
 26498  006D18  D047               	goto	l2842
 26499  006D1A                     
 26500                           ;api.c: 503: i2c_eeprom_writeByte(0x100, 0x00);
 26501  006D1A  0E01               	movlw	1
 26502  006D1C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26503  006D1E  0E00               	movlw	0
 26504  006D20  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26505  006D22  0E00               	movlw	0
 26506  006D24  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26507  006D26  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
 26508                           
 26509                           ;api.c: 504: system_delay_ms(10);
 26510  006D2A  0E0A               	movlw	10
 26511  006D2C  EC9E  F04E         	call	_system_delay_ms
 26512                           
 26513                           ;api.c: 505: reboot();
 26514  006D30  EC8A  F04F         	call	_reboot	;wreg free
 26515                           
 26516                           ;api.c: 506: break;
 26517  006D34  0012               	return	
 26518  006D36                     
 26519                           ;api.c: 509: i2c_eeprom_writeByte(0x100, 0x94);
 26520  006D36  0E01               	movlw	1
 26521  006D38  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26522  006D3A  0E00               	movlw	0
 26523  006D3C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26524  006D3E  0E94               	movlw	148
 26525  006D40  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26526  006D42  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
 26527                           
 26528                           ;api.c: 510: system_delay_ms(10);
 26529  006D46  0E0A               	movlw	10
 26530  006D48  EC9E  F04E         	call	_system_delay_ms
 26531                           
 26532                           ;api.c: 511: reboot();
 26533  006D4C  EC8A  F04F         	call	_reboot	;wreg free
 26534                           
 26535                           ;api.c: 512: break;
 26536  006D50  0012               	return	
 26537  006D52                     
 26538                           ;api.c: 515: i2c_eeprom_writeByte(0x100, 0x78);
 26539  006D52  0E01               	movlw	1
 26540  006D54  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26541  006D56  0E00               	movlw	0
 26542  006D58  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26543  006D5A  0E78               	movlw	120
 26544  006D5C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26545  006D5E  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
 26546                           
 26547                           ;api.c: 516: system_delay_ms(10);
 26548  006D62  0E0A               	movlw	10
 26549  006D64  EC9E  F04E         	call	_system_delay_ms
 26550                           
 26551                           ;api.c: 517: reboot();
 26552  006D68  EC8A  F04F         	call	_reboot	;wreg free
 26553                           
 26554                           ;api.c: 518: break;
 26555  006D6C  0012               	return	
 26556  006D6E                     
 26557                           ;api.c: 522: i2c_eeprom_writeByte(0x100, 0x78);
 26558  006D6E  0E01               	movlw	1
 26559  006D70  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26560  006D72  0E00               	movlw	0
 26561  006D74  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26562  006D76  0E78               	movlw	120
 26563  006D78  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26564  006D7A  EC8D  F04B         	call	_i2c_eeprom_writeByte	;wreg free
 26565                           
 26566                           ;api.c: 523: system_delay_ms(10);
 26567  006D7E  0E0A               	movlw	10
 26568  006D80  EC9E  F04E         	call	_system_delay_ms
 26569                           
 26570                           ;api.c: 524: reboot();
 26571  006D84  EC8A  F04F         	call	_reboot	;wreg free
 26572                           
 26573                           ;api.c: 525: break;
 26574  006D88  0012               	return	
 26575  006D8A                     
 26576                           ;api.c: 528: os.bootloader_mode = BOOTLOADER_MODE_SUSPENDED;
 26577  006D8A  0E90               	movlw	144
 26578  006D8C  0100               	movlb	0	; () banked
 26579  006D8E  6FC5               	movwf	(_os+4)& (0+255),b
 26580                           
 26581                           ;api.c: 529: os.display_mode = DISPLAY_MODE_BOOTLOADER_SUSPENDED;
 26582  006D90  0E90               	movlw	144
 26583  006D92  6FC6               	movwf	(_os+5)& (0+255),b
 26584                           
 26585                           ;api.c: 530: break;
 26586  006D94  0012               	return	
 26587  006D96                     
 26588                           ;api.c: 533: --os.encoderCount;
 26589                           
 26590                           ; BSR set to: 0
 26591  006D96  0100               	movlb	0	; () banked
 26592  006D98  07C1               	decf	_os& (0+255),f,b
 26593                           
 26594                           ;api.c: 534: break;
 26595  006D9A  0012               	return	
 26596  006D9C                     
 26597                           ;api.c: 537: ++os.encoderCount;
 26598                           
 26599                           ; BSR set to: 0
 26600  006D9C  0100               	movlb	0	; () banked
 26601  006D9E  2BC1               	incf	_os& (0+255),f,b
 26602                           
 26603                           ;api.c: 538: break;
 26604  006DA0  0012               	return	
 26605  006DA2                     
 26606                           ;api.c: 541: ++os.buttonCount;
 26607                           
 26608                           ; BSR set to: 0
 26609  006DA2  0100               	movlb	0	; () banked
 26610  006DA4  2BC2               	incf	(_os+1)& (0+255),f,b
 26611                           
 26612                           ; BSR set to: 0
 26613                           ;api.c: 543: }
 26614                           
 26615                           ;api.c: 542: break;
 26616  006DA6  0012               	return	
 26617  006DA8                     l2842:
 26618                           
 26619                           ; BSR set to: 0
 26620  006DA8  5024               	movf	__parse_command_short@cmd,w,c
 26621                           
 26622                           ; Switch size 1, requested type "space"
 26623                           ; Number of cases is 8, Range of values is 32 to 62
 26624                           ; switch strategies available:
 26625                           ; Name         Instructions Cycles
 26626                           ; simple_byte           25    13 (average)
 26627                           ;	Chosen strategy is simple_byte
 26628  006DAA  0A20               	xorlw	32	; case 32
 26629  006DAC  B4D8               	btfsc	status,2,c
 26630  006DAE  D7B5               	goto	l2843
 26631  006DB0  0A01               	xorlw	1	; case 33
 26632  006DB2  B4D8               	btfsc	status,2,c
 26633  006DB4  D7C0               	goto	l2845
 26634  006DB6  0A03               	xorlw	3	; case 34
 26635  006DB8  B4D8               	btfsc	status,2,c
 26636  006DBA  D7CB               	goto	l2846
 26637  006DBC  0A01               	xorlw	1	; case 35
 26638  006DBE  B4D8               	btfsc	status,2,c
 26639  006DC0  D7D6               	goto	l2847
 26640  006DC2  0A07               	xorlw	7	; case 36
 26641  006DC4  B4D8               	btfsc	status,2,c
 26642  006DC6  D7E1               	goto	l2848
 26643  006DC8  0A18               	xorlw	24	; case 60
 26644  006DCA  B4D8               	btfsc	status,2,c
 26645  006DCC  D7E4               	goto	l2849
 26646  006DCE  0A01               	xorlw	1	; case 61
 26647  006DD0  B4D8               	btfsc	status,2,c
 26648  006DD2  D7E4               	goto	l2850
 26649  006DD4  0A03               	xorlw	3	; case 62
 26650  006DD6  A4D8               	btfss	status,2,c
 26651  006DD8  0012               	return	
 26652  006DDA  D7E3               	goto	l2851
 26653  006DDC                     __end_of__parse_command_short:
 26654                           	opt stack 0
 26655                           tosu	equ	0xFFF
 26656                           tosh	equ	0xFFE
 26657                           tosl	equ	0xFFD
 26658                           pclath	equ	0xFFA
 26659                           tblptru	equ	0xFF8
 26660                           tblptrh	equ	0xFF7
 26661                           tblptrl	equ	0xFF6
 26662                           tablat	equ	0xFF5
 26663                           prodh	equ	0xFF4
 26664                           prodl	equ	0xFF3
 26665                           intcon	equ	0xFF2
 26666                           intcon2	equ	0xFF1
 26667                           intcon3	equ	0xFF0
 26668                           indf0	equ	0xFEF
 26669                           postinc0	equ	0xFEE
 26670                           fsr0h	equ	0xFEA
 26671                           fsr0l	equ	0xFE9
 26672                           wreg	equ	0xFE8
 26673                           indf1	equ	0xFE7
 26674                           postdec1	equ	0xFE5
 26675                           plusw1	equ	0xFE3
 26676                           fsr1h	equ	0xFE2
 26677                           fsr1l	equ	0xFE1
 26678                           indf2	equ	0xFDF
 26679                           postinc2	equ	0xFDE
 26680                           postdec2	equ	0xFDD
 26681                           plusw2	equ	0xFDB
 26682                           fsr2h	equ	0xFDA
 26683                           fsr2l	equ	0xFD9
 26684                           status	equ	0xFD8
 26685                           
 26686 ;; *************** function _system_delay_ms *****************
 26687 ;; Defined at:
 26688 ;;		line 64 in file "os.c"
 26689 ;; Parameters:    Size  Location     Type
 26690 ;;  ms              1    wreg     unsigned char 
 26691 ;; Auto vars:     Size  Location     Type
 26692 ;;  ms              1    1[COMRAM] unsigned char 
 26693 ;;  cntr            1    2[COMRAM] unsigned char 
 26694 ;; Return value:  Size  Location     Type
 26695 ;;                  1    wreg      void 
 26696 ;; Registers used:
 26697 ;;		wreg, status,2, status,0, cstack
 26698 ;; Tracked objects:
 26699 ;;		On entry : 0/0
 26700 ;;		On exit  : 0/0
 26701 ;;		Unchanged: 0/0
 26702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26707 ;;Total ram usage:        3 bytes
 26708 ;; Hardware stack levels used:    1
 26709 ;; This function calls:
 26710 ;;		Nothing
 26711 ;; This function is called by:
 26712 ;;		_system_minimal_init
 26713 ;;		__ui_encoder
 26714 ;;		__parse_command_short
 26715 ;;		_i2c_digipot_set_defaults
 26716 ;; This function uses a non-reentrant model
 26717 ;;
 26718                           
 26719                           	psect	text125
 26720  009D3C                     __ptext125:
 26721                           	opt stack 0
 26722  009D3C                     _system_delay_ms:
 26723                           	opt stack 28
 26724                           
 26725                           ;incstack = 0
 26726                           ;system_delay_ms@ms stored from wreg
 26727  009D3C  6E02               	movwf	system_delay_ms@ms,c
 26728                           
 26729                           ;os.c: 66: uint8_t cntr;;os.c: 67: for(cntr=0; cntr<ms; ++cntr)
 26730  009D3E  0E00               	movlw	0
 26731  009D40  6E03               	movwf	system_delay_ms@cntr,c
 26732  009D42  D009               	goto	l1086
 26733  009D44                     
 26734                           ;os.c: 68: {;os.c: 69: _delay((unsigned long)((6)*(8000000/4000.0)));
 26735  009D44  0E10               	movlw	16
 26736  009D46  6E01               	movwf	??_system_delay_ms& (0+255),c
 26737  009D48  0E94               	movlw	148
 26738  009D4A                     u14907:
 26739  009D4A  2EE8               	decfsz	wreg,f,c
 26740  009D4C  D7FE               	bra	u14907
 26741  009D4E  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26742  009D50  D7FC               	bra	u14907
 26743  009D52  D000               	nop2	
 26744  009D54  2A03               	incf	system_delay_ms@cntr,f,c
 26745  009D56                     l1086:
 26746  009D56  5002               	movf	system_delay_ms@ms,w,c
 26747  009D58  5C03               	subwf	system_delay_ms@cntr,w,c
 26748  009D5A  B0D8               	btfsc	status,0,c
 26749  009D5C  0012               	return	
 26750  009D5E  D7F2               	goto	l1087
 26751  009D60                     __end_of_system_delay_ms:
 26752                           	opt stack 0
 26753                           tosu	equ	0xFFF
 26754                           tosh	equ	0xFFE
 26755                           tosl	equ	0xFFD
 26756                           pclath	equ	0xFFA
 26757                           tblptru	equ	0xFF8
 26758                           tblptrh	equ	0xFF7
 26759                           tblptrl	equ	0xFF6
 26760                           tablat	equ	0xFF5
 26761                           prodh	equ	0xFF4
 26762                           prodl	equ	0xFF3
 26763                           intcon	equ	0xFF2
 26764                           intcon2	equ	0xFF1
 26765                           intcon3	equ	0xFF0
 26766                           indf0	equ	0xFEF
 26767                           postinc0	equ	0xFEE
 26768                           fsr0h	equ	0xFEA
 26769                           fsr0l	equ	0xFE9
 26770                           wreg	equ	0xFE8
 26771                           indf1	equ	0xFE7
 26772                           postdec1	equ	0xFE5
 26773                           plusw1	equ	0xFE3
 26774                           fsr1h	equ	0xFE2
 26775                           fsr1l	equ	0xFE1
 26776                           indf2	equ	0xFDF
 26777                           postinc2	equ	0xFDE
 26778                           postdec2	equ	0xFDD
 26779                           plusw2	equ	0xFDB
 26780                           fsr2h	equ	0xFDA
 26781                           fsr2l	equ	0xFD9
 26782                           status	equ	0xFD8
 26783                           
 26784 ;; *************** function _reboot *****************
 26785 ;; Defined at:
 26786 ;;		line 260 in file "os.c"
 26787 ;; Parameters:    Size  Location     Type
 26788 ;;		None
 26789 ;; Auto vars:     Size  Location     Type
 26790 ;;		None
 26791 ;; Return value:  Size  Location     Type
 26792 ;;                  1    wreg      void 
 26793 ;; Registers used:
 26794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26795 ;; Tracked objects:
 26796 ;;		On entry : 0/0
 26797 ;;		On exit  : 0/0
 26798 ;;		Unchanged: 0/0
 26799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26804 ;;Total ram usage:        0 bytes
 26805 ;; Hardware stack levels used:    1
 26806 ;; Hardware stack levels required when called:    6
 26807 ;; This function calls:
 26808 ;;		_display_prepare
 26809 ;;		_display_update
 26810 ;;		_ui_get_status
 26811 ;; This function is called by:
 26812 ;;		__ui_encoder
 26813 ;;		__parse_command_short
 26814 ;; This function uses a non-reentrant model
 26815 ;;
 26816                           
 26817                           	psect	text126
 26818  009F14                     __ptext126:
 26819                           	opt stack 0
 26820  009F14                     _reboot:
 26821                           	opt stack 22
 26822                           
 26823                           ;os.c: 263: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26824                           
 26825                           ;incstack = 0
 26826  009F14  0E80               	movlw	128
 26827  009F16  0100               	movlb	0	; () banked
 26828  009F18  6FC6               	movwf	(_os+5)& (0+255),b
 26829                           
 26830                           ; BSR set to: 0
 26831                           ;os.c: 264: display_prepare(os.display_mode);
 26832  009F1A  51C6               	movf	(_os+5)& (0+255),w,b
 26833  009F1C  EC14  F034         	call	_display_prepare
 26834                           
 26835                           ;os.c: 265: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26836  009F20  EC94  F050         	call	_ui_get_status	;wreg free
 26837  009F24  0A05               	xorlw	5
 26838  009F26  B4D8               	btfsc	status,2,c
 26839                           
 26840                           ;os.c: 266: {;os.c: 267: display_update();
 26841  009F28  EC12  F045         	call	_display_update	;wreg free
 26842  009F2C                     
 26843                           ;os.c: 268: };os.c: 271: while(1);
 26844  009F2C  D7FF               	goto	l1113
 26845  009F2E                     __end_of_reboot:
 26846                           	opt stack 0
 26847                           tosu	equ	0xFFF
 26848                           tosh	equ	0xFFE
 26849                           tosl	equ	0xFFD
 26850                           pclath	equ	0xFFA
 26851                           tblptru	equ	0xFF8
 26852                           tblptrh	equ	0xFF7
 26853                           tblptrl	equ	0xFF6
 26854                           tablat	equ	0xFF5
 26855                           prodh	equ	0xFF4
 26856                           prodl	equ	0xFF3
 26857                           intcon	equ	0xFF2
 26858                           intcon2	equ	0xFF1
 26859                           intcon3	equ	0xFF0
 26860                           indf0	equ	0xFEF
 26861                           postinc0	equ	0xFEE
 26862                           fsr0h	equ	0xFEA
 26863                           fsr0l	equ	0xFE9
 26864                           wreg	equ	0xFE8
 26865                           indf1	equ	0xFE7
 26866                           postdec1	equ	0xFE5
 26867                           plusw1	equ	0xFE3
 26868                           fsr1h	equ	0xFE2
 26869                           fsr1l	equ	0xFE1
 26870                           indf2	equ	0xFDF
 26871                           postinc2	equ	0xFDE
 26872                           postdec2	equ	0xFDD
 26873                           plusw2	equ	0xFDB
 26874                           fsr2h	equ	0xFDA
 26875                           fsr2l	equ	0xFD9
 26876                           status	equ	0xFD8
 26877                           
 26878 ;; *************** function _ui_get_status *****************
 26879 ;; Defined at:
 26880 ;;		line 105 in file "ui.c"
 26881 ;; Parameters:    Size  Location     Type
 26882 ;;		None
 26883 ;; Auto vars:     Size  Location     Type
 26884 ;;		None
 26885 ;; Return value:  Size  Location     Type
 26886 ;;                  1    wreg      enum E7932
 26887 ;; Registers used:
 26888 ;;		wreg, status,2
 26889 ;; Tracked objects:
 26890 ;;		On entry : 0/0
 26891 ;;		On exit  : 0/0
 26892 ;;		Unchanged: 0/0
 26893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26898 ;;Total ram usage:        0 bytes
 26899 ;; Hardware stack levels used:    1
 26900 ;; This function calls:
 26901 ;;		Nothing
 26902 ;; This function is called by:
 26903 ;;		_main
 26904 ;;		_reboot
 26905 ;;		__fill_buffer_get_status
 26906 ;; This function uses a non-reentrant model
 26907 ;;
 26908                           
 26909                           	psect	text127
 26910  00A128                     __ptext127:
 26911                           	opt stack 0
 26912  00A128                     _ui_get_status:
 26913                           	opt stack 27
 26914                           
 26915                           ;ui.c: 107: return userInterfaceStatus;
 26916                           
 26917                           ;incstack = 0
 26918  00A128  0100               	movlb	0	; () banked
 26919  00A12A  51E9               	movf	_userInterfaceStatus& (0+255),w,b
 26920  00A12C  0012               	return	
 26921  00A12E                     __end_of_ui_get_status:
 26922                           	opt stack 0
 26923                           tosu	equ	0xFFF
 26924                           tosh	equ	0xFFE
 26925                           tosl	equ	0xFFD
 26926                           pclath	equ	0xFFA
 26927                           tblptru	equ	0xFF8
 26928                           tblptrh	equ	0xFF7
 26929                           tblptrl	equ	0xFF6
 26930                           tablat	equ	0xFF5
 26931                           prodh	equ	0xFF4
 26932                           prodl	equ	0xFF3
 26933                           intcon	equ	0xFF2
 26934                           intcon2	equ	0xFF1
 26935                           intcon3	equ	0xFF0
 26936                           indf0	equ	0xFEF
 26937                           postinc0	equ	0xFEE
 26938                           fsr0h	equ	0xFEA
 26939                           fsr0l	equ	0xFE9
 26940                           wreg	equ	0xFE8
 26941                           indf1	equ	0xFE7
 26942                           postdec1	equ	0xFE5
 26943                           plusw1	equ	0xFE3
 26944                           fsr1h	equ	0xFE2
 26945                           fsr1l	equ	0xFE1
 26946                           indf2	equ	0xFDF
 26947                           postinc2	equ	0xFDE
 26948                           postdec2	equ	0xFDD
 26949                           plusw2	equ	0xFDB
 26950                           fsr2h	equ	0xFDA
 26951                           fsr2l	equ	0xFD9
 26952                           status	equ	0xFD8
 26953                           
 26954 ;; *************** function _display_update *****************
 26955 ;; Defined at:
 26956 ;;		line 567 in file "display.c"
 26957 ;; Parameters:    Size  Location     Type
 26958 ;;		None
 26959 ;; Auto vars:     Size  Location     Type
 26960 ;;		None
 26961 ;; Return value:  Size  Location     Type
 26962 ;;                  1    wreg      void 
 26963 ;; Registers used:
 26964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26965 ;; Tracked objects:
 26966 ;;		On entry : 0/0
 26967 ;;		On exit  : 0/0
 26968 ;;		Unchanged: 0/0
 26969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26974 ;;Total ram usage:        0 bytes
 26975 ;; Hardware stack levels used:    1
 26976 ;; Hardware stack levels required when called:    4
 26977 ;; This function calls:
 26978 ;;		_i2c_display_cursor
 26979 ;;		_i2c_display_write_fixed
 26980 ;; This function is called by:
 26981 ;;		_main
 26982 ;;		_reboot
 26983 ;; This function uses a non-reentrant model
 26984 ;;
 26985                           
 26986                           	psect	text128
 26987  008A24                     __ptext128:
 26988                           	opt stack 0
 26989  008A24                     _display_update:
 26990                           	opt stack 23
 26991                           
 26992                           ;display.c: 569: i2c_display_cursor(0, 0);
 26993                           
 26994                           ; BSR set to: 0
 26995                           ;incstack = 0
 26996  008A24  0E00               	movlw	0
 26997  008A26  6E0E               	movwf	i2c_display_cursor@position,c
 26998  008A28  0E00               	movlw	0
 26999  008A2A  ECB0  F04E         	call	_i2c_display_cursor
 27000                           
 27001                           ;display.c: 570: i2c_display_write_fixed(&display_content[0][0], 20);
 27002  008A2E  0E00               	movlw	low _display_content
 27003  008A30  6E06               	movwf	i2c_display_write_fixed@data,c
 27004  008A32  0E02               	movlw	high _display_content
 27005  008A34  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27006  008A36  0E14               	movlw	20
 27007  008A38  6E08               	movwf	i2c_display_write_fixed@length,c
 27008  008A3A  EC3C  F048         	call	_i2c_display_write_fixed	;wreg free
 27009                           
 27010                           ;display.c: 571: i2c_display_cursor(1, 0);
 27011  008A3E  0E00               	movlw	0
 27012  008A40  6E0E               	movwf	i2c_display_cursor@position,c
 27013  008A42  0E01               	movlw	1
 27014  008A44  ECB0  F04E         	call	_i2c_display_cursor
 27015                           
 27016                           ;display.c: 572: i2c_display_write_fixed(&display_content[1][0], 20);
 27017  008A48  0E14               	movlw	low (_display_content+20)
 27018  008A4A  6E06               	movwf	i2c_display_write_fixed@data,c
 27019  008A4C  0E02               	movlw	high (_display_content+20)
 27020  008A4E  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27021  008A50  0E14               	movlw	20
 27022  008A52  6E08               	movwf	i2c_display_write_fixed@length,c
 27023  008A54  EC3C  F048         	call	_i2c_display_write_fixed	;wreg free
 27024                           
 27025                           ;display.c: 573: i2c_display_cursor(2, 0);
 27026  008A58  0E00               	movlw	0
 27027  008A5A  6E0E               	movwf	i2c_display_cursor@position,c
 27028  008A5C  0E02               	movlw	2
 27029  008A5E  ECB0  F04E         	call	_i2c_display_cursor
 27030                           
 27031                           ;display.c: 574: i2c_display_write_fixed(&display_content[2][0], 20);
 27032  008A62  0E28               	movlw	low (_display_content+40)
 27033  008A64  6E06               	movwf	i2c_display_write_fixed@data,c
 27034  008A66  0E02               	movlw	high (_display_content+40)
 27035  008A68  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27036  008A6A  0E14               	movlw	20
 27037  008A6C  6E08               	movwf	i2c_display_write_fixed@length,c
 27038  008A6E  EC3C  F048         	call	_i2c_display_write_fixed	;wreg free
 27039                           
 27040                           ;display.c: 575: i2c_display_cursor(3, 0);
 27041  008A72  0E00               	movlw	0
 27042  008A74  6E0E               	movwf	i2c_display_cursor@position,c
 27043  008A76  0E03               	movlw	3
 27044  008A78  ECB0  F04E         	call	_i2c_display_cursor
 27045                           
 27046                           ;display.c: 576: i2c_display_write_fixed(&display_content[3][0], 20);
 27047  008A7C  0E3C               	movlw	low (_display_content+60)
 27048  008A7E  6E06               	movwf	i2c_display_write_fixed@data,c
 27049  008A80  0E02               	movlw	high (_display_content+60)
 27050  008A82  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27051  008A84  0E14               	movlw	20
 27052  008A86  6E08               	movwf	i2c_display_write_fixed@length,c
 27053  008A88  EC3C  F048         	call	_i2c_display_write_fixed	;wreg free
 27054  008A8C  0012               	return		;funcret
 27055  008A8E                     __end_of_display_update:
 27056                           	opt stack 0
 27057                           tosu	equ	0xFFF
 27058                           tosh	equ	0xFFE
 27059                           tosl	equ	0xFFD
 27060                           pclath	equ	0xFFA
 27061                           tblptru	equ	0xFF8
 27062                           tblptrh	equ	0xFF7
 27063                           tblptrl	equ	0xFF6
 27064                           tablat	equ	0xFF5
 27065                           prodh	equ	0xFF4
 27066                           prodl	equ	0xFF3
 27067                           intcon	equ	0xFF2
 27068                           intcon2	equ	0xFF1
 27069                           intcon3	equ	0xFF0
 27070                           indf0	equ	0xFEF
 27071                           postinc0	equ	0xFEE
 27072                           fsr0h	equ	0xFEA
 27073                           fsr0l	equ	0xFE9
 27074                           wreg	equ	0xFE8
 27075                           indf1	equ	0xFE7
 27076                           postdec1	equ	0xFE5
 27077                           plusw1	equ	0xFE3
 27078                           fsr1h	equ	0xFE2
 27079                           fsr1l	equ	0xFE1
 27080                           indf2	equ	0xFDF
 27081                           postinc2	equ	0xFDE
 27082                           postdec2	equ	0xFDD
 27083                           plusw2	equ	0xFDB
 27084                           fsr2h	equ	0xFDA
 27085                           fsr2l	equ	0xFD9
 27086                           status	equ	0xFD8
 27087                           
 27088 ;; *************** function _i2c_display_write_fixed *****************
 27089 ;; Defined at:
 27090 ;;		line 278 in file "i2c.c"
 27091 ;; Parameters:    Size  Location     Type
 27092 ;;  data            2    5[COMRAM] PTR unsigned char 
 27093 ;;		 -> display_content(80), 
 27094 ;;  length          1    7[COMRAM] unsigned char 
 27095 ;; Auto vars:     Size  Location     Type
 27096 ;;  pos             1    8[COMRAM] unsigned char 
 27097 ;; Return value:  Size  Location     Type
 27098 ;;                  1    wreg      void 
 27099 ;; Registers used:
 27100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27101 ;; Tracked objects:
 27102 ;;		On entry : 0/0
 27103 ;;		On exit  : 0/0
 27104 ;;		Unchanged: 0/0
 27105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27110 ;;Total ram usage:        4 bytes
 27111 ;; Hardware stack levels used:    1
 27112 ;; Hardware stack levels required when called:    1
 27113 ;; This function calls:
 27114 ;;		__i2c_send
 27115 ;;		__i2c_start
 27116 ;;		__i2c_stop
 27117 ;;		__i2c_wait_idle
 27118 ;;		_i2c_set_frequency
 27119 ;; This function is called by:
 27120 ;;		_display_update
 27121 ;; This function uses a non-reentrant model
 27122 ;;
 27123                           
 27124                           	psect	text129
 27125  009078                     __ptext129:
 27126                           	opt stack 0
 27127  009078                     _i2c_display_write_fixed:
 27128                           	opt stack 25
 27129                           
 27130                           ;i2c.c: 280: uint8_t pos;;i2c.c: 283: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27131                           
 27132                           ;incstack = 0
 27133  009078  0E02               	movlw	2
 27134  00907A  ECC3  F04D         	call	_i2c_set_frequency
 27135                           
 27136                           ;i2c.c: 285: _i2c_wait_idle();
 27137  00907E  EC61  F047         	call	__i2c_wait_idle	;wreg free
 27138                           
 27139                           ;i2c.c: 286: _i2c_start();
 27140  009082  EC80  F050         	call	__i2c_start	;wreg free
 27141                           
 27142                           ;i2c.c: 287: _i2c_wait_idle();
 27143  009086  EC61  F047         	call	__i2c_wait_idle	;wreg free
 27144                           
 27145                           ;i2c.c: 288: _i2c_send(0b01111000);
 27146  00908A  0E78               	movlw	120
 27147  00908C  EC84  F050         	call	__i2c_send
 27148                           
 27149                           ;i2c.c: 289: _i2c_wait_idle();
 27150  009090  EC61  F047         	call	__i2c_wait_idle	;wreg free
 27151                           
 27152                           ;i2c.c: 290: _i2c_send(0b01000000);
 27153  009094  0E40               	movlw	64
 27154  009096  EC84  F050         	call	__i2c_send
 27155                           
 27156                           ;i2c.c: 291: _i2c_wait_idle();
 27157  00909A  EC61  F047         	call	__i2c_wait_idle	;wreg free
 27158                           
 27159                           ;i2c.c: 294: for(pos=0; pos<length; ++pos)
 27160  00909E  0E00               	movlw	0
 27161  0090A0  6E09               	movwf	i2c_display_write_fixed@pos,c
 27162  0090A2  D00E               	goto	l1228
 27163  0090A4                     
 27164                           ;i2c.c: 295: {;i2c.c: 296: _i2c_send(data[pos]);
 27165  0090A4  5009               	movf	i2c_display_write_fixed@pos,w,c
 27166  0090A6  0D01               	mullw	1
 27167  0090A8  50F3               	movf	prodl,w,c
 27168  0090AA  2406               	addwf	i2c_display_write_fixed@data,w,c
 27169  0090AC  6ED9               	movwf	fsr2l,c
 27170  0090AE  50F4               	movf	prodh,w,c
 27171  0090B0  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 27172  0090B2  6EDA               	movwf	fsr2h,c
 27173  0090B4  50DF               	movf	indf2,w,c
 27174  0090B6  EC84  F050         	call	__i2c_send
 27175                           
 27176                           ;i2c.c: 297: _i2c_wait_idle();
 27177  0090BA  EC61  F047         	call	__i2c_wait_idle	;wreg free
 27178  0090BE  2A09               	incf	i2c_display_write_fixed@pos,f,c
 27179  0090C0                     l1228:
 27180  0090C0  5008               	movf	i2c_display_write_fixed@length,w,c
 27181  0090C2  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 27182  0090C4  A0D8               	btfss	status,0,c
 27183  0090C6  D7EE               	goto	l1229
 27184                           
 27185                           ;i2c.c: 298: };i2c.c: 300: _i2c_stop();
 27186  0090C8  EC7C  F050         	call	__i2c_stop	;wreg free
 27187  0090CC  0012               	return		;funcret
 27188  0090CE                     __end_of_i2c_display_write_fixed:
 27189                           	opt stack 0
 27190                           tosu	equ	0xFFF
 27191                           tosh	equ	0xFFE
 27192                           tosl	equ	0xFFD
 27193                           pclath	equ	0xFFA
 27194                           tblptru	equ	0xFF8
 27195                           tblptrh	equ	0xFF7
 27196                           tblptrl	equ	0xFF6
 27197                           tablat	equ	0xFF5
 27198                           prodh	equ	0xFF4
 27199                           prodl	equ	0xFF3
 27200                           intcon	equ	0xFF2
 27201                           intcon2	equ	0xFF1
 27202                           intcon3	equ	0xFF0
 27203                           indf0	equ	0xFEF
 27204                           postinc0	equ	0xFEE
 27205                           fsr0h	equ	0xFEA
 27206                           fsr0l	equ	0xFE9
 27207                           wreg	equ	0xFE8
 27208                           indf1	equ	0xFE7
 27209                           postdec1	equ	0xFE5
 27210                           plusw1	equ	0xFE3
 27211                           fsr1h	equ	0xFE2
 27212                           fsr1l	equ	0xFE1
 27213                           indf2	equ	0xFDF
 27214                           postinc2	equ	0xFDE
 27215                           postdec2	equ	0xFDD
 27216                           plusw2	equ	0xFDB
 27217                           fsr2h	equ	0xFDA
 27218                           fsr2l	equ	0xFD9
 27219                           status	equ	0xFD8
 27220                           
 27221 ;; *************** function _i2c_display_cursor *****************
 27222 ;; Defined at:
 27223 ;;		line 238 in file "i2c.c"
 27224 ;; Parameters:    Size  Location     Type
 27225 ;;  line            1    wreg     unsigned char 
 27226 ;;  position        1   13[COMRAM] unsigned char 
 27227 ;; Auto vars:     Size  Location     Type
 27228 ;;  line            1   14[COMRAM] unsigned char 
 27229 ;;  address         1   15[COMRAM] unsigned char 
 27230 ;; Return value:  Size  Location     Type
 27231 ;;                  1    wreg      void 
 27232 ;; Registers used:
 27233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27234 ;; Tracked objects:
 27235 ;;		On entry : 0/0
 27236 ;;		On exit  : 0/0
 27237 ;;		Unchanged: 0/0
 27238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27243 ;;Total ram usage:        3 bytes
 27244 ;; Hardware stack levels used:    1
 27245 ;; Hardware stack levels required when called:    3
 27246 ;; This function calls:
 27247 ;;		__ic2_display_set_address
 27248 ;;		_i2c_set_frequency
 27249 ;; This function is called by:
 27250 ;;		_display_update
 27251 ;; This function uses a non-reentrant model
 27252 ;;
 27253                           
 27254                           	psect	text130
 27255  009D60                     __ptext130:
 27256                           	opt stack 0
 27257  009D60                     _i2c_display_cursor:
 27258                           	opt stack 23
 27259                           
 27260                           ;incstack = 0
 27261                           ;i2c_display_cursor@line stored from wreg
 27262  009D60  6E0F               	movwf	i2c_display_cursor@line,c
 27263                           
 27264                           ;i2c.c: 240: uint8_t address;;i2c.c: 243: line &= 0b11;
 27265  009D62  0E03               	movlw	3
 27266  009D64  160F               	andwf	i2c_display_cursor@line,f,c
 27267                           
 27268                           ;i2c.c: 244: address = line<<5;
 27269  009D66  380F               	swapf	i2c_display_cursor@line,w,c
 27270  009D68  46E8               	rlncf	wreg,f,c
 27271  009D6A  0BE0               	andlw	224
 27272  009D6C  6E10               	movwf	i2c_display_cursor@address,c
 27273                           
 27274                           ;i2c.c: 245: position &= 0b11111;
 27275  009D6E  0E1F               	movlw	31
 27276  009D70  160E               	andwf	i2c_display_cursor@position,f,c
 27277                           
 27278                           ;i2c.c: 246: address |= position;
 27279  009D72  500E               	movf	i2c_display_cursor@position,w,c
 27280  009D74  1210               	iorwf	i2c_display_cursor@address,f,c
 27281                           
 27282                           ;i2c.c: 249: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27283  009D76  0E02               	movlw	2
 27284  009D78  ECC3  F04D         	call	_i2c_set_frequency
 27285                           
 27286                           ;i2c.c: 252: _ic2_display_set_address(address);
 27287  009D7C  5010               	movf	i2c_display_cursor@address,w,c
 27288  009D7E  EC3F  F04E         	call	__ic2_display_set_address
 27289  009D82  0012               	return		;funcret
 27290  009D84                     __end_of_i2c_display_cursor:
 27291                           	opt stack 0
 27292                           tosu	equ	0xFFF
 27293                           tosh	equ	0xFFE
 27294                           tosl	equ	0xFFD
 27295                           pclath	equ	0xFFA
 27296                           tblptru	equ	0xFF8
 27297                           tblptrh	equ	0xFF7
 27298                           tblptrl	equ	0xFF6
 27299                           tablat	equ	0xFF5
 27300                           prodh	equ	0xFF4
 27301                           prodl	equ	0xFF3
 27302                           intcon	equ	0xFF2
 27303                           intcon2	equ	0xFF1
 27304                           intcon3	equ	0xFF0
 27305                           indf0	equ	0xFEF
 27306                           postinc0	equ	0xFEE
 27307                           fsr0h	equ	0xFEA
 27308                           fsr0l	equ	0xFE9
 27309                           wreg	equ	0xFE8
 27310                           indf1	equ	0xFE7
 27311                           postdec1	equ	0xFE5
 27312                           plusw1	equ	0xFE3
 27313                           fsr1h	equ	0xFE2
 27314                           fsr1l	equ	0xFE1
 27315                           indf2	equ	0xFDF
 27316                           postinc2	equ	0xFDE
 27317                           postdec2	equ	0xFDD
 27318                           plusw2	equ	0xFDB
 27319                           fsr2h	equ	0xFDA
 27320                           fsr2l	equ	0xFD9
 27321                           status	equ	0xFD8
 27322                           
 27323 ;; *************** function __ic2_display_set_address *****************
 27324 ;; Defined at:
 27325 ;;		line 202 in file "i2c.c"
 27326 ;; Parameters:    Size  Location     Type
 27327 ;;  address         1    wreg     unsigned char 
 27328 ;; Auto vars:     Size  Location     Type
 27329 ;;  address         1   10[COMRAM] unsigned char 
 27330 ;;  data_array      2   11[COMRAM] unsigned char [2]
 27331 ;; Return value:  Size  Location     Type
 27332 ;;                  1    wreg      void 
 27333 ;; Registers used:
 27334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27335 ;; Tracked objects:
 27336 ;;		On entry : 0/0
 27337 ;;		On exit  : 0/0
 27338 ;;		Unchanged: 0/0
 27339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27341 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27344 ;;Total ram usage:        3 bytes
 27345 ;; Hardware stack levels used:    1
 27346 ;; Hardware stack levels required when called:    2
 27347 ;; This function calls:
 27348 ;;		__i2c_write
 27349 ;;		_i2c_set_frequency
 27350 ;; This function is called by:
 27351 ;;		_i2c_display_cursor
 27352 ;; This function uses a non-reentrant model
 27353 ;;
 27354                           
 27355                           	psect	text131
 27356  009C7E                     __ptext131:
 27357                           	opt stack 0
 27358  009C7E                     __ic2_display_set_address:
 27359                           	opt stack 23
 27360                           
 27361                           ;incstack = 0
 27362                           ;__ic2_display_set_address@address stored from wreg
 27363  009C7E  6E0B               	movwf	__ic2_display_set_address@address,c
 27364                           
 27365                           ;i2c.c: 204: uint8_t data_array[2];;i2c.c: 205: data_array[0] = 0b00000000;
 27366  009C80  0E00               	movlw	0
 27367  009C82  6E0C               	movwf	__ic2_display_set_address@data_array,c
 27368                           
 27369                           ;i2c.c: 206: data_array[1] = 0b10000000 | address;
 27370  009C84  500B               	movf	__ic2_display_set_address@address,w,c
 27371  009C86  0980               	iorlw	128
 27372  009C88  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 27373                           
 27374                           ;i2c.c: 209: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27375  009C8A  0E02               	movlw	2
 27376  009C8C  ECC3  F04D         	call	_i2c_set_frequency
 27377                           
 27378                           ;i2c.c: 212: _i2c_write(0b01111000, &data_array[0], 2);
 27379  009C90  0E0C               	movlw	low __ic2_display_set_address@data_array
 27380  009C92  6E06               	movwf	__i2c_write@data,c
 27381  009C94  0E00               	movlw	high __ic2_display_set_address@data_array
 27382  009C96  6E07               	movwf	__i2c_write@data+1,c
 27383  009C98  0E02               	movlw	2
 27384  009C9A  6E08               	movwf	__i2c_write@length,c
 27385  009C9C  0E78               	movlw	120
 27386  009C9E  EC57  F04A         	call	__i2c_write
 27387  009CA2  0012               	return		;funcret
 27388  009CA4                     __end_of__ic2_display_set_address:
 27389                           	opt stack 0
 27390                           tosu	equ	0xFFF
 27391                           tosh	equ	0xFFE
 27392                           tosl	equ	0xFFD
 27393                           pclath	equ	0xFFA
 27394                           tblptru	equ	0xFF8
 27395                           tblptrh	equ	0xFF7
 27396                           tblptrl	equ	0xFF6
 27397                           tablat	equ	0xFF5
 27398                           prodh	equ	0xFF4
 27399                           prodl	equ	0xFF3
 27400                           intcon	equ	0xFF2
 27401                           intcon2	equ	0xFF1
 27402                           intcon3	equ	0xFF0
 27403                           indf0	equ	0xFEF
 27404                           postinc0	equ	0xFEE
 27405                           fsr0h	equ	0xFEA
 27406                           fsr0l	equ	0xFE9
 27407                           wreg	equ	0xFE8
 27408                           indf1	equ	0xFE7
 27409                           postdec1	equ	0xFE5
 27410                           plusw1	equ	0xFE3
 27411                           fsr1h	equ	0xFE2
 27412                           fsr1l	equ	0xFE1
 27413                           indf2	equ	0xFDF
 27414                           postinc2	equ	0xFDE
 27415                           postdec2	equ	0xFDD
 27416                           plusw2	equ	0xFDB
 27417                           fsr2h	equ	0xFDA
 27418                           fsr2l	equ	0xFD9
 27419                           status	equ	0xFD8
 27420                           
 27421 ;; *************** function _display_prepare *****************
 27422 ;; Defined at:
 27423 ;;		line 272 in file "display.c"
 27424 ;; Parameters:    Size  Location     Type
 27425 ;;  mode            1    wreg     unsigned char 
 27426 ;; Auto vars:     Size  Location     Type
 27427 ;;  mode            1   34[COMRAM] unsigned char 
 27428 ;; Return value:  Size  Location     Type
 27429 ;;                  1    wreg      void 
 27430 ;; Registers used:
 27431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27432 ;; Tracked objects:
 27433 ;;		On entry : 0/0
 27434 ;;		On exit  : 0/0
 27435 ;;		Unchanged: 0/0
 27436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27441 ;;Total ram usage:        3 bytes
 27442 ;; Hardware stack levels used:    1
 27443 ;; Hardware stack levels required when called:    5
 27444 ;; This function calls:
 27445 ;;		__display_checked
 27446 ;;		__display_clear
 27447 ;;		__display_done
 27448 ;;		__display_failed
 27449 ;;		__display_found
 27450 ;;		__display_programming
 27451 ;;		__display_rebooting
 27452 ;;		__display_search
 27453 ;;		__display_start
 27454 ;;		__display_suspended
 27455 ;;		__display_verify
 27456 ;; This function is called by:
 27457 ;;		_main
 27458 ;;		_reboot
 27459 ;; This function uses a non-reentrant model
 27460 ;;
 27461                           
 27462                           	psect	text132
 27463  006828                     __ptext132:
 27464                           	opt stack 0
 27465  006828                     _display_prepare:
 27466                           	opt stack 22
 27467                           
 27468                           ;incstack = 0
 27469                           ;display_prepare@mode stored from wreg
 27470  006828  6E23               	movwf	display_prepare@mode,c
 27471                           
 27472                           ;display.c: 274: _display_clear();
 27473  00682A  EC33  F04A         	call	__display_clear	;wreg free
 27474                           
 27475                           ;display.c: 276: switch(mode&0xF0)
 27476  00682E  D01E               	goto	l1560
 27477  006830                     
 27478                           ;display.c: 279: _display_start();
 27479  006830  EC2C  F01A         	call	__display_start	;wreg free
 27480                           
 27481                           ;display.c: 280: break;
 27482  006834  D04D               	goto	l1572
 27483  006836                     
 27484                           ;display.c: 283: _display_search();
 27485  006836  EC33  F025         	call	__display_search	;wreg free
 27486                           
 27487                           ;display.c: 284: break;
 27488  00683A  D04A               	goto	l1572
 27489  00683C                     
 27490                           ;display.c: 287: _display_found();
 27491  00683C  EC50  F018         	call	__display_found	;wreg free
 27492                           
 27493                           ;display.c: 288: break;
 27494  006840  D047               	goto	l1572
 27495  006842                     
 27496                           ;display.c: 291: _display_verify();
 27497  006842  EC5D  F028         	call	__display_verify	;wreg free
 27498                           
 27499                           ;display.c: 292: break;
 27500  006846  D044               	goto	l1572
 27501  006848                     
 27502                           ;display.c: 295: _display_checked();
 27503  006848  EC45  F01E         	call	__display_checked	;wreg free
 27504                           
 27505                           ;display.c: 296: break;
 27506  00684C  D041               	goto	l1572
 27507  00684E                     
 27508                           ;display.c: 299: _display_failed();
 27509  00684E  ECB8  F007         	call	__display_failed	;wreg free
 27510                           
 27511                           ;display.c: 300: break;
 27512  006852  D03E               	goto	l1572
 27513  006854                     
 27514                           ;display.c: 303: _display_programming();
 27515  006854  EC18  F01B         	call	__display_programming	;wreg free
 27516                           
 27517                           ;display.c: 304: break;
 27518  006858  D03B               	goto	l1572
 27519  00685A                     
 27520                           ;display.c: 307: _display_done();
 27521  00685A  EC01  F01F         	call	__display_done	;wreg free
 27522                           
 27523                           ;display.c: 308: break;
 27524  00685E  D038               	goto	l1572
 27525  006860                     
 27526                           ;display.c: 311: _display_rebooting();
 27527  006860  EC67  F048         	call	__display_rebooting	;wreg free
 27528                           
 27529                           ;display.c: 312: break;
 27530  006864  D035               	goto	l1572
 27531  006866                     
 27532                           ;display.c: 315: _display_suspended();
 27533  006866  EC8A  F024         	call	__display_suspended	;wreg free
 27534                           
 27535                           ;display.c: 317: }
 27536                           
 27537                           ;display.c: 316: break;
 27538  00686A  D032               	goto	l1572
 27539  00686C                     l1560:
 27540  00686C  5023               	movf	display_prepare@mode,w,c
 27541  00686E  0BF0               	andlw	240
 27542  006870  6E21               	movwf	??_display_prepare& (0+255),c
 27543  006872  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 27544                           
 27545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27546                           ; Switch size 1, requested type "space"
 27547                           ; Number of cases is 1, Range of values is 0 to 0
 27548                           ; switch strategies available:
 27549                           ; Name         Instructions Cycles
 27550                           ; simple_byte            4     3 (average)
 27551                           ;	Chosen strategy is simple_byte
 27552  006874  5022               	movf	??_display_prepare+1,w,c
 27553  006876  0A00               	xorlw	0	; case 0
 27554  006878  A4D8               	btfss	status,2,c
 27555  00687A  D02A               	goto	l1572
 27556                           
 27557                           ; Switch size 1, requested type "space"
 27558                           ; Number of cases is 10, Range of values is 0 to 144
 27559                           ; switch strategies available:
 27560                           ; Name         Instructions Cycles
 27561                           ; simple_byte           31    16 (average)
 27562                           ;	Chosen strategy is simple_byte
 27563  00687C  5021               	movf	??_display_prepare,w,c
 27564  00687E  0A00               	xorlw	0	; case 0
 27565  006880  B4D8               	btfsc	status,2,c
 27566  006882  D7D6               	goto	l1561
 27567  006884  0A10               	xorlw	16	; case 16
 27568  006886  B4D8               	btfsc	status,2,c
 27569  006888  D7D6               	goto	l1563
 27570  00688A  0A30               	xorlw	48	; case 32
 27571  00688C  B4D8               	btfsc	status,2,c
 27572  00688E  D7D6               	goto	l1564
 27573  006890  0A10               	xorlw	16	; case 48
 27574  006892  B4D8               	btfsc	status,2,c
 27575  006894  D7D6               	goto	l1565
 27576  006896  0A70               	xorlw	112	; case 64
 27577  006898  B4D8               	btfsc	status,2,c
 27578  00689A  D7D6               	goto	l1566
 27579  00689C  0A10               	xorlw	16	; case 80
 27580  00689E  B4D8               	btfsc	status,2,c
 27581  0068A0  D7D6               	goto	l1567
 27582  0068A2  0A30               	xorlw	48	; case 96
 27583  0068A4  B4D8               	btfsc	status,2,c
 27584  0068A6  D7D6               	goto	l1568
 27585  0068A8  0A10               	xorlw	16	; case 112
 27586  0068AA  B4D8               	btfsc	status,2,c
 27587  0068AC  D7D6               	goto	l1569
 27588  0068AE  0AF0               	xorlw	240	; case 128
 27589  0068B0  B4D8               	btfsc	status,2,c
 27590  0068B2  D7D6               	goto	l1570
 27591  0068B4  0A10               	xorlw	16	; case 144
 27592  0068B6  B4D8               	btfsc	status,2,c
 27593  0068B8  D7D6               	goto	l1571
 27594                           
 27595                           ;display.c: 320: switch((os.timeSlot>>5)&0b11)
 27596  0068BA  D00A               	goto	l1572
 27597  0068BC                     
 27598                           ;display.c: 323: display_content[0][17] = '.';
 27599  0068BC  0E2E               	movlw	46
 27600  0068BE  0102               	movlb	2	; () banked
 27601  0068C0  6F11               	movwf	(_display_content+17)& (0+255),b
 27602  0068C2                     l1574:
 27603                           
 27604                           ;display.c: 326: display_content[0][16] = '.';
 27605  0068C2  0E2E               	movlw	46
 27606  0068C4  0102               	movlb	2	; () banked
 27607  0068C6  6F10               	movwf	(_display_content+16)& (0+255),b
 27608  0068C8                     l1575:
 27609                           
 27610                           ;display.c: 329: display_content[0][15] = '.';
 27611  0068C8  0E2E               	movlw	46
 27612  0068CA  0102               	movlb	2	; () banked
 27613  0068CC  6F0F               	movwf	(_display_content+15)& (0+255),b
 27614                           
 27615                           ;display.c: 331: }
 27616  0068CE  D015               	goto	l1576
 27617  0068D0                     l1572:
 27618                           
 27619                           ; BSR set to: 2
 27620  0068D0  0100               	movlb	0	; () banked
 27621  0068D2  39C3               	swapf	(_os+2)& (0+255),w,b
 27622  0068D4  42E8               	rrncf	wreg,f,c
 27623  0068D6  0B07               	andlw	7
 27624  0068D8  0B03               	andlw	3
 27625  0068DA  6E21               	movwf	??_display_prepare& (0+255),c
 27626  0068DC  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 27627                           
 27628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27629                           ; Switch size 1, requested type "space"
 27630                           ; Number of cases is 1, Range of values is 0 to 0
 27631                           ; switch strategies available:
 27632                           ; Name         Instructions Cycles
 27633                           ; simple_byte            4     3 (average)
 27634                           ;	Chosen strategy is simple_byte
 27635  0068DE  5022               	movf	??_display_prepare+1,w,c
 27636  0068E0  0A00               	xorlw	0	; case 0
 27637  0068E2  A4D8               	btfss	status,2,c
 27638  0068E4  D00A               	goto	l1576
 27639                           
 27640                           ; BSR set to: 0
 27641                           ; Switch size 1, requested type "space"
 27642                           ; Number of cases is 3, Range of values is 1 to 3
 27643                           ; switch strategies available:
 27644                           ; Name         Instructions Cycles
 27645                           ; simple_byte           10     6 (average)
 27646                           ;	Chosen strategy is simple_byte
 27647  0068E6  5021               	movf	??_display_prepare,w,c
 27648  0068E8  0A01               	xorlw	1	; case 1
 27649  0068EA  B4D8               	btfsc	status,2,c
 27650  0068EC  D7ED               	goto	l1575
 27651  0068EE  0A03               	xorlw	3	; case 2
 27652  0068F0  B4D8               	btfsc	status,2,c
 27653  0068F2  D7E7               	goto	l1574
 27654  0068F4  0A01               	xorlw	1	; case 3
 27655  0068F6  B4D8               	btfsc	status,2,c
 27656  0068F8  D7E1               	goto	l1573
 27657  0068FA                     l1576:
 27658                           
 27659                           ;display.c: 335: if(INTCONbits.GIE)
 27660  0068FA  AEF2               	btfss	intcon,7,c	;volatile
 27661  0068FC  0012               	return	
 27662                           
 27663                           ;display.c: 336: {;display.c: 337: display_content[0][18] = 'I';
 27664  0068FE  0E49               	movlw	73
 27665  006900  0102               	movlb	2	; () banked
 27666  006902  6F12               	movwf	(_display_content+18)& (0+255),b
 27667  006904  0012               	return	
 27668  006906                     __end_of_display_prepare:
 27669                           	opt stack 0
 27670                           tosu	equ	0xFFF
 27671                           tosh	equ	0xFFE
 27672                           tosl	equ	0xFFD
 27673                           pclath	equ	0xFFA
 27674                           tblptru	equ	0xFF8
 27675                           tblptrh	equ	0xFF7
 27676                           tblptrl	equ	0xFF6
 27677                           tablat	equ	0xFF5
 27678                           prodh	equ	0xFF4
 27679                           prodl	equ	0xFF3
 27680                           intcon	equ	0xFF2
 27681                           intcon2	equ	0xFF1
 27682                           intcon3	equ	0xFF0
 27683                           indf0	equ	0xFEF
 27684                           postinc0	equ	0xFEE
 27685                           fsr0h	equ	0xFEA
 27686                           fsr0l	equ	0xFE9
 27687                           wreg	equ	0xFE8
 27688                           indf1	equ	0xFE7
 27689                           postdec1	equ	0xFE5
 27690                           plusw1	equ	0xFE3
 27691                           fsr1h	equ	0xFE2
 27692                           fsr1l	equ	0xFE1
 27693                           indf2	equ	0xFDF
 27694                           postinc2	equ	0xFDE
 27695                           postdec2	equ	0xFDD
 27696                           plusw2	equ	0xFDB
 27697                           fsr2h	equ	0xFDA
 27698                           fsr2l	equ	0xFD9
 27699                           status	equ	0xFD8
 27700                           
 27701 ;; *************** function __display_verify *****************
 27702 ;; Defined at:
 27703 ;;		line 407 in file "display.c"
 27704 ;; Parameters:    Size  Location     Type
 27705 ;;		None
 27706 ;; Auto vars:     Size  Location     Type
 27707 ;;  cntr            1   30[COMRAM] unsigned char 
 27708 ;;  start           1    0        unsigned char 
 27709 ;; Return value:  Size  Location     Type
 27710 ;;                  1    wreg      void 
 27711 ;; Registers used:
 27712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27713 ;; Tracked objects:
 27714 ;;		On entry : 0/0
 27715 ;;		On exit  : 0/0
 27716 ;;		Unchanged: 0/0
 27717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;Total ram usage:        3 bytes
 27723 ;; Hardware stack levels used:    1
 27724 ;; Hardware stack levels required when called:    4
 27725 ;; This function calls:
 27726 ;;		__display_itoa_u16
 27727 ;;		_bootloader_get_entries
 27728 ;; This function is called by:
 27729 ;;		_display_prepare
 27730 ;; This function uses a non-reentrant model
 27731 ;;
 27732                           
 27733                           	psect	text133
 27734  0050BA                     __ptext133:
 27735                           	opt stack 0
 27736  0050BA                     __display_verify:
 27737                           	opt stack 22
 27738                           
 27739                           ;display.c: 409: uint8_t cntr;;display.c: 410: uint8_t start;;display.c: 411: cntr = 0;
 27740                           
 27741                           ;incstack = 0
 27742  0050BA  0E00               	movlw	0
 27743  0050BC  6E1F               	movwf	__display_verify@cntr,c
 27744                           
 27745                           ;display.c: 412: while(verify_line1[cntr])
 27746  0050BE  D017               	goto	l1629
 27747  0050C0                     
 27748                           ;display.c: 413: display_content[0][cntr] = verify_line1[cntr++];
 27749  0050C0  501F               	movf	__display_verify@cntr,w,c
 27750  0050C2  0D01               	mullw	1
 27751  0050C4  0EB8               	movlw	low _verify_line1
 27752  0050C6  24F3               	addwf	prodl,w,c
 27753  0050C8  6EF6               	movwf	tblptrl,c
 27754  0050CA  0EBD               	movlw	high _verify_line1
 27755  0050CC  20F4               	addwfc	prodh,w,c
 27756  0050CE  6EF7               	movwf	tblptrh,c
 27757  0050D0                     	if	1	;There are 3 active tblptr bytes
 27758  0050D0  6AF8               	clrf	tblptru,c
 27759  0050D2  0E00               	movlw	low (__mediumconst shr (0+16))
 27760  0050D4  22F8               	addwfc	tblptru,f,c
 27761  0050D6                     	endif
 27762  0050D6  501F               	movf	__display_verify@cntr,w,c
 27763  0050D8  0D01               	mullw	1
 27764  0050DA  0E00               	movlw	low _display_content
 27765  0050DC  24F3               	addwf	prodl,w,c
 27766  0050DE  6ED9               	movwf	fsr2l,c
 27767  0050E0  0E02               	movlw	high _display_content
 27768  0050E2  20F4               	addwfc	prodh,w,c
 27769  0050E4  6EDA               	movwf	fsr2h,c
 27770  0050E6  0008               	tblrd		*
 27771  0050E8  CFF5 FFDF          	movff	tablat,indf2
 27772  0050EC  2A1F               	incf	__display_verify@cntr,f,c
 27773  0050EE                     l1629:
 27774  0050EE  501F               	movf	__display_verify@cntr,w,c
 27775  0050F0  0D01               	mullw	1
 27776  0050F2  0EB8               	movlw	low _verify_line1
 27777  0050F4  24F3               	addwf	prodl,w,c
 27778  0050F6  6EF6               	movwf	tblptrl,c
 27779  0050F8  0EBD               	movlw	high _verify_line1
 27780  0050FA  20F4               	addwfc	prodh,w,c
 27781  0050FC  6EF7               	movwf	tblptrh,c
 27782  0050FE                     	if	1	;There are 3 active tblptr bytes
 27783  0050FE  6AF8               	clrf	tblptru,c
 27784  005100  0E00               	movlw	low (__mediumconst shr (0+16))
 27785  005102  22F8               	addwfc	tblptru,f,c
 27786  005104                     	endif
 27787  005104  0008               	tblrd		*
 27788  005106  50F5               	movf	tablat,w,c
 27789  005108  0900               	iorlw	0
 27790  00510A  A4D8               	btfss	status,2,c
 27791  00510C  D7D9               	goto	l1630
 27792                           
 27793                           ;display.c: 414: cntr = 0;
 27794  00510E  0E00               	movlw	0
 27795  005110  6E1F               	movwf	__display_verify@cntr,c
 27796                           
 27797                           ;display.c: 415: while(verify_line2[cntr])
 27798  005112  D017               	goto	l1632
 27799  005114                     
 27800                           ;display.c: 416: display_content[1][cntr] = verify_line2[cntr++];
 27801  005114  501F               	movf	__display_verify@cntr,w,c
 27802  005116  0D01               	mullw	1
 27803  005118  0E40               	movlw	low _verify_line2
 27804  00511A  24F3               	addwf	prodl,w,c
 27805  00511C  6EF6               	movwf	tblptrl,c
 27806  00511E  0EBE               	movlw	high _verify_line2
 27807  005120  20F4               	addwfc	prodh,w,c
 27808  005122  6EF7               	movwf	tblptrh,c
 27809  005124                     	if	1	;There are 3 active tblptr bytes
 27810  005124  6AF8               	clrf	tblptru,c
 27811  005126  0E00               	movlw	low (__mediumconst shr (0+16))
 27812  005128  22F8               	addwfc	tblptru,f,c
 27813  00512A                     	endif
 27814  00512A  501F               	movf	__display_verify@cntr,w,c
 27815  00512C  0D01               	mullw	1
 27816  00512E  0E14               	movlw	low (_display_content+20)
 27817  005130  24F3               	addwf	prodl,w,c
 27818  005132  6ED9               	movwf	fsr2l,c
 27819  005134  0E02               	movlw	high (_display_content+20)
 27820  005136  20F4               	addwfc	prodh,w,c
 27821  005138  6EDA               	movwf	fsr2h,c
 27822  00513A  0008               	tblrd		*
 27823  00513C  CFF5 FFDF          	movff	tablat,indf2
 27824  005140  2A1F               	incf	__display_verify@cntr,f,c
 27825  005142                     l1632:
 27826  005142  501F               	movf	__display_verify@cntr,w,c
 27827  005144  0D01               	mullw	1
 27828  005146  0E40               	movlw	low _verify_line2
 27829  005148  24F3               	addwf	prodl,w,c
 27830  00514A  6EF6               	movwf	tblptrl,c
 27831  00514C  0EBE               	movlw	high _verify_line2
 27832  00514E  20F4               	addwfc	prodh,w,c
 27833  005150  6EF7               	movwf	tblptrh,c
 27834  005152                     	if	1	;There are 3 active tblptr bytes
 27835  005152  6AF8               	clrf	tblptru,c
 27836  005154  0E00               	movlw	low (__mediumconst shr (0+16))
 27837  005156  22F8               	addwfc	tblptru,f,c
 27838  005158                     	endif
 27839  005158  0008               	tblrd		*
 27840  00515A  50F5               	movf	tablat,w,c
 27841  00515C  0900               	iorlw	0
 27842  00515E  A4D8               	btfss	status,2,c
 27843  005160  D7D9               	goto	l1633
 27844                           
 27845                           ;display.c: 417: cntr = 0;
 27846  005162  0E00               	movlw	0
 27847  005164  6E1F               	movwf	__display_verify@cntr,c
 27848                           
 27849                           ;display.c: 418: while(verify_line3[cntr])
 27850  005166  D017               	goto	l1635
 27851  005168                     
 27852                           ;display.c: 419: display_content[2][cntr] = verify_line3[cntr++];
 27853  005168  501F               	movf	__display_verify@cntr,w,c
 27854  00516A  0D01               	mullw	1
 27855  00516C  0E88               	movlw	low _verify_line3
 27856  00516E  24F3               	addwf	prodl,w,c
 27857  005170  6EF6               	movwf	tblptrl,c
 27858  005172  0EBE               	movlw	high _verify_line3
 27859  005174  20F4               	addwfc	prodh,w,c
 27860  005176  6EF7               	movwf	tblptrh,c
 27861  005178                     	if	1	;There are 3 active tblptr bytes
 27862  005178  6AF8               	clrf	tblptru,c
 27863  00517A  0E00               	movlw	low (__mediumconst shr (0+16))
 27864  00517C  22F8               	addwfc	tblptru,f,c
 27865  00517E                     	endif
 27866  00517E  501F               	movf	__display_verify@cntr,w,c
 27867  005180  0D01               	mullw	1
 27868  005182  0E28               	movlw	low (_display_content+40)
 27869  005184  24F3               	addwf	prodl,w,c
 27870  005186  6ED9               	movwf	fsr2l,c
 27871  005188  0E02               	movlw	high (_display_content+40)
 27872  00518A  20F4               	addwfc	prodh,w,c
 27873  00518C  6EDA               	movwf	fsr2h,c
 27874  00518E  0008               	tblrd		*
 27875  005190  CFF5 FFDF          	movff	tablat,indf2
 27876  005194  2A1F               	incf	__display_verify@cntr,f,c
 27877  005196                     l1635:
 27878  005196  501F               	movf	__display_verify@cntr,w,c
 27879  005198  0D01               	mullw	1
 27880  00519A  0E88               	movlw	low _verify_line3
 27881  00519C  24F3               	addwf	prodl,w,c
 27882  00519E  6EF6               	movwf	tblptrl,c
 27883  0051A0  0EBE               	movlw	high _verify_line3
 27884  0051A2  20F4               	addwfc	prodh,w,c
 27885  0051A4  6EF7               	movwf	tblptrh,c
 27886  0051A6                     	if	1	;There are 3 active tblptr bytes
 27887  0051A6  6AF8               	clrf	tblptru,c
 27888  0051A8  0E00               	movlw	low (__mediumconst shr (0+16))
 27889  0051AA  22F8               	addwfc	tblptru,f,c
 27890  0051AC                     	endif
 27891  0051AC  0008               	tblrd		*
 27892  0051AE  50F5               	movf	tablat,w,c
 27893  0051B0  0900               	iorlw	0
 27894  0051B2  A4D8               	btfss	status,2,c
 27895  0051B4  D7D9               	goto	l1636
 27896                           
 27897                           ;display.c: 420: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27898  0051B6  EC63  F050         	call	_bootloader_get_entries	;wreg free
 27899  0051BA  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27900  0051BE  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27901  0051C2  501F               	movf	__display_verify@cntr,w,c
 27902  0051C4  6E1D               	movwf	??__display_verify& (0+255),c
 27903  0051C6  6A1E               	clrf	(??__display_verify+1)& (0+255),c
 27904  0051C8  0E01               	movlw	1
 27905  0051CA  261D               	addwf	??__display_verify,f,c
 27906  0051CC  0E00               	movlw	0
 27907  0051CE  221E               	addwfc	??__display_verify+1,f,c
 27908  0051D0  0E28               	movlw	low (_display_content+40)
 27909  0051D2  241D               	addwf	??__display_verify,w,c
 27910  0051D4  6E1B               	movwf	__display_itoa_u16@text,c
 27911  0051D6  0E02               	movlw	high (_display_content+40)
 27912  0051D8  201E               	addwfc	??__display_verify+1,w,c
 27913  0051DA  6E1C               	movwf	__display_itoa_u16@text+1,c
 27914  0051DC  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 27915  0051E0  0012               	return		;funcret
 27916  0051E2                     __end_of__display_verify:
 27917                           	opt stack 0
 27918                           tosu	equ	0xFFF
 27919                           tosh	equ	0xFFE
 27920                           tosl	equ	0xFFD
 27921                           pclath	equ	0xFFA
 27922                           tblptru	equ	0xFF8
 27923                           tblptrh	equ	0xFF7
 27924                           tblptrl	equ	0xFF6
 27925                           tablat	equ	0xFF5
 27926                           prodh	equ	0xFF4
 27927                           prodl	equ	0xFF3
 27928                           intcon	equ	0xFF2
 27929                           intcon2	equ	0xFF1
 27930                           intcon3	equ	0xFF0
 27931                           indf0	equ	0xFEF
 27932                           postinc0	equ	0xFEE
 27933                           fsr0h	equ	0xFEA
 27934                           fsr0l	equ	0xFE9
 27935                           wreg	equ	0xFE8
 27936                           indf1	equ	0xFE7
 27937                           postdec1	equ	0xFE5
 27938                           plusw1	equ	0xFE3
 27939                           fsr1h	equ	0xFE2
 27940                           fsr1l	equ	0xFE1
 27941                           indf2	equ	0xFDF
 27942                           postinc2	equ	0xFDE
 27943                           postdec2	equ	0xFDD
 27944                           plusw2	equ	0xFDB
 27945                           fsr2h	equ	0xFDA
 27946                           fsr2l	equ	0xFD9
 27947                           status	equ	0xFD8
 27948                           
 27949 ;; *************** function __display_suspended *****************
 27950 ;; Defined at:
 27951 ;;		line 545 in file "display.c"
 27952 ;; Parameters:    Size  Location     Type
 27953 ;;		None
 27954 ;; Auto vars:     Size  Location     Type
 27955 ;;  cntr            1    0[COMRAM] unsigned char 
 27956 ;; Return value:  Size  Location     Type
 27957 ;;                  1    wreg      void 
 27958 ;; Registers used:
 27959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27960 ;; Tracked objects:
 27961 ;;		On entry : 0/0
 27962 ;;		On exit  : 0/0
 27963 ;;		Unchanged: 0/0
 27964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27969 ;;Total ram usage:        1 bytes
 27970 ;; Hardware stack levels used:    1
 27971 ;; This function calls:
 27972 ;;		Nothing
 27973 ;; This function is called by:
 27974 ;;		_display_prepare
 27975 ;; This function uses a non-reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text134
 27979  004914                     __ptext134:
 27980                           	opt stack 0
 27981  004914                     __display_suspended:
 27982                           	opt stack 26
 27983                           
 27984                           ;display.c: 547: uint8_t cntr;;display.c: 550: cntr = 0;
 27985                           
 27986                           ;incstack = 0
 27987  004914  0E00               	movlw	0
 27988  004916  6E01               	movwf	__display_suspended@cntr,c
 27989                           
 27990                           ;display.c: 551: while(suspended_line1[cntr])
 27991  004918  D017               	goto	l1726
 27992  00491A                     
 27993                           ;display.c: 552: display_content[0][cntr] = suspended_line1[cntr++];
 27994  00491A  5001               	movf	__display_suspended@cntr,w,c
 27995  00491C  0D01               	mullw	1
 27996  00491E  0E38               	movlw	low _suspended_line1
 27997  004920  24F3               	addwf	prodl,w,c
 27998  004922  6EF6               	movwf	tblptrl,c
 27999  004924  0EBD               	movlw	high _suspended_line1
 28000  004926  20F4               	addwfc	prodh,w,c
 28001  004928  6EF7               	movwf	tblptrh,c
 28002  00492A                     	if	1	;There are 3 active tblptr bytes
 28003  00492A  6AF8               	clrf	tblptru,c
 28004  00492C  0E00               	movlw	low (__mediumconst shr (0+16))
 28005  00492E  22F8               	addwfc	tblptru,f,c
 28006  004930                     	endif
 28007  004930  5001               	movf	__display_suspended@cntr,w,c
 28008  004932  0D01               	mullw	1
 28009  004934  0E00               	movlw	low _display_content
 28010  004936  24F3               	addwf	prodl,w,c
 28011  004938  6ED9               	movwf	fsr2l,c
 28012  00493A  0E02               	movlw	high _display_content
 28013  00493C  20F4               	addwfc	prodh,w,c
 28014  00493E  6EDA               	movwf	fsr2h,c
 28015  004940  0008               	tblrd		*
 28016  004942  CFF5 FFDF          	movff	tablat,indf2
 28017  004946  2A01               	incf	__display_suspended@cntr,f,c
 28018  004948                     l1726:
 28019  004948  5001               	movf	__display_suspended@cntr,w,c
 28020  00494A  0D01               	mullw	1
 28021  00494C  0E38               	movlw	low _suspended_line1
 28022  00494E  24F3               	addwf	prodl,w,c
 28023  004950  6EF6               	movwf	tblptrl,c
 28024  004952  0EBD               	movlw	high _suspended_line1
 28025  004954  20F4               	addwfc	prodh,w,c
 28026  004956  6EF7               	movwf	tblptrh,c
 28027  004958                     	if	1	;There are 3 active tblptr bytes
 28028  004958  6AF8               	clrf	tblptru,c
 28029  00495A  0E00               	movlw	low (__mediumconst shr (0+16))
 28030  00495C  22F8               	addwfc	tblptru,f,c
 28031  00495E                     	endif
 28032  00495E  0008               	tblrd		*
 28033  004960  50F5               	movf	tablat,w,c
 28034  004962  0900               	iorlw	0
 28035  004964  A4D8               	btfss	status,2,c
 28036  004966  D7D9               	goto	l1727
 28037                           
 28038                           ;display.c: 554: cntr = 0;
 28039  004968  0E00               	movlw	0
 28040  00496A  6E01               	movwf	__display_suspended@cntr,c
 28041                           
 28042                           ;display.c: 555: while(suspended_line2[cntr])
 28043  00496C  D017               	goto	l1729
 28044  00496E                     
 28045                           ;display.c: 556: display_content[1][cntr] = suspended_line2[cntr++];
 28046  00496E  5001               	movf	__display_suspended@cntr,w,c
 28047  004970  0D01               	mullw	1
 28048  004972  0E4D               	movlw	low _suspended_line2
 28049  004974  24F3               	addwf	prodl,w,c
 28050  004976  6EF6               	movwf	tblptrl,c
 28051  004978  0EBE               	movlw	high _suspended_line2
 28052  00497A  20F4               	addwfc	prodh,w,c
 28053  00497C  6EF7               	movwf	tblptrh,c
 28054  00497E                     	if	1	;There are 3 active tblptr bytes
 28055  00497E  6AF8               	clrf	tblptru,c
 28056  004980  0E00               	movlw	low (__mediumconst shr (0+16))
 28057  004982  22F8               	addwfc	tblptru,f,c
 28058  004984                     	endif
 28059  004984  5001               	movf	__display_suspended@cntr,w,c
 28060  004986  0D01               	mullw	1
 28061  004988  0E14               	movlw	low (_display_content+20)
 28062  00498A  24F3               	addwf	prodl,w,c
 28063  00498C  6ED9               	movwf	fsr2l,c
 28064  00498E  0E02               	movlw	high (_display_content+20)
 28065  004990  20F4               	addwfc	prodh,w,c
 28066  004992  6EDA               	movwf	fsr2h,c
 28067  004994  0008               	tblrd		*
 28068  004996  CFF5 FFDF          	movff	tablat,indf2
 28069  00499A  2A01               	incf	__display_suspended@cntr,f,c
 28070  00499C                     l1729:
 28071  00499C  5001               	movf	__display_suspended@cntr,w,c
 28072  00499E  0D01               	mullw	1
 28073  0049A0  0E4D               	movlw	low _suspended_line2
 28074  0049A2  24F3               	addwf	prodl,w,c
 28075  0049A4  6EF6               	movwf	tblptrl,c
 28076  0049A6  0EBE               	movlw	high _suspended_line2
 28077  0049A8  20F4               	addwfc	prodh,w,c
 28078  0049AA  6EF7               	movwf	tblptrh,c
 28079  0049AC                     	if	1	;There are 3 active tblptr bytes
 28080  0049AC  6AF8               	clrf	tblptru,c
 28081  0049AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28082  0049B0  22F8               	addwfc	tblptru,f,c
 28083  0049B2                     	endif
 28084  0049B2  0008               	tblrd		*
 28085  0049B4  50F5               	movf	tablat,w,c
 28086  0049B6  0900               	iorlw	0
 28087  0049B8  A4D8               	btfss	status,2,c
 28088  0049BA  D7D9               	goto	l1730
 28089                           
 28090                           ;display.c: 558: cntr = 0;
 28091  0049BC  0E00               	movlw	0
 28092  0049BE  6E01               	movwf	__display_suspended@cntr,c
 28093                           
 28094                           ;display.c: 559: while(suspended_line3[cntr])
 28095  0049C0  D017               	goto	l1732
 28096  0049C2                     
 28097                           ;display.c: 560: display_content[2][cntr] = suspended_line3[cntr++];
 28098  0049C2  5001               	movf	__display_suspended@cntr,w,c
 28099  0049C4  0D01               	mullw	1
 28100  0049C6  0EA5               	movlw	low _suspended_line3
 28101  0049C8  24F3               	addwf	prodl,w,c
 28102  0049CA  6EF6               	movwf	tblptrl,c
 28103  0049CC  0EBE               	movlw	high _suspended_line3
 28104  0049CE  20F4               	addwfc	prodh,w,c
 28105  0049D0  6EF7               	movwf	tblptrh,c
 28106  0049D2                     	if	1	;There are 3 active tblptr bytes
 28107  0049D2  6AF8               	clrf	tblptru,c
 28108  0049D4  0E00               	movlw	low (__mediumconst shr (0+16))
 28109  0049D6  22F8               	addwfc	tblptru,f,c
 28110  0049D8                     	endif
 28111  0049D8  5001               	movf	__display_suspended@cntr,w,c
 28112  0049DA  0D01               	mullw	1
 28113  0049DC  0E28               	movlw	low (_display_content+40)
 28114  0049DE  24F3               	addwf	prodl,w,c
 28115  0049E0  6ED9               	movwf	fsr2l,c
 28116  0049E2  0E02               	movlw	high (_display_content+40)
 28117  0049E4  20F4               	addwfc	prodh,w,c
 28118  0049E6  6EDA               	movwf	fsr2h,c
 28119  0049E8  0008               	tblrd		*
 28120  0049EA  CFF5 FFDF          	movff	tablat,indf2
 28121  0049EE  2A01               	incf	__display_suspended@cntr,f,c
 28122  0049F0                     l1732:
 28123  0049F0  5001               	movf	__display_suspended@cntr,w,c
 28124  0049F2  0D01               	mullw	1
 28125  0049F4  0EA5               	movlw	low _suspended_line3
 28126  0049F6  24F3               	addwf	prodl,w,c
 28127  0049F8  6EF6               	movwf	tblptrl,c
 28128  0049FA  0EBE               	movlw	high _suspended_line3
 28129  0049FC  20F4               	addwfc	prodh,w,c
 28130  0049FE  6EF7               	movwf	tblptrh,c
 28131  004A00                     	if	1	;There are 3 active tblptr bytes
 28132  004A00  6AF8               	clrf	tblptru,c
 28133  004A02  0E00               	movlw	low (__mediumconst shr (0+16))
 28134  004A04  22F8               	addwfc	tblptru,f,c
 28135  004A06                     	endif
 28136  004A06  0008               	tblrd		*
 28137  004A08  50F5               	movf	tablat,w,c
 28138  004A0A  0900               	iorlw	0
 28139  004A0C  A4D8               	btfss	status,2,c
 28140  004A0E  D7D9               	goto	l1733
 28141                           
 28142                           ;display.c: 562: cntr = 0;
 28143  004A10  0E00               	movlw	0
 28144  004A12  6E01               	movwf	__display_suspended@cntr,c
 28145                           
 28146                           ;display.c: 563: while(suspended_line4[cntr])
 28147  004A14  D017               	goto	l1735
 28148  004A16                     
 28149                           ;display.c: 564: display_content[3][cntr] = suspended_line4[cntr++];
 28150  004A16  5001               	movf	__display_suspended@cntr,w,c
 28151  004A18  0D01               	mullw	1
 28152  004A1A  0E28               	movlw	low _suspended_line4
 28153  004A1C  24F3               	addwf	prodl,w,c
 28154  004A1E  6EF6               	movwf	tblptrl,c
 28155  004A20  0EBD               	movlw	high _suspended_line4
 28156  004A22  20F4               	addwfc	prodh,w,c
 28157  004A24  6EF7               	movwf	tblptrh,c
 28158  004A26                     	if	1	;There are 3 active tblptr bytes
 28159  004A26  6AF8               	clrf	tblptru,c
 28160  004A28  0E00               	movlw	low (__mediumconst shr (0+16))
 28161  004A2A  22F8               	addwfc	tblptru,f,c
 28162  004A2C                     	endif
 28163  004A2C  5001               	movf	__display_suspended@cntr,w,c
 28164  004A2E  0D01               	mullw	1
 28165  004A30  0E3C               	movlw	low (_display_content+60)
 28166  004A32  24F3               	addwf	prodl,w,c
 28167  004A34  6ED9               	movwf	fsr2l,c
 28168  004A36  0E02               	movlw	high (_display_content+60)
 28169  004A38  20F4               	addwfc	prodh,w,c
 28170  004A3A  6EDA               	movwf	fsr2h,c
 28171  004A3C  0008               	tblrd		*
 28172  004A3E  CFF5 FFDF          	movff	tablat,indf2
 28173  004A42  2A01               	incf	__display_suspended@cntr,f,c
 28174  004A44                     l1735:
 28175  004A44  5001               	movf	__display_suspended@cntr,w,c
 28176  004A46  0D01               	mullw	1
 28177  004A48  0E28               	movlw	low _suspended_line4
 28178  004A4A  24F3               	addwf	prodl,w,c
 28179  004A4C  6EF6               	movwf	tblptrl,c
 28180  004A4E  0EBD               	movlw	high _suspended_line4
 28181  004A50  20F4               	addwfc	prodh,w,c
 28182  004A52  6EF7               	movwf	tblptrh,c
 28183  004A54                     	if	1	;There are 3 active tblptr bytes
 28184  004A54  6AF8               	clrf	tblptru,c
 28185  004A56  0E00               	movlw	low (__mediumconst shr (0+16))
 28186  004A58  22F8               	addwfc	tblptru,f,c
 28187  004A5A                     	endif
 28188  004A5A  0008               	tblrd		*
 28189  004A5C  50F5               	movf	tablat,w,c
 28190  004A5E  0900               	iorlw	0
 28191  004A60  B4D8               	btfsc	status,2,c
 28192  004A62  0012               	return	
 28193  004A64  D7D8               	goto	l1736
 28194  004A66                     __end_of__display_suspended:
 28195                           	opt stack 0
 28196                           tosu	equ	0xFFF
 28197                           tosh	equ	0xFFE
 28198                           tosl	equ	0xFFD
 28199                           pclath	equ	0xFFA
 28200                           tblptru	equ	0xFF8
 28201                           tblptrh	equ	0xFF7
 28202                           tblptrl	equ	0xFF6
 28203                           tablat	equ	0xFF5
 28204                           prodh	equ	0xFF4
 28205                           prodl	equ	0xFF3
 28206                           intcon	equ	0xFF2
 28207                           intcon2	equ	0xFF1
 28208                           intcon3	equ	0xFF0
 28209                           indf0	equ	0xFEF
 28210                           postinc0	equ	0xFEE
 28211                           fsr0h	equ	0xFEA
 28212                           fsr0l	equ	0xFE9
 28213                           wreg	equ	0xFE8
 28214                           indf1	equ	0xFE7
 28215                           postdec1	equ	0xFE5
 28216                           plusw1	equ	0xFE3
 28217                           fsr1h	equ	0xFE2
 28218                           fsr1l	equ	0xFE1
 28219                           indf2	equ	0xFDF
 28220                           postinc2	equ	0xFDE
 28221                           postdec2	equ	0xFDD
 28222                           plusw2	equ	0xFDB
 28223                           fsr2h	equ	0xFDA
 28224                           fsr2l	equ	0xFD9
 28225                           status	equ	0xFD8
 28226                           
 28227 ;; *************** function __display_start *****************
 28228 ;; Defined at:
 28229 ;;		line 341 in file "display.c"
 28230 ;; Parameters:    Size  Location     Type
 28231 ;;		None
 28232 ;; Auto vars:     Size  Location     Type
 28233 ;;  cntr            1   28[COMRAM] unsigned char 
 28234 ;; Return value:  Size  Location     Type
 28235 ;;                  1    wreg      void 
 28236 ;; Registers used:
 28237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28238 ;; Tracked objects:
 28239 ;;		On entry : 0/0
 28240 ;;		On exit  : 0/0
 28241 ;;		Unchanged: 0/0
 28242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28247 ;;Total ram usage:        1 bytes
 28248 ;; Hardware stack levels used:    1
 28249 ;; Hardware stack levels required when called:    4
 28250 ;; This function calls:
 28251 ;;		__display_itoa_u16
 28252 ;; This function is called by:
 28253 ;;		_display_prepare
 28254 ;; This function uses a non-reentrant model
 28255 ;;
 28256                           
 28257                           	psect	text135
 28258  003458                     __ptext135:
 28259                           	opt stack 0
 28260  003458                     __display_start:
 28261                           	opt stack 22
 28262                           
 28263                           ;display.c: 343: uint8_t cntr;;display.c: 344: cntr = 0;
 28264                           
 28265                           ;incstack = 0
 28266  003458  0E00               	movlw	0
 28267  00345A  6E1D               	movwf	__display_start@cntr,c
 28268                           
 28269                           ;display.c: 345: while(start_line1[cntr])
 28270  00345C  D017               	goto	l1581
 28271  00345E                     
 28272                           ;display.c: 346: display_content[0][cntr] = start_line1[cntr++];
 28273  00345E  501D               	movf	__display_start@cntr,w,c
 28274  003460  0D01               	mullw	1
 28275  003462  0EE8               	movlw	low _start_line1
 28276  003464  24F3               	addwf	prodl,w,c
 28277  003466  6EF6               	movwf	tblptrl,c
 28278  003468  0EBD               	movlw	high _start_line1
 28279  00346A  20F4               	addwfc	prodh,w,c
 28280  00346C  6EF7               	movwf	tblptrh,c
 28281  00346E                     	if	1	;There are 3 active tblptr bytes
 28282  00346E  6AF8               	clrf	tblptru,c
 28283  003470  0E00               	movlw	low (__mediumconst shr (0+16))
 28284  003472  22F8               	addwfc	tblptru,f,c
 28285  003474                     	endif
 28286  003474  501D               	movf	__display_start@cntr,w,c
 28287  003476  0D01               	mullw	1
 28288  003478  0E00               	movlw	low _display_content
 28289  00347A  24F3               	addwf	prodl,w,c
 28290  00347C  6ED9               	movwf	fsr2l,c
 28291  00347E  0E02               	movlw	high _display_content
 28292  003480  20F4               	addwfc	prodh,w,c
 28293  003482  6EDA               	movwf	fsr2h,c
 28294  003484  0008               	tblrd		*
 28295  003486  CFF5 FFDF          	movff	tablat,indf2
 28296  00348A  2A1D               	incf	__display_start@cntr,f,c
 28297  00348C                     l1581:
 28298  00348C  501D               	movf	__display_start@cntr,w,c
 28299  00348E  0D01               	mullw	1
 28300  003490  0EE8               	movlw	low _start_line1
 28301  003492  24F3               	addwf	prodl,w,c
 28302  003494  6EF6               	movwf	tblptrl,c
 28303  003496  0EBD               	movlw	high _start_line1
 28304  003498  20F4               	addwfc	prodh,w,c
 28305  00349A  6EF7               	movwf	tblptrh,c
 28306  00349C                     	if	1	;There are 3 active tblptr bytes
 28307  00349C  6AF8               	clrf	tblptru,c
 28308  00349E  0E00               	movlw	low (__mediumconst shr (0+16))
 28309  0034A0  22F8               	addwfc	tblptru,f,c
 28310  0034A2                     	endif
 28311  0034A2  0008               	tblrd		*
 28312  0034A4  50F5               	movf	tablat,w,c
 28313  0034A6  0900               	iorlw	0
 28314  0034A8  A4D8               	btfss	status,2,c
 28315  0034AA  D7D9               	goto	l1582
 28316                           
 28317                           ;display.c: 347: cntr = 0;
 28318  0034AC  0E00               	movlw	0
 28319  0034AE  6E1D               	movwf	__display_start@cntr,c
 28320                           
 28321                           ;display.c: 348: while(start_line2[cntr])
 28322  0034B0  D017               	goto	l1584
 28323  0034B2                     
 28324                           ;display.c: 349: display_content[1][cntr] = start_line2[cntr++];
 28325  0034B2  501D               	movf	__display_start@cntr,w,c
 28326  0034B4  0D01               	mullw	1
 28327  0034B6  0E60               	movlw	low _start_line2
 28328  0034B8  24F3               	addwf	prodl,w,c
 28329  0034BA  6EF6               	movwf	tblptrl,c
 28330  0034BC  0EBE               	movlw	high _start_line2
 28331  0034BE  20F4               	addwfc	prodh,w,c
 28332  0034C0  6EF7               	movwf	tblptrh,c
 28333  0034C2                     	if	1	;There are 3 active tblptr bytes
 28334  0034C2  6AF8               	clrf	tblptru,c
 28335  0034C4  0E00               	movlw	low (__mediumconst shr (0+16))
 28336  0034C6  22F8               	addwfc	tblptru,f,c
 28337  0034C8                     	endif
 28338  0034C8  501D               	movf	__display_start@cntr,w,c
 28339  0034CA  0D01               	mullw	1
 28340  0034CC  0E14               	movlw	low (_display_content+20)
 28341  0034CE  24F3               	addwf	prodl,w,c
 28342  0034D0  6ED9               	movwf	fsr2l,c
 28343  0034D2  0E02               	movlw	high (_display_content+20)
 28344  0034D4  20F4               	addwfc	prodh,w,c
 28345  0034D6  6EDA               	movwf	fsr2h,c
 28346  0034D8  0008               	tblrd		*
 28347  0034DA  CFF5 FFDF          	movff	tablat,indf2
 28348  0034DE  2A1D               	incf	__display_start@cntr,f,c
 28349  0034E0                     l1584:
 28350  0034E0  501D               	movf	__display_start@cntr,w,c
 28351  0034E2  0D01               	mullw	1
 28352  0034E4  0E60               	movlw	low _start_line2
 28353  0034E6  24F3               	addwf	prodl,w,c
 28354  0034E8  6EF6               	movwf	tblptrl,c
 28355  0034EA  0EBE               	movlw	high _start_line2
 28356  0034EC  20F4               	addwfc	prodh,w,c
 28357  0034EE  6EF7               	movwf	tblptrh,c
 28358  0034F0                     	if	1	;There are 3 active tblptr bytes
 28359  0034F0  6AF8               	clrf	tblptru,c
 28360  0034F2  0E00               	movlw	low (__mediumconst shr (0+16))
 28361  0034F4  22F8               	addwfc	tblptru,f,c
 28362  0034F6                     	endif
 28363  0034F6  0008               	tblrd		*
 28364  0034F8  50F5               	movf	tablat,w,c
 28365  0034FA  0900               	iorlw	0
 28366  0034FC  A4D8               	btfss	status,2,c
 28367  0034FE  D7D9               	goto	l1585
 28368                           
 28369                           ;display.c: 350: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 28370  003500  0E00               	movlw	0
 28371  003502  6E1A               	movwf	__display_itoa_u16@value+1,c
 28372  003504  0E00               	movlw	0
 28373  003506  6E19               	movwf	__display_itoa_u16@value,c
 28374  003508  501D               	movf	__display_start@cntr,w,c
 28375  00350A  0D01               	mullw	1
 28376  00350C  0E14               	movlw	low (_display_content+20)
 28377  00350E  24F3               	addwf	prodl,w,c
 28378  003510  6E1B               	movwf	__display_itoa_u16@text,c
 28379  003512  0E02               	movlw	high (_display_content+20)
 28380  003514  20F4               	addwfc	prodh,w,c
 28381  003516  6E1C               	movwf	__display_itoa_u16@text+1,c
 28382  003518  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 28383  00351C  261D               	addwf	__display_start@cntr,f,c
 28384                           
 28385                           ;display.c: 351: display_content[1][cntr++] = '.';
 28386  00351E  501D               	movf	__display_start@cntr,w,c
 28387  003520  0D01               	mullw	1
 28388  003522  0E14               	movlw	low (_display_content+20)
 28389  003524  24F3               	addwf	prodl,w,c
 28390  003526  6ED9               	movwf	fsr2l,c
 28391  003528  0E02               	movlw	high (_display_content+20)
 28392  00352A  20F4               	addwfc	prodh,w,c
 28393  00352C  6EDA               	movwf	fsr2h,c
 28394  00352E  0E2E               	movlw	46
 28395  003530  6EDF               	movwf	indf2,c
 28396  003532  2A1D               	incf	__display_start@cntr,f,c
 28397                           
 28398                           ;display.c: 352: cntr += _display_itoa_u16(0x04, &display_content[1][cntr]);
 28399  003534  0E00               	movlw	0
 28400  003536  6E1A               	movwf	__display_itoa_u16@value+1,c
 28401  003538  0E04               	movlw	4
 28402  00353A  6E19               	movwf	__display_itoa_u16@value,c
 28403  00353C  501D               	movf	__display_start@cntr,w,c
 28404  00353E  0D01               	mullw	1
 28405  003540  0E14               	movlw	low (_display_content+20)
 28406  003542  24F3               	addwf	prodl,w,c
 28407  003544  6E1B               	movwf	__display_itoa_u16@text,c
 28408  003546  0E02               	movlw	high (_display_content+20)
 28409  003548  20F4               	addwfc	prodh,w,c
 28410  00354A  6E1C               	movwf	__display_itoa_u16@text+1,c
 28411  00354C  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 28412  003550  261D               	addwf	__display_start@cntr,f,c
 28413                           
 28414                           ;display.c: 353: display_content[1][cntr++] = '.';
 28415  003552  501D               	movf	__display_start@cntr,w,c
 28416  003554  0D01               	mullw	1
 28417  003556  0E14               	movlw	low (_display_content+20)
 28418  003558  24F3               	addwf	prodl,w,c
 28419  00355A  6ED9               	movwf	fsr2l,c
 28420  00355C  0E02               	movlw	high (_display_content+20)
 28421  00355E  20F4               	addwfc	prodh,w,c
 28422  003560  6EDA               	movwf	fsr2h,c
 28423  003562  0E2E               	movlw	46
 28424  003564  6EDF               	movwf	indf2,c
 28425  003566  2A1D               	incf	__display_start@cntr,f,c
 28426                           
 28427                           ;display.c: 354: cntr += _display_itoa_u16(0x02, &display_content[1][cntr]);
 28428  003568  0E00               	movlw	0
 28429  00356A  6E1A               	movwf	__display_itoa_u16@value+1,c
 28430  00356C  0E02               	movlw	2
 28431  00356E  6E19               	movwf	__display_itoa_u16@value,c
 28432  003570  501D               	movf	__display_start@cntr,w,c
 28433  003572  0D01               	mullw	1
 28434  003574  0E14               	movlw	low (_display_content+20)
 28435  003576  24F3               	addwf	prodl,w,c
 28436  003578  6E1B               	movwf	__display_itoa_u16@text,c
 28437  00357A  0E02               	movlw	high (_display_content+20)
 28438  00357C  20F4               	addwfc	prodh,w,c
 28439  00357E  6E1C               	movwf	__display_itoa_u16@text+1,c
 28440  003580  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 28441  003584  261D               	addwf	__display_start@cntr,f,c
 28442                           
 28443                           ;display.c: 355: cntr = 0;
 28444  003586  0E00               	movlw	0
 28445  003588  6E1D               	movwf	__display_start@cntr,c
 28446                           
 28447                           ;display.c: 356: while(start_line3[cntr])
 28448  00358A  D017               	goto	l1587
 28449  00358C                     
 28450                           ;display.c: 357: display_content[2][cntr] = start_line3[cntr++];
 28451  00358C  501D               	movf	__display_start@cntr,w,c
 28452  00358E  0D01               	mullw	1
 28453  003590  0EA6               	movlw	low _start_line3
 28454  003592  24F3               	addwf	prodl,w,c
 28455  003594  6EF6               	movwf	tblptrl,c
 28456  003596  0EBE               	movlw	high _start_line3
 28457  003598  20F4               	addwfc	prodh,w,c
 28458  00359A  6EF7               	movwf	tblptrh,c
 28459  00359C                     	if	1	;There are 3 active tblptr bytes
 28460  00359C  6AF8               	clrf	tblptru,c
 28461  00359E  0E00               	movlw	low (__mediumconst shr (0+16))
 28462  0035A0  22F8               	addwfc	tblptru,f,c
 28463  0035A2                     	endif
 28464  0035A2  501D               	movf	__display_start@cntr,w,c
 28465  0035A4  0D01               	mullw	1
 28466  0035A6  0E28               	movlw	low (_display_content+40)
 28467  0035A8  24F3               	addwf	prodl,w,c
 28468  0035AA  6ED9               	movwf	fsr2l,c
 28469  0035AC  0E02               	movlw	high (_display_content+40)
 28470  0035AE  20F4               	addwfc	prodh,w,c
 28471  0035B0  6EDA               	movwf	fsr2h,c
 28472  0035B2  0008               	tblrd		*
 28473  0035B4  CFF5 FFDF          	movff	tablat,indf2
 28474  0035B8  2A1D               	incf	__display_start@cntr,f,c
 28475  0035BA                     l1587:
 28476  0035BA  501D               	movf	__display_start@cntr,w,c
 28477  0035BC  0D01               	mullw	1
 28478  0035BE  0EA6               	movlw	low _start_line3
 28479  0035C0  24F3               	addwf	prodl,w,c
 28480  0035C2  6EF6               	movwf	tblptrl,c
 28481  0035C4  0EBE               	movlw	high _start_line3
 28482  0035C6  20F4               	addwfc	prodh,w,c
 28483  0035C8  6EF7               	movwf	tblptrh,c
 28484  0035CA                     	if	1	;There are 3 active tblptr bytes
 28485  0035CA  6AF8               	clrf	tblptru,c
 28486  0035CC  0E00               	movlw	low (__mediumconst shr (0+16))
 28487  0035CE  22F8               	addwfc	tblptru,f,c
 28488  0035D0                     	endif
 28489  0035D0  0008               	tblrd		*
 28490  0035D2  50F5               	movf	tablat,w,c
 28491  0035D4  0900               	iorlw	0
 28492  0035D6  A4D8               	btfss	status,2,c
 28493  0035D8  D7D9               	goto	l1588
 28494                           
 28495                           ;display.c: 358: cntr = 0;
 28496  0035DA  0E00               	movlw	0
 28497  0035DC  6E1D               	movwf	__display_start@cntr,c
 28498                           
 28499                           ;display.c: 359: while(start_line4[cntr])
 28500  0035DE  D017               	goto	l1590
 28501  0035E0                     
 28502                           ;display.c: 360: display_content[3][cntr] = start_line4[cntr++];
 28503  0035E0  501D               	movf	__display_start@cntr,w,c
 28504  0035E2  0D01               	mullw	1
 28505  0035E4  0E16               	movlw	low _start_line4
 28506  0035E6  24F3               	addwf	prodl,w,c
 28507  0035E8  6EF6               	movwf	tblptrl,c
 28508  0035EA  0EBE               	movlw	high _start_line4
 28509  0035EC  20F4               	addwfc	prodh,w,c
 28510  0035EE  6EF7               	movwf	tblptrh,c
 28511  0035F0                     	if	1	;There are 3 active tblptr bytes
 28512  0035F0  6AF8               	clrf	tblptru,c
 28513  0035F2  0E00               	movlw	low (__mediumconst shr (0+16))
 28514  0035F4  22F8               	addwfc	tblptru,f,c
 28515  0035F6                     	endif
 28516  0035F6  501D               	movf	__display_start@cntr,w,c
 28517  0035F8  0D01               	mullw	1
 28518  0035FA  0E3C               	movlw	low (_display_content+60)
 28519  0035FC  24F3               	addwf	prodl,w,c
 28520  0035FE  6ED9               	movwf	fsr2l,c
 28521  003600  0E02               	movlw	high (_display_content+60)
 28522  003602  20F4               	addwfc	prodh,w,c
 28523  003604  6EDA               	movwf	fsr2h,c
 28524  003606  0008               	tblrd		*
 28525  003608  CFF5 FFDF          	movff	tablat,indf2
 28526  00360C  2A1D               	incf	__display_start@cntr,f,c
 28527  00360E                     l1590:
 28528  00360E  501D               	movf	__display_start@cntr,w,c
 28529  003610  0D01               	mullw	1
 28530  003612  0E16               	movlw	low _start_line4
 28531  003614  24F3               	addwf	prodl,w,c
 28532  003616  6EF6               	movwf	tblptrl,c
 28533  003618  0EBE               	movlw	high _start_line4
 28534  00361A  20F4               	addwfc	prodh,w,c
 28535  00361C  6EF7               	movwf	tblptrh,c
 28536  00361E                     	if	1	;There are 3 active tblptr bytes
 28537  00361E  6AF8               	clrf	tblptru,c
 28538  003620  0E00               	movlw	low (__mediumconst shr (0+16))
 28539  003622  22F8               	addwfc	tblptru,f,c
 28540  003624                     	endif
 28541  003624  0008               	tblrd		*
 28542  003626  50F5               	movf	tablat,w,c
 28543  003628  0900               	iorlw	0
 28544  00362A  B4D8               	btfsc	status,2,c
 28545  00362C  0012               	return	
 28546  00362E  D7D8               	goto	l1591
 28547  003630                     __end_of__display_start:
 28548                           	opt stack 0
 28549                           tosu	equ	0xFFF
 28550                           tosh	equ	0xFFE
 28551                           tosl	equ	0xFFD
 28552                           pclath	equ	0xFFA
 28553                           tblptru	equ	0xFF8
 28554                           tblptrh	equ	0xFF7
 28555                           tblptrl	equ	0xFF6
 28556                           tablat	equ	0xFF5
 28557                           prodh	equ	0xFF4
 28558                           prodl	equ	0xFF3
 28559                           intcon	equ	0xFF2
 28560                           intcon2	equ	0xFF1
 28561                           intcon3	equ	0xFF0
 28562                           indf0	equ	0xFEF
 28563                           postinc0	equ	0xFEE
 28564                           fsr0h	equ	0xFEA
 28565                           fsr0l	equ	0xFE9
 28566                           wreg	equ	0xFE8
 28567                           indf1	equ	0xFE7
 28568                           postdec1	equ	0xFE5
 28569                           plusw1	equ	0xFE3
 28570                           fsr1h	equ	0xFE2
 28571                           fsr1l	equ	0xFE1
 28572                           indf2	equ	0xFDF
 28573                           postinc2	equ	0xFDE
 28574                           postdec2	equ	0xFDD
 28575                           plusw2	equ	0xFDB
 28576                           fsr2h	equ	0xFDA
 28577                           fsr2l	equ	0xFD9
 28578                           status	equ	0xFD8
 28579                           
 28580 ;; *************** function __display_search *****************
 28581 ;; Defined at:
 28582 ;;		line 363 in file "display.c"
 28583 ;; Parameters:    Size  Location     Type
 28584 ;;		None
 28585 ;; Auto vars:     Size  Location     Type
 28586 ;;  cntr            1    0[COMRAM] unsigned char 
 28587 ;; Return value:  Size  Location     Type
 28588 ;;                  1    wreg      void 
 28589 ;; Registers used:
 28590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28591 ;; Tracked objects:
 28592 ;;		On entry : 0/0
 28593 ;;		On exit  : 0/0
 28594 ;;		Unchanged: 0/0
 28595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28600 ;;Total ram usage:        1 bytes
 28601 ;; Hardware stack levels used:    1
 28602 ;; This function calls:
 28603 ;;		Nothing
 28604 ;; This function is called by:
 28605 ;;		_display_prepare
 28606 ;; This function uses a non-reentrant model
 28607 ;;
 28608                           
 28609                           	psect	text136
 28610  004A66                     __ptext136:
 28611                           	opt stack 0
 28612  004A66                     __display_search:
 28613                           	opt stack 26
 28614                           
 28615                           ;display.c: 365: uint8_t cntr;;display.c: 366: cntr = 0;
 28616                           
 28617                           ;incstack = 0
 28618  004A66  0E00               	movlw	0
 28619  004A68  6E01               	movwf	__display_search@cntr,c
 28620                           
 28621                           ;display.c: 367: while(search_line1[cntr])
 28622  004A6A  D017               	goto	l1596
 28623  004A6C                     
 28624                           ;display.c: 368: display_content[0][cntr] = search_line1[cntr++];
 28625  004A6C  5001               	movf	__display_search@cntr,w,c
 28626  004A6E  0D01               	mullw	1
 28627  004A70  0ED8               	movlw	low _search_line1
 28628  004A72  24F3               	addwf	prodl,w,c
 28629  004A74  6EF6               	movwf	tblptrl,c
 28630  004A76  0EBD               	movlw	high _search_line1
 28631  004A78  20F4               	addwfc	prodh,w,c
 28632  004A7A  6EF7               	movwf	tblptrh,c
 28633  004A7C                     	if	1	;There are 3 active tblptr bytes
 28634  004A7C  6AF8               	clrf	tblptru,c
 28635  004A7E  0E00               	movlw	low (__mediumconst shr (0+16))
 28636  004A80  22F8               	addwfc	tblptru,f,c
 28637  004A82                     	endif
 28638  004A82  5001               	movf	__display_search@cntr,w,c
 28639  004A84  0D01               	mullw	1
 28640  004A86  0E00               	movlw	low _display_content
 28641  004A88  24F3               	addwf	prodl,w,c
 28642  004A8A  6ED9               	movwf	fsr2l,c
 28643  004A8C  0E02               	movlw	high _display_content
 28644  004A8E  20F4               	addwfc	prodh,w,c
 28645  004A90  6EDA               	movwf	fsr2h,c
 28646  004A92  0008               	tblrd		*
 28647  004A94  CFF5 FFDF          	movff	tablat,indf2
 28648  004A98  2A01               	incf	__display_search@cntr,f,c
 28649  004A9A                     l1596:
 28650  004A9A  5001               	movf	__display_search@cntr,w,c
 28651  004A9C  0D01               	mullw	1
 28652  004A9E  0ED8               	movlw	low _search_line1
 28653  004AA0  24F3               	addwf	prodl,w,c
 28654  004AA2  6EF6               	movwf	tblptrl,c
 28655  004AA4  0EBD               	movlw	high _search_line1
 28656  004AA6  20F4               	addwfc	prodh,w,c
 28657  004AA8  6EF7               	movwf	tblptrh,c
 28658  004AAA                     	if	1	;There are 3 active tblptr bytes
 28659  004AAA  6AF8               	clrf	tblptru,c
 28660  004AAC  0E00               	movlw	low (__mediumconst shr (0+16))
 28661  004AAE  22F8               	addwfc	tblptru,f,c
 28662  004AB0                     	endif
 28663  004AB0  0008               	tblrd		*
 28664  004AB2  50F5               	movf	tablat,w,c
 28665  004AB4  0900               	iorlw	0
 28666  004AB6  A4D8               	btfss	status,2,c
 28667  004AB8  D7D9               	goto	l1597
 28668                           
 28669                           ;display.c: 369: cntr = 0;
 28670  004ABA  0E00               	movlw	0
 28671  004ABC  6E01               	movwf	__display_search@cntr,c
 28672                           
 28673                           ;display.c: 370: while(search_line2[cntr])
 28674  004ABE  D017               	goto	l1599
 28675  004AC0                     
 28676                           ;display.c: 371: display_content[1][cntr] = search_line2[cntr++];
 28677  004AC0  5001               	movf	__display_search@cntr,w,c
 28678  004AC2  0D01               	mullw	1
 28679  004AC4  0E17               	movlw	low _search_line2
 28680  004AC6  24F3               	addwf	prodl,w,c
 28681  004AC8  6EF6               	movwf	tblptrl,c
 28682  004ACA  0EBD               	movlw	high _search_line2
 28683  004ACC  20F4               	addwfc	prodh,w,c
 28684  004ACE  6EF7               	movwf	tblptrh,c
 28685  004AD0                     	if	1	;There are 3 active tblptr bytes
 28686  004AD0  6AF8               	clrf	tblptru,c
 28687  004AD2  0E00               	movlw	low (__mediumconst shr (0+16))
 28688  004AD4  22F8               	addwfc	tblptru,f,c
 28689  004AD6                     	endif
 28690  004AD6  5001               	movf	__display_search@cntr,w,c
 28691  004AD8  0D01               	mullw	1
 28692  004ADA  0E14               	movlw	low (_display_content+20)
 28693  004ADC  24F3               	addwf	prodl,w,c
 28694  004ADE  6ED9               	movwf	fsr2l,c
 28695  004AE0  0E02               	movlw	high (_display_content+20)
 28696  004AE2  20F4               	addwfc	prodh,w,c
 28697  004AE4  6EDA               	movwf	fsr2h,c
 28698  004AE6  0008               	tblrd		*
 28699  004AE8  CFF5 FFDF          	movff	tablat,indf2
 28700  004AEC  2A01               	incf	__display_search@cntr,f,c
 28701  004AEE                     l1599:
 28702  004AEE  5001               	movf	__display_search@cntr,w,c
 28703  004AF0  0D01               	mullw	1
 28704  004AF2  0E17               	movlw	low _search_line2
 28705  004AF4  24F3               	addwf	prodl,w,c
 28706  004AF6  6EF6               	movwf	tblptrl,c
 28707  004AF8  0EBD               	movlw	high _search_line2
 28708  004AFA  20F4               	addwfc	prodh,w,c
 28709  004AFC  6EF7               	movwf	tblptrh,c
 28710  004AFE                     	if	1	;There are 3 active tblptr bytes
 28711  004AFE  6AF8               	clrf	tblptru,c
 28712  004B00  0E00               	movlw	low (__mediumconst shr (0+16))
 28713  004B02  22F8               	addwfc	tblptru,f,c
 28714  004B04                     	endif
 28715  004B04  0008               	tblrd		*
 28716  004B06  50F5               	movf	tablat,w,c
 28717  004B08  0900               	iorlw	0
 28718  004B0A  A4D8               	btfss	status,2,c
 28719  004B0C  D7D9               	goto	l1600
 28720                           
 28721                           ;display.c: 372: cntr = 0;
 28722  004B0E  0E00               	movlw	0
 28723  004B10  6E01               	movwf	__display_search@cntr,c
 28724                           
 28725                           ;display.c: 373: while(search_line3[cntr])
 28726  004B12  D017               	goto	l1602
 28727  004B14                     
 28728                           ;display.c: 374: display_content[2][cntr] = search_line3[cntr++];
 28729  004B14  5001               	movf	__display_search@cntr,w,c
 28730  004B16  0D01               	mullw	1
 28731  004B18  0E96               	movlw	low _search_line3
 28732  004B1A  24F3               	addwf	prodl,w,c
 28733  004B1C  6EF6               	movwf	tblptrl,c
 28734  004B1E  0EBC               	movlw	high _search_line3
 28735  004B20  20F4               	addwfc	prodh,w,c
 28736  004B22  6EF7               	movwf	tblptrh,c
 28737  004B24                     	if	1	;There are 3 active tblptr bytes
 28738  004B24  6AF8               	clrf	tblptru,c
 28739  004B26  0E00               	movlw	low (__mediumconst shr (0+16))
 28740  004B28  22F8               	addwfc	tblptru,f,c
 28741  004B2A                     	endif
 28742  004B2A  5001               	movf	__display_search@cntr,w,c
 28743  004B2C  0D01               	mullw	1
 28744  004B2E  0E28               	movlw	low (_display_content+40)
 28745  004B30  24F3               	addwf	prodl,w,c
 28746  004B32  6ED9               	movwf	fsr2l,c
 28747  004B34  0E02               	movlw	high (_display_content+40)
 28748  004B36  20F4               	addwfc	prodh,w,c
 28749  004B38  6EDA               	movwf	fsr2h,c
 28750  004B3A  0008               	tblrd		*
 28751  004B3C  CFF5 FFDF          	movff	tablat,indf2
 28752  004B40  2A01               	incf	__display_search@cntr,f,c
 28753  004B42                     l1602:
 28754  004B42  5001               	movf	__display_search@cntr,w,c
 28755  004B44  0D01               	mullw	1
 28756  004B46  0E96               	movlw	low _search_line3
 28757  004B48  24F3               	addwf	prodl,w,c
 28758  004B4A  6EF6               	movwf	tblptrl,c
 28759  004B4C  0EBC               	movlw	high _search_line3
 28760  004B4E  20F4               	addwfc	prodh,w,c
 28761  004B50  6EF7               	movwf	tblptrh,c
 28762  004B52                     	if	1	;There are 3 active tblptr bytes
 28763  004B52  6AF8               	clrf	tblptru,c
 28764  004B54  0E00               	movlw	low (__mediumconst shr (0+16))
 28765  004B56  22F8               	addwfc	tblptru,f,c
 28766  004B58                     	endif
 28767  004B58  0008               	tblrd		*
 28768  004B5A  50F5               	movf	tablat,w,c
 28769  004B5C  0900               	iorlw	0
 28770  004B5E  A4D8               	btfss	status,2,c
 28771  004B60  D7D9               	goto	l1603
 28772                           
 28773                           ;display.c: 375: cntr = 0;
 28774  004B62  0E00               	movlw	0
 28775  004B64  6E01               	movwf	__display_search@cntr,c
 28776                           
 28777                           ;display.c: 376: while(search_line4[cntr])
 28778  004B66  D017               	goto	l1605
 28779  004B68                     
 28780                           ;display.c: 377: display_content[3][cntr] = search_line4[cntr++];
 28781  004B68  5001               	movf	__display_search@cntr,w,c
 28782  004B6A  0D01               	mullw	1
 28783  004B6C  0E57               	movlw	low _search_line4
 28784  004B6E  24F3               	addwf	prodl,w,c
 28785  004B70  6EF6               	movwf	tblptrl,c
 28786  004B72  0EBE               	movlw	high _search_line4
 28787  004B74  20F4               	addwfc	prodh,w,c
 28788  004B76  6EF7               	movwf	tblptrh,c
 28789  004B78                     	if	1	;There are 3 active tblptr bytes
 28790  004B78  6AF8               	clrf	tblptru,c
 28791  004B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 28792  004B7C  22F8               	addwfc	tblptru,f,c
 28793  004B7E                     	endif
 28794  004B7E  5001               	movf	__display_search@cntr,w,c
 28795  004B80  0D01               	mullw	1
 28796  004B82  0E3C               	movlw	low (_display_content+60)
 28797  004B84  24F3               	addwf	prodl,w,c
 28798  004B86  6ED9               	movwf	fsr2l,c
 28799  004B88  0E02               	movlw	high (_display_content+60)
 28800  004B8A  20F4               	addwfc	prodh,w,c
 28801  004B8C  6EDA               	movwf	fsr2h,c
 28802  004B8E  0008               	tblrd		*
 28803  004B90  CFF5 FFDF          	movff	tablat,indf2
 28804  004B94  2A01               	incf	__display_search@cntr,f,c
 28805  004B96                     l1605:
 28806  004B96  5001               	movf	__display_search@cntr,w,c
 28807  004B98  0D01               	mullw	1
 28808  004B9A  0E57               	movlw	low _search_line4
 28809  004B9C  24F3               	addwf	prodl,w,c
 28810  004B9E  6EF6               	movwf	tblptrl,c
 28811  004BA0  0EBE               	movlw	high _search_line4
 28812  004BA2  20F4               	addwfc	prodh,w,c
 28813  004BA4  6EF7               	movwf	tblptrh,c
 28814  004BA6                     	if	1	;There are 3 active tblptr bytes
 28815  004BA6  6AF8               	clrf	tblptru,c
 28816  004BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 28817  004BAA  22F8               	addwfc	tblptru,f,c
 28818  004BAC                     	endif
 28819  004BAC  0008               	tblrd		*
 28820  004BAE  50F5               	movf	tablat,w,c
 28821  004BB0  0900               	iorlw	0
 28822  004BB2  B4D8               	btfsc	status,2,c
 28823  004BB4  0012               	return	
 28824  004BB6  D7D8               	goto	l1606
 28825  004BB8                     __end_of__display_search:
 28826                           	opt stack 0
 28827                           tosu	equ	0xFFF
 28828                           tosh	equ	0xFFE
 28829                           tosl	equ	0xFFD
 28830                           pclath	equ	0xFFA
 28831                           tblptru	equ	0xFF8
 28832                           tblptrh	equ	0xFF7
 28833                           tblptrl	equ	0xFF6
 28834                           tablat	equ	0xFF5
 28835                           prodh	equ	0xFF4
 28836                           prodl	equ	0xFF3
 28837                           intcon	equ	0xFF2
 28838                           intcon2	equ	0xFF1
 28839                           intcon3	equ	0xFF0
 28840                           indf0	equ	0xFEF
 28841                           postinc0	equ	0xFEE
 28842                           fsr0h	equ	0xFEA
 28843                           fsr0l	equ	0xFE9
 28844                           wreg	equ	0xFE8
 28845                           indf1	equ	0xFE7
 28846                           postdec1	equ	0xFE5
 28847                           plusw1	equ	0xFE3
 28848                           fsr1h	equ	0xFE2
 28849                           fsr1l	equ	0xFE1
 28850                           indf2	equ	0xFDF
 28851                           postinc2	equ	0xFDE
 28852                           postdec2	equ	0xFDD
 28853                           plusw2	equ	0xFDB
 28854                           fsr2h	equ	0xFDA
 28855                           fsr2l	equ	0xFD9
 28856                           status	equ	0xFD8
 28857                           
 28858 ;; *************** function __display_rebooting *****************
 28859 ;; Defined at:
 28860 ;;		line 537 in file "display.c"
 28861 ;; Parameters:    Size  Location     Type
 28862 ;;		None
 28863 ;; Auto vars:     Size  Location     Type
 28864 ;;  cntr            1    0[COMRAM] unsigned char 
 28865 ;; Return value:  Size  Location     Type
 28866 ;;                  1    wreg      void 
 28867 ;; Registers used:
 28868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28869 ;; Tracked objects:
 28870 ;;		On entry : 0/0
 28871 ;;		On exit  : 0/0
 28872 ;;		Unchanged: 0/0
 28873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28878 ;;Total ram usage:        1 bytes
 28879 ;; Hardware stack levels used:    1
 28880 ;; This function calls:
 28881 ;;		Nothing
 28882 ;; This function is called by:
 28883 ;;		_display_prepare
 28884 ;; This function uses a non-reentrant model
 28885 ;;
 28886                           
 28887                           	psect	text137
 28888  0090CE                     __ptext137:
 28889                           	opt stack 0
 28890  0090CE                     __display_rebooting:
 28891                           	opt stack 26
 28892                           
 28893                           ;display.c: 539: uint8_t cntr;;display.c: 540: cntr = 0;
 28894                           
 28895                           ;incstack = 0
 28896  0090CE  0E00               	movlw	0
 28897  0090D0  6E01               	movwf	__display_rebooting@cntr,c
 28898                           
 28899                           ;display.c: 541: while(reboot_line1[cntr])
 28900  0090D2  D017               	goto	l1720
 28901  0090D4                     
 28902                           ;display.c: 542: display_content[0][cntr] = reboot_line1[cntr++];
 28903  0090D4  5001               	movf	__display_rebooting@cntr,w,c
 28904  0090D6  0D01               	mullw	1
 28905  0090D8  0E33               	movlw	low _reboot_line1
 28906  0090DA  24F3               	addwf	prodl,w,c
 28907  0090DC  6EF6               	movwf	tblptrl,c
 28908  0090DE  0EBE               	movlw	high _reboot_line1
 28909  0090E0  20F4               	addwfc	prodh,w,c
 28910  0090E2  6EF7               	movwf	tblptrh,c
 28911  0090E4                     	if	1	;There are 3 active tblptr bytes
 28912  0090E4  6AF8               	clrf	tblptru,c
 28913  0090E6  0E00               	movlw	low (__mediumconst shr (0+16))
 28914  0090E8  22F8               	addwfc	tblptru,f,c
 28915  0090EA                     	endif
 28916  0090EA  5001               	movf	__display_rebooting@cntr,w,c
 28917  0090EC  0D01               	mullw	1
 28918  0090EE  0E00               	movlw	low _display_content
 28919  0090F0  24F3               	addwf	prodl,w,c
 28920  0090F2  6ED9               	movwf	fsr2l,c
 28921  0090F4  0E02               	movlw	high _display_content
 28922  0090F6  20F4               	addwfc	prodh,w,c
 28923  0090F8  6EDA               	movwf	fsr2h,c
 28924  0090FA  0008               	tblrd		*
 28925  0090FC  CFF5 FFDF          	movff	tablat,indf2
 28926  009100  2A01               	incf	__display_rebooting@cntr,f,c
 28927  009102                     l1720:
 28928  009102  5001               	movf	__display_rebooting@cntr,w,c
 28929  009104  0D01               	mullw	1
 28930  009106  0E33               	movlw	low _reboot_line1
 28931  009108  24F3               	addwf	prodl,w,c
 28932  00910A  6EF6               	movwf	tblptrl,c
 28933  00910C  0EBE               	movlw	high _reboot_line1
 28934  00910E  20F4               	addwfc	prodh,w,c
 28935  009110  6EF7               	movwf	tblptrh,c
 28936  009112                     	if	1	;There are 3 active tblptr bytes
 28937  009112  6AF8               	clrf	tblptru,c
 28938  009114  0E00               	movlw	low (__mediumconst shr (0+16))
 28939  009116  22F8               	addwfc	tblptru,f,c
 28940  009118                     	endif
 28941  009118  0008               	tblrd		*
 28942  00911A  50F5               	movf	tablat,w,c
 28943  00911C  0900               	iorlw	0
 28944  00911E  B4D8               	btfsc	status,2,c
 28945  009120  0012               	return	
 28946  009122  D7D8               	goto	l1721
 28947  009124                     __end_of__display_rebooting:
 28948                           	opt stack 0
 28949                           tosu	equ	0xFFF
 28950                           tosh	equ	0xFFE
 28951                           tosl	equ	0xFFD
 28952                           pclath	equ	0xFFA
 28953                           tblptru	equ	0xFF8
 28954                           tblptrh	equ	0xFF7
 28955                           tblptrl	equ	0xFF6
 28956                           tablat	equ	0xFF5
 28957                           prodh	equ	0xFF4
 28958                           prodl	equ	0xFF3
 28959                           intcon	equ	0xFF2
 28960                           intcon2	equ	0xFF1
 28961                           intcon3	equ	0xFF0
 28962                           indf0	equ	0xFEF
 28963                           postinc0	equ	0xFEE
 28964                           fsr0h	equ	0xFEA
 28965                           fsr0l	equ	0xFE9
 28966                           wreg	equ	0xFE8
 28967                           indf1	equ	0xFE7
 28968                           postdec1	equ	0xFE5
 28969                           plusw1	equ	0xFE3
 28970                           fsr1h	equ	0xFE2
 28971                           fsr1l	equ	0xFE1
 28972                           indf2	equ	0xFDF
 28973                           postinc2	equ	0xFDE
 28974                           postdec2	equ	0xFDD
 28975                           plusw2	equ	0xFDB
 28976                           fsr2h	equ	0xFDA
 28977                           fsr2l	equ	0xFD9
 28978                           status	equ	0xFD8
 28979                           
 28980 ;; *************** function __display_programming *****************
 28981 ;; Defined at:
 28982 ;;		line 495 in file "display.c"
 28983 ;; Parameters:    Size  Location     Type
 28984 ;;		None
 28985 ;; Auto vars:     Size  Location     Type
 28986 ;;  cntr            1   28[COMRAM] unsigned char 
 28987 ;; Return value:  Size  Location     Type
 28988 ;;                  1    wreg      void 
 28989 ;; Registers used:
 28990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28991 ;; Tracked objects:
 28992 ;;		On entry : 0/0
 28993 ;;		On exit  : 0/0
 28994 ;;		Unchanged: 0/0
 28995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29000 ;;Total ram usage:        1 bytes
 29001 ;; Hardware stack levels used:    1
 29002 ;; Hardware stack levels required when called:    4
 29003 ;; This function calls:
 29004 ;;		__display_itoa_u16
 29005 ;;		_bootloader_get_entries
 29006 ;;		_bootloader_get_flashPagesWritten
 29007 ;;		_bootloader_get_total_entries
 29008 ;; This function is called by:
 29009 ;;		_display_prepare
 29010 ;; This function uses a non-reentrant model
 29011 ;;
 29012                           
 29013                           	psect	text138
 29014  003630                     __ptext138:
 29015                           	opt stack 0
 29016  003630                     __display_programming:
 29017                           	opt stack 22
 29018                           
 29019                           ;display.c: 497: uint8_t cntr;;display.c: 498: cntr = 0;
 29020                           
 29021                           ;incstack = 0
 29022  003630  0E00               	movlw	0
 29023  003632  6E1D               	movwf	__display_programming@cntr,c
 29024                           
 29025                           ;display.c: 499: while(programming_line1[cntr])
 29026  003634  D017               	goto	l1690
 29027  003636                     
 29028                           ;display.c: 500: display_content[0][cntr] = programming_line1[cntr++];
 29029  003636  501D               	movf	__display_programming@cntr,w,c
 29030  003638  0D01               	mullw	1
 29031  00363A  0E88               	movlw	low _programming_line1
 29032  00363C  24F3               	addwf	prodl,w,c
 29033  00363E  6EF6               	movwf	tblptrl,c
 29034  003640  0EBD               	movlw	high _programming_line1
 29035  003642  20F4               	addwfc	prodh,w,c
 29036  003644  6EF7               	movwf	tblptrh,c
 29037  003646                     	if	1	;There are 3 active tblptr bytes
 29038  003646  6AF8               	clrf	tblptru,c
 29039  003648  0E00               	movlw	low (__mediumconst shr (0+16))
 29040  00364A  22F8               	addwfc	tblptru,f,c
 29041  00364C                     	endif
 29042  00364C  501D               	movf	__display_programming@cntr,w,c
 29043  00364E  0D01               	mullw	1
 29044  003650  0E00               	movlw	low _display_content
 29045  003652  24F3               	addwf	prodl,w,c
 29046  003654  6ED9               	movwf	fsr2l,c
 29047  003656  0E02               	movlw	high _display_content
 29048  003658  20F4               	addwfc	prodh,w,c
 29049  00365A  6EDA               	movwf	fsr2h,c
 29050  00365C  0008               	tblrd		*
 29051  00365E  CFF5 FFDF          	movff	tablat,indf2
 29052  003662  2A1D               	incf	__display_programming@cntr,f,c
 29053  003664                     l1690:
 29054  003664  501D               	movf	__display_programming@cntr,w,c
 29055  003666  0D01               	mullw	1
 29056  003668  0E88               	movlw	low _programming_line1
 29057  00366A  24F3               	addwf	prodl,w,c
 29058  00366C  6EF6               	movwf	tblptrl,c
 29059  00366E  0EBD               	movlw	high _programming_line1
 29060  003670  20F4               	addwfc	prodh,w,c
 29061  003672  6EF7               	movwf	tblptrh,c
 29062  003674                     	if	1	;There are 3 active tblptr bytes
 29063  003674  6AF8               	clrf	tblptru,c
 29064  003676  0E00               	movlw	low (__mediumconst shr (0+16))
 29065  003678  22F8               	addwfc	tblptru,f,c
 29066  00367A                     	endif
 29067  00367A  0008               	tblrd		*
 29068  00367C  50F5               	movf	tablat,w,c
 29069  00367E  0900               	iorlw	0
 29070  003680  A4D8               	btfss	status,2,c
 29071  003682  D7D9               	goto	l1691
 29072                           
 29073                           ;display.c: 502: cntr = 0;
 29074  003684  0E00               	movlw	0
 29075  003686  6E1D               	movwf	__display_programming@cntr,c
 29076                           
 29077                           ;display.c: 503: while(programming_line2[cntr])
 29078  003688  D017               	goto	l1693
 29079  00368A                     
 29080                           ;display.c: 504: display_content[1][cntr] = programming_line2[cntr++];
 29081  00368A  501D               	movf	__display_programming@cntr,w,c
 29082  00368C  0D01               	mullw	1
 29083  00368E  0ED0               	movlw	low _programming_line2
 29084  003690  24F3               	addwf	prodl,w,c
 29085  003692  6EF6               	movwf	tblptrl,c
 29086  003694  0EBC               	movlw	high _programming_line2
 29087  003696  20F4               	addwfc	prodh,w,c
 29088  003698  6EF7               	movwf	tblptrh,c
 29089  00369A                     	if	1	;There are 3 active tblptr bytes
 29090  00369A  6AF8               	clrf	tblptru,c
 29091  00369C  0E00               	movlw	low (__mediumconst shr (0+16))
 29092  00369E  22F8               	addwfc	tblptru,f,c
 29093  0036A0                     	endif
 29094  0036A0  501D               	movf	__display_programming@cntr,w,c
 29095  0036A2  0D01               	mullw	1
 29096  0036A4  0E14               	movlw	low (_display_content+20)
 29097  0036A6  24F3               	addwf	prodl,w,c
 29098  0036A8  6ED9               	movwf	fsr2l,c
 29099  0036AA  0E02               	movlw	high (_display_content+20)
 29100  0036AC  20F4               	addwfc	prodh,w,c
 29101  0036AE  6EDA               	movwf	fsr2h,c
 29102  0036B0  0008               	tblrd		*
 29103  0036B2  CFF5 FFDF          	movff	tablat,indf2
 29104  0036B6  2A1D               	incf	__display_programming@cntr,f,c
 29105  0036B8                     l1693:
 29106  0036B8  501D               	movf	__display_programming@cntr,w,c
 29107  0036BA  0D01               	mullw	1
 29108  0036BC  0ED0               	movlw	low _programming_line2
 29109  0036BE  24F3               	addwf	prodl,w,c
 29110  0036C0  6EF6               	movwf	tblptrl,c
 29111  0036C2  0EBC               	movlw	high _programming_line2
 29112  0036C4  20F4               	addwfc	prodh,w,c
 29113  0036C6  6EF7               	movwf	tblptrh,c
 29114  0036C8                     	if	1	;There are 3 active tblptr bytes
 29115  0036C8  6AF8               	clrf	tblptru,c
 29116  0036CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29117  0036CC  22F8               	addwfc	tblptru,f,c
 29118  0036CE                     	endif
 29119  0036CE  0008               	tblrd		*
 29120  0036D0  50F5               	movf	tablat,w,c
 29121  0036D2  0900               	iorlw	0
 29122  0036D4  A4D8               	btfss	status,2,c
 29123  0036D6  D7D9               	goto	l1694
 29124                           
 29125                           ;display.c: 506: cntr = 0;
 29126  0036D8  0E00               	movlw	0
 29127  0036DA  6E1D               	movwf	__display_programming@cntr,c
 29128                           
 29129                           ;display.c: 507: while(programming_line3[cntr])
 29130  0036DC  D017               	goto	l1696
 29131  0036DE                     
 29132                           ;display.c: 508: display_content[2][cntr] = programming_line3[cntr++];
 29133  0036DE  501D               	movf	__display_programming@cntr,w,c
 29134  0036E0  0D01               	mullw	1
 29135  0036E2  0E81               	movlw	low _programming_line3
 29136  0036E4  24F3               	addwf	prodl,w,c
 29137  0036E6  6EF6               	movwf	tblptrl,c
 29138  0036E8  0EBE               	movlw	high _programming_line3
 29139  0036EA  20F4               	addwfc	prodh,w,c
 29140  0036EC  6EF7               	movwf	tblptrh,c
 29141  0036EE                     	if	1	;There are 3 active tblptr bytes
 29142  0036EE  6AF8               	clrf	tblptru,c
 29143  0036F0  0E00               	movlw	low (__mediumconst shr (0+16))
 29144  0036F2  22F8               	addwfc	tblptru,f,c
 29145  0036F4                     	endif
 29146  0036F4  501D               	movf	__display_programming@cntr,w,c
 29147  0036F6  0D01               	mullw	1
 29148  0036F8  0E28               	movlw	low (_display_content+40)
 29149  0036FA  24F3               	addwf	prodl,w,c
 29150  0036FC  6ED9               	movwf	fsr2l,c
 29151  0036FE  0E02               	movlw	high (_display_content+40)
 29152  003700  20F4               	addwfc	prodh,w,c
 29153  003702  6EDA               	movwf	fsr2h,c
 29154  003704  0008               	tblrd		*
 29155  003706  CFF5 FFDF          	movff	tablat,indf2
 29156  00370A  2A1D               	incf	__display_programming@cntr,f,c
 29157  00370C                     l1696:
 29158  00370C  501D               	movf	__display_programming@cntr,w,c
 29159  00370E  0D01               	mullw	1
 29160  003710  0E81               	movlw	low _programming_line3
 29161  003712  24F3               	addwf	prodl,w,c
 29162  003714  6EF6               	movwf	tblptrl,c
 29163  003716  0EBE               	movlw	high _programming_line3
 29164  003718  20F4               	addwfc	prodh,w,c
 29165  00371A  6EF7               	movwf	tblptrh,c
 29166  00371C                     	if	1	;There are 3 active tblptr bytes
 29167  00371C  6AF8               	clrf	tblptru,c
 29168  00371E  0E00               	movlw	low (__mediumconst shr (0+16))
 29169  003720  22F8               	addwfc	tblptru,f,c
 29170  003722                     	endif
 29171  003722  0008               	tblrd		*
 29172  003724  50F5               	movf	tablat,w,c
 29173  003726  0900               	iorlw	0
 29174  003728  A4D8               	btfss	status,2,c
 29175  00372A  D7D9               	goto	l1697
 29176                           
 29177                           ;display.c: 509: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 29178  00372C  EC63  F050         	call	_bootloader_get_entries	;wreg free
 29179  003730  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29180  003734  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29181  003738  501D               	movf	__display_programming@cntr,w,c
 29182  00373A  0D01               	mullw	1
 29183  00373C  0E28               	movlw	low (_display_content+40)
 29184  00373E  24F3               	addwf	prodl,w,c
 29185  003740  6E1B               	movwf	__display_itoa_u16@text,c
 29186  003742  0E02               	movlw	high (_display_content+40)
 29187  003744  20F4               	addwfc	prodh,w,c
 29188  003746  6E1C               	movwf	__display_itoa_u16@text+1,c
 29189  003748  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 29190  00374C  261D               	addwf	__display_programming@cntr,f,c
 29191                           
 29192                           ;display.c: 510: display_content[2][cntr++] = '/';
 29193  00374E  501D               	movf	__display_programming@cntr,w,c
 29194  003750  0D01               	mullw	1
 29195  003752  0E28               	movlw	low (_display_content+40)
 29196  003754  24F3               	addwf	prodl,w,c
 29197  003756  6ED9               	movwf	fsr2l,c
 29198  003758  0E02               	movlw	high (_display_content+40)
 29199  00375A  20F4               	addwfc	prodh,w,c
 29200  00375C  6EDA               	movwf	fsr2h,c
 29201  00375E  0E2F               	movlw	47
 29202  003760  6EDF               	movwf	indf2,c
 29203  003762  2A1D               	incf	__display_programming@cntr,f,c
 29204                           
 29205                           ;display.c: 511: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 29206  003764  EC6D  F050         	call	_bootloader_get_total_entries	;wreg free
 29207  003768  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 29208  00376C  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 29209  003770  501D               	movf	__display_programming@cntr,w,c
 29210  003772  0D01               	mullw	1
 29211  003774  0E28               	movlw	low (_display_content+40)
 29212  003776  24F3               	addwf	prodl,w,c
 29213  003778  6E1B               	movwf	__display_itoa_u16@text,c
 29214  00377A  0E02               	movlw	high (_display_content+40)
 29215  00377C  20F4               	addwfc	prodh,w,c
 29216  00377E  6E1C               	movwf	__display_itoa_u16@text+1,c
 29217  003780  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 29218                           
 29219                           ;display.c: 513: cntr = 0;
 29220  003784  0E00               	movlw	0
 29221  003786  6E1D               	movwf	__display_programming@cntr,c
 29222                           
 29223                           ;display.c: 514: while(programming_line4[cntr])
 29224  003788  D017               	goto	l1699
 29225  00378A                     
 29226                           ;display.c: 515: display_content[3][cntr] = programming_line4[cntr++];
 29227  00378A  501D               	movf	__display_programming@cntr,w,c
 29228  00378C  0D01               	mullw	1
 29229  00378E  0E78               	movlw	low _programming_line4
 29230  003790  24F3               	addwf	prodl,w,c
 29231  003792  6EF6               	movwf	tblptrl,c
 29232  003794  0EBD               	movlw	high _programming_line4
 29233  003796  20F4               	addwfc	prodh,w,c
 29234  003798  6EF7               	movwf	tblptrh,c
 29235  00379A                     	if	1	;There are 3 active tblptr bytes
 29236  00379A  6AF8               	clrf	tblptru,c
 29237  00379C  0E00               	movlw	low (__mediumconst shr (0+16))
 29238  00379E  22F8               	addwfc	tblptru,f,c
 29239  0037A0                     	endif
 29240  0037A0  501D               	movf	__display_programming@cntr,w,c
 29241  0037A2  0D01               	mullw	1
 29242  0037A4  0E3C               	movlw	low (_display_content+60)
 29243  0037A6  24F3               	addwf	prodl,w,c
 29244  0037A8  6ED9               	movwf	fsr2l,c
 29245  0037AA  0E02               	movlw	high (_display_content+60)
 29246  0037AC  20F4               	addwfc	prodh,w,c
 29247  0037AE  6EDA               	movwf	fsr2h,c
 29248  0037B0  0008               	tblrd		*
 29249  0037B2  CFF5 FFDF          	movff	tablat,indf2
 29250  0037B6  2A1D               	incf	__display_programming@cntr,f,c
 29251  0037B8                     l1699:
 29252  0037B8  501D               	movf	__display_programming@cntr,w,c
 29253  0037BA  0D01               	mullw	1
 29254  0037BC  0E78               	movlw	low _programming_line4
 29255  0037BE  24F3               	addwf	prodl,w,c
 29256  0037C0  6EF6               	movwf	tblptrl,c
 29257  0037C2  0EBD               	movlw	high _programming_line4
 29258  0037C4  20F4               	addwfc	prodh,w,c
 29259  0037C6  6EF7               	movwf	tblptrh,c
 29260  0037C8                     	if	1	;There are 3 active tblptr bytes
 29261  0037C8  6AF8               	clrf	tblptru,c
 29262  0037CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29263  0037CC  22F8               	addwfc	tblptru,f,c
 29264  0037CE                     	endif
 29265  0037CE  0008               	tblrd		*
 29266  0037D0  50F5               	movf	tablat,w,c
 29267  0037D2  0900               	iorlw	0
 29268  0037D4  A4D8               	btfss	status,2,c
 29269  0037D6  D7D9               	goto	l1700
 29270                           
 29271                           ;display.c: 516: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 29272  0037D8  EC68  F050         	call	_bootloader_get_flashPagesWritten	;wreg free
 29273  0037DC  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 29274  0037E0  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 29275  0037E4  501D               	movf	__display_programming@cntr,w,c
 29276  0037E6  0D01               	mullw	1
 29277  0037E8  0E3C               	movlw	low (_display_content+60)
 29278  0037EA  24F3               	addwf	prodl,w,c
 29279  0037EC  6E1B               	movwf	__display_itoa_u16@text,c
 29280  0037EE  0E02               	movlw	high (_display_content+60)
 29281  0037F0  20F4               	addwfc	prodh,w,c
 29282  0037F2  6E1C               	movwf	__display_itoa_u16@text+1,c
 29283  0037F4  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 29284  0037F8  0012               	return		;funcret
 29285  0037FA                     __end_of__display_programming:
 29286                           	opt stack 0
 29287                           tosu	equ	0xFFF
 29288                           tosh	equ	0xFFE
 29289                           tosl	equ	0xFFD
 29290                           pclath	equ	0xFFA
 29291                           tblptru	equ	0xFF8
 29292                           tblptrh	equ	0xFF7
 29293                           tblptrl	equ	0xFF6
 29294                           tablat	equ	0xFF5
 29295                           prodh	equ	0xFF4
 29296                           prodl	equ	0xFF3
 29297                           intcon	equ	0xFF2
 29298                           intcon2	equ	0xFF1
 29299                           intcon3	equ	0xFF0
 29300                           indf0	equ	0xFEF
 29301                           postinc0	equ	0xFEE
 29302                           fsr0h	equ	0xFEA
 29303                           fsr0l	equ	0xFE9
 29304                           wreg	equ	0xFE8
 29305                           indf1	equ	0xFE7
 29306                           postdec1	equ	0xFE5
 29307                           plusw1	equ	0xFE3
 29308                           fsr1h	equ	0xFE2
 29309                           fsr1l	equ	0xFE1
 29310                           indf2	equ	0xFDF
 29311                           postinc2	equ	0xFDE
 29312                           postdec2	equ	0xFDD
 29313                           plusw2	equ	0xFDB
 29314                           fsr2h	equ	0xFDA
 29315                           fsr2l	equ	0xFD9
 29316                           status	equ	0xFD8
 29317                           
 29318 ;; *************** function __display_found *****************
 29319 ;; Defined at:
 29320 ;;		line 380 in file "display.c"
 29321 ;; Parameters:    Size  Location     Type
 29322 ;;		None
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;  cntr            1   24[COMRAM] unsigned char 
 29325 ;;  start           1   23[COMRAM] unsigned char 
 29326 ;; Return value:  Size  Location     Type
 29327 ;;                  1    wreg      void 
 29328 ;; Registers used:
 29329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29330 ;; Tracked objects:
 29331 ;;		On entry : 0/0
 29332 ;;		On exit  : 0/0
 29333 ;;		Unchanged: 0/0
 29334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29339 ;;Total ram usage:        4 bytes
 29340 ;; Hardware stack levels used:    1
 29341 ;; Hardware stack levels required when called:    2
 29342 ;; This function calls:
 29343 ;;		__display_itoa_u32
 29344 ;;		_bootloader_get_file_size
 29345 ;; This function is called by:
 29346 ;;		_display_prepare
 29347 ;; This function uses a non-reentrant model
 29348 ;;
 29349                           
 29350                           	psect	text139
 29351  0030A0                     __ptext139:
 29352                           	opt stack 0
 29353  0030A0                     __display_found:
 29354                           	opt stack 24
 29355                           
 29356                           ;display.c: 382: uint8_t cntr;;display.c: 383: uint8_t start;;display.c: 385: cntr = 0;
 29357                           
 29358                           ;incstack = 0
 29359  0030A0  0E00               	movlw	0
 29360  0030A2  6E19               	movwf	__display_found@cntr,c
 29361                           
 29362                           ;display.c: 386: while(found_line1[cntr])
 29363  0030A4  D017               	goto	l1611
 29364  0030A6                     
 29365                           ;display.c: 387: display_content[0][cntr] = found_line1[cntr++];
 29366  0030A6  5019               	movf	__display_found@cntr,w,c
 29367  0030A8  0D01               	mullw	1
 29368  0030AA  0EC8               	movlw	low _found_line1
 29369  0030AC  24F3               	addwf	prodl,w,c
 29370  0030AE  6EF6               	movwf	tblptrl,c
 29371  0030B0  0EBD               	movlw	high _found_line1
 29372  0030B2  20F4               	addwfc	prodh,w,c
 29373  0030B4  6EF7               	movwf	tblptrh,c
 29374  0030B6                     	if	1	;There are 3 active tblptr bytes
 29375  0030B6  6AF8               	clrf	tblptru,c
 29376  0030B8  0E00               	movlw	low (__mediumconst shr (0+16))
 29377  0030BA  22F8               	addwfc	tblptru,f,c
 29378  0030BC                     	endif
 29379  0030BC  5019               	movf	__display_found@cntr,w,c
 29380  0030BE  0D01               	mullw	1
 29381  0030C0  0E00               	movlw	low _display_content
 29382  0030C2  24F3               	addwf	prodl,w,c
 29383  0030C4  6ED9               	movwf	fsr2l,c
 29384  0030C6  0E02               	movlw	high _display_content
 29385  0030C8  20F4               	addwfc	prodh,w,c
 29386  0030CA  6EDA               	movwf	fsr2h,c
 29387  0030CC  0008               	tblrd		*
 29388  0030CE  CFF5 FFDF          	movff	tablat,indf2
 29389  0030D2  2A19               	incf	__display_found@cntr,f,c
 29390  0030D4                     l1611:
 29391  0030D4  5019               	movf	__display_found@cntr,w,c
 29392  0030D6  0D01               	mullw	1
 29393  0030D8  0EC8               	movlw	low _found_line1
 29394  0030DA  24F3               	addwf	prodl,w,c
 29395  0030DC  6EF6               	movwf	tblptrl,c
 29396  0030DE  0EBD               	movlw	high _found_line1
 29397  0030E0  20F4               	addwfc	prodh,w,c
 29398  0030E2  6EF7               	movwf	tblptrh,c
 29399  0030E4                     	if	1	;There are 3 active tblptr bytes
 29400  0030E4  6AF8               	clrf	tblptru,c
 29401  0030E6  0E00               	movlw	low (__mediumconst shr (0+16))
 29402  0030E8  22F8               	addwfc	tblptru,f,c
 29403  0030EA                     	endif
 29404  0030EA  0008               	tblrd		*
 29405  0030EC  50F5               	movf	tablat,w,c
 29406  0030EE  0900               	iorlw	0
 29407  0030F0  A4D8               	btfss	status,2,c
 29408  0030F2  D7D9               	goto	l1612
 29409                           
 29410                           ;display.c: 389: cntr = 0;
 29411  0030F4  0E00               	movlw	0
 29412  0030F6  6E19               	movwf	__display_found@cntr,c
 29413                           
 29414                           ;display.c: 390: while(found_line2[cntr])
 29415  0030F8  D017               	goto	l1614
 29416  0030FA                     
 29417                           ;display.c: 391: display_content[1][cntr] = found_line2[cntr++];
 29418  0030FA  5019               	movf	__display_found@cntr,w,c
 29419  0030FC  0D01               	mullw	1
 29420  0030FE  0EBD               	movlw	low _found_line2
 29421  003100  24F3               	addwf	prodl,w,c
 29422  003102  6EF6               	movwf	tblptrl,c
 29423  003104  0EBC               	movlw	high _found_line2
 29424  003106  20F4               	addwfc	prodh,w,c
 29425  003108  6EF7               	movwf	tblptrh,c
 29426  00310A                     	if	1	;There are 3 active tblptr bytes
 29427  00310A  6AF8               	clrf	tblptru,c
 29428  00310C  0E00               	movlw	low (__mediumconst shr (0+16))
 29429  00310E  22F8               	addwfc	tblptru,f,c
 29430  003110                     	endif
 29431  003110  5019               	movf	__display_found@cntr,w,c
 29432  003112  0D01               	mullw	1
 29433  003114  0E14               	movlw	low (_display_content+20)
 29434  003116  24F3               	addwf	prodl,w,c
 29435  003118  6ED9               	movwf	fsr2l,c
 29436  00311A  0E02               	movlw	high (_display_content+20)
 29437  00311C  20F4               	addwfc	prodh,w,c
 29438  00311E  6EDA               	movwf	fsr2h,c
 29439  003120  0008               	tblrd		*
 29440  003122  CFF5 FFDF          	movff	tablat,indf2
 29441  003126  2A19               	incf	__display_found@cntr,f,c
 29442  003128                     l1614:
 29443  003128  5019               	movf	__display_found@cntr,w,c
 29444  00312A  0D01               	mullw	1
 29445  00312C  0EBD               	movlw	low _found_line2
 29446  00312E  24F3               	addwf	prodl,w,c
 29447  003130  6EF6               	movwf	tblptrl,c
 29448  003132  0EBC               	movlw	high _found_line2
 29449  003134  20F4               	addwfc	prodh,w,c
 29450  003136  6EF7               	movwf	tblptrh,c
 29451  003138                     	if	1	;There are 3 active tblptr bytes
 29452  003138  6AF8               	clrf	tblptru,c
 29453  00313A  0E00               	movlw	low (__mediumconst shr (0+16))
 29454  00313C  22F8               	addwfc	tblptru,f,c
 29455  00313E                     	endif
 29456  00313E  0008               	tblrd		*
 29457  003140  50F5               	movf	tablat,w,c
 29458  003142  0900               	iorlw	0
 29459  003144  A4D8               	btfss	status,2,c
 29460  003146  D7D9               	goto	l1615
 29461                           
 29462                           ;display.c: 393: cntr = 0;
 29463  003148  0E00               	movlw	0
 29464  00314A  6E19               	movwf	__display_found@cntr,c
 29465                           
 29466                           ;display.c: 394: while(found_line3[cntr])
 29467  00314C  D017               	goto	l1617
 29468  00314E                     
 29469                           ;display.c: 395: display_content[2][cntr] = found_line3[cntr++];
 29470  00314E  5019               	movf	__display_found@cntr,w,c
 29471  003150  0D01               	mullw	1
 29472  003152  0E96               	movlw	low _found_line3
 29473  003154  24F3               	addwf	prodl,w,c
 29474  003156  6EF6               	movwf	tblptrl,c
 29475  003158  0EBE               	movlw	high _found_line3
 29476  00315A  20F4               	addwfc	prodh,w,c
 29477  00315C  6EF7               	movwf	tblptrh,c
 29478  00315E                     	if	1	;There are 3 active tblptr bytes
 29479  00315E  6AF8               	clrf	tblptru,c
 29480  003160  0E00               	movlw	low (__mediumconst shr (0+16))
 29481  003162  22F8               	addwfc	tblptru,f,c
 29482  003164                     	endif
 29483  003164  5019               	movf	__display_found@cntr,w,c
 29484  003166  0D01               	mullw	1
 29485  003168  0E28               	movlw	low (_display_content+40)
 29486  00316A  24F3               	addwf	prodl,w,c
 29487  00316C  6ED9               	movwf	fsr2l,c
 29488  00316E  0E02               	movlw	high (_display_content+40)
 29489  003170  20F4               	addwfc	prodh,w,c
 29490  003172  6EDA               	movwf	fsr2h,c
 29491  003174  0008               	tblrd		*
 29492  003176  CFF5 FFDF          	movff	tablat,indf2
 29493  00317A  2A19               	incf	__display_found@cntr,f,c
 29494  00317C                     l1617:
 29495  00317C  5019               	movf	__display_found@cntr,w,c
 29496  00317E  0D01               	mullw	1
 29497  003180  0E96               	movlw	low _found_line3
 29498  003182  24F3               	addwf	prodl,w,c
 29499  003184  6EF6               	movwf	tblptrl,c
 29500  003186  0EBE               	movlw	high _found_line3
 29501  003188  20F4               	addwfc	prodh,w,c
 29502  00318A  6EF7               	movwf	tblptrh,c
 29503  00318C                     	if	1	;There are 3 active tblptr bytes
 29504  00318C  6AF8               	clrf	tblptru,c
 29505  00318E  0E00               	movlw	low (__mediumconst shr (0+16))
 29506  003190  22F8               	addwfc	tblptru,f,c
 29507  003192                     	endif
 29508  003192  0008               	tblrd		*
 29509  003194  50F5               	movf	tablat,w,c
 29510  003196  0900               	iorlw	0
 29511  003198  A4D8               	btfss	status,2,c
 29512  00319A  D7D9               	goto	l1618
 29513                           
 29514                           ;display.c: 396: start = cntr;
 29515  00319C  C019  F018         	movff	__display_found@cntr,__display_found@start
 29516                           
 29517                           ;display.c: 397: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 29518  0031A0  ECF9  F04F         	call	_bootloader_get_file_size	;wreg free
 29519  0031A4  C001  F00E         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29520  0031A8  C002  F00F         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29521  0031AC  C003  F010         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29522  0031B0  C004  F011         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29523  0031B4  5019               	movf	__display_found@cntr,w,c
 29524  0031B6  0D01               	mullw	1
 29525  0031B8  0E28               	movlw	low (_display_content+40)
 29526  0031BA  24F3               	addwf	prodl,w,c
 29527  0031BC  6E12               	movwf	__display_itoa_u32@text,c
 29528  0031BE  0E02               	movlw	high (_display_content+40)
 29529  0031C0  20F4               	addwfc	prodh,w,c
 29530  0031C2  6E13               	movwf	__display_itoa_u32@text+1,c
 29531  0031C4  EC89  F022         	call	__display_itoa_u32	;wreg free
 29532  0031C8  2618               	addwf	__display_found@start,f,c
 29533                           
 29534                           ;display.c: 398: cntr = 0;
 29535  0031CA  0E00               	movlw	0
 29536  0031CC  6E19               	movwf	__display_found@cntr,c
 29537                           
 29538                           ;display.c: 399: while(found_line3b[cntr])
 29539  0031CE  D01C               	goto	l1620
 29540  0031D0                     
 29541                           ;display.c: 400: display_content[2][start+cntr] = found_line3b[cntr++];
 29542  0031D0  5019               	movf	__display_found@cntr,w,c
 29543  0031D2  0D01               	mullw	1
 29544  0031D4  0E8F               	movlw	low _found_line3b
 29545  0031D6  24F3               	addwf	prodl,w,c
 29546  0031D8  6EF6               	movwf	tblptrl,c
 29547  0031DA  0EBE               	movlw	high _found_line3b
 29548  0031DC  20F4               	addwfc	prodh,w,c
 29549  0031DE  6EF7               	movwf	tblptrh,c
 29550  0031E0                     	if	1	;There are 3 active tblptr bytes
 29551  0031E0  6AF8               	clrf	tblptru,c
 29552  0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 29553  0031E4  22F8               	addwfc	tblptru,f,c
 29554  0031E6                     	endif
 29555  0031E6  5019               	movf	__display_found@cntr,w,c
 29556  0031E8  C018  F016         	movff	__display_found@start,??__display_found
 29557  0031EC  6A17               	clrf	(??__display_found+1)& (0+255),c
 29558  0031EE  2616               	addwf	??__display_found,f,c
 29559  0031F0  0E00               	movlw	0
 29560  0031F2  2217               	addwfc	??__display_found+1,f,c
 29561  0031F4  0E28               	movlw	low (_display_content+40)
 29562  0031F6  2416               	addwf	??__display_found,w,c
 29563  0031F8  6ED9               	movwf	fsr2l,c
 29564  0031FA  0E02               	movlw	high (_display_content+40)
 29565  0031FC  2017               	addwfc	??__display_found+1,w,c
 29566  0031FE  6EDA               	movwf	fsr2h,c
 29567  003200  0008               	tblrd		*
 29568  003202  CFF5 FFDF          	movff	tablat,indf2
 29569  003206  2A19               	incf	__display_found@cntr,f,c
 29570  003208                     l1620:
 29571  003208  5019               	movf	__display_found@cntr,w,c
 29572  00320A  0D01               	mullw	1
 29573  00320C  0E8F               	movlw	low _found_line3b
 29574  00320E  24F3               	addwf	prodl,w,c
 29575  003210  6EF6               	movwf	tblptrl,c
 29576  003212  0EBE               	movlw	high _found_line3b
 29577  003214  20F4               	addwfc	prodh,w,c
 29578  003216  6EF7               	movwf	tblptrh,c
 29579  003218                     	if	1	;There are 3 active tblptr bytes
 29580  003218  6AF8               	clrf	tblptru,c
 29581  00321A  0E00               	movlw	low (__mediumconst shr (0+16))
 29582  00321C  22F8               	addwfc	tblptru,f,c
 29583  00321E                     	endif
 29584  00321E  0008               	tblrd		*
 29585  003220  50F5               	movf	tablat,w,c
 29586  003222  0900               	iorlw	0
 29587  003224  A4D8               	btfss	status,2,c
 29588  003226  D7D4               	goto	l1621
 29589                           
 29590                           ;display.c: 402: cntr = 0;
 29591  003228  0E00               	movlw	0
 29592  00322A  6E19               	movwf	__display_found@cntr,c
 29593                           
 29594                           ;display.c: 403: while(found_line4[cntr])
 29595  00322C  D017               	goto	l1623
 29596  00322E                     
 29597                           ;display.c: 404: display_content[3][cntr] = found_line4[cntr++];
 29598  00322E  5019               	movf	__display_found@cntr,w,c
 29599  003230  0D01               	mullw	1
 29600  003232  0EF4               	movlw	low _found_line4
 29601  003234  24F3               	addwf	prodl,w,c
 29602  003236  6EF6               	movwf	tblptrl,c
 29603  003238  0EBC               	movlw	high _found_line4
 29604  00323A  20F4               	addwfc	prodh,w,c
 29605  00323C  6EF7               	movwf	tblptrh,c
 29606  00323E                     	if	1	;There are 3 active tblptr bytes
 29607  00323E  6AF8               	clrf	tblptru,c
 29608  003240  0E00               	movlw	low (__mediumconst shr (0+16))
 29609  003242  22F8               	addwfc	tblptru,f,c
 29610  003244                     	endif
 29611  003244  5019               	movf	__display_found@cntr,w,c
 29612  003246  0D01               	mullw	1
 29613  003248  0E3C               	movlw	low (_display_content+60)
 29614  00324A  24F3               	addwf	prodl,w,c
 29615  00324C  6ED9               	movwf	fsr2l,c
 29616  00324E  0E02               	movlw	high (_display_content+60)
 29617  003250  20F4               	addwfc	prodh,w,c
 29618  003252  6EDA               	movwf	fsr2h,c
 29619  003254  0008               	tblrd		*
 29620  003256  CFF5 FFDF          	movff	tablat,indf2
 29621  00325A  2A19               	incf	__display_found@cntr,f,c
 29622  00325C                     l1623:
 29623  00325C  5019               	movf	__display_found@cntr,w,c
 29624  00325E  0D01               	mullw	1
 29625  003260  0EF4               	movlw	low _found_line4
 29626  003262  24F3               	addwf	prodl,w,c
 29627  003264  6EF6               	movwf	tblptrl,c
 29628  003266  0EBC               	movlw	high _found_line4
 29629  003268  20F4               	addwfc	prodh,w,c
 29630  00326A  6EF7               	movwf	tblptrh,c
 29631  00326C                     	if	1	;There are 3 active tblptr bytes
 29632  00326C  6AF8               	clrf	tblptru,c
 29633  00326E  0E00               	movlw	low (__mediumconst shr (0+16))
 29634  003270  22F8               	addwfc	tblptru,f,c
 29635  003272                     	endif
 29636  003272  0008               	tblrd		*
 29637  003274  50F5               	movf	tablat,w,c
 29638  003276  0900               	iorlw	0
 29639  003278  B4D8               	btfsc	status,2,c
 29640  00327A  0012               	return	
 29641  00327C  D7D8               	goto	l1624
 29642  00327E                     __end_of__display_found:
 29643                           	opt stack 0
 29644                           tosu	equ	0xFFF
 29645                           tosh	equ	0xFFE
 29646                           tosl	equ	0xFFD
 29647                           pclath	equ	0xFFA
 29648                           tblptru	equ	0xFF8
 29649                           tblptrh	equ	0xFF7
 29650                           tblptrl	equ	0xFF6
 29651                           tablat	equ	0xFF5
 29652                           prodh	equ	0xFF4
 29653                           prodl	equ	0xFF3
 29654                           intcon	equ	0xFF2
 29655                           intcon2	equ	0xFF1
 29656                           intcon3	equ	0xFF0
 29657                           indf0	equ	0xFEF
 29658                           postinc0	equ	0xFEE
 29659                           fsr0h	equ	0xFEA
 29660                           fsr0l	equ	0xFE9
 29661                           wreg	equ	0xFE8
 29662                           indf1	equ	0xFE7
 29663                           postdec1	equ	0xFE5
 29664                           plusw1	equ	0xFE3
 29665                           fsr1h	equ	0xFE2
 29666                           fsr1l	equ	0xFE1
 29667                           indf2	equ	0xFDF
 29668                           postinc2	equ	0xFDE
 29669                           postdec2	equ	0xFDD
 29670                           plusw2	equ	0xFDB
 29671                           fsr2h	equ	0xFDA
 29672                           fsr2l	equ	0xFD9
 29673                           status	equ	0xFD8
 29674                           
 29675 ;; *************** function _bootloader_get_file_size *****************
 29676 ;; Defined at:
 29677 ;;		line 463 in file "bootloader.c"
 29678 ;; Parameters:    Size  Location     Type
 29679 ;;		None
 29680 ;; Auto vars:     Size  Location     Type
 29681 ;;		None
 29682 ;; Return value:  Size  Location     Type
 29683 ;;                  4    0[COMRAM] unsigned long 
 29684 ;; Registers used:
 29685 ;;		None
 29686 ;; Tracked objects:
 29687 ;;		On entry : 0/0
 29688 ;;		On exit  : 0/0
 29689 ;;		Unchanged: 0/0
 29690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29695 ;;Total ram usage:        4 bytes
 29696 ;; Hardware stack levels used:    1
 29697 ;; This function calls:
 29698 ;;		Nothing
 29699 ;; This function is called by:
 29700 ;;		__display_found
 29701 ;;		__fill_buffer_get_bootloader_details
 29702 ;; This function uses a non-reentrant model
 29703 ;;
 29704                           
 29705                           	psect	text140
 29706  009FF2                     __ptext140:
 29707                           	opt stack 0
 29708  009FF2                     _bootloader_get_file_size:
 29709                           	opt stack 25
 29710                           
 29711                           ;bootloader.c: 465: return hex_file_size;
 29712                           
 29713                           ;incstack = 0
 29714  009FF2  C143  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29715  009FF6  C144  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29716  009FFA  C145  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29717  009FFE  C146  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29718  00A002  0012               	return		;funcret
 29719  00A004                     __end_of_bootloader_get_file_size:
 29720                           	opt stack 0
 29721                           tosu	equ	0xFFF
 29722                           tosh	equ	0xFFE
 29723                           tosl	equ	0xFFD
 29724                           pclath	equ	0xFFA
 29725                           tblptru	equ	0xFF8
 29726                           tblptrh	equ	0xFF7
 29727                           tblptrl	equ	0xFF6
 29728                           tablat	equ	0xFF5
 29729                           prodh	equ	0xFF4
 29730                           prodl	equ	0xFF3
 29731                           intcon	equ	0xFF2
 29732                           intcon2	equ	0xFF1
 29733                           intcon3	equ	0xFF0
 29734                           indf0	equ	0xFEF
 29735                           postinc0	equ	0xFEE
 29736                           fsr0h	equ	0xFEA
 29737                           fsr0l	equ	0xFE9
 29738                           wreg	equ	0xFE8
 29739                           indf1	equ	0xFE7
 29740                           postdec1	equ	0xFE5
 29741                           plusw1	equ	0xFE3
 29742                           fsr1h	equ	0xFE2
 29743                           fsr1l	equ	0xFE1
 29744                           indf2	equ	0xFDF
 29745                           postinc2	equ	0xFDE
 29746                           postdec2	equ	0xFDD
 29747                           plusw2	equ	0xFDB
 29748                           fsr2h	equ	0xFDA
 29749                           fsr2l	equ	0xFD9
 29750                           status	equ	0xFD8
 29751                           
 29752 ;; *************** function __display_failed *****************
 29753 ;; Defined at:
 29754 ;;		line 445 in file "display.c"
 29755 ;; Parameters:    Size  Location     Type
 29756 ;;		None
 29757 ;; Auto vars:     Size  Location     Type
 29758 ;;  cntr            1   28[COMRAM] unsigned char 
 29759 ;;  start           1    0        unsigned char 
 29760 ;; Return value:  Size  Location     Type
 29761 ;;                  1    wreg      void 
 29762 ;; Registers used:
 29763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29764 ;; Tracked objects:
 29765 ;;		On entry : 0/0
 29766 ;;		On exit  : 0/0
 29767 ;;		Unchanged: 0/0
 29768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29773 ;;Total ram usage:        1 bytes
 29774 ;; Hardware stack levels used:    1
 29775 ;; Hardware stack levels required when called:    4
 29776 ;; This function calls:
 29777 ;;		__display_itoa_u16
 29778 ;;		__display_itoa_u32
 29779 ;;		_bootloader_get_entries
 29780 ;;		_bootloader_get_error
 29781 ;;		_bootloader_get_rec_address
 29782 ;; This function is called by:
 29783 ;;		_display_prepare
 29784 ;; This function uses a non-reentrant model
 29785 ;;
 29786                           
 29787                           	psect	text141
 29788  000F70                     __ptext141:
 29789                           	opt stack 0
 29790  000F70                     __display_failed:
 29791                           	opt stack 22
 29792                           
 29793                           ;display.c: 447: uint8_t cntr;;display.c: 448: uint8_t start;;display.c: 449: cntr = 0;
 29794                           
 29795                           ;incstack = 0
 29796  000F70  0E00               	movlw	0
 29797  000F72  6E1D               	movwf	__display_failed@cntr,c
 29798                           
 29799                           ;display.c: 450: while(failed_line1[cntr])
 29800  000F74  D017               	goto	l1656
 29801  000F76                     
 29802                           ;display.c: 451: display_content[0][cntr] = failed_line1[cntr++];
 29803  000F76  501D               	movf	__display_failed@cntr,w,c
 29804  000F78  0D01               	mullw	1
 29805  000F7A  0E98               	movlw	low _failed_line1
 29806  000F7C  24F3               	addwf	prodl,w,c
 29807  000F7E  6EF6               	movwf	tblptrl,c
 29808  000F80  0EBD               	movlw	high _failed_line1
 29809  000F82  20F4               	addwfc	prodh,w,c
 29810  000F84  6EF7               	movwf	tblptrh,c
 29811  000F86                     	if	1	;There are 3 active tblptr bytes
 29812  000F86  6AF8               	clrf	tblptru,c
 29813  000F88  0E00               	movlw	low (__mediumconst shr (0+16))
 29814  000F8A  22F8               	addwfc	tblptru,f,c
 29815  000F8C                     	endif
 29816  000F8C  501D               	movf	__display_failed@cntr,w,c
 29817  000F8E  0D01               	mullw	1
 29818  000F90  0E00               	movlw	low _display_content
 29819  000F92  24F3               	addwf	prodl,w,c
 29820  000F94  6ED9               	movwf	fsr2l,c
 29821  000F96  0E02               	movlw	high _display_content
 29822  000F98  20F4               	addwfc	prodh,w,c
 29823  000F9A  6EDA               	movwf	fsr2h,c
 29824  000F9C  0008               	tblrd		*
 29825  000F9E  CFF5 FFDF          	movff	tablat,indf2
 29826  000FA2  2A1D               	incf	__display_failed@cntr,f,c
 29827  000FA4                     l1656:
 29828  000FA4  501D               	movf	__display_failed@cntr,w,c
 29829  000FA6  0D01               	mullw	1
 29830  000FA8  0E98               	movlw	low _failed_line1
 29831  000FAA  24F3               	addwf	prodl,w,c
 29832  000FAC  6EF6               	movwf	tblptrl,c
 29833  000FAE  0EBD               	movlw	high _failed_line1
 29834  000FB0  20F4               	addwfc	prodh,w,c
 29835  000FB2  6EF7               	movwf	tblptrh,c
 29836  000FB4                     	if	1	;There are 3 active tblptr bytes
 29837  000FB4  6AF8               	clrf	tblptru,c
 29838  000FB6  0E00               	movlw	low (__mediumconst shr (0+16))
 29839  000FB8  22F8               	addwfc	tblptru,f,c
 29840  000FBA                     	endif
 29841  000FBA  0008               	tblrd		*
 29842  000FBC  50F5               	movf	tablat,w,c
 29843  000FBE  0900               	iorlw	0
 29844  000FC0  A4D8               	btfss	status,2,c
 29845  000FC2  D7D9               	goto	l1657
 29846                           
 29847                           ;display.c: 452: cntr = 0;
 29848  000FC4  0E00               	movlw	0
 29849  000FC6  6E1D               	movwf	__display_failed@cntr,c
 29850                           
 29851                           ;display.c: 453: while(failed_line2[cntr])
 29852  000FC8  D017               	goto	l1659
 29853  000FCA                     
 29854                           ;display.c: 454: display_content[1][cntr] = failed_line2[cntr++];
 29855  000FCA  501D               	movf	__display_failed@cntr,w,c
 29856  000FCC  0D01               	mullw	1
 29857  000FCE  0EE2               	movlw	low _failed_line2
 29858  000FD0  24F3               	addwf	prodl,w,c
 29859  000FD2  6EF6               	movwf	tblptrl,c
 29860  000FD4  0EBC               	movlw	high _failed_line2
 29861  000FD6  20F4               	addwfc	prodh,w,c
 29862  000FD8  6EF7               	movwf	tblptrh,c
 29863  000FDA                     	if	1	;There are 3 active tblptr bytes
 29864  000FDA  6AF8               	clrf	tblptru,c
 29865  000FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 29866  000FDE  22F8               	addwfc	tblptru,f,c
 29867  000FE0                     	endif
 29868  000FE0  501D               	movf	__display_failed@cntr,w,c
 29869  000FE2  0D01               	mullw	1
 29870  000FE4  0E14               	movlw	low (_display_content+20)
 29871  000FE6  24F3               	addwf	prodl,w,c
 29872  000FE8  6ED9               	movwf	fsr2l,c
 29873  000FEA  0E02               	movlw	high (_display_content+20)
 29874  000FEC  20F4               	addwfc	prodh,w,c
 29875  000FEE  6EDA               	movwf	fsr2h,c
 29876  000FF0  0008               	tblrd		*
 29877  000FF2  CFF5 FFDF          	movff	tablat,indf2
 29878  000FF6  2A1D               	incf	__display_failed@cntr,f,c
 29879  000FF8                     l1659:
 29880  000FF8  501D               	movf	__display_failed@cntr,w,c
 29881  000FFA  0D01               	mullw	1
 29882  000FFC  0EE2               	movlw	low _failed_line2
 29883  000FFE  24F3               	addwf	prodl,w,c
 29884  001000  6EF6               	movwf	tblptrl,c
 29885  001002  0EBC               	movlw	high _failed_line2
 29886  001004  20F4               	addwfc	prodh,w,c
 29887  001006  6EF7               	movwf	tblptrh,c
 29888  001008                     	if	1	;There are 3 active tblptr bytes
 29889  001008  6AF8               	clrf	tblptru,c
 29890  00100A  0E00               	movlw	low (__mediumconst shr (0+16))
 29891  00100C  22F8               	addwfc	tblptru,f,c
 29892  00100E                     	endif
 29893  00100E  0008               	tblrd		*
 29894  001010  50F5               	movf	tablat,w,c
 29895  001012  0900               	iorlw	0
 29896  001014  A4D8               	btfss	status,2,c
 29897  001016  D7D9               	goto	l1660
 29898                           
 29899                           ;display.c: 456: cntr = 0;
 29900  001018  0E00               	movlw	0
 29901  00101A  6E1D               	movwf	__display_failed@cntr,c
 29902                           
 29903                           ;display.c: 457: switch(bootloader_get_error())
 29904  00101C  D0D6               	goto	l1662
 29905  00101E                     
 29906                           ;display.c: 461: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29907  00101E  501D               	movf	__display_failed@cntr,w,c
 29908  001020  0D01               	mullw	1
 29909  001022  0EAA               	movlw	low _failed_line3_startCode
 29910  001024  24F3               	addwf	prodl,w,c
 29911  001026  6EF6               	movwf	tblptrl,c
 29912  001028  0EBC               	movlw	high _failed_line3_startCode
 29913  00102A  20F4               	addwfc	prodh,w,c
 29914  00102C  6EF7               	movwf	tblptrh,c
 29915  00102E                     	if	1	;There are 3 active tblptr bytes
 29916  00102E  6AF8               	clrf	tblptru,c
 29917  001030  0E00               	movlw	low (__mediumconst shr (0+16))
 29918  001032  22F8               	addwfc	tblptru,f,c
 29919  001034                     	endif
 29920  001034  501D               	movf	__display_failed@cntr,w,c
 29921  001036  0D01               	mullw	1
 29922  001038  0E28               	movlw	low (_display_content+40)
 29923  00103A  24F3               	addwf	prodl,w,c
 29924  00103C  6ED9               	movwf	fsr2l,c
 29925  00103E  0E02               	movlw	high (_display_content+40)
 29926  001040  20F4               	addwfc	prodh,w,c
 29927  001042  6EDA               	movwf	fsr2h,c
 29928  001044  0008               	tblrd		*
 29929  001046  CFF5 FFDF          	movff	tablat,indf2
 29930  00104A  2A1D               	incf	__display_failed@cntr,f,c
 29931  00104C  501D               	movf	__display_failed@cntr,w,c
 29932  00104E  0D01               	mullw	1
 29933  001050  0EAA               	movlw	low _failed_line3_startCode
 29934  001052  24F3               	addwf	prodl,w,c
 29935  001054  6EF6               	movwf	tblptrl,c
 29936  001056  0EBC               	movlw	high _failed_line3_startCode
 29937  001058  20F4               	addwfc	prodh,w,c
 29938  00105A  6EF7               	movwf	tblptrh,c
 29939  00105C                     	if	1	;There are 3 active tblptr bytes
 29940  00105C  6AF8               	clrf	tblptru,c
 29941  00105E  0E00               	movlw	low (__mediumconst shr (0+16))
 29942  001060  22F8               	addwfc	tblptru,f,c
 29943  001062                     	endif
 29944  001062  0008               	tblrd		*
 29945  001064  50F5               	movf	tablat,w,c
 29946  001066  0900               	iorlw	0
 29947  001068  B4D8               	btfsc	status,2,c
 29948  00106A  D0C0               	goto	l1667
 29949  00106C  D7D8               	goto	l1665
 29950  00106E                     
 29951                           ;display.c: 466: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29952  00106E  501D               	movf	__display_failed@cntr,w,c
 29953  001070  0D01               	mullw	1
 29954  001072  0EF8               	movlw	low _failed_line3_checksum
 29955  001074  24F3               	addwf	prodl,w,c
 29956  001076  6EF6               	movwf	tblptrl,c
 29957  001078  0EBD               	movlw	high _failed_line3_checksum
 29958  00107A  20F4               	addwfc	prodh,w,c
 29959  00107C  6EF7               	movwf	tblptrh,c
 29960  00107E                     	if	1	;There are 3 active tblptr bytes
 29961  00107E  6AF8               	clrf	tblptru,c
 29962  001080  0E00               	movlw	low (__mediumconst shr (0+16))
 29963  001082  22F8               	addwfc	tblptru,f,c
 29964  001084                     	endif
 29965  001084  501D               	movf	__display_failed@cntr,w,c
 29966  001086  0D01               	mullw	1
 29967  001088  0E28               	movlw	low (_display_content+40)
 29968  00108A  24F3               	addwf	prodl,w,c
 29969  00108C  6ED9               	movwf	fsr2l,c
 29970  00108E  0E02               	movlw	high (_display_content+40)
 29971  001090  20F4               	addwfc	prodh,w,c
 29972  001092  6EDA               	movwf	fsr2h,c
 29973  001094  0008               	tblrd		*
 29974  001096  CFF5 FFDF          	movff	tablat,indf2
 29975  00109A  2A1D               	incf	__display_failed@cntr,f,c
 29976  00109C  501D               	movf	__display_failed@cntr,w,c
 29977  00109E  0D01               	mullw	1
 29978  0010A0  0EF8               	movlw	low _failed_line3_checksum
 29979  0010A2  24F3               	addwf	prodl,w,c
 29980  0010A4  6EF6               	movwf	tblptrl,c
 29981  0010A6  0EBD               	movlw	high _failed_line3_checksum
 29982  0010A8  20F4               	addwfc	prodh,w,c
 29983  0010AA  6EF7               	movwf	tblptrh,c
 29984  0010AC                     	if	1	;There are 3 active tblptr bytes
 29985  0010AC  6AF8               	clrf	tblptru,c
 29986  0010AE  0E00               	movlw	low (__mediumconst shr (0+16))
 29987  0010B0  22F8               	addwfc	tblptru,f,c
 29988  0010B2                     	endif
 29989  0010B2  0008               	tblrd		*
 29990  0010B4  50F5               	movf	tablat,w,c
 29991  0010B6  0900               	iorlw	0
 29992  0010B8  B4D8               	btfsc	status,2,c
 29993  0010BA  D098               	goto	l1667
 29994  0010BC  D7D8               	goto	l1670
 29995  0010BE                     
 29996                           ;display.c: 473: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29997  0010BE  501D               	movf	__display_failed@cntr,w,c
 29998  0010C0  0D01               	mullw	1
 29999  0010C2  0E07               	movlw	low _failed_line3_noNextRecord
 30000  0010C4  24F3               	addwf	prodl,w,c
 30001  0010C6  6EF6               	movwf	tblptrl,c
 30002  0010C8  0EBE               	movlw	high _failed_line3_noNextRecord
 30003  0010CA  20F4               	addwfc	prodh,w,c
 30004  0010CC  6EF7               	movwf	tblptrh,c
 30005  0010CE                     	if	1	;There are 3 active tblptr bytes
 30006  0010CE  6AF8               	clrf	tblptru,c
 30007  0010D0  0E00               	movlw	low (__mediumconst shr (0+16))
 30008  0010D2  22F8               	addwfc	tblptru,f,c
 30009  0010D4                     	endif
 30010  0010D4  501D               	movf	__display_failed@cntr,w,c
 30011  0010D6  0D01               	mullw	1
 30012  0010D8  0E28               	movlw	low (_display_content+40)
 30013  0010DA  24F3               	addwf	prodl,w,c
 30014  0010DC  6ED9               	movwf	fsr2l,c
 30015  0010DE  0E02               	movlw	high (_display_content+40)
 30016  0010E0  20F4               	addwfc	prodh,w,c
 30017  0010E2  6EDA               	movwf	fsr2h,c
 30018  0010E4  0008               	tblrd		*
 30019  0010E6  CFF5 FFDF          	movff	tablat,indf2
 30020  0010EA  2A1D               	incf	__display_failed@cntr,f,c
 30021  0010EC  501D               	movf	__display_failed@cntr,w,c
 30022  0010EE  0D01               	mullw	1
 30023  0010F0  0E07               	movlw	low _failed_line3_noNextRecord
 30024  0010F2  24F3               	addwf	prodl,w,c
 30025  0010F4  6EF6               	movwf	tblptrl,c
 30026  0010F6  0EBE               	movlw	high _failed_line3_noNextRecord
 30027  0010F8  20F4               	addwfc	prodh,w,c
 30028  0010FA  6EF7               	movwf	tblptrh,c
 30029  0010FC                     	if	1	;There are 3 active tblptr bytes
 30030  0010FC  6AF8               	clrf	tblptru,c
 30031  0010FE  0E00               	movlw	low (__mediumconst shr (0+16))
 30032  001100  22F8               	addwfc	tblptru,f,c
 30033  001102                     	endif
 30034  001102  0008               	tblrd		*
 30035  001104  50F5               	movf	tablat,w,c
 30036  001106  0900               	iorlw	0
 30037  001108  B4D8               	btfsc	status,2,c
 30038  00110A  D070               	goto	l1667
 30039  00110C  D7D8               	goto	l1674
 30040  00110E                     
 30041                           ;display.c: 478: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 30042  00110E  501D               	movf	__display_failed@cntr,w,c
 30043  001110  0D01               	mullw	1
 30044  001112  0E25               	movlw	low _failed_line3_dataTooLong
 30045  001114  24F3               	addwf	prodl,w,c
 30046  001116  6EF6               	movwf	tblptrl,c
 30047  001118  0EBE               	movlw	high _failed_line3_dataTooLong
 30048  00111A  20F4               	addwfc	prodh,w,c
 30049  00111C  6EF7               	movwf	tblptrh,c
 30050  00111E                     	if	1	;There are 3 active tblptr bytes
 30051  00111E  6AF8               	clrf	tblptru,c
 30052  001120  0E00               	movlw	low (__mediumconst shr (0+16))
 30053  001122  22F8               	addwfc	tblptru,f,c
 30054  001124                     	endif
 30055  001124  501D               	movf	__display_failed@cntr,w,c
 30056  001126  0D01               	mullw	1
 30057  001128  0E28               	movlw	low (_display_content+40)
 30058  00112A  24F3               	addwf	prodl,w,c
 30059  00112C  6ED9               	movwf	fsr2l,c
 30060  00112E  0E02               	movlw	high (_display_content+40)
 30061  001130  20F4               	addwfc	prodh,w,c
 30062  001132  6EDA               	movwf	fsr2h,c
 30063  001134  0008               	tblrd		*
 30064  001136  CFF5 FFDF          	movff	tablat,indf2
 30065  00113A  2A1D               	incf	__display_failed@cntr,f,c
 30066  00113C  501D               	movf	__display_failed@cntr,w,c
 30067  00113E  0D01               	mullw	1
 30068  001140  0E25               	movlw	low _failed_line3_dataTooLong
 30069  001142  24F3               	addwf	prodl,w,c
 30070  001144  6EF6               	movwf	tblptrl,c
 30071  001146  0EBE               	movlw	high _failed_line3_dataTooLong
 30072  001148  20F4               	addwfc	prodh,w,c
 30073  00114A  6EF7               	movwf	tblptrh,c
 30074  00114C                     	if	1	;There are 3 active tblptr bytes
 30075  00114C  6AF8               	clrf	tblptru,c
 30076  00114E  0E00               	movlw	low (__mediumconst shr (0+16))
 30077  001150  22F8               	addwfc	tblptru,f,c
 30078  001152                     	endif
 30079  001152  0008               	tblrd		*
 30080  001154  50F5               	movf	tablat,w,c
 30081  001156  0900               	iorlw	0
 30082  001158  B4D8               	btfsc	status,2,c
 30083  00115A  D048               	goto	l1667
 30084  00115C  D7D8               	goto	l1678
 30085  00115E                     
 30086                           ;display.c: 483: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 30087  00115E  501D               	movf	__display_failed@cntr,w,c
 30088  001160  0D01               	mullw	1
 30089  001162  0E82               	movlw	low _failed_line3_addressRange
 30090  001164  24F3               	addwf	prodl,w,c
 30091  001166  6EF6               	movwf	tblptrl,c
 30092  001168  0EBC               	movlw	high _failed_line3_addressRange
 30093  00116A  20F4               	addwfc	prodh,w,c
 30094  00116C  6EF7               	movwf	tblptrh,c
 30095  00116E                     	if	1	;There are 3 active tblptr bytes
 30096  00116E  6AF8               	clrf	tblptru,c
 30097  001170  0E00               	movlw	low (__mediumconst shr (0+16))
 30098  001172  22F8               	addwfc	tblptru,f,c
 30099  001174                     	endif
 30100  001174  501D               	movf	__display_failed@cntr,w,c
 30101  001176  0D01               	mullw	1
 30102  001178  0E28               	movlw	low (_display_content+40)
 30103  00117A  24F3               	addwf	prodl,w,c
 30104  00117C  6ED9               	movwf	fsr2l,c
 30105  00117E  0E02               	movlw	high (_display_content+40)
 30106  001180  20F4               	addwfc	prodh,w,c
 30107  001182  6EDA               	movwf	fsr2h,c
 30108  001184  0008               	tblrd		*
 30109  001186  CFF5 FFDF          	movff	tablat,indf2
 30110  00118A  2A1D               	incf	__display_failed@cntr,f,c
 30111  00118C  501D               	movf	__display_failed@cntr,w,c
 30112  00118E  0D01               	mullw	1
 30113  001190  0E82               	movlw	low _failed_line3_addressRange
 30114  001192  24F3               	addwf	prodl,w,c
 30115  001194  6EF6               	movwf	tblptrl,c
 30116  001196  0EBC               	movlw	high _failed_line3_addressRange
 30117  001198  20F4               	addwfc	prodh,w,c
 30118  00119A  6EF7               	movwf	tblptrh,c
 30119  00119C                     	if	1	;There are 3 active tblptr bytes
 30120  00119C  6AF8               	clrf	tblptru,c
 30121  00119E  0E00               	movlw	low (__mediumconst shr (0+16))
 30122  0011A0  22F8               	addwfc	tblptru,f,c
 30123  0011A2                     	endif
 30124  0011A2  0008               	tblrd		*
 30125  0011A4  50F5               	movf	tablat,w,c
 30126  0011A6  0900               	iorlw	0
 30127  0011A8  A4D8               	btfss	status,2,c
 30128  0011AA  D7D9               	goto	l1682
 30129                           
 30130                           ;display.c: 484: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 30131  0011AC  EC5E  F050         	call	_bootloader_get_rec_address	;wreg free
 30132  0011B0  C001  F00E         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 30133  0011B4  C002  F00F         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 30134  0011B8  6A10               	clrf	__display_itoa_u32@value+2,c
 30135  0011BA  6A11               	clrf	__display_itoa_u32@value+3,c
 30136  0011BC  0E4A               	movlw	low (_display_content+74)
 30137  0011BE  6E12               	movwf	__display_itoa_u32@text,c
 30138  0011C0  0E02               	movlw	high (_display_content+74)
 30139  0011C2  6E13               	movwf	__display_itoa_u32@text+1,c
 30140  0011C4  EC89  F022         	call	__display_itoa_u32	;wreg free
 30141                           
 30142                           ;display.c: 487: }
 30143                           
 30144                           ;display.c: 485: break;
 30145  0011C8  D011               	goto	l1667
 30146  0011CA                     l1662:
 30147  0011CA  EC97  F050         	call	_bootloader_get_error	;wreg free
 30148                           
 30149                           ; Switch size 1, requested type "space"
 30150                           ; Number of cases is 5, Range of values is 11 to 15
 30151                           ; switch strategies available:
 30152                           ; Name         Instructions Cycles
 30153                           ; simple_byte           16     9 (average)
 30154                           ;	Chosen strategy is simple_byte
 30155  0011CE  0A0B               	xorlw	11	; case 11
 30156  0011D0  B4D8               	btfsc	status,2,c
 30157  0011D2  D7DC               	goto	l1681
 30158  0011D4  0A07               	xorlw	7	; case 12
 30159  0011D6  B4D8               	btfsc	status,2,c
 30160  0011D8  D7B1               	goto	l1677
 30161  0011DA  0A01               	xorlw	1	; case 13
 30162  0011DC  B4D8               	btfsc	status,2,c
 30163  0011DE  D786               	goto	l1673
 30164  0011E0  0A03               	xorlw	3	; case 14
 30165  0011E2  B4D8               	btfsc	status,2,c
 30166  0011E4  D75B               	goto	l1669
 30167  0011E6  0A01               	xorlw	1	; case 15
 30168  0011E8  B4D8               	btfsc	status,2,c
 30169  0011EA  D730               	goto	l1664
 30170  0011EC                     l1667:
 30171                           
 30172                           ;display.c: 489: cntr = 0;
 30173  0011EC  0E00               	movlw	0
 30174  0011EE  6E1D               	movwf	__display_failed@cntr,c
 30175                           
 30176                           ;display.c: 490: while(failed_line4[cntr])
 30177  0011F0  D017               	goto	l1684
 30178  0011F2                     
 30179                           ;display.c: 491: display_content[3][cntr] = failed_line4[cntr++];
 30180  0011F2  501D               	movf	__display_failed@cntr,w,c
 30181  0011F4  0D01               	mullw	1
 30182  0011F6  0E69               	movlw	low _failed_line4
 30183  0011F8  24F3               	addwf	prodl,w,c
 30184  0011FA  6EF6               	movwf	tblptrl,c
 30185  0011FC  0EBE               	movlw	high _failed_line4
 30186  0011FE  20F4               	addwfc	prodh,w,c
 30187  001200  6EF7               	movwf	tblptrh,c
 30188  001202                     	if	1	;There are 3 active tblptr bytes
 30189  001202  6AF8               	clrf	tblptru,c
 30190  001204  0E00               	movlw	low (__mediumconst shr (0+16))
 30191  001206  22F8               	addwfc	tblptru,f,c
 30192  001208                     	endif
 30193  001208  501D               	movf	__display_failed@cntr,w,c
 30194  00120A  0D01               	mullw	1
 30195  00120C  0E3C               	movlw	low (_display_content+60)
 30196  00120E  24F3               	addwf	prodl,w,c
 30197  001210  6ED9               	movwf	fsr2l,c
 30198  001212  0E02               	movlw	high (_display_content+60)
 30199  001214  20F4               	addwfc	prodh,w,c
 30200  001216  6EDA               	movwf	fsr2h,c
 30201  001218  0008               	tblrd		*
 30202  00121A  CFF5 FFDF          	movff	tablat,indf2
 30203  00121E  2A1D               	incf	__display_failed@cntr,f,c
 30204  001220                     l1684:
 30205  001220  501D               	movf	__display_failed@cntr,w,c
 30206  001222  0D01               	mullw	1
 30207  001224  0E69               	movlw	low _failed_line4
 30208  001226  24F3               	addwf	prodl,w,c
 30209  001228  6EF6               	movwf	tblptrl,c
 30210  00122A  0EBE               	movlw	high _failed_line4
 30211  00122C  20F4               	addwfc	prodh,w,c
 30212  00122E  6EF7               	movwf	tblptrh,c
 30213  001230                     	if	1	;There are 3 active tblptr bytes
 30214  001230  6AF8               	clrf	tblptru,c
 30215  001232  0E00               	movlw	low (__mediumconst shr (0+16))
 30216  001234  22F8               	addwfc	tblptru,f,c
 30217  001236                     	endif
 30218  001236  0008               	tblrd		*
 30219  001238  50F5               	movf	tablat,w,c
 30220  00123A  0900               	iorlw	0
 30221  00123C  A4D8               	btfss	status,2,c
 30222  00123E  D7D9               	goto	l1685
 30223                           
 30224                           ;display.c: 492: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 30225  001240  EC63  F050         	call	_bootloader_get_entries	;wreg free
 30226  001244  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 30227  001248  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 30228  00124C  501D               	movf	__display_failed@cntr,w,c
 30229  00124E  0D01               	mullw	1
 30230  001250  0E3C               	movlw	low (_display_content+60)
 30231  001252  24F3               	addwf	prodl,w,c
 30232  001254  6E1B               	movwf	__display_itoa_u16@text,c
 30233  001256  0E02               	movlw	high (_display_content+60)
 30234  001258  20F4               	addwfc	prodh,w,c
 30235  00125A  6E1C               	movwf	__display_itoa_u16@text+1,c
 30236  00125C  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 30237  001260  0012               	return		;funcret
 30238  001262                     __end_of__display_failed:
 30239                           	opt stack 0
 30240                           tosu	equ	0xFFF
 30241                           tosh	equ	0xFFE
 30242                           tosl	equ	0xFFD
 30243                           pclath	equ	0xFFA
 30244                           tblptru	equ	0xFF8
 30245                           tblptrh	equ	0xFF7
 30246                           tblptrl	equ	0xFF6
 30247                           tablat	equ	0xFF5
 30248                           prodh	equ	0xFF4
 30249                           prodl	equ	0xFF3
 30250                           intcon	equ	0xFF2
 30251                           intcon2	equ	0xFF1
 30252                           intcon3	equ	0xFF0
 30253                           indf0	equ	0xFEF
 30254                           postinc0	equ	0xFEE
 30255                           fsr0h	equ	0xFEA
 30256                           fsr0l	equ	0xFE9
 30257                           wreg	equ	0xFE8
 30258                           indf1	equ	0xFE7
 30259                           postdec1	equ	0xFE5
 30260                           plusw1	equ	0xFE3
 30261                           fsr1h	equ	0xFE2
 30262                           fsr1l	equ	0xFE1
 30263                           indf2	equ	0xFDF
 30264                           postinc2	equ	0xFDE
 30265                           postdec2	equ	0xFDD
 30266                           plusw2	equ	0xFDB
 30267                           fsr2h	equ	0xFDA
 30268                           fsr2l	equ	0xFD9
 30269                           status	equ	0xFD8
 30270                           
 30271 ;; *************** function _bootloader_get_rec_address *****************
 30272 ;; Defined at:
 30273 ;;		line 488 in file "bootloader.c"
 30274 ;; Parameters:    Size  Location     Type
 30275 ;;		None
 30276 ;; Auto vars:     Size  Location     Type
 30277 ;;		None
 30278 ;; Return value:  Size  Location     Type
 30279 ;;                  2    0[COMRAM] unsigned int 
 30280 ;; Registers used:
 30281 ;;		None
 30282 ;; Tracked objects:
 30283 ;;		On entry : 0/0
 30284 ;;		On exit  : 0/0
 30285 ;;		Unchanged: 0/0
 30286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30291 ;;Total ram usage:        2 bytes
 30292 ;; Hardware stack levels used:    1
 30293 ;; This function calls:
 30294 ;;		Nothing
 30295 ;; This function is called by:
 30296 ;;		__display_failed
 30297 ;;		__fill_buffer_get_bootloader_details
 30298 ;; This function uses a non-reentrant model
 30299 ;;
 30300                           
 30301                           	psect	text142
 30302  00A0BC                     __ptext142:
 30303                           	opt stack 0
 30304  00A0BC                     _bootloader_get_rec_address:
 30305                           	opt stack 25
 30306                           
 30307                           ;bootloader.c: 491: return hex_file_entry.address;
 30308                           
 30309                           ;incstack = 0
 30310  00A0BC  C18F  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30311  00A0C0  C190  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30312  00A0C4  0012               	return		;funcret
 30313  00A0C6                     __end_of_bootloader_get_rec_address:
 30314                           	opt stack 0
 30315                           tosu	equ	0xFFF
 30316                           tosh	equ	0xFFE
 30317                           tosl	equ	0xFFD
 30318                           pclath	equ	0xFFA
 30319                           tblptru	equ	0xFF8
 30320                           tblptrh	equ	0xFF7
 30321                           tblptrl	equ	0xFF6
 30322                           tablat	equ	0xFF5
 30323                           prodh	equ	0xFF4
 30324                           prodl	equ	0xFF3
 30325                           intcon	equ	0xFF2
 30326                           intcon2	equ	0xFF1
 30327                           intcon3	equ	0xFF0
 30328                           indf0	equ	0xFEF
 30329                           postinc0	equ	0xFEE
 30330                           fsr0h	equ	0xFEA
 30331                           fsr0l	equ	0xFE9
 30332                           wreg	equ	0xFE8
 30333                           indf1	equ	0xFE7
 30334                           postdec1	equ	0xFE5
 30335                           plusw1	equ	0xFE3
 30336                           fsr1h	equ	0xFE2
 30337                           fsr1l	equ	0xFE1
 30338                           indf2	equ	0xFDF
 30339                           postinc2	equ	0xFDE
 30340                           postdec2	equ	0xFDD
 30341                           plusw2	equ	0xFDB
 30342                           fsr2h	equ	0xFDA
 30343                           fsr2l	equ	0xFD9
 30344                           status	equ	0xFD8
 30345                           
 30346 ;; *************** function _bootloader_get_error *****************
 30347 ;; Defined at:
 30348 ;;		line 478 in file "bootloader.c"
 30349 ;; Parameters:    Size  Location     Type
 30350 ;;		None
 30351 ;; Auto vars:     Size  Location     Type
 30352 ;;		None
 30353 ;; Return value:  Size  Location     Type
 30354 ;;                  1    wreg      enum E7018
 30355 ;; Registers used:
 30356 ;;		wreg, status,2
 30357 ;; Tracked objects:
 30358 ;;		On entry : 0/0
 30359 ;;		On exit  : 0/0
 30360 ;;		Unchanged: 0/0
 30361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30366 ;;Total ram usage:        0 bytes
 30367 ;; Hardware stack levels used:    1
 30368 ;; This function calls:
 30369 ;;		Nothing
 30370 ;; This function is called by:
 30371 ;;		__display_failed
 30372 ;;		__fill_buffer_get_bootloader_details
 30373 ;; This function uses a non-reentrant model
 30374 ;;
 30375                           
 30376                           	psect	text143
 30377  00A12E                     __ptext143:
 30378                           	opt stack 0
 30379  00A12E                     _bootloader_get_error:
 30380                           	opt stack 25
 30381                           
 30382                           ;bootloader.c: 480: return last_error;
 30383                           
 30384                           ;incstack = 0
 30385  00A12E  0101               	movlb	1	; () banked
 30386  00A130  5185               	movf	_last_error& (0+255),w,b
 30387  00A132  0012               	return	
 30388  00A134                     __end_of_bootloader_get_error:
 30389                           	opt stack 0
 30390                           tosu	equ	0xFFF
 30391                           tosh	equ	0xFFE
 30392                           tosl	equ	0xFFD
 30393                           pclath	equ	0xFFA
 30394                           tblptru	equ	0xFF8
 30395                           tblptrh	equ	0xFF7
 30396                           tblptrl	equ	0xFF6
 30397                           tablat	equ	0xFF5
 30398                           prodh	equ	0xFF4
 30399                           prodl	equ	0xFF3
 30400                           intcon	equ	0xFF2
 30401                           intcon2	equ	0xFF1
 30402                           intcon3	equ	0xFF0
 30403                           indf0	equ	0xFEF
 30404                           postinc0	equ	0xFEE
 30405                           fsr0h	equ	0xFEA
 30406                           fsr0l	equ	0xFE9
 30407                           wreg	equ	0xFE8
 30408                           indf1	equ	0xFE7
 30409                           postdec1	equ	0xFE5
 30410                           plusw1	equ	0xFE3
 30411                           fsr1h	equ	0xFE2
 30412                           fsr1l	equ	0xFE1
 30413                           indf2	equ	0xFDF
 30414                           postinc2	equ	0xFDE
 30415                           postdec2	equ	0xFDD
 30416                           plusw2	equ	0xFDB
 30417                           fsr2h	equ	0xFDA
 30418                           fsr2l	equ	0xFD9
 30419                           status	equ	0xFD8
 30420                           
 30421 ;; *************** function _bootloader_get_entries *****************
 30422 ;; Defined at:
 30423 ;;		line 468 in file "bootloader.c"
 30424 ;; Parameters:    Size  Location     Type
 30425 ;;		None
 30426 ;; Auto vars:     Size  Location     Type
 30427 ;;		None
 30428 ;; Return value:  Size  Location     Type
 30429 ;;                  2    0[COMRAM] unsigned int 
 30430 ;; Registers used:
 30431 ;;		None
 30432 ;; Tracked objects:
 30433 ;;		On entry : 0/0
 30434 ;;		On exit  : 0/0
 30435 ;;		Unchanged: 0/0
 30436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30441 ;;Total ram usage:        2 bytes
 30442 ;; Hardware stack levels used:    1
 30443 ;; This function calls:
 30444 ;;		Nothing
 30445 ;; This function is called by:
 30446 ;;		__display_verify
 30447 ;;		__display_failed
 30448 ;;		__display_programming
 30449 ;;		__fill_buffer_get_bootloader_details
 30450 ;; This function uses a non-reentrant model
 30451 ;;
 30452                           
 30453                           	psect	text144
 30454  00A0C6                     __ptext144:
 30455                           	opt stack 0
 30456  00A0C6                     _bootloader_get_entries:
 30457                           	opt stack 25
 30458                           
 30459                           ;bootloader.c: 470: return hex_file_entries;
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;incstack = 0
 30463  00A0C6  C171  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30464  00A0CA  C172  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30465  00A0CE  0012               	return		;funcret
 30466  00A0D0                     __end_of_bootloader_get_entries:
 30467                           	opt stack 0
 30468                           tosu	equ	0xFFF
 30469                           tosh	equ	0xFFE
 30470                           tosl	equ	0xFFD
 30471                           pclath	equ	0xFFA
 30472                           tblptru	equ	0xFF8
 30473                           tblptrh	equ	0xFF7
 30474                           tblptrl	equ	0xFF6
 30475                           tablat	equ	0xFF5
 30476                           prodh	equ	0xFF4
 30477                           prodl	equ	0xFF3
 30478                           intcon	equ	0xFF2
 30479                           intcon2	equ	0xFF1
 30480                           intcon3	equ	0xFF0
 30481                           indf0	equ	0xFEF
 30482                           postinc0	equ	0xFEE
 30483                           fsr0h	equ	0xFEA
 30484                           fsr0l	equ	0xFE9
 30485                           wreg	equ	0xFE8
 30486                           indf1	equ	0xFE7
 30487                           postdec1	equ	0xFE5
 30488                           plusw1	equ	0xFE3
 30489                           fsr1h	equ	0xFE2
 30490                           fsr1l	equ	0xFE1
 30491                           indf2	equ	0xFDF
 30492                           postinc2	equ	0xFDE
 30493                           postdec2	equ	0xFDD
 30494                           plusw2	equ	0xFDB
 30495                           fsr2h	equ	0xFDA
 30496                           fsr2l	equ	0xFD9
 30497                           status	equ	0xFD8
 30498                           
 30499 ;; *************** function __display_itoa_u32 *****************
 30500 ;; Defined at:
 30501 ;;		line 178 in file "display.c"
 30502 ;; Parameters:    Size  Location     Type
 30503 ;;  value           4   13[COMRAM] unsigned long 
 30504 ;;  text            2   17[COMRAM] PTR unsigned char 
 30505 ;;		 -> display_content(80), 
 30506 ;; Auto vars:     Size  Location     Type
 30507 ;;  number_of_di    1   20[COMRAM] unsigned char 
 30508 ;;  cntr            1   19[COMRAM] char 
 30509 ;; Return value:  Size  Location     Type
 30510 ;;                  1    wreg      unsigned char 
 30511 ;; Registers used:
 30512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30513 ;; Tracked objects:
 30514 ;;		On entry : 0/0
 30515 ;;		On exit  : 0/0
 30516 ;;		Unchanged: 0/0
 30517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30518 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30521 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30522 ;;Total ram usage:        8 bytes
 30523 ;; Hardware stack levels used:    1
 30524 ;; Hardware stack levels required when called:    1
 30525 ;; This function calls:
 30526 ;;		___lldiv
 30527 ;;		___llmod
 30528 ;;		___wmul
 30529 ;; This function is called by:
 30530 ;;		__display_found
 30531 ;;		__display_failed
 30532 ;; This function uses a non-reentrant model
 30533 ;;
 30534                           
 30535                           	psect	text145
 30536  004512                     __ptext145:
 30537                           	opt stack 0
 30538  004512                     __display_itoa_u32:
 30539                           	opt stack 24
 30540                           
 30541                           ;display.c: 180: uint8_t number_of_digits;;display.c: 181: int8_t cntr;;display.c: 184: 
      +                          if(value<10) {number_of_digits = 1;}
 30542                           
 30543                           ;incstack = 0
 30544  004512  5011               	movf	__display_itoa_u32@value+3,w,c
 30545  004514  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30546  004516  100F               	iorwf	__display_itoa_u32@value+1,w,c
 30547  004518  E106               	bnz	l11787
 30548  00451A  0E0A               	movlw	10
 30549  00451C  5C0E               	subwf	__display_itoa_u32@value,w,c
 30550  00451E  B0D8               	btfsc	status,0,c
 30551  004520  D002               	goto	l1515
 30552  004522  0E01               	movlw	1
 30553  004524  D059               	goto	L41
 30554  004526                     l1515:
 30555  004526                     l11787:
 30556                           
 30557                           ;display.c: 185: else if(value<100) {number_of_digits = 2;}
 30558  004526  5011               	movf	__display_itoa_u32@value+3,w,c
 30559  004528  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30560  00452A  100F               	iorwf	__display_itoa_u32@value+1,w,c
 30561  00452C  E106               	bnz	l11791
 30562  00452E  0E64               	movlw	100
 30563  004530  5C0E               	subwf	__display_itoa_u32@value,w,c
 30564  004532  B0D8               	btfsc	status,0,c
 30565  004534  D002               	goto	l1517
 30566  004536  0E02               	movlw	2
 30567  004538  D04F               	goto	L41
 30568  00453A                     l1517:
 30569  00453A                     l11791:
 30570                           
 30571                           ;display.c: 186: else if(value<1000) {number_of_digits = 3;}
 30572  00453A  5011               	movf	__display_itoa_u32@value+3,w,c
 30573  00453C  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30574  00453E  E108               	bnz	l11795
 30575  004540  0EE8               	movlw	232
 30576  004542  5C0E               	subwf	__display_itoa_u32@value,w,c
 30577  004544  0E03               	movlw	3
 30578  004546  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30579  004548  B0D8               	btfsc	status,0,c
 30580  00454A  D002               	goto	l1519
 30581  00454C  0E03               	movlw	3
 30582  00454E  D044               	goto	L41
 30583  004550                     l1519:
 30584  004550                     l11795:
 30585                           
 30586                           ;display.c: 187: else if(value<10000) {number_of_digits = 4;}
 30587  004550  5011               	movf	__display_itoa_u32@value+3,w,c
 30588  004552  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30589  004554  E108               	bnz	l11799
 30590  004556  0E10               	movlw	16
 30591  004558  5C0E               	subwf	__display_itoa_u32@value,w,c
 30592  00455A  0E27               	movlw	39
 30593  00455C  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30594  00455E  B0D8               	btfsc	status,0,c
 30595  004560  D002               	goto	l1521
 30596  004562  0E04               	movlw	4
 30597  004564  D039               	goto	L41
 30598  004566                     l1521:
 30599  004566                     l11799:
 30600                           
 30601                           ;display.c: 188: else if(value<100000) {number_of_digits = 5;}
 30602  004566  5011               	movf	__display_itoa_u32@value+3,w,c
 30603  004568  E10A               	bnz	l11803
 30604  00456A  0EA0               	movlw	160
 30605  00456C  5C0E               	subwf	__display_itoa_u32@value,w,c
 30606  00456E  0E86               	movlw	134
 30607  004570  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30608  004572  0E01               	movlw	1
 30609  004574  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30610  004576  B0D8               	btfsc	status,0,c
 30611  004578  D002               	goto	l1523
 30612  00457A  0E05               	movlw	5
 30613  00457C  D02D               	goto	L41
 30614  00457E                     l1523:
 30615  00457E                     l11803:
 30616                           
 30617                           ;display.c: 189: else if(value<1000000) {number_of_digits = 6;}
 30618  00457E  5011               	movf	__display_itoa_u32@value+3,w,c
 30619  004580  E10A               	bnz	l11807
 30620  004582  0E40               	movlw	64
 30621  004584  5C0E               	subwf	__display_itoa_u32@value,w,c
 30622  004586  0E42               	movlw	66
 30623  004588  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30624  00458A  0E0F               	movlw	15
 30625  00458C  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30626  00458E  B0D8               	btfsc	status,0,c
 30627  004590  D002               	goto	l1525
 30628  004592  0E06               	movlw	6
 30629  004594  D021               	goto	L41
 30630  004596                     l1525:
 30631  004596                     l11807:
 30632                           
 30633                           ;display.c: 190: else if(value<10000000) {number_of_digits = 7;}
 30634  004596  5011               	movf	__display_itoa_u32@value+3,w,c
 30635  004598  E10A               	bnz	l11811
 30636  00459A  0E80               	movlw	128
 30637  00459C  5C0E               	subwf	__display_itoa_u32@value,w,c
 30638  00459E  0E96               	movlw	150
 30639  0045A0  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30640  0045A2  0E98               	movlw	152
 30641  0045A4  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30642  0045A6  B0D8               	btfsc	status,0,c
 30643  0045A8  D002               	goto	l1527
 30644  0045AA  0E07               	movlw	7
 30645  0045AC  D015               	goto	L41
 30646  0045AE                     l1527:
 30647  0045AE                     l11811:
 30648                           
 30649                           ;display.c: 191: else if(value<100000000) {number_of_digits = 8;}
 30650  0045AE  0EE1               	movlw	225
 30651  0045B0  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 30652  0045B2  0EF5               	movlw	245
 30653  0045B4  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30654  0045B6  0E05               	movlw	5
 30655  0045B8  5811               	subwfb	__display_itoa_u32@value+3,w,c
 30656  0045BA  B0D8               	btfsc	status,0,c
 30657  0045BC  D002               	goto	l1529
 30658  0045BE  0E08               	movlw	8
 30659  0045C0  D00B               	goto	L41
 30660  0045C2                     l1529:
 30661                           
 30662                           ;display.c: 192: else if(value<1000000000) {number_of_digits = 9;}
 30663  0045C2  0ECA               	movlw	202
 30664  0045C4  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 30665  0045C6  0E9A               	movlw	154
 30666  0045C8  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30667  0045CA  0E3B               	movlw	59
 30668  0045CC  5811               	subwfb	__display_itoa_u32@value+3,w,c
 30669  0045CE  B0D8               	btfsc	status,0,c
 30670  0045D0  D002               	goto	l1531
 30671  0045D2  0E09               	movlw	9
 30672  0045D4  D001               	goto	L41
 30673  0045D6                     l1531:
 30674                           
 30675                           ;display.c: 193: else {number_of_digits = 10;}
 30676  0045D6  0E0A               	movlw	10
 30677  0045D8                     L41:
 30678  0045D8  6E15               	movwf	__display_itoa_u32@number_of_digits,c
 30679                           
 30680                           ;display.c: 195: for(cntr=number_of_digits-1; cntr>=0; --cntr)
 30681  0045DA  0415               	decf	__display_itoa_u32@number_of_digits,w,c
 30682  0045DC  6E14               	movwf	__display_itoa_u32@cntr,c
 30683  0045DE                     l11823:
 30684  0045DE  BE14               	btfsc	__display_itoa_u32@cntr,7,c
 30685  0045E0  D042               	goto	u8910
 30686                           
 30687                           ;display.c: 196: {;display.c: 197: text[cntr] = (value%10) + 0x30;
 30688  0045E2  5014               	movf	__display_itoa_u32@cntr,w,c
 30689  0045E4  6E01               	movwf	___wmul@multiplier,c
 30690  0045E6  6A02               	clrf	___wmul@multiplier+1,c
 30691  0045E8  BE01               	btfsc	___wmul@multiplier,7,c
 30692  0045EA  0602               	decf	___wmul@multiplier+1,f,c
 30693  0045EC  0E00               	movlw	0
 30694  0045EE  6E04               	movwf	___wmul@multiplicand+1,c
 30695  0045F0  0E01               	movlw	1
 30696  0045F2  6E03               	movwf	___wmul@multiplicand,c
 30697  0045F4  EC52  F04E         	call	___wmul	;wreg free
 30698  0045F8  5001               	movf	?___wmul,w,c
 30699  0045FA  2412               	addwf	__display_itoa_u32@text,w,c
 30700  0045FC  6ED9               	movwf	fsr2l,c
 30701  0045FE  5002               	movf	?___wmul+1,w,c
 30702  004600  2013               	addwfc	__display_itoa_u32@text+1,w,c
 30703  004602  6EDA               	movwf	fsr2h,c
 30704  004604  C00E  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30705  004608  C00F  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30706  00460C  C010  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30707  004610  C011  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30708  004614  0E0A               	movlw	10
 30709  004616  6E05               	movwf	___llmod@divisor,c
 30710  004618  0E00               	movlw	0
 30711  00461A  6E06               	movwf	___llmod@divisor+1,c
 30712  00461C  0E00               	movlw	0
 30713  00461E  6E07               	movwf	___llmod@divisor+2,c
 30714  004620  0E00               	movlw	0
 30715  004622  6E08               	movwf	___llmod@divisor+3,c
 30716  004624  ECAE  F045         	call	___llmod	;wreg free
 30717  004628  5001               	movf	?___llmod,w,c
 30718  00462A  0F30               	addlw	48
 30719  00462C  6EDF               	movwf	indf2,c
 30720                           
 30721                           ;display.c: 198: value /= 10;
 30722  00462E  C00E  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30723  004632  C00F  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30724  004636  C010  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30725  00463A  C011  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30726  00463E  0E0A               	movlw	10
 30727  004640  6E05               	movwf	___lldiv@divisor,c
 30728  004642  0E00               	movlw	0
 30729  004644  6E06               	movwf	___lldiv@divisor+1,c
 30730  004646  0E00               	movlw	0
 30731  004648  6E07               	movwf	___lldiv@divisor+2,c
 30732  00464A  0E00               	movlw	0
 30733  00464C  6E08               	movwf	___lldiv@divisor+3,c
 30734  00464E  EC8F  F042         	call	___lldiv	;wreg free
 30735  004652  C001  F00E         	movff	?___lldiv,__display_itoa_u32@value
 30736  004656  C002  F00F         	movff	?___lldiv+1,__display_itoa_u32@value+1
 30737  00465A  C003  F010         	movff	?___lldiv+2,__display_itoa_u32@value+2
 30738  00465E  C004  F011         	movff	?___lldiv+3,__display_itoa_u32@value+3
 30739  004662  0614               	decf	__display_itoa_u32@cntr,f,c
 30740  004664  D7BC               	goto	l11823
 30741  004666                     u8910:
 30742                           
 30743                           ;display.c: 199: };display.c: 201: return number_of_digits;
 30744  004666  5015               	movf	__display_itoa_u32@number_of_digits,w,c
 30745  004668  0012               	return	
 30746  00466A                     __end_of__display_itoa_u32:
 30747                           	opt stack 0
 30748                           tosu	equ	0xFFF
 30749                           tosh	equ	0xFFE
 30750                           tosl	equ	0xFFD
 30751                           pclath	equ	0xFFA
 30752                           tblptru	equ	0xFF8
 30753                           tblptrh	equ	0xFF7
 30754                           tblptrl	equ	0xFF6
 30755                           tablat	equ	0xFF5
 30756                           prodh	equ	0xFF4
 30757                           prodl	equ	0xFF3
 30758                           intcon	equ	0xFF2
 30759                           intcon2	equ	0xFF1
 30760                           intcon3	equ	0xFF0
 30761                           indf0	equ	0xFEF
 30762                           postinc0	equ	0xFEE
 30763                           fsr0h	equ	0xFEA
 30764                           fsr0l	equ	0xFE9
 30765                           wreg	equ	0xFE8
 30766                           indf1	equ	0xFE7
 30767                           postdec1	equ	0xFE5
 30768                           plusw1	equ	0xFE3
 30769                           fsr1h	equ	0xFE2
 30770                           fsr1l	equ	0xFE1
 30771                           indf2	equ	0xFDF
 30772                           postinc2	equ	0xFDE
 30773                           postdec2	equ	0xFDD
 30774                           plusw2	equ	0xFDB
 30775                           fsr2h	equ	0xFDA
 30776                           fsr2l	equ	0xFD9
 30777                           status	equ	0xFD8
 30778                           
 30779 ;; *************** function ___wmul *****************
 30780 ;; Defined at:
 30781 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 30782 ;; Parameters:    Size  Location     Type
 30783 ;;  multiplier      2    0[COMRAM] unsigned int 
 30784 ;;  multiplicand    2    2[COMRAM] unsigned int 
 30785 ;; Auto vars:     Size  Location     Type
 30786 ;;  product         2    4[COMRAM] unsigned int 
 30787 ;; Return value:  Size  Location     Type
 30788 ;;                  2    0[COMRAM] unsigned int 
 30789 ;; Registers used:
 30790 ;;		wreg, status,2, status,0, prodl, prodh
 30791 ;; Tracked objects:
 30792 ;;		On entry : 0/0
 30793 ;;		On exit  : 0/0
 30794 ;;		Unchanged: 0/0
 30795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30800 ;;Total ram usage:        6 bytes
 30801 ;; Hardware stack levels used:    1
 30802 ;; This function calls:
 30803 ;;		Nothing
 30804 ;; This function is called by:
 30805 ;;		__display_itoa_u32
 30806 ;; This function uses a non-reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text146
 30810  009CA4                     __ptext146:
 30811                           	opt stack 0
 30812  009CA4                     ___wmul:
 30813                           	opt stack 24
 30814                           
 30815                           ;incstack = 0
 30816  009CA4  5001               	movf	___wmul@multiplier,w,c
 30817  009CA6  0203               	mulwf	___wmul@multiplicand,c
 30818  009CA8  CFF3 F005          	movff	prodl,___wmul@product
 30819  009CAC  CFF4 F006          	movff	prodh,___wmul@product+1
 30820  009CB0  5001               	movf	___wmul@multiplier,w,c
 30821  009CB2  0204               	mulwf	___wmul@multiplicand+1,c
 30822  009CB4  50F3               	movf	prodl,w,c
 30823  009CB6  2606               	addwf	___wmul@product+1,f,c
 30824  009CB8  5002               	movf	___wmul@multiplier+1,w,c
 30825  009CBA  0203               	mulwf	___wmul@multiplicand,c
 30826  009CBC  50F3               	movf	prodl,w,c
 30827  009CBE  2606               	addwf	___wmul@product+1,f,c
 30828  009CC0  C005  F001         	movff	___wmul@product,?___wmul
 30829  009CC4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 30830  009CC8  0012               	return	
 30831  009CCA                     __end_of___wmul:
 30832                           	opt stack 0
 30833                           tosu	equ	0xFFF
 30834                           tosh	equ	0xFFE
 30835                           tosl	equ	0xFFD
 30836                           pclath	equ	0xFFA
 30837                           tblptru	equ	0xFF8
 30838                           tblptrh	equ	0xFF7
 30839                           tblptrl	equ	0xFF6
 30840                           tablat	equ	0xFF5
 30841                           prodh	equ	0xFF4
 30842                           prodl	equ	0xFF3
 30843                           intcon	equ	0xFF2
 30844                           intcon2	equ	0xFF1
 30845                           intcon3	equ	0xFF0
 30846                           indf0	equ	0xFEF
 30847                           postinc0	equ	0xFEE
 30848                           fsr0h	equ	0xFEA
 30849                           fsr0l	equ	0xFE9
 30850                           wreg	equ	0xFE8
 30851                           indf1	equ	0xFE7
 30852                           postdec1	equ	0xFE5
 30853                           plusw1	equ	0xFE3
 30854                           fsr1h	equ	0xFE2
 30855                           fsr1l	equ	0xFE1
 30856                           indf2	equ	0xFDF
 30857                           postinc2	equ	0xFDE
 30858                           postdec2	equ	0xFDD
 30859                           plusw2	equ	0xFDB
 30860                           fsr2h	equ	0xFDA
 30861                           fsr2l	equ	0xFD9
 30862                           status	equ	0xFD8
 30863                           
 30864 ;; *************** function ___llmod *****************
 30865 ;; Defined at:
 30866 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30867 ;; Parameters:    Size  Location     Type
 30868 ;;  dividend        4    0[COMRAM] unsigned long 
 30869 ;;  divisor         4    4[COMRAM] unsigned long 
 30870 ;; Auto vars:     Size  Location     Type
 30871 ;;  counter         1    8[COMRAM] unsigned char 
 30872 ;; Return value:  Size  Location     Type
 30873 ;;                  4    0[COMRAM] unsigned long 
 30874 ;; Registers used:
 30875 ;;		wreg, status,2, status,0
 30876 ;; Tracked objects:
 30877 ;;		On entry : 0/0
 30878 ;;		On exit  : 0/0
 30879 ;;		Unchanged: 0/0
 30880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30881 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30884 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30885 ;;Total ram usage:        9 bytes
 30886 ;; Hardware stack levels used:    1
 30887 ;; This function calls:
 30888 ;;		Nothing
 30889 ;; This function is called by:
 30890 ;;		__display_itoa_u32
 30891 ;; This function uses a non-reentrant model
 30892 ;;
 30893                           
 30894                           	psect	text147
 30895  008B5C                     __ptext147:
 30896                           	opt stack 0
 30897  008B5C                     ___llmod:
 30898                           	opt stack 24
 30899                           
 30900                           ;incstack = 0
 30901  008B5C  5005               	movf	___llmod@divisor,w,c
 30902  008B5E  1006               	iorwf	___llmod@divisor+1,w,c
 30903  008B60  1007               	iorwf	___llmod@divisor+2,w,c
 30904  008B62  1008               	iorwf	___llmod@divisor+3,w,c
 30905  008B64  B4D8               	btfsc	status,2,c
 30906  008B66  D024               	goto	l3545
 30907  008B68  0E01               	movlw	1
 30908  008B6A  6E09               	movwf	___llmod@counter,c
 30909  008B6C  D006               	goto	l3540
 30910  008B6E  90D8               	bcf	status,0,c
 30911  008B70  3605               	rlcf	___llmod@divisor,f,c
 30912  008B72  3606               	rlcf	___llmod@divisor+1,f,c
 30913  008B74  3607               	rlcf	___llmod@divisor+2,f,c
 30914  008B76  3608               	rlcf	___llmod@divisor+3,f,c
 30915  008B78  2A09               	incf	___llmod@counter,f,c
 30916  008B7A                     l3540:
 30917  008B7A  AE08               	btfss	___llmod@divisor+3,7,c
 30918  008B7C  D7F8               	goto	l3541
 30919  008B7E                     u8380:
 30920  008B7E  5005               	movf	___llmod@divisor,w,c
 30921  008B80  5C01               	subwf	___llmod@dividend,w,c
 30922  008B82  5006               	movf	___llmod@divisor+1,w,c
 30923  008B84  5802               	subwfb	___llmod@dividend+1,w,c
 30924  008B86  5007               	movf	___llmod@divisor+2,w,c
 30925  008B88  5803               	subwfb	___llmod@dividend+2,w,c
 30926  008B8A  5008               	movf	___llmod@divisor+3,w,c
 30927  008B8C  5804               	subwfb	___llmod@dividend+3,w,c
 30928  008B8E  A0D8               	btfss	status,0,c
 30929  008B90  D008               	goto	l3544
 30930  008B92  5005               	movf	___llmod@divisor,w,c
 30931  008B94  5E01               	subwf	___llmod@dividend,f,c
 30932  008B96  5006               	movf	___llmod@divisor+1,w,c
 30933  008B98  5A02               	subwfb	___llmod@dividend+1,f,c
 30934  008B9A  5007               	movf	___llmod@divisor+2,w,c
 30935  008B9C  5A03               	subwfb	___llmod@dividend+2,f,c
 30936  008B9E  5008               	movf	___llmod@divisor+3,w,c
 30937  008BA0  5A04               	subwfb	___llmod@dividend+3,f,c
 30938  008BA2                     l3544:
 30939  008BA2  90D8               	bcf	status,0,c
 30940  008BA4  3208               	rrcf	___llmod@divisor+3,f,c
 30941  008BA6  3207               	rrcf	___llmod@divisor+2,f,c
 30942  008BA8  3206               	rrcf	___llmod@divisor+1,f,c
 30943  008BAA  3205               	rrcf	___llmod@divisor,f,c
 30944  008BAC  2E09               	decfsz	___llmod@counter,f,c
 30945  008BAE  D7E7               	goto	u8380
 30946  008BB0                     l3545:
 30947  008BB0  C001  F001         	movff	___llmod@dividend,?___llmod
 30948  008BB4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 30949  008BB8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 30950  008BBC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 30951  008BC0  0012               	return		;funcret
 30952  008BC2                     __end_of___llmod:
 30953                           	opt stack 0
 30954                           tosu	equ	0xFFF
 30955                           tosh	equ	0xFFE
 30956                           tosl	equ	0xFFD
 30957                           pclath	equ	0xFFA
 30958                           tblptru	equ	0xFF8
 30959                           tblptrh	equ	0xFF7
 30960                           tblptrl	equ	0xFF6
 30961                           tablat	equ	0xFF5
 30962                           prodh	equ	0xFF4
 30963                           prodl	equ	0xFF3
 30964                           intcon	equ	0xFF2
 30965                           intcon2	equ	0xFF1
 30966                           intcon3	equ	0xFF0
 30967                           indf0	equ	0xFEF
 30968                           postinc0	equ	0xFEE
 30969                           fsr0h	equ	0xFEA
 30970                           fsr0l	equ	0xFE9
 30971                           wreg	equ	0xFE8
 30972                           indf1	equ	0xFE7
 30973                           postdec1	equ	0xFE5
 30974                           plusw1	equ	0xFE3
 30975                           fsr1h	equ	0xFE2
 30976                           fsr1l	equ	0xFE1
 30977                           indf2	equ	0xFDF
 30978                           postinc2	equ	0xFDE
 30979                           postdec2	equ	0xFDD
 30980                           plusw2	equ	0xFDB
 30981                           fsr2h	equ	0xFDA
 30982                           fsr2l	equ	0xFD9
 30983                           status	equ	0xFD8
 30984                           
 30985 ;; *************** function ___lldiv *****************
 30986 ;; Defined at:
 30987 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 30988 ;; Parameters:    Size  Location     Type
 30989 ;;  dividend        4    0[COMRAM] unsigned long 
 30990 ;;  divisor         4    4[COMRAM] unsigned long 
 30991 ;; Auto vars:     Size  Location     Type
 30992 ;;  quotient        4    8[COMRAM] unsigned long 
 30993 ;;  counter         1   12[COMRAM] unsigned char 
 30994 ;; Return value:  Size  Location     Type
 30995 ;;                  4    0[COMRAM] unsigned long 
 30996 ;; Registers used:
 30997 ;;		wreg, status,2, status,0
 30998 ;; Tracked objects:
 30999 ;;		On entry : 0/0
 31000 ;;		On exit  : 0/0
 31001 ;;		Unchanged: 0/0
 31002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31003 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31004 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31006 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31007 ;;Total ram usage:       13 bytes
 31008 ;; Hardware stack levels used:    1
 31009 ;; This function calls:
 31010 ;;		Nothing
 31011 ;; This function is called by:
 31012 ;;		__display_itoa_u32
 31013 ;; This function uses a non-reentrant model
 31014 ;;
 31015                           
 31016                           	psect	text148
 31017  00851E                     __ptext148:
 31018                           	opt stack 0
 31019  00851E                     ___lldiv:
 31020                           	opt stack 24
 31021                           
 31022                           ;incstack = 0
 31023  00851E  0E00               	movlw	0
 31024  008520  6E09               	movwf	___lldiv@quotient,c
 31025  008522  0E00               	movlw	0
 31026  008524  6E0A               	movwf	___lldiv@quotient+1,c
 31027  008526  0E00               	movlw	0
 31028  008528  6E0B               	movwf	___lldiv@quotient+2,c
 31029  00852A  0E00               	movlw	0
 31030  00852C  6E0C               	movwf	___lldiv@quotient+3,c
 31031  00852E  5005               	movf	___lldiv@divisor,w,c
 31032  008530  1006               	iorwf	___lldiv@divisor+1,w,c
 31033  008532  1007               	iorwf	___lldiv@divisor+2,w,c
 31034  008534  1008               	iorwf	___lldiv@divisor+3,w,c
 31035  008536  B4D8               	btfsc	status,2,c
 31036  008538  D02A               	goto	l3164
 31037  00853A  0E01               	movlw	1
 31038  00853C  6E0D               	movwf	___lldiv@counter,c
 31039  00853E  D006               	goto	l3159
 31040  008540  90D8               	bcf	status,0,c
 31041  008542  3605               	rlcf	___lldiv@divisor,f,c
 31042  008544  3606               	rlcf	___lldiv@divisor+1,f,c
 31043  008546  3607               	rlcf	___lldiv@divisor+2,f,c
 31044  008548  3608               	rlcf	___lldiv@divisor+3,f,c
 31045  00854A  2A0D               	incf	___lldiv@counter,f,c
 31046  00854C                     l3159:
 31047  00854C  AE08               	btfss	___lldiv@divisor+3,7,c
 31048  00854E  D7F8               	goto	l3160
 31049  008550                     u8350:
 31050  008550  90D8               	bcf	status,0,c
 31051  008552  3609               	rlcf	___lldiv@quotient,f,c
 31052  008554  360A               	rlcf	___lldiv@quotient+1,f,c
 31053  008556  360B               	rlcf	___lldiv@quotient+2,f,c
 31054  008558  360C               	rlcf	___lldiv@quotient+3,f,c
 31055  00855A  5005               	movf	___lldiv@divisor,w,c
 31056  00855C  5C01               	subwf	___lldiv@dividend,w,c
 31057  00855E  5006               	movf	___lldiv@divisor+1,w,c
 31058  008560  5802               	subwfb	___lldiv@dividend+1,w,c
 31059  008562  5007               	movf	___lldiv@divisor+2,w,c
 31060  008564  5803               	subwfb	___lldiv@dividend+2,w,c
 31061  008566  5008               	movf	___lldiv@divisor+3,w,c
 31062  008568  5804               	subwfb	___lldiv@dividend+3,w,c
 31063  00856A  A0D8               	btfss	status,0,c
 31064  00856C  D009               	goto	l3163
 31065  00856E  5005               	movf	___lldiv@divisor,w,c
 31066  008570  5E01               	subwf	___lldiv@dividend,f,c
 31067  008572  5006               	movf	___lldiv@divisor+1,w,c
 31068  008574  5A02               	subwfb	___lldiv@dividend+1,f,c
 31069  008576  5007               	movf	___lldiv@divisor+2,w,c
 31070  008578  5A03               	subwfb	___lldiv@dividend+2,f,c
 31071  00857A  5008               	movf	___lldiv@divisor+3,w,c
 31072  00857C  5A04               	subwfb	___lldiv@dividend+3,f,c
 31073  00857E  8009               	bsf	___lldiv@quotient,0,c
 31074  008580                     l3163:
 31075  008580  90D8               	bcf	status,0,c
 31076  008582  3208               	rrcf	___lldiv@divisor+3,f,c
 31077  008584  3207               	rrcf	___lldiv@divisor+2,f,c
 31078  008586  3206               	rrcf	___lldiv@divisor+1,f,c
 31079  008588  3205               	rrcf	___lldiv@divisor,f,c
 31080  00858A  2E0D               	decfsz	___lldiv@counter,f,c
 31081  00858C  D7E1               	goto	u8350
 31082  00858E                     l3164:
 31083  00858E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31084  008592  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31085  008596  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31086  00859A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31087  00859E  0012               	return		;funcret
 31088  0085A0                     __end_of___lldiv:
 31089                           	opt stack 0
 31090                           tosu	equ	0xFFF
 31091                           tosh	equ	0xFFE
 31092                           tosl	equ	0xFFD
 31093                           pclath	equ	0xFFA
 31094                           tblptru	equ	0xFF8
 31095                           tblptrh	equ	0xFF7
 31096                           tblptrl	equ	0xFF6
 31097                           tablat	equ	0xFF5
 31098                           prodh	equ	0xFF4
 31099                           prodl	equ	0xFF3
 31100                           intcon	equ	0xFF2
 31101                           intcon2	equ	0xFF1
 31102                           intcon3	equ	0xFF0
 31103                           indf0	equ	0xFEF
 31104                           postinc0	equ	0xFEE
 31105                           fsr0h	equ	0xFEA
 31106                           fsr0l	equ	0xFE9
 31107                           wreg	equ	0xFE8
 31108                           indf1	equ	0xFE7
 31109                           postdec1	equ	0xFE5
 31110                           plusw1	equ	0xFE3
 31111                           fsr1h	equ	0xFE2
 31112                           fsr1l	equ	0xFE1
 31113                           indf2	equ	0xFDF
 31114                           postinc2	equ	0xFDE
 31115                           postdec2	equ	0xFDD
 31116                           plusw2	equ	0xFDB
 31117                           fsr2h	equ	0xFDA
 31118                           fsr2l	equ	0xFD9
 31119                           status	equ	0xFD8
 31120                           
 31121 ;; *************** function __display_done *****************
 31122 ;; Defined at:
 31123 ;;		line 519 in file "display.c"
 31124 ;; Parameters:    Size  Location     Type
 31125 ;;		None
 31126 ;; Auto vars:     Size  Location     Type
 31127 ;;  cntr            1   28[COMRAM] unsigned char 
 31128 ;; Return value:  Size  Location     Type
 31129 ;;                  1    wreg      void 
 31130 ;; Registers used:
 31131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31132 ;; Tracked objects:
 31133 ;;		On entry : 0/0
 31134 ;;		On exit  : 0/0
 31135 ;;		Unchanged: 0/0
 31136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31141 ;;Total ram usage:        1 bytes
 31142 ;; Hardware stack levels used:    1
 31143 ;; Hardware stack levels required when called:    4
 31144 ;; This function calls:
 31145 ;;		__display_itoa_u16
 31146 ;;		_bootloader_get_flashPagesWritten
 31147 ;; This function is called by:
 31148 ;;		_display_prepare
 31149 ;; This function uses a non-reentrant model
 31150 ;;
 31151                           
 31152                           	psect	text149
 31153  003E02                     __ptext149:
 31154                           	opt stack 0
 31155  003E02                     __display_done:
 31156                           	opt stack 22
 31157                           
 31158                           ;display.c: 521: uint8_t cntr;;display.c: 522: cntr = 0;
 31159                           
 31160                           ;incstack = 0
 31161  003E02  0E00               	movlw	0
 31162  003E04  6E1D               	movwf	__display_done@cntr,c
 31163                           
 31164                           ;display.c: 523: while(done_line1[cntr])
 31165  003E06  D017               	goto	l1705
 31166  003E08                     
 31167                           ;display.c: 524: display_content[0][cntr] = done_line1[cntr++];
 31168  003E08  501D               	movf	__display_done@cntr,w,c
 31169  003E0A  0D01               	mullw	1
 31170  003E0C  0E68               	movlw	low _done_line1
 31171  003E0E  24F3               	addwf	prodl,w,c
 31172  003E10  6EF6               	movwf	tblptrl,c
 31173  003E12  0EBD               	movlw	high _done_line1
 31174  003E14  20F4               	addwfc	prodh,w,c
 31175  003E16  6EF7               	movwf	tblptrh,c
 31176  003E18                     	if	1	;There are 3 active tblptr bytes
 31177  003E18  6AF8               	clrf	tblptru,c
 31178  003E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 31179  003E1C  22F8               	addwfc	tblptru,f,c
 31180  003E1E                     	endif
 31181  003E1E  501D               	movf	__display_done@cntr,w,c
 31182  003E20  0D01               	mullw	1
 31183  003E22  0E00               	movlw	low _display_content
 31184  003E24  24F3               	addwf	prodl,w,c
 31185  003E26  6ED9               	movwf	fsr2l,c
 31186  003E28  0E02               	movlw	high _display_content
 31187  003E2A  20F4               	addwfc	prodh,w,c
 31188  003E2C  6EDA               	movwf	fsr2h,c
 31189  003E2E  0008               	tblrd		*
 31190  003E30  CFF5 FFDF          	movff	tablat,indf2
 31191  003E34  2A1D               	incf	__display_done@cntr,f,c
 31192  003E36                     l1705:
 31193  003E36  501D               	movf	__display_done@cntr,w,c
 31194  003E38  0D01               	mullw	1
 31195  003E3A  0E68               	movlw	low _done_line1
 31196  003E3C  24F3               	addwf	prodl,w,c
 31197  003E3E  6EF6               	movwf	tblptrl,c
 31198  003E40  0EBD               	movlw	high _done_line1
 31199  003E42  20F4               	addwfc	prodh,w,c
 31200  003E44  6EF7               	movwf	tblptrh,c
 31201  003E46                     	if	1	;There are 3 active tblptr bytes
 31202  003E46  6AF8               	clrf	tblptru,c
 31203  003E48  0E00               	movlw	low (__mediumconst shr (0+16))
 31204  003E4A  22F8               	addwfc	tblptru,f,c
 31205  003E4C                     	endif
 31206  003E4C  0008               	tblrd		*
 31207  003E4E  50F5               	movf	tablat,w,c
 31208  003E50  0900               	iorlw	0
 31209  003E52  A4D8               	btfss	status,2,c
 31210  003E54  D7D9               	goto	l1706
 31211                           
 31212                           ;display.c: 525: cntr = 0;
 31213  003E56  0E00               	movlw	0
 31214  003E58  6E1D               	movwf	__display_done@cntr,c
 31215                           
 31216                           ;display.c: 526: while(done_line2[cntr])
 31217  003E5A  D017               	goto	l1708
 31218  003E5C                     
 31219                           ;display.c: 527: display_content[1][cntr] = done_line2[cntr++];
 31220  003E5C  501D               	movf	__display_done@cntr,w,c
 31221  003E5E  0D01               	mullw	1
 31222  003E60  0E9D               	movlw	low _done_line2
 31223  003E62  24F3               	addwf	prodl,w,c
 31224  003E64  6EF6               	movwf	tblptrl,c
 31225  003E66  0EBE               	movlw	high _done_line2
 31226  003E68  20F4               	addwfc	prodh,w,c
 31227  003E6A  6EF7               	movwf	tblptrh,c
 31228  003E6C                     	if	1	;There are 3 active tblptr bytes
 31229  003E6C  6AF8               	clrf	tblptru,c
 31230  003E6E  0E00               	movlw	low (__mediumconst shr (0+16))
 31231  003E70  22F8               	addwfc	tblptru,f,c
 31232  003E72                     	endif
 31233  003E72  501D               	movf	__display_done@cntr,w,c
 31234  003E74  0D01               	mullw	1
 31235  003E76  0E14               	movlw	low (_display_content+20)
 31236  003E78  24F3               	addwf	prodl,w,c
 31237  003E7A  6ED9               	movwf	fsr2l,c
 31238  003E7C  0E02               	movlw	high (_display_content+20)
 31239  003E7E  20F4               	addwfc	prodh,w,c
 31240  003E80  6EDA               	movwf	fsr2h,c
 31241  003E82  0008               	tblrd		*
 31242  003E84  CFF5 FFDF          	movff	tablat,indf2
 31243  003E88  2A1D               	incf	__display_done@cntr,f,c
 31244  003E8A                     l1708:
 31245  003E8A  501D               	movf	__display_done@cntr,w,c
 31246  003E8C  0D01               	mullw	1
 31247  003E8E  0E9D               	movlw	low _done_line2
 31248  003E90  24F3               	addwf	prodl,w,c
 31249  003E92  6EF6               	movwf	tblptrl,c
 31250  003E94  0EBE               	movlw	high _done_line2
 31251  003E96  20F4               	addwfc	prodh,w,c
 31252  003E98  6EF7               	movwf	tblptrh,c
 31253  003E9A                     	if	1	;There are 3 active tblptr bytes
 31254  003E9A  6AF8               	clrf	tblptru,c
 31255  003E9C  0E00               	movlw	low (__mediumconst shr (0+16))
 31256  003E9E  22F8               	addwfc	tblptru,f,c
 31257  003EA0                     	endif
 31258  003EA0  0008               	tblrd		*
 31259  003EA2  50F5               	movf	tablat,w,c
 31260  003EA4  0900               	iorlw	0
 31261  003EA6  A4D8               	btfss	status,2,c
 31262  003EA8  D7D9               	goto	l1709
 31263                           
 31264                           ;display.c: 528: cntr = 0;
 31265  003EAA  0E00               	movlw	0
 31266  003EAC  6E1D               	movwf	__display_done@cntr,c
 31267                           
 31268                           ;display.c: 529: while(done_line3[cntr])
 31269  003EAE  D017               	goto	l1711
 31270  003EB0                     
 31271                           ;display.c: 530: display_content[2][cntr] = done_line3[cntr++];
 31272  003EB0  501D               	movf	__display_done@cntr,w,c
 31273  003EB2  0D01               	mullw	1
 31274  003EB4  0E58               	movlw	low _done_line3
 31275  003EB6  24F3               	addwf	prodl,w,c
 31276  003EB8  6EF6               	movwf	tblptrl,c
 31277  003EBA  0EBD               	movlw	high _done_line3
 31278  003EBC  20F4               	addwfc	prodh,w,c
 31279  003EBE  6EF7               	movwf	tblptrh,c
 31280  003EC0                     	if	1	;There are 3 active tblptr bytes
 31281  003EC0  6AF8               	clrf	tblptru,c
 31282  003EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 31283  003EC4  22F8               	addwfc	tblptru,f,c
 31284  003EC6                     	endif
 31285  003EC6  501D               	movf	__display_done@cntr,w,c
 31286  003EC8  0D01               	mullw	1
 31287  003ECA  0E28               	movlw	low (_display_content+40)
 31288  003ECC  24F3               	addwf	prodl,w,c
 31289  003ECE  6ED9               	movwf	fsr2l,c
 31290  003ED0  0E02               	movlw	high (_display_content+40)
 31291  003ED2  20F4               	addwfc	prodh,w,c
 31292  003ED4  6EDA               	movwf	fsr2h,c
 31293  003ED6  0008               	tblrd		*
 31294  003ED8  CFF5 FFDF          	movff	tablat,indf2
 31295  003EDC  2A1D               	incf	__display_done@cntr,f,c
 31296  003EDE                     l1711:
 31297  003EDE  501D               	movf	__display_done@cntr,w,c
 31298  003EE0  0D01               	mullw	1
 31299  003EE2  0E58               	movlw	low _done_line3
 31300  003EE4  24F3               	addwf	prodl,w,c
 31301  003EE6  6EF6               	movwf	tblptrl,c
 31302  003EE8  0EBD               	movlw	high _done_line3
 31303  003EEA  20F4               	addwfc	prodh,w,c
 31304  003EEC  6EF7               	movwf	tblptrh,c
 31305  003EEE                     	if	1	;There are 3 active tblptr bytes
 31306  003EEE  6AF8               	clrf	tblptru,c
 31307  003EF0  0E00               	movlw	low (__mediumconst shr (0+16))
 31308  003EF2  22F8               	addwfc	tblptru,f,c
 31309  003EF4                     	endif
 31310  003EF4  0008               	tblrd		*
 31311  003EF6  50F5               	movf	tablat,w,c
 31312  003EF8  0900               	iorlw	0
 31313  003EFA  A4D8               	btfss	status,2,c
 31314  003EFC  D7D9               	goto	l1712
 31315                           
 31316                           ;display.c: 531: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 31317  003EFE  EC68  F050         	call	_bootloader_get_flashPagesWritten	;wreg free
 31318  003F02  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 31319  003F06  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 31320  003F0A  501D               	movf	__display_done@cntr,w,c
 31321  003F0C  0D01               	mullw	1
 31322  003F0E  0E28               	movlw	low (_display_content+40)
 31323  003F10  24F3               	addwf	prodl,w,c
 31324  003F12  6E1B               	movwf	__display_itoa_u16@text,c
 31325  003F14  0E02               	movlw	high (_display_content+40)
 31326  003F16  20F4               	addwfc	prodh,w,c
 31327  003F18  6E1C               	movwf	__display_itoa_u16@text+1,c
 31328  003F1A  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 31329                           
 31330                           ;display.c: 532: cntr = 0;
 31331  003F1E  0E00               	movlw	0
 31332  003F20  6E1D               	movwf	__display_done@cntr,c
 31333                           
 31334                           ;display.c: 533: while(done_line4[cntr])
 31335  003F22  D017               	goto	l1714
 31336  003F24                     
 31337                           ;display.c: 534: display_content[3][cntr] = done_line4[cntr++];
 31338  003F24  501D               	movf	__display_done@cntr,w,c
 31339  003F26  0D01               	mullw	1
 31340  003F28  0E48               	movlw	low _done_line4
 31341  003F2A  24F3               	addwf	prodl,w,c
 31342  003F2C  6EF6               	movwf	tblptrl,c
 31343  003F2E  0EBD               	movlw	high _done_line4
 31344  003F30  20F4               	addwfc	prodh,w,c
 31345  003F32  6EF7               	movwf	tblptrh,c
 31346  003F34                     	if	1	;There are 3 active tblptr bytes
 31347  003F34  6AF8               	clrf	tblptru,c
 31348  003F36  0E00               	movlw	low (__mediumconst shr (0+16))
 31349  003F38  22F8               	addwfc	tblptru,f,c
 31350  003F3A                     	endif
 31351  003F3A  501D               	movf	__display_done@cntr,w,c
 31352  003F3C  0D01               	mullw	1
 31353  003F3E  0E3C               	movlw	low (_display_content+60)
 31354  003F40  24F3               	addwf	prodl,w,c
 31355  003F42  6ED9               	movwf	fsr2l,c
 31356  003F44  0E02               	movlw	high (_display_content+60)
 31357  003F46  20F4               	addwfc	prodh,w,c
 31358  003F48  6EDA               	movwf	fsr2h,c
 31359  003F4A  0008               	tblrd		*
 31360  003F4C  CFF5 FFDF          	movff	tablat,indf2
 31361  003F50  2A1D               	incf	__display_done@cntr,f,c
 31362  003F52                     l1714:
 31363  003F52  501D               	movf	__display_done@cntr,w,c
 31364  003F54  0D01               	mullw	1
 31365  003F56  0E48               	movlw	low _done_line4
 31366  003F58  24F3               	addwf	prodl,w,c
 31367  003F5A  6EF6               	movwf	tblptrl,c
 31368  003F5C  0EBD               	movlw	high _done_line4
 31369  003F5E  20F4               	addwfc	prodh,w,c
 31370  003F60  6EF7               	movwf	tblptrh,c
 31371  003F62                     	if	1	;There are 3 active tblptr bytes
 31372  003F62  6AF8               	clrf	tblptru,c
 31373  003F64  0E00               	movlw	low (__mediumconst shr (0+16))
 31374  003F66  22F8               	addwfc	tblptru,f,c
 31375  003F68                     	endif
 31376  003F68  0008               	tblrd		*
 31377  003F6A  50F5               	movf	tablat,w,c
 31378  003F6C  0900               	iorlw	0
 31379  003F6E  B4D8               	btfsc	status,2,c
 31380  003F70  0012               	return	
 31381  003F72  D7D8               	goto	l1715
 31382  003F74                     __end_of__display_done:
 31383                           	opt stack 0
 31384                           tosu	equ	0xFFF
 31385                           tosh	equ	0xFFE
 31386                           tosl	equ	0xFFD
 31387                           pclath	equ	0xFFA
 31388                           tblptru	equ	0xFF8
 31389                           tblptrh	equ	0xFF7
 31390                           tblptrl	equ	0xFF6
 31391                           tablat	equ	0xFF5
 31392                           prodh	equ	0xFF4
 31393                           prodl	equ	0xFF3
 31394                           intcon	equ	0xFF2
 31395                           intcon2	equ	0xFF1
 31396                           intcon3	equ	0xFF0
 31397                           indf0	equ	0xFEF
 31398                           postinc0	equ	0xFEE
 31399                           fsr0h	equ	0xFEA
 31400                           fsr0l	equ	0xFE9
 31401                           wreg	equ	0xFE8
 31402                           indf1	equ	0xFE7
 31403                           postdec1	equ	0xFE5
 31404                           plusw1	equ	0xFE3
 31405                           fsr1h	equ	0xFE2
 31406                           fsr1l	equ	0xFE1
 31407                           indf2	equ	0xFDF
 31408                           postinc2	equ	0xFDE
 31409                           postdec2	equ	0xFDD
 31410                           plusw2	equ	0xFDB
 31411                           fsr2h	equ	0xFDA
 31412                           fsr2l	equ	0xFD9
 31413                           status	equ	0xFD8
 31414                           
 31415 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31416 ;; Defined at:
 31417 ;;		line 514 in file "bootloader.c"
 31418 ;; Parameters:    Size  Location     Type
 31419 ;;		None
 31420 ;; Auto vars:     Size  Location     Type
 31421 ;;		None
 31422 ;; Return value:  Size  Location     Type
 31423 ;;                  2    0[COMRAM] unsigned int 
 31424 ;; Registers used:
 31425 ;;		None
 31426 ;; Tracked objects:
 31427 ;;		On entry : 0/0
 31428 ;;		On exit  : 0/0
 31429 ;;		Unchanged: 0/0
 31430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31435 ;;Total ram usage:        2 bytes
 31436 ;; Hardware stack levels used:    1
 31437 ;; This function calls:
 31438 ;;		Nothing
 31439 ;; This function is called by:
 31440 ;;		__display_programming
 31441 ;;		__display_done
 31442 ;;		__fill_buffer_get_bootloader_details
 31443 ;; This function uses a non-reentrant model
 31444 ;;
 31445                           
 31446                           	psect	text150
 31447  00A0D0                     __ptext150:
 31448                           	opt stack 0
 31449  00A0D0                     _bootloader_get_flashPagesWritten:
 31450                           	opt stack 25
 31451                           
 31452                           ;bootloader.c: 516: return flash_pages_written;
 31453                           
 31454                           ;incstack = 0
 31455  00A0D0  C16D  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31456  00A0D4  C16E  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31457  00A0D8  0012               	return		;funcret
 31458  00A0DA                     __end_of_bootloader_get_flashPagesWritten:
 31459                           	opt stack 0
 31460                           tosu	equ	0xFFF
 31461                           tosh	equ	0xFFE
 31462                           tosl	equ	0xFFD
 31463                           pclath	equ	0xFFA
 31464                           tblptru	equ	0xFF8
 31465                           tblptrh	equ	0xFF7
 31466                           tblptrl	equ	0xFF6
 31467                           tablat	equ	0xFF5
 31468                           prodh	equ	0xFF4
 31469                           prodl	equ	0xFF3
 31470                           intcon	equ	0xFF2
 31471                           intcon2	equ	0xFF1
 31472                           intcon3	equ	0xFF0
 31473                           indf0	equ	0xFEF
 31474                           postinc0	equ	0xFEE
 31475                           fsr0h	equ	0xFEA
 31476                           fsr0l	equ	0xFE9
 31477                           wreg	equ	0xFE8
 31478                           indf1	equ	0xFE7
 31479                           postdec1	equ	0xFE5
 31480                           plusw1	equ	0xFE3
 31481                           fsr1h	equ	0xFE2
 31482                           fsr1l	equ	0xFE1
 31483                           indf2	equ	0xFDF
 31484                           postinc2	equ	0xFDE
 31485                           postdec2	equ	0xFDD
 31486                           plusw2	equ	0xFDB
 31487                           fsr2h	equ	0xFDA
 31488                           fsr2l	equ	0xFD9
 31489                           status	equ	0xFD8
 31490                           
 31491 ;; *************** function __display_clear *****************
 31492 ;; Defined at:
 31493 ;;		line 81 in file "display.c"
 31494 ;; Parameters:    Size  Location     Type
 31495 ;;		None
 31496 ;; Auto vars:     Size  Location     Type
 31497 ;;  col             1    3[COMRAM] unsigned char 
 31498 ;;  row             1    2[COMRAM] unsigned char 
 31499 ;; Return value:  Size  Location     Type
 31500 ;;                  1    wreg      void 
 31501 ;; Registers used:
 31502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31503 ;; Tracked objects:
 31504 ;;		On entry : 0/0
 31505 ;;		On exit  : 0/0
 31506 ;;		Unchanged: 0/0
 31507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31512 ;;Total ram usage:        4 bytes
 31513 ;; Hardware stack levels used:    1
 31514 ;; This function calls:
 31515 ;;		Nothing
 31516 ;; This function is called by:
 31517 ;;		_display_prepare
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text151
 31522  009466                     __ptext151:
 31523                           	opt stack 0
 31524  009466                     __display_clear:
 31525                           	opt stack 26
 31526                           
 31527                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 31528                           
 31529                           ;incstack = 0
 31530  009466  0E00               	movlw	0
 31531  009468  6E03               	movwf	__display_clear@row,c
 31532  00946A                     l12419:
 31533  00946A  0E03               	movlw	3
 31534  00946C  6403               	cpfsgt	__display_clear@row,c
 31535  00946E  D001               	goto	l1471
 31536  009470  0012               	return	
 31537  009472                     l1471:
 31538                           
 31539                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 31540  009472  0E00               	movlw	0
 31541  009474  6E04               	movwf	__display_clear@col,c
 31542  009476                     l12425:
 31543  009476  0E13               	movlw	19
 31544  009478  6404               	cpfsgt	__display_clear@col,c
 31545  00947A  D001               	goto	l1473
 31546  00947C  D016               	goto	u9720
 31547  00947E                     l1473:
 31548                           
 31549                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 31550  00947E  5003               	movf	__display_clear@row,w,c
 31551  009480  0D14               	mullw	20
 31552  009482  0E00               	movlw	low _display_content
 31553  009484  6E01               	movwf	??__display_clear& (0+255),c
 31554  009486  0E02               	movlw	high _display_content
 31555  009488  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31556  00948A  50F3               	movf	prodl,w,c
 31557  00948C  2601               	addwf	??__display_clear,f,c
 31558  00948E  50F4               	movf	prodh,w,c
 31559  009490  2202               	addwfc	??__display_clear+1,f,c
 31560  009492  5004               	movf	__display_clear@col,w,c
 31561  009494  0D01               	mullw	1
 31562  009496  50F3               	movf	prodl,w,c
 31563  009498  2401               	addwf	??__display_clear,w,c
 31564  00949A  6ED9               	movwf	fsr2l,c
 31565  00949C  50F4               	movf	prodh,w,c
 31566  00949E  2002               	addwfc	??__display_clear+1,w,c
 31567  0094A0  6EDA               	movwf	fsr2h,c
 31568  0094A2  0E20               	movlw	32
 31569  0094A4  6EDF               	movwf	indf2,c
 31570  0094A6  2A04               	incf	__display_clear@col,f,c
 31571  0094A8  D7E6               	goto	l12425
 31572  0094AA                     u9720:
 31573  0094AA  2A03               	incf	__display_clear@row,f,c
 31574  0094AC  D7DE               	goto	l12419
 31575  0094AE                     __end_of__display_clear:
 31576                           	opt stack 0
 31577                           tosu	equ	0xFFF
 31578                           tosh	equ	0xFFE
 31579                           tosl	equ	0xFFD
 31580                           pclath	equ	0xFFA
 31581                           tblptru	equ	0xFF8
 31582                           tblptrh	equ	0xFF7
 31583                           tblptrl	equ	0xFF6
 31584                           tablat	equ	0xFF5
 31585                           prodh	equ	0xFF4
 31586                           prodl	equ	0xFF3
 31587                           intcon	equ	0xFF2
 31588                           intcon2	equ	0xFF1
 31589                           intcon3	equ	0xFF0
 31590                           indf0	equ	0xFEF
 31591                           postinc0	equ	0xFEE
 31592                           fsr0h	equ	0xFEA
 31593                           fsr0l	equ	0xFE9
 31594                           wreg	equ	0xFE8
 31595                           indf1	equ	0xFE7
 31596                           postdec1	equ	0xFE5
 31597                           plusw1	equ	0xFE3
 31598                           fsr1h	equ	0xFE2
 31599                           fsr1l	equ	0xFE1
 31600                           indf2	equ	0xFDF
 31601                           postinc2	equ	0xFDE
 31602                           postdec2	equ	0xFDD
 31603                           plusw2	equ	0xFDB
 31604                           fsr2h	equ	0xFDA
 31605                           fsr2l	equ	0xFD9
 31606                           status	equ	0xFD8
 31607                           
 31608 ;; *************** function __display_checked *****************
 31609 ;; Defined at:
 31610 ;;		line 423 in file "display.c"
 31611 ;; Parameters:    Size  Location     Type
 31612 ;;		None
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;  cntr            1   31[COMRAM] unsigned char 
 31615 ;;  start           1   30[COMRAM] unsigned char 
 31616 ;; Return value:  Size  Location     Type
 31617 ;;                  1    wreg      void 
 31618 ;; Registers used:
 31619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31620 ;; Tracked objects:
 31621 ;;		On entry : 0/0
 31622 ;;		On exit  : 0/0
 31623 ;;		Unchanged: 0/0
 31624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31629 ;;Total ram usage:        4 bytes
 31630 ;; Hardware stack levels used:    1
 31631 ;; Hardware stack levels required when called:    4
 31632 ;; This function calls:
 31633 ;;		__display_itoa_u16
 31634 ;;		_bootloader_get_total_entries
 31635 ;; This function is called by:
 31636 ;;		_display_prepare
 31637 ;; This function uses a non-reentrant model
 31638 ;;
 31639                           
 31640                           	psect	text152
 31641  003C8A                     __ptext152:
 31642                           	opt stack 0
 31643  003C8A                     __display_checked:
 31644                           	opt stack 22
 31645                           
 31646                           ;display.c: 425: uint8_t cntr;;display.c: 426: uint8_t start;;display.c: 427: cntr = 0;
 31647                           
 31648                           ;incstack = 0
 31649  003C8A  0E00               	movlw	0
 31650  003C8C  6E20               	movwf	__display_checked@cntr,c
 31651                           
 31652                           ;display.c: 428: while(checked_line1[cntr])
 31653  003C8E  D017               	goto	l1641
 31654  003C90                     
 31655                           ;display.c: 429: display_content[0][cntr] = checked_line1[cntr++];
 31656  003C90  5020               	movf	__display_checked@cntr,w,c
 31657  003C92  0D01               	mullw	1
 31658  003C94  0EA8               	movlw	low _checked_line1
 31659  003C96  24F3               	addwf	prodl,w,c
 31660  003C98  6EF6               	movwf	tblptrl,c
 31661  003C9A  0EBD               	movlw	high _checked_line1
 31662  003C9C  20F4               	addwfc	prodh,w,c
 31663  003C9E  6EF7               	movwf	tblptrh,c
 31664  003CA0                     	if	1	;There are 3 active tblptr bytes
 31665  003CA0  6AF8               	clrf	tblptru,c
 31666  003CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 31667  003CA4  22F8               	addwfc	tblptru,f,c
 31668  003CA6                     	endif
 31669  003CA6  5020               	movf	__display_checked@cntr,w,c
 31670  003CA8  0D01               	mullw	1
 31671  003CAA  0E00               	movlw	low _display_content
 31672  003CAC  24F3               	addwf	prodl,w,c
 31673  003CAE  6ED9               	movwf	fsr2l,c
 31674  003CB0  0E02               	movlw	high _display_content
 31675  003CB2  20F4               	addwfc	prodh,w,c
 31676  003CB4  6EDA               	movwf	fsr2h,c
 31677  003CB6  0008               	tblrd		*
 31678  003CB8  CFF5 FFDF          	movff	tablat,indf2
 31679  003CBC  2A20               	incf	__display_checked@cntr,f,c
 31680  003CBE                     l1641:
 31681  003CBE  5020               	movf	__display_checked@cntr,w,c
 31682  003CC0  0D01               	mullw	1
 31683  003CC2  0EA8               	movlw	low _checked_line1
 31684  003CC4  24F3               	addwf	prodl,w,c
 31685  003CC6  6EF6               	movwf	tblptrl,c
 31686  003CC8  0EBD               	movlw	high _checked_line1
 31687  003CCA  20F4               	addwfc	prodh,w,c
 31688  003CCC  6EF7               	movwf	tblptrh,c
 31689  003CCE                     	if	1	;There are 3 active tblptr bytes
 31690  003CCE  6AF8               	clrf	tblptru,c
 31691  003CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 31692  003CD2  22F8               	addwfc	tblptru,f,c
 31693  003CD4                     	endif
 31694  003CD4  0008               	tblrd		*
 31695  003CD6  50F5               	movf	tablat,w,c
 31696  003CD8  0900               	iorlw	0
 31697  003CDA  A4D8               	btfss	status,2,c
 31698  003CDC  D7D9               	goto	l1642
 31699                           
 31700                           ;display.c: 430: cntr = 0;
 31701  003CDE  0E00               	movlw	0
 31702  003CE0  6E20               	movwf	__display_checked@cntr,c
 31703                           
 31704                           ;display.c: 431: while(checked_line2[cntr])
 31705  003CE2  D017               	goto	l1644
 31706  003CE4                     
 31707                           ;display.c: 432: display_content[1][cntr] = checked_line2[cntr++];
 31708  003CE4  5020               	movf	__display_checked@cntr,w,c
 31709  003CE6  0D01               	mullw	1
 31710  003CE8  0E6D               	movlw	low _checked_line2
 31711  003CEA  24F3               	addwf	prodl,w,c
 31712  003CEC  6EF6               	movwf	tblptrl,c
 31713  003CEE  0EBC               	movlw	high _checked_line2
 31714  003CF0  20F4               	addwfc	prodh,w,c
 31715  003CF2  6EF7               	movwf	tblptrh,c
 31716  003CF4                     	if	1	;There are 3 active tblptr bytes
 31717  003CF4  6AF8               	clrf	tblptru,c
 31718  003CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 31719  003CF8  22F8               	addwfc	tblptru,f,c
 31720  003CFA                     	endif
 31721  003CFA  5020               	movf	__display_checked@cntr,w,c
 31722  003CFC  0D01               	mullw	1
 31723  003CFE  0E14               	movlw	low (_display_content+20)
 31724  003D00  24F3               	addwf	prodl,w,c
 31725  003D02  6ED9               	movwf	fsr2l,c
 31726  003D04  0E02               	movlw	high (_display_content+20)
 31727  003D06  20F4               	addwfc	prodh,w,c
 31728  003D08  6EDA               	movwf	fsr2h,c
 31729  003D0A  0008               	tblrd		*
 31730  003D0C  CFF5 FFDF          	movff	tablat,indf2
 31731  003D10  2A20               	incf	__display_checked@cntr,f,c
 31732  003D12                     l1644:
 31733  003D12  5020               	movf	__display_checked@cntr,w,c
 31734  003D14  0D01               	mullw	1
 31735  003D16  0E6D               	movlw	low _checked_line2
 31736  003D18  24F3               	addwf	prodl,w,c
 31737  003D1A  6EF6               	movwf	tblptrl,c
 31738  003D1C  0EBC               	movlw	high _checked_line2
 31739  003D1E  20F4               	addwfc	prodh,w,c
 31740  003D20  6EF7               	movwf	tblptrh,c
 31741  003D22                     	if	1	;There are 3 active tblptr bytes
 31742  003D22  6AF8               	clrf	tblptru,c
 31743  003D24  0E00               	movlw	low (__mediumconst shr (0+16))
 31744  003D26  22F8               	addwfc	tblptru,f,c
 31745  003D28                     	endif
 31746  003D28  0008               	tblrd		*
 31747  003D2A  50F5               	movf	tablat,w,c
 31748  003D2C  0900               	iorlw	0
 31749  003D2E  A4D8               	btfss	status,2,c
 31750  003D30  D7D9               	goto	l1645
 31751                           
 31752                           ;display.c: 434: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31753  003D32  EC6D  F050         	call	_bootloader_get_total_entries	;wreg free
 31754  003D36  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31755  003D3A  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31756  003D3E  0E28               	movlw	low (_display_content+40)
 31757  003D40  6E1B               	movwf	__display_itoa_u16@text,c
 31758  003D42  0E02               	movlw	high (_display_content+40)
 31759  003D44  6E1C               	movwf	__display_itoa_u16@text+1,c
 31760  003D46  ECCC  F03B         	call	__display_itoa_u16	;wreg free
 31761  003D4A  6E1F               	movwf	__display_checked@start,c
 31762                           
 31763                           ;display.c: 435: start++;
 31764  003D4C  2A1F               	incf	__display_checked@start,f,c
 31765                           
 31766                           ;display.c: 436: cntr = 0;
 31767  003D4E  0E00               	movlw	0
 31768  003D50  6E20               	movwf	__display_checked@cntr,c
 31769                           
 31770                           ;display.c: 437: while(checked_line3[cntr])
 31771  003D52  D01C               	goto	l1647
 31772  003D54                     
 31773                           ;display.c: 438: display_content[2][start+cntr] = checked_line3[cntr++];
 31774  003D54  5020               	movf	__display_checked@cntr,w,c
 31775  003D56  0D01               	mullw	1
 31776  003D58  0E71               	movlw	low _checked_line3
 31777  003D5A  24F3               	addwf	prodl,w,c
 31778  003D5C  6EF6               	movwf	tblptrl,c
 31779  003D5E  0EBE               	movlw	high _checked_line3
 31780  003D60  20F4               	addwfc	prodh,w,c
 31781  003D62  6EF7               	movwf	tblptrh,c
 31782  003D64                     	if	1	;There are 3 active tblptr bytes
 31783  003D64  6AF8               	clrf	tblptru,c
 31784  003D66  0E00               	movlw	low (__mediumconst shr (0+16))
 31785  003D68  22F8               	addwfc	tblptru,f,c
 31786  003D6A                     	endif
 31787  003D6A  5020               	movf	__display_checked@cntr,w,c
 31788  003D6C  C01F  F01D         	movff	__display_checked@start,??__display_checked
 31789  003D70  6A1E               	clrf	(??__display_checked+1)& (0+255),c
 31790  003D72  261D               	addwf	??__display_checked,f,c
 31791  003D74  0E00               	movlw	0
 31792  003D76  221E               	addwfc	??__display_checked+1,f,c
 31793  003D78  0E28               	movlw	low (_display_content+40)
 31794  003D7A  241D               	addwf	??__display_checked,w,c
 31795  003D7C  6ED9               	movwf	fsr2l,c
 31796  003D7E  0E02               	movlw	high (_display_content+40)
 31797  003D80  201E               	addwfc	??__display_checked+1,w,c
 31798  003D82  6EDA               	movwf	fsr2h,c
 31799  003D84  0008               	tblrd		*
 31800  003D86  CFF5 FFDF          	movff	tablat,indf2
 31801  003D8A  2A20               	incf	__display_checked@cntr,f,c
 31802  003D8C                     l1647:
 31803  003D8C  5020               	movf	__display_checked@cntr,w,c
 31804  003D8E  0D01               	mullw	1
 31805  003D90  0E71               	movlw	low _checked_line3
 31806  003D92  24F3               	addwf	prodl,w,c
 31807  003D94  6EF6               	movwf	tblptrl,c
 31808  003D96  0EBE               	movlw	high _checked_line3
 31809  003D98  20F4               	addwfc	prodh,w,c
 31810  003D9A  6EF7               	movwf	tblptrh,c
 31811  003D9C                     	if	1	;There are 3 active tblptr bytes
 31812  003D9C  6AF8               	clrf	tblptru,c
 31813  003D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 31814  003DA0  22F8               	addwfc	tblptru,f,c
 31815  003DA2                     	endif
 31816  003DA2  0008               	tblrd		*
 31817  003DA4  50F5               	movf	tablat,w,c
 31818  003DA6  0900               	iorlw	0
 31819  003DA8  A4D8               	btfss	status,2,c
 31820  003DAA  D7D4               	goto	l1648
 31821                           
 31822                           ;display.c: 440: cntr = 0;
 31823  003DAC  0E00               	movlw	0
 31824  003DAE  6E20               	movwf	__display_checked@cntr,c
 31825                           
 31826                           ;display.c: 441: while(checked_line4[cntr])
 31827  003DB0  D017               	goto	l1650
 31828  003DB2                     
 31829                           ;display.c: 442: display_content[3][cntr] = checked_line4[cntr++];
 31830  003DB2  5020               	movf	__display_checked@cntr,w,c
 31831  003DB4  0D01               	mullw	1
 31832  003DB6  0E06               	movlw	low _checked_line4
 31833  003DB8  24F3               	addwf	prodl,w,c
 31834  003DBA  6EF6               	movwf	tblptrl,c
 31835  003DBC  0EBD               	movlw	high _checked_line4
 31836  003DBE  20F4               	addwfc	prodh,w,c
 31837  003DC0  6EF7               	movwf	tblptrh,c
 31838  003DC2                     	if	1	;There are 3 active tblptr bytes
 31839  003DC2  6AF8               	clrf	tblptru,c
 31840  003DC4  0E00               	movlw	low (__mediumconst shr (0+16))
 31841  003DC6  22F8               	addwfc	tblptru,f,c
 31842  003DC8                     	endif
 31843  003DC8  5020               	movf	__display_checked@cntr,w,c
 31844  003DCA  0D01               	mullw	1
 31845  003DCC  0E3C               	movlw	low (_display_content+60)
 31846  003DCE  24F3               	addwf	prodl,w,c
 31847  003DD0  6ED9               	movwf	fsr2l,c
 31848  003DD2  0E02               	movlw	high (_display_content+60)
 31849  003DD4  20F4               	addwfc	prodh,w,c
 31850  003DD6  6EDA               	movwf	fsr2h,c
 31851  003DD8  0008               	tblrd		*
 31852  003DDA  CFF5 FFDF          	movff	tablat,indf2
 31853  003DDE  2A20               	incf	__display_checked@cntr,f,c
 31854  003DE0                     l1650:
 31855  003DE0  5020               	movf	__display_checked@cntr,w,c
 31856  003DE2  0D01               	mullw	1
 31857  003DE4  0E06               	movlw	low _checked_line4
 31858  003DE6  24F3               	addwf	prodl,w,c
 31859  003DE8  6EF6               	movwf	tblptrl,c
 31860  003DEA  0EBD               	movlw	high _checked_line4
 31861  003DEC  20F4               	addwfc	prodh,w,c
 31862  003DEE  6EF7               	movwf	tblptrh,c
 31863  003DF0                     	if	1	;There are 3 active tblptr bytes
 31864  003DF0  6AF8               	clrf	tblptru,c
 31865  003DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 31866  003DF4  22F8               	addwfc	tblptru,f,c
 31867  003DF6                     	endif
 31868  003DF6  0008               	tblrd		*
 31869  003DF8  50F5               	movf	tablat,w,c
 31870  003DFA  0900               	iorlw	0
 31871  003DFC  B4D8               	btfsc	status,2,c
 31872  003DFE  0012               	return	
 31873  003E00  D7D8               	goto	l1651
 31874  003E02                     __end_of__display_checked:
 31875                           	opt stack 0
 31876                           tosu	equ	0xFFF
 31877                           tosh	equ	0xFFE
 31878                           tosl	equ	0xFFD
 31879                           pclath	equ	0xFFA
 31880                           tblptru	equ	0xFF8
 31881                           tblptrh	equ	0xFF7
 31882                           tblptrl	equ	0xFF6
 31883                           tablat	equ	0xFF5
 31884                           prodh	equ	0xFF4
 31885                           prodl	equ	0xFF3
 31886                           intcon	equ	0xFF2
 31887                           intcon2	equ	0xFF1
 31888                           intcon3	equ	0xFF0
 31889                           indf0	equ	0xFEF
 31890                           postinc0	equ	0xFEE
 31891                           fsr0h	equ	0xFEA
 31892                           fsr0l	equ	0xFE9
 31893                           wreg	equ	0xFE8
 31894                           indf1	equ	0xFE7
 31895                           postdec1	equ	0xFE5
 31896                           plusw1	equ	0xFE3
 31897                           fsr1h	equ	0xFE2
 31898                           fsr1l	equ	0xFE1
 31899                           indf2	equ	0xFDF
 31900                           postinc2	equ	0xFDE
 31901                           postdec2	equ	0xFDD
 31902                           plusw2	equ	0xFDB
 31903                           fsr2h	equ	0xFDA
 31904                           fsr2l	equ	0xFD9
 31905                           status	equ	0xFD8
 31906                           
 31907 ;; *************** function _bootloader_get_total_entries *****************
 31908 ;; Defined at:
 31909 ;;		line 473 in file "bootloader.c"
 31910 ;; Parameters:    Size  Location     Type
 31911 ;;		None
 31912 ;; Auto vars:     Size  Location     Type
 31913 ;;		None
 31914 ;; Return value:  Size  Location     Type
 31915 ;;                  2    0[COMRAM] unsigned int 
 31916 ;; Registers used:
 31917 ;;		None
 31918 ;; Tracked objects:
 31919 ;;		On entry : 0/0
 31920 ;;		On exit  : 0/0
 31921 ;;		Unchanged: 0/0
 31922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31927 ;;Total ram usage:        2 bytes
 31928 ;; Hardware stack levels used:    1
 31929 ;; This function calls:
 31930 ;;		Nothing
 31931 ;; This function is called by:
 31932 ;;		__display_checked
 31933 ;;		__display_programming
 31934 ;;		__fill_buffer_get_bootloader_details
 31935 ;; This function uses a non-reentrant model
 31936 ;;
 31937                           
 31938                           	psect	text153
 31939  00A0DA                     __ptext153:
 31940                           	opt stack 0
 31941  00A0DA                     _bootloader_get_total_entries:
 31942                           	opt stack 25
 31943                           
 31944                           ;bootloader.c: 475: return total_hex_file_entries;
 31945                           
 31946                           ;incstack = 0
 31947  00A0DA  C16F  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 31948  00A0DE  C170  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 31949  00A0E2  0012               	return		;funcret
 31950  00A0E4                     __end_of_bootloader_get_total_entries:
 31951                           	opt stack 0
 31952                           tosu	equ	0xFFF
 31953                           tosh	equ	0xFFE
 31954                           tosl	equ	0xFFD
 31955                           pclath	equ	0xFFA
 31956                           tblptru	equ	0xFF8
 31957                           tblptrh	equ	0xFF7
 31958                           tblptrl	equ	0xFF6
 31959                           tablat	equ	0xFF5
 31960                           prodh	equ	0xFF4
 31961                           prodl	equ	0xFF3
 31962                           intcon	equ	0xFF2
 31963                           intcon2	equ	0xFF1
 31964                           intcon3	equ	0xFF0
 31965                           indf0	equ	0xFEF
 31966                           postinc0	equ	0xFEE
 31967                           fsr0h	equ	0xFEA
 31968                           fsr0l	equ	0xFE9
 31969                           wreg	equ	0xFE8
 31970                           indf1	equ	0xFE7
 31971                           postdec1	equ	0xFE5
 31972                           plusw1	equ	0xFE3
 31973                           fsr1h	equ	0xFE2
 31974                           fsr1l	equ	0xFE1
 31975                           indf2	equ	0xFDF
 31976                           postinc2	equ	0xFDE
 31977                           postdec2	equ	0xFDD
 31978                           plusw2	equ	0xFDB
 31979                           fsr2h	equ	0xFDA
 31980                           fsr2l	equ	0xFD9
 31981                           status	equ	0xFD8
 31982                           
 31983 ;; *************** function __display_itoa_u16 *****************
 31984 ;; Defined at:
 31985 ;;		line 94 in file "display.c"
 31986 ;; Parameters:    Size  Location     Type
 31987 ;;  value           2   24[COMRAM] unsigned int 
 31988 ;;  text            2   26[COMRAM] PTR unsigned char 
 31989 ;;		 -> display_content(80), 
 31990 ;; Auto vars:     Size  Location     Type
 31991 ;;		None
 31992 ;; Return value:  Size  Location     Type
 31993 ;;                  1    wreg      unsigned char 
 31994 ;; Registers used:
 31995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31996 ;; Tracked objects:
 31997 ;;		On entry : 0/0
 31998 ;;		On exit  : 0/0
 31999 ;;		Unchanged: 0/0
 32000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32005 ;;Total ram usage:        4 bytes
 32006 ;; Hardware stack levels used:    1
 32007 ;; Hardware stack levels required when called:    3
 32008 ;; This function calls:
 32009 ;;		_itoa
 32010 ;; This function is called by:
 32011 ;;		__display_start
 32012 ;;		__display_verify
 32013 ;;		__display_checked
 32014 ;;		__display_failed
 32015 ;;		__display_programming
 32016 ;;		__display_done
 32017 ;; This function uses a non-reentrant model
 32018 ;;
 32019                           
 32020                           	psect	text154
 32021  007798                     __ptext154:
 32022                           	opt stack 0
 32023  007798                     __display_itoa_u16:
 32024                           	opt stack 22
 32025                           
 32026                           ;display.c: 96: itoa(text, value, 10);
 32027                           
 32028                           ;incstack = 0
 32029  007798  C01B  F011         	movff	__display_itoa_u16@text,itoa@buf
 32030  00779C  C01C  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 32031  0077A0  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 32032  0077A4  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 32033  0077A8  0E00               	movlw	0
 32034  0077AA  6E16               	movwf	itoa@base+1,c
 32035  0077AC  0E0A               	movlw	10
 32036  0077AE  6E15               	movwf	itoa@base,c
 32037  0077B0  EC4B  F04B         	call	_itoa	;wreg free
 32038                           
 32039                           ;display.c: 97: if(value>9999)
 32040  0077B4  0E10               	movlw	16
 32041  0077B6  5C19               	subwf	__display_itoa_u16@value,w,c
 32042  0077B8  0E27               	movlw	39
 32043  0077BA  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32044  0077BC  A0D8               	btfss	status,0,c
 32045  0077BE  D00A               	goto	l1478
 32046                           
 32047                           ;display.c: 98: {;display.c: 99: *(text+5) = ' ';
 32048  0077C0  EE20 F005          	lfsr	2,5
 32049  0077C4  501B               	movf	__display_itoa_u16@text,w,c
 32050  0077C6  26D9               	addwf	fsr2l,f,c
 32051  0077C8  501C               	movf	__display_itoa_u16@text+1,w,c
 32052  0077CA  22DA               	addwfc	fsr2h,f,c
 32053  0077CC  0E20               	movlw	32
 32054  0077CE  6EDF               	movwf	indf2,c
 32055                           
 32056                           ;display.c: 100: return 5;
 32057  0077D0  0E05               	movlw	5
 32058                           
 32059                           ;display.c: 101: }
 32060  0077D2  0012               	return	
 32061  0077D4                     l1478:
 32062                           
 32063                           ;display.c: 102: else if (value>999)
 32064  0077D4  0EE8               	movlw	232
 32065  0077D6  5C19               	subwf	__display_itoa_u16@value,w,c
 32066  0077D8  0E03               	movlw	3
 32067  0077DA  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32068  0077DC  A0D8               	btfss	status,0,c
 32069  0077DE  D00A               	goto	l1481
 32070                           
 32071                           ;display.c: 103: {;display.c: 104: *(text+4) = ' ';
 32072  0077E0  EE20 F004          	lfsr	2,4
 32073  0077E4  501B               	movf	__display_itoa_u16@text,w,c
 32074  0077E6  26D9               	addwf	fsr2l,f,c
 32075  0077E8  501C               	movf	__display_itoa_u16@text+1,w,c
 32076  0077EA  22DA               	addwfc	fsr2h,f,c
 32077  0077EC  0E20               	movlw	32
 32078  0077EE  6EDF               	movwf	indf2,c
 32079                           
 32080                           ;display.c: 105: return 4;
 32081  0077F0  0E04               	movlw	4
 32082                           
 32083                           ;display.c: 106: }
 32084  0077F2  0012               	return	
 32085  0077F4                     l1481:
 32086                           
 32087                           ;display.c: 107: else if (value>99)
 32088  0077F4  501A               	movf	__display_itoa_u16@value+1,w,c
 32089  0077F6  E104               	bnz	u8790
 32090  0077F8  0E64               	movlw	100
 32091  0077FA  5C19               	subwf	__display_itoa_u16@value,w,c
 32092  0077FC  A0D8               	btfss	status,0,c
 32093  0077FE  D00A               	goto	l1483
 32094  007800                     u8790:
 32095                           
 32096                           ;display.c: 108: {;display.c: 109: *(text+3) = ' ';
 32097  007800  EE20 F003          	lfsr	2,3
 32098  007804  501B               	movf	__display_itoa_u16@text,w,c
 32099  007806  26D9               	addwf	fsr2l,f,c
 32100  007808  501C               	movf	__display_itoa_u16@text+1,w,c
 32101  00780A  22DA               	addwfc	fsr2h,f,c
 32102  00780C  0E20               	movlw	32
 32103  00780E  6EDF               	movwf	indf2,c
 32104                           
 32105                           ;display.c: 110: return 3;
 32106  007810  0E03               	movlw	3
 32107                           
 32108                           ;display.c: 111: }
 32109  007812  0012               	return	
 32110  007814                     l1483:
 32111                           
 32112                           ;display.c: 112: else if (value>9)
 32113  007814  501A               	movf	__display_itoa_u16@value+1,w,c
 32114  007816  E104               	bnz	u8800
 32115  007818  0E0A               	movlw	10
 32116  00781A  5C19               	subwf	__display_itoa_u16@value,w,c
 32117  00781C  A0D8               	btfss	status,0,c
 32118  00781E  D00A               	goto	l1485
 32119  007820                     u8800:
 32120                           
 32121                           ;display.c: 113: {;display.c: 114: *(text+2) = ' ';
 32122  007820  EE20 F002          	lfsr	2,2
 32123  007824  501B               	movf	__display_itoa_u16@text,w,c
 32124  007826  26D9               	addwf	fsr2l,f,c
 32125  007828  501C               	movf	__display_itoa_u16@text+1,w,c
 32126  00782A  22DA               	addwfc	fsr2h,f,c
 32127  00782C  0E20               	movlw	32
 32128  00782E  6EDF               	movwf	indf2,c
 32129                           
 32130                           ;display.c: 115: return 2;
 32131  007830  0E02               	movlw	2
 32132                           
 32133                           ;display.c: 116: }
 32134  007832  0012               	return	
 32135  007834                     l1485:
 32136                           
 32137                           ;display.c: 117: else;display.c: 118: {;display.c: 119: *(text+1) = ' ';
 32138  007834  EE20 F001          	lfsr	2,1
 32139  007838  501B               	movf	__display_itoa_u16@text,w,c
 32140  00783A  26D9               	addwf	fsr2l,f,c
 32141  00783C  501C               	movf	__display_itoa_u16@text+1,w,c
 32142  00783E  22DA               	addwfc	fsr2h,f,c
 32143  007840  0E20               	movlw	32
 32144  007842  6EDF               	movwf	indf2,c
 32145                           
 32146                           ;display.c: 120: return 1;
 32147  007844  0E01               	movlw	1
 32148  007846  0012               	return	
 32149  007848                     __end_of__display_itoa_u16:
 32150                           	opt stack 0
 32151                           tosu	equ	0xFFF
 32152                           tosh	equ	0xFFE
 32153                           tosl	equ	0xFFD
 32154                           pclath	equ	0xFFA
 32155                           tblptru	equ	0xFF8
 32156                           tblptrh	equ	0xFF7
 32157                           tblptrl	equ	0xFF6
 32158                           tablat	equ	0xFF5
 32159                           prodh	equ	0xFF4
 32160                           prodl	equ	0xFF3
 32161                           intcon	equ	0xFF2
 32162                           intcon2	equ	0xFF1
 32163                           intcon3	equ	0xFF0
 32164                           indf0	equ	0xFEF
 32165                           postinc0	equ	0xFEE
 32166                           fsr0h	equ	0xFEA
 32167                           fsr0l	equ	0xFE9
 32168                           wreg	equ	0xFE8
 32169                           indf1	equ	0xFE7
 32170                           postdec1	equ	0xFE5
 32171                           plusw1	equ	0xFE3
 32172                           fsr1h	equ	0xFE2
 32173                           fsr1l	equ	0xFE1
 32174                           indf2	equ	0xFDF
 32175                           postinc2	equ	0xFDE
 32176                           postdec2	equ	0xFDD
 32177                           plusw2	equ	0xFDB
 32178                           fsr2h	equ	0xFDA
 32179                           fsr2l	equ	0xFD9
 32180                           status	equ	0xFD8
 32181                           
 32182 ;; *************** function _itoa *****************
 32183 ;; Defined at:
 32184 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32185 ;; Parameters:    Size  Location     Type
 32186 ;;  buf             2   16[COMRAM] PTR unsigned char 
 32187 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32188 ;;  val             2   18[COMRAM] int 
 32189 ;;  base            2   20[COMRAM] int 
 32190 ;; Auto vars:     Size  Location     Type
 32191 ;;  cp              2   22[COMRAM] PTR unsigned char 
 32192 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32193 ;; Return value:  Size  Location     Type
 32194 ;;                  2   16[COMRAM] PTR unsigned char 
 32195 ;; Registers used:
 32196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32197 ;; Tracked objects:
 32198 ;;		On entry : 0/0
 32199 ;;		On exit  : 0/0
 32200 ;;		Unchanged: 0/0
 32201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32205 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32206 ;;Total ram usage:        8 bytes
 32207 ;; Hardware stack levels used:    1
 32208 ;; Hardware stack levels required when called:    2
 32209 ;; This function calls:
 32210 ;;		_utoa
 32211 ;; This function is called by:
 32212 ;;		__display_itoa_u16
 32213 ;;		__display_itoa
 32214 ;; This function uses a non-reentrant model
 32215 ;;
 32216                           
 32217                           	psect	text155
 32218  009696                     __ptext155:
 32219                           	opt stack 0
 32220  009696                     _itoa:
 32221                           	opt stack 22
 32222                           
 32223                           ;incstack = 0
 32224  009696  C011  F017         	movff	itoa@buf,itoa@cp
 32225  00969A  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 32226  00969E  AE14               	btfss	itoa@val+1,7,c
 32227  0096A0  D00C               	goto	l3795
 32228  0096A2  C011  FFD9         	movff	itoa@buf,fsr2l
 32229  0096A6  C012  FFDA         	movff	itoa@buf+1,fsr2h
 32230  0096AA  0E2D               	movlw	45
 32231  0096AC  6EDF               	movwf	indf2,c
 32232  0096AE  4A11               	infsnz	itoa@buf,f,c
 32233  0096B0  2A12               	incf	itoa@buf+1,f,c
 32234  0096B2  6C13               	negf	itoa@val,c
 32235  0096B4  1E14               	comf	itoa@val+1,f,c
 32236  0096B6  B0D8               	btfsc	status,0,c
 32237  0096B8  2A14               	incf	itoa@val+1,f,c
 32238  0096BA                     l3795:
 32239  0096BA  C011  F008         	movff	itoa@buf,utoa@buf
 32240  0096BE  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 32241  0096C2  C013  F00A         	movff	itoa@val,utoa@val
 32242  0096C6  C014  F00B         	movff	itoa@val+1,utoa@val+1
 32243  0096CA  C015  F00C         	movff	itoa@base,utoa@base
 32244  0096CE  C016  F00D         	movff	itoa@base+1,utoa@base+1
 32245  0096D2  EC1B  F03E         	call	_utoa	;wreg free
 32246  0096D6  0012               	return	
 32247  0096D8                     __end_of_itoa:
 32248                           	opt stack 0
 32249                           tosu	equ	0xFFF
 32250                           tosh	equ	0xFFE
 32251                           tosl	equ	0xFFD
 32252                           pclath	equ	0xFFA
 32253                           tblptru	equ	0xFF8
 32254                           tblptrh	equ	0xFF7
 32255                           tblptrl	equ	0xFF6
 32256                           tablat	equ	0xFF5
 32257                           prodh	equ	0xFF4
 32258                           prodl	equ	0xFF3
 32259                           intcon	equ	0xFF2
 32260                           intcon2	equ	0xFF1
 32261                           intcon3	equ	0xFF0
 32262                           indf0	equ	0xFEF
 32263                           postinc0	equ	0xFEE
 32264                           fsr0h	equ	0xFEA
 32265                           fsr0l	equ	0xFE9
 32266                           wreg	equ	0xFE8
 32267                           indf1	equ	0xFE7
 32268                           postdec1	equ	0xFE5
 32269                           plusw1	equ	0xFE3
 32270                           fsr1h	equ	0xFE2
 32271                           fsr1l	equ	0xFE1
 32272                           indf2	equ	0xFDF
 32273                           postinc2	equ	0xFDE
 32274                           postdec2	equ	0xFDD
 32275                           plusw2	equ	0xFDB
 32276                           fsr2h	equ	0xFDA
 32277                           fsr2l	equ	0xFD9
 32278                           status	equ	0xFD8
 32279                           
 32280 ;; *************** function _utoa *****************
 32281 ;; Defined at:
 32282 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32283 ;; Parameters:    Size  Location     Type
 32284 ;;  buf             2    7[COMRAM] PTR unsigned char 
 32285 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32286 ;;  val             2    9[COMRAM] unsigned int 
 32287 ;;  base            2   11[COMRAM] int 
 32288 ;; Auto vars:     Size  Location     Type
 32289 ;;  v               2   13[COMRAM] unsigned int 
 32290 ;;  c               1   15[COMRAM] unsigned char 
 32291 ;; Return value:  Size  Location     Type
 32292 ;;                  2    7[COMRAM] PTR unsigned char 
 32293 ;; Registers used:
 32294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32295 ;; Tracked objects:
 32296 ;;		On entry : 0/0
 32297 ;;		On exit  : 0/0
 32298 ;;		Unchanged: 0/0
 32299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32300 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32301 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32303 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32304 ;;Total ram usage:        9 bytes
 32305 ;; Hardware stack levels used:    1
 32306 ;; Hardware stack levels required when called:    1
 32307 ;; This function calls:
 32308 ;;		___lwdiv
 32309 ;;		___lwmod
 32310 ;; This function is called by:
 32311 ;;		_itoa
 32312 ;; This function uses a non-reentrant model
 32313 ;;
 32314                           
 32315                           	psect	text156
 32316  007C36                     __ptext156:
 32317                           	opt stack 0
 32318  007C36                     _utoa:
 32319                           	opt stack 22
 32320                           
 32321                           ;incstack = 0
 32322  007C36  C00A  F00E         	movff	utoa@val,utoa@v
 32323  007C3A  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 32324  007C3E  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 32325  007C42  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 32326  007C46  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32327  007C4A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32328  007C4E  EC92  F049         	call	___lwdiv	;wreg free
 32329  007C52  C001  F00E         	movff	?___lwdiv,utoa@v
 32330  007C56  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 32331  007C5A  4A08               	infsnz	utoa@buf,f,c
 32332  007C5C  2A09               	incf	utoa@buf+1,f,c
 32333  007C5E  500E               	movf	utoa@v,w,c
 32334  007C60  100F               	iorwf	utoa@v+1,w,c
 32335  007C62  A4D8               	btfss	status,2,c
 32336  007C64  D7EC               	goto	l3799
 32337  007C66  C008  FFD9         	movff	utoa@buf,fsr2l
 32338  007C6A  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32339  007C6E  0E00               	movlw	0
 32340  007C70  6EDF               	movwf	indf2,c
 32341  007C72  0608               	decf	utoa@buf,f,c
 32342  007C74  A0D8               	btfss	status,0,c
 32343  007C76  0609               	decf	utoa@buf+1,f,c
 32344  007C78  C00A  F001         	movff	utoa@val,___lwmod@dividend
 32345  007C7C  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 32346  007C80  C00C  F003         	movff	utoa@base,___lwmod@divisor
 32347  007C84  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 32348  007C88  EC6C  F04B         	call	___lwmod	;wreg free
 32349  007C8C  5001               	movf	?___lwmod,w,c
 32350  007C8E  6E10               	movwf	utoa@c,c
 32351  007C90  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 32352  007C94  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 32353  007C98  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32354  007C9C  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32355  007CA0  EC92  F049         	call	___lwdiv	;wreg free
 32356  007CA4  C001  F00A         	movff	?___lwdiv,utoa@val
 32357  007CA8  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 32358  007CAC  0E09               	movlw	9
 32359  007CAE  6410               	cpfsgt	utoa@c,c
 32360  007CB0  D002               	goto	l3802
 32361  007CB2  0E07               	movlw	7
 32362  007CB4  2610               	addwf	utoa@c,f,c
 32363  007CB6                     l3802:
 32364  007CB6  0E30               	movlw	48
 32365  007CB8  2610               	addwf	utoa@c,f,c
 32366  007CBA  C008  FFD9         	movff	utoa@buf,fsr2l
 32367  007CBE  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32368  007CC2  C010  FFDF         	movff	utoa@c,indf2
 32369  007CC6  0608               	decf	utoa@buf,f,c
 32370  007CC8  A0D8               	btfss	status,0,c
 32371  007CCA  0609               	decf	utoa@buf+1,f,c
 32372  007CCC  500A               	movf	utoa@val,w,c
 32373  007CCE  100B               	iorwf	utoa@val+1,w,c
 32374  007CD0  A4D8               	btfss	status,2,c
 32375  007CD2  D7D2               	goto	l3801
 32376                           
 32377                           ;	Return value of _utoa is never used
 32378  007CD4  4A08               	infsnz	utoa@buf,f,c
 32379  007CD6  2A09               	incf	utoa@buf+1,f,c
 32380  007CD8  0012               	return	
 32381  007CDA                     __end_of_utoa:
 32382                           	opt stack 0
 32383                           tosu	equ	0xFFF
 32384                           tosh	equ	0xFFE
 32385                           tosl	equ	0xFFD
 32386                           pclath	equ	0xFFA
 32387                           tblptru	equ	0xFF8
 32388                           tblptrh	equ	0xFF7
 32389                           tblptrl	equ	0xFF6
 32390                           tablat	equ	0xFF5
 32391                           prodh	equ	0xFF4
 32392                           prodl	equ	0xFF3
 32393                           intcon	equ	0xFF2
 32394                           intcon2	equ	0xFF1
 32395                           intcon3	equ	0xFF0
 32396                           indf0	equ	0xFEF
 32397                           postinc0	equ	0xFEE
 32398                           fsr0h	equ	0xFEA
 32399                           fsr0l	equ	0xFE9
 32400                           wreg	equ	0xFE8
 32401                           indf1	equ	0xFE7
 32402                           postdec1	equ	0xFE5
 32403                           plusw1	equ	0xFE3
 32404                           fsr1h	equ	0xFE2
 32405                           fsr1l	equ	0xFE1
 32406                           indf2	equ	0xFDF
 32407                           postinc2	equ	0xFDE
 32408                           postdec2	equ	0xFDD
 32409                           plusw2	equ	0xFDB
 32410                           fsr2h	equ	0xFDA
 32411                           fsr2l	equ	0xFD9
 32412                           status	equ	0xFD8
 32413                           
 32414 ;; *************** function ___lwmod *****************
 32415 ;; Defined at:
 32416 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 32417 ;; Parameters:    Size  Location     Type
 32418 ;;  dividend        2    0[COMRAM] unsigned int 
 32419 ;;  divisor         2    2[COMRAM] unsigned int 
 32420 ;; Auto vars:     Size  Location     Type
 32421 ;;  counter         1    4[COMRAM] unsigned char 
 32422 ;; Return value:  Size  Location     Type
 32423 ;;                  2    0[COMRAM] unsigned int 
 32424 ;; Registers used:
 32425 ;;		wreg, status,2, status,0
 32426 ;; Tracked objects:
 32427 ;;		On entry : 0/0
 32428 ;;		On exit  : 0/0
 32429 ;;		Unchanged: 0/0
 32430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32434 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32435 ;;Total ram usage:        5 bytes
 32436 ;; Hardware stack levels used:    1
 32437 ;; This function calls:
 32438 ;;		Nothing
 32439 ;; This function is called by:
 32440 ;;		_utoa
 32441 ;; This function uses a non-reentrant model
 32442 ;;
 32443                           
 32444                           	psect	text157
 32445  0096D8                     __ptext157:
 32446                           	opt stack 0
 32447  0096D8                     ___lwmod:
 32448                           	opt stack 22
 32449                           
 32450                           ;incstack = 0
 32451  0096D8  5003               	movf	___lwmod@divisor,w,c
 32452  0096DA  1004               	iorwf	___lwmod@divisor+1,w,c
 32453  0096DC  B4D8               	btfsc	status,2,c
 32454  0096DE  D018               	goto	l3626
 32455  0096E0  0E01               	movlw	1
 32456  0096E2  6E05               	movwf	___lwmod@counter,c
 32457  0096E4  D004               	goto	l3621
 32458  0096E6  90D8               	bcf	status,0,c
 32459  0096E8  3603               	rlcf	___lwmod@divisor,f,c
 32460  0096EA  3604               	rlcf	___lwmod@divisor+1,f,c
 32461  0096EC  2A05               	incf	___lwmod@counter,f,c
 32462  0096EE                     l3621:
 32463  0096EE  AE04               	btfss	___lwmod@divisor+1,7,c
 32464  0096F0  D7FA               	goto	l3622
 32465  0096F2                     u7600:
 32466  0096F2  5003               	movf	___lwmod@divisor,w,c
 32467  0096F4  5C01               	subwf	___lwmod@dividend,w,c
 32468  0096F6  5004               	movf	___lwmod@divisor+1,w,c
 32469  0096F8  5802               	subwfb	___lwmod@dividend+1,w,c
 32470  0096FA  A0D8               	btfss	status,0,c
 32471  0096FC  D004               	goto	l3625
 32472  0096FE  5003               	movf	___lwmod@divisor,w,c
 32473  009700  5E01               	subwf	___lwmod@dividend,f,c
 32474  009702  5004               	movf	___lwmod@divisor+1,w,c
 32475  009704  5A02               	subwfb	___lwmod@dividend+1,f,c
 32476  009706                     l3625:
 32477  009706  90D8               	bcf	status,0,c
 32478  009708  3204               	rrcf	___lwmod@divisor+1,f,c
 32479  00970A  3203               	rrcf	___lwmod@divisor,f,c
 32480  00970C  2E05               	decfsz	___lwmod@counter,f,c
 32481  00970E  D7F1               	goto	u7600
 32482  009710                     l3626:
 32483  009710  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32484  009714  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32485  009718  0012               	return		;funcret
 32486  00971A                     __end_of___lwmod:
 32487                           	opt stack 0
 32488                           tosu	equ	0xFFF
 32489                           tosh	equ	0xFFE
 32490                           tosl	equ	0xFFD
 32491                           pclath	equ	0xFFA
 32492                           tblptru	equ	0xFF8
 32493                           tblptrh	equ	0xFF7
 32494                           tblptrl	equ	0xFF6
 32495                           tablat	equ	0xFF5
 32496                           prodh	equ	0xFF4
 32497                           prodl	equ	0xFF3
 32498                           intcon	equ	0xFF2
 32499                           intcon2	equ	0xFF1
 32500                           intcon3	equ	0xFF0
 32501                           indf0	equ	0xFEF
 32502                           postinc0	equ	0xFEE
 32503                           fsr0h	equ	0xFEA
 32504                           fsr0l	equ	0xFE9
 32505                           wreg	equ	0xFE8
 32506                           indf1	equ	0xFE7
 32507                           postdec1	equ	0xFE5
 32508                           plusw1	equ	0xFE3
 32509                           fsr1h	equ	0xFE2
 32510                           fsr1l	equ	0xFE1
 32511                           indf2	equ	0xFDF
 32512                           postinc2	equ	0xFDE
 32513                           postdec2	equ	0xFDD
 32514                           plusw2	equ	0xFDB
 32515                           fsr2h	equ	0xFDA
 32516                           fsr2l	equ	0xFD9
 32517                           status	equ	0xFD8
 32518                           
 32519 ;; *************** function ___lwdiv *****************
 32520 ;; Defined at:
 32521 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32522 ;; Parameters:    Size  Location     Type
 32523 ;;  dividend        2    0[COMRAM] unsigned int 
 32524 ;;  divisor         2    2[COMRAM] unsigned int 
 32525 ;; Auto vars:     Size  Location     Type
 32526 ;;  quotient        2    4[COMRAM] unsigned int 
 32527 ;;  counter         1    6[COMRAM] unsigned char 
 32528 ;; Return value:  Size  Location     Type
 32529 ;;                  2    0[COMRAM] unsigned int 
 32530 ;; Registers used:
 32531 ;;		wreg, status,2, status,0
 32532 ;; Tracked objects:
 32533 ;;		On entry : 0/0
 32534 ;;		On exit  : 0/0
 32535 ;;		Unchanged: 0/0
 32536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32538 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32541 ;;Total ram usage:        7 bytes
 32542 ;; Hardware stack levels used:    1
 32543 ;; This function calls:
 32544 ;;		Nothing
 32545 ;; This function is called by:
 32546 ;;		_utoa
 32547 ;; This function uses a non-reentrant model
 32548 ;;
 32549                           
 32550                           	psect	text158
 32551  009324                     __ptext158:
 32552                           	opt stack 0
 32553  009324                     ___lwdiv:
 32554                           	opt stack 22
 32555                           
 32556                           ;incstack = 0
 32557  009324  0E00               	movlw	0
 32558  009326  6E06               	movwf	___lwdiv@quotient+1,c
 32559  009328  0E00               	movlw	0
 32560  00932A  6E05               	movwf	___lwdiv@quotient,c
 32561  00932C  5003               	movf	___lwdiv@divisor,w,c
 32562  00932E  1004               	iorwf	___lwdiv@divisor+1,w,c
 32563  009330  B4D8               	btfsc	status,2,c
 32564  009332  D01C               	goto	l3616
 32565  009334  0E01               	movlw	1
 32566  009336  6E07               	movwf	___lwdiv@counter,c
 32567  009338  D004               	goto	l3611
 32568  00933A  90D8               	bcf	status,0,c
 32569  00933C  3603               	rlcf	___lwdiv@divisor,f,c
 32570  00933E  3604               	rlcf	___lwdiv@divisor+1,f,c
 32571  009340  2A07               	incf	___lwdiv@counter,f,c
 32572  009342                     l3611:
 32573  009342  AE04               	btfss	___lwdiv@divisor+1,7,c
 32574  009344  D7FA               	goto	l3612
 32575  009346                     u7570:
 32576  009346  90D8               	bcf	status,0,c
 32577  009348  3605               	rlcf	___lwdiv@quotient,f,c
 32578  00934A  3606               	rlcf	___lwdiv@quotient+1,f,c
 32579  00934C  5003               	movf	___lwdiv@divisor,w,c
 32580  00934E  5C01               	subwf	___lwdiv@dividend,w,c
 32581  009350  5004               	movf	___lwdiv@divisor+1,w,c
 32582  009352  5802               	subwfb	___lwdiv@dividend+1,w,c
 32583  009354  A0D8               	btfss	status,0,c
 32584  009356  D005               	goto	l3615
 32585  009358  5003               	movf	___lwdiv@divisor,w,c
 32586  00935A  5E01               	subwf	___lwdiv@dividend,f,c
 32587  00935C  5004               	movf	___lwdiv@divisor+1,w,c
 32588  00935E  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32589  009360  8005               	bsf	___lwdiv@quotient,0,c
 32590  009362                     l3615:
 32591  009362  90D8               	bcf	status,0,c
 32592  009364  3204               	rrcf	___lwdiv@divisor+1,f,c
 32593  009366  3203               	rrcf	___lwdiv@divisor,f,c
 32594  009368  2E07               	decfsz	___lwdiv@counter,f,c
 32595  00936A  D7ED               	goto	u7570
 32596  00936C                     l3616:
 32597  00936C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32598  009370  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32599  009374  0012               	return		;funcret
 32600  009376                     __end_of___lwdiv:
 32601                           	opt stack 0
 32602                           tosu	equ	0xFFF
 32603                           tosh	equ	0xFFE
 32604                           tosl	equ	0xFFD
 32605                           pclath	equ	0xFFA
 32606                           tblptru	equ	0xFF8
 32607                           tblptrh	equ	0xFF7
 32608                           tblptrl	equ	0xFF6
 32609                           tablat	equ	0xFF5
 32610                           prodh	equ	0xFF4
 32611                           prodl	equ	0xFF3
 32612                           intcon	equ	0xFF2
 32613                           intcon2	equ	0xFF1
 32614                           intcon3	equ	0xFF0
 32615                           indf0	equ	0xFEF
 32616                           postinc0	equ	0xFEE
 32617                           fsr0h	equ	0xFEA
 32618                           fsr0l	equ	0xFE9
 32619                           wreg	equ	0xFE8
 32620                           indf1	equ	0xFE7
 32621                           postdec1	equ	0xFE5
 32622                           plusw1	equ	0xFE3
 32623                           fsr1h	equ	0xFE2
 32624                           fsr1l	equ	0xFE1
 32625                           indf2	equ	0xFDF
 32626                           postinc2	equ	0xFDE
 32627                           postdec2	equ	0xFDD
 32628                           plusw2	equ	0xFDB
 32629                           fsr2h	equ	0xFDA
 32630                           fsr2l	equ	0xFD9
 32631                           status	equ	0xFD8
 32632                           
 32633 ;; *************** function _i2c_eeprom_writeByte *****************
 32634 ;; Defined at:
 32635 ;;		line 380 in file "i2c.c"
 32636 ;; Parameters:    Size  Location     Type
 32637 ;;  address         2   10[COMRAM] unsigned int 
 32638 ;;  data            1   12[COMRAM] unsigned char 
 32639 ;; Auto vars:     Size  Location     Type
 32640 ;;  dat             2   16[COMRAM] unsigned char [2]
 32641 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32642 ;; Return value:  Size  Location     Type
 32643 ;;                  1    wreg      void 
 32644 ;; Registers used:
 32645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32646 ;; Tracked objects:
 32647 ;;		On entry : 0/0
 32648 ;;		On exit  : 0/0
 32649 ;;		Unchanged: 0/0
 32650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32651 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32653 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32654 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32655 ;;Total ram usage:        9 bytes
 32656 ;; Hardware stack levels used:    1
 32657 ;; Hardware stack levels required when called:    2
 32658 ;; This function calls:
 32659 ;;		__i2c_write
 32660 ;;		_i2c_set_frequency
 32661 ;; This function is called by:
 32662 ;;		__normal_mode
 32663 ;;		__ui_encoder
 32664 ;;		__parse_command_short
 32665 ;; This function uses a non-reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text159
 32669  00971A                     __ptext159:
 32670                           	opt stack 0
 32671  00971A                     _i2c_eeprom_writeByte:
 32672                           	opt stack 26
 32673                           
 32674                           ;i2c.c: 382: uint8_t slave_address;;i2c.c: 383: uint8_t dat[2];;i2c.c: 385: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 32675                           
 32676                           ;incstack = 0
 32677  00971A  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32678  00971E  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32679  009722  0E07               	movlw	7
 32680  009724  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32681  009726                     u11655:
 32682  009726  90D8               	bcf	status,0,c
 32683  009728  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32684  00972A  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32685  00972C  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32686  00972E  D7FB               	goto	u11655
 32687  009730  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32688  009732  0B0E               	andlw	14
 32689  009734  09A0               	iorlw	160
 32690  009736  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32691                           
 32692                           ;i2c.c: 386: dat[0] = address & 0xFF;
 32693  009738  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32694                           
 32695                           ;i2c.c: 387: dat[1] = data;
 32696  00973C  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32697                           
 32698                           ;i2c.c: 390: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 32699  009740  0E02               	movlw	2
 32700  009742  ECC3  F04D         	call	_i2c_set_frequency
 32701                           
 32702                           ;i2c.c: 392: _i2c_write(slave_address, &dat[0], 2);
 32703  009746  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32704  009748  6E06               	movwf	__i2c_write@data,c
 32705  00974A  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32706  00974C  6E07               	movwf	__i2c_write@data+1,c
 32707  00974E  0E02               	movlw	2
 32708  009750  6E08               	movwf	__i2c_write@length,c
 32709  009752  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32710  009754  EC57  F04A         	call	__i2c_write
 32711  009758  0012               	return		;funcret
 32712  00975A                     __end_of_i2c_eeprom_writeByte:
 32713                           	opt stack 0
 32714                           tosu	equ	0xFFF
 32715                           tosh	equ	0xFFE
 32716                           tosl	equ	0xFFD
 32717                           pclath	equ	0xFFA
 32718                           tblptru	equ	0xFF8
 32719                           tblptrh	equ	0xFF7
 32720                           tblptrl	equ	0xFF6
 32721                           tablat	equ	0xFF5
 32722                           prodh	equ	0xFF4
 32723                           prodl	equ	0xFF3
 32724                           intcon	equ	0xFF2
 32725                           intcon2	equ	0xFF1
 32726                           intcon3	equ	0xFF0
 32727                           indf0	equ	0xFEF
 32728                           postinc0	equ	0xFEE
 32729                           fsr0h	equ	0xFEA
 32730                           fsr0l	equ	0xFE9
 32731                           wreg	equ	0xFE8
 32732                           indf1	equ	0xFE7
 32733                           postdec1	equ	0xFE5
 32734                           plusw1	equ	0xFE3
 32735                           fsr1h	equ	0xFE2
 32736                           fsr1l	equ	0xFE1
 32737                           indf2	equ	0xFDF
 32738                           postinc2	equ	0xFDE
 32739                           postdec2	equ	0xFDD
 32740                           plusw2	equ	0xFDB
 32741                           fsr2h	equ	0xFDA
 32742                           fsr2l	equ	0xFD9
 32743                           status	equ	0xFD8
 32744                           
 32745 ;; *************** function _i2c_set_frequency *****************
 32746 ;; Defined at:
 32747 ;;		line 131 in file "i2c.c"
 32748 ;; Parameters:    Size  Location     Type
 32749 ;;  frequency       1    wreg     enum E6622
 32750 ;; Auto vars:     Size  Location     Type
 32751 ;;  frequency       1    0[COMRAM] enum E6622
 32752 ;; Return value:  Size  Location     Type
 32753 ;;                  1    wreg      void 
 32754 ;; Registers used:
 32755 ;;		wreg, status,2, status,0
 32756 ;; Tracked objects:
 32757 ;;		On entry : 0/0
 32758 ;;		On exit  : 0/0
 32759 ;;		Unchanged: 0/0
 32760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32765 ;;Total ram usage:        1 bytes
 32766 ;; Hardware stack levels used:    1
 32767 ;; This function calls:
 32768 ;;		Nothing
 32769 ;; This function is called by:
 32770 ;;		_i2c_init
 32771 ;;		__ic2_display_set_address
 32772 ;;		_i2c_display_send_init_sequence
 32773 ;;		_i2c_display_cursor
 32774 ;;		_i2c_display_write_fixed
 32775 ;;		_i2c_digipot_reset_on
 32776 ;;		_i2c_digipot_reset_off
 32777 ;;		_i2c_digipot_backlight
 32778 ;;		_i2c_eeprom_writeByte
 32779 ;;		_i2c_eeprom_readByte
 32780 ;;		_i2c_display_write
 32781 ;;		_i2c_digipot_set_defaults
 32782 ;;		_i2c_eeprom_write
 32783 ;;		_i2c_eeprom_read
 32784 ;; This function uses a non-reentrant model
 32785 ;;
 32786                           
 32787                           	psect	text160
 32788  009B86                     __ptext160:
 32789                           	opt stack 0
 32790  009B86                     _i2c_set_frequency:
 32791                           	opt stack 28
 32792                           
 32793                           ;incstack = 0
 32794                           ;i2c_set_frequency@frequency stored from wreg
 32795  009B86  6E01               	movwf	i2c_set_frequency@frequency,c
 32796                           
 32797                           ;i2c.c: 133: switch(frequency)
 32798  009B88  D007               	goto	l1191
 32799  009B8A                     
 32800                           ;i2c.c: 136: SSP1ADD = 119;
 32801  009B8A  0E77               	movlw	119
 32802  009B8C  D003               	goto	L43
 32803  009B8E                     
 32804                           ;i2c.c: 139: SSP1ADD = 59;
 32805  009B8E  0E3B               	movlw	59
 32806  009B90  D001               	goto	L43
 32807  009B92                     
 32808                           ;i2c.c: 142: SSP1ADD = 29;
 32809  009B92  0E1D               	movlw	29
 32810  009B94                     L43:
 32811  009B94  6EC8               	movwf	4040,c	;volatile
 32812                           
 32813                           ;i2c.c: 144: }
 32814                           
 32815                           ;i2c.c: 143: break;
 32816  009B96  D00A               	goto	l1193
 32817  009B98                     l1191:
 32818  009B98  5001               	movf	i2c_set_frequency@frequency,w,c
 32819                           
 32820                           ; Switch size 1, requested type "space"
 32821                           ; Number of cases is 3, Range of values is 0 to 2
 32822                           ; switch strategies available:
 32823                           ; Name         Instructions Cycles
 32824                           ; simple_byte           10     6 (average)
 32825                           ;	Chosen strategy is simple_byte
 32826  009B9A  0A00               	xorlw	0	; case 0
 32827  009B9C  B4D8               	btfsc	status,2,c
 32828  009B9E  D7F5               	goto	l1192
 32829  009BA0  0A01               	xorlw	1	; case 1
 32830  009BA2  B4D8               	btfsc	status,2,c
 32831  009BA4  D7F4               	goto	l1194
 32832  009BA6  0A03               	xorlw	3	; case 2
 32833  009BA8  B4D8               	btfsc	status,2,c
 32834  009BAA  D7F3               	goto	l1195
 32835  009BAC                     l1193:
 32836                           
 32837                           ;i2c.c: 146: i2c_frequency = frequency;
 32838  009BAC  C001  F186         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32839  009BB0  0012               	return		;funcret
 32840  009BB2                     __end_of_i2c_set_frequency:
 32841                           	opt stack 0
 32842                           tosu	equ	0xFFF
 32843                           tosh	equ	0xFFE
 32844                           tosl	equ	0xFFD
 32845                           pclath	equ	0xFFA
 32846                           tblptru	equ	0xFF8
 32847                           tblptrh	equ	0xFF7
 32848                           tblptrl	equ	0xFF6
 32849                           tablat	equ	0xFF5
 32850                           prodh	equ	0xFF4
 32851                           prodl	equ	0xFF3
 32852                           intcon	equ	0xFF2
 32853                           intcon2	equ	0xFF1
 32854                           intcon3	equ	0xFF0
 32855                           indf0	equ	0xFEF
 32856                           postinc0	equ	0xFEE
 32857                           fsr0h	equ	0xFEA
 32858                           fsr0l	equ	0xFE9
 32859                           wreg	equ	0xFE8
 32860                           indf1	equ	0xFE7
 32861                           postdec1	equ	0xFE5
 32862                           plusw1	equ	0xFE3
 32863                           fsr1h	equ	0xFE2
 32864                           fsr1l	equ	0xFE1
 32865                           indf2	equ	0xFDF
 32866                           postinc2	equ	0xFDE
 32867                           postdec2	equ	0xFDD
 32868                           plusw2	equ	0xFDB
 32869                           fsr2h	equ	0xFDA
 32870                           fsr2l	equ	0xFD9
 32871                           status	equ	0xFD8
 32872                           
 32873 ;; *************** function __i2c_write *****************
 32874 ;; Defined at:
 32875 ;;		line 150 in file "i2c.c"
 32876 ;; Parameters:    Size  Location     Type
 32877 ;;  slave_addres    1    wreg     unsigned char 
 32878 ;;  data            2    5[COMRAM] PTR unsigned char 
 32879 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32880 ;;		 -> i2c_digipot_set_defaults@data_array(2), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2)
      +, i2c_digipot_reset_on@data_array(2), 
 32881 ;;		 -> i2c_display_send_init_sequence@init_sequence(9), _ic2_display_set_address@data_array(2), 
 32882 ;;  length          1    7[COMRAM] unsigned char 
 32883 ;; Auto vars:     Size  Location     Type
 32884 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32885 ;;  cntr            1    9[COMRAM] unsigned char 
 32886 ;; Return value:  Size  Location     Type
 32887 ;;                  1    wreg      void 
 32888 ;; Registers used:
 32889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32890 ;; Tracked objects:
 32891 ;;		On entry : 0/0
 32892 ;;		On exit  : 0/0
 32893 ;;		Unchanged: 0/0
 32894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32898 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32899 ;;Total ram usage:        5 bytes
 32900 ;; Hardware stack levels used:    1
 32901 ;; Hardware stack levels required when called:    1
 32902 ;; This function calls:
 32903 ;;		__i2c_send
 32904 ;;		__i2c_start
 32905 ;;		__i2c_stop
 32906 ;;		__i2c_wait_idle
 32907 ;; This function is called by:
 32908 ;;		__ic2_display_set_address
 32909 ;;		_i2c_display_send_init_sequence
 32910 ;;		_i2c_digipot_reset_on
 32911 ;;		_i2c_digipot_reset_off
 32912 ;;		_i2c_digipot_backlight
 32913 ;;		_i2c_eeprom_writeByte
 32914 ;;		_i2c_eeprom_readByte
 32915 ;;		_i2c_digipot_set_defaults
 32916 ;;		_i2c_eeprom_write
 32917 ;;		_i2c_eeprom_read
 32918 ;; This function uses a non-reentrant model
 32919 ;;
 32920                           
 32921                           	psect	text161
 32922  0094AE                     __ptext161:
 32923                           	opt stack 0
 32924  0094AE                     __i2c_write:
 32925                           	opt stack 27
 32926                           
 32927                           ;incstack = 0
 32928                           ;__i2c_write@slave_address stored from wreg
 32929  0094AE  6E09               	movwf	__i2c_write@slave_address,c
 32930                           
 32931                           ;i2c.c: 152: uint8_t cntr;;i2c.c: 154: _i2c_wait_idle();
 32932  0094B0  EC61  F047         	call	__i2c_wait_idle	;wreg free
 32933                           
 32934                           ;i2c.c: 155: _i2c_start();
 32935  0094B4  EC80  F050         	call	__i2c_start	;wreg free
 32936                           
 32937                           ;i2c.c: 156: _i2c_wait_idle();
 32938  0094B8  EC61  F047         	call	__i2c_wait_idle	;wreg free
 32939                           
 32940                           ;i2c.c: 157: _i2c_send(slave_address);
 32941  0094BC  5009               	movf	__i2c_write@slave_address,w,c
 32942  0094BE  EC84  F050         	call	__i2c_send
 32943                           
 32944                           ;i2c.c: 158: _i2c_wait_idle();
 32945  0094C2  EC61  F047         	call	__i2c_wait_idle	;wreg free
 32946                           
 32947                           ;i2c.c: 160: for(cntr=0; cntr<length; ++cntr)
 32948  0094C6  0E00               	movlw	0
 32949  0094C8  6E0A               	movwf	__i2c_write@cntr,c
 32950  0094CA  D00E               	goto	l1199
 32951  0094CC                     
 32952                           ;i2c.c: 161: {;i2c.c: 162: _i2c_send(data[cntr]);
 32953  0094CC  500A               	movf	__i2c_write@cntr,w,c
 32954  0094CE  0D01               	mullw	1
 32955  0094D0  50F3               	movf	prodl,w,c
 32956  0094D2  2406               	addwf	__i2c_write@data,w,c
 32957  0094D4  6ED9               	movwf	fsr2l,c
 32958  0094D6  50F4               	movf	prodh,w,c
 32959  0094D8  2007               	addwfc	__i2c_write@data+1,w,c
 32960  0094DA  6EDA               	movwf	fsr2h,c
 32961  0094DC  50DF               	movf	indf2,w,c
 32962  0094DE  EC84  F050         	call	__i2c_send
 32963                           
 32964                           ;i2c.c: 163: _i2c_wait_idle();
 32965  0094E2  EC61  F047         	call	__i2c_wait_idle	;wreg free
 32966  0094E6  2A0A               	incf	__i2c_write@cntr,f,c
 32967  0094E8                     l1199:
 32968  0094E8  5008               	movf	__i2c_write@length,w,c
 32969  0094EA  5C0A               	subwf	__i2c_write@cntr,w,c
 32970  0094EC  A0D8               	btfss	status,0,c
 32971  0094EE  D7EE               	goto	l1200
 32972                           
 32973                           ;i2c.c: 164: };i2c.c: 166: _i2c_stop();
 32974  0094F0  EC7C  F050         	call	__i2c_stop	;wreg free
 32975  0094F4  0012               	return		;funcret
 32976  0094F6                     __end_of__i2c_write:
 32977                           	opt stack 0
 32978                           tosu	equ	0xFFF
 32979                           tosh	equ	0xFFE
 32980                           tosl	equ	0xFFD
 32981                           pclath	equ	0xFFA
 32982                           tblptru	equ	0xFF8
 32983                           tblptrh	equ	0xFF7
 32984                           tblptrl	equ	0xFF6
 32985                           tablat	equ	0xFF5
 32986                           prodh	equ	0xFF4
 32987                           prodl	equ	0xFF3
 32988                           intcon	equ	0xFF2
 32989                           intcon2	equ	0xFF1
 32990                           intcon3	equ	0xFF0
 32991                           indf0	equ	0xFEF
 32992                           postinc0	equ	0xFEE
 32993                           fsr0h	equ	0xFEA
 32994                           fsr0l	equ	0xFE9
 32995                           wreg	equ	0xFE8
 32996                           indf1	equ	0xFE7
 32997                           postdec1	equ	0xFE5
 32998                           plusw1	equ	0xFE3
 32999                           fsr1h	equ	0xFE2
 33000                           fsr1l	equ	0xFE1
 33001                           indf2	equ	0xFDF
 33002                           postinc2	equ	0xFDE
 33003                           postdec2	equ	0xFDD
 33004                           plusw2	equ	0xFDB
 33005                           fsr2h	equ	0xFDA
 33006                           fsr2l	equ	0xFD9
 33007                           status	equ	0xFD8
 33008                           
 33009 ;; *************** function __i2c_wait_idle *****************
 33010 ;; Defined at:
 33011 ;;		line 56 in file "i2c.c"
 33012 ;; Parameters:    Size  Location     Type
 33013 ;;		None
 33014 ;; Auto vars:     Size  Location     Type
 33015 ;;		None
 33016 ;; Return value:  Size  Location     Type
 33017 ;;                  1    wreg      void 
 33018 ;; Registers used:
 33019 ;;		wreg, status,2, status,0
 33020 ;; Tracked objects:
 33021 ;;		On entry : 0/0
 33022 ;;		On exit  : 0/0
 33023 ;;		Unchanged: 0/0
 33024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33027 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33029 ;;Total ram usage:        5 bytes
 33030 ;; Hardware stack levels used:    1
 33031 ;; This function calls:
 33032 ;;		Nothing
 33033 ;; This function is called by:
 33034 ;;		__i2c_write
 33035 ;;		__i2c_read
 33036 ;;		_i2c_display_write_fixed
 33037 ;;		_i2c_display_write
 33038 ;; This function uses a non-reentrant model
 33039 ;;
 33040                           
 33041                           	psect	text162
 33042  008EC2                     __ptext162:
 33043                           	opt stack 0
 33044  008EC2                     __i2c_wait_idle:
 33045                           	opt stack 27
 33046                           
 33047                           ;i2c.c: 58: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 33048                           
 33049                           ;incstack = 0
 33050  008EC2  A4C7               	btfss	4039,2,c	;volatile
 33051  008EC4  D003               	goto	u7670
 33052  008EC6  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33053  008EC8  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33054  008ECA  D001               	goto	u7678
 33055  008ECC                     u7670:
 33056  008ECC  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33057  008ECE                     u7678:
 33058  008ECE  A0C5               	btfss	4037,0,c	;volatile
 33059  008ED0  D003               	goto	u7680
 33060  008ED2  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33061  008ED4  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33062  008ED6  D001               	goto	u7688
 33063  008ED8                     u7680:
 33064  008ED8  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33065  008EDA                     u7688:
 33066  008EDA  A2C5               	btfss	4037,1,c	;volatile
 33067  008EDC  D003               	goto	u7690
 33068  008EDE  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33069  008EE0  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33070  008EE2  D001               	goto	u7698
 33071  008EE4                     u7690:
 33072  008EE4  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33073  008EE6                     u7698:
 33074  008EE6  A4C5               	btfss	4037,2,c	;volatile
 33075  008EE8  D003               	goto	u7700
 33076  008EEA  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33077  008EEC  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33078  008EEE  D001               	goto	u7708
 33079  008EF0                     u7700:
 33080  008EF0  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33081  008EF2                     u7708:
 33082  008EF2  A6C5               	btfss	4037,3,c	;volatile
 33083  008EF4  D003               	goto	u7710
 33084  008EF6  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33085  008EF8  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33086  008EFA  D001               	goto	u7718
 33087  008EFC                     u7710:
 33088  008EFC  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33089  008EFE                     u7718:
 33090  008EFE  A8C5               	btfss	4037,4,c	;volatile
 33091  008F00  D002               	goto	u7720
 33092  008F02  0E01               	movlw	1
 33093  008F04  D001               	goto	u7726
 33094  008F06                     u7720:
 33095  008F06  0E00               	movlw	0
 33096  008F08                     u7726:
 33097  008F08  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33098  008F0A  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33099  008F0C  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33100  008F0E  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33101  008F10  1001               	iorwf	??__i2c_wait_idle,w,c
 33102  008F12  0900               	iorlw	0
 33103  008F14  B4D8               	btfsc	status,2,c
 33104  008F16  0012               	return	
 33105  008F18  D7D4               	goto	__i2c_wait_idle
 33106  008F1A                     __end_of__i2c_wait_idle:
 33107                           	opt stack 0
 33108                           tosu	equ	0xFFF
 33109                           tosh	equ	0xFFE
 33110                           tosl	equ	0xFFD
 33111                           pclath	equ	0xFFA
 33112                           tblptru	equ	0xFF8
 33113                           tblptrh	equ	0xFF7
 33114                           tblptrl	equ	0xFF6
 33115                           tablat	equ	0xFF5
 33116                           prodh	equ	0xFF4
 33117                           prodl	equ	0xFF3
 33118                           intcon	equ	0xFF2
 33119                           intcon2	equ	0xFF1
 33120                           intcon3	equ	0xFF0
 33121                           indf0	equ	0xFEF
 33122                           postinc0	equ	0xFEE
 33123                           fsr0h	equ	0xFEA
 33124                           fsr0l	equ	0xFE9
 33125                           wreg	equ	0xFE8
 33126                           indf1	equ	0xFE7
 33127                           postdec1	equ	0xFE5
 33128                           plusw1	equ	0xFE3
 33129                           fsr1h	equ	0xFE2
 33130                           fsr1l	equ	0xFE1
 33131                           indf2	equ	0xFDF
 33132                           postinc2	equ	0xFDE
 33133                           postdec2	equ	0xFDD
 33134                           plusw2	equ	0xFDB
 33135                           fsr2h	equ	0xFDA
 33136                           fsr2l	equ	0xFD9
 33137                           status	equ	0xFD8
 33138                           
 33139 ;; *************** function __i2c_stop *****************
 33140 ;; Defined at:
 33141 ;;		line 83 in file "i2c.c"
 33142 ;; Parameters:    Size  Location     Type
 33143 ;;		None
 33144 ;; Auto vars:     Size  Location     Type
 33145 ;;		None
 33146 ;; Return value:  Size  Location     Type
 33147 ;;                  1    wreg      void 
 33148 ;; Registers used:
 33149 ;;		None
 33150 ;; Tracked objects:
 33151 ;;		On entry : 0/0
 33152 ;;		On exit  : 0/0
 33153 ;;		Unchanged: 0/0
 33154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33159 ;;Total ram usage:        0 bytes
 33160 ;; Hardware stack levels used:    1
 33161 ;; This function calls:
 33162 ;;		Nothing
 33163 ;; This function is called by:
 33164 ;;		__i2c_write
 33165 ;;		__i2c_read
 33166 ;;		_i2c_display_write_fixed
 33167 ;;		_i2c_display_write
 33168 ;; This function uses a non-reentrant model
 33169 ;;
 33170                           
 33171                           	psect	text163
 33172  00A0F8                     __ptext163:
 33173                           	opt stack 0
 33174  00A0F8                     __i2c_stop:
 33175                           	opt stack 27
 33176                           
 33177                           ;i2c.c: 85: SSP1CON2bits.PEN = 1;
 33178                           
 33179                           ;incstack = 0
 33180  00A0F8  84C5               	bsf	4037,2,c	;volatile
 33181  00A0FA  A4C5               	btfss	4037,2,c	;volatile
 33182  00A0FC  0012               	return	
 33183  00A0FE  D7FD               	goto	l1165
 33184  00A100                     __end_of__i2c_stop:
 33185                           	opt stack 0
 33186                           tosu	equ	0xFFF
 33187                           tosh	equ	0xFFE
 33188                           tosl	equ	0xFFD
 33189                           pclath	equ	0xFFA
 33190                           tblptru	equ	0xFF8
 33191                           tblptrh	equ	0xFF7
 33192                           tblptrl	equ	0xFF6
 33193                           tablat	equ	0xFF5
 33194                           prodh	equ	0xFF4
 33195                           prodl	equ	0xFF3
 33196                           intcon	equ	0xFF2
 33197                           intcon2	equ	0xFF1
 33198                           intcon3	equ	0xFF0
 33199                           indf0	equ	0xFEF
 33200                           postinc0	equ	0xFEE
 33201                           fsr0h	equ	0xFEA
 33202                           fsr0l	equ	0xFE9
 33203                           wreg	equ	0xFE8
 33204                           indf1	equ	0xFE7
 33205                           postdec1	equ	0xFE5
 33206                           plusw1	equ	0xFE3
 33207                           fsr1h	equ	0xFE2
 33208                           fsr1l	equ	0xFE1
 33209                           indf2	equ	0xFDF
 33210                           postinc2	equ	0xFDE
 33211                           postdec2	equ	0xFDD
 33212                           plusw2	equ	0xFDB
 33213                           fsr2h	equ	0xFDA
 33214                           fsr2l	equ	0xFD9
 33215                           status	equ	0xFD8
 33216                           
 33217 ;; *************** function __i2c_start *****************
 33218 ;; Defined at:
 33219 ;;		line 62 in file "i2c.c"
 33220 ;; Parameters:    Size  Location     Type
 33221 ;;		None
 33222 ;; Auto vars:     Size  Location     Type
 33223 ;;		None
 33224 ;; Return value:  Size  Location     Type
 33225 ;;                  1    wreg      void 
 33226 ;; Registers used:
 33227 ;;		None
 33228 ;; Tracked objects:
 33229 ;;		On entry : 0/0
 33230 ;;		On exit  : 0/0
 33231 ;;		Unchanged: 0/0
 33232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33237 ;;Total ram usage:        0 bytes
 33238 ;; Hardware stack levels used:    1
 33239 ;; This function calls:
 33240 ;;		Nothing
 33241 ;; This function is called by:
 33242 ;;		__i2c_write
 33243 ;;		__i2c_read
 33244 ;;		_i2c_display_write_fixed
 33245 ;;		_i2c_display_write
 33246 ;; This function uses a non-reentrant model
 33247 ;;
 33248                           
 33249                           	psect	text164
 33250  00A100                     __ptext164:
 33251                           	opt stack 0
 33252  00A100                     __i2c_start:
 33253                           	opt stack 27
 33254                           
 33255                           ;i2c.c: 64: SSP1CON2bits.SEN=1;
 33256                           
 33257                           ;incstack = 0
 33258  00A100  80C5               	bsf	4037,0,c	;volatile
 33259  00A102  A0C5               	btfss	4037,0,c	;volatile
 33260  00A104  0012               	return	
 33261  00A106  D7FD               	goto	l1150
 33262  00A108                     __end_of__i2c_start:
 33263                           	opt stack 0
 33264                           tosu	equ	0xFFF
 33265                           tosh	equ	0xFFE
 33266                           tosl	equ	0xFFD
 33267                           pclath	equ	0xFFA
 33268                           tblptru	equ	0xFF8
 33269                           tblptrh	equ	0xFF7
 33270                           tblptrl	equ	0xFF6
 33271                           tablat	equ	0xFF5
 33272                           prodh	equ	0xFF4
 33273                           prodl	equ	0xFF3
 33274                           intcon	equ	0xFF2
 33275                           intcon2	equ	0xFF1
 33276                           intcon3	equ	0xFF0
 33277                           indf0	equ	0xFEF
 33278                           postinc0	equ	0xFEE
 33279                           fsr0h	equ	0xFEA
 33280                           fsr0l	equ	0xFE9
 33281                           wreg	equ	0xFE8
 33282                           indf1	equ	0xFE7
 33283                           postdec1	equ	0xFE5
 33284                           plusw1	equ	0xFE3
 33285                           fsr1h	equ	0xFE2
 33286                           fsr1l	equ	0xFE1
 33287                           indf2	equ	0xFDF
 33288                           postinc2	equ	0xFDE
 33289                           postdec2	equ	0xFDD
 33290                           plusw2	equ	0xFDB
 33291                           fsr2h	equ	0xFDA
 33292                           fsr2l	equ	0xFD9
 33293                           status	equ	0xFD8
 33294                           
 33295 ;; *************** function __i2c_send *****************
 33296 ;; Defined at:
 33297 ;;		line 69 in file "i2c.c"
 33298 ;; Parameters:    Size  Location     Type
 33299 ;;  dat             1    wreg     unsigned char 
 33300 ;; Auto vars:     Size  Location     Type
 33301 ;;  dat             1    0[COMRAM] unsigned char 
 33302 ;; Return value:  Size  Location     Type
 33303 ;;                  1    wreg      void 
 33304 ;; Registers used:
 33305 ;;		wreg
 33306 ;; Tracked objects:
 33307 ;;		On entry : 0/0
 33308 ;;		On exit  : 0/0
 33309 ;;		Unchanged: 0/0
 33310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33315 ;;Total ram usage:        1 bytes
 33316 ;; Hardware stack levels used:    1
 33317 ;; This function calls:
 33318 ;;		Nothing
 33319 ;; This function is called by:
 33320 ;;		__i2c_write
 33321 ;;		__i2c_read
 33322 ;;		_i2c_display_write_fixed
 33323 ;;		_i2c_display_write
 33324 ;; This function uses a non-reentrant model
 33325 ;;
 33326                           
 33327                           	psect	text165
 33328  00A108                     __ptext165:
 33329                           	opt stack 0
 33330  00A108                     __i2c_send:
 33331                           	opt stack 27
 33332                           
 33333                           ;incstack = 0
 33334                           ;__i2c_send@dat stored from wreg
 33335  00A108  6E01               	movwf	__i2c_send@dat,c
 33336                           
 33337                           ;i2c.c: 71: SSP1BUF = dat;
 33338  00A10A  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 33339  00A10E  0012               	return		;funcret
 33340  00A110                     __end_of__i2c_send:
 33341                           	opt stack 0
 33342                           tosu	equ	0xFFF
 33343                           tosh	equ	0xFFE
 33344                           tosl	equ	0xFFD
 33345                           pclath	equ	0xFFA
 33346                           tblptru	equ	0xFF8
 33347                           tblptrh	equ	0xFF7
 33348                           tblptrl	equ	0xFF6
 33349                           tablat	equ	0xFF5
 33350                           prodh	equ	0xFF4
 33351                           prodl	equ	0xFF3
 33352                           intcon	equ	0xFF2
 33353                           intcon2	equ	0xFF1
 33354                           intcon3	equ	0xFF0
 33355                           indf0	equ	0xFEF
 33356                           postinc0	equ	0xFEE
 33357                           fsr0h	equ	0xFEA
 33358                           fsr0l	equ	0xFE9
 33359                           wreg	equ	0xFE8
 33360                           indf1	equ	0xFE7
 33361                           postdec1	equ	0xFE5
 33362                           plusw1	equ	0xFE3
 33363                           fsr1h	equ	0xFE2
 33364                           fsr1l	equ	0xFE1
 33365                           indf2	equ	0xFDF
 33366                           postinc2	equ	0xFDE
 33367                           postdec2	equ	0xFDD
 33368                           plusw2	equ	0xFDB
 33369                           fsr2h	equ	0xFDA
 33370                           fsr2l	equ	0xFD9
 33371                           status	equ	0xFD8
 33372                           
 33373 ;; *************** function __parse_command_long *****************
 33374 ;; Defined at:
 33375 ;;		line 546 in file "api.c"
 33376 ;; Parameters:    Size  Location     Type
 33377 ;;  data            2   61[BANK0 ] PTR unsigned char 
 33378 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33379 ;;  out_buffer      2   63[BANK0 ] PTR unsigned char 
 33380 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 33381 ;;  out_idx_ptr     2   65[BANK0 ] PTR unsigned char 
 33382 ;;		 -> api_parse@out_idx(1), 
 33383 ;; Auto vars:     Size  Location     Type
 33384 ;;  length          1   67[BANK0 ] unsigned char 
 33385 ;; Return value:  Size  Location     Type
 33386 ;;                  1    wreg      unsigned char 
 33387 ;; Registers used:
 33388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33389 ;; Tracked objects:
 33390 ;;		On entry : 0/0
 33391 ;;		On exit  : 0/0
 33392 ;;		Unchanged: 0/0
 33393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33394 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33397 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33398 ;;Total ram usage:        7 bytes
 33399 ;; Hardware stack levels used:    1
 33400 ;; Hardware stack levels required when called:   10
 33401 ;; This function calls:
 33402 ;;		__parse_buffer_to_sector
 33403 ;;		__parse_file_append
 33404 ;;		__parse_file_copy
 33405 ;;		__parse_file_create
 33406 ;;		__parse_file_delete
 33407 ;;		__parse_file_modify
 33408 ;;		__parse_file_rename
 33409 ;;		__parse_file_resize
 33410 ;;		__parse_format_drive
 33411 ;;		__parse_sector_to_buffer
 33412 ;;		__parse_settings_i2c_frequency
 33413 ;;		__parse_settings_i2c_masterModeSlaveAddress
 33414 ;;		__parse_settings_i2c_mode
 33415 ;;		__parse_settings_i2c_slaveModeSlaveAddress
 33416 ;;		__parse_settings_spi_frequency
 33417 ;;		__parse_settings_spi_mode
 33418 ;;		__parse_settings_spi_polarity
 33419 ;;		__parse_write_buffer
 33420 ;; This function is called by:
 33421 ;;		_api_parse
 33422 ;; This function uses a non-reentrant model
 33423 ;;
 33424                           
 33425                           	psect	text166
 33426  0017D8                     __ptext166:
 33427                           	opt stack 0
 33428  0017D8                     __parse_command_long:
 33429                           	opt stack 19
 33430                           
 33431                           ;api.c: 548: uint8_t length = 65;
 33432                           
 33433                           ;incstack = 0
 33434  0017D8  0E41               	movlw	65
 33435  0017DA  0100               	movlb	0	; () banked
 33436  0017DC  6FA3               	movwf	__parse_command_long@length& (0+255),b
 33437                           
 33438                           ;api.c: 550: switch(data[0])
 33439  0017DE  D110               	goto	l2855
 33440  0017E0                     
 33441                           ; BSR set to: 0
 33442                           ;api.c: 553: length = _parse_file_resize(data, out_buffer, out_idx_ptr);
 33443                           
 33444                           ; BSR set to: 0
 33445  0017E0  C09D  F055         	movff	__parse_command_long@data,__parse_file_resize@data
 33446  0017E4  C09E  F056         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 33447  0017E8  C09F  F057         	movff	__parse_command_long@out_buffer,__parse_file_resize@out_buffer
 33448  0017EC  C0A0  F058         	movff	__parse_command_long@out_buffer+1,__parse_file_resize@out_buffer+1
 33449  0017F0  C0A1  F059         	movff	__parse_command_long@out_idx_ptr,__parse_file_resize@out_idx_ptr
 33450  0017F4  C0A2  F05A         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_resize@out_idx_ptr+1
 33451  0017F8  EC57  F015         	call	__parse_file_resize	;wreg free
 33452  0017FC  D0FE               	goto	L60
 33453  0017FE                     
 33454                           ; BSR set to: 0
 33455                           ;api.c: 557: length = _parse_file_delete(data, out_buffer, out_idx_ptr);
 33456                           
 33457                           ; BSR set to: 0
 33458  0017FE  C09D  F050         	movff	__parse_command_long@data,__parse_file_delete@data
 33459  001802  C09E  F051         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33460  001806  C09F  F052         	movff	__parse_command_long@out_buffer,__parse_file_delete@out_buffer
 33461  00180A  C0A0  F053         	movff	__parse_command_long@out_buffer+1,__parse_file_delete@out_buffer+1
 33462  00180E  C0A1  F054         	movff	__parse_command_long@out_idx_ptr,__parse_file_delete@out_idx_ptr
 33463  001812  C0A2  F055         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_delete@out_idx_ptr+1
 33464  001816  EC34  F033         	call	__parse_file_delete	;wreg free
 33465  00181A  D0EF               	goto	L60
 33466  00181C                     
 33467                           ; BSR set to: 0
 33468                           ;api.c: 561: length = _parse_file_create(data, out_buffer, out_idx_ptr);
 33469                           
 33470                           ; BSR set to: 0
 33471  00181C  C09D  F059         	movff	__parse_command_long@data,__parse_file_create@data
 33472  001820  C09E  F05A         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33473  001824  C09F  F05B         	movff	__parse_command_long@out_buffer,__parse_file_create@out_buffer
 33474  001828  C0A0  F05C         	movff	__parse_command_long@out_buffer+1,__parse_file_create@out_buffer+1
 33475  00182C  C0A1  F05D         	movff	__parse_command_long@out_idx_ptr,__parse_file_create@out_idx_ptr
 33476  001830  C0A2  F05E         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_create@out_idx_ptr+1
 33477  001834  EC35  F023         	call	__parse_file_create	;wreg free
 33478  001838  D0E0               	goto	L60
 33479  00183A                     
 33480                           ; BSR set to: 0
 33481                           ;api.c: 565: length = _parse_file_rename(data, out_buffer, out_idx_ptr);
 33482                           
 33483                           ; BSR set to: 0
 33484  00183A  C09D  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 33485  00183E  C09E  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33486  001842  C09F  F062         	movff	__parse_command_long@out_buffer,__parse_file_rename@out_buffer
 33487  001846  C0A0  F063         	movff	__parse_command_long@out_buffer+1,__parse_file_rename@out_buffer+1
 33488  00184A  C0A1  F064         	movff	__parse_command_long@out_idx_ptr,__parse_file_rename@out_idx_ptr
 33489  00184E  C0A2  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_rename@out_idx_ptr+1
 33490  001852  EC17  F02E         	call	__parse_file_rename	;wreg free
 33491  001856  D0D1               	goto	L60
 33492  001858                     
 33493                           ; BSR set to: 0
 33494                           ;api.c: 569: length = _parse_file_append(data, out_buffer, out_idx_ptr);
 33495                           
 33496                           ; BSR set to: 0
 33497  001858  C09D  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 33498  00185C  C09E  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33499  001860  C09F  F05C         	movff	__parse_command_long@out_buffer,__parse_file_append@out_buffer
 33500  001864  C0A0  F05D         	movff	__parse_command_long@out_buffer+1,__parse_file_append@out_buffer+1
 33501  001868  C0A1  F05E         	movff	__parse_command_long@out_idx_ptr,__parse_file_append@out_idx_ptr
 33502  00186C  C0A2  F05F         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_append@out_idx_ptr+1
 33503  001870  EC27  F021         	call	__parse_file_append	;wreg free
 33504  001874  D0C2               	goto	L60
 33505  001876                     
 33506                           ; BSR set to: 0
 33507                           ;api.c: 573: length = _parse_file_modify(data, out_buffer, out_idx_ptr);
 33508                           
 33509                           ; BSR set to: 0
 33510  001876  C09D  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 33511  00187A  C09E  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33512  00187E  C09F  F058         	movff	__parse_command_long@out_buffer,__parse_file_modify@out_buffer
 33513  001882  C0A0  F059         	movff	__parse_command_long@out_buffer+1,__parse_file_modify@out_buffer+1
 33514  001886  C0A1  F05A         	movff	__parse_command_long@out_idx_ptr,__parse_file_modify@out_idx_ptr
 33515  00188A  C0A2  F05B         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_modify@out_idx_ptr+1
 33516  00188E  EC7F  F00E         	call	__parse_file_modify	;wreg free
 33517  001892  D0B3               	goto	L60
 33518  001894                     
 33519                           ; BSR set to: 0
 33520                           ;api.c: 577: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 33521                           
 33522                           ; BSR set to: 0
 33523  001894  C09D  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 33524  001898  C09E  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 33525  00189C  C09F  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 33526  0018A0  C0A0  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 33527  0018A4  C0A1  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 33528  0018A8  C0A2  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 33529  0018AC  ECCF  F03C         	call	__parse_format_drive	;wreg free
 33530  0018B0  D0A4               	goto	L60
 33531  0018B2                     
 33532                           ; BSR set to: 0
 33533                           ;api.c: 581: length = _parse_sector_to_buffer(data, out_buffer, out_idx_ptr);
 33534                           
 33535                           ; BSR set to: 0
 33536  0018B2  C09D  F054         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 33537  0018B6  C09E  F055         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 33538  0018BA  C09F  F056         	movff	__parse_command_long@out_buffer,__parse_sector_to_buffer@out_buffer
 33539  0018BE  C0A0  F057         	movff	__parse_command_long@out_buffer+1,__parse_sector_to_buffer@out_buffer+1
 33540  0018C2  C0A1  F058         	movff	__parse_command_long@out_idx_ptr,__parse_sector_to_buffer@out_idx_ptr
 33541  0018C6  C0A2  F059         	movff	__parse_command_long@out_idx_ptr+1,__parse_sector_to_buffer@out_idx_ptr+1
 33542  0018CA  EC71  F020         	call	__parse_sector_to_buffer	;wreg free
 33543  0018CE  D095               	goto	L60
 33544  0018D0                     
 33545                           ; BSR set to: 0
 33546                           ;api.c: 585: length = _parse_buffer_to_sector(data, out_buffer, out_idx_ptr);
 33547                           
 33548                           ; BSR set to: 0
 33549  0018D0  C09D  F052         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 33550  0018D4  C09E  F053         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 33551  0018D8  C09F  F054         	movff	__parse_command_long@out_buffer,__parse_buffer_to_sector@out_buffer
 33552  0018DC  C0A0  F055         	movff	__parse_command_long@out_buffer+1,__parse_buffer_to_sector@out_buffer+1
 33553  0018E0  C0A1  F056         	movff	__parse_command_long@out_idx_ptr,__parse_buffer_to_sector@out_idx_ptr
 33554  0018E4  C0A2  F057         	movff	__parse_command_long@out_idx_ptr+1,__parse_buffer_to_sector@out_idx_ptr+1
 33555  0018E8  ECD9  F021         	call	__parse_buffer_to_sector	;wreg free
 33556  0018EC  D086               	goto	L60
 33557  0018EE                     
 33558                           ; BSR set to: 0
 33559                           ;api.c: 589: length = _parse_write_buffer(data, out_buffer, out_idx_ptr);
 33560                           
 33561                           ; BSR set to: 0
 33562  0018EE  C09D  F02B         	movff	__parse_command_long@data,__parse_write_buffer@data
 33563  0018F2  C09E  F02C         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 33564  0018F6  C09F  F02D         	movff	__parse_command_long@out_buffer,__parse_write_buffer@out_buffer
 33565  0018FA  C0A0  F02E         	movff	__parse_command_long@out_buffer+1,__parse_write_buffer@out_buffer+1
 33566  0018FE  C0A1  F02F         	movff	__parse_command_long@out_idx_ptr,__parse_write_buffer@out_idx_ptr
 33567  001902  C0A2  F030         	movff	__parse_command_long@out_idx_ptr+1,__parse_write_buffer@out_idx_ptr+1
 33568  001906  ECE0  F023         	call	__parse_write_buffer	;wreg free
 33569  00190A  D077               	goto	L60
 33570  00190C                     
 33571                           ; BSR set to: 0
 33572                           ;api.c: 593: length = _parse_file_copy(data, out_buffer, out_idx_ptr);
 33573                           
 33574                           ; BSR set to: 0
 33575  00190C  C09D  F094         	movff	__parse_command_long@data,__parse_file_copy@data
 33576  001910  C09E  F095         	movff	__parse_command_long@data+1,__parse_file_copy@data+1
 33577  001914  C09F  F096         	movff	__parse_command_long@out_buffer,__parse_file_copy@out_buffer
 33578  001918  C0A0  F097         	movff	__parse_command_long@out_buffer+1,__parse_file_copy@out_buffer+1
 33579  00191C  C0A1  F098         	movff	__parse_command_long@out_idx_ptr,__parse_file_copy@out_idx_ptr
 33580  001920  C0A2  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_copy@out_idx_ptr+1
 33581  001924  EC96  F02E         	call	__parse_file_copy	;wreg free
 33582  001928  D068               	goto	L60
 33583  00192A                     
 33584                           ; BSR set to: 0
 33585                           ;api.c: 597: length = _parse_settings_spi_mode(data, out_buffer, out_idx_ptr);
 33586                           
 33587                           ; BSR set to: 0
 33588  00192A  C09D  F001         	movff	__parse_command_long@data,__parse_settings_spi_mode@data
 33589  00192E  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_spi_mode@data+1
 33590  001932  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_spi_mode@out_buffer
 33591  001936  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_mode@out_buffer+1
 33592  00193A  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_mode@out_idx_ptr
 33593  00193E  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_mode@out_idx_ptr+1
 33594  001942  EC13  F038         	call	__parse_settings_spi_mode	;wreg free
 33595  001946  D059               	goto	L60
 33596  001948                     
 33597                           ; BSR set to: 0
 33598                           ;api.c: 601: length = _parse_settings_spi_frequency(data, out_buffer, out_idx_ptr);
 33599                           
 33600                           ; BSR set to: 0
 33601  001948  C09D  F001         	movff	__parse_command_long@data,__parse_settings_spi_frequency@data
 33602  00194C  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_spi_frequency@data+1
 33603  001950  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_spi_frequency@out_buffer
 33604  001954  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_frequency@out_buffer+1
 33605  001958  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_frequency@out_idx_ptr
 33606  00195C  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_frequency@out_idx_ptr+1
 33607  001960  EC74  F038         	call	__parse_settings_spi_frequency	;wreg free
 33608  001964  D04A               	goto	L60
 33609  001966                     
 33610                           ; BSR set to: 0
 33611                           ;api.c: 605: length = _parse_settings_spi_polarity(data, out_buffer, out_idx_ptr);
 33612                           
 33613                           ; BSR set to: 0
 33614  001966  C09D  F001         	movff	__parse_command_long@data,__parse_settings_spi_polarity@data
 33615  00196A  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_spi_polarity@data+1
 33616  00196E  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_spi_polarity@out_buffer
 33617  001972  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_polarity@out_buffer+1
 33618  001976  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_polarity@out_idx_ptr
 33619  00197A  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_polarity@out_idx_ptr+1
 33620  00197E  ECB2  F037         	call	__parse_settings_spi_polarity	;wreg free
 33621  001982  D03B               	goto	L60
 33622  001984                     
 33623                           ; BSR set to: 0
 33624                           ;api.c: 609: length = _parse_settings_i2c_mode(data, out_buffer, out_idx_ptr);
 33625                           
 33626                           ; BSR set to: 0
 33627  001984  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_mode@data
 33628  001988  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_mode@data+1
 33629  00198C  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_mode@out_buffer
 33630  001990  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_mode@out_buffer+1
 33631  001994  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_mode@out_idx_ptr
 33632  001998  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_mode@out_idx_ptr+1
 33633  00199C  EC36  F039         	call	__parse_settings_i2c_mode	;wreg free
 33634  0019A0  D02C               	goto	L60
 33635  0019A2                     
 33636                           ; BSR set to: 0
 33637                           ;api.c: 613: length = _parse_settings_i2c_frequency(data, out_buffer, out_idx_ptr);
 33638                           
 33639                           ; BSR set to: 0
 33640  0019A2  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_frequency@data
 33641  0019A6  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_frequency@data+1
 33642  0019AA  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_frequency@out_buffer
 33643  0019AE  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_frequency@out_buffer+1
 33644  0019B2  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_frequency@out_idx_ptr
 33645  0019B6  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_frequency@out_idx_ptr+1
 33646  0019BA  ECF8  F039         	call	__parse_settings_i2c_frequency	;wreg free
 33647  0019BE  D01D               	goto	L60
 33648  0019C0                     
 33649                           ; BSR set to: 0
 33650                           ;api.c: 617: length = _parse_settings_i2c_slaveModeSlaveAddress(data, out_buffer, out_id
      +                          x_ptr);
 33651                           
 33652                           ; BSR set to: 0
 33653  0019C0  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_slaveModeSlaveAddress@data
 33654  0019C4  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_slaveModeSlaveAddress@data+1
 33655  0019C8  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_slaveModeSlaveAddress@out_bu
      +                          ffer
 33656  0019CC  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_slaveModeSlaveAddress@out_
      +                          buffer+1
 33657  0019D0  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_slaveModeSlaveAddress@out_i
      +                          dx_ptr
 33658  0019D4  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_slaveModeSlaveAddress@out
      +                          _idx_ptr+1
 33659  0019D8  ECD5  F038         	call	__parse_settings_i2c_slaveModeSlaveAddress	;wreg free
 33660  0019DC  D00E               	goto	L60
 33661  0019DE                     
 33662                           ; BSR set to: 0
 33663                           ;api.c: 621: length = _parse_settings_i2c_masterModeSlaveAddress(data, out_buffer, out_i
      +                          dx_ptr);
 33664                           
 33665                           ; BSR set to: 0
 33666  0019DE  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_masterModeSlaveAddress@data
 33667  0019E2  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_masterModeSlaveAddress@data+1
 33668  0019E6  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_masterModeSlaveAddress@out_b
      +                          uffer
 33669  0019EA  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_masterModeSlaveAddress@out
      +                          _buffer+1
 33670  0019EE  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_masterModeSlaveAddress@out_
      +                          idx_ptr
 33671  0019F2  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_masterModeSlaveAddress@ou
      +                          t_idx_ptr+1
 33672  0019F6  EC97  F039         	call	__parse_settings_i2c_masterModeSlaveAddress	;wreg free
 33673  0019FA                     L60:
 33674  0019FA  0100               	movlb	0	; () banked
 33675  0019FC  6FA3               	movwf	__parse_command_long@length& (0+255),b
 33676                           
 33677                           ; BSR set to: 0
 33678                           ;api.c: 623: }
 33679                           
 33680                           ;api.c: 622: break;
 33681  0019FE  D03B               	goto	l2857
 33682  001A00                     l2855:
 33683                           
 33684                           ; BSR set to: 0
 33685                           
 33686                           ; BSR set to: 0
 33687  001A00  C09D  FFD9         	movff	__parse_command_long@data,fsr2l
 33688  001A04  C09E  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33689  001A08  50DF               	movf	indf2,w,c
 33690                           
 33691                           ; Switch size 1, requested type "space"
 33692                           ; Number of cases is 18, Range of values is 80 to 118
 33693                           ; switch strategies available:
 33694                           ; Name         Instructions Cycles
 33695                           ; simple_byte           55    28 (average)
 33696                           ;	Chosen strategy is simple_byte
 33697  001A0A  0A50               	xorlw	80	; case 80
 33698  001A0C  B4D8               	btfsc	status,2,c
 33699  001A0E  D6E8               	goto	l2856
 33700  001A10  0A01               	xorlw	1	; case 81
 33701  001A12  B4D8               	btfsc	status,2,c
 33702  001A14  D6F4               	goto	l2858
 33703  001A16  0A03               	xorlw	3	; case 82
 33704  001A18  B4D8               	btfsc	status,2,c
 33705  001A1A  D700               	goto	l2859
 33706  001A1C  0A01               	xorlw	1	; case 83
 33707  001A1E  B4D8               	btfsc	status,2,c
 33708  001A20  D70C               	goto	l2860
 33709  001A22  0A07               	xorlw	7	; case 84
 33710  001A24  B4D8               	btfsc	status,2,c
 33711  001A26  D718               	goto	l2861
 33712  001A28  0A01               	xorlw	1	; case 85
 33713  001A2A  B4D8               	btfsc	status,2,c
 33714  001A2C  D724               	goto	l2862
 33715  001A2E  0A03               	xorlw	3	; case 86
 33716  001A30  B4D8               	btfsc	status,2,c
 33717  001A32  D730               	goto	l2863
 33718  001A34  0A01               	xorlw	1	; case 87
 33719  001A36  B4D8               	btfsc	status,2,c
 33720  001A38  D73C               	goto	l2864
 33721  001A3A  0A0F               	xorlw	15	; case 88
 33722  001A3C  B4D8               	btfsc	status,2,c
 33723  001A3E  D748               	goto	l2865
 33724  001A40  0A01               	xorlw	1	; case 89
 33725  001A42  B4D8               	btfsc	status,2,c
 33726  001A44  D754               	goto	l2866
 33727  001A46  0A03               	xorlw	3	; case 90
 33728  001A48  B4D8               	btfsc	status,2,c
 33729  001A4A  D760               	goto	l2867
 33730  001A4C  0A2A               	xorlw	42	; case 112
 33731  001A4E  B4D8               	btfsc	status,2,c
 33732  001A50  D76C               	goto	l2868
 33733  001A52  0A01               	xorlw	1	; case 113
 33734  001A54  B4D8               	btfsc	status,2,c
 33735  001A56  D778               	goto	l2869
 33736  001A58  0A03               	xorlw	3	; case 114
 33737  001A5A  B4D8               	btfsc	status,2,c
 33738  001A5C  D784               	goto	l2870
 33739  001A5E  0A01               	xorlw	1	; case 115
 33740  001A60  B4D8               	btfsc	status,2,c
 33741  001A62  D790               	goto	l2871
 33742  001A64  0A07               	xorlw	7	; case 116
 33743  001A66  B4D8               	btfsc	status,2,c
 33744  001A68  D79C               	goto	l2872
 33745  001A6A  0A01               	xorlw	1	; case 117
 33746  001A6C  B4D8               	btfsc	status,2,c
 33747  001A6E  D7A8               	goto	l2873
 33748  001A70  0A03               	xorlw	3	; case 118
 33749  001A72  B4D8               	btfsc	status,2,c
 33750  001A74  D7B4               	goto	l2874
 33751  001A76                     l2857:
 33752                           
 33753                           ; BSR set to: 0
 33754                           ;api.c: 625: return length;
 33755                           
 33756                           ; BSR set to: 0
 33757  001A76  51A3               	movf	__parse_command_long@length& (0+255),w,b
 33758  001A78  0012               	return	
 33759  001A7A                     __end_of__parse_command_long:
 33760                           	opt stack 0
 33761                           tosu	equ	0xFFF
 33762                           tosh	equ	0xFFE
 33763                           tosl	equ	0xFFD
 33764                           pclath	equ	0xFFA
 33765                           tblptru	equ	0xFF8
 33766                           tblptrh	equ	0xFF7
 33767                           tblptrl	equ	0xFF6
 33768                           tablat	equ	0xFF5
 33769                           prodh	equ	0xFF4
 33770                           prodl	equ	0xFF3
 33771                           intcon	equ	0xFF2
 33772                           intcon2	equ	0xFF1
 33773                           intcon3	equ	0xFF0
 33774                           indf0	equ	0xFEF
 33775                           postinc0	equ	0xFEE
 33776                           fsr0h	equ	0xFEA
 33777                           fsr0l	equ	0xFE9
 33778                           wreg	equ	0xFE8
 33779                           indf1	equ	0xFE7
 33780                           postdec1	equ	0xFE5
 33781                           plusw1	equ	0xFE3
 33782                           fsr1h	equ	0xFE2
 33783                           fsr1l	equ	0xFE1
 33784                           indf2	equ	0xFDF
 33785                           postinc2	equ	0xFDE
 33786                           postdec2	equ	0xFDD
 33787                           plusw2	equ	0xFDB
 33788                           fsr2h	equ	0xFDA
 33789                           fsr2l	equ	0xFD9
 33790                           status	equ	0xFD8
 33791                           
 33792 ;; *************** function __parse_write_buffer *****************
 33793 ;; Defined at:
 33794 ;;		line 940 in file "api.c"
 33795 ;; Parameters:    Size  Location     Type
 33796 ;;  data            2   42[COMRAM] PTR unsigned char 
 33797 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33798 ;;  out_buffer      2   44[COMRAM] PTR unsigned char 
 33799 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 33800 ;;  out_idx_ptr     2   46[COMRAM] PTR unsigned char 
 33801 ;;		 -> api_parse@out_idx(1), 
 33802 ;; Auto vars:     Size  Location     Type
 33803 ;;  start_byte      2   51[COMRAM] unsigned int 
 33804 ;;  number_of_by    2   49[COMRAM] unsigned int 
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      unsigned char 
 33807 ;; Registers used:
 33808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33814 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33817 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33818 ;;Total ram usage:       11 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; Hardware stack levels required when called:    6
 33821 ;; This function calls:
 33822 ;;		_fat_write_to_buffer
 33823 ;; This function is called by:
 33824 ;;		__parse_command_long
 33825 ;; This function uses a non-reentrant model
 33826 ;;
 33827                           
 33828                           	psect	text167
 33829  0047C0                     __ptext167:
 33830                           	opt stack 0
 33831  0047C0                     __parse_write_buffer:
 33832                           	opt stack 22
 33833                           
 33834                           ;api.c: 942: uint16_t start_byte;;api.c: 943: uint16_t number_of_bytes;;api.c: 946: if((
      +                          data[0]!=COMMAND_WRITE_BUFFER) || (data[4]!=0xE2) || (data[5]!=0x30))
 33835                           
 33836                           ; BSR set to: 0
 33837                           ;incstack = 0
 33838  0047C0  C02B  FFD9         	movff	__parse_write_buffer@data,fsr2l
 33839  0047C4  C02C  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 33840  0047C8  0E59               	movlw	89
 33841  0047CA  18DE               	xorwf	postinc2,w,c
 33842  0047CC  A4D8               	btfss	status,2,c
 33843  0047CE  D014               	goto	u12260
 33844  0047D0  EE20 F004          	lfsr	2,4
 33845  0047D4  502B               	movf	__parse_write_buffer@data,w,c
 33846  0047D6  26D9               	addwf	fsr2l,f,c
 33847  0047D8  502C               	movf	__parse_write_buffer@data+1,w,c
 33848  0047DA  22DA               	addwfc	fsr2h,f,c
 33849  0047DC  0EE2               	movlw	226
 33850  0047DE  18DE               	xorwf	postinc2,w,c
 33851  0047E0  A4D8               	btfss	status,2,c
 33852  0047E2  D00A               	goto	u12260
 33853  0047E4  EE20 F005          	lfsr	2,5
 33854  0047E8  502B               	movf	__parse_write_buffer@data,w,c
 33855  0047EA  26D9               	addwf	fsr2l,f,c
 33856  0047EC  502C               	movf	__parse_write_buffer@data+1,w,c
 33857  0047EE  22DA               	addwfc	fsr2h,f,c
 33858  0047F0  0E30               	movlw	48
 33859  0047F2  18DE               	xorwf	postinc2,w,c
 33860  0047F4  B4D8               	btfsc	status,2,c
 33861  0047F6  D002               	goto	l2941
 33862  0047F8                     u12260:
 33863                           
 33864                           ;api.c: 947: {;api.c: 949: return 65;
 33865  0047F8  0E41               	movlw	65
 33866  0047FA  0012               	return	
 33867  0047FC                     l2941:
 33868                           
 33869                           ;api.c: 950: };api.c: 953: start_byte = data[1];
 33870  0047FC  EE20 F001          	lfsr	2,1
 33871  004800  502B               	movf	__parse_write_buffer@data,w,c
 33872  004802  26D9               	addwf	fsr2l,f,c
 33873  004804  502C               	movf	__parse_write_buffer@data+1,w,c
 33874  004806  22DA               	addwfc	fsr2h,f,c
 33875  004808  50DF               	movf	indf2,w,c
 33876  00480A  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33877  00480C  5031               	movf	??__parse_write_buffer,w,c
 33878  00480E  6E34               	movwf	__parse_write_buffer@start_byte,c
 33879  004810  6A35               	clrf	__parse_write_buffer@start_byte+1,c
 33880                           
 33881                           ;api.c: 954: start_byte <<= 8;
 33882  004812  5034               	movf	__parse_write_buffer@start_byte,w,c
 33883  004814  6E35               	movwf	__parse_write_buffer@start_byte+1,c
 33884  004816  6A34               	clrf	__parse_write_buffer@start_byte,c
 33885                           
 33886                           ;api.c: 955: start_byte |= data[2];
 33887  004818  EE20 F002          	lfsr	2,2
 33888  00481C  502B               	movf	__parse_write_buffer@data,w,c
 33889  00481E  26D9               	addwf	fsr2l,f,c
 33890  004820  502C               	movf	__parse_write_buffer@data+1,w,c
 33891  004822  22DA               	addwfc	fsr2h,f,c
 33892  004824  50DF               	movf	indf2,w,c
 33893  004826  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33894  004828  5031               	movf	??__parse_write_buffer,w,c
 33895  00482A  1234               	iorwf	__parse_write_buffer@start_byte,f,c
 33896                           
 33897                           ;api.c: 958: number_of_bytes = data[3];
 33898  00482C  EE20 F003          	lfsr	2,3
 33899  004830  502B               	movf	__parse_write_buffer@data,w,c
 33900  004832  26D9               	addwf	fsr2l,f,c
 33901  004834  502C               	movf	__parse_write_buffer@data+1,w,c
 33902  004836  22DA               	addwfc	fsr2h,f,c
 33903  004838  50DF               	movf	indf2,w,c
 33904  00483A  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33905  00483C  5031               	movf	??__parse_write_buffer,w,c
 33906  00483E  6E32               	movwf	__parse_write_buffer@number_of_bytes,c
 33907  004840  6A33               	clrf	__parse_write_buffer@number_of_bytes+1,c
 33908                           
 33909                           ;api.c: 961: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 33910  004842  C034  F025         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 33911  004846  C035  F026         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 33912  00484A  C032  F027         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 33913  00484E  C033  F028         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 33914  004852  0E06               	movlw	6
 33915  004854  242B               	addwf	__parse_write_buffer@data,w,c
 33916  004856  6E29               	movwf	fat_write_to_buffer@data,c
 33917  004858  0E00               	movlw	0
 33918  00485A  202C               	addwfc	__parse_write_buffer@data+1,w,c
 33919  00485C  6E2A               	movwf	fat_write_to_buffer@data+1,c
 33920  00485E  EC36  F04F         	call	_fat_write_to_buffer	;wreg free
 33921                           
 33922                           ;api.c: 964: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<61))
 33923  004862  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33924  004866  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33925  00486A  50DF               	movf	indf2,w,c
 33926  00486C  B4D8               	btfsc	status,2,c
 33927  00486E  D04F               	goto	l2945
 33928  004870  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33929  004874  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33930  004878  0E3D               	movlw	61
 33931  00487A  60DF               	cpfslt	indf2,c
 33932  00487C  D048               	goto	l2945
 33933                           
 33934                           ;api.c: 965: {;api.c: 966: out_buffer[(*out_idx_ptr)++] = COMMAND_WRITE_BUFFER;
 33935  00487E  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33936  004882  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33937  004886  CFDF F031          	movff	indf2,??__parse_write_buffer
 33938  00488A  0E01               	movlw	1
 33939  00488C  26DF               	addwf	indf2,f,c
 33940  00488E  5031               	movf	??__parse_write_buffer,w,c
 33941  004890  0D01               	mullw	1
 33942  004892  50F3               	movf	prodl,w,c
 33943  004894  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33944  004896  6ED9               	movwf	fsr2l,c
 33945  004898  50F4               	movf	prodh,w,c
 33946  00489A  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33947  00489C  6EDA               	movwf	fsr2h,c
 33948  00489E  0E59               	movlw	89
 33949  0048A0  6EDF               	movwf	indf2,c
 33950                           
 33951                           ;api.c: 967: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((start_byte)>>8)&0xFF));
 33952  0048A2  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33953  0048A6  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33954  0048AA  CFDF F031          	movff	indf2,??__parse_write_buffer
 33955  0048AE  0E01               	movlw	1
 33956  0048B0  26DF               	addwf	indf2,f,c
 33957  0048B2  5031               	movf	??__parse_write_buffer,w,c
 33958  0048B4  0D01               	mullw	1
 33959  0048B6  50F3               	movf	prodl,w,c
 33960  0048B8  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33961  0048BA  6ED9               	movwf	fsr2l,c
 33962  0048BC  50F4               	movf	prodh,w,c
 33963  0048BE  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33964  0048C0  6EDA               	movwf	fsr2h,c
 33965  0048C2  5035               	movf	__parse_write_buffer@start_byte+1,w,c
 33966  0048C4  6EDF               	movwf	indf2,c
 33967                           
 33968                           ;api.c: 968: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((start_byte)&0xFF));
 33969  0048C6  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33970  0048CA  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33971  0048CE  CFDF F031          	movff	indf2,??__parse_write_buffer
 33972  0048D2  0E01               	movlw	1
 33973  0048D4  26DF               	addwf	indf2,f,c
 33974  0048D6  5031               	movf	??__parse_write_buffer,w,c
 33975  0048D8  0D01               	mullw	1
 33976  0048DA  50F3               	movf	prodl,w,c
 33977  0048DC  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33978  0048DE  6ED9               	movwf	fsr2l,c
 33979  0048E0  50F4               	movf	prodh,w,c
 33980  0048E2  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33981  0048E4  6EDA               	movwf	fsr2h,c
 33982  0048E6  C034  FFDF         	movff	__parse_write_buffer@start_byte,indf2
 33983                           
 33984                           ;api.c: 969: out_buffer[(*out_idx_ptr)++] = number_of_bytes;
 33985  0048EA  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33986  0048EE  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33987  0048F2  CFDF F031          	movff	indf2,??__parse_write_buffer
 33988  0048F6  0E01               	movlw	1
 33989  0048F8  26DF               	addwf	indf2,f,c
 33990  0048FA  5031               	movf	??__parse_write_buffer,w,c
 33991  0048FC  0D01               	mullw	1
 33992  0048FE  50F3               	movf	prodl,w,c
 33993  004900  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33994  004902  6ED9               	movwf	fsr2l,c
 33995  004904  50F4               	movf	prodh,w,c
 33996  004906  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33997  004908  6EDA               	movwf	fsr2h,c
 33998  00490A  C032  FFDF         	movff	__parse_write_buffer@number_of_bytes,indf2
 33999  00490E                     l2945:
 34000                           
 34001                           ;api.c: 970: };api.c: 973: return 6 + number_of_bytes;
 34002  00490E  5032               	movf	__parse_write_buffer@number_of_bytes,w,c
 34003  004910  0F06               	addlw	6
 34004  004912  0012               	return	
 34005  004914                     __end_of__parse_write_buffer:
 34006                           	opt stack 0
 34007                           tosu	equ	0xFFF
 34008                           tosh	equ	0xFFE
 34009                           tosl	equ	0xFFD
 34010                           pclath	equ	0xFFA
 34011                           tblptru	equ	0xFF8
 34012                           tblptrh	equ	0xFF7
 34013                           tblptrl	equ	0xFF6
 34014                           tablat	equ	0xFF5
 34015                           prodh	equ	0xFF4
 34016                           prodl	equ	0xFF3
 34017                           intcon	equ	0xFF2
 34018                           intcon2	equ	0xFF1
 34019                           intcon3	equ	0xFF0
 34020                           indf0	equ	0xFEF
 34021                           postinc0	equ	0xFEE
 34022                           fsr0h	equ	0xFEA
 34023                           fsr0l	equ	0xFE9
 34024                           wreg	equ	0xFE8
 34025                           indf1	equ	0xFE7
 34026                           postdec1	equ	0xFE5
 34027                           plusw1	equ	0xFE3
 34028                           fsr1h	equ	0xFE2
 34029                           fsr1l	equ	0xFE1
 34030                           indf2	equ	0xFDF
 34031                           postinc2	equ	0xFDE
 34032                           postdec2	equ	0xFDD
 34033                           plusw2	equ	0xFDB
 34034                           fsr2h	equ	0xFDA
 34035                           fsr2l	equ	0xFD9
 34036                           status	equ	0xFD8
 34037                           
 34038 ;; *************** function _fat_write_to_buffer *****************
 34039 ;; Defined at:
 34040 ;;		line 1503 in file "fat16.c"
 34041 ;; Parameters:    Size  Location     Type
 34042 ;;  start           2   36[COMRAM] unsigned int 
 34043 ;;  length          2   38[COMRAM] unsigned int 
 34044 ;;  data            2   40[COMRAM] PTR unsigned char 
 34045 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34046 ;; Auto vars:     Size  Location     Type
 34047 ;;		None
 34048 ;; Return value:  Size  Location     Type
 34049 ;;                  1    wreg      void 
 34050 ;; Registers used:
 34051 ;;		wreg, status,2, status,0, cstack
 34052 ;; Tracked objects:
 34053 ;;		On entry : 0/0
 34054 ;;		On exit  : 0/0
 34055 ;;		Unchanged: 0/0
 34056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34057 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34061 ;;Total ram usage:        6 bytes
 34062 ;; Hardware stack levels used:    1
 34063 ;; Hardware stack levels required when called:    5
 34064 ;; This function calls:
 34065 ;;		_flash_write_to_buffer
 34066 ;; This function is called by:
 34067 ;;		__parse_write_buffer
 34068 ;; This function uses a non-reentrant model
 34069 ;;
 34070                           
 34071                           	psect	text168
 34072  009E6C                     __ptext168:
 34073                           	opt stack 0
 34074  009E6C                     _fat_write_to_buffer:
 34075                           	opt stack 22
 34076                           
 34077                           ;fat16.c: 1505: flash_write_to_buffer(start, length, data);
 34078                           
 34079                           ;incstack = 0
 34080  009E6C  C025  F01F         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 34081  009E70  C026  F020         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 34082  009E74  C027  F021         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 34083  009E78  C028  F022         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 34084  009E7C  C029  F023         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 34085  009E80  C02A  F024         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 34086  009E84  EC6A  F04D         	call	_flash_write_to_buffer	;wreg free
 34087  009E88  0012               	return		;funcret
 34088  009E8A                     __end_of_fat_write_to_buffer:
 34089                           	opt stack 0
 34090                           tosu	equ	0xFFF
 34091                           tosh	equ	0xFFE
 34092                           tosl	equ	0xFFD
 34093                           pclath	equ	0xFFA
 34094                           tblptru	equ	0xFF8
 34095                           tblptrh	equ	0xFF7
 34096                           tblptrl	equ	0xFF6
 34097                           tablat	equ	0xFF5
 34098                           prodh	equ	0xFF4
 34099                           prodl	equ	0xFF3
 34100                           intcon	equ	0xFF2
 34101                           intcon2	equ	0xFF1
 34102                           intcon3	equ	0xFF0
 34103                           indf0	equ	0xFEF
 34104                           postinc0	equ	0xFEE
 34105                           fsr0h	equ	0xFEA
 34106                           fsr0l	equ	0xFE9
 34107                           wreg	equ	0xFE8
 34108                           indf1	equ	0xFE7
 34109                           postdec1	equ	0xFE5
 34110                           plusw1	equ	0xFE3
 34111                           fsr1h	equ	0xFE2
 34112                           fsr1l	equ	0xFE1
 34113                           indf2	equ	0xFDF
 34114                           postinc2	equ	0xFDE
 34115                           postdec2	equ	0xFDD
 34116                           plusw2	equ	0xFDB
 34117                           fsr2h	equ	0xFDA
 34118                           fsr2l	equ	0xFD9
 34119                           status	equ	0xFD8
 34120                           
 34121 ;; *************** function _flash_write_to_buffer *****************
 34122 ;; Defined at:
 34123 ;;		line 557 in file "flash.c"
 34124 ;; Parameters:    Size  Location     Type
 34125 ;;  start           2   30[COMRAM] unsigned int 
 34126 ;;  length          2   32[COMRAM] unsigned int 
 34127 ;;  data            2   34[COMRAM] PTR unsigned char 
 34128 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34129 ;; Auto vars:     Size  Location     Type
 34130 ;;		None
 34131 ;; Return value:  Size  Location     Type
 34132 ;;                  1    wreg      void 
 34133 ;; Registers used:
 34134 ;;		wreg, status,2, status,0, cstack
 34135 ;; Tracked objects:
 34136 ;;		On entry : 0/0
 34137 ;;		On exit  : 0/0
 34138 ;;		Unchanged: 0/0
 34139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34140 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34144 ;;Total ram usage:        6 bytes
 34145 ;; Hardware stack levels used:    1
 34146 ;; Hardware stack levels required when called:    4
 34147 ;; This function calls:
 34148 ;;		__flash_write_to_buffer
 34149 ;;		_spi_set_configuration
 34150 ;; This function is called by:
 34151 ;;		_fat_write_to_buffer
 34152 ;; This function uses a non-reentrant model
 34153 ;;
 34154                           
 34155                           	psect	text169
 34156  009AD4                     __ptext169:
 34157                           	opt stack 0
 34158  009AD4                     _flash_write_to_buffer:
 34159                           	opt stack 22
 34160                           
 34161                           ;flash.c: 560: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 34162                           
 34163                           ;incstack = 0
 34164  009AD4  0E00               	movlw	0
 34165  009AD6  EC06  F02A         	call	_spi_set_configuration
 34166                           
 34167                           ;flash.c: 562: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 34168  009ADA  C01F  F014         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 34169  009ADE  C020  F015         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 34170  009AE2  C023  F016         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 34171  009AE6  C024  F017         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 34172  009AEA  C021  F018         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 34173  009AEE  C022  F019         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 34174  009AF2  0E01               	movlw	1
 34175  009AF4  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 34176  009AF6  EC0B  F04A         	call	__flash_write_to_buffer	;wreg free
 34177                           
 34178                           ;flash.c: 565: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 34179  009AFA  0E01               	movlw	1
 34180  009AFC  EC06  F02A         	call	_spi_set_configuration
 34181  009B00  0012               	return		;funcret
 34182  009B02                     __end_of_flash_write_to_buffer:
 34183                           	opt stack 0
 34184                           tosu	equ	0xFFF
 34185                           tosh	equ	0xFFE
 34186                           tosl	equ	0xFFD
 34187                           pclath	equ	0xFFA
 34188                           tblptru	equ	0xFF8
 34189                           tblptrh	equ	0xFF7
 34190                           tblptrl	equ	0xFF6
 34191                           tablat	equ	0xFF5
 34192                           prodh	equ	0xFF4
 34193                           prodl	equ	0xFF3
 34194                           intcon	equ	0xFF2
 34195                           intcon2	equ	0xFF1
 34196                           intcon3	equ	0xFF0
 34197                           indf0	equ	0xFEF
 34198                           postinc0	equ	0xFEE
 34199                           fsr0h	equ	0xFEA
 34200                           fsr0l	equ	0xFE9
 34201                           wreg	equ	0xFE8
 34202                           indf1	equ	0xFE7
 34203                           postdec1	equ	0xFE5
 34204                           plusw1	equ	0xFE3
 34205                           fsr1h	equ	0xFE2
 34206                           fsr1l	equ	0xFE1
 34207                           indf2	equ	0xFDF
 34208                           postinc2	equ	0xFDE
 34209                           postdec2	equ	0xFDD
 34210                           plusw2	equ	0xFDB
 34211                           fsr2h	equ	0xFDA
 34212                           fsr2l	equ	0xFD9
 34213                           status	equ	0xFD8
 34214                           
 34215 ;; *************** function __parse_settings_spi_polarity *****************
 34216 ;; Defined at:
 34217 ;;		line 1050 in file "api.c"
 34218 ;; Parameters:    Size  Location     Type
 34219 ;;  data            2    0[COMRAM] PTR unsigned char 
 34220 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34221 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34222 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34223 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34224 ;;		 -> api_parse@out_idx(1), 
 34225 ;; Auto vars:     Size  Location     Type
 34226 ;;		None
 34227 ;; Return value:  Size  Location     Type
 34228 ;;                  1    wreg      unsigned char 
 34229 ;; Registers used:
 34230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34231 ;; Tracked objects:
 34232 ;;		On entry : 0/0
 34233 ;;		On exit  : 0/0
 34234 ;;		Unchanged: 0/0
 34235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34236 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34239 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34240 ;;Total ram usage:        7 bytes
 34241 ;; Hardware stack levels used:    1
 34242 ;; This function calls:
 34243 ;;		Nothing
 34244 ;; This function is called by:
 34245 ;;		__parse_command_long
 34246 ;; This function uses a non-reentrant model
 34247 ;;
 34248                           
 34249                           	psect	text170
 34250  006F64                     __ptext170:
 34251                           	opt stack 0
 34252  006F64                     __parse_settings_spi_polarity:
 34253                           	opt stack 28
 34254                           
 34255                           ;api.c: 1054: if((data[0]!=COMMAND_SET_SPI_POLARITY) || (data[2]!=0x0D) || (data[3]!=0xB
      +                          B))
 34256                           
 34257                           ;incstack = 0
 34258  006F64  C001  FFD9         	movff	__parse_settings_spi_polarity@data,fsr2l
 34259  006F68  C002  FFDA         	movff	__parse_settings_spi_polarity@data+1,fsr2h
 34260  006F6C  0E72               	movlw	114
 34261  006F6E  18DE               	xorwf	postinc2,w,c
 34262  006F70  A4D8               	btfss	status,2,c
 34263  006F72  D014               	goto	u12460
 34264  006F74  EE20 F002          	lfsr	2,2
 34265  006F78  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34266  006F7A  26D9               	addwf	fsr2l,f,c
 34267  006F7C  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34268  006F7E  22DA               	addwfc	fsr2h,f,c
 34269  006F80  0E0D               	movlw	13
 34270  006F82  18DE               	xorwf	postinc2,w,c
 34271  006F84  A4D8               	btfss	status,2,c
 34272  006F86  D00A               	goto	u12460
 34273  006F88  EE20 F003          	lfsr	2,3
 34274  006F8C  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34275  006F8E  26D9               	addwf	fsr2l,f,c
 34276  006F90  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34277  006F92  22DA               	addwfc	fsr2h,f,c
 34278  006F94  0EBB               	movlw	187
 34279  006F96  18DE               	xorwf	postinc2,w,c
 34280  006F98  B4D8               	btfsc	status,2,c
 34281  006F9A  D002               	goto	l2969
 34282  006F9C                     u12460:
 34283                           
 34284                           ;api.c: 1055: {;api.c: 1056: return 4;
 34285  006F9C  0E04               	movlw	4
 34286  006F9E  0012               	return	
 34287  006FA0                     l2969:
 34288                           
 34289                           ;api.c: 1057: };api.c: 1060: os.communicationSettings.spiFrequency = (spiFrequency_t) da
      +                          ta[1];
 34290  006FA0  EE20 F001          	lfsr	2,1
 34291  006FA4  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34292  006FA6  26D9               	addwf	fsr2l,f,c
 34293  006FA8  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34294  006FAA  22DA               	addwfc	fsr2h,f,c
 34295  006FAC  50DF               	movf	indf2,w,c
 34296  006FAE  0100               	movlb	0	; () banked
 34297  006FB0  6FC8               	movwf	(_os+7)& (0+255),b
 34298                           
 34299                           ; BSR set to: 0
 34300                           ;api.c: 1063: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34301  006FB2  C005  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 34302  006FB6  C006  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 34303  006FBA  50DF               	movf	indf2,w,c
 34304  006FBC  B4D8               	btfsc	status,2,c
 34305  006FBE  D031               	goto	l2973
 34306                           
 34307                           ; BSR set to: 0
 34308  006FC0  C005  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 34309  006FC4  C006  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 34310  006FC8  0E3F               	movlw	63
 34311  006FCA  60DF               	cpfslt	indf2,c
 34312  006FCC  D02A               	goto	l2973
 34313                           
 34314                           ; BSR set to: 0
 34315                           ;api.c: 1064: {;api.c: 1065: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_POLARITY;
 34316  006FCE  C005  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 34317  006FD2  C006  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 34318  006FD6  CFDF F007          	movff	indf2,??__parse_settings_spi_polarity
 34319  006FDA  0E01               	movlw	1
 34320  006FDC  26DF               	addwf	indf2,f,c
 34321  006FDE  5007               	movf	??__parse_settings_spi_polarity,w,c
 34322  006FE0  0D01               	mullw	1
 34323  006FE2  50F3               	movf	prodl,w,c
 34324  006FE4  2403               	addwf	__parse_settings_spi_polarity@out_buffer,w,c
 34325  006FE6  6ED9               	movwf	fsr2l,c
 34326  006FE8  50F4               	movf	prodh,w,c
 34327  006FEA  2004               	addwfc	__parse_settings_spi_polarity@out_buffer+1,w,c
 34328  006FEC  6EDA               	movwf	fsr2h,c
 34329  006FEE  0E72               	movlw	114
 34330  006FF0  6EDF               	movwf	indf2,c
 34331                           
 34332                           ; BSR set to: 0
 34333                           ;api.c: 1066: out_buffer[(*out_idx_ptr)++] = data[1];
 34334  006FF2  EE20 F001          	lfsr	2,1
 34335  006FF6  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34336  006FF8  26D9               	addwf	fsr2l,f,c
 34337  006FFA  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34338  006FFC  22DA               	addwfc	fsr2h,f,c
 34339  006FFE  C005  FFE1         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr1l
 34340  007002  C006  FFE2         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr1h
 34341  007006  CFE7 F007          	movff	indf1,??__parse_settings_spi_polarity
 34342  00700A  0E01               	movlw	1
 34343  00700C  26E7               	addwf	indf1,f,c
 34344  00700E  5007               	movf	??__parse_settings_spi_polarity,w,c
 34345  007010  0D01               	mullw	1
 34346  007012  50F3               	movf	prodl,w,c
 34347  007014  2403               	addwf	__parse_settings_spi_polarity@out_buffer,w,c
 34348  007016  6EE1               	movwf	fsr1l,c
 34349  007018  50F4               	movf	prodh,w,c
 34350  00701A  2004               	addwfc	__parse_settings_spi_polarity@out_buffer+1,w,c
 34351  00701C  6EE2               	movwf	fsr1h,c
 34352  00701E  CFDF FFE7          	movff	indf2,indf1
 34353  007022                     l2973:
 34354                           
 34355                           ; BSR set to: 0
 34356                           ;api.c: 1067: };api.c: 1069: return 4;
 34357                           
 34358                           ; BSR set to: 0
 34359  007022  0E04               	movlw	4
 34360  007024  0012               	return	
 34361  007026                     __end_of__parse_settings_spi_polarity:
 34362                           	opt stack 0
 34363                           tosu	equ	0xFFF
 34364                           tosh	equ	0xFFE
 34365                           tosl	equ	0xFFD
 34366                           pclath	equ	0xFFA
 34367                           tblptru	equ	0xFF8
 34368                           tblptrh	equ	0xFF7
 34369                           tblptrl	equ	0xFF6
 34370                           tablat	equ	0xFF5
 34371                           prodh	equ	0xFF4
 34372                           prodl	equ	0xFF3
 34373                           intcon	equ	0xFF2
 34374                           intcon2	equ	0xFF1
 34375                           intcon3	equ	0xFF0
 34376                           indf0	equ	0xFEF
 34377                           postinc0	equ	0xFEE
 34378                           fsr0h	equ	0xFEA
 34379                           fsr0l	equ	0xFE9
 34380                           wreg	equ	0xFE8
 34381                           indf1	equ	0xFE7
 34382                           postdec1	equ	0xFE5
 34383                           plusw1	equ	0xFE3
 34384                           fsr1h	equ	0xFE2
 34385                           fsr1l	equ	0xFE1
 34386                           indf2	equ	0xFDF
 34387                           postinc2	equ	0xFDE
 34388                           postdec2	equ	0xFDD
 34389                           plusw2	equ	0xFDB
 34390                           fsr2h	equ	0xFDA
 34391                           fsr2l	equ	0xFD9
 34392                           status	equ	0xFD8
 34393                           
 34394 ;; *************** function __parse_settings_spi_mode *****************
 34395 ;; Defined at:
 34396 ;;		line 1005 in file "api.c"
 34397 ;; Parameters:    Size  Location     Type
 34398 ;;  data            2    0[COMRAM] PTR unsigned char 
 34399 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34400 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34401 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34402 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34403 ;;		 -> api_parse@out_idx(1), 
 34404 ;; Auto vars:     Size  Location     Type
 34405 ;;		None
 34406 ;; Return value:  Size  Location     Type
 34407 ;;                  1    wreg      unsigned char 
 34408 ;; Registers used:
 34409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34410 ;; Tracked objects:
 34411 ;;		On entry : 0/0
 34412 ;;		On exit  : 0/0
 34413 ;;		Unchanged: 0/0
 34414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34415 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34418 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34419 ;;Total ram usage:        7 bytes
 34420 ;; Hardware stack levels used:    1
 34421 ;; This function calls:
 34422 ;;		Nothing
 34423 ;; This function is called by:
 34424 ;;		__parse_command_long
 34425 ;; This function uses a non-reentrant model
 34426 ;;
 34427                           
 34428                           	psect	text171
 34429  007026                     __ptext171:
 34430                           	opt stack 0
 34431  007026                     __parse_settings_spi_mode:
 34432                           	opt stack 28
 34433                           
 34434                           ;api.c: 1009: if((data[0]!=COMMAND_SET_SPI_MODE) || (data[2]!=0x88) || (data[3]!=0xE2))
 34435                           
 34436                           ;incstack = 0
 34437  007026  C001  FFD9         	movff	__parse_settings_spi_mode@data,fsr2l
 34438  00702A  C002  FFDA         	movff	__parse_settings_spi_mode@data+1,fsr2h
 34439  00702E  0E70               	movlw	112
 34440  007030  18DE               	xorwf	postinc2,w,c
 34441  007032  A4D8               	btfss	status,2,c
 34442  007034  D014               	goto	u12360
 34443  007036  EE20 F002          	lfsr	2,2
 34444  00703A  5001               	movf	__parse_settings_spi_mode@data,w,c
 34445  00703C  26D9               	addwf	fsr2l,f,c
 34446  00703E  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34447  007040  22DA               	addwfc	fsr2h,f,c
 34448  007042  0E88               	movlw	136
 34449  007044  18DE               	xorwf	postinc2,w,c
 34450  007046  A4D8               	btfss	status,2,c
 34451  007048  D00A               	goto	u12360
 34452  00704A  EE20 F003          	lfsr	2,3
 34453  00704E  5001               	movf	__parse_settings_spi_mode@data,w,c
 34454  007050  26D9               	addwf	fsr2l,f,c
 34455  007052  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34456  007054  22DA               	addwfc	fsr2h,f,c
 34457  007056  0EE2               	movlw	226
 34458  007058  18DE               	xorwf	postinc2,w,c
 34459  00705A  B4D8               	btfsc	status,2,c
 34460  00705C  D002               	goto	l2955
 34461  00705E                     u12360:
 34462                           
 34463                           ;api.c: 1010: {;api.c: 1011: return 4;
 34464  00705E  0E04               	movlw	4
 34465  007060  0012               	return	
 34466  007062                     l2955:
 34467                           
 34468                           ;api.c: 1012: };api.c: 1015: os.communicationSettings.spiMode = (externalMode_t) data[1]
      +                          ;
 34469  007062  EE20 F001          	lfsr	2,1
 34470  007066  5001               	movf	__parse_settings_spi_mode@data,w,c
 34471  007068  26D9               	addwf	fsr2l,f,c
 34472  00706A  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34473  00706C  22DA               	addwfc	fsr2h,f,c
 34474  00706E  50DF               	movf	indf2,w,c
 34475  007070  0100               	movlb	0	; () banked
 34476  007072  6FC7               	movwf	(_os+6)& (0+255),b
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;api.c: 1018: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34480  007074  C005  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 34481  007078  C006  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 34482  00707C  50DF               	movf	indf2,w,c
 34483  00707E  B4D8               	btfsc	status,2,c
 34484  007080  D031               	goto	l2959
 34485                           
 34486                           ; BSR set to: 0
 34487  007082  C005  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 34488  007086  C006  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 34489  00708A  0E3F               	movlw	63
 34490  00708C  60DF               	cpfslt	indf2,c
 34491  00708E  D02A               	goto	l2959
 34492                           
 34493                           ; BSR set to: 0
 34494                           ;api.c: 1019: {;api.c: 1020: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_MODE;
 34495  007090  C005  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 34496  007094  C006  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 34497  007098  CFDF F007          	movff	indf2,??__parse_settings_spi_mode
 34498  00709C  0E01               	movlw	1
 34499  00709E  26DF               	addwf	indf2,f,c
 34500  0070A0  5007               	movf	??__parse_settings_spi_mode,w,c
 34501  0070A2  0D01               	mullw	1
 34502  0070A4  50F3               	movf	prodl,w,c
 34503  0070A6  2403               	addwf	__parse_settings_spi_mode@out_buffer,w,c
 34504  0070A8  6ED9               	movwf	fsr2l,c
 34505  0070AA  50F4               	movf	prodh,w,c
 34506  0070AC  2004               	addwfc	__parse_settings_spi_mode@out_buffer+1,w,c
 34507  0070AE  6EDA               	movwf	fsr2h,c
 34508  0070B0  0E70               	movlw	112
 34509  0070B2  6EDF               	movwf	indf2,c
 34510                           
 34511                           ; BSR set to: 0
 34512                           ;api.c: 1021: out_buffer[(*out_idx_ptr)++] = data[1];
 34513  0070B4  EE20 F001          	lfsr	2,1
 34514  0070B8  5001               	movf	__parse_settings_spi_mode@data,w,c
 34515  0070BA  26D9               	addwf	fsr2l,f,c
 34516  0070BC  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34517  0070BE  22DA               	addwfc	fsr2h,f,c
 34518  0070C0  C005  FFE1         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr1l
 34519  0070C4  C006  FFE2         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr1h
 34520  0070C8  CFE7 F007          	movff	indf1,??__parse_settings_spi_mode
 34521  0070CC  0E01               	movlw	1
 34522  0070CE  26E7               	addwf	indf1,f,c
 34523  0070D0  5007               	movf	??__parse_settings_spi_mode,w,c
 34524  0070D2  0D01               	mullw	1
 34525  0070D4  50F3               	movf	prodl,w,c
 34526  0070D6  2403               	addwf	__parse_settings_spi_mode@out_buffer,w,c
 34527  0070D8  6EE1               	movwf	fsr1l,c
 34528  0070DA  50F4               	movf	prodh,w,c
 34529  0070DC  2004               	addwfc	__parse_settings_spi_mode@out_buffer+1,w,c
 34530  0070DE  6EE2               	movwf	fsr1h,c
 34531  0070E0  CFDF FFE7          	movff	indf2,indf1
 34532  0070E4                     l2959:
 34533                           
 34534                           ; BSR set to: 0
 34535                           ;api.c: 1022: };api.c: 1024: return 4;
 34536                           
 34537                           ; BSR set to: 0
 34538  0070E4  0E04               	movlw	4
 34539  0070E6  0012               	return	
 34540  0070E8                     __end_of__parse_settings_spi_mode:
 34541                           	opt stack 0
 34542                           tosu	equ	0xFFF
 34543                           tosh	equ	0xFFE
 34544                           tosl	equ	0xFFD
 34545                           pclath	equ	0xFFA
 34546                           tblptru	equ	0xFF8
 34547                           tblptrh	equ	0xFF7
 34548                           tblptrl	equ	0xFF6
 34549                           tablat	equ	0xFF5
 34550                           prodh	equ	0xFF4
 34551                           prodl	equ	0xFF3
 34552                           intcon	equ	0xFF2
 34553                           intcon2	equ	0xFF1
 34554                           intcon3	equ	0xFF0
 34555                           indf0	equ	0xFEF
 34556                           postinc0	equ	0xFEE
 34557                           fsr0h	equ	0xFEA
 34558                           fsr0l	equ	0xFE9
 34559                           wreg	equ	0xFE8
 34560                           indf1	equ	0xFE7
 34561                           postdec1	equ	0xFE5
 34562                           plusw1	equ	0xFE3
 34563                           fsr1h	equ	0xFE2
 34564                           fsr1l	equ	0xFE1
 34565                           indf2	equ	0xFDF
 34566                           postinc2	equ	0xFDE
 34567                           postdec2	equ	0xFDD
 34568                           plusw2	equ	0xFDB
 34569                           fsr2h	equ	0xFDA
 34570                           fsr2l	equ	0xFD9
 34571                           status	equ	0xFD8
 34572                           
 34573 ;; *************** function __parse_settings_spi_frequency *****************
 34574 ;; Defined at:
 34575 ;;		line 1027 in file "api.c"
 34576 ;; Parameters:    Size  Location     Type
 34577 ;;  data            2    0[COMRAM] PTR unsigned char 
 34578 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34579 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34580 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34581 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34582 ;;		 -> api_parse@out_idx(1), 
 34583 ;; Auto vars:     Size  Location     Type
 34584 ;;		None
 34585 ;; Return value:  Size  Location     Type
 34586 ;;                  1    wreg      unsigned char 
 34587 ;; Registers used:
 34588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34589 ;; Tracked objects:
 34590 ;;		On entry : 0/0
 34591 ;;		On exit  : 0/0
 34592 ;;		Unchanged: 0/0
 34593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34594 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34598 ;;Total ram usage:        7 bytes
 34599 ;; Hardware stack levels used:    1
 34600 ;; This function calls:
 34601 ;;		Nothing
 34602 ;; This function is called by:
 34603 ;;		__parse_command_long
 34604 ;; This function uses a non-reentrant model
 34605 ;;
 34606                           
 34607                           	psect	text172
 34608  0070E8                     __ptext172:
 34609                           	opt stack 0
 34610  0070E8                     __parse_settings_spi_frequency:
 34611                           	opt stack 28
 34612                           
 34613                           ;api.c: 1032: if((data[0]!=COMMAND_SET_SPI_FREQUENCY) || (data[2]!=0xAE) || (data[3]!=0x
      +                          A8))
 34614                           
 34615                           ;incstack = 0
 34616  0070E8  C001  FFD9         	movff	__parse_settings_spi_frequency@data,fsr2l
 34617  0070EC  C002  FFDA         	movff	__parse_settings_spi_frequency@data+1,fsr2h
 34618  0070F0  0E71               	movlw	113
 34619  0070F2  18DE               	xorwf	postinc2,w,c
 34620  0070F4  A4D8               	btfss	status,2,c
 34621  0070F6  D014               	goto	u12410
 34622  0070F8  EE20 F002          	lfsr	2,2
 34623  0070FC  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34624  0070FE  26D9               	addwf	fsr2l,f,c
 34625  007100  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34626  007102  22DA               	addwfc	fsr2h,f,c
 34627  007104  0EAE               	movlw	174
 34628  007106  18DE               	xorwf	postinc2,w,c
 34629  007108  A4D8               	btfss	status,2,c
 34630  00710A  D00A               	goto	u12410
 34631  00710C  EE20 F003          	lfsr	2,3
 34632  007110  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34633  007112  26D9               	addwf	fsr2l,f,c
 34634  007114  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34635  007116  22DA               	addwfc	fsr2h,f,c
 34636  007118  0EA8               	movlw	168
 34637  00711A  18DE               	xorwf	postinc2,w,c
 34638  00711C  B4D8               	btfsc	status,2,c
 34639  00711E  D002               	goto	l2962
 34640  007120                     u12410:
 34641                           
 34642                           ;api.c: 1033: {;api.c: 1034: return 4;
 34643  007120  0E04               	movlw	4
 34644  007122  0012               	return	
 34645  007124                     l2962:
 34646                           
 34647                           ;api.c: 1035: };api.c: 1038: os.communicationSettings.spiFrequency = (spiFrequency_t) da
      +                          ta[1];
 34648  007124  EE20 F001          	lfsr	2,1
 34649  007128  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34650  00712A  26D9               	addwf	fsr2l,f,c
 34651  00712C  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34652  00712E  22DA               	addwfc	fsr2h,f,c
 34653  007130  50DF               	movf	indf2,w,c
 34654  007132  0100               	movlb	0	; () banked
 34655  007134  6FC8               	movwf	(_os+7)& (0+255),b
 34656                           
 34657                           ; BSR set to: 0
 34658                           ;api.c: 1041: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34659  007136  C005  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 34660  00713A  C006  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 34661  00713E  50DF               	movf	indf2,w,c
 34662  007140  B4D8               	btfsc	status,2,c
 34663  007142  D031               	goto	l2966
 34664                           
 34665                           ; BSR set to: 0
 34666  007144  C005  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 34667  007148  C006  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 34668  00714C  0E3F               	movlw	63
 34669  00714E  60DF               	cpfslt	indf2,c
 34670  007150  D02A               	goto	l2966
 34671                           
 34672                           ; BSR set to: 0
 34673                           ;api.c: 1042: {;api.c: 1043: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_FREQUENCY;
 34674  007152  C005  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 34675  007156  C006  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 34676  00715A  CFDF F007          	movff	indf2,??__parse_settings_spi_frequency
 34677  00715E  0E01               	movlw	1
 34678  007160  26DF               	addwf	indf2,f,c
 34679  007162  5007               	movf	??__parse_settings_spi_frequency,w,c
 34680  007164  0D01               	mullw	1
 34681  007166  50F3               	movf	prodl,w,c
 34682  007168  2403               	addwf	__parse_settings_spi_frequency@out_buffer,w,c
 34683  00716A  6ED9               	movwf	fsr2l,c
 34684  00716C  50F4               	movf	prodh,w,c
 34685  00716E  2004               	addwfc	__parse_settings_spi_frequency@out_buffer+1,w,c
 34686  007170  6EDA               	movwf	fsr2h,c
 34687  007172  0E71               	movlw	113
 34688  007174  6EDF               	movwf	indf2,c
 34689                           
 34690                           ; BSR set to: 0
 34691                           ;api.c: 1044: out_buffer[(*out_idx_ptr)++] = data[1];
 34692  007176  EE20 F001          	lfsr	2,1
 34693  00717A  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34694  00717C  26D9               	addwf	fsr2l,f,c
 34695  00717E  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34696  007180  22DA               	addwfc	fsr2h,f,c
 34697  007182  C005  FFE1         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr1l
 34698  007186  C006  FFE2         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr1h
 34699  00718A  CFE7 F007          	movff	indf1,??__parse_settings_spi_frequency
 34700  00718E  0E01               	movlw	1
 34701  007190  26E7               	addwf	indf1,f,c
 34702  007192  5007               	movf	??__parse_settings_spi_frequency,w,c
 34703  007194  0D01               	mullw	1
 34704  007196  50F3               	movf	prodl,w,c
 34705  007198  2403               	addwf	__parse_settings_spi_frequency@out_buffer,w,c
 34706  00719A  6EE1               	movwf	fsr1l,c
 34707  00719C  50F4               	movf	prodh,w,c
 34708  00719E  2004               	addwfc	__parse_settings_spi_frequency@out_buffer+1,w,c
 34709  0071A0  6EE2               	movwf	fsr1h,c
 34710  0071A2  CFDF FFE7          	movff	indf2,indf1
 34711  0071A6                     l2966:
 34712                           
 34713                           ; BSR set to: 0
 34714                           ;api.c: 1045: };api.c: 1047: return 4;
 34715                           
 34716                           ; BSR set to: 0
 34717  0071A6  0E04               	movlw	4
 34718  0071A8  0012               	return	
 34719  0071AA                     __end_of__parse_settings_spi_frequency:
 34720                           	opt stack 0
 34721                           tosu	equ	0xFFF
 34722                           tosh	equ	0xFFE
 34723                           tosl	equ	0xFFD
 34724                           pclath	equ	0xFFA
 34725                           tblptru	equ	0xFF8
 34726                           tblptrh	equ	0xFF7
 34727                           tblptrl	equ	0xFF6
 34728                           tablat	equ	0xFF5
 34729                           prodh	equ	0xFF4
 34730                           prodl	equ	0xFF3
 34731                           intcon	equ	0xFF2
 34732                           intcon2	equ	0xFF1
 34733                           intcon3	equ	0xFF0
 34734                           indf0	equ	0xFEF
 34735                           postinc0	equ	0xFEE
 34736                           fsr0h	equ	0xFEA
 34737                           fsr0l	equ	0xFE9
 34738                           wreg	equ	0xFE8
 34739                           indf1	equ	0xFE7
 34740                           postdec1	equ	0xFE5
 34741                           plusw1	equ	0xFE3
 34742                           fsr1h	equ	0xFE2
 34743                           fsr1l	equ	0xFE1
 34744                           indf2	equ	0xFDF
 34745                           postinc2	equ	0xFDE
 34746                           postdec2	equ	0xFDD
 34747                           plusw2	equ	0xFDB
 34748                           fsr2h	equ	0xFDA
 34749                           fsr2l	equ	0xFD9
 34750                           status	equ	0xFD8
 34751                           
 34752 ;; *************** function __parse_settings_i2c_slaveModeSlaveAddress *****************
 34753 ;; Defined at:
 34754 ;;		line 1116 in file "api.c"
 34755 ;; Parameters:    Size  Location     Type
 34756 ;;  data            2    0[COMRAM] PTR unsigned char 
 34757 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34758 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34759 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34760 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34761 ;;		 -> api_parse@out_idx(1), 
 34762 ;; Auto vars:     Size  Location     Type
 34763 ;;		None
 34764 ;; Return value:  Size  Location     Type
 34765 ;;                  1    wreg      unsigned char 
 34766 ;; Registers used:
 34767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34768 ;; Tracked objects:
 34769 ;;		On entry : 0/0
 34770 ;;		On exit  : 0/0
 34771 ;;		Unchanged: 0/0
 34772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34773 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34777 ;;Total ram usage:        7 bytes
 34778 ;; Hardware stack levels used:    1
 34779 ;; This function calls:
 34780 ;;		Nothing
 34781 ;; This function is called by:
 34782 ;;		__parse_command_long
 34783 ;; This function uses a non-reentrant model
 34784 ;;
 34785                           
 34786                           	psect	text173
 34787  0071AA                     __ptext173:
 34788                           	opt stack 0
 34789  0071AA                     __parse_settings_i2c_slaveModeSlaveAddress:
 34790                           	opt stack 28
 34791                           
 34792                           ;api.c: 1120: if((data[0]!=COMMAND_SET_I2C_SLAVE_MODE_ADDRESS) || (data[2]!=0x88) || (da
      +                          ta[3]!=0xE2))
 34793                           
 34794                           ;incstack = 0
 34795  0071AA  C001  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@data,fsr2l
 34796  0071AE  C002  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@data+1,fsr2h
 34797  0071B2  0E75               	movlw	117
 34798  0071B4  18DE               	xorwf	postinc2,w,c
 34799  0071B6  A4D8               	btfss	status,2,c
 34800  0071B8  D014               	goto	u12610
 34801  0071BA  EE20 F002          	lfsr	2,2
 34802  0071BE  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34803  0071C0  26D9               	addwf	fsr2l,f,c
 34804  0071C2  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34805  0071C4  22DA               	addwfc	fsr2h,f,c
 34806  0071C6  0E88               	movlw	136
 34807  0071C8  18DE               	xorwf	postinc2,w,c
 34808  0071CA  A4D8               	btfss	status,2,c
 34809  0071CC  D00A               	goto	u12610
 34810  0071CE  EE20 F003          	lfsr	2,3
 34811  0071D2  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34812  0071D4  26D9               	addwf	fsr2l,f,c
 34813  0071D6  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34814  0071D8  22DA               	addwfc	fsr2h,f,c
 34815  0071DA  0EE2               	movlw	226
 34816  0071DC  18DE               	xorwf	postinc2,w,c
 34817  0071DE  B4D8               	btfsc	status,2,c
 34818  0071E0  D002               	goto	l2990
 34819  0071E2                     u12610:
 34820                           
 34821                           ;api.c: 1121: {;api.c: 1122: return 4;
 34822  0071E2  0E04               	movlw	4
 34823  0071E4  0012               	return	
 34824  0071E6                     l2990:
 34825                           
 34826                           ;api.c: 1123: };api.c: 1126: os.communicationSettings.i2cSlaveModeSlaveAddress = data[1]
      +                          ;
 34827  0071E6  EE20 F001          	lfsr	2,1
 34828  0071EA  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34829  0071EC  26D9               	addwf	fsr2l,f,c
 34830  0071EE  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34831  0071F0  22DA               	addwfc	fsr2h,f,c
 34832  0071F2  50DF               	movf	indf2,w,c
 34833  0071F4  0100               	movlb	0	; () banked
 34834  0071F6  6FCC               	movwf	(_os+11)& (0+255),b
 34835                           
 34836                           ; BSR set to: 0
 34837                           ;api.c: 1129: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34838  0071F8  C005  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 34839  0071FC  C006  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 34840  007200  50DF               	movf	indf2,w,c
 34841  007202  B4D8               	btfsc	status,2,c
 34842  007204  D031               	goto	l2994
 34843                           
 34844                           ; BSR set to: 0
 34845  007206  C005  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 34846  00720A  C006  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 34847  00720E  0E3F               	movlw	63
 34848  007210  60DF               	cpfslt	indf2,c
 34849  007212  D02A               	goto	l2994
 34850                           
 34851                           ; BSR set to: 0
 34852                           ;api.c: 1130: {;api.c: 1131: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_SLAVE_MODE_A
      +                          DDRESS;
 34853  007214  C005  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 34854  007218  C006  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 34855  00721C  CFDF F007          	movff	indf2,??__parse_settings_i2c_slaveModeSlaveAddress
 34856  007220  0E01               	movlw	1
 34857  007222  26DF               	addwf	indf2,f,c
 34858  007224  5007               	movf	??__parse_settings_i2c_slaveModeSlaveAddress,w,c
 34859  007226  0D01               	mullw	1
 34860  007228  50F3               	movf	prodl,w,c
 34861  00722A  2403               	addwf	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer,w,c
 34862  00722C  6ED9               	movwf	fsr2l,c
 34863  00722E  50F4               	movf	prodh,w,c
 34864  007230  2004               	addwfc	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer+1,w,c
 34865  007232  6EDA               	movwf	fsr2h,c
 34866  007234  0E75               	movlw	117
 34867  007236  6EDF               	movwf	indf2,c
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;api.c: 1132: out_buffer[(*out_idx_ptr)++] = data[1];
 34871  007238  EE20 F001          	lfsr	2,1
 34872  00723C  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34873  00723E  26D9               	addwf	fsr2l,f,c
 34874  007240  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34875  007242  22DA               	addwfc	fsr2h,f,c
 34876  007244  C005  FFE1         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr1l
 34877  007248  C006  FFE2         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr1h
 34878  00724C  CFE7 F007          	movff	indf1,??__parse_settings_i2c_slaveModeSlaveAddress
 34879  007250  0E01               	movlw	1
 34880  007252  26E7               	addwf	indf1,f,c
 34881  007254  5007               	movf	??__parse_settings_i2c_slaveModeSlaveAddress,w,c
 34882  007256  0D01               	mullw	1
 34883  007258  50F3               	movf	prodl,w,c
 34884  00725A  2403               	addwf	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer,w,c
 34885  00725C  6EE1               	movwf	fsr1l,c
 34886  00725E  50F4               	movf	prodh,w,c
 34887  007260  2004               	addwfc	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer+1,w,c
 34888  007262  6EE2               	movwf	fsr1h,c
 34889  007264  CFDF FFE7          	movff	indf2,indf1
 34890  007268                     l2994:
 34891                           
 34892                           ; BSR set to: 0
 34893                           ;api.c: 1133: };api.c: 1135: return 4;
 34894                           
 34895                           ; BSR set to: 0
 34896  007268  0E04               	movlw	4
 34897  00726A  0012               	return	
 34898  00726C                     __end_of__parse_settings_i2c_slaveModeSlaveAddress:
 34899                           	opt stack 0
 34900                           tosu	equ	0xFFF
 34901                           tosh	equ	0xFFE
 34902                           tosl	equ	0xFFD
 34903                           pclath	equ	0xFFA
 34904                           tblptru	equ	0xFF8
 34905                           tblptrh	equ	0xFF7
 34906                           tblptrl	equ	0xFF6
 34907                           tablat	equ	0xFF5
 34908                           prodh	equ	0xFF4
 34909                           prodl	equ	0xFF3
 34910                           intcon	equ	0xFF2
 34911                           intcon2	equ	0xFF1
 34912                           intcon3	equ	0xFF0
 34913                           indf0	equ	0xFEF
 34914                           postinc0	equ	0xFEE
 34915                           fsr0h	equ	0xFEA
 34916                           fsr0l	equ	0xFE9
 34917                           wreg	equ	0xFE8
 34918                           indf1	equ	0xFE7
 34919                           postdec1	equ	0xFE5
 34920                           plusw1	equ	0xFE3
 34921                           fsr1h	equ	0xFE2
 34922                           fsr1l	equ	0xFE1
 34923                           indf2	equ	0xFDF
 34924                           postinc2	equ	0xFDE
 34925                           postdec2	equ	0xFDD
 34926                           plusw2	equ	0xFDB
 34927                           fsr2h	equ	0xFDA
 34928                           fsr2l	equ	0xFD9
 34929                           status	equ	0xFD8
 34930                           
 34931 ;; *************** function __parse_settings_i2c_mode *****************
 34932 ;; Defined at:
 34933 ;;		line 1072 in file "api.c"
 34934 ;; Parameters:    Size  Location     Type
 34935 ;;  data            2    0[COMRAM] PTR unsigned char 
 34936 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34937 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34938 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34939 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34940 ;;		 -> api_parse@out_idx(1), 
 34941 ;; Auto vars:     Size  Location     Type
 34942 ;;		None
 34943 ;; Return value:  Size  Location     Type
 34944 ;;                  1    wreg      unsigned char 
 34945 ;; Registers used:
 34946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34947 ;; Tracked objects:
 34948 ;;		On entry : 0/0
 34949 ;;		On exit  : 0/0
 34950 ;;		Unchanged: 0/0
 34951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34955 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34956 ;;Total ram usage:        7 bytes
 34957 ;; Hardware stack levels used:    1
 34958 ;; This function calls:
 34959 ;;		Nothing
 34960 ;; This function is called by:
 34961 ;;		__parse_command_long
 34962 ;; This function uses a non-reentrant model
 34963 ;;
 34964                           
 34965                           	psect	text174
 34966  00726C                     __ptext174:
 34967                           	opt stack 0
 34968  00726C                     __parse_settings_i2c_mode:
 34969                           	opt stack 28
 34970                           
 34971                           ;api.c: 1076: if((data[0]!=COMMAND_SET_I2C_MODE) || (data[2]!=0xB6) || (data[3]!=0xB9))
 34972                           
 34973                           ;incstack = 0
 34974  00726C  C001  FFD9         	movff	__parse_settings_i2c_mode@data,fsr2l
 34975  007270  C002  FFDA         	movff	__parse_settings_i2c_mode@data+1,fsr2h
 34976  007274  0E73               	movlw	115
 34977  007276  18DE               	xorwf	postinc2,w,c
 34978  007278  A4D8               	btfss	status,2,c
 34979  00727A  D014               	goto	u12510
 34980  00727C  EE20 F002          	lfsr	2,2
 34981  007280  5001               	movf	__parse_settings_i2c_mode@data,w,c
 34982  007282  26D9               	addwf	fsr2l,f,c
 34983  007284  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 34984  007286  22DA               	addwfc	fsr2h,f,c
 34985  007288  0EB6               	movlw	182
 34986  00728A  18DE               	xorwf	postinc2,w,c
 34987  00728C  A4D8               	btfss	status,2,c
 34988  00728E  D00A               	goto	u12510
 34989  007290  EE20 F003          	lfsr	2,3
 34990  007294  5001               	movf	__parse_settings_i2c_mode@data,w,c
 34991  007296  26D9               	addwf	fsr2l,f,c
 34992  007298  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 34993  00729A  22DA               	addwfc	fsr2h,f,c
 34994  00729C  0EB9               	movlw	185
 34995  00729E  18DE               	xorwf	postinc2,w,c
 34996  0072A0  B4D8               	btfsc	status,2,c
 34997  0072A2  D002               	goto	l2976
 34998  0072A4                     u12510:
 34999                           
 35000                           ;api.c: 1077: {;api.c: 1078: return 4;
 35001  0072A4  0E04               	movlw	4
 35002  0072A6  0012               	return	
 35003  0072A8                     l2976:
 35004                           
 35005                           ;api.c: 1079: };api.c: 1082: os.communicationSettings.i2cMode = (externalMode_t) data[1]
      +                          ;
 35006  0072A8  EE20 F001          	lfsr	2,1
 35007  0072AC  5001               	movf	__parse_settings_i2c_mode@data,w,c
 35008  0072AE  26D9               	addwf	fsr2l,f,c
 35009  0072B0  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 35010  0072B2  22DA               	addwfc	fsr2h,f,c
 35011  0072B4  50DF               	movf	indf2,w,c
 35012  0072B6  0100               	movlb	0	; () banked
 35013  0072B8  6FCA               	movwf	(_os+9)& (0+255),b
 35014                           
 35015                           ; BSR set to: 0
 35016                           ;api.c: 1085: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35017  0072BA  C005  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 35018  0072BE  C006  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 35019  0072C2  50DF               	movf	indf2,w,c
 35020  0072C4  B4D8               	btfsc	status,2,c
 35021  0072C6  D031               	goto	l2980
 35022                           
 35023                           ; BSR set to: 0
 35024  0072C8  C005  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 35025  0072CC  C006  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 35026  0072D0  0E3F               	movlw	63
 35027  0072D2  60DF               	cpfslt	indf2,c
 35028  0072D4  D02A               	goto	l2980
 35029                           
 35030                           ; BSR set to: 0
 35031                           ;api.c: 1086: {;api.c: 1087: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_MODE;
 35032  0072D6  C005  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 35033  0072DA  C006  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 35034  0072DE  CFDF F007          	movff	indf2,??__parse_settings_i2c_mode
 35035  0072E2  0E01               	movlw	1
 35036  0072E4  26DF               	addwf	indf2,f,c
 35037  0072E6  5007               	movf	??__parse_settings_i2c_mode,w,c
 35038  0072E8  0D01               	mullw	1
 35039  0072EA  50F3               	movf	prodl,w,c
 35040  0072EC  2403               	addwf	__parse_settings_i2c_mode@out_buffer,w,c
 35041  0072EE  6ED9               	movwf	fsr2l,c
 35042  0072F0  50F4               	movf	prodh,w,c
 35043  0072F2  2004               	addwfc	__parse_settings_i2c_mode@out_buffer+1,w,c
 35044  0072F4  6EDA               	movwf	fsr2h,c
 35045  0072F6  0E73               	movlw	115
 35046  0072F8  6EDF               	movwf	indf2,c
 35047                           
 35048                           ; BSR set to: 0
 35049                           ;api.c: 1088: out_buffer[(*out_idx_ptr)++] = data[1];
 35050  0072FA  EE20 F001          	lfsr	2,1
 35051  0072FE  5001               	movf	__parse_settings_i2c_mode@data,w,c
 35052  007300  26D9               	addwf	fsr2l,f,c
 35053  007302  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 35054  007304  22DA               	addwfc	fsr2h,f,c
 35055  007306  C005  FFE1         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr1l
 35056  00730A  C006  FFE2         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr1h
 35057  00730E  CFE7 F007          	movff	indf1,??__parse_settings_i2c_mode
 35058  007312  0E01               	movlw	1
 35059  007314  26E7               	addwf	indf1,f,c
 35060  007316  5007               	movf	??__parse_settings_i2c_mode,w,c
 35061  007318  0D01               	mullw	1
 35062  00731A  50F3               	movf	prodl,w,c
 35063  00731C  2403               	addwf	__parse_settings_i2c_mode@out_buffer,w,c
 35064  00731E  6EE1               	movwf	fsr1l,c
 35065  007320  50F4               	movf	prodh,w,c
 35066  007322  2004               	addwfc	__parse_settings_i2c_mode@out_buffer+1,w,c
 35067  007324  6EE2               	movwf	fsr1h,c
 35068  007326  CFDF FFE7          	movff	indf2,indf1
 35069  00732A                     l2980:
 35070                           
 35071                           ; BSR set to: 0
 35072                           ;api.c: 1089: };api.c: 1091: return 4;
 35073                           
 35074                           ; BSR set to: 0
 35075  00732A  0E04               	movlw	4
 35076  00732C  0012               	return	
 35077  00732E                     __end_of__parse_settings_i2c_mode:
 35078                           	opt stack 0
 35079                           tosu	equ	0xFFF
 35080                           tosh	equ	0xFFE
 35081                           tosl	equ	0xFFD
 35082                           pclath	equ	0xFFA
 35083                           tblptru	equ	0xFF8
 35084                           tblptrh	equ	0xFF7
 35085                           tblptrl	equ	0xFF6
 35086                           tablat	equ	0xFF5
 35087                           prodh	equ	0xFF4
 35088                           prodl	equ	0xFF3
 35089                           intcon	equ	0xFF2
 35090                           intcon2	equ	0xFF1
 35091                           intcon3	equ	0xFF0
 35092                           indf0	equ	0xFEF
 35093                           postinc0	equ	0xFEE
 35094                           fsr0h	equ	0xFEA
 35095                           fsr0l	equ	0xFE9
 35096                           wreg	equ	0xFE8
 35097                           indf1	equ	0xFE7
 35098                           postdec1	equ	0xFE5
 35099                           plusw1	equ	0xFE3
 35100                           fsr1h	equ	0xFE2
 35101                           fsr1l	equ	0xFE1
 35102                           indf2	equ	0xFDF
 35103                           postinc2	equ	0xFDE
 35104                           postdec2	equ	0xFDD
 35105                           plusw2	equ	0xFDB
 35106                           fsr2h	equ	0xFDA
 35107                           fsr2l	equ	0xFD9
 35108                           status	equ	0xFD8
 35109                           
 35110 ;; *************** function __parse_settings_i2c_masterModeSlaveAddress *****************
 35111 ;; Defined at:
 35112 ;;		line 1138 in file "api.c"
 35113 ;; Parameters:    Size  Location     Type
 35114 ;;  data            2    0[COMRAM] PTR unsigned char 
 35115 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35116 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 35117 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35118 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 35119 ;;		 -> api_parse@out_idx(1), 
 35120 ;; Auto vars:     Size  Location     Type
 35121 ;;		None
 35122 ;; Return value:  Size  Location     Type
 35123 ;;                  1    wreg      unsigned char 
 35124 ;; Registers used:
 35125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35126 ;; Tracked objects:
 35127 ;;		On entry : 0/0
 35128 ;;		On exit  : 0/0
 35129 ;;		Unchanged: 0/0
 35130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35134 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35135 ;;Total ram usage:        7 bytes
 35136 ;; Hardware stack levels used:    1
 35137 ;; This function calls:
 35138 ;;		Nothing
 35139 ;; This function is called by:
 35140 ;;		__parse_command_long
 35141 ;; This function uses a non-reentrant model
 35142 ;;
 35143                           
 35144                           	psect	text175
 35145  00732E                     __ptext175:
 35146                           	opt stack 0
 35147  00732E                     __parse_settings_i2c_masterModeSlaveAddress:
 35148                           	opt stack 28
 35149                           
 35150                           ;api.c: 1142: if((data[0]!=COMMAND_SET_I2C_MASTER_MODE_ADDRESS) || (data[2]!=0x54) || (d
      +                          ata[3]!=0x0D))
 35151                           
 35152                           ;incstack = 0
 35153  00732E  C001  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@data,fsr2l
 35154  007332  C002  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@data+1,fsr2h
 35155  007336  0E76               	movlw	118
 35156  007338  18DE               	xorwf	postinc2,w,c
 35157  00733A  A4D8               	btfss	status,2,c
 35158  00733C  D014               	goto	u12660
 35159  00733E  EE20 F002          	lfsr	2,2
 35160  007342  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35161  007344  26D9               	addwf	fsr2l,f,c
 35162  007346  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35163  007348  22DA               	addwfc	fsr2h,f,c
 35164  00734A  0E54               	movlw	84
 35165  00734C  18DE               	xorwf	postinc2,w,c
 35166  00734E  A4D8               	btfss	status,2,c
 35167  007350  D00A               	goto	u12660
 35168  007352  EE20 F003          	lfsr	2,3
 35169  007356  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35170  007358  26D9               	addwf	fsr2l,f,c
 35171  00735A  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35172  00735C  22DA               	addwfc	fsr2h,f,c
 35173  00735E  0E0D               	movlw	13
 35174  007360  18DE               	xorwf	postinc2,w,c
 35175  007362  B4D8               	btfsc	status,2,c
 35176  007364  D002               	goto	l2997
 35177  007366                     u12660:
 35178                           
 35179                           ;api.c: 1143: {;api.c: 1144: return 4;
 35180  007366  0E04               	movlw	4
 35181  007368  0012               	return	
 35182  00736A                     l2997:
 35183                           
 35184                           ;api.c: 1145: };api.c: 1148: os.communicationSettings.i2cMasterModeSlaveAddress = data[1
      +                          ];
 35185  00736A  EE20 F001          	lfsr	2,1
 35186  00736E  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35187  007370  26D9               	addwf	fsr2l,f,c
 35188  007372  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35189  007374  22DA               	addwfc	fsr2h,f,c
 35190  007376  50DF               	movf	indf2,w,c
 35191  007378  0100               	movlb	0	; () banked
 35192  00737A  6FCD               	movwf	(_os+12)& (0+255),b
 35193                           
 35194                           ; BSR set to: 0
 35195                           ;api.c: 1151: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35196  00737C  C005  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 35197  007380  C006  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 35198  007384  50DF               	movf	indf2,w,c
 35199  007386  B4D8               	btfsc	status,2,c
 35200  007388  D031               	goto	l3001
 35201                           
 35202                           ; BSR set to: 0
 35203  00738A  C005  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 35204  00738E  C006  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 35205  007392  0E3F               	movlw	63
 35206  007394  60DF               	cpfslt	indf2,c
 35207  007396  D02A               	goto	l3001
 35208                           
 35209                           ; BSR set to: 0
 35210                           ;api.c: 1152: {;api.c: 1153: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_MASTER_MODE_
      +                          ADDRESS;
 35211  007398  C005  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 35212  00739C  C006  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 35213  0073A0  CFDF F007          	movff	indf2,??__parse_settings_i2c_masterModeSlaveAddress
 35214  0073A4  0E01               	movlw	1
 35215  0073A6  26DF               	addwf	indf2,f,c
 35216  0073A8  5007               	movf	??__parse_settings_i2c_masterModeSlaveAddress,w,c
 35217  0073AA  0D01               	mullw	1
 35218  0073AC  50F3               	movf	prodl,w,c
 35219  0073AE  2403               	addwf	__parse_settings_i2c_masterModeSlaveAddress@out_buffer,w,c
 35220  0073B0  6ED9               	movwf	fsr2l,c
 35221  0073B2  50F4               	movf	prodh,w,c
 35222  0073B4  2004               	addwfc	__parse_settings_i2c_masterModeSlaveAddress@out_buffer+1,w,c
 35223  0073B6  6EDA               	movwf	fsr2h,c
 35224  0073B8  0E76               	movlw	118
 35225  0073BA  6EDF               	movwf	indf2,c
 35226                           
 35227                           ; BSR set to: 0
 35228                           ;api.c: 1154: out_buffer[(*out_idx_ptr)++] = data[1];
 35229  0073BC  EE20 F001          	lfsr	2,1
 35230  0073C0  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35231  0073C2  26D9               	addwf	fsr2l,f,c
 35232  0073C4  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35233  0073C6  22DA               	addwfc	fsr2h,f,c
 35234  0073C8  C005  FFE1         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr1l
 35235  0073CC  C006  FFE2         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr1h
 35236  0073D0  CFE7 F007          	movff	indf1,??__parse_settings_i2c_masterModeSlaveAddress
 35237  0073D4  0E01               	movlw	1
 35238  0073D6  26E7               	addwf	indf1,f,c
 35239  0073D8  5007               	movf	??__parse_settings_i2c_masterModeSlaveAddress,w,c
 35240  0073DA  0D01               	mullw	1
 35241  0073DC  50F3               	movf	prodl,w,c
 35242  0073DE  2403               	addwf	__parse_settings_i2c_masterModeSlaveAddress@out_buffer,w,c
 35243  0073E0  6EE1               	movwf	fsr1l,c
 35244  0073E2  50F4               	movf	prodh,w,c
 35245  0073E4  2004               	addwfc	__parse_settings_i2c_masterModeSlaveAddress@out_buffer+1,w,c
 35246  0073E6  6EE2               	movwf	fsr1h,c
 35247  0073E8  CFDF FFE7          	movff	indf2,indf1
 35248  0073EC                     l3001:
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;api.c: 1155: };api.c: 1157: return 4;
 35252                           
 35253                           ; BSR set to: 0
 35254  0073EC  0E04               	movlw	4
 35255  0073EE  0012               	return	
 35256  0073F0                     __end_of__parse_settings_i2c_masterModeSlaveAddress:
 35257                           	opt stack 0
 35258                           tosu	equ	0xFFF
 35259                           tosh	equ	0xFFE
 35260                           tosl	equ	0xFFD
 35261                           pclath	equ	0xFFA
 35262                           tblptru	equ	0xFF8
 35263                           tblptrh	equ	0xFF7
 35264                           tblptrl	equ	0xFF6
 35265                           tablat	equ	0xFF5
 35266                           prodh	equ	0xFF4
 35267                           prodl	equ	0xFF3
 35268                           intcon	equ	0xFF2
 35269                           intcon2	equ	0xFF1
 35270                           intcon3	equ	0xFF0
 35271                           indf0	equ	0xFEF
 35272                           postinc0	equ	0xFEE
 35273                           fsr0h	equ	0xFEA
 35274                           fsr0l	equ	0xFE9
 35275                           wreg	equ	0xFE8
 35276                           indf1	equ	0xFE7
 35277                           postdec1	equ	0xFE5
 35278                           plusw1	equ	0xFE3
 35279                           fsr1h	equ	0xFE2
 35280                           fsr1l	equ	0xFE1
 35281                           indf2	equ	0xFDF
 35282                           postinc2	equ	0xFDE
 35283                           postdec2	equ	0xFDD
 35284                           plusw2	equ	0xFDB
 35285                           fsr2h	equ	0xFDA
 35286                           fsr2l	equ	0xFD9
 35287                           status	equ	0xFD8
 35288                           
 35289 ;; *************** function __parse_settings_i2c_frequency *****************
 35290 ;; Defined at:
 35291 ;;		line 1094 in file "api.c"
 35292 ;; Parameters:    Size  Location     Type
 35293 ;;  data            2    0[COMRAM] PTR unsigned char 
 35294 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35295 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 35296 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35297 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 35298 ;;		 -> api_parse@out_idx(1), 
 35299 ;; Auto vars:     Size  Location     Type
 35300 ;;		None
 35301 ;; Return value:  Size  Location     Type
 35302 ;;                  1    wreg      unsigned char 
 35303 ;; Registers used:
 35304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35305 ;; Tracked objects:
 35306 ;;		On entry : 0/0
 35307 ;;		On exit  : 0/0
 35308 ;;		Unchanged: 0/0
 35309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35310 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35313 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35314 ;;Total ram usage:        7 bytes
 35315 ;; Hardware stack levels used:    1
 35316 ;; This function calls:
 35317 ;;		Nothing
 35318 ;; This function is called by:
 35319 ;;		__parse_command_long
 35320 ;; This function uses a non-reentrant model
 35321 ;;
 35322                           
 35323                           	psect	text176
 35324  0073F0                     __ptext176:
 35325                           	opt stack 0
 35326  0073F0                     __parse_settings_i2c_frequency:
 35327                           	opt stack 28
 35328                           
 35329                           ;api.c: 1098: if((data[0]!=COMMAND_SET_I2C_FREQUENCY) || (data[2]!=0x4E) || (data[3]!=0x
      +                          03))
 35330                           
 35331                           ;incstack = 0
 35332  0073F0  C001  FFD9         	movff	__parse_settings_i2c_frequency@data,fsr2l
 35333  0073F4  C002  FFDA         	movff	__parse_settings_i2c_frequency@data+1,fsr2h
 35334  0073F8  0E74               	movlw	116
 35335  0073FA  18DE               	xorwf	postinc2,w,c
 35336  0073FC  A4D8               	btfss	status,2,c
 35337  0073FE  D014               	goto	u12560
 35338  007400  EE20 F002          	lfsr	2,2
 35339  007404  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35340  007406  26D9               	addwf	fsr2l,f,c
 35341  007408  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35342  00740A  22DA               	addwfc	fsr2h,f,c
 35343  00740C  0E4E               	movlw	78
 35344  00740E  18DE               	xorwf	postinc2,w,c
 35345  007410  A4D8               	btfss	status,2,c
 35346  007412  D00A               	goto	u12560
 35347  007414  EE20 F003          	lfsr	2,3
 35348  007418  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35349  00741A  26D9               	addwf	fsr2l,f,c
 35350  00741C  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35351  00741E  22DA               	addwfc	fsr2h,f,c
 35352  007420  0E03               	movlw	3
 35353  007422  18DE               	xorwf	postinc2,w,c
 35354  007424  B4D8               	btfsc	status,2,c
 35355  007426  D002               	goto	l2983
 35356  007428                     u12560:
 35357                           
 35358                           ;api.c: 1099: {;api.c: 1100: return 4;
 35359  007428  0E04               	movlw	4
 35360  00742A  0012               	return	
 35361  00742C                     l2983:
 35362                           
 35363                           ;api.c: 1101: };api.c: 1104: os.communicationSettings.i2cFrequency = (i2cFrequency_t) da
      +                          ta[1];
 35364  00742C  EE20 F001          	lfsr	2,1
 35365  007430  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35366  007432  26D9               	addwf	fsr2l,f,c
 35367  007434  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35368  007436  22DA               	addwfc	fsr2h,f,c
 35369  007438  50DF               	movf	indf2,w,c
 35370  00743A  0100               	movlb	0	; () banked
 35371  00743C  6FCB               	movwf	(_os+10)& (0+255),b
 35372                           
 35373                           ; BSR set to: 0
 35374                           ;api.c: 1107: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35375  00743E  C005  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 35376  007442  C006  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 35377  007446  50DF               	movf	indf2,w,c
 35378  007448  B4D8               	btfsc	status,2,c
 35379  00744A  D031               	goto	l2987
 35380                           
 35381                           ; BSR set to: 0
 35382  00744C  C005  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 35383  007450  C006  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 35384  007454  0E3F               	movlw	63
 35385  007456  60DF               	cpfslt	indf2,c
 35386  007458  D02A               	goto	l2987
 35387                           
 35388                           ; BSR set to: 0
 35389                           ;api.c: 1108: {;api.c: 1109: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_FREQUENCY;
 35390  00745A  C005  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 35391  00745E  C006  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 35392  007462  CFDF F007          	movff	indf2,??__parse_settings_i2c_frequency
 35393  007466  0E01               	movlw	1
 35394  007468  26DF               	addwf	indf2,f,c
 35395  00746A  5007               	movf	??__parse_settings_i2c_frequency,w,c
 35396  00746C  0D01               	mullw	1
 35397  00746E  50F3               	movf	prodl,w,c
 35398  007470  2403               	addwf	__parse_settings_i2c_frequency@out_buffer,w,c
 35399  007472  6ED9               	movwf	fsr2l,c
 35400  007474  50F4               	movf	prodh,w,c
 35401  007476  2004               	addwfc	__parse_settings_i2c_frequency@out_buffer+1,w,c
 35402  007478  6EDA               	movwf	fsr2h,c
 35403  00747A  0E74               	movlw	116
 35404  00747C  6EDF               	movwf	indf2,c
 35405                           
 35406                           ; BSR set to: 0
 35407                           ;api.c: 1110: out_buffer[(*out_idx_ptr)++] = data[1];
 35408  00747E  EE20 F001          	lfsr	2,1
 35409  007482  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35410  007484  26D9               	addwf	fsr2l,f,c
 35411  007486  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35412  007488  22DA               	addwfc	fsr2h,f,c
 35413  00748A  C005  FFE1         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr1l
 35414  00748E  C006  FFE2         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr1h
 35415  007492  CFE7 F007          	movff	indf1,??__parse_settings_i2c_frequency
 35416  007496  0E01               	movlw	1
 35417  007498  26E7               	addwf	indf1,f,c
 35418  00749A  5007               	movf	??__parse_settings_i2c_frequency,w,c
 35419  00749C  0D01               	mullw	1
 35420  00749E  50F3               	movf	prodl,w,c
 35421  0074A0  2403               	addwf	__parse_settings_i2c_frequency@out_buffer,w,c
 35422  0074A2  6EE1               	movwf	fsr1l,c
 35423  0074A4  50F4               	movf	prodh,w,c
 35424  0074A6  2004               	addwfc	__parse_settings_i2c_frequency@out_buffer+1,w,c
 35425  0074A8  6EE2               	movwf	fsr1h,c
 35426  0074AA  CFDF FFE7          	movff	indf2,indf1
 35427  0074AE                     l2987:
 35428                           
 35429                           ; BSR set to: 0
 35430                           ;api.c: 1111: };api.c: 1113: return 4;
 35431                           
 35432                           ; BSR set to: 0
 35433  0074AE  0E04               	movlw	4
 35434  0074B0  0012               	return	
 35435  0074B2                     __end_of__parse_settings_i2c_frequency:
 35436                           	opt stack 0
 35437                           tosu	equ	0xFFF
 35438                           tosh	equ	0xFFE
 35439                           tosl	equ	0xFFD
 35440                           pclath	equ	0xFFA
 35441                           tblptru	equ	0xFF8
 35442                           tblptrh	equ	0xFF7
 35443                           tblptrl	equ	0xFF6
 35444                           tablat	equ	0xFF5
 35445                           prodh	equ	0xFF4
 35446                           prodl	equ	0xFF3
 35447                           intcon	equ	0xFF2
 35448                           intcon2	equ	0xFF1
 35449                           intcon3	equ	0xFF0
 35450                           indf0	equ	0xFEF
 35451                           postinc0	equ	0xFEE
 35452                           fsr0h	equ	0xFEA
 35453                           fsr0l	equ	0xFE9
 35454                           wreg	equ	0xFE8
 35455                           indf1	equ	0xFE7
 35456                           postdec1	equ	0xFE5
 35457                           plusw1	equ	0xFE3
 35458                           fsr1h	equ	0xFE2
 35459                           fsr1l	equ	0xFE1
 35460                           indf2	equ	0xFDF
 35461                           postinc2	equ	0xFDE
 35462                           postdec2	equ	0xFDD
 35463                           plusw2	equ	0xFDB
 35464                           fsr2h	equ	0xFDA
 35465                           fsr2l	equ	0xFD9
 35466                           status	equ	0xFD8
 35467                           
 35468 ;; *************** function __parse_sector_to_buffer *****************
 35469 ;; Defined at:
 35470 ;;		line 868 in file "api.c"
 35471 ;; Parameters:    Size  Location     Type
 35472 ;;  data            2   83[COMRAM] PTR unsigned char 
 35473 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35474 ;;  out_buffer      2   85[COMRAM] PTR unsigned char 
 35475 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35476 ;;  out_idx_ptr     2   87[COMRAM] PTR unsigned char 
 35477 ;;		 -> api_parse@out_idx(1), 
 35478 ;; Auto vars:     Size  Location     Type
 35479 ;;  sector          2   92[COMRAM] unsigned int 
 35480 ;;  return_value    1   91[COMRAM] unsigned char 
 35481 ;;  file_number     1   90[COMRAM] unsigned char 
 35482 ;; Return value:  Size  Location     Type
 35483 ;;                  1    wreg      unsigned char 
 35484 ;; Registers used:
 35485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35486 ;; Tracked objects:
 35487 ;;		On entry : 0/0
 35488 ;;		On exit  : 0/0
 35489 ;;		Unchanged: 0/0
 35490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35491 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35494 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35495 ;;Total ram usage:       11 bytes
 35496 ;; Hardware stack levels used:    1
 35497 ;; Hardware stack levels required when called:    8
 35498 ;; This function calls:
 35499 ;;		_fat_copy_sector_to_buffer
 35500 ;; This function is called by:
 35501 ;;		__parse_command_long
 35502 ;; This function uses a non-reentrant model
 35503 ;;
 35504                           
 35505                           	psect	text177
 35506  0040E2                     __ptext177:
 35507                           	opt stack 0
 35508  0040E2                     __parse_sector_to_buffer:
 35509                           	opt stack 20
 35510                           
 35511                           ;api.c: 871: uint8_t file_number;;api.c: 872: uint16_t sector;;api.c: 873: uint8_t retur
      +                          n_value;;api.c: 875: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (data[4]!=0x1B) || (data[
      +                          5]!=0x35))
 35512                           
 35513                           ;incstack = 0
 35514  0040E2  C054  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 35515  0040E6  C055  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 35516  0040EA  0E57               	movlw	87
 35517  0040EC  18DE               	xorwf	postinc2,w,c
 35518  0040EE  A4D8               	btfss	status,2,c
 35519  0040F0  D014               	goto	u12160
 35520  0040F2  EE20 F004          	lfsr	2,4
 35521  0040F6  5054               	movf	__parse_sector_to_buffer@data,w,c
 35522  0040F8  26D9               	addwf	fsr2l,f,c
 35523  0040FA  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35524  0040FC  22DA               	addwfc	fsr2h,f,c
 35525  0040FE  0E1B               	movlw	27
 35526  004100  18DE               	xorwf	postinc2,w,c
 35527  004102  A4D8               	btfss	status,2,c
 35528  004104  D00A               	goto	u12160
 35529  004106  EE20 F005          	lfsr	2,5
 35530  00410A  5054               	movf	__parse_sector_to_buffer@data,w,c
 35531  00410C  26D9               	addwf	fsr2l,f,c
 35532  00410E  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35533  004110  22DA               	addwfc	fsr2h,f,c
 35534  004112  0E35               	movlw	53
 35535  004114  18DE               	xorwf	postinc2,w,c
 35536  004116  B4D8               	btfsc	status,2,c
 35537  004118  D002               	goto	l2927
 35538  00411A                     u12160:
 35539                           
 35540                           ;api.c: 876: {;api.c: 877: return 6;
 35541  00411A  0E06               	movlw	6
 35542  00411C  0012               	return	
 35543  00411E                     l2927:
 35544                           
 35545                           ;api.c: 878: };api.c: 881: file_number = data[1];
 35546  00411E  EE20 F001          	lfsr	2,1
 35547  004122  5054               	movf	__parse_sector_to_buffer@data,w,c
 35548  004124  26D9               	addwf	fsr2l,f,c
 35549  004126  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35550  004128  22DA               	addwfc	fsr2h,f,c
 35551  00412A  50DF               	movf	indf2,w,c
 35552  00412C  6E5B               	movwf	__parse_sector_to_buffer@file_number,c
 35553                           
 35554                           ;api.c: 884: sector = data[2];
 35555  00412E  EE20 F002          	lfsr	2,2
 35556  004132  5054               	movf	__parse_sector_to_buffer@data,w,c
 35557  004134  26D9               	addwf	fsr2l,f,c
 35558  004136  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35559  004138  22DA               	addwfc	fsr2h,f,c
 35560  00413A  50DF               	movf	indf2,w,c
 35561  00413C  6E5A               	movwf	??__parse_sector_to_buffer& (0+255),c
 35562  00413E  505A               	movf	??__parse_sector_to_buffer,w,c
 35563  004140  6E5D               	movwf	__parse_sector_to_buffer@sector,c
 35564  004142  6A5E               	clrf	__parse_sector_to_buffer@sector+1,c
 35565                           
 35566                           ;api.c: 885: sector <<= 8;
 35567  004144  505D               	movf	__parse_sector_to_buffer@sector,w,c
 35568  004146  6E5E               	movwf	__parse_sector_to_buffer@sector+1,c
 35569  004148  6A5D               	clrf	__parse_sector_to_buffer@sector,c
 35570                           
 35571                           ;api.c: 886: sector |= data[3];
 35572  00414A  EE20 F003          	lfsr	2,3
 35573  00414E  5054               	movf	__parse_sector_to_buffer@data,w,c
 35574  004150  26D9               	addwf	fsr2l,f,c
 35575  004152  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35576  004154  22DA               	addwfc	fsr2h,f,c
 35577  004156  50DF               	movf	indf2,w,c
 35578  004158  6E5A               	movwf	??__parse_sector_to_buffer& (0+255),c
 35579  00415A  505A               	movf	??__parse_sector_to_buffer,w,c
 35580  00415C  125D               	iorwf	__parse_sector_to_buffer@sector,f,c
 35581                           
 35582                           ;api.c: 889: return_value = fat_copy_sector_to_buffer(data[1], sector);
 35583  00415E  C05D  F043         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 35584  004162  C05E  F044         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 35585  004166  EE20 F001          	lfsr	2,1
 35586  00416A  5054               	movf	__parse_sector_to_buffer@data,w,c
 35587  00416C  26D9               	addwf	fsr2l,f,c
 35588  00416E  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35589  004170  22DA               	addwfc	fsr2h,f,c
 35590  004172  50DF               	movf	indf2,w,c
 35591  004174  EC16  F03B         	call	_fat_copy_sector_to_buffer
 35592  004178  6E5C               	movwf	__parse_sector_to_buffer@return_value,c
 35593                           
 35594                           ;api.c: 892: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 35595  00417A  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35596  00417E  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35597  004182  50DF               	movf	indf2,w,c
 35598  004184  B4D8               	btfsc	status,2,c
 35599  004186  D061               	goto	l2931
 35600  004188  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35601  00418C  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35602  004190  0E3C               	movlw	60
 35603  004192  60DF               	cpfslt	indf2,c
 35604  004194  D05A               	goto	l2931
 35605                           
 35606                           ;api.c: 893: {;api.c: 894: out_buffer[(*out_idx_ptr)++] = COMMAND_SECTOR_TO_BUFFER;
 35607  004196  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35608  00419A  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35609  00419E  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35610  0041A2  0E01               	movlw	1
 35611  0041A4  26DF               	addwf	indf2,f,c
 35612  0041A6  505A               	movf	??__parse_sector_to_buffer,w,c
 35613  0041A8  0D01               	mullw	1
 35614  0041AA  50F3               	movf	prodl,w,c
 35615  0041AC  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35616  0041AE  6ED9               	movwf	fsr2l,c
 35617  0041B0  50F4               	movf	prodh,w,c
 35618  0041B2  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35619  0041B4  6EDA               	movwf	fsr2h,c
 35620  0041B6  0E57               	movlw	87
 35621  0041B8  6EDF               	movwf	indf2,c
 35622                           
 35623                           ;api.c: 895: out_buffer[(*out_idx_ptr)++] = file_number;
 35624  0041BA  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35625  0041BE  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35626  0041C2  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35627  0041C6  0E01               	movlw	1
 35628  0041C8  26DF               	addwf	indf2,f,c
 35629  0041CA  505A               	movf	??__parse_sector_to_buffer,w,c
 35630  0041CC  0D01               	mullw	1
 35631  0041CE  50F3               	movf	prodl,w,c
 35632  0041D0  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35633  0041D2  6ED9               	movwf	fsr2l,c
 35634  0041D4  50F4               	movf	prodh,w,c
 35635  0041D6  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35636  0041D8  6EDA               	movwf	fsr2h,c
 35637  0041DA  C05B  FFDF         	movff	__parse_sector_to_buffer@file_number,indf2
 35638                           
 35639                           ;api.c: 896: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 35640  0041DE  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35641  0041E2  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35642  0041E6  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35643  0041EA  0E01               	movlw	1
 35644  0041EC  26DF               	addwf	indf2,f,c
 35645  0041EE  505A               	movf	??__parse_sector_to_buffer,w,c
 35646  0041F0  0D01               	mullw	1
 35647  0041F2  50F3               	movf	prodl,w,c
 35648  0041F4  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35649  0041F6  6ED9               	movwf	fsr2l,c
 35650  0041F8  50F4               	movf	prodh,w,c
 35651  0041FA  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35652  0041FC  6EDA               	movwf	fsr2h,c
 35653  0041FE  505E               	movf	__parse_sector_to_buffer@sector+1,w,c
 35654  004200  6EDF               	movwf	indf2,c
 35655                           
 35656                           ;api.c: 897: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 35657  004202  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35658  004206  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35659  00420A  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35660  00420E  0E01               	movlw	1
 35661  004210  26DF               	addwf	indf2,f,c
 35662  004212  505A               	movf	??__parse_sector_to_buffer,w,c
 35663  004214  0D01               	mullw	1
 35664  004216  50F3               	movf	prodl,w,c
 35665  004218  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35666  00421A  6ED9               	movwf	fsr2l,c
 35667  00421C  50F4               	movf	prodh,w,c
 35668  00421E  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35669  004220  6EDA               	movwf	fsr2h,c
 35670  004222  C05D  FFDF         	movff	__parse_sector_to_buffer@sector,indf2
 35671                           
 35672                           ;api.c: 898: out_buffer[(*out_idx_ptr)++] = return_value;
 35673  004226  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35674  00422A  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35675  00422E  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35676  004232  0E01               	movlw	1
 35677  004234  26DF               	addwf	indf2,f,c
 35678  004236  505A               	movf	??__parse_sector_to_buffer,w,c
 35679  004238  0D01               	mullw	1
 35680  00423A  50F3               	movf	prodl,w,c
 35681  00423C  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35682  00423E  6ED9               	movwf	fsr2l,c
 35683  004240  50F4               	movf	prodh,w,c
 35684  004242  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35685  004244  6EDA               	movwf	fsr2h,c
 35686  004246  C05C  FFDF         	movff	__parse_sector_to_buffer@return_value,indf2
 35687  00424A                     l2931:
 35688                           
 35689                           ;api.c: 899: };api.c: 901: return 6;
 35690  00424A  0E06               	movlw	6
 35691  00424C  0012               	return	
 35692  00424E                     __end_of__parse_sector_to_buffer:
 35693                           	opt stack 0
 35694                           tosu	equ	0xFFF
 35695                           tosh	equ	0xFFE
 35696                           tosl	equ	0xFFD
 35697                           pclath	equ	0xFFA
 35698                           tblptru	equ	0xFF8
 35699                           tblptrh	equ	0xFF7
 35700                           tblptrl	equ	0xFF6
 35701                           tablat	equ	0xFF5
 35702                           prodh	equ	0xFF4
 35703                           prodl	equ	0xFF3
 35704                           intcon	equ	0xFF2
 35705                           intcon2	equ	0xFF1
 35706                           intcon3	equ	0xFF0
 35707                           indf0	equ	0xFEF
 35708                           postinc0	equ	0xFEE
 35709                           fsr0h	equ	0xFEA
 35710                           fsr0l	equ	0xFE9
 35711                           wreg	equ	0xFE8
 35712                           indf1	equ	0xFE7
 35713                           postdec1	equ	0xFE5
 35714                           plusw1	equ	0xFE3
 35715                           fsr1h	equ	0xFE2
 35716                           fsr1l	equ	0xFE1
 35717                           indf2	equ	0xFDF
 35718                           postinc2	equ	0xFDE
 35719                           postdec2	equ	0xFDD
 35720                           plusw2	equ	0xFDB
 35721                           fsr2h	equ	0xFDA
 35722                           fsr2l	equ	0xFD9
 35723                           status	equ	0xFD8
 35724                           
 35725 ;; *************** function __parse_format_drive *****************
 35726 ;; Defined at:
 35727 ;;		line 845 in file "api.c"
 35728 ;; Parameters:    Size  Location     Type
 35729 ;;  data            2   38[COMRAM] PTR unsigned char 
 35730 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35731 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 35732 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35733 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 35734 ;;		 -> api_parse@out_idx(1), 
 35735 ;; Auto vars:     Size  Location     Type
 35736 ;;  return_value    1   45[COMRAM] unsigned char 
 35737 ;; Return value:  Size  Location     Type
 35738 ;;                  1    wreg      unsigned char 
 35739 ;; Registers used:
 35740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35741 ;; Tracked objects:
 35742 ;;		On entry : 0/0
 35743 ;;		On exit  : 0/0
 35744 ;;		Unchanged: 0/0
 35745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35746 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35749 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35750 ;;Total ram usage:        8 bytes
 35751 ;; Hardware stack levels used:    1
 35752 ;; Hardware stack levels required when called:    6
 35753 ;; This function calls:
 35754 ;;		_fat_format
 35755 ;; This function is called by:
 35756 ;;		__parse_command_long
 35757 ;; This function uses a non-reentrant model
 35758 ;;
 35759                           
 35760                           	psect	text178
 35761  00799E                     __ptext178:
 35762                           	opt stack 0
 35763  00799E                     __parse_format_drive:
 35764                           	opt stack 22
 35765                           
 35766                           ;api.c: 849: uint8_t return_value;;api.c: 851: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 35767                           
 35768                           ;incstack = 0
 35769  00799E  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 35770  0079A2  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 35771  0079A6  0E56               	movlw	86
 35772  0079A8  18DE               	xorwf	postinc2,w,c
 35773  0079AA  A4D8               	btfss	status,2,c
 35774  0079AC  D014               	goto	u12110
 35775  0079AE  EE20 F001          	lfsr	2,1
 35776  0079B2  5027               	movf	__parse_format_drive@data,w,c
 35777  0079B4  26D9               	addwf	fsr2l,f,c
 35778  0079B6  5028               	movf	__parse_format_drive@data+1,w,c
 35779  0079B8  22DA               	addwfc	fsr2h,f,c
 35780  0079BA  0EDA               	movlw	218
 35781  0079BC  18DE               	xorwf	postinc2,w,c
 35782  0079BE  A4D8               	btfss	status,2,c
 35783  0079C0  D00A               	goto	u12110
 35784  0079C2  EE20 F002          	lfsr	2,2
 35785  0079C6  5027               	movf	__parse_format_drive@data,w,c
 35786  0079C8  26D9               	addwf	fsr2l,f,c
 35787  0079CA  5028               	movf	__parse_format_drive@data+1,w,c
 35788  0079CC  22DA               	addwfc	fsr2h,f,c
 35789  0079CE  0E22               	movlw	34
 35790  0079D0  18DE               	xorwf	postinc2,w,c
 35791  0079D2  B4D8               	btfsc	status,2,c
 35792  0079D4  D002               	goto	l2920
 35793  0079D6                     u12110:
 35794                           
 35795                           ;api.c: 852: {;api.c: 853: return 3;
 35796  0079D6  0E03               	movlw	3
 35797  0079D8  0012               	return	
 35798  0079DA                     l2920:
 35799                           
 35800                           ;api.c: 854: };api.c: 856: return_value = fat_format();
 35801  0079DA  EC59  F016         	call	_fat_format	;wreg free
 35802  0079DE  6E2E               	movwf	__parse_format_drive@return_value,c
 35803                           
 35804                           ;api.c: 859: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35805  0079E0  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35806  0079E4  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35807  0079E8  50DF               	movf	indf2,w,c
 35808  0079EA  B4D8               	btfsc	status,2,c
 35809  0079EC  D02B               	goto	l2924
 35810  0079EE  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35811  0079F2  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35812  0079F6  0E3F               	movlw	63
 35813  0079F8  60DF               	cpfslt	indf2,c
 35814  0079FA  D024               	goto	l2924
 35815                           
 35816                           ;api.c: 860: {;api.c: 861: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 35817  0079FC  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35818  007A00  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35819  007A04  CFDF F02D          	movff	indf2,??__parse_format_drive
 35820  007A08  0E01               	movlw	1
 35821  007A0A  26DF               	addwf	indf2,f,c
 35822  007A0C  502D               	movf	??__parse_format_drive,w,c
 35823  007A0E  0D01               	mullw	1
 35824  007A10  50F3               	movf	prodl,w,c
 35825  007A12  2429               	addwf	__parse_format_drive@out_buffer,w,c
 35826  007A14  6ED9               	movwf	fsr2l,c
 35827  007A16  50F4               	movf	prodh,w,c
 35828  007A18  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 35829  007A1A  6EDA               	movwf	fsr2h,c
 35830  007A1C  0E56               	movlw	86
 35831  007A1E  6EDF               	movwf	indf2,c
 35832                           
 35833                           ;api.c: 862: out_buffer[(*out_idx_ptr)++] = return_value;
 35834  007A20  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35835  007A24  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35836  007A28  CFDF F02D          	movff	indf2,??__parse_format_drive
 35837  007A2C  0E01               	movlw	1
 35838  007A2E  26DF               	addwf	indf2,f,c
 35839  007A30  502D               	movf	??__parse_format_drive,w,c
 35840  007A32  0D01               	mullw	1
 35841  007A34  50F3               	movf	prodl,w,c
 35842  007A36  2429               	addwf	__parse_format_drive@out_buffer,w,c
 35843  007A38  6ED9               	movwf	fsr2l,c
 35844  007A3A  50F4               	movf	prodh,w,c
 35845  007A3C  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 35846  007A3E  6EDA               	movwf	fsr2h,c
 35847  007A40  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 35848  007A44                     l2924:
 35849                           
 35850                           ;api.c: 863: };api.c: 865: return 3;
 35851  007A44  0E03               	movlw	3
 35852  007A46  0012               	return	
 35853  007A48                     __end_of__parse_format_drive:
 35854                           	opt stack 0
 35855                           tosu	equ	0xFFF
 35856                           tosh	equ	0xFFE
 35857                           tosl	equ	0xFFD
 35858                           pclath	equ	0xFFA
 35859                           tblptru	equ	0xFF8
 35860                           tblptrh	equ	0xFF7
 35861                           tblptrl	equ	0xFF6
 35862                           tablat	equ	0xFF5
 35863                           prodh	equ	0xFF4
 35864                           prodl	equ	0xFF3
 35865                           intcon	equ	0xFF2
 35866                           intcon2	equ	0xFF1
 35867                           intcon3	equ	0xFF0
 35868                           indf0	equ	0xFEF
 35869                           postinc0	equ	0xFEE
 35870                           fsr0h	equ	0xFEA
 35871                           fsr0l	equ	0xFE9
 35872                           wreg	equ	0xFE8
 35873                           indf1	equ	0xFE7
 35874                           postdec1	equ	0xFE5
 35875                           plusw1	equ	0xFE3
 35876                           fsr1h	equ	0xFE2
 35877                           fsr1l	equ	0xFE1
 35878                           indf2	equ	0xFDF
 35879                           postinc2	equ	0xFDE
 35880                           postdec2	equ	0xFDD
 35881                           plusw2	equ	0xFDB
 35882                           fsr2h	equ	0xFDA
 35883                           fsr2l	equ	0xFD9
 35884                           status	equ	0xFD8
 35885                           
 35886 ;; *************** function _fat_format *****************
 35887 ;; Defined at:
 35888 ;;		line 1320 in file "fat16.c"
 35889 ;; Parameters:    Size  Location     Type
 35890 ;;		None
 35891 ;; Auto vars:     Size  Location     Type
 35892 ;;  cntr            2   36[COMRAM] unsigned int 
 35893 ;; Return value:  Size  Location     Type
 35894 ;;                  1    wreg      unsigned char 
 35895 ;; Registers used:
 35896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35897 ;; Tracked objects:
 35898 ;;		On entry : 0/0
 35899 ;;		On exit  : 0/0
 35900 ;;		Unchanged: 0/0
 35901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35906 ;;Total ram usage:        2 bytes
 35907 ;; Hardware stack levels used:    1
 35908 ;; Hardware stack levels required when called:    5
 35909 ;; This function calls:
 35910 ;;		__get_data
 35911 ;;		__get_fat
 35912 ;;		__get_fbr
 35913 ;;		__get_mbr
 35914 ;;		__get_root
 35915 ;;		_flash_sector_write
 35916 ;; This function is called by:
 35917 ;;		_fat_init
 35918 ;;		__parse_format_drive
 35919 ;; This function uses a non-reentrant model
 35920 ;;
 35921                           
 35922                           	psect	text179
 35923  002CB2                     __ptext179:
 35924                           	opt stack 0
 35925  002CB2                     _fat_format:
 35926                           	opt stack 23
 35927                           
 35928                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 35929                           
 35930                           ;incstack = 0
 35931  002CB2  0E00               	movlw	0
 35932  002CB4  6E26               	movwf	fat_format@cntr+1,c
 35933  002CB6  0E00               	movlw	0
 35934  002CB8  6E25               	movwf	fat_format@cntr,c
 35935  002CBA                     l14109:
 35936  002CBA  0E02               	movlw	2
 35937  002CBC  5C26               	subwf	fat_format@cntr+1,w,c
 35938  002CBE  B0D8               	btfsc	status,0,c
 35939  002CC0  D010               	goto	u11320
 35940                           
 35941                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 35942  002CC2  0EC0               	movlw	low _buffer
 35943  002CC4  2425               	addwf	fat_format@cntr,w,c
 35944  002CC6  6ED9               	movwf	fsr2l,c
 35945  002CC8  0E03               	movlw	high _buffer
 35946  002CCA  2026               	addwfc	fat_format@cntr+1,w,c
 35947  002CCC  6EDA               	movwf	fsr2h,c
 35948  002CCE  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 35949  002CD2  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 35950  002CD6  EC5A  F035         	call	__get_mbr	;wreg free
 35951  002CDA  6EDF               	movwf	indf2,c
 35952  002CDC  4A25               	infsnz	fat_format@cntr,f,c
 35953  002CDE  2A26               	incf	fat_format@cntr+1,f,c
 35954  002CE0  D7EC               	goto	l14109
 35955  002CE2                     u11320:
 35956                           
 35957                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 35958  002CE2  0E00               	movlw	0
 35959  002CE4  6E21               	movwf	flash_sector_write@page+1,c
 35960  002CE6  0E00               	movlw	0
 35961  002CE8  6E20               	movwf	flash_sector_write@page,c
 35962  002CEA  0EC0               	movlw	low _buffer
 35963  002CEC  6E22               	movwf	flash_sector_write@data,c
 35964  002CEE  0E03               	movlw	high _buffer
 35965  002CF0  6E23               	movwf	flash_sector_write@data+1,c
 35966  002CF2  ECBD  F048         	call	_flash_sector_write	;wreg free
 35967                           
 35968                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 35969  002CF6  0E00               	movlw	0
 35970  002CF8  6E26               	movwf	fat_format@cntr+1,c
 35971  002CFA  0E00               	movlw	0
 35972  002CFC  6E25               	movwf	fat_format@cntr,c
 35973  002CFE                     l14123:
 35974  002CFE  0E02               	movlw	2
 35975  002D00  5C26               	subwf	fat_format@cntr+1,w,c
 35976  002D02  B0D8               	btfsc	status,0,c
 35977  002D04  D010               	goto	u11340
 35978                           
 35979                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 35980  002D06  0EC0               	movlw	low _buffer
 35981  002D08  2425               	addwf	fat_format@cntr,w,c
 35982  002D0A  6ED9               	movwf	fsr2l,c
 35983  002D0C  0E03               	movlw	high _buffer
 35984  002D0E  2026               	addwfc	fat_format@cntr+1,w,c
 35985  002D10  6EDA               	movwf	fsr2h,c
 35986  002D12  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 35987  002D16  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 35988  002D1A  ECBB  F00F         	call	__get_fbr	;wreg free
 35989  002D1E  6EDF               	movwf	indf2,c
 35990  002D20  4A25               	infsnz	fat_format@cntr,f,c
 35991  002D22  2A26               	incf	fat_format@cntr+1,f,c
 35992  002D24  D7EC               	goto	l14123
 35993  002D26                     u11340:
 35994                           
 35995                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 35996  002D26  0E00               	movlw	0
 35997  002D28  6E21               	movwf	flash_sector_write@page+1,c
 35998  002D2A  0E01               	movlw	1
 35999  002D2C  6E20               	movwf	flash_sector_write@page,c
 36000  002D2E  0EC0               	movlw	low _buffer
 36001  002D30  6E22               	movwf	flash_sector_write@data,c
 36002  002D32  0E03               	movlw	high _buffer
 36003  002D34  6E23               	movwf	flash_sector_write@data+1,c
 36004  002D36  ECBD  F048         	call	_flash_sector_write	;wreg free
 36005                           
 36006                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 36007  002D3A  0E00               	movlw	0
 36008  002D3C  6E26               	movwf	fat_format@cntr+1,c
 36009  002D3E  0E00               	movlw	0
 36010  002D40  6E25               	movwf	fat_format@cntr,c
 36011  002D42                     l14137:
 36012  002D42  0E02               	movlw	2
 36013  002D44  5C26               	subwf	fat_format@cntr+1,w,c
 36014  002D46  B0D8               	btfsc	status,0,c
 36015  002D48  D010               	goto	u11360
 36016                           
 36017                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 36018  002D4A  0EC0               	movlw	low _buffer
 36019  002D4C  2425               	addwf	fat_format@cntr,w,c
 36020  002D4E  6ED9               	movwf	fsr2l,c
 36021  002D50  0E03               	movlw	high _buffer
 36022  002D52  2026               	addwfc	fat_format@cntr+1,w,c
 36023  002D54  6EDA               	movwf	fsr2h,c
 36024  002D56  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 36025  002D5A  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 36026  002D5E  EC92  F048         	call	__get_fat	;wreg free
 36027  002D62  6EDF               	movwf	indf2,c
 36028  002D64  4A25               	infsnz	fat_format@cntr,f,c
 36029  002D66  2A26               	incf	fat_format@cntr+1,f,c
 36030  002D68  D7EC               	goto	l14137
 36031  002D6A                     u11360:
 36032                           
 36033                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 36034  002D6A  0E00               	movlw	0
 36035  002D6C  6E21               	movwf	flash_sector_write@page+1,c
 36036  002D6E  0E02               	movlw	2
 36037  002D70  6E20               	movwf	flash_sector_write@page,c
 36038  002D72  0EC0               	movlw	low _buffer
 36039  002D74  6E22               	movwf	flash_sector_write@data,c
 36040  002D76  0E03               	movlw	high _buffer
 36041  002D78  6E23               	movwf	flash_sector_write@data+1,c
 36042  002D7A  ECBD  F048         	call	_flash_sector_write	;wreg free
 36043                           
 36044                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 36045  002D7E  0E00               	movlw	0
 36046  002D80  6E26               	movwf	fat_format@cntr+1,c
 36047  002D82  0E00               	movlw	0
 36048  002D84  6E25               	movwf	fat_format@cntr,c
 36049  002D86                     l14151:
 36050  002D86  0E02               	movlw	2
 36051  002D88  5C26               	subwf	fat_format@cntr+1,w,c
 36052  002D8A  B0D8               	btfsc	status,0,c
 36053  002D8C  D00B               	goto	u11380
 36054                           
 36055                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 36056  002D8E  0EC0               	movlw	low _buffer
 36057  002D90  2425               	addwf	fat_format@cntr,w,c
 36058  002D92  6ED9               	movwf	fsr2l,c
 36059  002D94  0E03               	movlw	high _buffer
 36060  002D96  2026               	addwfc	fat_format@cntr+1,w,c
 36061  002D98  6EDA               	movwf	fsr2h,c
 36062  002D9A  0E00               	movlw	0
 36063  002D9C  6EDF               	movwf	indf2,c
 36064  002D9E  4A25               	infsnz	fat_format@cntr,f,c
 36065  002DA0  2A26               	incf	fat_format@cntr+1,f,c
 36066  002DA2  D7F1               	goto	l14151
 36067  002DA4                     u11380:
 36068                           
 36069                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 36070  002DA4  0E00               	movlw	0
 36071  002DA6  6E26               	movwf	fat_format@cntr+1,c
 36072  002DA8  0E03               	movlw	3
 36073  002DAA  6E25               	movwf	fat_format@cntr,c
 36074  002DAC                     l14163:
 36075  002DAC  5026               	movf	fat_format@cntr+1,w,c
 36076  002DAE  E111               	bnz	l14173
 36077  002DB0  0E22               	movlw	34
 36078  002DB2  5C25               	subwf	fat_format@cntr,w,c
 36079  002DB4  B0D8               	btfsc	status,0,c
 36080  002DB6  D00D               	goto	u11400
 36081                           
 36082                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 36083  002DB8  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 36084  002DBC  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 36085  002DC0  0EC0               	movlw	low _buffer
 36086  002DC2  6E22               	movwf	flash_sector_write@data,c
 36087  002DC4  0E03               	movlw	high _buffer
 36088  002DC6  6E23               	movwf	flash_sector_write@data+1,c
 36089  002DC8  ECBD  F048         	call	_flash_sector_write	;wreg free
 36090  002DCC  4A25               	infsnz	fat_format@cntr,f,c
 36091  002DCE  2A26               	incf	fat_format@cntr+1,f,c
 36092  002DD0  D7ED               	goto	l14163
 36093  002DD2                     u11400:
 36094  002DD2                     l14173:
 36095                           
 36096                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 36097  002DD2  0E00               	movlw	0
 36098  002DD4  6E26               	movwf	fat_format@cntr+1,c
 36099  002DD6  0E00               	movlw	0
 36100  002DD8  6E25               	movwf	fat_format@cntr,c
 36101  002DDA                     l14175:
 36102  002DDA  0E02               	movlw	2
 36103  002DDC  5C26               	subwf	fat_format@cntr+1,w,c
 36104  002DDE  B0D8               	btfsc	status,0,c
 36105  002DE0  D010               	goto	u11420
 36106                           
 36107                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 36108  002DE2  0EC0               	movlw	low _buffer
 36109  002DE4  2425               	addwf	fat_format@cntr,w,c
 36110  002DE6  6ED9               	movwf	fsr2l,c
 36111  002DE8  0E03               	movlw	high _buffer
 36112  002DEA  2026               	addwfc	fat_format@cntr+1,w,c
 36113  002DEC  6EDA               	movwf	fsr2h,c
 36114  002DEE  C025  F001         	movff	fat_format@cntr,__get_root@idx
 36115  002DF2  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 36116  002DF6  ECFD  F01B         	call	__get_root	;wreg free
 36117  002DFA  6EDF               	movwf	indf2,c
 36118  002DFC  4A25               	infsnz	fat_format@cntr,f,c
 36119  002DFE  2A26               	incf	fat_format@cntr+1,f,c
 36120  002E00  D7EC               	goto	l14175
 36121  002E02                     u11420:
 36122                           
 36123                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 36124  002E02  0E00               	movlw	0
 36125  002E04  6E21               	movwf	flash_sector_write@page+1,c
 36126  002E06  0E22               	movlw	34
 36127  002E08  6E20               	movwf	flash_sector_write@page,c
 36128  002E0A  0EC0               	movlw	low _buffer
 36129  002E0C  6E22               	movwf	flash_sector_write@data,c
 36130  002E0E  0E03               	movlw	high _buffer
 36131  002E10  6E23               	movwf	flash_sector_write@data+1,c
 36132  002E12  ECBD  F048         	call	_flash_sector_write	;wreg free
 36133                           
 36134                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 36135  002E16  0E00               	movlw	0
 36136  002E18  6E26               	movwf	fat_format@cntr+1,c
 36137  002E1A  0E00               	movlw	0
 36138  002E1C  6E25               	movwf	fat_format@cntr,c
 36139  002E1E                     l14189:
 36140  002E1E  0E02               	movlw	2
 36141  002E20  5C26               	subwf	fat_format@cntr+1,w,c
 36142  002E22  B0D8               	btfsc	status,0,c
 36143  002E24  D00B               	goto	u11440
 36144                           
 36145                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 36146  002E26  0EC0               	movlw	low _buffer
 36147  002E28  2425               	addwf	fat_format@cntr,w,c
 36148  002E2A  6ED9               	movwf	fsr2l,c
 36149  002E2C  0E03               	movlw	high _buffer
 36150  002E2E  2026               	addwfc	fat_format@cntr+1,w,c
 36151  002E30  6EDA               	movwf	fsr2h,c
 36152  002E32  0E00               	movlw	0
 36153  002E34  6EDF               	movwf	indf2,c
 36154  002E36  4A25               	infsnz	fat_format@cntr,f,c
 36155  002E38  2A26               	incf	fat_format@cntr+1,f,c
 36156  002E3A  D7F1               	goto	l14189
 36157  002E3C                     u11440:
 36158                           
 36159                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 36160  002E3C  0E00               	movlw	0
 36161  002E3E  6E26               	movwf	fat_format@cntr+1,c
 36162  002E40  0E23               	movlw	35
 36163  002E42  6E25               	movwf	fat_format@cntr,c
 36164  002E44                     l14201:
 36165  002E44  5026               	movf	fat_format@cntr+1,w,c
 36166  002E46  E111               	bnz	l14211
 36167  002E48  0E26               	movlw	38
 36168  002E4A  5C25               	subwf	fat_format@cntr,w,c
 36169  002E4C  B0D8               	btfsc	status,0,c
 36170  002E4E  D00D               	goto	u11460
 36171                           
 36172                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 36173  002E50  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 36174  002E54  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 36175  002E58  0EC0               	movlw	low _buffer
 36176  002E5A  6E22               	movwf	flash_sector_write@data,c
 36177  002E5C  0E03               	movlw	high _buffer
 36178  002E5E  6E23               	movwf	flash_sector_write@data+1,c
 36179  002E60  ECBD  F048         	call	_flash_sector_write	;wreg free
 36180  002E64  4A25               	infsnz	fat_format@cntr,f,c
 36181  002E66  2A26               	incf	fat_format@cntr+1,f,c
 36182  002E68  D7ED               	goto	l14201
 36183  002E6A                     u11460:
 36184  002E6A                     l14211:
 36185                           
 36186                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 36187  002E6A  0E00               	movlw	0
 36188  002E6C  6E26               	movwf	fat_format@cntr+1,c
 36189  002E6E  0E00               	movlw	0
 36190  002E70  6E25               	movwf	fat_format@cntr,c
 36191  002E72                     l14213:
 36192  002E72  0E02               	movlw	2
 36193  002E74  5C26               	subwf	fat_format@cntr+1,w,c
 36194  002E76  B0D8               	btfsc	status,0,c
 36195  002E78  D010               	goto	u11480
 36196                           
 36197                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 36198  002E7A  0EC0               	movlw	low _buffer
 36199  002E7C  2425               	addwf	fat_format@cntr,w,c
 36200  002E7E  6ED9               	movwf	fsr2l,c
 36201  002E80  0E03               	movlw	high _buffer
 36202  002E82  2026               	addwfc	fat_format@cntr+1,w,c
 36203  002E84  6EDA               	movwf	fsr2h,c
 36204  002E86  C025  F001         	movff	fat_format@cntr,__get_data@idx
 36205  002E8A  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 36206  002E8E  EC18  F04E         	call	__get_data	;wreg free
 36207  002E92  6EDF               	movwf	indf2,c
 36208  002E94  4A25               	infsnz	fat_format@cntr,f,c
 36209  002E96  2A26               	incf	fat_format@cntr+1,f,c
 36210  002E98  D7EC               	goto	l14213
 36211  002E9A                     u11480:
 36212                           
 36213                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 36214  002E9A  0E00               	movlw	0
 36215  002E9C  6E21               	movwf	flash_sector_write@page+1,c
 36216  002E9E  0E26               	movlw	38
 36217  002EA0  6E20               	movwf	flash_sector_write@page,c
 36218  002EA2  0EC0               	movlw	low _buffer
 36219  002EA4  6E22               	movwf	flash_sector_write@data,c
 36220  002EA6  0E03               	movlw	high _buffer
 36221  002EA8  6E23               	movwf	flash_sector_write@data+1,c
 36222  002EAA  ECBD  F048         	call	_flash_sector_write	;wreg free
 36223                           
 36224                           ;fat16.c: 1379: return 0x00;
 36225  002EAE  0E00               	movlw	0
 36226  002EB0  0012               	return	
 36227  002EB2                     __end_of_fat_format:
 36228                           	opt stack 0
 36229                           tosu	equ	0xFFF
 36230                           tosh	equ	0xFFE
 36231                           tosl	equ	0xFFD
 36232                           pclath	equ	0xFFA
 36233                           tblptru	equ	0xFF8
 36234                           tblptrh	equ	0xFF7
 36235                           tblptrl	equ	0xFF6
 36236                           tablat	equ	0xFF5
 36237                           prodh	equ	0xFF4
 36238                           prodl	equ	0xFF3
 36239                           intcon	equ	0xFF2
 36240                           intcon2	equ	0xFF1
 36241                           intcon3	equ	0xFF0
 36242                           indf0	equ	0xFEF
 36243                           postinc0	equ	0xFEE
 36244                           fsr0h	equ	0xFEA
 36245                           fsr0l	equ	0xFE9
 36246                           wreg	equ	0xFE8
 36247                           indf1	equ	0xFE7
 36248                           postdec1	equ	0xFE5
 36249                           plusw1	equ	0xFE3
 36250                           fsr1h	equ	0xFE2
 36251                           fsr1l	equ	0xFE1
 36252                           indf2	equ	0xFDF
 36253                           postinc2	equ	0xFDE
 36254                           postdec2	equ	0xFDD
 36255                           plusw2	equ	0xFDB
 36256                           fsr2h	equ	0xFDA
 36257                           fsr2l	equ	0xFD9
 36258                           status	equ	0xFD8
 36259                           
 36260 ;; *************** function __get_root *****************
 36261 ;; Defined at:
 36262 ;;		line 1210 in file "fat16.c"
 36263 ;; Parameters:    Size  Location     Type
 36264 ;;  idx             2    0[COMRAM] unsigned int 
 36265 ;; Auto vars:     Size  Location     Type
 36266 ;;		None
 36267 ;; Return value:  Size  Location     Type
 36268 ;;                  1    wreg      unsigned char 
 36269 ;; Registers used:
 36270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36271 ;; Tracked objects:
 36272 ;;		On entry : 0/0
 36273 ;;		On exit  : 0/0
 36274 ;;		Unchanged: 0/0
 36275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36279 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36280 ;;Total ram usage:        6 bytes
 36281 ;; Hardware stack levels used:    1
 36282 ;; This function calls:
 36283 ;;		Nothing
 36284 ;; This function is called by:
 36285 ;;		_fat_format
 36286 ;; This function uses a non-reentrant model
 36287 ;;
 36288                           
 36289                           	psect	text180
 36290  0037FA                     __ptext180:
 36291                           	opt stack 0
 36292  0037FA                     __get_root:
 36293                           	opt stack 27
 36294                           
 36295                           ;fat16.c: 1212: if(idx < 0x20)
 36296                           
 36297                           ;incstack = 0
 36298  0037FA  5002               	movf	__get_root@idx+1,w,c
 36299  0037FC  E11D               	bnz	l13365
 36300  0037FE  0E20               	movlw	32
 36301  003800  5C01               	subwf	__get_root@idx,w,c
 36302  003802  B0D8               	btfsc	status,0,c
 36303  003804  D019               	goto	l2258
 36304                           
 36305                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 36306  003806  5002               	movf	__get_root@idx+1,w,c
 36307  003808  E110               	bnz	l13359
 36308  00380A  0E0B               	movlw	11
 36309  00380C  5C01               	subwf	__get_root@idx,w,c
 36310  00380E  B0D8               	btfsc	status,0,c
 36311  003810  D00C               	goto	l2256
 36312                           
 36313                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
 36314  003812  0EDC               	movlw	low STR_9
 36315  003814  2401               	addwf	__get_root@idx,w,c
 36316  003816  6EF6               	movwf	tblptrl,c
 36317  003818  0EBF               	movlw	high STR_9
 36318  00381A  2002               	addwfc	__get_root@idx+1,w,c
 36319  00381C  6EF7               	movwf	tblptrh,c
 36320  00381E                     	if	1	;There are 3 active tblptr bytes
 36321  00381E  6AF8               	clrf	tblptru,c
 36322  003820  0E00               	movlw	low (__mediumconst shr (0+16))
 36323  003822  22F8               	addwfc	tblptru,f,c
 36324  003824                     	endif
 36325  003824  0008               	tblrd		*
 36326  003826  50F5               	movf	tablat,w,c
 36327  003828  0012               	return	
 36328  00382A                     l2256:
 36329  00382A                     l13359:
 36330                           
 36331                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 36332  00382A  0E0B               	movlw	11
 36333  00382C  1801               	xorwf	__get_root@idx,w,c
 36334  00382E  1002               	iorwf	__get_root@idx+1,w,c
 36335  003830  A4D8               	btfss	status,2,c
 36336  003832  D002               	goto	l2258
 36337                           
 36338                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 36339  003834  0E08               	movlw	8
 36340  003836  0012               	return	
 36341  003838                     l2258:
 36342  003838                     l13365:
 36343                           
 36344                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 36345  003838  5002               	movf	__get_root@idx+1,w,c
 36346  00383A  E103               	bnz	u10441
 36347  00383C  0E40               	movlw	64
 36348  00383E  5C01               	subwf	__get_root@idx,w,c
 36349  003840  B0D8               	btfsc	status,0,c
 36350  003842                     u10441:
 36351  003842  D0A4               	goto	l2284
 36352                           
 36353                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 36354  003844  0E20               	movlw	32
 36355  003846  5E01               	subwf	__get_root@idx,f,c
 36356  003848  0E00               	movlw	0
 36357  00384A  5A02               	subwfb	__get_root@idx+1,f,c
 36358                           
 36359                           ;fat16.c: 1226: if(idx < 0+8)
 36360  00384C  5002               	movf	__get_root@idx+1,w,c
 36361  00384E  E110               	bnz	l13373
 36362  003850  0E08               	movlw	8
 36363  003852  5C01               	subwf	__get_root@idx,w,c
 36364  003854  B0D8               	btfsc	status,0,c
 36365  003856  D00C               	goto	l2260
 36366                           
 36367                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 36368  003858  0EE8               	movlw	low STR_10
 36369  00385A  2401               	addwf	__get_root@idx,w,c
 36370  00385C  6EF6               	movwf	tblptrl,c
 36371  00385E  0EBF               	movlw	high STR_10
 36372  003860  2002               	addwfc	__get_root@idx+1,w,c
 36373  003862  6EF7               	movwf	tblptrh,c
 36374  003864                     	if	1	;There are 3 active tblptr bytes
 36375  003864  6AF8               	clrf	tblptru,c
 36376  003866  0E00               	movlw	low (__mediumconst shr (0+16))
 36377  003868  22F8               	addwfc	tblptru,f,c
 36378  00386A                     	endif
 36379  00386A  0008               	tblrd		*
 36380  00386C  50F5               	movf	tablat,w,c
 36381  00386E  0012               	return	
 36382  003870                     l2260:
 36383  003870                     l13373:
 36384                           
 36385                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 36386  003870  5002               	movf	__get_root@idx+1,w,c
 36387  003872  E146               	bnz	l13465
 36388  003874  0E0B               	movlw	11
 36389  003876  5C01               	subwf	__get_root@idx,w,c
 36390  003878  B0D8               	btfsc	status,0,c
 36391  00387A  D042               	goto	l2262
 36392                           
 36393                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 36394  00387C  0EF8               	movlw	248
 36395  00387E  6E03               	movwf	??__get_root& (0+255),c
 36396  003880  0EFF               	movlw	255
 36397  003882  6E04               	movwf	(??__get_root+1)& (0+255),c
 36398  003884  C001  F005         	movff	__get_root@idx,??__get_root+2
 36399  003888  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 36400  00388C  5003               	movf	??__get_root,w,c
 36401  00388E  2605               	addwf	??__get_root+2,f,c
 36402  003890  5004               	movf	??__get_root+1,w,c
 36403  003892  2206               	addwfc	??__get_root+3,f,c
 36404  003894  0EFA               	movlw	low STR_11
 36405  003896  2405               	addwf	??__get_root+2,w,c
 36406  003898  6EF6               	movwf	tblptrl,c
 36407  00389A  0EBF               	movlw	high STR_11
 36408  00389C  2006               	addwfc	??__get_root+3,w,c
 36409  00389E  6EF7               	movwf	tblptrh,c
 36410  0038A0                     	if	1	;There are 3 active tblptr bytes
 36411  0038A0  6AF8               	clrf	tblptru,c
 36412  0038A2  0E00               	movlw	low (__mediumconst shr (0+16))
 36413  0038A4  22F8               	addwfc	tblptru,f,c
 36414  0038A6                     	endif
 36415  0038A6  0008               	tblrd		*
 36416  0038A8  50F5               	movf	tablat,w,c
 36417  0038AA  0012               	return	
 36418  0038AC                     
 36419                           ;fat16.c: 1237: return 0x20;
 36420  0038AC  0E20               	movlw	32
 36421  0038AE  0012               	return	
 36422  0038B0                     
 36423                           ;fat16.c: 1239: return 0x06;
 36424  0038B0  0E06               	movlw	6
 36425  0038B2  0012               	return	
 36426  0038B4                     
 36427                           ;fat16.c: 1241: return 0x28;
 36428  0038B4  0E28               	movlw	40
 36429  0038B6  0012               	return	
 36430  0038B8                     
 36431                           ;fat16.c: 1243: return 0x78;
 36432  0038B8  0E78               	movlw	120
 36433  0038BA  0012               	return	
 36434  0038BC                     
 36435                           ;fat16.c: 1245: return 0xDE;
 36436  0038BC  0EDE               	movlw	222
 36437  0038BE  0012               	return	
 36438  0038C0                     
 36439                           ;fat16.c: 1247: return 0x38;
 36440  0038C0  0E38               	movlw	56
 36441  0038C2  0012               	return	
 36442  0038C4                     
 36443                           ;fat16.c: 1249: return 0x5F;
 36444  0038C4  0E5F               	movlw	95
 36445  0038C6  0012               	return	
 36446  0038C8                     
 36447                           ;fat16.c: 1251: return 0x4B;
 36448  0038C8  0E4B               	movlw	75
 36449  0038CA  0012               	return	
 36450  0038CC                     
 36451                           ;fat16.c: 1253: return 0x00;
 36452  0038CC  0E00               	movlw	0
 36453  0038CE  0012               	return	
 36454  0038D0                     
 36455                           ;fat16.c: 1255: return 0x00;
 36456  0038D0  0E00               	movlw	0
 36457  0038D2  0012               	return	
 36458  0038D4                     
 36459                           ;fat16.c: 1257: return 0x04;
 36460  0038D4  0E04               	movlw	4
 36461  0038D6  0012               	return	
 36462  0038D8                     
 36463                           ;fat16.c: 1259: return 0x77;
 36464  0038D8  0E77               	movlw	119
 36465  0038DA  0012               	return	
 36466  0038DC                     
 36467                           ;fat16.c: 1261: return 0xDE;
 36468  0038DC  0EDE               	movlw	222
 36469  0038DE  0012               	return	
 36470  0038E0                     
 36471                           ;fat16.c: 1263: return 0x38;
 36472  0038E0  0E38               	movlw	56
 36473  0038E2  0012               	return	
 36474  0038E4                     
 36475                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 36476  0038E4  0E02               	movlw	2
 36477  0038E6  0012               	return	
 36478  0038E8                     
 36479                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 36480  0038E8  0E00               	movlw	0
 36481  0038EA  0012               	return	
 36482  0038EC                     
 36483                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 36484  0038EC  0E0C               	movlw	12
 36485  0038EE  0012               	return	
 36486  0038F0                     
 36487                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 36488  0038F0  0E00               	movlw	0
 36489  0038F2  0012               	return	
 36490  0038F4                     
 36491                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 36492  0038F4  0E00               	movlw	0
 36493  0038F6  0012               	return	
 36494  0038F8                     
 36495                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 36496  0038F8  0E00               	movlw	0
 36497  0038FA  0012               	return	
 36498  0038FC                     
 36499                           ;fat16.c: 1277: return 0x00;
 36500  0038FC  0E00               	movlw	0
 36501  0038FE  0012               	return	
 36502  003900                     l2262:
 36503  003900                     l13465:
 36504  003900  C001  F003         	movff	__get_root@idx,??__get_root
 36505  003904  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 36506                           
 36507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36508                           ; Switch size 1, requested type "space"
 36509                           ; Number of cases is 1, Range of values is 0 to 0
 36510                           ; switch strategies available:
 36511                           ; Name         Instructions Cycles
 36512                           ; simple_byte            4     3 (average)
 36513                           ;	Chosen strategy is simple_byte
 36514  003908  5004               	movf	??__get_root+1,w,c
 36515  00390A  0A00               	xorlw	0	; case 0
 36516  00390C  A4D8               	btfss	status,2,c
 36517  00390E  D7F6               	goto	l2283
 36518                           
 36519                           ; Switch size 1, requested type "space"
 36520                           ; Number of cases is 20, Range of values is 11 to 31
 36521                           ; switch strategies available:
 36522                           ; Name         Instructions Cycles
 36523                           ; simple_byte           61    31 (average)
 36524                           ;	Chosen strategy is simple_byte
 36525  003910  5003               	movf	??__get_root,w,c
 36526  003912  0A0B               	xorlw	11	; case 11
 36527  003914  B4D8               	btfsc	status,2,c
 36528  003916  D7CA               	goto	l2263
 36529  003918  0A06               	xorlw	6	; case 13
 36530  00391A  B4D8               	btfsc	status,2,c
 36531  00391C  D7C9               	goto	l2264
 36532  00391E  0A03               	xorlw	3	; case 14
 36533  003920  B4D8               	btfsc	status,2,c
 36534  003922  D7C8               	goto	l2265
 36535  003924  0A01               	xorlw	1	; case 15
 36536  003926  B4D8               	btfsc	status,2,c
 36537  003928  D7C7               	goto	l2266
 36538  00392A  0A1F               	xorlw	31	; case 16
 36539  00392C  B4D8               	btfsc	status,2,c
 36540  00392E  D7C6               	goto	l2267
 36541  003930  0A01               	xorlw	1	; case 17
 36542  003932  B4D8               	btfsc	status,2,c
 36543  003934  D7C5               	goto	l2268
 36544  003936  0A03               	xorlw	3	; case 18
 36545  003938  B4D8               	btfsc	status,2,c
 36546  00393A  D7C4               	goto	l2269
 36547  00393C  0A01               	xorlw	1	; case 19
 36548  00393E  B4D8               	btfsc	status,2,c
 36549  003940  D7C3               	goto	l2270
 36550  003942  0A07               	xorlw	7	; case 20
 36551  003944  B4D8               	btfsc	status,2,c
 36552  003946  D7C2               	goto	l2271
 36553  003948  0A01               	xorlw	1	; case 21
 36554  00394A  B4D8               	btfsc	status,2,c
 36555  00394C  D7C1               	goto	l2272
 36556  00394E  0A03               	xorlw	3	; case 22
 36557  003950  B4D8               	btfsc	status,2,c
 36558  003952  D7C0               	goto	l2273
 36559  003954  0A01               	xorlw	1	; case 23
 36560  003956  B4D8               	btfsc	status,2,c
 36561  003958  D7BF               	goto	l2274
 36562  00395A  0A0F               	xorlw	15	; case 24
 36563  00395C  B4D8               	btfsc	status,2,c
 36564  00395E  D7BE               	goto	l2275
 36565  003960  0A01               	xorlw	1	; case 25
 36566  003962  B4D8               	btfsc	status,2,c
 36567  003964  D7BD               	goto	l2276
 36568  003966  0A03               	xorlw	3	; case 26
 36569  003968  B4D8               	btfsc	status,2,c
 36570  00396A  D7BC               	goto	l2277
 36571  00396C  0A01               	xorlw	1	; case 27
 36572  00396E  B4D8               	btfsc	status,2,c
 36573  003970  D7BB               	goto	l2278
 36574  003972  0A07               	xorlw	7	; case 28
 36575  003974  B4D8               	btfsc	status,2,c
 36576  003976  D7BA               	goto	l2279
 36577  003978  0A01               	xorlw	1	; case 29
 36578  00397A  B4D8               	btfsc	status,2,c
 36579  00397C  D7B9               	goto	l2280
 36580  00397E  0A03               	xorlw	3	; case 30
 36581  003980  B4D8               	btfsc	status,2,c
 36582  003982  D7B8               	goto	l2281
 36583  003984  0A01               	xorlw	1	; case 31
 36584  003986  B4D8               	btfsc	status,2,c
 36585  003988  D7B7               	goto	l2282
 36586  00398A  D7B8               	goto	l2283
 36587  00398C                     l2284:
 36588                           
 36589                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 36590  00398C  0E00               	movlw	0
 36591  00398E  0012               	return	
 36592  003990                     __end_of__get_root:
 36593                           	opt stack 0
 36594                           tosu	equ	0xFFF
 36595                           tosh	equ	0xFFE
 36596                           tosl	equ	0xFFD
 36597                           pclath	equ	0xFFA
 36598                           tblptru	equ	0xFF8
 36599                           tblptrh	equ	0xFF7
 36600                           tblptrl	equ	0xFF6
 36601                           tablat	equ	0xFF5
 36602                           prodh	equ	0xFF4
 36603                           prodl	equ	0xFF3
 36604                           intcon	equ	0xFF2
 36605                           intcon2	equ	0xFF1
 36606                           intcon3	equ	0xFF0
 36607                           indf0	equ	0xFEF
 36608                           postinc0	equ	0xFEE
 36609                           fsr0h	equ	0xFEA
 36610                           fsr0l	equ	0xFE9
 36611                           wreg	equ	0xFE8
 36612                           indf1	equ	0xFE7
 36613                           postdec1	equ	0xFE5
 36614                           plusw1	equ	0xFE3
 36615                           fsr1h	equ	0xFE2
 36616                           fsr1l	equ	0xFE1
 36617                           indf2	equ	0xFDF
 36618                           postinc2	equ	0xFDE
 36619                           postdec2	equ	0xFDD
 36620                           plusw2	equ	0xFDB
 36621                           fsr2h	equ	0xFDA
 36622                           fsr2l	equ	0xFD9
 36623                           status	equ	0xFD8
 36624                           
 36625 ;; *************** function __get_mbr *****************
 36626 ;; Defined at:
 36627 ;;		line 1037 in file "fat16.c"
 36628 ;; Parameters:    Size  Location     Type
 36629 ;;  idx             2    0[COMRAM] unsigned int 
 36630 ;; Auto vars:     Size  Location     Type
 36631 ;;		None
 36632 ;; Return value:  Size  Location     Type
 36633 ;;                  1    wreg      unsigned char 
 36634 ;; Registers used:
 36635 ;;		wreg, status,2, status,0
 36636 ;; Tracked objects:
 36637 ;;		On entry : 0/0
 36638 ;;		On exit  : 0/0
 36639 ;;		Unchanged: 0/0
 36640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36645 ;;Total ram usage:        4 bytes
 36646 ;; Hardware stack levels used:    1
 36647 ;; This function calls:
 36648 ;;		Nothing
 36649 ;; This function is called by:
 36650 ;;		_fat_get_format_status
 36651 ;;		_fat_format
 36652 ;; This function uses a non-reentrant model
 36653 ;;
 36654                           
 36655                           	psect	text181
 36656  006AB4                     __ptext181:
 36657                           	opt stack 0
 36658  006AB4                     __get_mbr:
 36659                           	opt stack 27
 36660                           
 36661                           ;fat16.c: 1039: switch (idx)
 36662                           
 36663                           ;incstack = 0
 36664  006AB4  D026               	goto	l2165
 36665  006AB6                     
 36666                           ;fat16.c: 1042: return 0x80;
 36667  006AB6  0E80               	movlw	128
 36668  006AB8  0012               	return	
 36669  006ABA                     
 36670                           ;fat16.c: 1044: return 0;
 36671  006ABA  0E00               	movlw	0
 36672  006ABC  0012               	return	
 36673  006ABE                     
 36674                           ;fat16.c: 1046: return 2;
 36675  006ABE  0E02               	movlw	2
 36676  006AC0  0012               	return	
 36677  006AC2                     
 36678                           ;fat16.c: 1048: return 0;
 36679  006AC2  0E00               	movlw	0
 36680  006AC4  0012               	return	
 36681  006AC6                     
 36682                           ;fat16.c: 1050: return 0x04;
 36683  006AC6  0E04               	movlw	4
 36684  006AC8  0012               	return	
 36685  006ACA                     
 36686                           ;fat16.c: 1052: return 2;
 36687  006ACA  0E02               	movlw	2
 36688  006ACC  0012               	return	
 36689  006ACE                     
 36690                           ;fat16.c: 1054: return 3;
 36691  006ACE  0E03               	movlw	3
 36692  006AD0  0012               	return	
 36693  006AD2                     
 36694                           ;fat16.c: 1056: return 8;
 36695  006AD2  0E08               	movlw	8
 36696  006AD4  0012               	return	
 36697  006AD6                     
 36698                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 36699  006AD6  0E01               	movlw	1
 36700  006AD8  0012               	return	
 36701  006ADA                     
 36702                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 36703  006ADA  0E00               	movlw	0
 36704  006ADC  0012               	return	
 36705  006ADE                     
 36706                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 36707  006ADE  0E00               	movlw	0
 36708  006AE0  0012               	return	
 36709  006AE2                     
 36710                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 36711  006AE2  0E00               	movlw	0
 36712  006AE4  0012               	return	
 36713  006AE6                     
 36714                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 36715  006AE6  0EFF               	movlw	255
 36716  006AE8  0012               	return	
 36717  006AEA                     
 36718                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 36719  006AEA  0E1F               	movlw	31
 36720  006AEC  0012               	return	
 36721  006AEE                     
 36722                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 36723  006AEE  0E00               	movlw	0
 36724  006AF0  0012               	return	
 36725  006AF2                     
 36726                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 36727  006AF2  0E00               	movlw	0
 36728  006AF4  0012               	return	
 36729  006AF6                     
 36730                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 36731  006AF6  0E55               	movlw	85
 36732  006AF8  0012               	return	
 36733  006AFA                     
 36734                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 36735  006AFA  0EAA               	movlw	170
 36736  006AFC  0012               	return	
 36737  006AFE                     
 36738                           ;fat16.c: 1078: return 0X00;
 36739  006AFE  0E00               	movlw	0
 36740                           
 36741                           ;fat16.c: 1079: }
 36742  006B00  0012               	return	
 36743  006B02                     l2165:
 36744  006B02  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 36745  006B06  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 36746                           
 36747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36748                           ; Switch size 1, requested type "space"
 36749                           ; Number of cases is 1, Range of values is 1 to 1
 36750                           ; switch strategies available:
 36751                           ; Name         Instructions Cycles
 36752                           ; simple_byte            4     3 (average)
 36753                           ;	Chosen strategy is simple_byte
 36754  006B0A  5004               	movf	??__get_mbr+1,w,c
 36755  006B0C  0A01               	xorlw	1	; case 1
 36756  006B0E  A4D8               	btfss	status,2,c
 36757  006B10  D7F6               	goto	l2185
 36758                           
 36759                           ; Switch size 1, requested type "space"
 36760                           ; Number of cases is 18, Range of values is 190 to 255
 36761                           ; switch strategies available:
 36762                           ; Name         Instructions Cycles
 36763                           ; simple_byte           55    28 (average)
 36764                           ;	Chosen strategy is simple_byte
 36765  006B12  5003               	movf	??__get_mbr,w,c
 36766  006B14  0ABE               	xorlw	190	; case 190
 36767  006B16  B4D8               	btfsc	status,2,c
 36768  006B18  D7CE               	goto	l2166
 36769  006B1A  0A01               	xorlw	1	; case 191
 36770  006B1C  B4D8               	btfsc	status,2,c
 36771  006B1E  D7CD               	goto	l2168
 36772  006B20  0A7F               	xorlw	127	; case 192
 36773  006B22  B4D8               	btfsc	status,2,c
 36774  006B24  D7CC               	goto	l2169
 36775  006B26  0A01               	xorlw	1	; case 193
 36776  006B28  B4D8               	btfsc	status,2,c
 36777  006B2A  D7CB               	goto	l2170
 36778  006B2C  0A03               	xorlw	3	; case 194
 36779  006B2E  B4D8               	btfsc	status,2,c
 36780  006B30  D7CA               	goto	l2171
 36781  006B32  0A01               	xorlw	1	; case 195
 36782  006B34  B4D8               	btfsc	status,2,c
 36783  006B36  D7C9               	goto	l2172
 36784  006B38  0A07               	xorlw	7	; case 196
 36785  006B3A  B4D8               	btfsc	status,2,c
 36786  006B3C  D7C8               	goto	l2173
 36787  006B3E  0A01               	xorlw	1	; case 197
 36788  006B40  B4D8               	btfsc	status,2,c
 36789  006B42  D7C7               	goto	l2174
 36790  006B44  0A03               	xorlw	3	; case 198
 36791  006B46  B4D8               	btfsc	status,2,c
 36792  006B48  D7C6               	goto	l2175
 36793  006B4A  0A01               	xorlw	1	; case 199
 36794  006B4C  B4D8               	btfsc	status,2,c
 36795  006B4E  D7C5               	goto	l2176
 36796  006B50  0A0F               	xorlw	15	; case 200
 36797  006B52  B4D8               	btfsc	status,2,c
 36798  006B54  D7C4               	goto	l2177
 36799  006B56  0A01               	xorlw	1	; case 201
 36800  006B58  B4D8               	btfsc	status,2,c
 36801  006B5A  D7C3               	goto	l2178
 36802  006B5C  0A03               	xorlw	3	; case 202
 36803  006B5E  B4D8               	btfsc	status,2,c
 36804  006B60  D7C2               	goto	l2179
 36805  006B62  0A01               	xorlw	1	; case 203
 36806  006B64  B4D8               	btfsc	status,2,c
 36807  006B66  D7C1               	goto	l2180
 36808  006B68  0A07               	xorlw	7	; case 204
 36809  006B6A  B4D8               	btfsc	status,2,c
 36810  006B6C  D7C0               	goto	l2181
 36811  006B6E  0A01               	xorlw	1	; case 205
 36812  006B70  B4D8               	btfsc	status,2,c
 36813  006B72  D7BF               	goto	l2182
 36814  006B74  0A33               	xorlw	51	; case 254
 36815  006B76  B4D8               	btfsc	status,2,c
 36816  006B78  D7BE               	goto	l2183
 36817  006B7A  0A01               	xorlw	1	; case 255
 36818  006B7C  B4D8               	btfsc	status,2,c
 36819  006B7E  D7BD               	goto	l2184
 36820  006B80  D7BE               	goto	l2185
 36821  006B82                     __end_of__get_mbr:
 36822                           	opt stack 0
 36823                           tosu	equ	0xFFF
 36824                           tosh	equ	0xFFE
 36825                           tosl	equ	0xFFD
 36826                           pclath	equ	0xFFA
 36827                           tblptru	equ	0xFF8
 36828                           tblptrh	equ	0xFF7
 36829                           tblptrl	equ	0xFF6
 36830                           tablat	equ	0xFF5
 36831                           prodh	equ	0xFF4
 36832                           prodl	equ	0xFF3
 36833                           intcon	equ	0xFF2
 36834                           intcon2	equ	0xFF1
 36835                           intcon3	equ	0xFF0
 36836                           indf0	equ	0xFEF
 36837                           postinc0	equ	0xFEE
 36838                           fsr0h	equ	0xFEA
 36839                           fsr0l	equ	0xFE9
 36840                           wreg	equ	0xFE8
 36841                           indf1	equ	0xFE7
 36842                           postdec1	equ	0xFE5
 36843                           plusw1	equ	0xFE3
 36844                           fsr1h	equ	0xFE2
 36845                           fsr1l	equ	0xFE1
 36846                           indf2	equ	0xFDF
 36847                           postinc2	equ	0xFDE
 36848                           postdec2	equ	0xFDD
 36849                           plusw2	equ	0xFDB
 36850                           fsr2h	equ	0xFDA
 36851                           fsr2l	equ	0xFD9
 36852                           status	equ	0xFD8
 36853                           
 36854 ;; *************** function __get_fbr *****************
 36855 ;; Defined at:
 36856 ;;		line 1082 in file "fat16.c"
 36857 ;; Parameters:    Size  Location     Type
 36858 ;;  idx             2    0[COMRAM] unsigned int 
 36859 ;; Auto vars:     Size  Location     Type
 36860 ;;		None
 36861 ;; Return value:  Size  Location     Type
 36862 ;;                  1    wreg      unsigned char 
 36863 ;; Registers used:
 36864 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36865 ;; Tracked objects:
 36866 ;;		On entry : 0/0
 36867 ;;		On exit  : 0/0
 36868 ;;		Unchanged: 0/0
 36869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36874 ;;Total ram usage:        4 bytes
 36875 ;; Hardware stack levels used:    1
 36876 ;; This function calls:
 36877 ;;		Nothing
 36878 ;; This function is called by:
 36879 ;;		_fat_get_format_status
 36880 ;;		_fat_format
 36881 ;; This function uses a non-reentrant model
 36882 ;;
 36883                           
 36884                           	psect	text182
 36885  001F76                     __ptext182:
 36886                           	opt stack 0
 36887  001F76                     __get_fbr:
 36888                           	opt stack 27
 36889                           
 36890                           ;fat16.c: 1084: switch (idx)
 36891                           
 36892                           ;incstack = 0
 36893  001F76  D091               	goto	l2189
 36894  001F78                     
 36895                           ;fat16.c: 1087: return 0xEB;
 36896  001F78  0EEB               	movlw	235
 36897  001F7A  0012               	return	
 36898  001F7C                     
 36899                           ;fat16.c: 1089: return 0x3C;
 36900  001F7C  0E3C               	movlw	60
 36901  001F7E  0012               	return	
 36902  001F80                     
 36903                           ;fat16.c: 1091: return 0x90;
 36904  001F80  0E90               	movlw	144
 36905  001F82  0012               	return	
 36906  001F84                     
 36907                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 36908  001F84  0EF1               	movlw	low STR_1
 36909  001F86  6EF6               	movwf	tblptrl,c
 36910  001F88                     	if	1	;There is more than 1 active tblptr byte
 36911  001F88  0EBF               	movlw	high STR_1
 36912  001F8A  6EF7               	movwf	tblptrh,c
 36913  001F8C                     	endif
 36914  001F8C                     	if	1	;There are 3 active tblptr bytes
 36915  001F8C  0E00               	movlw	low (STR_1 shr (0+16))
 36916  001F8E  6EF8               	movwf	tblptru,c
 36917  001F90                     	endif
 36918  001F90  0008               	tblrd		*
 36919  001F92  50F5               	movf	tablat,w,c
 36920  001F94  0012               	return	
 36921  001F96                     
 36922                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 36923  001F96  0EF2               	movlw	low (STR_1+1)
 36924  001F98  6EF6               	movwf	tblptrl,c
 36925  001F9A  0EBF               	movlw	high (STR_1+1)
 36926  001F9C  6EF7               	movwf	tblptrh,c
 36927  001F9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36928  001F9E  6AF8               	clrf	tblptru,c
 36929  001FA0                     	endif
 36930  001FA0                     	if	0	;tblptru may be non-zero
 36931  001FA0                     	endif
 36932  001FA0  0008               	tblrd		*
 36933  001FA2  50F5               	movf	tablat,w,c
 36934  001FA4  0012               	return	
 36935  001FA6                     
 36936                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 36937  001FA6  0EF3               	movlw	low (STR_1+2)
 36938  001FA8  6EF6               	movwf	tblptrl,c
 36939  001FAA  0EBF               	movlw	high (STR_1+2)
 36940  001FAC  6EF7               	movwf	tblptrh,c
 36941  001FAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36942  001FAE  6AF8               	clrf	tblptru,c
 36943  001FB0                     	endif
 36944  001FB0                     	if	0	;tblptru may be non-zero
 36945  001FB0                     	endif
 36946  001FB0  0008               	tblrd		*
 36947  001FB2  50F5               	movf	tablat,w,c
 36948  001FB4  0012               	return	
 36949  001FB6                     
 36950                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 36951  001FB6  0EF4               	movlw	low (STR_1+3)
 36952  001FB8  6EF6               	movwf	tblptrl,c
 36953  001FBA  0EBF               	movlw	high (STR_1+3)
 36954  001FBC  6EF7               	movwf	tblptrh,c
 36955  001FBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36956  001FBE  6AF8               	clrf	tblptru,c
 36957  001FC0                     	endif
 36958  001FC0                     	if	0	;tblptru may be non-zero
 36959  001FC0                     	endif
 36960  001FC0  0008               	tblrd		*
 36961  001FC2  50F5               	movf	tablat,w,c
 36962  001FC4  0012               	return	
 36963  001FC6                     
 36964                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 36965  001FC6  0EF5               	movlw	low (STR_1+4)
 36966  001FC8  6EF6               	movwf	tblptrl,c
 36967  001FCA  0EBF               	movlw	high (STR_1+4)
 36968  001FCC  6EF7               	movwf	tblptrh,c
 36969  001FCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36970  001FCE  6AF8               	clrf	tblptru,c
 36971  001FD0                     	endif
 36972  001FD0                     	if	0	;tblptru may be non-zero
 36973  001FD0                     	endif
 36974  001FD0  0008               	tblrd		*
 36975  001FD2  50F5               	movf	tablat,w,c
 36976  001FD4  0012               	return	
 36977  001FD6                     
 36978                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 36979  001FD6  0EF6               	movlw	low (STR_1+5)
 36980  001FD8  6EF6               	movwf	tblptrl,c
 36981  001FDA  0EBF               	movlw	high (STR_1+5)
 36982  001FDC  6EF7               	movwf	tblptrh,c
 36983  001FDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36984  001FDE  6AF8               	clrf	tblptru,c
 36985  001FE0                     	endif
 36986  001FE0                     	if	0	;tblptru may be non-zero
 36987  001FE0                     	endif
 36988  001FE0  0008               	tblrd		*
 36989  001FE2  50F5               	movf	tablat,w,c
 36990  001FE4  0012               	return	
 36991  001FE6                     
 36992                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 36993  001FE6  0EF7               	movlw	low (STR_1+6)
 36994  001FE8  6EF6               	movwf	tblptrl,c
 36995  001FEA  0EBF               	movlw	high (STR_1+6)
 36996  001FEC  6EF7               	movwf	tblptrh,c
 36997  001FEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36998  001FEE  6AF8               	clrf	tblptru,c
 36999  001FF0                     	endif
 37000  001FF0                     	if	0	;tblptru may be non-zero
 37001  001FF0                     	endif
 37002  001FF0  0008               	tblrd		*
 37003  001FF2  50F5               	movf	tablat,w,c
 37004  001FF4  0012               	return	
 37005  001FF6                     
 37006                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 37007  001FF6  0EF8               	movlw	low (STR_1+7)
 37008  001FF8  6EF6               	movwf	tblptrl,c
 37009  001FFA  0EBF               	movlw	high (STR_1+7)
 37010  001FFC  6EF7               	movwf	tblptrh,c
 37011  001FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37012  001FFE  6AF8               	clrf	tblptru,c
 37013  002000                     	endif
 37014  002000                     	if	0	;tblptru may be non-zero
 37015  002000                     	endif
 37016  002000  0008               	tblrd		*
 37017  002002  50F5               	movf	tablat,w,c
 37018  002004  0012               	return	
 37019  002006                     
 37020                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 37021  002006  0E00               	movlw	0
 37022  002008  0012               	return	
 37023  00200A                     
 37024                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 37025  00200A  0E02               	movlw	2
 37026  00200C  0012               	return	
 37027  00200E                     
 37028                           ;fat16.c: 1113: return 1;
 37029  00200E  0E01               	movlw	1
 37030  002010  0012               	return	
 37031  002012                     
 37032                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 37033  002012  0E01               	movlw	1
 37034  002014  0012               	return	
 37035  002016                     
 37036                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 37037  002016  0E00               	movlw	0
 37038  002018  0012               	return	
 37039  00201A                     
 37040                           ;fat16.c: 1119: return 1;
 37041  00201A  0E01               	movlw	1
 37042  00201C  0012               	return	
 37043  00201E                     
 37044                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 37045  00201E  0E40               	movlw	64
 37046  002020  0012               	return	
 37047  002022                     
 37048                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 37049  002022  0E00               	movlw	0
 37050  002024  0012               	return	
 37051  002026                     
 37052                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 37053  002026  0EFF               	movlw	255
 37054  002028  0012               	return	
 37055  00202A                     
 37056                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 37057  00202A  0E1F               	movlw	31
 37058  00202C  0012               	return	
 37059  00202E                     
 37060                           ;fat16.c: 1129: return 0XF8;
 37061  00202E  0EF8               	movlw	248
 37062  002030  0012               	return	
 37063  002032                     
 37064                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 37065  002032  0E20               	movlw	32
 37066  002034  0012               	return	
 37067  002036                     
 37068                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 37069  002036  0E00               	movlw	0
 37070  002038  0012               	return	
 37071  00203A                     
 37072                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 37073  00203A  0E3F               	movlw	63
 37074  00203C  0012               	return	
 37075  00203E                     
 37076                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 37077  00203E  0E00               	movlw	0
 37078  002040  0012               	return	
 37079  002042                     
 37080                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 37081  002042  0E10               	movlw	16
 37082  002044  0012               	return	
 37083  002046                     
 37084                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 37085  002046  0E00               	movlw	0
 37086  002048  0012               	return	
 37087  00204A                     
 37088                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 37089  00204A  0E00               	movlw	0
 37090  00204C  0012               	return	
 37091  00204E                     
 37092                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 37093  00204E  0E00               	movlw	0
 37094  002050  0012               	return	
 37095  002052                     
 37096                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 37097  002052  0E00               	movlw	0
 37098  002054  0012               	return	
 37099  002056                     
 37100                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 37101  002056  0E00               	movlw	0
 37102  002058  0012               	return	
 37103  00205A                     
 37104                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 37105  00205A  0E01               	movlw	1
 37106  00205C  0012               	return	
 37107  00205E                     
 37108                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 37109  00205E  0E00               	movlw	0
 37110  002060  0012               	return	
 37111  002062                     
 37112                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 37113  002062  0E22               	movlw	34
 37114  002064  0012               	return	
 37115  002066                     
 37116                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 37117  002066  0E00               	movlw	0
 37118  002068  0012               	return	
 37119  00206A                     
 37120                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 37121                           
 37122                           ;fat16.c: 1160: case 0x2F:
 37123  00206A  0E00               	movlw	0
 37124  00206C  0012               	return	
 37125  00206E                     
 37126                           ;fat16.c: 1163: return 'F';
 37127  00206E  0E46               	movlw	70
 37128  002070  0012               	return	
 37129  002072                     
 37130                           ;fat16.c: 1165: return 'A';
 37131  002072  0E41               	movlw	65
 37132  002074  0012               	return	
 37133  002076                     
 37134                           ;fat16.c: 1167: return 'T';
 37135  002076  0E54               	movlw	84
 37136  002078  0012               	return	
 37137  00207A                     
 37138                           ;fat16.c: 1169: return '1';
 37139  00207A  0E31               	movlw	49
 37140  00207C  0012               	return	
 37141  00207E                     
 37142                           ;fat16.c: 1171: return '6';
 37143  00207E  0E36               	movlw	54
 37144  002080  0012               	return	
 37145  002082                     
 37146                           ;fat16.c: 1173: return ' ';
 37147  002082  0E20               	movlw	32
 37148  002084  0012               	return	
 37149  002086                     
 37150                           ;fat16.c: 1175: return ' ';
 37151  002086  0E20               	movlw	32
 37152  002088  0012               	return	
 37153  00208A                     
 37154                           ;fat16.c: 1177: return ' ';
 37155  00208A  0E20               	movlw	32
 37156  00208C  0012               	return	
 37157  00208E                     
 37158                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 37159  00208E  0E55               	movlw	85
 37160  002090  0012               	return	
 37161  002092                     
 37162                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 37163  002092  0EAA               	movlw	170
 37164  002094  0012               	return	
 37165  002096                     
 37166                           ;fat16.c: 1183: return 0X00;
 37167  002096  0E00               	movlw	0
 37168                           
 37169                           ;fat16.c: 1184: }
 37170  002098  0012               	return	
 37171  00209A                     l2189:
 37172  00209A  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 37173  00209E  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 37174                           
 37175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 37176                           ; Switch size 1, requested type "space"
 37177                           ; Number of cases is 2, Range of values is 0 to 1
 37178                           ; switch strategies available:
 37179                           ; Name         Instructions Cycles
 37180                           ; simple_byte            7     4 (average)
 37181                           ;	Chosen strategy is simple_byte
 37182  0020A2  5004               	movf	??__get_fbr+1,w,c
 37183  0020A4  0A00               	xorlw	0	; case 0
 37184  0020A6  B4D8               	btfsc	status,2,c
 37185  0020A8  D004               	goto	l17291
 37186  0020AA  0A01               	xorlw	1	; case 1
 37187  0020AC  B4D8               	btfsc	status,2,c
 37188  0020AE  D08D               	goto	l17293
 37189  0020B0  D7F2               	goto	l2239
 37190  0020B2                     l17291:
 37191                           
 37192                           ; Switch size 1, requested type "space"
 37193                           ; Number of cases is 46, Range of values is 0 to 61
 37194                           ; switch strategies available:
 37195                           ; Name         Instructions Cycles
 37196                           ; simple_byte          139    70 (average)
 37197                           ;	Chosen strategy is simple_byte
 37198  0020B2  5003               	movf	??__get_fbr,w,c
 37199  0020B4  0A00               	xorlw	0	; case 0
 37200  0020B6  B4D8               	btfsc	status,2,c
 37201  0020B8  D75F               	goto	l2190
 37202  0020BA  0A01               	xorlw	1	; case 1
 37203  0020BC  B4D8               	btfsc	status,2,c
 37204  0020BE  D75E               	goto	l2192
 37205  0020C0  0A03               	xorlw	3	; case 2
 37206  0020C2  B4D8               	btfsc	status,2,c
 37207  0020C4  D75D               	goto	l2193
 37208  0020C6  0A01               	xorlw	1	; case 3
 37209  0020C8  B4D8               	btfsc	status,2,c
 37210  0020CA  D75C               	goto	l2194
 37211  0020CC  0A07               	xorlw	7	; case 4
 37212  0020CE  B4D8               	btfsc	status,2,c
 37213  0020D0  D762               	goto	l2195
 37214  0020D2  0A01               	xorlw	1	; case 5
 37215  0020D4  B4D8               	btfsc	status,2,c
 37216  0020D6  D767               	goto	l2196
 37217  0020D8  0A03               	xorlw	3	; case 6
 37218  0020DA  B4D8               	btfsc	status,2,c
 37219  0020DC  D76C               	goto	l2197
 37220  0020DE  0A01               	xorlw	1	; case 7
 37221  0020E0  B4D8               	btfsc	status,2,c
 37222  0020E2  D771               	goto	l2198
 37223  0020E4  0A0F               	xorlw	15	; case 8
 37224  0020E6  B4D8               	btfsc	status,2,c
 37225  0020E8  D776               	goto	l2199
 37226  0020EA  0A01               	xorlw	1	; case 9
 37227  0020EC  B4D8               	btfsc	status,2,c
 37228  0020EE  D77B               	goto	l2200
 37229  0020F0  0A03               	xorlw	3	; case 10
 37230  0020F2  B4D8               	btfsc	status,2,c
 37231  0020F4  D780               	goto	l2201
 37232  0020F6  0A01               	xorlw	1	; case 11
 37233  0020F8  B4D8               	btfsc	status,2,c
 37234  0020FA  D785               	goto	l2202
 37235  0020FC  0A07               	xorlw	7	; case 12
 37236  0020FE  B4D8               	btfsc	status,2,c
 37237  002100  D784               	goto	l2203
 37238  002102  0A01               	xorlw	1	; case 13
 37239  002104  B4D8               	btfsc	status,2,c
 37240  002106  D783               	goto	l2204
 37241  002108  0A03               	xorlw	3	; case 14
 37242  00210A  B4D8               	btfsc	status,2,c
 37243  00210C  D782               	goto	l2205
 37244  00210E  0A01               	xorlw	1	; case 15
 37245  002110  B4D8               	btfsc	status,2,c
 37246  002112  D781               	goto	l2206
 37247  002114  0A1F               	xorlw	31	; case 16
 37248  002116  B4D8               	btfsc	status,2,c
 37249  002118  D780               	goto	l2207
 37250  00211A  0A01               	xorlw	1	; case 17
 37251  00211C  B4D8               	btfsc	status,2,c
 37252  00211E  D77F               	goto	l2208
 37253  002120  0A03               	xorlw	3	; case 18
 37254  002122  B4D8               	btfsc	status,2,c
 37255  002124  D77E               	goto	l2209
 37256  002126  0A01               	xorlw	1	; case 19
 37257  002128  B4D8               	btfsc	status,2,c
 37258  00212A  D77D               	goto	l2210
 37259  00212C  0A07               	xorlw	7	; case 20
 37260  00212E  B4D8               	btfsc	status,2,c
 37261  002130  D77C               	goto	l2211
 37262  002132  0A01               	xorlw	1	; case 21
 37263  002134  B4D8               	btfsc	status,2,c
 37264  002136  D77B               	goto	l2212
 37265  002138  0A03               	xorlw	3	; case 22
 37266  00213A  B4D8               	btfsc	status,2,c
 37267  00213C  D77A               	goto	l2213
 37268  00213E  0A01               	xorlw	1	; case 23
 37269  002140  B4D8               	btfsc	status,2,c
 37270  002142  D779               	goto	l2214
 37271  002144  0A0F               	xorlw	15	; case 24
 37272  002146  B4D8               	btfsc	status,2,c
 37273  002148  D778               	goto	l2215
 37274  00214A  0A01               	xorlw	1	; case 25
 37275  00214C  B4D8               	btfsc	status,2,c
 37276  00214E  D777               	goto	l2216
 37277  002150  0A03               	xorlw	3	; case 26
 37278  002152  B4D8               	btfsc	status,2,c
 37279  002154  D776               	goto	l2217
 37280  002156  0A01               	xorlw	1	; case 27
 37281  002158  B4D8               	btfsc	status,2,c
 37282  00215A  D775               	goto	l2218
 37283  00215C  0A07               	xorlw	7	; case 28
 37284  00215E  B4D8               	btfsc	status,2,c
 37285  002160  D774               	goto	l2219
 37286  002162  0A01               	xorlw	1	; case 29
 37287  002164  B4D8               	btfsc	status,2,c
 37288  002166  D773               	goto	l2220
 37289  002168  0A03               	xorlw	3	; case 30
 37290  00216A  B4D8               	btfsc	status,2,c
 37291  00216C  D772               	goto	l2221
 37292  00216E  0A01               	xorlw	1	; case 31
 37293  002170  B4D8               	btfsc	status,2,c
 37294  002172  D771               	goto	l2222
 37295  002174  0A37               	xorlw	55	; case 40
 37296  002176  B4D8               	btfsc	status,2,c
 37297  002178  D770               	goto	l2223
 37298  00217A  0A01               	xorlw	1	; case 41
 37299  00217C  B4D8               	btfsc	status,2,c
 37300  00217E  D76F               	goto	l2224
 37301  002180  0A05               	xorlw	5	; case 44
 37302  002182  B4D8               	btfsc	status,2,c
 37303  002184  D76E               	goto	l2225
 37304  002186  0A01               	xorlw	1	; case 45
 37305  002188  B4D8               	btfsc	status,2,c
 37306  00218A  D76D               	goto	l2226
 37307  00218C  0A03               	xorlw	3	; case 46
 37308  00218E  B4D8               	btfsc	status,2,c
 37309  002190  D76C               	goto	l2227
 37310  002192  0A01               	xorlw	1	; case 47
 37311  002194  B4D8               	btfsc	status,2,c
 37312  002196  D769               	goto	l2227
 37313  002198  0A19               	xorlw	25	; case 54
 37314  00219A  B4D8               	btfsc	status,2,c
 37315  00219C  D768               	goto	l2229
 37316  00219E  0A01               	xorlw	1	; case 55
 37317  0021A0  B4D8               	btfsc	status,2,c
 37318  0021A2  D767               	goto	l2230
 37319  0021A4  0A0F               	xorlw	15	; case 56
 37320  0021A6  B4D8               	btfsc	status,2,c
 37321  0021A8  D766               	goto	l2231
 37322  0021AA  0A01               	xorlw	1	; case 57
 37323  0021AC  B4D8               	btfsc	status,2,c
 37324  0021AE  D765               	goto	l2232
 37325  0021B0  0A03               	xorlw	3	; case 58
 37326  0021B2  B4D8               	btfsc	status,2,c
 37327  0021B4  D764               	goto	l2233
 37328  0021B6  0A01               	xorlw	1	; case 59
 37329  0021B8  B4D8               	btfsc	status,2,c
 37330  0021BA  D763               	goto	l2234
 37331  0021BC  0A07               	xorlw	7	; case 60
 37332  0021BE  B4D8               	btfsc	status,2,c
 37333  0021C0  D762               	goto	l2235
 37334  0021C2  0A01               	xorlw	1	; case 61
 37335  0021C4  B4D8               	btfsc	status,2,c
 37336  0021C6  D761               	goto	l2236
 37337  0021C8  D766               	goto	l2239
 37338  0021CA                     l17293:
 37339                           
 37340                           ; Switch size 1, requested type "space"
 37341                           ; Number of cases is 2, Range of values is 254 to 255
 37342                           ; switch strategies available:
 37343                           ; Name         Instructions Cycles
 37344                           ; simple_byte            7     4 (average)
 37345                           ;	Chosen strategy is simple_byte
 37346  0021CA  5003               	movf	??__get_fbr,w,c
 37347  0021CC  0AFE               	xorlw	254	; case 254
 37348  0021CE  B4D8               	btfsc	status,2,c
 37349  0021D0  D75E               	goto	l2237
 37350  0021D2  0A01               	xorlw	1	; case 255
 37351  0021D4  B4D8               	btfsc	status,2,c
 37352  0021D6  D75D               	goto	l2238
 37353  0021D8  D75E               	goto	l2239
 37354  0021DA                     __end_of__get_fbr:
 37355                           	opt stack 0
 37356                           tosu	equ	0xFFF
 37357                           tosh	equ	0xFFE
 37358                           tosl	equ	0xFFD
 37359                           pclath	equ	0xFFA
 37360                           tblptru	equ	0xFF8
 37361                           tblptrh	equ	0xFF7
 37362                           tblptrl	equ	0xFF6
 37363                           tablat	equ	0xFF5
 37364                           prodh	equ	0xFF4
 37365                           prodl	equ	0xFF3
 37366                           intcon	equ	0xFF2
 37367                           intcon2	equ	0xFF1
 37368                           intcon3	equ	0xFF0
 37369                           indf0	equ	0xFEF
 37370                           postinc0	equ	0xFEE
 37371                           fsr0h	equ	0xFEA
 37372                           fsr0l	equ	0xFE9
 37373                           wreg	equ	0xFE8
 37374                           indf1	equ	0xFE7
 37375                           postdec1	equ	0xFE5
 37376                           plusw1	equ	0xFE3
 37377                           fsr1h	equ	0xFE2
 37378                           fsr1l	equ	0xFE1
 37379                           indf2	equ	0xFDF
 37380                           postinc2	equ	0xFDE
 37381                           postdec2	equ	0xFDD
 37382                           plusw2	equ	0xFDB
 37383                           fsr2h	equ	0xFDA
 37384                           fsr2l	equ	0xFD9
 37385                           status	equ	0xFD8
 37386                           
 37387 ;; *************** function __get_fat *****************
 37388 ;; Defined at:
 37389 ;;		line 1187 in file "fat16.c"
 37390 ;; Parameters:    Size  Location     Type
 37391 ;;  idx             2    0[COMRAM] unsigned int 
 37392 ;; Auto vars:     Size  Location     Type
 37393 ;;		None
 37394 ;; Return value:  Size  Location     Type
 37395 ;;                  1    wreg      unsigned char 
 37396 ;; Registers used:
 37397 ;;		wreg, status,2, status,0
 37398 ;; Tracked objects:
 37399 ;;		On entry : 0/0
 37400 ;;		On exit  : 0/0
 37401 ;;		Unchanged: 0/0
 37402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37407 ;;Total ram usage:        4 bytes
 37408 ;; Hardware stack levels used:    1
 37409 ;; This function calls:
 37410 ;;		Nothing
 37411 ;; This function is called by:
 37412 ;;		_fat_format
 37413 ;; This function uses a non-reentrant model
 37414 ;;
 37415                           
 37416                           	psect	text183
 37417  009124                     __ptext183:
 37418                           	opt stack 0
 37419  009124                     __get_fat:
 37420                           	opt stack 27
 37421                           
 37422                           ;fat16.c: 1189: switch (idx)
 37423                           
 37424                           ;incstack = 0
 37425  009124  D00E               	goto	l2243
 37426  009126                     
 37427                           ;fat16.c: 1193: return 0xF8;
 37428  009126  0EF8               	movlw	248
 37429  009128  0012               	return	
 37430  00912A                     
 37431                           ;fat16.c: 1195: return 0xFF;
 37432  00912A  0EFF               	movlw	255
 37433  00912C  0012               	return	
 37434  00912E                     
 37435                           ;fat16.c: 1197: return 0xFF;
 37436  00912E  0EFF               	movlw	255
 37437  009130  0012               	return	
 37438  009132                     
 37439                           ;fat16.c: 1199: return 0xFF;
 37440  009132  0EFF               	movlw	255
 37441  009134  0012               	return	
 37442  009136                     
 37443                           ;fat16.c: 1202: return 0xFF;
 37444  009136  0EFF               	movlw	255
 37445  009138  0012               	return	
 37446  00913A                     
 37447                           ;fat16.c: 1204: return 0xFF;
 37448  00913A  0EFF               	movlw	255
 37449  00913C  0012               	return	
 37450  00913E                     
 37451                           ;fat16.c: 1206: return 0X00;
 37452  00913E  0E00               	movlw	0
 37453                           
 37454                           ;fat16.c: 1207: }
 37455  009140  0012               	return	
 37456  009142                     l2243:
 37457  009142  C001  F003         	movff	__get_fat@idx,??__get_fat
 37458  009146  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 37459                           
 37460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37461                           ; Switch size 1, requested type "space"
 37462                           ; Number of cases is 1, Range of values is 0 to 0
 37463                           ; switch strategies available:
 37464                           ; Name         Instructions Cycles
 37465                           ; simple_byte            4     3 (average)
 37466                           ;	Chosen strategy is simple_byte
 37467  00914A  5004               	movf	??__get_fat+1,w,c
 37468  00914C  0A00               	xorlw	0	; case 0
 37469  00914E  A4D8               	btfss	status,2,c
 37470  009150  D7F6               	goto	l2251
 37471                           
 37472                           ; Switch size 1, requested type "space"
 37473                           ; Number of cases is 6, Range of values is 0 to 5
 37474                           ; switch strategies available:
 37475                           ; Name         Instructions Cycles
 37476                           ; simple_byte           19    10 (average)
 37477                           ;	Chosen strategy is simple_byte
 37478  009152  5003               	movf	??__get_fat,w,c
 37479  009154  0A00               	xorlw	0	; case 0
 37480  009156  B4D8               	btfsc	status,2,c
 37481  009158  D7E6               	goto	l2244
 37482  00915A  0A01               	xorlw	1	; case 1
 37483  00915C  B4D8               	btfsc	status,2,c
 37484  00915E  D7E5               	goto	l2246
 37485  009160  0A03               	xorlw	3	; case 2
 37486  009162  B4D8               	btfsc	status,2,c
 37487  009164  D7E4               	goto	l2247
 37488  009166  0A01               	xorlw	1	; case 3
 37489  009168  B4D8               	btfsc	status,2,c
 37490  00916A  D7E3               	goto	l2248
 37491  00916C  0A07               	xorlw	7	; case 4
 37492  00916E  B4D8               	btfsc	status,2,c
 37493  009170  D7E2               	goto	l2249
 37494  009172  0A01               	xorlw	1	; case 5
 37495  009174  B4D8               	btfsc	status,2,c
 37496  009176  D7E1               	goto	l2250
 37497  009178  D7E2               	goto	l2251
 37498  00917A                     __end_of__get_fat:
 37499                           	opt stack 0
 37500                           tosu	equ	0xFFF
 37501                           tosh	equ	0xFFE
 37502                           tosl	equ	0xFFD
 37503                           pclath	equ	0xFFA
 37504                           tblptru	equ	0xFF8
 37505                           tblptrh	equ	0xFF7
 37506                           tblptrl	equ	0xFF6
 37507                           tablat	equ	0xFF5
 37508                           prodh	equ	0xFF4
 37509                           prodl	equ	0xFF3
 37510                           intcon	equ	0xFF2
 37511                           intcon2	equ	0xFF1
 37512                           intcon3	equ	0xFF0
 37513                           indf0	equ	0xFEF
 37514                           postinc0	equ	0xFEE
 37515                           fsr0h	equ	0xFEA
 37516                           fsr0l	equ	0xFE9
 37517                           wreg	equ	0xFE8
 37518                           indf1	equ	0xFE7
 37519                           postdec1	equ	0xFE5
 37520                           plusw1	equ	0xFE3
 37521                           fsr1h	equ	0xFE2
 37522                           fsr1l	equ	0xFE1
 37523                           indf2	equ	0xFDF
 37524                           postinc2	equ	0xFDE
 37525                           postdec2	equ	0xFDD
 37526                           plusw2	equ	0xFDB
 37527                           fsr2h	equ	0xFDA
 37528                           fsr2l	equ	0xFD9
 37529                           status	equ	0xFD8
 37530                           
 37531 ;; *************** function __get_data *****************
 37532 ;; Defined at:
 37533 ;;		line 1283 in file "fat16.c"
 37534 ;; Parameters:    Size  Location     Type
 37535 ;;  idx             2    0[COMRAM] unsigned int 
 37536 ;; Auto vars:     Size  Location     Type
 37537 ;;		None
 37538 ;; Return value:  Size  Location     Type
 37539 ;;                  1    wreg      unsigned char 
 37540 ;; Registers used:
 37541 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 37542 ;; Tracked objects:
 37543 ;;		On entry : 0/0
 37544 ;;		On exit  : 0/0
 37545 ;;		Unchanged: 0/0
 37546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37551 ;;Total ram usage:        2 bytes
 37552 ;; Hardware stack levels used:    1
 37553 ;; This function calls:
 37554 ;;		Nothing
 37555 ;; This function is called by:
 37556 ;;		_fat_format
 37557 ;; This function uses a non-reentrant model
 37558 ;;
 37559                           
 37560                           	psect	text184
 37561  009C30                     __ptext184:
 37562                           	opt stack 0
 37563  009C30                     __get_data:
 37564                           	opt stack 27
 37565                           
 37566                           ;fat16.c: 1285: if(idx < 12)
 37567                           
 37568                           ;incstack = 0
 37569  009C30  5002               	movf	__get_data@idx+1,w,c
 37570  009C32  E110               	bnz	l13481
 37571  009C34  0E0C               	movlw	12
 37572  009C36  5C01               	subwf	__get_data@idx,w,c
 37573  009C38  B0D8               	btfsc	status,0,c
 37574  009C3A  D00C               	goto	l2287
 37575                           
 37576                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 37577  009C3C  0ECF               	movlw	low STR_12
 37578  009C3E  2401               	addwf	__get_data@idx,w,c
 37579  009C40  6EF6               	movwf	tblptrl,c
 37580  009C42  0EBF               	movlw	high STR_12
 37581  009C44  2002               	addwfc	__get_data@idx+1,w,c
 37582  009C46  6EF7               	movwf	tblptrh,c
 37583  009C48                     	if	1	;There are 3 active tblptr bytes
 37584  009C48  6AF8               	clrf	tblptru,c
 37585  009C4A  0E00               	movlw	low (__mediumconst shr (0+16))
 37586  009C4C  22F8               	addwfc	tblptru,f,c
 37587  009C4E                     	endif
 37588  009C4E  0008               	tblrd		*
 37589  009C50  50F5               	movf	tablat,w,c
 37590  009C52  0012               	return	
 37591  009C54                     l2287:
 37592  009C54                     l13481:
 37593                           
 37594                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 37595  009C54  0E00               	movlw	0
 37596  009C56  0012               	return	
 37597  009C58                     __end_of__get_data:
 37598                           	opt stack 0
 37599                           tosu	equ	0xFFF
 37600                           tosh	equ	0xFFE
 37601                           tosl	equ	0xFFD
 37602                           pclath	equ	0xFFA
 37603                           tblptru	equ	0xFF8
 37604                           tblptrh	equ	0xFF7
 37605                           tblptrl	equ	0xFF6
 37606                           tablat	equ	0xFF5
 37607                           prodh	equ	0xFF4
 37608                           prodl	equ	0xFF3
 37609                           intcon	equ	0xFF2
 37610                           intcon2	equ	0xFF1
 37611                           intcon3	equ	0xFF0
 37612                           indf0	equ	0xFEF
 37613                           postinc0	equ	0xFEE
 37614                           fsr0h	equ	0xFEA
 37615                           fsr0l	equ	0xFE9
 37616                           wreg	equ	0xFE8
 37617                           indf1	equ	0xFE7
 37618                           postdec1	equ	0xFE5
 37619                           plusw1	equ	0xFE3
 37620                           fsr1h	equ	0xFE2
 37621                           fsr1l	equ	0xFE1
 37622                           indf2	equ	0xFDF
 37623                           postinc2	equ	0xFDE
 37624                           postdec2	equ	0xFDD
 37625                           plusw2	equ	0xFDB
 37626                           fsr2h	equ	0xFDA
 37627                           fsr2l	equ	0xFD9
 37628                           status	equ	0xFD8
 37629                           
 37630 ;; *************** function __parse_file_resize *****************
 37631 ;; Defined at:
 37632 ;;		line 628 in file "api.c"
 37633 ;; Parameters:    Size  Location     Type
 37634 ;;  data            2   84[COMRAM] PTR unsigned char 
 37635 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37636 ;;  out_buffer      2   86[COMRAM] PTR unsigned char 
 37637 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 37638 ;;  out_idx_ptr     2   88[COMRAM] PTR unsigned char 
 37639 ;;		 -> api_parse@out_idx(1), 
 37640 ;; Auto vars:     Size  Location     Type
 37641 ;;  file_size       4   41[BANK0 ] unsigned long 
 37642 ;;  file_number     1   40[BANK0 ] unsigned char 
 37643 ;;  return_value    1   39[BANK0 ] unsigned char 
 37644 ;; Return value:  Size  Location     Type
 37645 ;;                  1    wreg      unsigned char 
 37646 ;; Registers used:
 37647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37648 ;; Tracked objects:
 37649 ;;		On entry : 0/0
 37650 ;;		On exit  : 0/0
 37651 ;;		Unchanged: 0/0
 37652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37653 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37656 ;;      Totals:         7       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37657 ;;Total ram usage:       13 bytes
 37658 ;; Hardware stack levels used:    1
 37659 ;; Hardware stack levels required when called:    8
 37660 ;; This function calls:
 37661 ;;		_fat_resize_file
 37662 ;; This function is called by:
 37663 ;;		__parse_command_long
 37664 ;; This function uses a non-reentrant model
 37665 ;;
 37666                           
 37667                           	psect	text185
 37668  002AAE                     __ptext185:
 37669                           	opt stack 0
 37670  002AAE                     __parse_file_resize:
 37671                           	opt stack 20
 37672                           
 37673                           ;api.c: 631: uint32_t file_size;;api.c: 632: uint8_t return_value;;api.c: 633: uint8_t f
      +                          ile_number;;api.c: 635: if((data[0]!=COMMAND_FILE_RESIZE) || (data[6]!=0x4C) || (data[7]
      +                          !=0xEA))
 37674                           
 37675                           ;incstack = 0
 37676  002AAE  C055  FFD9         	movff	__parse_file_resize@data,fsr2l
 37677  002AB2  C056  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 37678  002AB6  0E50               	movlw	80
 37679  002AB8  18DE               	xorwf	postinc2,w,c
 37680  002ABA  A4D8               	btfss	status,2,c
 37681  002ABC  D014               	goto	u11810
 37682  002ABE  EE20 F006          	lfsr	2,6
 37683  002AC2  5055               	movf	__parse_file_resize@data,w,c
 37684  002AC4  26D9               	addwf	fsr2l,f,c
 37685  002AC6  5056               	movf	__parse_file_resize@data+1,w,c
 37686  002AC8  22DA               	addwfc	fsr2h,f,c
 37687  002ACA  0E4C               	movlw	76
 37688  002ACC  18DE               	xorwf	postinc2,w,c
 37689  002ACE  A4D8               	btfss	status,2,c
 37690  002AD0  D00A               	goto	u11810
 37691  002AD2  EE20 F007          	lfsr	2,7
 37692  002AD6  5055               	movf	__parse_file_resize@data,w,c
 37693  002AD8  26D9               	addwf	fsr2l,f,c
 37694  002ADA  5056               	movf	__parse_file_resize@data+1,w,c
 37695  002ADC  22DA               	addwfc	fsr2h,f,c
 37696  002ADE  0EEA               	movlw	234
 37697  002AE0  18DE               	xorwf	postinc2,w,c
 37698  002AE2  B4D8               	btfsc	status,2,c
 37699  002AE4  D002               	goto	l2878
 37700  002AE6                     u11810:
 37701                           
 37702                           ;api.c: 636: {;api.c: 637: return 8;
 37703  002AE6  0E08               	movlw	8
 37704  002AE8  0012               	return	
 37705  002AEA                     l2878:
 37706                           
 37707                           ;api.c: 638: };api.c: 641: file_number = data[1];
 37708  002AEA  EE20 F001          	lfsr	2,1
 37709  002AEE  5055               	movf	__parse_file_resize@data,w,c
 37710  002AF0  26D9               	addwf	fsr2l,f,c
 37711  002AF2  5056               	movf	__parse_file_resize@data+1,w,c
 37712  002AF4  22DA               	addwfc	fsr2h,f,c
 37713  002AF6  50DF               	movf	indf2,w,c
 37714  002AF8  0100               	movlb	0	; () banked
 37715  002AFA  6F88               	movwf	__parse_file_resize@file_number& (0+255),b
 37716                           
 37717                           ;api.c: 644: file_size = data[2];
 37718  002AFC  EE20 F002          	lfsr	2,2
 37719  002B00  5055               	movf	__parse_file_resize@data,w,c
 37720  002B02  26D9               	addwf	fsr2l,f,c
 37721  002B04  5056               	movf	__parse_file_resize@data+1,w,c
 37722  002B06  22DA               	addwfc	fsr2h,f,c
 37723  002B08  50DF               	movf	indf2,w,c
 37724  002B0A  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37725  002B0C  505B               	movf	??__parse_file_resize,w,c
 37726  002B0E  6F89               	movwf	__parse_file_resize@file_size& (0+255),b
 37727  002B10  6B8A               	clrf	(__parse_file_resize@file_size+1)& (0+255),b
 37728  002B12  6B8B               	clrf	(__parse_file_resize@file_size+2)& (0+255),b
 37729  002B14  6B8C               	clrf	(__parse_file_resize@file_size+3)& (0+255),b
 37730                           
 37731                           ; BSR set to: 0
 37732                           ;api.c: 645: file_size <<= 8;
 37733  002B16  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 37734  002B1A  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 37735  002B1E  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 37736  002B22  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 37737                           
 37738                           ; BSR set to: 0
 37739                           ;api.c: 646: file_size |= data[3];
 37740  002B24  EE20 F003          	lfsr	2,3
 37741  002B28  5055               	movf	__parse_file_resize@data,w,c
 37742  002B2A  26D9               	addwf	fsr2l,f,c
 37743  002B2C  5056               	movf	__parse_file_resize@data+1,w,c
 37744  002B2E  22DA               	addwfc	fsr2h,f,c
 37745  002B30  50DF               	movf	indf2,w,c
 37746  002B32  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37747  002B34  505B               	movf	??__parse_file_resize,w,c
 37748  002B36  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 37749                           
 37750                           ;api.c: 647: file_size <<= 8;
 37751  002B38  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 37752  002B3C  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 37753  002B40  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 37754  002B44  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 37755                           
 37756                           ; BSR set to: 0
 37757                           ;api.c: 648: file_size |= data[4];
 37758  002B46  EE20 F004          	lfsr	2,4
 37759  002B4A  5055               	movf	__parse_file_resize@data,w,c
 37760  002B4C  26D9               	addwf	fsr2l,f,c
 37761  002B4E  5056               	movf	__parse_file_resize@data+1,w,c
 37762  002B50  22DA               	addwfc	fsr2h,f,c
 37763  002B52  50DF               	movf	indf2,w,c
 37764  002B54  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37765  002B56  505B               	movf	??__parse_file_resize,w,c
 37766  002B58  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 37767                           
 37768                           ; BSR set to: 0
 37769                           ;api.c: 649: file_size <<= 8;
 37770  002B5A  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 37771  002B5E  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 37772  002B62  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 37773  002B66  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 37774                           
 37775                           ;api.c: 650: file_size |= data[5];
 37776  002B68  EE20 F005          	lfsr	2,5
 37777  002B6C  5055               	movf	__parse_file_resize@data,w,c
 37778  002B6E  26D9               	addwf	fsr2l,f,c
 37779  002B70  5056               	movf	__parse_file_resize@data+1,w,c
 37780  002B72  22DA               	addwfc	fsr2h,f,c
 37781  002B74  50DF               	movf	indf2,w,c
 37782  002B76  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37783  002B78  505B               	movf	??__parse_file_resize,w,c
 37784  002B7A  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 37785                           
 37786                           ; BSR set to: 0
 37787                           ;api.c: 653: return_value = fat_resize_file(file_number, file_size);
 37788  002B7C  C089  F04D         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 37789  002B80  C08A  F04E         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 37790  002B84  C08B  F04F         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 37791  002B88  C08C  F050         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 37792  002B8C  5188               	movf	__parse_file_resize@file_number& (0+255),w,b
 37793  002B8E  EC15  F02F         	call	_fat_resize_file
 37794  002B92  0100               	movlb	0	; () banked
 37795  002B94  6F87               	movwf	__parse_file_resize@return_value& (0+255),b
 37796                           
 37797                           ; BSR set to: 0
 37798                           ;api.c: 656: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<58))
 37799  002B96  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37800  002B9A  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37801  002B9E  50DF               	movf	indf2,w,c
 37802  002BA0  B4D8               	btfsc	status,2,c
 37803  002BA2  D085               	goto	l2882
 37804                           
 37805                           ; BSR set to: 0
 37806  002BA4  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37807  002BA8  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37808  002BAC  0E3A               	movlw	58
 37809  002BAE  60DF               	cpfslt	indf2,c
 37810  002BB0  D07E               	goto	l2882
 37811                           
 37812                           ; BSR set to: 0
 37813                           ;api.c: 657: {;api.c: 658: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RESIZE;
 37814  002BB2  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37815  002BB6  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37816  002BBA  CFDF F05B          	movff	indf2,??__parse_file_resize
 37817  002BBE  0E01               	movlw	1
 37818  002BC0  26DF               	addwf	indf2,f,c
 37819  002BC2  505B               	movf	??__parse_file_resize,w,c
 37820  002BC4  0D01               	mullw	1
 37821  002BC6  50F3               	movf	prodl,w,c
 37822  002BC8  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37823  002BCA  6ED9               	movwf	fsr2l,c
 37824  002BCC  50F4               	movf	prodh,w,c
 37825  002BCE  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37826  002BD0  6EDA               	movwf	fsr2h,c
 37827  002BD2  0E50               	movlw	80
 37828  002BD4  6EDF               	movwf	indf2,c
 37829                           
 37830                           ;api.c: 659: out_buffer[(*out_idx_ptr)++] = file_number;
 37831  002BD6  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37832  002BDA  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37833  002BDE  CFDF F05B          	movff	indf2,??__parse_file_resize
 37834  002BE2  0E01               	movlw	1
 37835  002BE4  26DF               	addwf	indf2,f,c
 37836  002BE6  505B               	movf	??__parse_file_resize,w,c
 37837  002BE8  0D01               	mullw	1
 37838  002BEA  50F3               	movf	prodl,w,c
 37839  002BEC  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37840  002BEE  6ED9               	movwf	fsr2l,c
 37841  002BF0  50F4               	movf	prodh,w,c
 37842  002BF2  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37843  002BF4  6EDA               	movwf	fsr2h,c
 37844  002BF6  C088  FFDF         	movff	__parse_file_resize@file_number,indf2
 37845                           
 37846                           ;api.c: 660: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((file_
      +                          size)>>16)&0xFFFF)))>>8)&0xFF));
 37847  002BFA  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37848  002BFE  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37849  002C02  CFDF F05B          	movff	indf2,??__parse_file_resize
 37850  002C06  0E01               	movlw	1
 37851  002C08  26DF               	addwf	indf2,f,c
 37852  002C0A  505B               	movf	??__parse_file_resize,w,c
 37853  002C0C  0D01               	mullw	1
 37854  002C0E  50F3               	movf	prodl,w,c
 37855  002C10  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37856  002C12  6ED9               	movwf	fsr2l,c
 37857  002C14  50F4               	movf	prodh,w,c
 37858  002C16  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37859  002C18  6EDA               	movwf	fsr2h,c
 37860  002C1A  518C               	movf	(__parse_file_resize@file_size+3)& (0+255),w,b
 37861  002C1C  6EDF               	movwf	indf2,c
 37862                           
 37863                           ;api.c: 661: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((file_s
      +                          ize)>>16)&0xFFFF)))&0xFF));
 37864  002C1E  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37865  002C22  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37866  002C26  CFDF F05B          	movff	indf2,??__parse_file_resize
 37867  002C2A  0E01               	movlw	1
 37868  002C2C  26DF               	addwf	indf2,f,c
 37869  002C2E  505B               	movf	??__parse_file_resize,w,c
 37870  002C30  0D01               	mullw	1
 37871  002C32  50F3               	movf	prodl,w,c
 37872  002C34  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37873  002C36  6ED9               	movwf	fsr2l,c
 37874  002C38  50F4               	movf	prodh,w,c
 37875  002C3A  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37876  002C3C  6EDA               	movwf	fsr2h,c
 37877  002C3E  C08B  FFDF         	movff	__parse_file_resize@file_size+2,indf2
 37878                           
 37879                           ;api.c: 662: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((file_s
      +                          ize)&0xFFFF)))>>8)&0xFF));
 37880  002C42  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37881  002C46  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37882  002C4A  CFDF F05B          	movff	indf2,??__parse_file_resize
 37883  002C4E  0E01               	movlw	1
 37884  002C50  26DF               	addwf	indf2,f,c
 37885  002C52  505B               	movf	??__parse_file_resize,w,c
 37886  002C54  0D01               	mullw	1
 37887  002C56  50F3               	movf	prodl,w,c
 37888  002C58  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37889  002C5A  6ED9               	movwf	fsr2l,c
 37890  002C5C  50F4               	movf	prodh,w,c
 37891  002C5E  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37892  002C60  6EDA               	movwf	fsr2h,c
 37893  002C62  518A               	movf	(__parse_file_resize@file_size+1)& (0+255),w,b
 37894  002C64  6EDF               	movwf	indf2,c
 37895                           
 37896                           ;api.c: 663: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((file_si
      +                          ze)&0xFFFF)))&0xFF));
 37897  002C66  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37898  002C6A  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37899  002C6E  CFDF F05B          	movff	indf2,??__parse_file_resize
 37900  002C72  0E01               	movlw	1
 37901  002C74  26DF               	addwf	indf2,f,c
 37902  002C76  505B               	movf	??__parse_file_resize,w,c
 37903  002C78  0D01               	mullw	1
 37904  002C7A  50F3               	movf	prodl,w,c
 37905  002C7C  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37906  002C7E  6ED9               	movwf	fsr2l,c
 37907  002C80  50F4               	movf	prodh,w,c
 37908  002C82  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37909  002C84  6EDA               	movwf	fsr2h,c
 37910  002C86  C089  FFDF         	movff	__parse_file_resize@file_size,indf2
 37911                           
 37912                           ;api.c: 664: out_buffer[(*out_idx_ptr)++] = return_value;
 37913  002C8A  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37914  002C8E  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37915  002C92  CFDF F05B          	movff	indf2,??__parse_file_resize
 37916  002C96  0E01               	movlw	1
 37917  002C98  26DF               	addwf	indf2,f,c
 37918  002C9A  505B               	movf	??__parse_file_resize,w,c
 37919  002C9C  0D01               	mullw	1
 37920  002C9E  50F3               	movf	prodl,w,c
 37921  002CA0  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37922  002CA2  6ED9               	movwf	fsr2l,c
 37923  002CA4  50F4               	movf	prodh,w,c
 37924  002CA6  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37925  002CA8  6EDA               	movwf	fsr2h,c
 37926  002CAA  C087  FFDF         	movff	__parse_file_resize@return_value,indf2
 37927  002CAE                     l2882:
 37928                           
 37929                           ; BSR set to: 0
 37930                           ;api.c: 665: };api.c: 667: return 8;
 37931                           
 37932                           ; BSR set to: 0
 37933  002CAE  0E08               	movlw	8
 37934  002CB0  0012               	return	
 37935  002CB2                     __end_of__parse_file_resize:
 37936                           	opt stack 0
 37937                           tosu	equ	0xFFF
 37938                           tosh	equ	0xFFE
 37939                           tosl	equ	0xFFD
 37940                           pclath	equ	0xFFA
 37941                           tblptru	equ	0xFF8
 37942                           tblptrh	equ	0xFF7
 37943                           tblptrl	equ	0xFF6
 37944                           tablat	equ	0xFF5
 37945                           prodh	equ	0xFF4
 37946                           prodl	equ	0xFF3
 37947                           intcon	equ	0xFF2
 37948                           intcon2	equ	0xFF1
 37949                           intcon3	equ	0xFF0
 37950                           indf0	equ	0xFEF
 37951                           postinc0	equ	0xFEE
 37952                           fsr0h	equ	0xFEA
 37953                           fsr0l	equ	0xFE9
 37954                           wreg	equ	0xFE8
 37955                           indf1	equ	0xFE7
 37956                           postdec1	equ	0xFE5
 37957                           plusw1	equ	0xFE3
 37958                           fsr1h	equ	0xFE2
 37959                           fsr1l	equ	0xFE1
 37960                           indf2	equ	0xFDF
 37961                           postinc2	equ	0xFDE
 37962                           postdec2	equ	0xFDD
 37963                           plusw2	equ	0xFDB
 37964                           fsr2h	equ	0xFDA
 37965                           fsr2l	equ	0xFD9
 37966                           status	equ	0xFD8
 37967                           
 37968 ;; *************** function __parse_file_rename *****************
 37969 ;; Defined at:
 37970 ;;		line 732 in file "api.c"
 37971 ;; Parameters:    Size  Location     Type
 37972 ;;  data            2    0[BANK0 ] PTR unsigned char 
 37973 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37974 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 37975 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 37976 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 37977 ;;		 -> api_parse@out_idx(1), 
 37978 ;; Auto vars:     Size  Location     Type
 37979 ;;  file_number     1    7[BANK0 ] unsigned char 
 37980 ;;  return_value    1    6[BANK0 ] unsigned char 
 37981 ;; Return value:  Size  Location     Type
 37982 ;;                  1    wreg      unsigned char 
 37983 ;; Registers used:
 37984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37985 ;; Tracked objects:
 37986 ;;		On entry : 0/0
 37987 ;;		On exit  : 0/0
 37988 ;;		Unchanged: 0/0
 37989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37990 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37993 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37994 ;;Total ram usage:        9 bytes
 37995 ;; Hardware stack levels used:    1
 37996 ;; Hardware stack levels required when called:    7
 37997 ;; This function calls:
 37998 ;;		_fat_rename_file
 37999 ;; This function is called by:
 38000 ;;		__parse_command_long
 38001 ;; This function uses a non-reentrant model
 38002 ;;
 38003                           
 38004                           	psect	text186
 38005  005C2E                     __ptext186:
 38006                           	opt stack 0
 38007  005C2E                     __parse_file_rename:
 38008                           	opt stack 21
 38009                           
 38010                           ;api.c: 736: uint8_t file_number;;api.c: 737: uint8_t return_value;;api.c: 739: if((data
      +                          [0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 38011                           
 38012                           ;incstack = 0
 38013  005C2E  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 38014  005C32  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 38015  005C36  0E53               	movlw	83
 38016  005C38  18DE               	xorwf	postinc2,w,c
 38017  005C3A  A4D8               	btfss	status,2,c
 38018  005C3C  D015               	goto	u11960
 38019  005C3E  0100               	movlb	0	; () banked
 38020  005C40  EE20 F00D          	lfsr	2,13
 38021  005C44  5160               	movf	__parse_file_rename@data& (0+255),w,b
 38022  005C46  26D9               	addwf	fsr2l,f,c
 38023  005C48  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 38024  005C4A  22DA               	addwfc	fsr2h,f,c
 38025  005C4C  0E7E               	movlw	126
 38026  005C4E  18DE               	xorwf	postinc2,w,c
 38027  005C50  A4D8               	btfss	status,2,c
 38028  005C52  D00A               	goto	u11960
 38029                           
 38030                           ; BSR set to: 0
 38031  005C54  EE20 F00E          	lfsr	2,14
 38032  005C58  5160               	movf	__parse_file_rename@data& (0+255),w,b
 38033  005C5A  26D9               	addwf	fsr2l,f,c
 38034  005C5C  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 38035  005C5E  22DA               	addwfc	fsr2h,f,c
 38036  005C60  0E18               	movlw	24
 38037  005C62  18DE               	xorwf	postinc2,w,c
 38038  005C64  B4D8               	btfsc	status,2,c
 38039  005C66  D002               	goto	l2899
 38040  005C68                     u11960:
 38041                           
 38042                           ;api.c: 740: {;api.c: 741: return 15;
 38043                           
 38044                           ; BSR set to: 0
 38045  005C68  0E0F               	movlw	15
 38046  005C6A  0012               	return	
 38047  005C6C                     l2899:
 38048                           
 38049                           ;api.c: 742: };api.c: 745: file_number = data[1];
 38050  005C6C  0100               	movlb	0	; () banked
 38051  005C6E  EE20 F001          	lfsr	2,1
 38052  005C72  5160               	movf	__parse_file_rename@data& (0+255),w,b
 38053  005C74  26D9               	addwf	fsr2l,f,c
 38054  005C76  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 38055  005C78  22DA               	addwfc	fsr2h,f,c
 38056  005C7A  50DF               	movf	indf2,w,c
 38057  005C7C  6F67               	movwf	__parse_file_rename@file_number& (0+255),b
 38058                           
 38059                           ; BSR set to: 0
 38060                           ;api.c: 748: return_value = fat_rename_file(file_number, &data[2], &data[10]);
 38061  005C7E  0E02               	movlw	2
 38062  005C80  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 38063  005C82  6E38               	movwf	fat_rename_file@name,c
 38064  005C84  0E00               	movlw	0
 38065  005C86  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 38066  005C88  6E39               	movwf	fat_rename_file@name+1,c
 38067  005C8A  0E0A               	movlw	10
 38068  005C8C  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 38069  005C8E  6E3A               	movwf	fat_rename_file@extension,c
 38070  005C90  0E00               	movlw	0
 38071  005C92  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 38072  005C94  6E3B               	movwf	fat_rename_file@extension+1,c
 38073  005C96  5167               	movf	__parse_file_rename@file_number& (0+255),w,b
 38074  005C98  ECAD  F03F         	call	_fat_rename_file
 38075  005C9C  0100               	movlb	0	; () banked
 38076  005C9E  6F66               	movwf	__parse_file_rename@return_value& (0+255),b
 38077                           
 38078                           ; BSR set to: 0
 38079                           ;api.c: 751: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 38080  005CA0  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38081  005CA4  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38082  005CA8  50DF               	movf	indf2,w,c
 38083  005CAA  B4D8               	btfsc	status,2,c
 38084  005CAC  D03D               	goto	l2903
 38085                           
 38086                           ; BSR set to: 0
 38087  005CAE  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38088  005CB2  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38089  005CB6  0E3E               	movlw	62
 38090  005CB8  60DF               	cpfslt	indf2,c
 38091  005CBA  D036               	goto	l2903
 38092                           
 38093                           ; BSR set to: 0
 38094                           ;api.c: 752: {;api.c: 753: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RENAME;
 38095  005CBC  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38096  005CC0  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38097  005CC4  CFDF F05F          	movff	indf2,??__parse_file_rename
 38098  005CC8  0E01               	movlw	1
 38099  005CCA  26DF               	addwf	indf2,f,c
 38100  005CCC  505F               	movf	??__parse_file_rename,w,c
 38101  005CCE  0D01               	mullw	1
 38102  005CD0  50F3               	movf	prodl,w,c
 38103  005CD2  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 38104  005CD4  6ED9               	movwf	fsr2l,c
 38105  005CD6  50F4               	movf	prodh,w,c
 38106  005CD8  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 38107  005CDA  6EDA               	movwf	fsr2h,c
 38108  005CDC  0E53               	movlw	83
 38109  005CDE  6EDF               	movwf	indf2,c
 38110                           
 38111                           ;api.c: 754: out_buffer[(*out_idx_ptr)++] = file_number;
 38112  005CE0  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38113  005CE4  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38114  005CE8  CFDF F05F          	movff	indf2,??__parse_file_rename
 38115  005CEC  0E01               	movlw	1
 38116  005CEE  26DF               	addwf	indf2,f,c
 38117  005CF0  505F               	movf	??__parse_file_rename,w,c
 38118  005CF2  0D01               	mullw	1
 38119  005CF4  50F3               	movf	prodl,w,c
 38120  005CF6  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 38121  005CF8  6ED9               	movwf	fsr2l,c
 38122  005CFA  50F4               	movf	prodh,w,c
 38123  005CFC  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 38124  005CFE  6EDA               	movwf	fsr2h,c
 38125  005D00  C067  FFDF         	movff	__parse_file_rename@file_number,indf2
 38126                           
 38127                           ;api.c: 755: out_buffer[(*out_idx_ptr)++] = return_value;
 38128  005D04  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38129  005D08  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38130  005D0C  CFDF F05F          	movff	indf2,??__parse_file_rename
 38131  005D10  0E01               	movlw	1
 38132  005D12  26DF               	addwf	indf2,f,c
 38133  005D14  505F               	movf	??__parse_file_rename,w,c
 38134  005D16  0D01               	mullw	1
 38135  005D18  50F3               	movf	prodl,w,c
 38136  005D1A  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 38137  005D1C  6ED9               	movwf	fsr2l,c
 38138  005D1E  50F4               	movf	prodh,w,c
 38139  005D20  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 38140  005D22  6EDA               	movwf	fsr2h,c
 38141  005D24  C066  FFDF         	movff	__parse_file_rename@return_value,indf2
 38142  005D28                     l2903:
 38143                           
 38144                           ; BSR set to: 0
 38145                           ;api.c: 756: };api.c: 758: return 15;
 38146                           
 38147                           ; BSR set to: 0
 38148  005D28  0E0F               	movlw	15
 38149  005D2A  0012               	return	
 38150  005D2C                     __end_of__parse_file_rename:
 38151                           	opt stack 0
 38152                           tosu	equ	0xFFF
 38153                           tosh	equ	0xFFE
 38154                           tosl	equ	0xFFD
 38155                           pclath	equ	0xFFA
 38156                           tblptru	equ	0xFF8
 38157                           tblptrh	equ	0xFF7
 38158                           tblptrl	equ	0xFF6
 38159                           tablat	equ	0xFF5
 38160                           prodh	equ	0xFF4
 38161                           prodl	equ	0xFF3
 38162                           intcon	equ	0xFF2
 38163                           intcon2	equ	0xFF1
 38164                           intcon3	equ	0xFF0
 38165                           indf0	equ	0xFEF
 38166                           postinc0	equ	0xFEE
 38167                           fsr0h	equ	0xFEA
 38168                           fsr0l	equ	0xFE9
 38169                           wreg	equ	0xFE8
 38170                           indf1	equ	0xFE7
 38171                           postdec1	equ	0xFE5
 38172                           plusw1	equ	0xFE3
 38173                           fsr1h	equ	0xFE2
 38174                           fsr1l	equ	0xFE1
 38175                           indf2	equ	0xFDF
 38176                           postinc2	equ	0xFDE
 38177                           postdec2	equ	0xFDD
 38178                           plusw2	equ	0xFDB
 38179                           fsr2h	equ	0xFDA
 38180                           fsr2l	equ	0xFD9
 38181                           status	equ	0xFD8
 38182                           
 38183 ;; *************** function _fat_rename_file *****************
 38184 ;; Defined at:
 38185 ;;		line 719 in file "fat16.c"
 38186 ;; Parameters:    Size  Location     Type
 38187 ;;  file_number     1    wreg     unsigned char 
 38188 ;;  name            2   55[COMRAM] PTR unsigned char 
 38189 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38190 ;;  extension       2   57[COMRAM] PTR unsigned char 
 38191 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38192 ;; Auto vars:     Size  Location     Type
 38193 ;;  file_number     1   59[COMRAM] unsigned char 
 38194 ;;  root           32   61[COMRAM] struct .
 38195 ;;  cntr            1   93[COMRAM] unsigned char 
 38196 ;;  return_code     1   60[COMRAM] unsigned char 
 38197 ;; Return value:  Size  Location     Type
 38198 ;;                  1    wreg      unsigned char 
 38199 ;; Registers used:
 38200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38201 ;; Tracked objects:
 38202 ;;		On entry : 0/0
 38203 ;;		On exit  : 0/0
 38204 ;;		Unchanged: 0/0
 38205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38207 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38209 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38210 ;;Total ram usage:       39 bytes
 38211 ;; Hardware stack levels used:    1
 38212 ;; Hardware stack levels required when called:    6
 38213 ;; This function calls:
 38214 ;;		__write_root
 38215 ;;		_fat_get_file_information
 38216 ;; This function is called by:
 38217 ;;		__parse_file_rename
 38218 ;; This function uses a non-reentrant model
 38219 ;;
 38220                           
 38221                           	psect	text187
 38222  007F5A                     __ptext187:
 38223                           	opt stack 0
 38224  007F5A                     _fat_rename_file:
 38225                           	opt stack 21
 38226                           
 38227                           ;incstack = 0
 38228                           ;fat_rename_file@file_number stored from wreg
 38229  007F5A  6E3C               	movwf	fat_rename_file@file_number,c
 38230                           
 38231                           ;fat16.c: 721: rootEntry_t root;;fat16.c: 722: uint8_t cntr;;fat16.c: 723: uint8_t retur
      +                          n_code;;fat16.c: 726: return_code = fat_get_file_information(file_number, &root);
 38232  007F5C  0E3E               	movlw	low fat_rename_file@root
 38233  007F5E  6E30               	movwf	fat_get_file_information@data,c
 38234  007F60  0E00               	movlw	high fat_rename_file@root
 38235  007F62  6E31               	movwf	fat_get_file_information@data+1,c
 38236  007F64  503C               	movf	fat_rename_file@file_number,w,c
 38237  007F66  ECFC  F043         	call	_fat_get_file_information
 38238  007F6A  6E3D               	movwf	fat_rename_file@return_code,c
 38239                           
 38240                           ;fat16.c: 727: if(return_code!=0x00)
 38241  007F6C  503D               	movf	fat_rename_file@return_code,w,c
 38242  007F6E  B4D8               	btfsc	status,2,c
 38243  007F70  D002               	goto	l2113
 38244                           
 38245                           ;fat16.c: 728: {;fat16.c: 730: return return_code;
 38246  007F72  503D               	movf	fat_rename_file@return_code,w,c
 38247  007F74  0012               	return	
 38248  007F76                     l2113:
 38249                           
 38250                           ;fat16.c: 731: };fat16.c: 734: for(cntr=0; cntr<8; ++cntr)
 38251  007F76  0E00               	movlw	0
 38252  007F78  6E5E               	movwf	fat_rename_file@cntr,c
 38253  007F7A                     l13983:
 38254  007F7A  0E07               	movlw	7
 38255  007F7C  645E               	cpfsgt	fat_rename_file@cntr,c
 38256  007F7E  D001               	goto	l2115
 38257  007F80  D014               	goto	u11150
 38258  007F82                     l2115:
 38259                           
 38260                           ;fat16.c: 735: {;fat16.c: 736: root.fileName[cntr] = name[cntr];
 38261  007F82  505E               	movf	fat_rename_file@cntr,w,c
 38262  007F84  0D01               	mullw	1
 38263  007F86  50F3               	movf	prodl,w,c
 38264  007F88  2438               	addwf	fat_rename_file@name,w,c
 38265  007F8A  6ED9               	movwf	fsr2l,c
 38266  007F8C  50F4               	movf	prodh,w,c
 38267  007F8E  2039               	addwfc	fat_rename_file@name+1,w,c
 38268  007F90  6EDA               	movwf	fsr2h,c
 38269  007F92  505E               	movf	fat_rename_file@cntr,w,c
 38270  007F94  0D01               	mullw	1
 38271  007F96  0E3E               	movlw	low fat_rename_file@root
 38272  007F98  24F3               	addwf	prodl,w,c
 38273  007F9A  6EE1               	movwf	fsr1l,c
 38274  007F9C  0E00               	movlw	high fat_rename_file@root
 38275  007F9E  20F4               	addwfc	prodh,w,c
 38276  007FA0  6EE2               	movwf	fsr1h,c
 38277  007FA2  CFDF FFE7          	movff	indf2,indf1
 38278  007FA6  2A5E               	incf	fat_rename_file@cntr,f,c
 38279  007FA8  D7E8               	goto	l13983
 38280  007FAA                     u11150:
 38281                           
 38282                           ;fat16.c: 737: };fat16.c: 740: for(cntr=0; cntr<3; ++cntr)
 38283  007FAA  0E00               	movlw	0
 38284  007FAC  6E5E               	movwf	fat_rename_file@cntr,c
 38285  007FAE                     l13995:
 38286  007FAE  0E02               	movlw	2
 38287  007FB0  645E               	cpfsgt	fat_rename_file@cntr,c
 38288  007FB2  D001               	goto	l2117
 38289  007FB4  D018               	goto	u11170
 38290  007FB6                     l2117:
 38291                           
 38292                           ;fat16.c: 741: {;fat16.c: 742: root.fileExtension[cntr] = extension[cntr];
 38293  007FB6  505E               	movf	fat_rename_file@cntr,w,c
 38294  007FB8  0D01               	mullw	1
 38295  007FBA  50F3               	movf	prodl,w,c
 38296  007FBC  243A               	addwf	fat_rename_file@extension,w,c
 38297  007FBE  6ED9               	movwf	fsr2l,c
 38298  007FC0  50F4               	movf	prodh,w,c
 38299  007FC2  203B               	addwfc	fat_rename_file@extension+1,w,c
 38300  007FC4  6EDA               	movwf	fsr2h,c
 38301  007FC6  505E               	movf	fat_rename_file@cntr,w,c
 38302  007FC8  0D01               	mullw	1
 38303  007FCA  0E08               	movlw	8
 38304  007FCC  26F3               	addwf	prodl,f,c
 38305  007FCE  0E00               	movlw	0
 38306  007FD0  22F4               	addwfc	prodh,f,c
 38307  007FD2  0E3E               	movlw	low fat_rename_file@root
 38308  007FD4  24F3               	addwf	prodl,w,c
 38309  007FD6  6EE1               	movwf	fsr1l,c
 38310  007FD8  0E00               	movlw	high fat_rename_file@root
 38311  007FDA  20F4               	addwfc	prodh,w,c
 38312  007FDC  6EE2               	movwf	fsr1h,c
 38313  007FDE  CFDF FFE7          	movff	indf2,indf1
 38314  007FE2  2A5E               	incf	fat_rename_file@cntr,f,c
 38315  007FE4  D7E4               	goto	l13995
 38316  007FE6                     u11170:
 38317                           
 38318                           ;fat16.c: 743: };fat16.c: 746: _write_root(file_number, &root);
 38319  007FE6  0E3E               	movlw	low fat_rename_file@root
 38320  007FE8  6E29               	movwf	__write_root@data,c
 38321  007FEA  0E00               	movlw	high fat_rename_file@root
 38322  007FEC  6E2A               	movwf	__write_root@data+1,c
 38323  007FEE  503C               	movf	fat_rename_file@file_number,w,c
 38324  007FF0  EC08  F04B         	call	__write_root
 38325                           
 38326                           ;fat16.c: 748: return 0x00;
 38327  007FF4  0E00               	movlw	0
 38328  007FF6  0012               	return	
 38329  007FF8                     __end_of_fat_rename_file:
 38330                           	opt stack 0
 38331                           tosu	equ	0xFFF
 38332                           tosh	equ	0xFFE
 38333                           tosl	equ	0xFFD
 38334                           pclath	equ	0xFFA
 38335                           tblptru	equ	0xFF8
 38336                           tblptrh	equ	0xFF7
 38337                           tblptrl	equ	0xFF6
 38338                           tablat	equ	0xFF5
 38339                           prodh	equ	0xFF4
 38340                           prodl	equ	0xFF3
 38341                           intcon	equ	0xFF2
 38342                           intcon2	equ	0xFF1
 38343                           intcon3	equ	0xFF0
 38344                           indf0	equ	0xFEF
 38345                           postinc0	equ	0xFEE
 38346                           fsr0h	equ	0xFEA
 38347                           fsr0l	equ	0xFE9
 38348                           wreg	equ	0xFE8
 38349                           indf1	equ	0xFE7
 38350                           postdec1	equ	0xFE5
 38351                           plusw1	equ	0xFE3
 38352                           fsr1h	equ	0xFE2
 38353                           fsr1l	equ	0xFE1
 38354                           indf2	equ	0xFDF
 38355                           postinc2	equ	0xFDE
 38356                           postdec2	equ	0xFDD
 38357                           plusw2	equ	0xFDB
 38358                           fsr2h	equ	0xFDA
 38359                           fsr2l	equ	0xFD9
 38360                           status	equ	0xFD8
 38361                           
 38362 ;; *************** function __parse_file_modify *****************
 38363 ;; Defined at:
 38364 ;;		line 797 in file "api.c"
 38365 ;; Parameters:    Size  Location     Type
 38366 ;;  data            2   85[COMRAM] PTR unsigned char 
 38367 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38368 ;;  out_buffer      2   87[COMRAM] PTR unsigned char 
 38369 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 38370 ;;  out_idx_ptr     2   89[COMRAM] PTR unsigned char 
 38371 ;;		 -> api_parse@out_idx(1), 
 38372 ;; Auto vars:     Size  Location     Type
 38373 ;;  start_byte      4   50[BANK0 ] unsigned long 
 38374 ;;  number_of_by    2   48[BANK0 ] unsigned int 
 38375 ;;  file_number     1   47[BANK0 ] unsigned char 
 38376 ;;  return_value    1   46[BANK0 ] unsigned char 
 38377 ;; Return value:  Size  Location     Type
 38378 ;;                  1    wreg      unsigned char 
 38379 ;; Registers used:
 38380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38381 ;; Tracked objects:
 38382 ;;		On entry : 0/0
 38383 ;;		On exit  : 0/0
 38384 ;;		Unchanged: 0/0
 38385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38386 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38387 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38389 ;;      Totals:         7       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38390 ;;Total ram usage:       15 bytes
 38391 ;; Hardware stack levels used:    1
 38392 ;; Hardware stack levels required when called:    8
 38393 ;; This function calls:
 38394 ;;		_fat_modify_file
 38395 ;; This function is called by:
 38396 ;;		__parse_command_long
 38397 ;; This function uses a non-reentrant model
 38398 ;;
 38399                           
 38400                           	psect	text188
 38401  001CFE                     __ptext188:
 38402                           	opt stack 0
 38403  001CFE                     __parse_file_modify:
 38404                           	opt stack 20
 38405                           
 38406                           ;api.c: 799: uint16_t number_of_bytes;;api.c: 800: uint32_t start_byte;;api.c: 801: uint
      +                          8_t file_number;;api.c: 802: uint8_t return_value;;api.c: 805: if((data[0]!=COMMAND_FILE
      +                          _MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 38407                           
 38408                           ;incstack = 0
 38409  001CFE  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 38410  001D02  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 38411  001D06  0E55               	movlw	85
 38412  001D08  18DE               	xorwf	postinc2,w,c
 38413  001D0A  A4D8               	btfss	status,2,c
 38414  001D0C  D014               	goto	u12060
 38415  001D0E  EE20 F007          	lfsr	2,7
 38416  001D12  5056               	movf	__parse_file_modify@data,w,c
 38417  001D14  26D9               	addwf	fsr2l,f,c
 38418  001D16  5057               	movf	__parse_file_modify@data+1,w,c
 38419  001D18  22DA               	addwfc	fsr2h,f,c
 38420  001D1A  0E0F               	movlw	15
 38421  001D1C  18DE               	xorwf	postinc2,w,c
 38422  001D1E  A4D8               	btfss	status,2,c
 38423  001D20  D00A               	goto	u12060
 38424  001D22  EE20 F008          	lfsr	2,8
 38425  001D26  5056               	movf	__parse_file_modify@data,w,c
 38426  001D28  26D9               	addwf	fsr2l,f,c
 38427  001D2A  5057               	movf	__parse_file_modify@data+1,w,c
 38428  001D2C  22DA               	addwfc	fsr2h,f,c
 38429  001D2E  0E9B               	movlw	155
 38430  001D30  18DE               	xorwf	postinc2,w,c
 38431  001D32  B4D8               	btfsc	status,2,c
 38432  001D34  D002               	goto	l2913
 38433  001D36                     u12060:
 38434                           
 38435                           ;api.c: 806: {;api.c: 808: return 65;
 38436  001D36  0E41               	movlw	65
 38437  001D38  0012               	return	
 38438  001D3A                     l2913:
 38439                           
 38440                           ;api.c: 809: };api.c: 812: file_number = data[1];
 38441  001D3A  EE20 F001          	lfsr	2,1
 38442  001D3E  5056               	movf	__parse_file_modify@data,w,c
 38443  001D40  26D9               	addwf	fsr2l,f,c
 38444  001D42  5057               	movf	__parse_file_modify@data+1,w,c
 38445  001D44  22DA               	addwfc	fsr2h,f,c
 38446  001D46  50DF               	movf	indf2,w,c
 38447  001D48  0100               	movlb	0	; () banked
 38448  001D4A  6F8F               	movwf	__parse_file_modify@file_number& (0+255),b
 38449                           
 38450                           ;api.c: 815: number_of_bytes = data[6];
 38451  001D4C  EE20 F006          	lfsr	2,6
 38452  001D50  5056               	movf	__parse_file_modify@data,w,c
 38453  001D52  26D9               	addwf	fsr2l,f,c
 38454  001D54  5057               	movf	__parse_file_modify@data+1,w,c
 38455  001D56  22DA               	addwfc	fsr2h,f,c
 38456  001D58  50DF               	movf	indf2,w,c
 38457  001D5A  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38458  001D5C  505C               	movf	??__parse_file_modify,w,c
 38459  001D5E  6F90               	movwf	__parse_file_modify@number_of_bytes& (0+255),b
 38460  001D60  6B91               	clrf	(__parse_file_modify@number_of_bytes+1)& (0+255),b
 38461                           
 38462                           ;api.c: 818: start_byte = data[2];
 38463  001D62  EE20 F002          	lfsr	2,2
 38464  001D66  5056               	movf	__parse_file_modify@data,w,c
 38465  001D68  26D9               	addwf	fsr2l,f,c
 38466  001D6A  5057               	movf	__parse_file_modify@data+1,w,c
 38467  001D6C  22DA               	addwfc	fsr2h,f,c
 38468  001D6E  50DF               	movf	indf2,w,c
 38469  001D70  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38470  001D72  505C               	movf	??__parse_file_modify,w,c
 38471  001D74  6F92               	movwf	__parse_file_modify@start_byte& (0+255),b
 38472  001D76  6B93               	clrf	(__parse_file_modify@start_byte+1)& (0+255),b
 38473  001D78  6B94               	clrf	(__parse_file_modify@start_byte+2)& (0+255),b
 38474  001D7A  6B95               	clrf	(__parse_file_modify@start_byte+3)& (0+255),b
 38475                           
 38476                           ; BSR set to: 0
 38477                           ;api.c: 819: start_byte <<= 8;
 38478  001D7C  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 38479  001D80  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 38480  001D84  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 38481  001D88  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 38482                           
 38483                           ; BSR set to: 0
 38484                           ;api.c: 820: start_byte |= data[3];
 38485  001D8A  EE20 F003          	lfsr	2,3
 38486  001D8E  5056               	movf	__parse_file_modify@data,w,c
 38487  001D90  26D9               	addwf	fsr2l,f,c
 38488  001D92  5057               	movf	__parse_file_modify@data+1,w,c
 38489  001D94  22DA               	addwfc	fsr2h,f,c
 38490  001D96  50DF               	movf	indf2,w,c
 38491  001D98  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38492  001D9A  505C               	movf	??__parse_file_modify,w,c
 38493  001D9C  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 38494                           
 38495                           ;api.c: 821: start_byte <<= 8;
 38496  001D9E  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 38497  001DA2  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 38498  001DA6  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 38499  001DAA  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 38500                           
 38501                           ; BSR set to: 0
 38502                           ;api.c: 822: start_byte |= data[4];
 38503  001DAC  EE20 F004          	lfsr	2,4
 38504  001DB0  5056               	movf	__parse_file_modify@data,w,c
 38505  001DB2  26D9               	addwf	fsr2l,f,c
 38506  001DB4  5057               	movf	__parse_file_modify@data+1,w,c
 38507  001DB6  22DA               	addwfc	fsr2h,f,c
 38508  001DB8  50DF               	movf	indf2,w,c
 38509  001DBA  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38510  001DBC  505C               	movf	??__parse_file_modify,w,c
 38511  001DBE  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;api.c: 823: start_byte <<= 8;
 38515  001DC0  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 38516  001DC4  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 38517  001DC8  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 38518  001DCC  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 38519                           
 38520                           ;api.c: 824: start_byte |= data[5];
 38521  001DCE  EE20 F005          	lfsr	2,5
 38522  001DD2  5056               	movf	__parse_file_modify@data,w,c
 38523  001DD4  26D9               	addwf	fsr2l,f,c
 38524  001DD6  5057               	movf	__parse_file_modify@data+1,w,c
 38525  001DD8  22DA               	addwfc	fsr2h,f,c
 38526  001DDA  50DF               	movf	indf2,w,c
 38527  001DDC  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38528  001DDE  505C               	movf	??__parse_file_modify,w,c
 38529  001DE0  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 38530                           
 38531                           ; BSR set to: 0
 38532                           ;api.c: 826: return_value = fat_modify_file(file_number, start_byte, number_of_bytes, &d
      +                          ata[9]);
 38533  001DE2  C092  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 38534  001DE6  C093  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 38535  001DEA  C094  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 38536  001DEE  C095  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 38537  001DF2  C090  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 38538  001DF6  C091  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 38539  001DFA  0E09               	movlw	9
 38540  001DFC  2456               	addwf	__parse_file_modify@data,w,c
 38541  001DFE  6E48               	movwf	fat_modify_file@data,c
 38542  001E00  0E00               	movlw	0
 38543  001E02  2057               	addwfc	__parse_file_modify@data+1,w,c
 38544  001E04  6E49               	movwf	fat_modify_file@data+1,c
 38545  001E06  518F               	movf	__parse_file_modify@file_number& (0+255),w,b
 38546  001E08  EC17  F012         	call	_fat_modify_file
 38547  001E0C  0100               	movlb	0	; () banked
 38548  001E0E  6F8E               	movwf	__parse_file_modify@return_value& (0+255),b
 38549                           
 38550                           ; BSR set to: 0
 38551                           ;api.c: 829: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<56))
 38552  001E10  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38553  001E14  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38554  001E18  50DF               	movf	indf2,w,c
 38555  001E1A  B4D8               	btfsc	status,2,c
 38556  001E1C  D0A9               	goto	l2917
 38557                           
 38558                           ; BSR set to: 0
 38559  001E1E  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38560  001E22  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38561  001E26  0E38               	movlw	56
 38562  001E28  60DF               	cpfslt	indf2,c
 38563  001E2A  D0A2               	goto	l2917
 38564                           
 38565                           ; BSR set to: 0
 38566                           ;api.c: 830: {;api.c: 831: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_MODIFY;
 38567  001E2C  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38568  001E30  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38569  001E34  CFDF F05C          	movff	indf2,??__parse_file_modify
 38570  001E38  0E01               	movlw	1
 38571  001E3A  26DF               	addwf	indf2,f,c
 38572  001E3C  505C               	movf	??__parse_file_modify,w,c
 38573  001E3E  0D01               	mullw	1
 38574  001E40  50F3               	movf	prodl,w,c
 38575  001E42  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38576  001E44  6ED9               	movwf	fsr2l,c
 38577  001E46  50F4               	movf	prodh,w,c
 38578  001E48  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38579  001E4A  6EDA               	movwf	fsr2h,c
 38580  001E4C  0E55               	movlw	85
 38581  001E4E  6EDF               	movwf	indf2,c
 38582                           
 38583                           ;api.c: 832: out_buffer[(*out_idx_ptr)++] = file_number;
 38584  001E50  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38585  001E54  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38586  001E58  CFDF F05C          	movff	indf2,??__parse_file_modify
 38587  001E5C  0E01               	movlw	1
 38588  001E5E  26DF               	addwf	indf2,f,c
 38589  001E60  505C               	movf	??__parse_file_modify,w,c
 38590  001E62  0D01               	mullw	1
 38591  001E64  50F3               	movf	prodl,w,c
 38592  001E66  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38593  001E68  6ED9               	movwf	fsr2l,c
 38594  001E6A  50F4               	movf	prodh,w,c
 38595  001E6C  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38596  001E6E  6EDA               	movwf	fsr2h,c
 38597  001E70  C08F  FFDF         	movff	__parse_file_modify@file_number,indf2
 38598                           
 38599                           ;api.c: 833: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((start
      +                          _byte)>>16)&0xFFFF)))>>8)&0xFF));
 38600  001E74  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38601  001E78  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38602  001E7C  CFDF F05C          	movff	indf2,??__parse_file_modify
 38603  001E80  0E01               	movlw	1
 38604  001E82  26DF               	addwf	indf2,f,c
 38605  001E84  505C               	movf	??__parse_file_modify,w,c
 38606  001E86  0D01               	mullw	1
 38607  001E88  50F3               	movf	prodl,w,c
 38608  001E8A  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38609  001E8C  6ED9               	movwf	fsr2l,c
 38610  001E8E  50F4               	movf	prodh,w,c
 38611  001E90  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38612  001E92  6EDA               	movwf	fsr2h,c
 38613  001E94  5195               	movf	(__parse_file_modify@start_byte+3)& (0+255),w,b
 38614  001E96  6EDF               	movwf	indf2,c
 38615                           
 38616                           ;api.c: 834: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((start_
      +                          byte)>>16)&0xFFFF)))&0xFF));
 38617  001E98  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38618  001E9C  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38619  001EA0  CFDF F05C          	movff	indf2,??__parse_file_modify
 38620  001EA4  0E01               	movlw	1
 38621  001EA6  26DF               	addwf	indf2,f,c
 38622  001EA8  505C               	movf	??__parse_file_modify,w,c
 38623  001EAA  0D01               	mullw	1
 38624  001EAC  50F3               	movf	prodl,w,c
 38625  001EAE  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38626  001EB0  6ED9               	movwf	fsr2l,c
 38627  001EB2  50F4               	movf	prodh,w,c
 38628  001EB4  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38629  001EB6  6EDA               	movwf	fsr2h,c
 38630  001EB8  C094  FFDF         	movff	__parse_file_modify@start_byte+2,indf2
 38631                           
 38632                           ;api.c: 835: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((start_
      +                          byte)&0xFFFF)))>>8)&0xFF));
 38633  001EBC  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38634  001EC0  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38635  001EC4  CFDF F05C          	movff	indf2,??__parse_file_modify
 38636  001EC8  0E01               	movlw	1
 38637  001ECA  26DF               	addwf	indf2,f,c
 38638  001ECC  505C               	movf	??__parse_file_modify,w,c
 38639  001ECE  0D01               	mullw	1
 38640  001ED0  50F3               	movf	prodl,w,c
 38641  001ED2  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38642  001ED4  6ED9               	movwf	fsr2l,c
 38643  001ED6  50F4               	movf	prodh,w,c
 38644  001ED8  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38645  001EDA  6EDA               	movwf	fsr2h,c
 38646  001EDC  5193               	movf	(__parse_file_modify@start_byte+1)& (0+255),w,b
 38647  001EDE  6EDF               	movwf	indf2,c
 38648                           
 38649                           ;api.c: 836: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((start_b
      +                          yte)&0xFFFF)))&0xFF));
 38650  001EE0  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38651  001EE4  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38652  001EE8  CFDF F05C          	movff	indf2,??__parse_file_modify
 38653  001EEC  0E01               	movlw	1
 38654  001EEE  26DF               	addwf	indf2,f,c
 38655  001EF0  505C               	movf	??__parse_file_modify,w,c
 38656  001EF2  0D01               	mullw	1
 38657  001EF4  50F3               	movf	prodl,w,c
 38658  001EF6  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38659  001EF8  6ED9               	movwf	fsr2l,c
 38660  001EFA  50F4               	movf	prodh,w,c
 38661  001EFC  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38662  001EFE  6EDA               	movwf	fsr2h,c
 38663  001F00  C092  FFDF         	movff	__parse_file_modify@start_byte,indf2
 38664                           
 38665                           ;api.c: 837: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 38666  001F04  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38667  001F08  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38668  001F0C  CFDF F05C          	movff	indf2,??__parse_file_modify
 38669  001F10  0E01               	movlw	1
 38670  001F12  26DF               	addwf	indf2,f,c
 38671  001F14  505C               	movf	??__parse_file_modify,w,c
 38672  001F16  0D01               	mullw	1
 38673  001F18  50F3               	movf	prodl,w,c
 38674  001F1A  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38675  001F1C  6ED9               	movwf	fsr2l,c
 38676  001F1E  50F4               	movf	prodh,w,c
 38677  001F20  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38678  001F22  6EDA               	movwf	fsr2h,c
 38679  001F24  5191               	movf	(__parse_file_modify@number_of_bytes+1)& (0+255),w,b
 38680  001F26  6EDF               	movwf	indf2,c
 38681                           
 38682                           ;api.c: 838: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 38683  001F28  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38684  001F2C  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38685  001F30  CFDF F05C          	movff	indf2,??__parse_file_modify
 38686  001F34  0E01               	movlw	1
 38687  001F36  26DF               	addwf	indf2,f,c
 38688  001F38  505C               	movf	??__parse_file_modify,w,c
 38689  001F3A  0D01               	mullw	1
 38690  001F3C  50F3               	movf	prodl,w,c
 38691  001F3E  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38692  001F40  6ED9               	movwf	fsr2l,c
 38693  001F42  50F4               	movf	prodh,w,c
 38694  001F44  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38695  001F46  6EDA               	movwf	fsr2h,c
 38696  001F48  C090  FFDF         	movff	__parse_file_modify@number_of_bytes,indf2
 38697                           
 38698                           ;api.c: 839: out_buffer[(*out_idx_ptr)++] = return_value;
 38699  001F4C  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38700  001F50  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38701  001F54  CFDF F05C          	movff	indf2,??__parse_file_modify
 38702  001F58  0E01               	movlw	1
 38703  001F5A  26DF               	addwf	indf2,f,c
 38704  001F5C  505C               	movf	??__parse_file_modify,w,c
 38705  001F5E  0D01               	mullw	1
 38706  001F60  50F3               	movf	prodl,w,c
 38707  001F62  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38708  001F64  6ED9               	movwf	fsr2l,c
 38709  001F66  50F4               	movf	prodh,w,c
 38710  001F68  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38711  001F6A  6EDA               	movwf	fsr2h,c
 38712  001F6C  C08E  FFDF         	movff	__parse_file_modify@return_value,indf2
 38713  001F70                     l2917:
 38714                           
 38715                           ; BSR set to: 0
 38716                           ;api.c: 840: };api.c: 842: return number_of_bytes + 9;
 38717                           
 38718                           ; BSR set to: 0
 38719  001F70  5190               	movf	__parse_file_modify@number_of_bytes& (0+255),w,b
 38720  001F72  0F09               	addlw	9
 38721  001F74  0012               	return	
 38722  001F76                     __end_of__parse_file_modify:
 38723                           	opt stack 0
 38724                           tosu	equ	0xFFF
 38725                           tosh	equ	0xFFE
 38726                           tosl	equ	0xFFD
 38727                           pclath	equ	0xFFA
 38728                           tblptru	equ	0xFF8
 38729                           tblptrh	equ	0xFF7
 38730                           tblptrl	equ	0xFF6
 38731                           tablat	equ	0xFF5
 38732                           prodh	equ	0xFF4
 38733                           prodl	equ	0xFF3
 38734                           intcon	equ	0xFF2
 38735                           intcon2	equ	0xFF1
 38736                           intcon3	equ	0xFF0
 38737                           indf0	equ	0xFEF
 38738                           postinc0	equ	0xFEE
 38739                           fsr0h	equ	0xFEA
 38740                           fsr0l	equ	0xFE9
 38741                           wreg	equ	0xFE8
 38742                           indf1	equ	0xFE7
 38743                           postdec1	equ	0xFE5
 38744                           plusw1	equ	0xFE3
 38745                           fsr1h	equ	0xFE2
 38746                           fsr1l	equ	0xFE1
 38747                           indf2	equ	0xFDF
 38748                           postinc2	equ	0xFDE
 38749                           postdec2	equ	0xFDD
 38750                           plusw2	equ	0xFDB
 38751                           fsr2h	equ	0xFDA
 38752                           fsr2l	equ	0xFD9
 38753                           status	equ	0xFD8
 38754                           
 38755 ;; *************** function __parse_file_delete *****************
 38756 ;; Defined at:
 38757 ;;		line 670 in file "api.c"
 38758 ;; Parameters:    Size  Location     Type
 38759 ;;  data            2   79[COMRAM] PTR unsigned char 
 38760 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38761 ;;  out_buffer      2   81[COMRAM] PTR unsigned char 
 38762 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 38763 ;;  out_idx_ptr     2   83[COMRAM] PTR unsigned char 
 38764 ;;		 -> api_parse@out_idx(1), 
 38765 ;; Auto vars:     Size  Location     Type
 38766 ;;  file_number     1   87[COMRAM] unsigned char 
 38767 ;;  return_value    1   86[COMRAM] unsigned char 
 38768 ;; Return value:  Size  Location     Type
 38769 ;;                  1    wreg      unsigned char 
 38770 ;; Registers used:
 38771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38772 ;; Tracked objects:
 38773 ;;		On entry : 0/0
 38774 ;;		On exit  : 0/0
 38775 ;;		Unchanged: 0/0
 38776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38777 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38780 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38781 ;;Total ram usage:        9 bytes
 38782 ;; Hardware stack levels used:    1
 38783 ;; Hardware stack levels required when called:    8
 38784 ;; This function calls:
 38785 ;;		_fat_delete_file
 38786 ;; This function is called by:
 38787 ;;		__parse_command_long
 38788 ;; This function uses a non-reentrant model
 38789 ;;
 38790                           
 38791                           	psect	text189
 38792  006668                     __ptext189:
 38793                           	opt stack 0
 38794  006668                     __parse_file_delete:
 38795                           	opt stack 20
 38796                           
 38797                           ;api.c: 674: uint8_t return_value;;api.c: 675: uint8_t file_number;;api.c: 677: if((data
      +                          [0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 38798                           
 38799                           ;incstack = 0
 38800  006668  C050  FFD9         	movff	__parse_file_delete@data,fsr2l
 38801  00666C  C051  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 38802  006670  0E51               	movlw	81
 38803  006672  18DE               	xorwf	postinc2,w,c
 38804  006674  A4D8               	btfss	status,2,c
 38805  006676  D014               	goto	u11860
 38806  006678  EE20 F002          	lfsr	2,2
 38807  00667C  5050               	movf	__parse_file_delete@data,w,c
 38808  00667E  26D9               	addwf	fsr2l,f,c
 38809  006680  5051               	movf	__parse_file_delete@data+1,w,c
 38810  006682  22DA               	addwfc	fsr2h,f,c
 38811  006684  0E66               	movlw	102
 38812  006686  18DE               	xorwf	postinc2,w,c
 38813  006688  A4D8               	btfss	status,2,c
 38814  00668A  D00A               	goto	u11860
 38815  00668C  EE20 F003          	lfsr	2,3
 38816  006690  5050               	movf	__parse_file_delete@data,w,c
 38817  006692  26D9               	addwf	fsr2l,f,c
 38818  006694  5051               	movf	__parse_file_delete@data+1,w,c
 38819  006696  22DA               	addwfc	fsr2h,f,c
 38820  006698  0EA0               	movlw	160
 38821  00669A  18DE               	xorwf	postinc2,w,c
 38822  00669C  B4D8               	btfsc	status,2,c
 38823  00669E  D002               	goto	l2885
 38824  0066A0                     u11860:
 38825                           
 38826                           ;api.c: 678: {;api.c: 679: return 4;
 38827  0066A0  0E04               	movlw	4
 38828  0066A2  0012               	return	
 38829  0066A4                     l2885:
 38830                           
 38831                           ;api.c: 680: };api.c: 683: file_number = data[1];
 38832  0066A4  EE20 F001          	lfsr	2,1
 38833  0066A8  5050               	movf	__parse_file_delete@data,w,c
 38834  0066AA  26D9               	addwf	fsr2l,f,c
 38835  0066AC  5051               	movf	__parse_file_delete@data+1,w,c
 38836  0066AE  22DA               	addwfc	fsr2h,f,c
 38837  0066B0  50DF               	movf	indf2,w,c
 38838  0066B2  6E58               	movwf	__parse_file_delete@file_number,c
 38839                           
 38840                           ;api.c: 686: return_value = fat_delete_file(file_number);
 38841  0066B4  5058               	movf	__parse_file_delete@file_number,w,c
 38842  0066B6  EC7B  F04A         	call	_fat_delete_file
 38843  0066BA  6E57               	movwf	__parse_file_delete@return_value,c
 38844                           
 38845                           ;api.c: 689: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 38846  0066BC  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38847  0066C0  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38848  0066C4  50DF               	movf	indf2,w,c
 38849  0066C6  B4D8               	btfsc	status,2,c
 38850  0066C8  D03D               	goto	l2889
 38851  0066CA  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38852  0066CE  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38853  0066D2  0E3E               	movlw	62
 38854  0066D4  60DF               	cpfslt	indf2,c
 38855  0066D6  D036               	goto	l2889
 38856                           
 38857                           ;api.c: 690: {;api.c: 691: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_DELETE;
 38858  0066D8  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38859  0066DC  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38860  0066E0  CFDF F056          	movff	indf2,??__parse_file_delete
 38861  0066E4  0E01               	movlw	1
 38862  0066E6  26DF               	addwf	indf2,f,c
 38863  0066E8  5056               	movf	??__parse_file_delete,w,c
 38864  0066EA  0D01               	mullw	1
 38865  0066EC  50F3               	movf	prodl,w,c
 38866  0066EE  2452               	addwf	__parse_file_delete@out_buffer,w,c
 38867  0066F0  6ED9               	movwf	fsr2l,c
 38868  0066F2  50F4               	movf	prodh,w,c
 38869  0066F4  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 38870  0066F6  6EDA               	movwf	fsr2h,c
 38871  0066F8  0E51               	movlw	81
 38872  0066FA  6EDF               	movwf	indf2,c
 38873                           
 38874                           ;api.c: 692: out_buffer[(*out_idx_ptr)++] = file_number;
 38875  0066FC  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38876  006700  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38877  006704  CFDF F056          	movff	indf2,??__parse_file_delete
 38878  006708  0E01               	movlw	1
 38879  00670A  26DF               	addwf	indf2,f,c
 38880  00670C  5056               	movf	??__parse_file_delete,w,c
 38881  00670E  0D01               	mullw	1
 38882  006710  50F3               	movf	prodl,w,c
 38883  006712  2452               	addwf	__parse_file_delete@out_buffer,w,c
 38884  006714  6ED9               	movwf	fsr2l,c
 38885  006716  50F4               	movf	prodh,w,c
 38886  006718  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 38887  00671A  6EDA               	movwf	fsr2h,c
 38888  00671C  C058  FFDF         	movff	__parse_file_delete@file_number,indf2
 38889                           
 38890                           ;api.c: 693: out_buffer[(*out_idx_ptr)++] = return_value;
 38891  006720  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38892  006724  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38893  006728  CFDF F056          	movff	indf2,??__parse_file_delete
 38894  00672C  0E01               	movlw	1
 38895  00672E  26DF               	addwf	indf2,f,c
 38896  006730  5056               	movf	??__parse_file_delete,w,c
 38897  006732  0D01               	mullw	1
 38898  006734  50F3               	movf	prodl,w,c
 38899  006736  2452               	addwf	__parse_file_delete@out_buffer,w,c
 38900  006738  6ED9               	movwf	fsr2l,c
 38901  00673A  50F4               	movf	prodh,w,c
 38902  00673C  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 38903  00673E  6EDA               	movwf	fsr2h,c
 38904  006740  C057  FFDF         	movff	__parse_file_delete@return_value,indf2
 38905  006744                     l2889:
 38906                           
 38907                           ;api.c: 694: };api.c: 696: return 4;
 38908  006744  0E04               	movlw	4
 38909  006746  0012               	return	
 38910  006748                     __end_of__parse_file_delete:
 38911                           	opt stack 0
 38912                           tosu	equ	0xFFF
 38913                           tosh	equ	0xFFE
 38914                           tosl	equ	0xFFD
 38915                           pclath	equ	0xFFA
 38916                           tblptru	equ	0xFF8
 38917                           tblptrh	equ	0xFF7
 38918                           tblptrl	equ	0xFF6
 38919                           tablat	equ	0xFF5
 38920                           prodh	equ	0xFF4
 38921                           prodl	equ	0xFF3
 38922                           intcon	equ	0xFF2
 38923                           intcon2	equ	0xFF1
 38924                           intcon3	equ	0xFF0
 38925                           indf0	equ	0xFEF
 38926                           postinc0	equ	0xFEE
 38927                           fsr0h	equ	0xFEA
 38928                           fsr0l	equ	0xFE9
 38929                           wreg	equ	0xFE8
 38930                           indf1	equ	0xFE7
 38931                           postdec1	equ	0xFE5
 38932                           plusw1	equ	0xFE3
 38933                           fsr1h	equ	0xFE2
 38934                           fsr1l	equ	0xFE1
 38935                           indf2	equ	0xFDF
 38936                           postinc2	equ	0xFDE
 38937                           postdec2	equ	0xFDD
 38938                           plusw2	equ	0xFDB
 38939                           fsr2h	equ	0xFDA
 38940                           fsr2l	equ	0xFD9
 38941                           status	equ	0xFD8
 38942                           
 38943 ;; *************** function _fat_delete_file *****************
 38944 ;; Defined at:
 38945 ;;		line 647 in file "fat16.c"
 38946 ;; Parameters:    Size  Location     Type
 38947 ;;  file_number     1    wreg     unsigned char 
 38948 ;; Auto vars:     Size  Location     Type
 38949 ;;  file_number     1   78[COMRAM] unsigned char 
 38950 ;;  first_cluste    2   76[COMRAM] unsigned int 
 38951 ;; Return value:  Size  Location     Type
 38952 ;;                  1    wreg      unsigned char 
 38953 ;; Registers used:
 38954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38955 ;; Tracked objects:
 38956 ;;		On entry : 0/0
 38957 ;;		On exit  : 0/0
 38958 ;;		Unchanged: 0/0
 38959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38961 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38964 ;;Total ram usage:        3 bytes
 38965 ;; Hardware stack levels used:    1
 38966 ;; Hardware stack levels required when called:    7
 38967 ;; This function calls:
 38968 ;;		__delete_root
 38969 ;;		__get_first_cluster
 38970 ;;		__make_cluster_chain
 38971 ;;		__root_is_available
 38972 ;; This function is called by:
 38973 ;;		__parse_file_delete
 38974 ;; This function uses a non-reentrant model
 38975 ;;
 38976                           
 38977                           	psect	text190
 38978  0094F6                     __ptext190:
 38979                           	opt stack 0
 38980  0094F6                     _fat_delete_file:
 38981                           	opt stack 20
 38982                           
 38983                           ;incstack = 0
 38984                           ;fat_delete_file@file_number stored from wreg
 38985  0094F6  6E4F               	movwf	fat_delete_file@file_number,c
 38986                           
 38987                           ;fat16.c: 649: uint16_t first_cluster;;fat16.c: 652: if(file_number>=64)
 38988  0094F8  0E3F               	movlw	63
 38989  0094FA  644F               	cpfsgt	fat_delete_file@file_number,c
 38990  0094FC  D002               	goto	l2102
 38991                           
 38992                           ;fat16.c: 653: {;fat16.c: 655: return 0xFF;
 38993  0094FE  0EFF               	movlw	255
 38994  009500  0012               	return	
 38995  009502                     l2102:
 38996                           
 38997                           ;fat16.c: 656: };fat16.c: 659: if(_root_is_available(file_number))
 38998  009502  504F               	movf	fat_delete_file@file_number,w,c
 38999  009504  EC76  F046         	call	__root_is_available
 39000  009508  0900               	iorlw	0
 39001  00950A  B4D8               	btfsc	status,2,c
 39002  00950C  D002               	goto	l2104
 39003                           
 39004                           ;fat16.c: 660: {;fat16.c: 662: return 0xFE;
 39005  00950E  0EFE               	movlw	254
 39006  009510  0012               	return	
 39007  009512                     l2104:
 39008                           
 39009                           ;fat16.c: 663: };fat16.c: 666: first_cluster = _get_first_cluster(file_number);
 39010  009512  504F               	movf	fat_delete_file@file_number,w,c
 39011  009514  EC68  F049         	call	__get_first_cluster
 39012  009518  C030  F04D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 39013  00951C  C031  F04E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 39014                           
 39015                           ;fat16.c: 669: _make_cluster_chain(first_cluster, 0);
 39016  009520  C04D  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 39017  009524  C04E  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 39018  009528  0E00               	movlw	0
 39019  00952A  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 39020  00952C  0E00               	movlw	0
 39021  00952E  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 39022  009530  EC31  F009         	call	__make_cluster_chain	;wreg free
 39023                           
 39024                           ;fat16.c: 673: _delete_root(file_number);
 39025  009534  504F               	movf	fat_delete_file@file_number,w,c
 39026  009536  EC9F  F04A         	call	__delete_root
 39027                           
 39028                           ;fat16.c: 675: return 0x00;
 39029  00953A  0E00               	movlw	0
 39030  00953C  0012               	return	
 39031  00953E                     __end_of_fat_delete_file:
 39032                           	opt stack 0
 39033                           tosu	equ	0xFFF
 39034                           tosh	equ	0xFFE
 39035                           tosl	equ	0xFFD
 39036                           pclath	equ	0xFFA
 39037                           tblptru	equ	0xFF8
 39038                           tblptrh	equ	0xFF7
 39039                           tblptrl	equ	0xFF6
 39040                           tablat	equ	0xFF5
 39041                           prodh	equ	0xFF4
 39042                           prodl	equ	0xFF3
 39043                           intcon	equ	0xFF2
 39044                           intcon2	equ	0xFF1
 39045                           intcon3	equ	0xFF0
 39046                           indf0	equ	0xFEF
 39047                           postinc0	equ	0xFEE
 39048                           fsr0h	equ	0xFEA
 39049                           fsr0l	equ	0xFE9
 39050                           wreg	equ	0xFE8
 39051                           indf1	equ	0xFE7
 39052                           postdec1	equ	0xFE5
 39053                           plusw1	equ	0xFE3
 39054                           fsr1h	equ	0xFE2
 39055                           fsr1l	equ	0xFE1
 39056                           indf2	equ	0xFDF
 39057                           postinc2	equ	0xFDE
 39058                           postdec2	equ	0xFDD
 39059                           plusw2	equ	0xFDB
 39060                           fsr2h	equ	0xFDA
 39061                           fsr2l	equ	0xFD9
 39062                           status	equ	0xFD8
 39063                           
 39064 ;; *************** function __delete_root *****************
 39065 ;; Defined at:
 39066 ;;		line 486 in file "fat16.c"
 39067 ;; Parameters:    Size  Location     Type
 39068 ;;  file_number     1    wreg     unsigned char 
 39069 ;; Auto vars:     Size  Location     Type
 39070 ;;  file_number     1   45[COMRAM] unsigned char 
 39071 ;;  offset          2   42[COMRAM] unsigned int 
 39072 ;;  sector          2   40[COMRAM] unsigned int 
 39073 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 39074 ;; Return value:  Size  Location     Type
 39075 ;;                  1    wreg      void 
 39076 ;; Registers used:
 39077 ;;		wreg, status,2, status,0, cstack
 39078 ;; Tracked objects:
 39079 ;;		On entry : 0/0
 39080 ;;		On exit  : 0/0
 39081 ;;		Unchanged: 0/0
 39082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39084 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39087 ;;Total ram usage:        6 bytes
 39088 ;; Hardware stack levels used:    1
 39089 ;; Hardware stack levels required when called:    5
 39090 ;; This function calls:
 39091 ;;		__offset_from_file_number
 39092 ;;		__sector_from_file_number
 39093 ;;		_flash_partial_write
 39094 ;; This function is called by:
 39095 ;;		_fat_delete_file
 39096 ;; This function uses a non-reentrant model
 39097 ;;
 39098                           
 39099                           	psect	text191
 39100  00953E                     __ptext191:
 39101                           	opt stack 0
 39102  00953E                     __delete_root:
 39103                           	opt stack 21
 39104                           
 39105                           ;incstack = 0
 39106                           ;__delete_root@file_number stored from wreg
 39107  00953E  6E2E               	movwf	__delete_root@file_number,c
 39108                           
 39109                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 39110  009540  502E               	movf	__delete_root@file_number,w,c
 39111  009542  ECD9  F04D         	call	__sector_from_file_number
 39112  009546  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 39113  00954A  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 39114                           
 39115                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 39116  00954E  502E               	movf	__delete_root@file_number,w,c
 39117  009550  EC78  F04E         	call	__offset_from_file_number
 39118  009554  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 39119  009558  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 39120                           
 39121                           ;fat16.c: 497: deleted_value = 0xE5;
 39122  00955C  0EE5               	movlw	229
 39123  00955E  6E2D               	movwf	__delete_root@deleted_value,c
 39124                           
 39125                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 39126  009560  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 39127  009564  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 39128  009568  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 39129  00956C  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 39130  009570  0E00               	movlw	0
 39131  009572  6E25               	movwf	flash_partial_write@length+1,c
 39132  009574  0E01               	movlw	1
 39133  009576  6E24               	movwf	flash_partial_write@length,c
 39134  009578  0E2D               	movlw	low __delete_root@deleted_value
 39135  00957A  6E26               	movwf	flash_partial_write@data,c
 39136  00957C  0E00               	movlw	high __delete_root@deleted_value
 39137  00957E  6E27               	movwf	flash_partial_write@data+1,c
 39138  009580  EC6D  F044         	call	_flash_partial_write	;wreg free
 39139  009584  0012               	return		;funcret
 39140  009586                     __end_of__delete_root:
 39141                           	opt stack 0
 39142                           tosu	equ	0xFFF
 39143                           tosh	equ	0xFFE
 39144                           tosl	equ	0xFFD
 39145                           pclath	equ	0xFFA
 39146                           tblptru	equ	0xFF8
 39147                           tblptrh	equ	0xFF7
 39148                           tblptrl	equ	0xFF6
 39149                           tablat	equ	0xFF5
 39150                           prodh	equ	0xFF4
 39151                           prodl	equ	0xFF3
 39152                           intcon	equ	0xFF2
 39153                           intcon2	equ	0xFF1
 39154                           intcon3	equ	0xFF0
 39155                           indf0	equ	0xFEF
 39156                           postinc0	equ	0xFEE
 39157                           fsr0h	equ	0xFEA
 39158                           fsr0l	equ	0xFE9
 39159                           wreg	equ	0xFE8
 39160                           indf1	equ	0xFE7
 39161                           postdec1	equ	0xFE5
 39162                           plusw1	equ	0xFE3
 39163                           fsr1h	equ	0xFE2
 39164                           fsr1l	equ	0xFE1
 39165                           indf2	equ	0xFDF
 39166                           postinc2	equ	0xFDE
 39167                           postdec2	equ	0xFDD
 39168                           plusw2	equ	0xFDB
 39169                           fsr2h	equ	0xFDA
 39170                           fsr2l	equ	0xFD9
 39171                           status	equ	0xFD8
 39172                           
 39173 ;; *************** function __parse_file_create *****************
 39174 ;; Defined at:
 39175 ;;		line 699 in file "api.c"
 39176 ;; Parameters:    Size  Location     Type
 39177 ;;  data            2   88[COMRAM] PTR unsigned char 
 39178 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39179 ;;  out_buffer      2   90[COMRAM] PTR unsigned char 
 39180 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 39181 ;;  out_idx_ptr     2   92[COMRAM] PTR unsigned char 
 39182 ;;		 -> api_parse@out_idx(1), 
 39183 ;; Auto vars:     Size  Location     Type
 39184 ;;  file_size       4   38[BANK0 ] unsigned long 
 39185 ;;  file_number     1   37[BANK0 ] unsigned char 
 39186 ;; Return value:  Size  Location     Type
 39187 ;;                  1    wreg      unsigned char 
 39188 ;; Registers used:
 39189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39190 ;; Tracked objects:
 39191 ;;		On entry : 0/0
 39192 ;;		On exit  : 0/0
 39193 ;;		Unchanged: 0/0
 39194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39195 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39196 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39198 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39199 ;;Total ram usage:       12 bytes
 39200 ;; Hardware stack levels used:    1
 39201 ;; Hardware stack levels required when called:    8
 39202 ;; This function calls:
 39203 ;;		_fat_create_file
 39204 ;; This function is called by:
 39205 ;;		__parse_command_long
 39206 ;; This function uses a non-reentrant model
 39207 ;;
 39208                           
 39209                           	psect	text192
 39210  00466A                     __ptext192:
 39211                           	opt stack 0
 39212  00466A                     __parse_file_create:
 39213                           	opt stack 20
 39214                           
 39215                           ;api.c: 702: uint8_t file_number;;api.c: 704: uint32_t file_size;;api.c: 705: if((data[0
      +                          ]!=COMMAND_FILE_CREATE) || (data[16]!=0xBD) || (data[17]!=0x4F))
 39216                           
 39217                           ;incstack = 0
 39218  00466A  C059  FFD9         	movff	__parse_file_create@data,fsr2l
 39219  00466E  C05A  FFDA         	movff	__parse_file_create@data+1,fsr2h
 39220  004672  0E52               	movlw	82
 39221  004674  18DE               	xorwf	postinc2,w,c
 39222  004676  A4D8               	btfss	status,2,c
 39223  004678  D014               	goto	u11910
 39224  00467A  EE20 F010          	lfsr	2,16
 39225  00467E  5059               	movf	__parse_file_create@data,w,c
 39226  004680  26D9               	addwf	fsr2l,f,c
 39227  004682  505A               	movf	__parse_file_create@data+1,w,c
 39228  004684  22DA               	addwfc	fsr2h,f,c
 39229  004686  0EBD               	movlw	189
 39230  004688  18DE               	xorwf	postinc2,w,c
 39231  00468A  A4D8               	btfss	status,2,c
 39232  00468C  D00A               	goto	u11910
 39233  00468E  EE20 F011          	lfsr	2,17
 39234  004692  5059               	movf	__parse_file_create@data,w,c
 39235  004694  26D9               	addwf	fsr2l,f,c
 39236  004696  505A               	movf	__parse_file_create@data+1,w,c
 39237  004698  22DA               	addwfc	fsr2h,f,c
 39238  00469A  0E4F               	movlw	79
 39239  00469C  18DE               	xorwf	postinc2,w,c
 39240  00469E  B4D8               	btfsc	status,2,c
 39241  0046A0  D002               	goto	l2892
 39242  0046A2                     u11910:
 39243                           
 39244                           ;api.c: 706: {;api.c: 707: return 18;
 39245  0046A2  0E12               	movlw	18
 39246  0046A4  0012               	return	
 39247  0046A6                     l2892:
 39248                           
 39249                           ;api.c: 708: };api.c: 711: file_size = data[12];
 39250  0046A6  EE20 F00C          	lfsr	2,12
 39251  0046AA  5059               	movf	__parse_file_create@data,w,c
 39252  0046AC  26D9               	addwf	fsr2l,f,c
 39253  0046AE  505A               	movf	__parse_file_create@data+1,w,c
 39254  0046B0  22DA               	addwfc	fsr2h,f,c
 39255  0046B2  50DF               	movf	indf2,w,c
 39256  0046B4  6E5F               	movwf	??__parse_file_create& (0+255),c
 39257  0046B6  505F               	movf	??__parse_file_create,w,c
 39258  0046B8  0100               	movlb	0	; () banked
 39259  0046BA  6F86               	movwf	__parse_file_create@file_size& (0+255),b
 39260  0046BC  6B87               	clrf	(__parse_file_create@file_size+1)& (0+255),b
 39261  0046BE  6B88               	clrf	(__parse_file_create@file_size+2)& (0+255),b
 39262  0046C0  6B89               	clrf	(__parse_file_create@file_size+3)& (0+255),b
 39263                           
 39264                           ; BSR set to: 0
 39265                           ;api.c: 712: file_size <<= 8;
 39266  0046C2  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 39267  0046C6  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 39268  0046CA  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 39269  0046CE  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 39270                           
 39271                           ; BSR set to: 0
 39272                           ;api.c: 713: file_size |= data[13];
 39273  0046D0  EE20 F00D          	lfsr	2,13
 39274  0046D4  5059               	movf	__parse_file_create@data,w,c
 39275  0046D6  26D9               	addwf	fsr2l,f,c
 39276  0046D8  505A               	movf	__parse_file_create@data+1,w,c
 39277  0046DA  22DA               	addwfc	fsr2h,f,c
 39278  0046DC  50DF               	movf	indf2,w,c
 39279  0046DE  6E5F               	movwf	??__parse_file_create& (0+255),c
 39280  0046E0  505F               	movf	??__parse_file_create,w,c
 39281  0046E2  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 39282                           
 39283                           ;api.c: 714: file_size <<= 8;
 39284  0046E4  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 39285  0046E8  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 39286  0046EC  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 39287  0046F0  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 39288                           
 39289                           ; BSR set to: 0
 39290                           ;api.c: 715: file_size |= data[14];
 39291  0046F2  EE20 F00E          	lfsr	2,14
 39292  0046F6  5059               	movf	__parse_file_create@data,w,c
 39293  0046F8  26D9               	addwf	fsr2l,f,c
 39294  0046FA  505A               	movf	__parse_file_create@data+1,w,c
 39295  0046FC  22DA               	addwfc	fsr2h,f,c
 39296  0046FE  50DF               	movf	indf2,w,c
 39297  004700  6E5F               	movwf	??__parse_file_create& (0+255),c
 39298  004702  505F               	movf	??__parse_file_create,w,c
 39299  004704  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 39300                           
 39301                           ; BSR set to: 0
 39302                           ;api.c: 716: file_size <<= 8;
 39303  004706  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 39304  00470A  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 39305  00470E  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 39306  004712  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 39307                           
 39308                           ;api.c: 717: file_size |= data[15];
 39309  004714  EE20 F00F          	lfsr	2,15
 39310  004718  5059               	movf	__parse_file_create@data,w,c
 39311  00471A  26D9               	addwf	fsr2l,f,c
 39312  00471C  505A               	movf	__parse_file_create@data+1,w,c
 39313  00471E  22DA               	addwfc	fsr2h,f,c
 39314  004720  50DF               	movf	indf2,w,c
 39315  004722  6E5F               	movwf	??__parse_file_create& (0+255),c
 39316  004724  505F               	movf	??__parse_file_create,w,c
 39317  004726  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 39318                           
 39319                           ; BSR set to: 0
 39320                           ;api.c: 720: file_number = fat_create_file(&data[1], &data[9], file_size);
 39321  004728  0E01               	movlw	1
 39322  00472A  2459               	addwf	__parse_file_create@data,w,c
 39323  00472C  6E4D               	movwf	fat_create_file@name,c
 39324  00472E  0E00               	movlw	0
 39325  004730  205A               	addwfc	__parse_file_create@data+1,w,c
 39326  004732  6E4E               	movwf	fat_create_file@name+1,c
 39327  004734  0E09               	movlw	9
 39328  004736  2459               	addwf	__parse_file_create@data,w,c
 39329  004738  6E4F               	movwf	fat_create_file@extension,c
 39330  00473A  0E00               	movlw	0
 39331  00473C  205A               	addwfc	__parse_file_create@data+1,w,c
 39332  00473E  6E50               	movwf	fat_create_file@extension+1,c
 39333  004740  C086  F051         	movff	__parse_file_create@file_size,fat_create_file@size
 39334  004744  C087  F052         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 39335  004748  C088  F053         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 39336  00474C  C089  F054         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 39337  004750  EC84  F026         	call	_fat_create_file	;wreg free
 39338  004754  0100               	movlb	0	; () banked
 39339  004756  6F85               	movwf	__parse_file_create@file_number& (0+255),b
 39340                           
 39341                           ; BSR set to: 0
 39342                           ;api.c: 723: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39343  004758  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39344  00475C  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39345  004760  50DF               	movf	indf2,w,c
 39346  004762  B4D8               	btfsc	status,2,c
 39347  004764  D02B               	goto	l2896
 39348                           
 39349                           ; BSR set to: 0
 39350  004766  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39351  00476A  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39352  00476E  0E3F               	movlw	63
 39353  004770  60DF               	cpfslt	indf2,c
 39354  004772  D024               	goto	l2896
 39355                           
 39356                           ; BSR set to: 0
 39357                           ;api.c: 724: {;api.c: 725: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_CREATE;
 39358  004774  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39359  004778  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39360  00477C  CFDF F05F          	movff	indf2,??__parse_file_create
 39361  004780  0E01               	movlw	1
 39362  004782  26DF               	addwf	indf2,f,c
 39363  004784  505F               	movf	??__parse_file_create,w,c
 39364  004786  0D01               	mullw	1
 39365  004788  50F3               	movf	prodl,w,c
 39366  00478A  245B               	addwf	__parse_file_create@out_buffer,w,c
 39367  00478C  6ED9               	movwf	fsr2l,c
 39368  00478E  50F4               	movf	prodh,w,c
 39369  004790  205C               	addwfc	__parse_file_create@out_buffer+1,w,c
 39370  004792  6EDA               	movwf	fsr2h,c
 39371  004794  0E52               	movlw	82
 39372  004796  6EDF               	movwf	indf2,c
 39373                           
 39374                           ;api.c: 726: out_buffer[(*out_idx_ptr)++] = file_number;
 39375  004798  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39376  00479C  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39377  0047A0  CFDF F05F          	movff	indf2,??__parse_file_create
 39378  0047A4  0E01               	movlw	1
 39379  0047A6  26DF               	addwf	indf2,f,c
 39380  0047A8  505F               	movf	??__parse_file_create,w,c
 39381  0047AA  0D01               	mullw	1
 39382  0047AC  50F3               	movf	prodl,w,c
 39383  0047AE  245B               	addwf	__parse_file_create@out_buffer,w,c
 39384  0047B0  6ED9               	movwf	fsr2l,c
 39385  0047B2  50F4               	movf	prodh,w,c
 39386  0047B4  205C               	addwfc	__parse_file_create@out_buffer+1,w,c
 39387  0047B6  6EDA               	movwf	fsr2h,c
 39388  0047B8  C085  FFDF         	movff	__parse_file_create@file_number,indf2
 39389  0047BC                     l2896:
 39390                           
 39391                           ; BSR set to: 0
 39392                           ;api.c: 727: };api.c: 729: return 18;
 39393                           
 39394                           ; BSR set to: 0
 39395  0047BC  0E12               	movlw	18
 39396  0047BE  0012               	return	
 39397  0047C0                     __end_of__parse_file_create:
 39398                           	opt stack 0
 39399                           tosu	equ	0xFFF
 39400                           tosh	equ	0xFFE
 39401                           tosl	equ	0xFFD
 39402                           pclath	equ	0xFFA
 39403                           tblptru	equ	0xFF8
 39404                           tblptrh	equ	0xFF7
 39405                           tblptrl	equ	0xFF6
 39406                           tablat	equ	0xFF5
 39407                           prodh	equ	0xFF4
 39408                           prodl	equ	0xFF3
 39409                           intcon	equ	0xFF2
 39410                           intcon2	equ	0xFF1
 39411                           intcon3	equ	0xFF0
 39412                           indf0	equ	0xFEF
 39413                           postinc0	equ	0xFEE
 39414                           fsr0h	equ	0xFEA
 39415                           fsr0l	equ	0xFE9
 39416                           wreg	equ	0xFE8
 39417                           indf1	equ	0xFE7
 39418                           postdec1	equ	0xFE5
 39419                           plusw1	equ	0xFE3
 39420                           fsr1h	equ	0xFE2
 39421                           fsr1l	equ	0xFE1
 39422                           indf2	equ	0xFDF
 39423                           postinc2	equ	0xFDE
 39424                           postdec2	equ	0xFDD
 39425                           plusw2	equ	0xFDB
 39426                           fsr2h	equ	0xFDA
 39427                           fsr2l	equ	0xFD9
 39428                           status	equ	0xFD8
 39429                           
 39430 ;; *************** function __parse_file_copy *****************
 39431 ;; Defined at:
 39432 ;;		line 976 in file "api.c"
 39433 ;; Parameters:    Size  Location     Type
 39434 ;;  data            2   52[BANK0 ] PTR unsigned char 
 39435 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39436 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 39437 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 39438 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 39439 ;;		 -> api_parse@out_idx(1), 
 39440 ;; Auto vars:     Size  Location     Type
 39441 ;;  file_number     1   94[COMRAM] unsigned char 
 39442 ;;  return_value    1   93[COMRAM] unsigned char 
 39443 ;; Return value:  Size  Location     Type
 39444 ;;                  1    wreg      unsigned char 
 39445 ;; Registers used:
 39446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39447 ;; Tracked objects:
 39448 ;;		On entry : 0/0
 39449 ;;		On exit  : 0/0
 39450 ;;		Unchanged: 0/0
 39451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39455 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39456 ;;Total ram usage:        9 bytes
 39457 ;; Hardware stack levels used:    1
 39458 ;; Hardware stack levels required when called:    9
 39459 ;; This function calls:
 39460 ;;		_fat_copy_file
 39461 ;; This function is called by:
 39462 ;;		__parse_command_long
 39463 ;; This function uses a non-reentrant model
 39464 ;;
 39465                           
 39466                           	psect	text193
 39467  005D2C                     __ptext193:
 39468                           	opt stack 0
 39469  005D2C                     __parse_file_copy:
 39470                           	opt stack 19
 39471                           
 39472                           ;api.c: 980: uint8_t file_number;;api.c: 981: uint8_t return_value;;api.c: 983: if((data
      +                          [0]!=COMMAND_FILE_COPY) || (data[13]!=0x54) || (data[14]!=0xD9))
 39473                           
 39474                           ;incstack = 0
 39475  005D2C  C094  FFD9         	movff	__parse_file_copy@data,fsr2l
 39476  005D30  C095  FFDA         	movff	__parse_file_copy@data+1,fsr2h
 39477  005D34  0E5A               	movlw	90
 39478  005D36  18DE               	xorwf	postinc2,w,c
 39479  005D38  A4D8               	btfss	status,2,c
 39480  005D3A  D015               	goto	u12310
 39481  005D3C  0100               	movlb	0	; () banked
 39482  005D3E  EE20 F00D          	lfsr	2,13
 39483  005D42  5194               	movf	__parse_file_copy@data& (0+255),w,b
 39484  005D44  26D9               	addwf	fsr2l,f,c
 39485  005D46  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 39486  005D48  22DA               	addwfc	fsr2h,f,c
 39487  005D4A  0E54               	movlw	84
 39488  005D4C  18DE               	xorwf	postinc2,w,c
 39489  005D4E  A4D8               	btfss	status,2,c
 39490  005D50  D00A               	goto	u12310
 39491                           
 39492                           ; BSR set to: 0
 39493  005D52  EE20 F00E          	lfsr	2,14
 39494  005D56  5194               	movf	__parse_file_copy@data& (0+255),w,b
 39495  005D58  26D9               	addwf	fsr2l,f,c
 39496  005D5A  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 39497  005D5C  22DA               	addwfc	fsr2h,f,c
 39498  005D5E  0ED9               	movlw	217
 39499  005D60  18DE               	xorwf	postinc2,w,c
 39500  005D62  B4D8               	btfsc	status,2,c
 39501  005D64  D002               	goto	l2948
 39502  005D66                     u12310:
 39503                           
 39504                           ;api.c: 984: {;api.c: 985: return 15;
 39505                           
 39506                           ; BSR set to: 0
 39507  005D66  0E0F               	movlw	15
 39508  005D68  0012               	return	
 39509  005D6A                     l2948:
 39510                           
 39511                           ;api.c: 986: };api.c: 989: file_number = data[1];
 39512  005D6A  0100               	movlb	0	; () banked
 39513  005D6C  EE20 F001          	lfsr	2,1
 39514  005D70  5194               	movf	__parse_file_copy@data& (0+255),w,b
 39515  005D72  26D9               	addwf	fsr2l,f,c
 39516  005D74  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 39517  005D76  22DA               	addwfc	fsr2h,f,c
 39518  005D78  50DF               	movf	indf2,w,c
 39519  005D7A  6E5F               	movwf	__parse_file_copy@file_number,c
 39520                           
 39521                           ; BSR set to: 0
 39522                           ;api.c: 992: return_value = fat_copy_file(file_number, &data[2], &data[10]);
 39523  005D7C  0E02               	movlw	2
 39524  005D7E  2594               	addwf	__parse_file_copy@data& (0+255),w,b
 39525  005D80  6E59               	movwf	fat_copy_file@name,c
 39526  005D82  0E00               	movlw	0
 39527  005D84  2195               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 39528  005D86  6E5A               	movwf	fat_copy_file@name+1,c
 39529  005D88  0E0A               	movlw	10
 39530  005D8A  2594               	addwf	__parse_file_copy@data& (0+255),w,b
 39531  005D8C  6E5B               	movwf	fat_copy_file@extension,c
 39532  005D8E  0E00               	movlw	0
 39533  005D90  2195               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 39534  005D92  6E5C               	movwf	fat_copy_file@extension+1,c
 39535  005D94  505F               	movf	__parse_file_copy@file_number,w,c
 39536  005D96  EC0F  F030         	call	_fat_copy_file
 39537  005D9A  6E5E               	movwf	__parse_file_copy@return_value,c
 39538                           
 39539                           ;api.c: 995: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 39540  005D9C  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39541  005DA0  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39542  005DA4  50DF               	movf	indf2,w,c
 39543  005DA6  B4D8               	btfsc	status,2,c
 39544  005DA8  D03E               	goto	l2952
 39545  005DAA  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39546  005DAE  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39547  005DB2  0E3E               	movlw	62
 39548  005DB4  60DF               	cpfslt	indf2,c
 39549  005DB6  D037               	goto	l2952
 39550                           
 39551                           ;api.c: 996: {;api.c: 997: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_COPY;
 39552  005DB8  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39553  005DBC  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39554  005DC0  CFDF F05D          	movff	indf2,??__parse_file_copy
 39555  005DC4  0E01               	movlw	1
 39556  005DC6  26DF               	addwf	indf2,f,c
 39557  005DC8  505D               	movf	??__parse_file_copy,w,c
 39558  005DCA  0D01               	mullw	1
 39559  005DCC  50F3               	movf	prodl,w,c
 39560  005DCE  0100               	movlb	0	; () banked
 39561  005DD0  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 39562  005DD2  6ED9               	movwf	fsr2l,c
 39563  005DD4  50F4               	movf	prodh,w,c
 39564  005DD6  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 39565  005DD8  6EDA               	movwf	fsr2h,c
 39566  005DDA  0E5A               	movlw	90
 39567  005DDC  6EDF               	movwf	indf2,c
 39568                           
 39569                           ;api.c: 998: out_buffer[(*out_idx_ptr)++] = file_number;
 39570  005DDE  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39571  005DE2  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39572  005DE6  CFDF F05D          	movff	indf2,??__parse_file_copy
 39573  005DEA  0E01               	movlw	1
 39574  005DEC  26DF               	addwf	indf2,f,c
 39575  005DEE  505D               	movf	??__parse_file_copy,w,c
 39576  005DF0  0D01               	mullw	1
 39577  005DF2  50F3               	movf	prodl,w,c
 39578  005DF4  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 39579  005DF6  6ED9               	movwf	fsr2l,c
 39580  005DF8  50F4               	movf	prodh,w,c
 39581  005DFA  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 39582  005DFC  6EDA               	movwf	fsr2h,c
 39583  005DFE  C05F  FFDF         	movff	__parse_file_copy@file_number,indf2
 39584                           
 39585                           ;api.c: 999: out_buffer[(*out_idx_ptr)++] = return_value;
 39586  005E02  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39587  005E06  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39588  005E0A  CFDF F05D          	movff	indf2,??__parse_file_copy
 39589  005E0E  0E01               	movlw	1
 39590  005E10  26DF               	addwf	indf2,f,c
 39591  005E12  505D               	movf	??__parse_file_copy,w,c
 39592  005E14  0D01               	mullw	1
 39593  005E16  50F3               	movf	prodl,w,c
 39594  005E18  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 39595  005E1A  6ED9               	movwf	fsr2l,c
 39596  005E1C  50F4               	movf	prodh,w,c
 39597  005E1E  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 39598  005E20  6EDA               	movwf	fsr2h,c
 39599  005E22  C05E  FFDF         	movff	__parse_file_copy@return_value,indf2
 39600  005E26                     l2952:
 39601                           
 39602                           ;api.c: 1000: };api.c: 1002: return 15;
 39603                           
 39604                           ; BSR set to: 0
 39605  005E26  0E0F               	movlw	15
 39606  005E28  0012               	return	
 39607  005E2A                     __end_of__parse_file_copy:
 39608                           	opt stack 0
 39609                           tosu	equ	0xFFF
 39610                           tosh	equ	0xFFE
 39611                           tosl	equ	0xFFD
 39612                           pclath	equ	0xFFA
 39613                           tblptru	equ	0xFF8
 39614                           tblptrh	equ	0xFF7
 39615                           tblptrl	equ	0xFF6
 39616                           tablat	equ	0xFF5
 39617                           prodh	equ	0xFF4
 39618                           prodl	equ	0xFF3
 39619                           intcon	equ	0xFF2
 39620                           intcon2	equ	0xFF1
 39621                           intcon3	equ	0xFF0
 39622                           indf0	equ	0xFEF
 39623                           postinc0	equ	0xFEE
 39624                           fsr0h	equ	0xFEA
 39625                           fsr0l	equ	0xFE9
 39626                           wreg	equ	0xFE8
 39627                           indf1	equ	0xFE7
 39628                           postdec1	equ	0xFE5
 39629                           plusw1	equ	0xFE3
 39630                           fsr1h	equ	0xFE2
 39631                           fsr1l	equ	0xFE1
 39632                           indf2	equ	0xFDF
 39633                           postinc2	equ	0xFDE
 39634                           postdec2	equ	0xFDD
 39635                           plusw2	equ	0xFDB
 39636                           fsr2h	equ	0xFDA
 39637                           fsr2l	equ	0xFD9
 39638                           status	equ	0xFD8
 39639                           
 39640 ;; *************** function _fat_copy_file *****************
 39641 ;; Defined at:
 39642 ;;		line 854 in file "fat16.c"
 39643 ;; Parameters:    Size  Location     Type
 39644 ;;  file_number     1    wreg     unsigned char 
 39645 ;;  name            2   88[COMRAM] PTR unsigned char 
 39646 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39647 ;;  extension       2   90[COMRAM] PTR unsigned char 
 39648 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39649 ;; Auto vars:     Size  Location     Type
 39650 ;;  file_number     1   51[BANK0 ] unsigned char 
 39651 ;;  file_size       4   43[BANK0 ] unsigned long 
 39652 ;;  sector          2   49[BANK0 ] unsigned int 
 39653 ;;  number_of_cl    2   41[BANK0 ] unsigned int 
 39654 ;;  return_value    1   48[BANK0 ] unsigned char 
 39655 ;;  new_file_num    1   47[BANK0 ] unsigned char 
 39656 ;; Return value:  Size  Location     Type
 39657 ;;                  1    wreg      unsigned char 
 39658 ;; Registers used:
 39659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39660 ;; Tracked objects:
 39661 ;;		On entry : 0/0
 39662 ;;		On exit  : 0/0
 39663 ;;		Unchanged: 0/0
 39664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39666 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39667 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39668 ;;      Totals:         4      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39669 ;;Total ram usage:       19 bytes
 39670 ;; Hardware stack levels used:    1
 39671 ;; Hardware stack levels required when called:    8
 39672 ;; This function calls:
 39673 ;;		__root_is_available
 39674 ;;		_fat_copy_sector_to_buffer
 39675 ;;		_fat_create_file
 39676 ;;		_fat_get_file_size
 39677 ;;		_fat_write_sector_from_buffer
 39678 ;; This function is called by:
 39679 ;;		__parse_file_copy
 39680 ;; This function uses a non-reentrant model
 39681 ;;
 39682                           
 39683                           	psect	text194
 39684  00601E                     __ptext194:
 39685                           	opt stack 0
 39686  00601E                     _fat_copy_file:
 39687                           	opt stack 19
 39688                           
 39689                           ;incstack = 0
 39690                           ;fat_copy_file@file_number stored from wreg
 39691  00601E  0100               	movlb	0	; () banked
 39692  006020  6F93               	movwf	fat_copy_file@file_number& (0+255),b
 39693                           
 39694                           ;fat16.c: 856: uint32_t file_size;;fat16.c: 857: uint8_t new_file_number;;fat16.c: 858: 
      +                          uint16_t number_of_clusters;;fat16.c: 859: uint16_t sector;;fat16.c: 860: uint8_t return
      +                          _value;;fat16.c: 863: if(file_number>=64)
 39695  006022  0E3F               	movlw	63
 39696  006024  0100               	movlb	0	; () banked
 39697  006026  6593               	cpfsgt	fat_copy_file@file_number& (0+255),b
 39698  006028  D002               	goto	l2136
 39699                           
 39700                           ; BSR set to: 0
 39701                           ;fat16.c: 864: {;fat16.c: 866: return 0xFF;
 39702  00602A  0EFF               	movlw	255
 39703                           
 39704                           ; BSR set to: 0
 39705  00602C  0012               	return	
 39706  00602E                     l2136:
 39707                           
 39708                           ; BSR set to: 0
 39709                           ;fat16.c: 867: };fat16.c: 870: if(_root_is_available(file_number))
 39710                           
 39711                           ; BSR set to: 0
 39712  00602E  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 39713  006030  EC76  F046         	call	__root_is_available
 39714  006034  0900               	iorlw	0
 39715  006036  B4D8               	btfsc	status,2,c
 39716  006038  D002               	goto	l2138
 39717                           
 39718                           ;fat16.c: 871: {;fat16.c: 873: return 0xFE;
 39719  00603A  0EFE               	movlw	254
 39720  00603C  0012               	return	
 39721  00603E                     l2138:
 39722                           
 39723                           ;fat16.c: 874: };fat16.c: 877: file_size = fat_get_file_size(file_number);
 39724  00603E  0100               	movlb	0	; () banked
 39725  006040  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 39726  006042  ECA5  F044         	call	_fat_get_file_size
 39727  006046  C036  F08B         	movff	?_fat_get_file_size,fat_copy_file@file_size
 39728  00604A  C037  F08C         	movff	?_fat_get_file_size+1,fat_copy_file@file_size+1
 39729  00604E  C038  F08D         	movff	?_fat_get_file_size+2,fat_copy_file@file_size+2
 39730  006052  C039  F08E         	movff	?_fat_get_file_size+3,fat_copy_file@file_size+3
 39731                           
 39732                           ;fat16.c: 880: new_file_number = fat_create_file(name, extension, file_size);
 39733  006056  C059  F04D         	movff	fat_copy_file@name,fat_create_file@name
 39734  00605A  C05A  F04E         	movff	fat_copy_file@name+1,fat_create_file@name+1
 39735  00605E  C05B  F04F         	movff	fat_copy_file@extension,fat_create_file@extension
 39736  006062  C05C  F050         	movff	fat_copy_file@extension+1,fat_create_file@extension+1
 39737  006066  C08B  F051         	movff	fat_copy_file@file_size,fat_create_file@size
 39738  00606A  C08C  F052         	movff	fat_copy_file@file_size+1,fat_create_file@size+1
 39739  00606E  C08D  F053         	movff	fat_copy_file@file_size+2,fat_create_file@size+2
 39740  006072  C08E  F054         	movff	fat_copy_file@file_size+3,fat_create_file@size+3
 39741  006076  EC84  F026         	call	_fat_create_file	;wreg free
 39742  00607A  0100               	movlb	0	; () banked
 39743  00607C  6F8F               	movwf	fat_copy_file@new_file_number& (0+255),b
 39744                           
 39745                           ; BSR set to: 0
 39746                           ;fat16.c: 883: if(new_file_number>=64)
 39747  00607E  0E3F               	movlw	63
 39748  006080  658F               	cpfsgt	fat_copy_file@new_file_number& (0+255),b
 39749  006082  D002               	goto	l2139
 39750                           
 39751                           ; BSR set to: 0
 39752                           ;fat16.c: 884: {;fat16.c: 886: return 0xFD;
 39753  006084  0EFD               	movlw	253
 39754                           
 39755                           ; BSR set to: 0
 39756  006086  0012               	return	
 39757  006088                     l2139:
 39758                           
 39759                           ; BSR set to: 0
 39760                           ;fat16.c: 887: };fat16.c: 890: number_of_clusters = (file_size + 512 - 1) >> 9;
 39761                           
 39762                           ; BSR set to: 0
 39763  006088  0EFF               	movlw	255
 39764  00608A  258B               	addwf	fat_copy_file@file_size& (0+255),w,b
 39765  00608C  6F85               	movwf	??_fat_copy_file& (0+255),b
 39766  00608E  0E01               	movlw	1
 39767  006090  218C               	addwfc	(fat_copy_file@file_size+1)& (0+255),w,b
 39768  006092  6F86               	movwf	(??_fat_copy_file+1)& (0+255),b
 39769  006094  0E00               	movlw	0
 39770  006096  218D               	addwfc	(fat_copy_file@file_size+2)& (0+255),w,b
 39771  006098  6F87               	movwf	(??_fat_copy_file+2)& (0+255),b
 39772  00609A  0E00               	movlw	0
 39773  00609C  218E               	addwfc	(fat_copy_file@file_size+3)& (0+255),w,b
 39774  00609E  6F88               	movwf	(??_fat_copy_file+3)& (0+255),b
 39775  0060A0  0E0A               	movlw	10
 39776  0060A2  D005               	goto	u11270
 39777  0060A4                     u11275:
 39778  0060A4  90D8               	bcf	status,0,c
 39779  0060A6  3388               	rrcf	(??_fat_copy_file+3)& (0+255),f,b
 39780  0060A8  3387               	rrcf	(??_fat_copy_file+2)& (0+255),f,b
 39781  0060AA  3386               	rrcf	(??_fat_copy_file+1)& (0+255),f,b
 39782  0060AC  3385               	rrcf	??_fat_copy_file& (0+255),f,b
 39783  0060AE                     u11270:
 39784  0060AE  2EE8               	decfsz	wreg,f,c
 39785  0060B0  D7F9               	goto	u11275
 39786  0060B2  C085  F089         	movff	??_fat_copy_file,fat_copy_file@number_of_clusters
 39787  0060B6  C086  F08A         	movff	??_fat_copy_file+1,fat_copy_file@number_of_clusters+1
 39788                           
 39789                           ; BSR set to: 0
 39790                           ;fat16.c: 893: for(sector=0; sector<number_of_clusters; ++sector)
 39791  0060BA  0E00               	movlw	0
 39792  0060BC  6F92               	movwf	(fat_copy_file@sector+1)& (0+255),b
 39793  0060BE  0E00               	movlw	0
 39794  0060C0  6F91               	movwf	fat_copy_file@sector& (0+255),b
 39795  0060C2  D01E               	goto	l2140
 39796  0060C4                     
 39797                           ; BSR set to: 0
 39798                           ;fat16.c: 894: {;fat16.c: 895: return_value = fat_copy_sector_to_buffer(file_number, sec
      +                          tor);
 39799                           
 39800                           ; BSR set to: 0
 39801  0060C4  C091  F043         	movff	fat_copy_file@sector,fat_copy_sector_to_buffer@sector
 39802  0060C8  C092  F044         	movff	fat_copy_file@sector+1,fat_copy_sector_to_buffer@sector+1
 39803  0060CC  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 39804  0060CE  EC16  F03B         	call	_fat_copy_sector_to_buffer
 39805  0060D2  0100               	movlb	0	; () banked
 39806  0060D4  6F90               	movwf	fat_copy_file@return_value& (0+255),b
 39807                           
 39808                           ; BSR set to: 0
 39809                           ;fat16.c: 896: if(return_value!=0x00)
 39810  0060D6  5190               	movf	fat_copy_file@return_value& (0+255),w,b
 39811  0060D8  B4D8               	btfsc	status,2,c
 39812  0060DA  D002               	goto	l2142
 39813                           
 39814                           ; BSR set to: 0
 39815                           ;fat16.c: 897: {;fat16.c: 898: return 0xFC;
 39816  0060DC  0EFC               	movlw	252
 39817                           
 39818                           ; BSR set to: 0
 39819  0060DE  0012               	return	
 39820  0060E0                     l2142:
 39821                           
 39822                           ; BSR set to: 0
 39823                           ;fat16.c: 899: };fat16.c: 900: return_value = fat_write_sector_from_buffer(new_file_numb
      +                          er, sector);
 39824                           
 39825                           ; BSR set to: 0
 39826  0060E0  C091  F043         	movff	fat_copy_file@sector,fat_write_sector_from_buffer@sector
 39827  0060E4  C092  F044         	movff	fat_copy_file@sector+1,fat_write_sector_from_buffer@sector+1
 39828  0060E8  518F               	movf	fat_copy_file@new_file_number& (0+255),w,b
 39829  0060EA  ECD0  F042         	call	_fat_write_sector_from_buffer
 39830  0060EE  0100               	movlb	0	; () banked
 39831  0060F0  6F90               	movwf	fat_copy_file@return_value& (0+255),b
 39832                           
 39833                           ; BSR set to: 0
 39834                           ;fat16.c: 901: if(return_value!=0x00)
 39835  0060F2  5190               	movf	fat_copy_file@return_value& (0+255),w,b
 39836  0060F4  B4D8               	btfsc	status,2,c
 39837  0060F6  D002               	goto	l2143
 39838                           
 39839                           ; BSR set to: 0
 39840                           ;fat16.c: 902: {;fat16.c: 903: return 0xFB;
 39841  0060F8  0EFB               	movlw	251
 39842                           
 39843                           ; BSR set to: 0
 39844  0060FA  0012               	return	
 39845  0060FC                     l2143:
 39846                           
 39847                           ; BSR set to: 0
 39848                           
 39849                           ; BSR set to: 0
 39850  0060FC  4B91               	infsnz	fat_copy_file@sector& (0+255),f,b
 39851  0060FE  2B92               	incf	(fat_copy_file@sector+1)& (0+255),f,b
 39852  006100                     l2140:
 39853                           
 39854                           ; BSR set to: 0
 39855                           
 39856                           ; BSR set to: 0
 39857  006100  5189               	movf	fat_copy_file@number_of_clusters& (0+255),w,b
 39858  006102  5D91               	subwf	fat_copy_file@sector& (0+255),w,b
 39859  006104  518A               	movf	(fat_copy_file@number_of_clusters+1)& (0+255),w,b
 39860  006106  5992               	subwfb	(fat_copy_file@sector+1)& (0+255),w,b
 39861  006108  A0D8               	btfss	status,0,c
 39862  00610A  D7DC               	goto	l2141
 39863                           
 39864                           ; BSR set to: 0
 39865                           ;fat16.c: 904: };fat16.c: 905: };fat16.c: 907: return 0x00;
 39866                           
 39867                           ; BSR set to: 0
 39868  00610C  0E00               	movlw	0
 39869  00610E  0012               	return	
 39870  006110                     __end_of_fat_copy_file:
 39871                           	opt stack 0
 39872                           tosu	equ	0xFFF
 39873                           tosh	equ	0xFFE
 39874                           tosl	equ	0xFFD
 39875                           pclath	equ	0xFFA
 39876                           tblptru	equ	0xFF8
 39877                           tblptrh	equ	0xFF7
 39878                           tblptrl	equ	0xFF6
 39879                           tablat	equ	0xFF5
 39880                           prodh	equ	0xFF4
 39881                           prodl	equ	0xFF3
 39882                           intcon	equ	0xFF2
 39883                           intcon2	equ	0xFF1
 39884                           intcon3	equ	0xFF0
 39885                           indf0	equ	0xFEF
 39886                           postinc0	equ	0xFEE
 39887                           fsr0h	equ	0xFEA
 39888                           fsr0l	equ	0xFE9
 39889                           wreg	equ	0xFE8
 39890                           indf1	equ	0xFE7
 39891                           postdec1	equ	0xFE5
 39892                           plusw1	equ	0xFE3
 39893                           fsr1h	equ	0xFE2
 39894                           fsr1l	equ	0xFE1
 39895                           indf2	equ	0xFDF
 39896                           postinc2	equ	0xFDE
 39897                           postdec2	equ	0xFDD
 39898                           plusw2	equ	0xFDB
 39899                           fsr2h	equ	0xFDA
 39900                           fsr2l	equ	0xFD9
 39901                           status	equ	0xFD8
 39902                           
 39903 ;; *************** function _fat_create_file *****************
 39904 ;; Defined at:
 39905 ;;		line 586 in file "fat16.c"
 39906 ;; Parameters:    Size  Location     Type
 39907 ;;  name            2   76[COMRAM] PTR unsigned char 
 39908 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39909 ;;  extension       2   78[COMRAM] PTR unsigned char 
 39910 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39911 ;;  size            4   80[COMRAM] unsigned long 
 39912 ;; Auto vars:     Size  Location     Type
 39913 ;;  root_entry     32    5[BANK0 ] struct .
 39914 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 39915 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 39916 ;;  file_number     1    4[BANK0 ] unsigned char 
 39917 ;; Return value:  Size  Location     Type
 39918 ;;                  1    wreg      unsigned char 
 39919 ;; Registers used:
 39920 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39921 ;; Tracked objects:
 39922 ;;		On entry : 0/0
 39923 ;;		On exit  : 0/0
 39924 ;;		Unchanged: 0/0
 39925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39926 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39927 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39929 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39930 ;;Total ram usage:       49 bytes
 39931 ;; Hardware stack levels used:    1
 39932 ;; Hardware stack levels required when called:    7
 39933 ;; This function calls:
 39934 ;;		__get_available_root_entry
 39935 ;;		__get_date
 39936 ;;		__get_time
 39937 ;;		__make_cluster_chain
 39938 ;;		__write_root
 39939 ;;		_fat_find_file
 39940 ;;		_memcpy
 39941 ;; This function is called by:
 39942 ;;		_fat_copy_file
 39943 ;;		__parse_file_create
 39944 ;; This function uses a non-reentrant model
 39945 ;;
 39946                           
 39947                           	psect	text195
 39948  004D08                     __ptext195:
 39949                           	opt stack 0
 39950  004D08                     _fat_create_file:
 39951                           	opt stack 20
 39952                           
 39953                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 39954                           
 39955                           ;incstack = 0
 39956  004D08  C04D  F02C         	movff	fat_create_file@name,fat_find_file@name
 39957  004D0C  C04E  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 39958  004D10  C04F  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 39959  004D14  C050  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 39960  004D18  ECA4  F033         	call	_fat_find_file	;wreg free
 39961  004D1C  0AFF               	xorlw	255
 39962  004D1E  B4D8               	btfsc	status,2,c
 39963  004D20  D002               	goto	l2096
 39964                           
 39965                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 39966  004D22  0EFF               	movlw	255
 39967  004D24  0012               	return	
 39968  004D26                     l2096:
 39969                           
 39970                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 39971  004D26  ECC2  F04E         	call	__get_available_root_entry	;wreg free
 39972  004D2A  0100               	movlb	0	; () banked
 39973  004D2C  6F64               	movwf	fat_create_file@file_number& (0+255),b
 39974                           
 39975                           ; BSR set to: 0
 39976                           ;fat16.c: 605: if(file_number == 0xFF)
 39977  004D2E  2964               	incf	fat_create_file@file_number& (0+255),w,b
 39978  004D30  A4D8               	btfss	status,2,c
 39979  004D32  D002               	goto	l2098
 39980                           
 39981                           ; BSR set to: 0
 39982                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 39983  004D34  0EFE               	movlw	254
 39984                           
 39985                           ; BSR set to: 0
 39986  004D36  0012               	return	
 39987  004D38                     l2098:
 39988                           
 39989                           ; BSR set to: 0
 39990                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 39991                           
 39992                           ; BSR set to: 0
 39993  004D38  0EFF               	movlw	255
 39994  004D3A  2451               	addwf	fat_create_file@size,w,c
 39995  004D3C  6E55               	movwf	??_fat_create_file& (0+255),c
 39996  004D3E  0E01               	movlw	1
 39997  004D40  2052               	addwfc	fat_create_file@size+1,w,c
 39998  004D42  6E56               	movwf	(??_fat_create_file+1)& (0+255),c
 39999  004D44  0E00               	movlw	0
 40000  004D46  2053               	addwfc	fat_create_file@size+2,w,c
 40001  004D48  6E57               	movwf	(??_fat_create_file+2)& (0+255),c
 40002  004D4A  0E00               	movlw	0
 40003  004D4C  2054               	addwfc	fat_create_file@size+3,w,c
 40004  004D4E  6E58               	movwf	(??_fat_create_file+3)& (0+255),c
 40005  004D50  0E0A               	movlw	10
 40006  004D52  D005               	goto	u10200
 40007  004D54                     u10205:
 40008  004D54  90D8               	bcf	status,0,c
 40009  004D56  3258               	rrcf	??_fat_create_file+3,f,c
 40010  004D58  3257               	rrcf	??_fat_create_file+2,f,c
 40011  004D5A  3256               	rrcf	??_fat_create_file+1,f,c
 40012  004D5C  3255               	rrcf	??_fat_create_file,f,c
 40013  004D5E                     u10200:
 40014  004D5E  2EE8               	decfsz	wreg,f,c
 40015  004D60  D7F9               	goto	u10205
 40016  004D62  C055  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 40017  004D66  C056  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 40018                           
 40019                           ; BSR set to: 0
 40020                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 40021  004D6A  0E00               	movlw	0
 40022  004D6C  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 40023  004D6E  0E00               	movlw	0
 40024  004D70  6E36               	movwf	__make_cluster_chain@first_cluster,c
 40025  004D72  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 40026  004D76  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 40027  004D7A  EC31  F009         	call	__make_cluster_chain	;wreg free
 40028  004D7E  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 40029  004D82  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 40030                           
 40031                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 40032  004D86  0100               	movlb	0	; () banked
 40033  004D88  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 40034  004D8A  E105               	bnz	l12855
 40035  004D8C  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 40036  004D8E  A4D8               	btfss	status,2,c
 40037  004D90  D002               	goto	l2099
 40038                           
 40039                           ; BSR set to: 0
 40040                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 40041  004D92  0EFD               	movlw	253
 40042                           
 40043                           ; BSR set to: 0
 40044  004D94  0012               	return	
 40045  004D96                     l2099:
 40046  004D96                     l12855:
 40047                           
 40048                           ; BSR set to: 0
 40049                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 40050  004D96  0E65               	movlw	low fat_create_file@root_entry
 40051  004D98  6E01               	movwf	memcpy@d1,c
 40052  004D9A  0E00               	movlw	high fat_create_file@root_entry
 40053  004D9C  6E02               	movwf	memcpy@d1+1,c
 40054  004D9E  C04D  F003         	movff	fat_create_file@name,memcpy@s1
 40055  004DA2  C04E  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 40056  004DA6  5003               	movf	memcpy@s1,w,c
 40057  004DA8  1004               	iorwf	memcpy@s1+1,w,c
 40058  004DAA  A4D8               	btfss	status,2,c
 40059  004DAC  0E20               	movlw	32
 40060  004DAE  6E05               	movwf	memcpy@s1+2,c
 40061  004DB0  0E00               	movlw	0
 40062  004DB2  6E07               	movwf	memcpy@n+1,c
 40063  004DB4  0E08               	movlw	8
 40064  004DB6  6E06               	movwf	memcpy@n,c
 40065  004DB8  ECE1  F045         	call	_memcpy	;wreg free
 40066                           
 40067                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 40068  004DBC  0E6D               	movlw	low (fat_create_file@root_entry+8)
 40069  004DBE  6E01               	movwf	memcpy@d1,c
 40070  004DC0  0E00               	movlw	high (fat_create_file@root_entry+8)
 40071  004DC2  6E02               	movwf	memcpy@d1+1,c
 40072  004DC4  C04F  F003         	movff	fat_create_file@extension,memcpy@s1
 40073  004DC8  C050  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 40074  004DCC  5003               	movf	memcpy@s1,w,c
 40075  004DCE  1004               	iorwf	memcpy@s1+1,w,c
 40076  004DD0  A4D8               	btfss	status,2,c
 40077  004DD2  0E20               	movlw	32
 40078  004DD4  6E05               	movwf	memcpy@s1+2,c
 40079  004DD6  0E00               	movlw	0
 40080  004DD8  6E07               	movwf	memcpy@n+1,c
 40081  004DDA  0E03               	movlw	3
 40082  004DDC  6E06               	movwf	memcpy@n,c
 40083  004DDE  ECE1  F045         	call	_memcpy	;wreg free
 40084                           
 40085                           ;fat16.c: 629: root_entry.attributes = 0x00;
 40086  004DE2  0E00               	movlw	0
 40087  004DE4  0100               	movlb	0	; () banked
 40088  004DE6  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 40089                           
 40090                           ; BSR set to: 0
 40091                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 40092  004DE8  0E00               	movlw	0
 40093  004DEA  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 40094                           
 40095                           ; BSR set to: 0
 40096                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 40097  004DEC  0E00               	movlw	0
 40098  004DEE  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 40099                           
 40100                           ; BSR set to: 0
 40101                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 40102  004DF0  EC72  F050         	call	__get_time	;wreg free
 40103  004DF4  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 40104  004DF8  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 40105                           
 40106                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 40107  004DFC  EC77  F050         	call	__get_date	;wreg free
 40108  004E00  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 40109  004E04  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 40110                           
 40111                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 40112  004E08  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 40113  004E0C  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 40114                           
 40115                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 40116  004E10  0E00               	movlw	0
 40117  004E12  0100               	movlb	0	; () banked
 40118  004E14  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 40119  004E16  0E00               	movlw	0
 40120  004E18  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 40121                           
 40122                           ; BSR set to: 0
 40123                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 40124  004E1A  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 40125  004E1E  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 40126                           
 40127                           ; BSR set to: 0
 40128                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 40129  004E22  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 40130  004E26  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 40131                           
 40132                           ; BSR set to: 0
 40133                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 40134  004E2A  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 40135  004E2E  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 40136                           
 40137                           ; BSR set to: 0
 40138                           ;fat16.c: 639: root_entry.fileSize = size;
 40139  004E32  C051  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 40140  004E36  C052  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 40141  004E3A  C053  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 40142  004E3E  C054  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 40143                           
 40144                           ; BSR set to: 0
 40145                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 40146  004E42  0E65               	movlw	low fat_create_file@root_entry
 40147  004E44  6E29               	movwf	__write_root@data,c
 40148  004E46  0E00               	movlw	high fat_create_file@root_entry
 40149  004E48  6E2A               	movwf	__write_root@data+1,c
 40150  004E4A  5164               	movf	fat_create_file@file_number& (0+255),w,b
 40151  004E4C  EC08  F04B         	call	__write_root
 40152                           
 40153                           ;fat16.c: 644: return file_number;
 40154  004E50  0100               	movlb	0	; () banked
 40155  004E52  5164               	movf	fat_create_file@file_number& (0+255),w,b
 40156  004E54  0012               	return	
 40157  004E56                     __end_of_fat_create_file:
 40158                           	opt stack 0
 40159                           tosu	equ	0xFFF
 40160                           tosh	equ	0xFFE
 40161                           tosl	equ	0xFFD
 40162                           pclath	equ	0xFFA
 40163                           tblptru	equ	0xFF8
 40164                           tblptrh	equ	0xFF7
 40165                           tblptrl	equ	0xFF6
 40166                           tablat	equ	0xFF5
 40167                           prodh	equ	0xFF4
 40168                           prodl	equ	0xFF3
 40169                           intcon	equ	0xFF2
 40170                           intcon2	equ	0xFF1
 40171                           intcon3	equ	0xFF0
 40172                           indf0	equ	0xFEF
 40173                           postinc0	equ	0xFEE
 40174                           fsr0h	equ	0xFEA
 40175                           fsr0l	equ	0xFE9
 40176                           wreg	equ	0xFE8
 40177                           indf1	equ	0xFE7
 40178                           postdec1	equ	0xFE5
 40179                           plusw1	equ	0xFE3
 40180                           fsr1h	equ	0xFE2
 40181                           fsr1l	equ	0xFE1
 40182                           indf2	equ	0xFDF
 40183                           postinc2	equ	0xFDE
 40184                           postdec2	equ	0xFDD
 40185                           plusw2	equ	0xFDB
 40186                           fsr2h	equ	0xFDA
 40187                           fsr2l	equ	0xFD9
 40188                           status	equ	0xFD8
 40189                           
 40190 ;; *************** function _memcpy *****************
 40191 ;; Defined at:
 40192 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 40193 ;; Parameters:    Size  Location     Type
 40194 ;;  d1              2    0[COMRAM] PTR void 
 40195 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 40196 ;;		 -> _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 40197 ;;  s1              3    2[COMRAM] PTR const void 
 40198 ;;		 -> _spi_external_rx_buffer(64), ROM(49151), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 40199 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 40200 ;;		 -> SetupPkt(8), 
 40201 ;;  n               2    5[COMRAM] unsigned int 
 40202 ;; Auto vars:     Size  Location     Type
 40203 ;;  s               3    7[COMRAM] PTR const unsigned char 
 40204 ;;		 -> _spi_external_rx_buffer(64), ROM(49151), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 40205 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 40206 ;;		 -> SetupPkt(8), 
 40207 ;;  d               2   10[COMRAM] PTR unsigned char 
 40208 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 40209 ;;		 -> _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 40210 ;;  tmp             1   12[COMRAM] unsigned char 
 40211 ;; Return value:  Size  Location     Type
 40212 ;;                  2    0[COMRAM] PTR void 
 40213 ;; Registers used:
 40214 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40215 ;; Tracked objects:
 40216 ;;		On entry : 0/0
 40217 ;;		On exit  : 0/0
 40218 ;;		Unchanged: 0/0
 40219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40220 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40221 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40223 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40224 ;;Total ram usage:       13 bytes
 40225 ;; Hardware stack levels used:    1
 40226 ;; This function calls:
 40227 ;;		Nothing
 40228 ;; This function is called by:
 40229 ;;		_USBCtrlEPService
 40230 ;;		_MSDProcessCommandMediaPresent
 40231 ;;		__flash_set_page_size
 40232 ;;		_fat_create_file
 40233 ;;		_internalFlash_read
 40234 ;;		_api_prepare
 40235 ;; This function uses a non-reentrant model
 40236 ;;
 40237                           
 40238                           	psect	text196
 40239  008BC2                     __ptext196:
 40240                           	opt stack 0
 40241  008BC2                     _memcpy:
 40242                           	opt stack 27
 40243                           
 40244                           ;incstack = 0
 40245  008BC2  C003  F008         	movff	memcpy@s1,memcpy@s
 40246  008BC6  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 40247  008BCA  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 40248  008BCE  C001  F00B         	movff	memcpy@d1,memcpy@d
 40249  008BD2  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 40250  008BD6  D01F               	goto	l3807
 40251  008BD8                     l11493:
 40252  008BD8  C008  FFF6         	movff	memcpy@s,tblptrl
 40253  008BDC  C009  FFF7         	movff	memcpy@s+1,tblptrh
 40254  008BE0  C00A  FFF8         	movff	memcpy@s+2,tblptru
 40255  008BE4  BAF8               	btfsc	tblptru,5,c
 40256  008BE6  D003               	bra	u8407
 40257  008BE8  0008               	tblrd		*
 40258  008BEA  50F5               	movf	tablat,w,c
 40259  008BEC  D005               	bra	u8400
 40260  008BEE                     u8407:
 40261  008BEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 40262  008BF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 40263  008BF6  50EF               	movf	indf0,w,c
 40264  008BF8                     u8400:
 40265  008BF8  6E0D               	movwf	memcpy@tmp,c
 40266  008BFA  0E01               	movlw	1
 40267  008BFC  2608               	addwf	memcpy@s,f,c
 40268  008BFE  0E00               	movlw	0
 40269  008C00  2209               	addwfc	memcpy@s+1,f,c
 40270  008C02  0E00               	movlw	0
 40271  008C04  220A               	addwfc	memcpy@s+2,f,c
 40272  008C06  C00B  FFD9         	movff	memcpy@d,fsr2l
 40273  008C0A  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 40274  008C0E  C00D  FFDF         	movff	memcpy@tmp,indf2
 40275  008C12  4A0B               	infsnz	memcpy@d,f,c
 40276  008C14  2A0C               	incf	memcpy@d+1,f,c
 40277  008C16                     l3807:
 40278  008C16  0606               	decf	memcpy@n,f,c
 40279  008C18  A0D8               	btfss	status,0,c
 40280  008C1A  0607               	decf	memcpy@n+1,f,c
 40281  008C1C  2806               	incf	memcpy@n,w,c
 40282  008C1E  E1DC               	bnz	l11493
 40283  008C20  2807               	incf	memcpy@n+1,w,c
 40284  008C22  B4D8               	btfsc	status,2,c
 40285  008C24  0012               	return	
 40286  008C26  D7D8               	goto	l3808
 40287  008C28                     __end_of_memcpy:
 40288                           	opt stack 0
 40289                           tosu	equ	0xFFF
 40290                           tosh	equ	0xFFE
 40291                           tosl	equ	0xFFD
 40292                           pclath	equ	0xFFA
 40293                           tblptru	equ	0xFF8
 40294                           tblptrh	equ	0xFF7
 40295                           tblptrl	equ	0xFF6
 40296                           tablat	equ	0xFF5
 40297                           prodh	equ	0xFF4
 40298                           prodl	equ	0xFF3
 40299                           intcon	equ	0xFF2
 40300                           intcon2	equ	0xFF1
 40301                           intcon3	equ	0xFF0
 40302                           indf0	equ	0xFEF
 40303                           postinc0	equ	0xFEE
 40304                           fsr0h	equ	0xFEA
 40305                           fsr0l	equ	0xFE9
 40306                           wreg	equ	0xFE8
 40307                           indf1	equ	0xFE7
 40308                           postdec1	equ	0xFE5
 40309                           plusw1	equ	0xFE3
 40310                           fsr1h	equ	0xFE2
 40311                           fsr1l	equ	0xFE1
 40312                           indf2	equ	0xFDF
 40313                           postinc2	equ	0xFDE
 40314                           postdec2	equ	0xFDD
 40315                           plusw2	equ	0xFDB
 40316                           fsr2h	equ	0xFDA
 40317                           fsr2l	equ	0xFD9
 40318                           status	equ	0xFD8
 40319                           
 40320 ;; *************** function _fat_find_file *****************
 40321 ;; Defined at:
 40322 ;;		line 517 in file "fat16.c"
 40323 ;; Parameters:    Size  Location     Type
 40324 ;;  name            2   43[COMRAM] PTR unsigned char 
 40325 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), 
 40326 ;;  extension       2   45[COMRAM] PTR unsigned char 
 40327 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), 
 40328 ;; Auto vars:     Size  Location     Type
 40329 ;;  offset          2   52[COMRAM] unsigned int 
 40330 ;;  sector          2   50[COMRAM] unsigned int 
 40331 ;;  file_number     1   49[COMRAM] unsigned char 
 40332 ;; Return value:  Size  Location     Type
 40333 ;;                  1    wreg      unsigned char 
 40334 ;; Registers used:
 40335 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40336 ;; Tracked objects:
 40337 ;;		On entry : 0/0
 40338 ;;		On exit  : 0/0
 40339 ;;		Unchanged: 0/0
 40340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40342 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40344 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40345 ;;Total ram usage:       11 bytes
 40346 ;; Hardware stack levels used:    1
 40347 ;; Hardware stack levels required when called:    5
 40348 ;; This function calls:
 40349 ;;		_flash_sector_read
 40350 ;;		_strncmp
 40351 ;; This function is called by:
 40352 ;;		_fat_create_file
 40353 ;;		__bootloader_find_file
 40354 ;;		__fill_buffer_find_file
 40355 ;; This function uses a non-reentrant model
 40356 ;;
 40357                           
 40358                           	psect	text197
 40359  006748                     __ptext197:
 40360                           	opt stack 0
 40361  006748                     _fat_find_file:
 40362                           	opt stack 23
 40363                           
 40364                           ;fat16.c: 519: uint8_t file_number = 0;
 40365                           
 40366                           ;incstack = 0
 40367  006748  0E00               	movlw	0
 40368  00674A  6E32               	movwf	fat_find_file@file_number,c
 40369                           
 40370                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 40371  00674C  0E00               	movlw	0
 40372  00674E  6E34               	movwf	fat_find_file@sector+1,c
 40373  006750  0E22               	movlw	34
 40374  006752  6E33               	movwf	fat_find_file@sector,c
 40375  006754  5034               	movf	fat_find_file@sector+1,w,c
 40376  006756  E166               	bnz	l2080
 40377  006758  0E26               	movlw	38
 40378  00675A  5C33               	subwf	fat_find_file@sector,w,c
 40379  00675C  B0D8               	btfsc	status,0,c
 40380  00675E  D062               	goto	u9240
 40381                           
 40382                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 40383  006760  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 40384  006764  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 40385  006768  0EC0               	movlw	low _buffer
 40386  00676A  6E2A               	movwf	flash_sector_read@data,c
 40387  00676C  0E03               	movlw	high _buffer
 40388  00676E  6E2B               	movwf	flash_sector_read@data+1,c
 40389  006770  ECD9  F04C         	call	_flash_sector_read	;wreg free
 40390                           
 40391                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 40392  006774  0E00               	movlw	0
 40393  006776  6E36               	movwf	fat_find_file@offset+1,c
 40394  006778  0E00               	movlw	0
 40395  00677A  6E35               	movwf	fat_find_file@offset,c
 40396  00677C                     l12059:
 40397  00677C  0E02               	movlw	2
 40398  00677E  5C36               	subwf	fat_find_file@offset+1,w,c
 40399  006780  B0D8               	btfsc	status,0,c
 40400  006782  D04B               	goto	u9230
 40401                           
 40402                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 40403  006784  0EC0               	movlw	low _buffer
 40404  006786  2435               	addwf	fat_find_file@offset,w,c
 40405  006788  6ED9               	movwf	fsr2l,c
 40406  00678A  0E03               	movlw	high _buffer
 40407  00678C  2036               	addwfc	fat_find_file@offset+1,w,c
 40408  00678E  6EDA               	movwf	fsr2h,c
 40409  006790  50DF               	movf	indf2,w,c
 40410  006792  A4D8               	btfss	status,2,c
 40411  006794  D002               	goto	l2083
 40412                           
 40413                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 40414  006796  0EFF               	movlw	255
 40415  006798  0012               	return	
 40416  00679A                     l2083:
 40417                           
 40418                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 40419  00679A  0EC0               	movlw	low _buffer
 40420  00679C  2435               	addwf	fat_find_file@offset,w,c
 40421  00679E  6ED9               	movwf	fsr2l,c
 40422  0067A0  0E03               	movlw	high _buffer
 40423  0067A2  2036               	addwfc	fat_find_file@offset+1,w,c
 40424  0067A4  6EDA               	movwf	fsr2h,c
 40425  0067A6  0EE5               	movlw	229
 40426  0067A8  18DE               	xorwf	postinc2,w,c
 40427  0067AA  B4D8               	btfsc	status,2,c
 40428  0067AC  D030               	goto	l2089
 40429                           
 40430                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 40431                           
 40432                           ;fat16.c: 537: {;fat16.c: 541: }
 40433  0067AE  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 40434  0067B2  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 40435  0067B6  0EC0               	movlw	low _buffer
 40436  0067B8  2435               	addwf	fat_find_file@offset,w,c
 40437  0067BA  6E03               	movwf	strncmp@s2,c
 40438  0067BC  0E03               	movlw	high _buffer
 40439  0067BE  2036               	addwfc	fat_find_file@offset+1,w,c
 40440  0067C0  6E04               	movwf	strncmp@s2+1,c
 40441  0067C2  0E00               	movlw	0
 40442  0067C4  6E06               	movwf	strncmp@len+1,c
 40443  0067C6  0E08               	movlw	8
 40444  0067C8  6E05               	movwf	strncmp@len,c
 40445  0067CA  EC59  F03A         	call	_strncmp	;wreg free
 40446  0067CE  5001               	movf	?_strncmp,w,c
 40447  0067D0  1002               	iorwf	?_strncmp+1,w,c
 40448  0067D2  A4D8               	btfss	status,2,c
 40449  0067D4  D01C               	goto	l2089
 40450                           
 40451                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 40452  0067D6  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 40453  0067DA  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 40454  0067DE  0E08               	movlw	8
 40455  0067E0  2435               	addwf	fat_find_file@offset,w,c
 40456  0067E2  6E30               	movwf	??_fat_find_file& (0+255),c
 40457  0067E4  0E00               	movlw	0
 40458  0067E6  2036               	addwfc	fat_find_file@offset+1,w,c
 40459  0067E8  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 40460  0067EA  0EC0               	movlw	low _buffer
 40461  0067EC  2430               	addwf	??_fat_find_file,w,c
 40462  0067EE  6E03               	movwf	strncmp@s2,c
 40463  0067F0  0E03               	movlw	high _buffer
 40464  0067F2  2031               	addwfc	??_fat_find_file+1,w,c
 40465  0067F4  6E04               	movwf	strncmp@s2+1,c
 40466  0067F6  0E00               	movlw	0
 40467  0067F8  6E06               	movwf	strncmp@len+1,c
 40468  0067FA  0E03               	movlw	3
 40469  0067FC  6E05               	movwf	strncmp@len,c
 40470  0067FE  EC59  F03A         	call	_strncmp	;wreg free
 40471  006802  5001               	movf	?_strncmp,w,c
 40472  006804  1002               	iorwf	?_strncmp+1,w,c
 40473  006806  A4D8               	btfss	status,2,c
 40474  006808  D002               	goto	l2089
 40475                           
 40476                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 40477  00680A  5032               	movf	fat_find_file@file_number,w,c
 40478  00680C  0012               	return	
 40479  00680E                     l2089:
 40480                           
 40481                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 40482  00680E  2A32               	incf	fat_find_file@file_number,f,c
 40483  006810  0E20               	movlw	32
 40484  006812  2635               	addwf	fat_find_file@offset,f,c
 40485  006814  0E00               	movlw	0
 40486  006816  2236               	addwfc	fat_find_file@offset+1,f,c
 40487  006818  D7B1               	goto	l12059
 40488  00681A                     u9230:
 40489  00681A  4A33               	infsnz	fat_find_file@sector,f,c
 40490  00681C  2A34               	incf	fat_find_file@sector+1,f,c
 40491  00681E  5034               	movf	fat_find_file@sector+1,w,c
 40492  006820  E101               	bnz	l12093
 40493  006822  D79A               	goto	L61
 40494  006824                     u9240:
 40495  006824                     l2080:
 40496  006824                     l12093:
 40497                           
 40498                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 40499  006824  0EFF               	movlw	255
 40500  006826  0012               	return	
 40501  006828                     __end_of_fat_find_file:
 40502                           	opt stack 0
 40503                           tosu	equ	0xFFF
 40504                           tosh	equ	0xFFE
 40505                           tosl	equ	0xFFD
 40506                           pclath	equ	0xFFA
 40507                           tblptru	equ	0xFF8
 40508                           tblptrh	equ	0xFF7
 40509                           tblptrl	equ	0xFF6
 40510                           tablat	equ	0xFF5
 40511                           prodh	equ	0xFF4
 40512                           prodl	equ	0xFF3
 40513                           intcon	equ	0xFF2
 40514                           intcon2	equ	0xFF1
 40515                           intcon3	equ	0xFF0
 40516                           indf0	equ	0xFEF
 40517                           postinc0	equ	0xFEE
 40518                           fsr0h	equ	0xFEA
 40519                           fsr0l	equ	0xFE9
 40520                           wreg	equ	0xFE8
 40521                           indf1	equ	0xFE7
 40522                           postdec1	equ	0xFE5
 40523                           plusw1	equ	0xFE3
 40524                           fsr1h	equ	0xFE2
 40525                           fsr1l	equ	0xFE1
 40526                           indf2	equ	0xFDF
 40527                           postinc2	equ	0xFDE
 40528                           postdec2	equ	0xFDD
 40529                           plusw2	equ	0xFDB
 40530                           fsr2h	equ	0xFDA
 40531                           fsr2l	equ	0xFD9
 40532                           status	equ	0xFD8
 40533                           
 40534 ;; *************** function _strncmp *****************
 40535 ;; Defined at:
 40536 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 40537 ;; Parameters:    Size  Location     Type
 40538 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 40539 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 40540 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 40541 ;;		 -> buffer(512), 
 40542 ;;  len             2    4[COMRAM] unsigned int 
 40543 ;; Auto vars:     Size  Location     Type
 40544 ;;		None
 40545 ;; Return value:  Size  Location     Type
 40546 ;;                  2    0[COMRAM] int 
 40547 ;; Registers used:
 40548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40549 ;; Tracked objects:
 40550 ;;		On entry : 0/0
 40551 ;;		On exit  : 0/0
 40552 ;;		Unchanged: 0/0
 40553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40556 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40557 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40558 ;;Total ram usage:        9 bytes
 40559 ;; Hardware stack levels used:    1
 40560 ;; This function calls:
 40561 ;;		Nothing
 40562 ;; This function is called by:
 40563 ;;		_fat_find_file
 40564 ;; This function uses a non-reentrant model
 40565 ;;
 40566                           
 40567                           	psect	text198
 40568  0074B2                     __ptext198:
 40569                           	opt stack 0
 40570  0074B2                     _strncmp:
 40571                           	opt stack 27
 40572                           
 40573                           ;incstack = 0
 40574  0074B2  D053               	goto	l3825
 40575  0074B4                     l11431:
 40576  0074B4  C001  FFF6         	movff	strncmp@s1,tblptrl
 40577  0074B8  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 40578  0074BC  6AF8               	clrf	tblptru,c
 40579  0074BE  0E0E               	movlw	(high __ramtop+-1)
 40580  0074C0  64F7               	cpfsgt	tblptrh,c
 40581  0074C2  D003               	bra	u8297
 40582  0074C4  0008               	tblrd		*
 40583  0074C6  50F5               	movf	tablat,w,c
 40584  0074C8  D005               	bra	u8290
 40585  0074CA                     u8297:
 40586  0074CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40587  0074CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40588  0074D2  50EF               	movf	indf0,w,c
 40589  0074D4                     u8290:
 40590  0074D4  0900               	iorlw	0
 40591  0074D6  B4D8               	btfsc	status,2,c
 40592  0074D8  D019               	goto	u8310
 40593  0074DA  C003  FFD9         	movff	strncmp@s2,fsr2l
 40594  0074DE  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 40595  0074E2  50DF               	movf	indf2,w,c
 40596  0074E4  6E07               	movwf	??_strncmp& (0+255),c
 40597  0074E6  C001  FFF6         	movff	strncmp@s1,tblptrl
 40598  0074EA  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 40599  0074EE  6AF8               	clrf	tblptru,c
 40600  0074F0  0E0E               	movlw	(high __ramtop+-1)
 40601  0074F2  64F7               	cpfsgt	tblptrh,c
 40602  0074F4  D003               	bra	u8317
 40603  0074F6  0008               	tblrd		*
 40604  0074F8  50F5               	movf	tablat,w,c
 40605  0074FA  D005               	bra	u8315
 40606  0074FC                     u8317:
 40607  0074FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 40608  007500  CFF7 FFEA          	movff	tblptrh,fsr0h
 40609  007504  50EF               	movf	indf0,w,c
 40610  007506                     u8315:
 40611  007506  1807               	xorwf	??_strncmp,w,c
 40612  007508  B4D8               	btfsc	status,2,c
 40613  00750A  D023               	goto	l3827
 40614  00750C                     u8310:
 40615  00750C  C003  FFD9         	movff	strncmp@s2,fsr2l
 40616  007510  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 40617  007514  50DF               	movf	indf2,w,c
 40618  007516  6E07               	movwf	??_strncmp& (0+255),c
 40619  007518  6A08               	clrf	(??_strncmp+1)& (0+255),c
 40620  00751A  1E07               	comf	??_strncmp,f,c
 40621  00751C  1E08               	comf	??_strncmp+1,f,c
 40622  00751E  4A07               	infsnz	??_strncmp,f,c
 40623  007520  2A08               	incf	??_strncmp+1,f,c
 40624  007522  C001  FFF6         	movff	strncmp@s1,tblptrl
 40625  007526  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 40626  00752A  6AF8               	clrf	tblptru,c
 40627  00752C  0E0E               	movlw	(high __ramtop+-1)
 40628  00752E  64F7               	cpfsgt	tblptrh,c
 40629  007530  D003               	bra	u8327
 40630  007532  0008               	tblrd		*
 40631  007534  50F5               	movf	tablat,w,c
 40632  007536  D005               	bra	u8320
 40633  007538                     u8327:
 40634  007538  CFF6 FFE9          	movff	tblptrl,fsr0l
 40635  00753C  CFF7 FFEA          	movff	tblptrh,fsr0h
 40636  007540  50EF               	movf	indf0,w,c
 40637  007542                     u8320:
 40638  007542  6E09               	movwf	(??_strncmp+2)& (0+255),c
 40639  007544  5009               	movf	??_strncmp+2,w,c
 40640  007546  2407               	addwf	??_strncmp,w,c
 40641  007548  6E01               	movwf	?_strncmp,c
 40642  00754A  0E00               	movlw	0
 40643  00754C  2008               	addwfc	??_strncmp+1,w,c
 40644  00754E  6E02               	movwf	?_strncmp+1,c
 40645  007550  0012               	return	
 40646  007552                     l3827:
 40647  007552  4A01               	infsnz	strncmp@s1,f,c
 40648  007554  2A02               	incf	strncmp@s1+1,f,c
 40649  007556  4A03               	infsnz	strncmp@s2,f,c
 40650  007558  2A04               	incf	strncmp@s2+1,f,c
 40651  00755A                     l3825:
 40652  00755A  0605               	decf	strncmp@len,f,c
 40653  00755C  A0D8               	btfss	status,0,c
 40654  00755E  0606               	decf	strncmp@len+1,f,c
 40655  007560  2805               	incf	strncmp@len,w,c
 40656  007562  E1A8               	bnz	l11431
 40657  007564  2806               	incf	strncmp@len+1,w,c
 40658  007566  A4D8               	btfss	status,2,c
 40659  007568  D7A5               	goto	l3826
 40660  00756A  0E00               	movlw	0
 40661  00756C  6E02               	movwf	?_strncmp+1,c
 40662  00756E  0E00               	movlw	0
 40663  007570  6E01               	movwf	?_strncmp,c
 40664  007572  0012               	return	
 40665  007574                     __end_of_strncmp:
 40666                           	opt stack 0
 40667                           tosu	equ	0xFFF
 40668                           tosh	equ	0xFFE
 40669                           tosl	equ	0xFFD
 40670                           pclath	equ	0xFFA
 40671                           tblptru	equ	0xFF8
 40672                           tblptrh	equ	0xFF7
 40673                           tblptrl	equ	0xFF6
 40674                           tablat	equ	0xFF5
 40675                           prodh	equ	0xFF4
 40676                           prodl	equ	0xFF3
 40677                           intcon	equ	0xFF2
 40678                           intcon2	equ	0xFF1
 40679                           intcon3	equ	0xFF0
 40680                           indf0	equ	0xFEF
 40681                           postinc0	equ	0xFEE
 40682                           fsr0h	equ	0xFEA
 40683                           fsr0l	equ	0xFE9
 40684                           wreg	equ	0xFE8
 40685                           indf1	equ	0xFE7
 40686                           postdec1	equ	0xFE5
 40687                           plusw1	equ	0xFE3
 40688                           fsr1h	equ	0xFE2
 40689                           fsr1l	equ	0xFE1
 40690                           indf2	equ	0xFDF
 40691                           postinc2	equ	0xFDE
 40692                           postdec2	equ	0xFDD
 40693                           plusw2	equ	0xFDB
 40694                           fsr2h	equ	0xFDA
 40695                           fsr2l	equ	0xFD9
 40696                           status	equ	0xFD8
 40697                           
 40698 ;; *************** function __get_time *****************
 40699 ;; Defined at:
 40700 ;;		line 376 in file "fat16.c"
 40701 ;; Parameters:    Size  Location     Type
 40702 ;;		None
 40703 ;; Auto vars:     Size  Location     Type
 40704 ;;		None
 40705 ;; Return value:  Size  Location     Type
 40706 ;;                  2    0[COMRAM] unsigned int 
 40707 ;; Registers used:
 40708 ;;		wreg, status,2
 40709 ;; Tracked objects:
 40710 ;;		On entry : 0/0
 40711 ;;		On exit  : 0/0
 40712 ;;		Unchanged: 0/0
 40713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40718 ;;Total ram usage:        2 bytes
 40719 ;; Hardware stack levels used:    1
 40720 ;; This function calls:
 40721 ;;		Nothing
 40722 ;; This function is called by:
 40723 ;;		_fat_create_file
 40724 ;; This function uses a non-reentrant model
 40725 ;;
 40726                           
 40727                           	psect	text199
 40728  00A0E4                     __ptext199:
 40729                           	opt stack 0
 40730  00A0E4                     __get_time:
 40731                           	opt stack 26
 40732                           
 40733                           ;fat16.c: 388: return 0x0000;
 40734                           
 40735                           ;incstack = 0
 40736  00A0E4  0E00               	movlw	0
 40737  00A0E6  6E02               	movwf	?__get_time+1,c
 40738  00A0E8  0E00               	movlw	0
 40739  00A0EA  6E01               	movwf	?__get_time,c
 40740  00A0EC  0012               	return	
 40741  00A0EE                     __end_of__get_time:
 40742                           	opt stack 0
 40743                           tosu	equ	0xFFF
 40744                           tosh	equ	0xFFE
 40745                           tosl	equ	0xFFD
 40746                           pclath	equ	0xFFA
 40747                           tblptru	equ	0xFF8
 40748                           tblptrh	equ	0xFF7
 40749                           tblptrl	equ	0xFF6
 40750                           tablat	equ	0xFF5
 40751                           prodh	equ	0xFF4
 40752                           prodl	equ	0xFF3
 40753                           intcon	equ	0xFF2
 40754                           intcon2	equ	0xFF1
 40755                           intcon3	equ	0xFF0
 40756                           indf0	equ	0xFEF
 40757                           postinc0	equ	0xFEE
 40758                           fsr0h	equ	0xFEA
 40759                           fsr0l	equ	0xFE9
 40760                           wreg	equ	0xFE8
 40761                           indf1	equ	0xFE7
 40762                           postdec1	equ	0xFE5
 40763                           plusw1	equ	0xFE3
 40764                           fsr1h	equ	0xFE2
 40765                           fsr1l	equ	0xFE1
 40766                           indf2	equ	0xFDF
 40767                           postinc2	equ	0xFDE
 40768                           postdec2	equ	0xFDD
 40769                           plusw2	equ	0xFDB
 40770                           fsr2h	equ	0xFDA
 40771                           fsr2l	equ	0xFD9
 40772                           status	equ	0xFD8
 40773                           
 40774 ;; *************** function __get_date *****************
 40775 ;; Defined at:
 40776 ;;		line 392 in file "fat16.c"
 40777 ;; Parameters:    Size  Location     Type
 40778 ;;		None
 40779 ;; Auto vars:     Size  Location     Type
 40780 ;;		None
 40781 ;; Return value:  Size  Location     Type
 40782 ;;                  2    0[COMRAM] unsigned int 
 40783 ;; Registers used:
 40784 ;;		wreg, status,2
 40785 ;; Tracked objects:
 40786 ;;		On entry : 0/0
 40787 ;;		On exit  : 0/0
 40788 ;;		Unchanged: 0/0
 40789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40794 ;;Total ram usage:        2 bytes
 40795 ;; Hardware stack levels used:    1
 40796 ;; This function calls:
 40797 ;;		Nothing
 40798 ;; This function is called by:
 40799 ;;		_fat_create_file
 40800 ;; This function uses a non-reentrant model
 40801 ;;
 40802                           
 40803                           	psect	text200
 40804  00A0EE                     __ptext200:
 40805                           	opt stack 0
 40806  00A0EE                     __get_date:
 40807                           	opt stack 26
 40808                           
 40809                           ;fat16.c: 404: return 0x0000;
 40810                           
 40811                           ;incstack = 0
 40812  00A0EE  0E00               	movlw	0
 40813  00A0F0  6E02               	movwf	?__get_date+1,c
 40814  00A0F2  0E00               	movlw	0
 40815  00A0F4  6E01               	movwf	?__get_date,c
 40816  00A0F6  0012               	return	
 40817  00A0F8                     __end_of__get_date:
 40818                           	opt stack 0
 40819                           tosu	equ	0xFFF
 40820                           tosh	equ	0xFFE
 40821                           tosl	equ	0xFFD
 40822                           pclath	equ	0xFFA
 40823                           tblptru	equ	0xFF8
 40824                           tblptrh	equ	0xFF7
 40825                           tblptrl	equ	0xFF6
 40826                           tablat	equ	0xFF5
 40827                           prodh	equ	0xFF4
 40828                           prodl	equ	0xFF3
 40829                           intcon	equ	0xFF2
 40830                           intcon2	equ	0xFF1
 40831                           intcon3	equ	0xFF0
 40832                           indf0	equ	0xFEF
 40833                           postinc0	equ	0xFEE
 40834                           fsr0h	equ	0xFEA
 40835                           fsr0l	equ	0xFE9
 40836                           wreg	equ	0xFE8
 40837                           indf1	equ	0xFE7
 40838                           postdec1	equ	0xFE5
 40839                           plusw1	equ	0xFE3
 40840                           fsr1h	equ	0xFE2
 40841                           fsr1l	equ	0xFE1
 40842                           indf2	equ	0xFDF
 40843                           postinc2	equ	0xFDE
 40844                           postdec2	equ	0xFDD
 40845                           plusw2	equ	0xFDB
 40846                           fsr2h	equ	0xFDA
 40847                           fsr2l	equ	0xFD9
 40848                           status	equ	0xFD8
 40849                           
 40850 ;; *************** function __get_available_root_entry *****************
 40851 ;; Defined at:
 40852 ;;		line 442 in file "fat16.c"
 40853 ;; Parameters:    Size  Location     Type
 40854 ;;		None
 40855 ;; Auto vars:     Size  Location     Type
 40856 ;;  file_number     1   53[COMRAM] unsigned char 
 40857 ;; Return value:  Size  Location     Type
 40858 ;;                  1    wreg      unsigned char 
 40859 ;; Registers used:
 40860 ;;		wreg, status,2, status,0, cstack
 40861 ;; Tracked objects:
 40862 ;;		On entry : 0/0
 40863 ;;		On exit  : 0/0
 40864 ;;		Unchanged: 0/0
 40865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40870 ;;Total ram usage:        1 bytes
 40871 ;; Hardware stack levels used:    1
 40872 ;; Hardware stack levels required when called:    6
 40873 ;; This function calls:
 40874 ;;		__root_is_available
 40875 ;; This function is called by:
 40876 ;;		_fat_create_file
 40877 ;; This function uses a non-reentrant model
 40878 ;;
 40879                           
 40880                           	psect	text201
 40881  009D84                     __ptext201:
 40882                           	opt stack 0
 40883  009D84                     __get_available_root_entry:
 40884                           	opt stack 20
 40885                           
 40886                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 40887                           
 40888                           ;incstack = 0
 40889  009D84  0E00               	movlw	0
 40890  009D86  6E36               	movwf	__get_available_root_entry@file_number,c
 40891  009D88                     l12019:
 40892  009D88  0E3F               	movlw	63
 40893  009D8A  6436               	cpfsgt	__get_available_root_entry@file_number,c
 40894  009D8C  D001               	goto	l2061
 40895  009D8E  D00A               	goto	u9160
 40896  009D90                     l2061:
 40897                           
 40898                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 40899  009D90  5036               	movf	__get_available_root_entry@file_number,w,c
 40900  009D92  EC76  F046         	call	__root_is_available
 40901  009D96  0900               	iorlw	0
 40902  009D98  B4D8               	btfsc	status,2,c
 40903  009D9A  D002               	goto	l2063
 40904                           
 40905                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 40906  009D9C  5036               	movf	__get_available_root_entry@file_number,w,c
 40907  009D9E  0012               	return	
 40908  009DA0                     l2063:
 40909  009DA0  2A36               	incf	__get_available_root_entry@file_number,f,c
 40910  009DA2  D7F2               	goto	l12019
 40911  009DA4                     u9160:
 40912                           
 40913                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 40914  009DA4  0EFF               	movlw	255
 40915  009DA6  0012               	return	
 40916  009DA8                     __end_of__get_available_root_entry:
 40917                           	opt stack 0
 40918                           tosu	equ	0xFFF
 40919                           tosh	equ	0xFFE
 40920                           tosl	equ	0xFFD
 40921                           pclath	equ	0xFFA
 40922                           tblptru	equ	0xFF8
 40923                           tblptrh	equ	0xFF7
 40924                           tblptrl	equ	0xFF6
 40925                           tablat	equ	0xFF5
 40926                           prodh	equ	0xFF4
 40927                           prodl	equ	0xFF3
 40928                           intcon	equ	0xFF2
 40929                           intcon2	equ	0xFF1
 40930                           intcon3	equ	0xFF0
 40931                           indf0	equ	0xFEF
 40932                           postinc0	equ	0xFEE
 40933                           fsr0h	equ	0xFEA
 40934                           fsr0l	equ	0xFE9
 40935                           wreg	equ	0xFE8
 40936                           indf1	equ	0xFE7
 40937                           postdec1	equ	0xFE5
 40938                           plusw1	equ	0xFE3
 40939                           fsr1h	equ	0xFE2
 40940                           fsr1l	equ	0xFE1
 40941                           indf2	equ	0xFDF
 40942                           postinc2	equ	0xFDE
 40943                           postdec2	equ	0xFDD
 40944                           plusw2	equ	0xFDB
 40945                           fsr2h	equ	0xFDA
 40946                           fsr2l	equ	0xFD9
 40947                           status	equ	0xFD8
 40948                           
 40949 ;; *************** function _fat_copy_sector_to_buffer *****************
 40950 ;; Defined at:
 40951 ;;		line 1420 in file "fat16.c"
 40952 ;; Parameters:    Size  Location     Type
 40953 ;;  file_number     1    wreg     unsigned char 
 40954 ;;  sector          2   66[COMRAM] unsigned int 
 40955 ;; Auto vars:     Size  Location     Type
 40956 ;;  file_number     1   82[COMRAM] unsigned char 
 40957 ;;  file_size       4   72[COMRAM] unsigned long 
 40958 ;;  cluster         2   80[COMRAM] unsigned int 
 40959 ;;  physical_sec    2   78[COMRAM] unsigned int 
 40960 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 40961 ;; Return value:  Size  Location     Type
 40962 ;;                  1    wreg      unsigned char 
 40963 ;; Registers used:
 40964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40965 ;; Tracked objects:
 40966 ;;		On entry : 0/0
 40967 ;;		On exit  : 0/0
 40968 ;;		Unchanged: 0/0
 40969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40971 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40973 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40974 ;;Total ram usage:       17 bytes
 40975 ;; Hardware stack levels used:    1
 40976 ;; Hardware stack levels required when called:    7
 40977 ;; This function calls:
 40978 ;;		__data_sector_from_cluster
 40979 ;;		__find_nth_cluster
 40980 ;;		__get_first_cluster
 40981 ;;		__root_is_available
 40982 ;;		_fat_get_file_size
 40983 ;;		_flash_copy_page_to_buffer
 40984 ;; This function is called by:
 40985 ;;		_fat_copy_file
 40986 ;;		__parse_sector_to_buffer
 40987 ;; This function uses a non-reentrant model
 40988 ;;
 40989                           
 40990                           	psect	text202
 40991  00762C                     __ptext202:
 40992                           	opt stack 0
 40993  00762C                     _fat_copy_sector_to_buffer:
 40994                           	opt stack 20
 40995                           
 40996                           ;incstack = 0
 40997                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 40998  00762C  6E53               	movwf	fat_copy_sector_to_buffer@file_number,c
 40999                           
 41000                           ;fat16.c: 1422: uint32_t file_size;;fat16.c: 1423: uint16_t number_of_clusters;;fat16.c:
      +                           1424: uint16_t cluster;;fat16.c: 1425: uint16_t physical_sector;;fat16.c: 1428: if(_roo
      +                          t_is_available(file_number))
 41001  00762E  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 41002  007630  EC76  F046         	call	__root_is_available
 41003  007634  0900               	iorlw	0
 41004  007636  B4D8               	btfsc	status,2,c
 41005  007638  D002               	goto	l2332
 41006                           
 41007                           ;fat16.c: 1429: {;fat16.c: 1431: return 0xFF;
 41008  00763A  0EFF               	movlw	255
 41009  00763C  0012               	return	
 41010  00763E                     l2332:
 41011                           
 41012                           ;fat16.c: 1432: };fat16.c: 1435: file_size = fat_get_file_size(file_number);
 41013  00763E  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 41014  007640  ECA5  F044         	call	_fat_get_file_size
 41015  007644  C036  F049         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 41016  007648  C037  F04A         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 41017  00764C  C038  F04B         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 41018  007650  C039  F04C         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 41019                           
 41020                           ;fat16.c: 1438: number_of_clusters = (uint16_t) ((file_size + 512 - 1) >> 9);
 41021  007654  0EFF               	movlw	255
 41022  007656  2449               	addwf	fat_copy_sector_to_buffer@file_size,w,c
 41023  007658  6E45               	movwf	??_fat_copy_sector_to_buffer& (0+255),c
 41024  00765A  0E01               	movlw	1
 41025  00765C  204A               	addwfc	fat_copy_sector_to_buffer@file_size+1,w,c
 41026  00765E  6E46               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),c
 41027  007660  0E00               	movlw	0
 41028  007662  204B               	addwfc	fat_copy_sector_to_buffer@file_size+2,w,c
 41029  007664  6E47               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),c
 41030  007666  0E00               	movlw	0
 41031  007668  204C               	addwfc	fat_copy_sector_to_buffer@file_size+3,w,c
 41032  00766A  6E48               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),c
 41033  00766C  0E0A               	movlw	10
 41034  00766E  D005               	goto	u10360
 41035  007670                     u10365:
 41036  007670  90D8               	bcf	status,0,c
 41037  007672  3248               	rrcf	??_fat_copy_sector_to_buffer+3,f,c
 41038  007674  3247               	rrcf	??_fat_copy_sector_to_buffer+2,f,c
 41039  007676  3246               	rrcf	??_fat_copy_sector_to_buffer+1,f,c
 41040  007678  3245               	rrcf	??_fat_copy_sector_to_buffer,f,c
 41041  00767A                     u10360:
 41042  00767A  2EE8               	decfsz	wreg,f,c
 41043  00767C  D7F9               	goto	u10365
 41044  00767E  C045  F04D         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 41045  007682  C046  F04E         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 41046                           
 41047                           ;fat16.c: 1439: if(sector >= number_of_clusters)
 41048  007686  504D               	movf	fat_copy_sector_to_buffer@number_of_clusters,w,c
 41049  007688  5C43               	subwf	fat_copy_sector_to_buffer@sector,w,c
 41050  00768A  504E               	movf	fat_copy_sector_to_buffer@number_of_clusters+1,w,c
 41051  00768C  5844               	subwfb	fat_copy_sector_to_buffer@sector+1,w,c
 41052  00768E  A0D8               	btfss	status,0,c
 41053  007690  D002               	goto	l2334
 41054                           
 41055                           ;fat16.c: 1440: {;fat16.c: 1442: return 0xFE;
 41056  007692  0EFE               	movlw	254
 41057  007694  0012               	return	
 41058  007696                     l2334:
 41059                           
 41060                           ;fat16.c: 1443: };fat16.c: 1446: cluster = _get_first_cluster(file_number);
 41061  007696  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 41062  007698  EC68  F049         	call	__get_first_cluster
 41063  00769C  C030  F051         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 41064  0076A0  C031  F052         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 41065                           
 41066                           ;fat16.c: 1447: cluster = _find_nth_cluster(cluster, sector);
 41067  0076A4  C051  F038         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 41068  0076A8  C052  F039         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 41069  0076AC  C043  F03A         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 41070  0076B0  C044  F03B         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 41071  0076B4  ECFC  F03F         	call	__find_nth_cluster	;wreg free
 41072  0076B8  C038  F051         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 41073  0076BC  C039  F052         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 41074                           
 41075                           ;fat16.c: 1450: physical_sector = _data_sector_from_cluster(cluster);
 41076  0076C0  C051  F001         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 41077  0076C4  C052  F002         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 41078  0076C8  EC29  F050         	call	__data_sector_from_cluster	;wreg free
 41079  0076CC  C001  F04F         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@physical_sector
 41080  0076D0  C002  F050         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@physical_sector+1
 41081                           
 41082                           ;fat16.c: 1453: flash_copy_page_to_buffer(physical_sector);
 41083  0076D4  C04F  F01E         	movff	fat_copy_sector_to_buffer@physical_sector,flash_copy_page_to_buffer@page
 41084  0076D8  C050  F01F         	movff	fat_copy_sector_to_buffer@physical_sector+1,flash_copy_page_to_buffer@page+1
 41085  0076DC  EC45  F04F         	call	_flash_copy_page_to_buffer	;wreg free
 41086                           
 41087                           ;fat16.c: 1456: return 0x00;
 41088  0076E0  0E00               	movlw	0
 41089  0076E2  0012               	return	
 41090  0076E4                     __end_of_fat_copy_sector_to_buffer:
 41091                           	opt stack 0
 41092                           tosu	equ	0xFFF
 41093                           tosh	equ	0xFFE
 41094                           tosl	equ	0xFFD
 41095                           pclath	equ	0xFFA
 41096                           tblptru	equ	0xFF8
 41097                           tblptrh	equ	0xFF7
 41098                           tblptrl	equ	0xFF6
 41099                           tablat	equ	0xFF5
 41100                           prodh	equ	0xFF4
 41101                           prodl	equ	0xFF3
 41102                           intcon	equ	0xFF2
 41103                           intcon2	equ	0xFF1
 41104                           intcon3	equ	0xFF0
 41105                           indf0	equ	0xFEF
 41106                           postinc0	equ	0xFEE
 41107                           fsr0h	equ	0xFEA
 41108                           fsr0l	equ	0xFE9
 41109                           wreg	equ	0xFE8
 41110                           indf1	equ	0xFE7
 41111                           postdec1	equ	0xFE5
 41112                           plusw1	equ	0xFE3
 41113                           fsr1h	equ	0xFE2
 41114                           fsr1l	equ	0xFE1
 41115                           indf2	equ	0xFDF
 41116                           postinc2	equ	0xFDE
 41117                           postdec2	equ	0xFDD
 41118                           plusw2	equ	0xFDB
 41119                           fsr2h	equ	0xFDA
 41120                           fsr2l	equ	0xFD9
 41121                           status	equ	0xFD8
 41122                           
 41123 ;; *************** function _flash_copy_page_to_buffer *****************
 41124 ;; Defined at:
 41125 ;;		line 524 in file "flash.c"
 41126 ;; Parameters:    Size  Location     Type
 41127 ;;  page            2   29[COMRAM] unsigned int 
 41128 ;; Auto vars:     Size  Location     Type
 41129 ;;		None
 41130 ;; Return value:  Size  Location     Type
 41131 ;;                  1    wreg      void 
 41132 ;; Registers used:
 41133 ;;		wreg, status,2, status,0, cstack
 41134 ;; Tracked objects:
 41135 ;;		On entry : 0/0
 41136 ;;		On exit  : 0/0
 41137 ;;		Unchanged: 0/0
 41138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41143 ;;Total ram usage:        2 bytes
 41144 ;; Hardware stack levels used:    1
 41145 ;; Hardware stack levels required when called:    4
 41146 ;; This function calls:
 41147 ;;		__flash_copy_page_to_buffer
 41148 ;;		_spi_set_configuration
 41149 ;; This function is called by:
 41150 ;;		_fat_copy_sector_to_buffer
 41151 ;; This function uses a non-reentrant model
 41152 ;;
 41153                           
 41154                           	psect	text203
 41155  009E8A                     __ptext203:
 41156                           	opt stack 0
 41157  009E8A                     _flash_copy_page_to_buffer:
 41158                           	opt stack 22
 41159                           
 41160                           ;flash.c: 527: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 41161                           
 41162                           ;incstack = 0
 41163  009E8A  0E00               	movlw	0
 41164  009E8C  EC06  F02A         	call	_spi_set_configuration
 41165                           
 41166                           ;flash.c: 529: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 41167  009E90  C01E  F014         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 41168  009E94  C01F  F015         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 41169  009E98  0E01               	movlw	1
 41170  009E9A  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 41171  009E9C  ECB9  F047         	call	__flash_copy_page_to_buffer	;wreg free
 41172                           
 41173                           ;flash.c: 532: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 41174  009EA0  0E01               	movlw	1
 41175  009EA2  EC06  F02A         	call	_spi_set_configuration
 41176  009EA6  0012               	return		;funcret
 41177  009EA8                     __end_of_flash_copy_page_to_buffer:
 41178                           	opt stack 0
 41179                           tosu	equ	0xFFF
 41180                           tosh	equ	0xFFE
 41181                           tosl	equ	0xFFD
 41182                           pclath	equ	0xFFA
 41183                           tblptru	equ	0xFF8
 41184                           tblptrh	equ	0xFF7
 41185                           tblptrl	equ	0xFF6
 41186                           tablat	equ	0xFF5
 41187                           prodh	equ	0xFF4
 41188                           prodl	equ	0xFF3
 41189                           intcon	equ	0xFF2
 41190                           intcon2	equ	0xFF1
 41191                           intcon3	equ	0xFF0
 41192                           indf0	equ	0xFEF
 41193                           postinc0	equ	0xFEE
 41194                           fsr0h	equ	0xFEA
 41195                           fsr0l	equ	0xFE9
 41196                           wreg	equ	0xFE8
 41197                           indf1	equ	0xFE7
 41198                           postdec1	equ	0xFE5
 41199                           plusw1	equ	0xFE3
 41200                           fsr1h	equ	0xFE2
 41201                           fsr1l	equ	0xFE1
 41202                           indf2	equ	0xFDF
 41203                           postinc2	equ	0xFDE
 41204                           postdec2	equ	0xFDD
 41205                           plusw2	equ	0xFDB
 41206                           fsr2h	equ	0xFDA
 41207                           fsr2l	equ	0xFD9
 41208                           status	equ	0xFD8
 41209                           
 41210 ;; *************** function __parse_file_append *****************
 41211 ;; Defined at:
 41212 ;;		line 761 in file "api.c"
 41213 ;; Parameters:    Size  Location     Type
 41214 ;;  data            2   89[COMRAM] PTR unsigned char 
 41215 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 41216 ;;  out_buffer      2   91[COMRAM] PTR unsigned char 
 41217 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 41218 ;;  out_idx_ptr     2   93[COMRAM] PTR unsigned char 
 41219 ;;		 -> api_parse@out_idx(1), 
 41220 ;; Auto vars:     Size  Location     Type
 41221 ;;  number_of_by    2   59[BANK0 ] unsigned int 
 41222 ;;  file_number     1   58[BANK0 ] unsigned char 
 41223 ;;  return_value    1   57[BANK0 ] unsigned char 
 41224 ;; Return value:  Size  Location     Type
 41225 ;;                  1    wreg      unsigned char 
 41226 ;; Registers used:
 41227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41228 ;; Tracked objects:
 41229 ;;		On entry : 0/0
 41230 ;;		On exit  : 0/0
 41231 ;;		Unchanged: 0/0
 41232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41234 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41236 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41237 ;;Total ram usage:       11 bytes
 41238 ;; Hardware stack levels used:    1
 41239 ;; Hardware stack levels required when called:    9
 41240 ;; This function calls:
 41241 ;;		_fat_append_to_file
 41242 ;; This function is called by:
 41243 ;;		__parse_command_long
 41244 ;; This function uses a non-reentrant model
 41245 ;;
 41246                           
 41247                           	psect	text204
 41248  00424E                     __ptext204:
 41249                           	opt stack 0
 41250  00424E                     __parse_file_append:
 41251                           	opt stack 19
 41252                           
 41253                           ;api.c: 765: uint8_t file_number;;api.c: 766: uint8_t return_value;;api.c: 767: uint16_t
      +                           number_of_bytes;;api.c: 769: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (d
      +                          ata[4]!=0x4B))
 41254                           
 41255                           ;incstack = 0
 41256  00424E  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 41257  004252  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 41258  004256  0E54               	movlw	84
 41259  004258  18DE               	xorwf	postinc2,w,c
 41260  00425A  A4D8               	btfss	status,2,c
 41261  00425C  D014               	goto	u12010
 41262  00425E  EE20 F003          	lfsr	2,3
 41263  004262  505A               	movf	__parse_file_append@data,w,c
 41264  004264  26D9               	addwf	fsr2l,f,c
 41265  004266  505B               	movf	__parse_file_append@data+1,w,c
 41266  004268  22DA               	addwfc	fsr2h,f,c
 41267  00426A  0EFE               	movlw	254
 41268  00426C  18DE               	xorwf	postinc2,w,c
 41269  00426E  A4D8               	btfss	status,2,c
 41270  004270  D00A               	goto	u12010
 41271  004272  EE20 F004          	lfsr	2,4
 41272  004276  505A               	movf	__parse_file_append@data,w,c
 41273  004278  26D9               	addwf	fsr2l,f,c
 41274  00427A  505B               	movf	__parse_file_append@data+1,w,c
 41275  00427C  22DA               	addwfc	fsr2h,f,c
 41276  00427E  0E4B               	movlw	75
 41277  004280  18DE               	xorwf	postinc2,w,c
 41278  004282  B4D8               	btfsc	status,2,c
 41279  004284  D002               	goto	l2906
 41280  004286                     u12010:
 41281                           
 41282                           ;api.c: 770: {;api.c: 772: return 65;
 41283  004286  0E41               	movlw	65
 41284  004288  0012               	return	
 41285  00428A                     l2906:
 41286                           
 41287                           ;api.c: 773: };api.c: 776: file_number = data[1];
 41288  00428A  EE20 F001          	lfsr	2,1
 41289  00428E  505A               	movf	__parse_file_append@data,w,c
 41290  004290  26D9               	addwf	fsr2l,f,c
 41291  004292  505B               	movf	__parse_file_append@data+1,w,c
 41292  004294  22DA               	addwfc	fsr2h,f,c
 41293  004296  50DF               	movf	indf2,w,c
 41294  004298  0100               	movlb	0	; () banked
 41295  00429A  6F9A               	movwf	__parse_file_append@file_number& (0+255),b
 41296                           
 41297                           ;api.c: 779: number_of_bytes = (uint16_t) data[2];
 41298  00429C  EE20 F002          	lfsr	2,2
 41299  0042A0  505A               	movf	__parse_file_append@data,w,c
 41300  0042A2  26D9               	addwf	fsr2l,f,c
 41301  0042A4  505B               	movf	__parse_file_append@data+1,w,c
 41302  0042A6  22DA               	addwfc	fsr2h,f,c
 41303  0042A8  50DF               	movf	indf2,w,c
 41304  0042AA  6F98               	movwf	??__parse_file_append& (0+255),b
 41305  0042AC  5198               	movf	??__parse_file_append& (0+255),w,b
 41306  0042AE  6F9B               	movwf	__parse_file_append@number_of_bytes& (0+255),b
 41307  0042B0  6B9C               	clrf	(__parse_file_append@number_of_bytes+1)& (0+255),b
 41308                           
 41309                           ; BSR set to: 0
 41310                           ;api.c: 782: return_value = fat_append_to_file(file_number, number_of_bytes, &data[5]);
 41311  0042B2  C09B  F056         	movff	__parse_file_append@number_of_bytes,fat_append_to_file@number_of_bytes
 41312  0042B6  C09C  F057         	movff	__parse_file_append@number_of_bytes+1,fat_append_to_file@number_of_bytes+1
 41313  0042BA  0E05               	movlw	5
 41314  0042BC  245A               	addwf	__parse_file_append@data,w,c
 41315  0042BE  6E58               	movwf	fat_append_to_file@data,c
 41316  0042C0  0E00               	movlw	0
 41317  0042C2  205B               	addwfc	__parse_file_append@data+1,w,c
 41318  0042C4  6E59               	movwf	fat_append_to_file@data+1,c
 41319  0042C6  519A               	movf	__parse_file_append@file_number& (0+255),w,b
 41320  0042C8  ECBE  F03E         	call	_fat_append_to_file
 41321  0042CC  0100               	movlb	0	; () banked
 41322  0042CE  6F99               	movwf	__parse_file_append@return_value& (0+255),b
 41323                           
 41324                           ; BSR set to: 0
 41325                           ;api.c: 785: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 41326  0042D0  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41327  0042D4  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41328  0042D8  50DF               	movf	indf2,w,c
 41329  0042DA  B4D8               	btfsc	status,2,c
 41330  0042DC  D061               	goto	l2910
 41331                           
 41332                           ; BSR set to: 0
 41333  0042DE  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41334  0042E2  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41335  0042E6  0E3C               	movlw	60
 41336  0042E8  60DF               	cpfslt	indf2,c
 41337  0042EA  D05A               	goto	l2910
 41338                           
 41339                           ; BSR set to: 0
 41340                           ;api.c: 786: {;api.c: 787: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_APPEND;
 41341  0042EC  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41342  0042F0  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41343  0042F4  CFDF F098          	movff	indf2,??__parse_file_append
 41344  0042F8  0E01               	movlw	1
 41345  0042FA  26DF               	addwf	indf2,f,c
 41346  0042FC  5198               	movf	??__parse_file_append& (0+255),w,b
 41347  0042FE  0D01               	mullw	1
 41348  004300  50F3               	movf	prodl,w,c
 41349  004302  245C               	addwf	__parse_file_append@out_buffer,w,c
 41350  004304  6ED9               	movwf	fsr2l,c
 41351  004306  50F4               	movf	prodh,w,c
 41352  004308  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41353  00430A  6EDA               	movwf	fsr2h,c
 41354  00430C  0E54               	movlw	84
 41355  00430E  6EDF               	movwf	indf2,c
 41356                           
 41357                           ;api.c: 788: out_buffer[(*out_idx_ptr)++] = file_number;
 41358  004310  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41359  004314  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41360  004318  CFDF F098          	movff	indf2,??__parse_file_append
 41361  00431C  0E01               	movlw	1
 41362  00431E  26DF               	addwf	indf2,f,c
 41363  004320  5198               	movf	??__parse_file_append& (0+255),w,b
 41364  004322  0D01               	mullw	1
 41365  004324  50F3               	movf	prodl,w,c
 41366  004326  245C               	addwf	__parse_file_append@out_buffer,w,c
 41367  004328  6ED9               	movwf	fsr2l,c
 41368  00432A  50F4               	movf	prodh,w,c
 41369  00432C  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41370  00432E  6EDA               	movwf	fsr2h,c
 41371  004330  C09A  FFDF         	movff	__parse_file_append@file_number,indf2
 41372                           
 41373                           ;api.c: 789: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 41374  004334  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41375  004338  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41376  00433C  CFDF F098          	movff	indf2,??__parse_file_append
 41377  004340  0E01               	movlw	1
 41378  004342  26DF               	addwf	indf2,f,c
 41379  004344  5198               	movf	??__parse_file_append& (0+255),w,b
 41380  004346  0D01               	mullw	1
 41381  004348  50F3               	movf	prodl,w,c
 41382  00434A  245C               	addwf	__parse_file_append@out_buffer,w,c
 41383  00434C  6ED9               	movwf	fsr2l,c
 41384  00434E  50F4               	movf	prodh,w,c
 41385  004350  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41386  004352  6EDA               	movwf	fsr2h,c
 41387  004354  519C               	movf	(__parse_file_append@number_of_bytes+1)& (0+255),w,b
 41388  004356  6EDF               	movwf	indf2,c
 41389                           
 41390                           ;api.c: 790: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 41391  004358  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41392  00435C  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41393  004360  CFDF F098          	movff	indf2,??__parse_file_append
 41394  004364  0E01               	movlw	1
 41395  004366  26DF               	addwf	indf2,f,c
 41396  004368  5198               	movf	??__parse_file_append& (0+255),w,b
 41397  00436A  0D01               	mullw	1
 41398  00436C  50F3               	movf	prodl,w,c
 41399  00436E  245C               	addwf	__parse_file_append@out_buffer,w,c
 41400  004370  6ED9               	movwf	fsr2l,c
 41401  004372  50F4               	movf	prodh,w,c
 41402  004374  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41403  004376  6EDA               	movwf	fsr2h,c
 41404  004378  C09B  FFDF         	movff	__parse_file_append@number_of_bytes,indf2
 41405                           
 41406                           ;api.c: 791: out_buffer[(*out_idx_ptr)++] = return_value;
 41407  00437C  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41408  004380  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41409  004384  CFDF F098          	movff	indf2,??__parse_file_append
 41410  004388  0E01               	movlw	1
 41411  00438A  26DF               	addwf	indf2,f,c
 41412  00438C  5198               	movf	??__parse_file_append& (0+255),w,b
 41413  00438E  0D01               	mullw	1
 41414  004390  50F3               	movf	prodl,w,c
 41415  004392  245C               	addwf	__parse_file_append@out_buffer,w,c
 41416  004394  6ED9               	movwf	fsr2l,c
 41417  004396  50F4               	movf	prodh,w,c
 41418  004398  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41419  00439A  6EDA               	movwf	fsr2h,c
 41420  00439C  C099  FFDF         	movff	__parse_file_append@return_value,indf2
 41421  0043A0                     l2910:
 41422                           
 41423                           ; BSR set to: 0
 41424                           ;api.c: 792: };api.c: 794: return data[2] + 5;
 41425                           
 41426                           ; BSR set to: 0
 41427  0043A0  EE20 F002          	lfsr	2,2
 41428  0043A4  505A               	movf	__parse_file_append@data,w,c
 41429  0043A6  26D9               	addwf	fsr2l,f,c
 41430  0043A8  505B               	movf	__parse_file_append@data+1,w,c
 41431  0043AA  22DA               	addwfc	fsr2h,f,c
 41432  0043AC  50DF               	movf	indf2,w,c
 41433  0043AE  0F05               	addlw	5
 41434  0043B0  0012               	return	
 41435  0043B2                     __end_of__parse_file_append:
 41436                           	opt stack 0
 41437                           tosu	equ	0xFFF
 41438                           tosh	equ	0xFFE
 41439                           tosl	equ	0xFFD
 41440                           pclath	equ	0xFFA
 41441                           tblptru	equ	0xFF8
 41442                           tblptrh	equ	0xFF7
 41443                           tblptrl	equ	0xFF6
 41444                           tablat	equ	0xFF5
 41445                           prodh	equ	0xFF4
 41446                           prodl	equ	0xFF3
 41447                           intcon	equ	0xFF2
 41448                           intcon2	equ	0xFF1
 41449                           intcon3	equ	0xFF0
 41450                           indf0	equ	0xFEF
 41451                           postinc0	equ	0xFEE
 41452                           fsr0h	equ	0xFEA
 41453                           fsr0l	equ	0xFE9
 41454                           wreg	equ	0xFE8
 41455                           indf1	equ	0xFE7
 41456                           postdec1	equ	0xFE5
 41457                           plusw1	equ	0xFE3
 41458                           fsr1h	equ	0xFE2
 41459                           fsr1l	equ	0xFE1
 41460                           indf2	equ	0xFDF
 41461                           postinc2	equ	0xFDE
 41462                           postdec2	equ	0xFDD
 41463                           plusw2	equ	0xFDB
 41464                           fsr2h	equ	0xFDA
 41465                           fsr2l	equ	0xFD9
 41466                           status	equ	0xFD8
 41467                           
 41468 ;; *************** function _fat_append_to_file *****************
 41469 ;; Defined at:
 41470 ;;		line 678 in file "fat16.c"
 41471 ;; Parameters:    Size  Location     Type
 41472 ;;  file_number     1    wreg     unsigned char 
 41473 ;;  number_of_by    2   85[COMRAM] unsigned int 
 41474 ;;  data            2   87[COMRAM] PTR unsigned char 
 41475 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 41476 ;; Auto vars:     Size  Location     Type
 41477 ;;  file_number     1   55[BANK0 ] unsigned char 
 41478 ;;  old_file_siz    4   50[BANK0 ] unsigned long 
 41479 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 41480 ;;  return_code     1   54[BANK0 ] unsigned char 
 41481 ;; Return value:  Size  Location     Type
 41482 ;;                  1    wreg      unsigned char 
 41483 ;; Registers used:
 41484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41485 ;; Tracked objects:
 41486 ;;		On entry : 0/0
 41487 ;;		On exit  : 0/0
 41488 ;;		Unchanged: 0/0
 41489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41491 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41493 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41494 ;;Total ram usage:       14 bytes
 41495 ;; Hardware stack levels used:    1
 41496 ;; Hardware stack levels required when called:    8
 41497 ;; This function calls:
 41498 ;;		__root_is_available
 41499 ;;		_fat_get_file_size
 41500 ;;		_fat_modify_file
 41501 ;;		_fat_resize_file
 41502 ;; This function is called by:
 41503 ;;		__parse_file_append
 41504 ;; This function uses a non-reentrant model
 41505 ;;
 41506                           
 41507                           	psect	text205
 41508  007D7C                     __ptext205:
 41509                           	opt stack 0
 41510  007D7C                     _fat_append_to_file:
 41511                           	opt stack 19
 41512                           
 41513                           ;incstack = 0
 41514                           ;fat_append_to_file@file_number stored from wreg
 41515  007D7C  0100               	movlb	0	; () banked
 41516  007D7E  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 41517                           
 41518                           ;fat16.c: 680: uint32_t old_file_size;;fat16.c: 681: uint32_t new_file_size;;fat16.c: 68
      +                          2: uint8_t return_code;;fat16.c: 685: if(file_number>=64)
 41519  007D80  0E3F               	movlw	63
 41520  007D82  0100               	movlb	0	; () banked
 41521  007D84  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 41522  007D86  D002               	goto	l2107
 41523                           
 41524                           ; BSR set to: 0
 41525                           ;fat16.c: 686: {;fat16.c: 688: return 0xFF;
 41526  007D88  0EFF               	movlw	255
 41527                           
 41528                           ; BSR set to: 0
 41529  007D8A  0012               	return	
 41530  007D8C                     l2107:
 41531                           
 41532                           ; BSR set to: 0
 41533                           ;fat16.c: 689: };fat16.c: 692: if(_root_is_available(file_number))
 41534                           
 41535                           ; BSR set to: 0
 41536  007D8C  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41537  007D8E  EC76  F046         	call	__root_is_available
 41538  007D92  0900               	iorlw	0
 41539  007D94  B4D8               	btfsc	status,2,c
 41540  007D96  D002               	goto	l2109
 41541                           
 41542                           ;fat16.c: 693: {;fat16.c: 695: return 0xFE;
 41543  007D98  0EFE               	movlw	254
 41544  007D9A  0012               	return	
 41545  007D9C                     l2109:
 41546                           
 41547                           ;fat16.c: 696: };fat16.c: 699: old_file_size = fat_get_file_size(file_number);
 41548  007D9C  0100               	movlb	0	; () banked
 41549  007D9E  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41550  007DA0  ECA5  F044         	call	_fat_get_file_size
 41551  007DA4  C036  F092         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 41552  007DA8  C037  F093         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 41553  007DAC  C038  F094         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 41554  007DB0  C039  F095         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 41555                           
 41556                           ;fat16.c: 702: new_file_size = old_file_size + number_of_bytes;
 41557  007DB4  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 41558  007DB6  0100               	movlb	0	; () banked
 41559  007DB8  2592               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 41560  007DBA  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 41561  007DBC  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 41562  007DBE  2193               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 41563  007DC0  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 41564  007DC2  0E00               	movlw	0
 41565  007DC4  2194               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 41566  007DC6  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 41567  007DC8  0E00               	movlw	0
 41568  007DCA  2195               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 41569  007DCC  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 41570                           
 41571                           ; BSR set to: 0
 41572                           ;fat16.c: 705: return_code = fat_resize_file(file_number, new_file_size);
 41573  007DCE  C08E  F04D         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 41574  007DD2  C08F  F04E         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 41575  007DD6  C090  F04F         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 41576  007DDA  C091  F050         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 41577  007DDE  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41578  007DE0  EC15  F02F         	call	_fat_resize_file
 41579  007DE4  0100               	movlb	0	; () banked
 41580  007DE6  6F96               	movwf	fat_append_to_file@return_code& (0+255),b
 41581                           
 41582                           ; BSR set to: 0
 41583                           ;fat16.c: 706: if(return_code!=0x00)
 41584  007DE8  5196               	movf	fat_append_to_file@return_code& (0+255),w,b
 41585  007DEA  B4D8               	btfsc	status,2,c
 41586  007DEC  D003               	goto	l2110
 41587                           
 41588                           ; BSR set to: 0
 41589                           ;fat16.c: 707: {;fat16.c: 709: return return_code - 0x0F;
 41590  007DEE  5196               	movf	fat_append_to_file@return_code& (0+255),w,b
 41591  007DF0  0FF1               	addlw	241
 41592                           
 41593                           ; BSR set to: 0
 41594  007DF2  0012               	return	
 41595  007DF4                     l2110:
 41596                           
 41597                           ; BSR set to: 0
 41598                           ;fat16.c: 710: };fat16.c: 713: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 41599                           
 41600                           ; BSR set to: 0
 41601  007DF4  C092  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 41602  007DF8  C093  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 41603  007DFC  C094  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 41604  007E00  C095  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 41605  007E04  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 41606  007E08  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 41607  007E0C  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 41608  007E10  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 41609  007E14  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41610  007E16  EC17  F012         	call	_fat_modify_file
 41611                           
 41612                           ;fat16.c: 716: return 0x00;
 41613  007E1A  0E00               	movlw	0
 41614  007E1C  0012               	return	
 41615  007E1E                     __end_of_fat_append_to_file:
 41616                           	opt stack 0
 41617                           tosu	equ	0xFFF
 41618                           tosh	equ	0xFFE
 41619                           tosl	equ	0xFFD
 41620                           pclath	equ	0xFFA
 41621                           tblptru	equ	0xFF8
 41622                           tblptrh	equ	0xFF7
 41623                           tblptrl	equ	0xFF6
 41624                           tablat	equ	0xFF5
 41625                           prodh	equ	0xFF4
 41626                           prodl	equ	0xFF3
 41627                           intcon	equ	0xFF2
 41628                           intcon2	equ	0xFF1
 41629                           intcon3	equ	0xFF0
 41630                           indf0	equ	0xFEF
 41631                           postinc0	equ	0xFEE
 41632                           fsr0h	equ	0xFEA
 41633                           fsr0l	equ	0xFE9
 41634                           wreg	equ	0xFE8
 41635                           indf1	equ	0xFE7
 41636                           postdec1	equ	0xFE5
 41637                           plusw1	equ	0xFE3
 41638                           fsr1h	equ	0xFE2
 41639                           fsr1l	equ	0xFE1
 41640                           indf2	equ	0xFDF
 41641                           postinc2	equ	0xFDE
 41642                           postdec2	equ	0xFDD
 41643                           plusw2	equ	0xFDB
 41644                           fsr2h	equ	0xFDA
 41645                           fsr2l	equ	0xFD9
 41646                           status	equ	0xFD8
 41647                           
 41648 ;; *************** function _fat_resize_file *****************
 41649 ;; Defined at:
 41650 ;;		line 910 in file "fat16.c"
 41651 ;; Parameters:    Size  Location     Type
 41652 ;;  file_number     1    wreg     unsigned char 
 41653 ;;  new_file_siz    4   76[COMRAM] unsigned long 
 41654 ;; Auto vars:     Size  Location     Type
 41655 ;;  file_number     1    6[BANK0 ] unsigned char 
 41656 ;;  root           32    7[BANK0 ] struct .
 41657 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 41658 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 41659 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 41660 ;; Return value:  Size  Location     Type
 41661 ;;                  1    wreg      unsigned char 
 41662 ;; Registers used:
 41663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41664 ;; Tracked objects:
 41665 ;;		On entry : 0/0
 41666 ;;		On exit  : 0/0
 41667 ;;		Unchanged: 0/0
 41668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41670 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41672 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41673 ;;Total ram usage:       47 bytes
 41674 ;; Hardware stack levels used:    1
 41675 ;; Hardware stack levels required when called:    7
 41676 ;; This function calls:
 41677 ;;		__make_cluster_chain
 41678 ;;		__root_is_available
 41679 ;;		__write_root
 41680 ;;		_fat_get_file_information
 41681 ;; This function is called by:
 41682 ;;		_fat_append_to_file
 41683 ;;		__parse_file_resize
 41684 ;; This function uses a non-reentrant model
 41685 ;;
 41686                           
 41687                           	psect	text206
 41688  005E2A                     __ptext206:
 41689                           	opt stack 0
 41690  005E2A                     _fat_resize_file:
 41691                           	opt stack 20
 41692                           
 41693                           ;incstack = 0
 41694                           ;fat_resize_file@file_number stored from wreg
 41695  005E2A  0100               	movlb	0	; () banked
 41696  005E2C  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 41697                           
 41698                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 41699  005E2E  0E3F               	movlw	63
 41700  005E30  0100               	movlb	0	; () banked
 41701  005E32  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 41702  005E34  D002               	goto	l2147
 41703                           
 41704                           ; BSR set to: 0
 41705                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 41706  005E36  0EFF               	movlw	255
 41707                           
 41708                           ; BSR set to: 0
 41709  005E38  0012               	return	
 41710  005E3A                     l2147:
 41711                           
 41712                           ; BSR set to: 0
 41713                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 41714                           
 41715                           ; BSR set to: 0
 41716  005E3A  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 41717  005E3C  EC76  F046         	call	__root_is_available
 41718  005E40  0900               	iorlw	0
 41719  005E42  B4D8               	btfsc	status,2,c
 41720  005E44  D002               	goto	l2149
 41721                           
 41722                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 41723  005E46  0EFE               	movlw	254
 41724  005E48  0012               	return	
 41725  005E4A                     l2149:
 41726                           
 41727                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 41728  005E4A  0E67               	movlw	low fat_resize_file@root
 41729  005E4C  6E30               	movwf	fat_get_file_information@data,c
 41730  005E4E  0E00               	movlw	high fat_resize_file@root
 41731  005E50  6E31               	movwf	fat_get_file_information@data+1,c
 41732  005E52  0100               	movlb	0	; () banked
 41733  005E54  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 41734  005E56  ECFC  F043         	call	_fat_get_file_information
 41735                           
 41736                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 41737  005E5A  EE20  F083         	lfsr	2,fat_resize_file@root+28
 41738  005E5E  0EFF               	movlw	255
 41739  005E60  24DE               	addwf	postinc2,w,c
 41740  005E62  6E51               	movwf	??_fat_resize_file& (0+255),c
 41741  005E64  0E01               	movlw	1
 41742  005E66  20DE               	addwfc	postinc2,w,c
 41743  005E68  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 41744  005E6A  0E00               	movlw	0
 41745  005E6C  20DE               	addwfc	postinc2,w,c
 41746  005E6E  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 41747  005E70  0E00               	movlw	0
 41748  005E72  20DE               	addwfc	postinc2,w,c
 41749  005E74  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 41750  005E76  0E0A               	movlw	10
 41751  005E78  D005               	goto	u10240
 41752  005E7A                     u10245:
 41753  005E7A  90D8               	bcf	status,0,c
 41754  005E7C  3254               	rrcf	??_fat_resize_file+3,f,c
 41755  005E7E  3253               	rrcf	??_fat_resize_file+2,f,c
 41756  005E80  3252               	rrcf	??_fat_resize_file+1,f,c
 41757  005E82  3251               	rrcf	??_fat_resize_file,f,c
 41758  005E84                     u10240:
 41759  005E84  2EE8               	decfsz	wreg,f,c
 41760  005E86  D7F9               	goto	u10245
 41761  005E88  C051  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 41762  005E8C  C052  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 41763                           
 41764                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 41765  005E90  0EFF               	movlw	255
 41766  005E92  244D               	addwf	fat_resize_file@new_file_size,w,c
 41767  005E94  6E51               	movwf	??_fat_resize_file& (0+255),c
 41768  005E96  0E01               	movlw	1
 41769  005E98  204E               	addwfc	fat_resize_file@new_file_size+1,w,c
 41770  005E9A  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 41771  005E9C  0E00               	movlw	0
 41772  005E9E  204F               	addwfc	fat_resize_file@new_file_size+2,w,c
 41773  005EA0  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 41774  005EA2  0E00               	movlw	0
 41775  005EA4  2050               	addwfc	fat_resize_file@new_file_size+3,w,c
 41776  005EA6  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 41777  005EA8  0E0A               	movlw	10
 41778  005EAA  D005               	goto	u10250
 41779  005EAC                     u10255:
 41780  005EAC  90D8               	bcf	status,0,c
 41781  005EAE  3254               	rrcf	??_fat_resize_file+3,f,c
 41782  005EB0  3253               	rrcf	??_fat_resize_file+2,f,c
 41783  005EB2  3252               	rrcf	??_fat_resize_file+1,f,c
 41784  005EB4  3251               	rrcf	??_fat_resize_file,f,c
 41785  005EB6                     u10250:
 41786  005EB6  2EE8               	decfsz	wreg,f,c
 41787  005EB8  D7F9               	goto	u10255
 41788  005EBA  C051  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 41789  005EBE  C052  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 41790                           
 41791                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 41792  005EC2  0100               	movlb	0	; () banked
 41793  005EC4  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 41794  005EC6  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 41795  005EC8  E104               	bnz	u10260
 41796  005ECA  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 41797  005ECC  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 41798  005ECE  B4D8               	btfsc	status,2,c
 41799  005ED0  D01A               	goto	l2150
 41800  005ED2                     u10260:
 41801                           
 41802                           ; BSR set to: 0
 41803                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 41804  005ED2  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 41805  005ED6  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 41806  005EDA  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 41807  005EDE  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 41808  005EE2  EC31  F009         	call	__make_cluster_chain	;wreg free
 41809  005EE6  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 41810  005EEA  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 41811                           
 41812                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 41813  005EEE  0100               	movlb	0	; () banked
 41814  005EF0  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 41815  005EF2  E105               	bnz	l2151
 41816  005EF4  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 41817  005EF6  A4D8               	btfss	status,2,c
 41818  005EF8  D002               	goto	l2151
 41819                           
 41820                           ; BSR set to: 0
 41821                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 41822  005EFA  0EFD               	movlw	253
 41823                           
 41824                           ; BSR set to: 0
 41825  005EFC  0012               	return	
 41826  005EFE                     l2151:
 41827                           
 41828                           ; BSR set to: 0
 41829                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 41830  005EFE  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 41831  005F02  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 41832  005F06                     l2150:
 41833                           
 41834                           ; BSR set to: 0
 41835                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 41836  005F06  C04D  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 41837  005F0A  C04E  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 41838  005F0E  C04F  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 41839  005F12  C050  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 41840                           
 41841                           ; BSR set to: 0
 41842                           ;fat16.c: 956: _write_root(file_number, &root);
 41843  005F16  0E67               	movlw	low fat_resize_file@root
 41844  005F18  6E29               	movwf	__write_root@data,c
 41845  005F1A  0E00               	movlw	high fat_resize_file@root
 41846  005F1C  6E2A               	movwf	__write_root@data+1,c
 41847  005F1E  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 41848  005F20  EC08  F04B         	call	__write_root
 41849                           
 41850                           ;fat16.c: 959: return 0x00;
 41851  005F24  0E00               	movlw	0
 41852  005F26  0012               	return	
 41853  005F28                     __end_of_fat_resize_file:
 41854                           	opt stack 0
 41855                           tosu	equ	0xFFF
 41856                           tosh	equ	0xFFE
 41857                           tosl	equ	0xFFD
 41858                           pclath	equ	0xFFA
 41859                           tblptru	equ	0xFF8
 41860                           tblptrh	equ	0xFF7
 41861                           tblptrl	equ	0xFF6
 41862                           tablat	equ	0xFF5
 41863                           prodh	equ	0xFF4
 41864                           prodl	equ	0xFF3
 41865                           intcon	equ	0xFF2
 41866                           intcon2	equ	0xFF1
 41867                           intcon3	equ	0xFF0
 41868                           indf0	equ	0xFEF
 41869                           postinc0	equ	0xFEE
 41870                           fsr0h	equ	0xFEA
 41871                           fsr0l	equ	0xFE9
 41872                           wreg	equ	0xFE8
 41873                           indf1	equ	0xFE7
 41874                           postdec1	equ	0xFE5
 41875                           plusw1	equ	0xFE3
 41876                           fsr1h	equ	0xFE2
 41877                           fsr1l	equ	0xFE1
 41878                           indf2	equ	0xFDF
 41879                           postinc2	equ	0xFDE
 41880                           postdec2	equ	0xFDD
 41881                           plusw2	equ	0xFDB
 41882                           fsr2h	equ	0xFDA
 41883                           fsr2l	equ	0xFD9
 41884                           status	equ	0xFD8
 41885                           
 41886 ;; *************** function __write_root *****************
 41887 ;; Defined at:
 41888 ;;		line 473 in file "fat16.c"
 41889 ;; Parameters:    Size  Location     Type
 41890 ;;  file_number     1    wreg     unsigned char 
 41891 ;;  data            2   40[COMRAM] PTR struct .
 41892 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 41893 ;; Auto vars:     Size  Location     Type
 41894 ;;  file_number     1   46[COMRAM] unsigned char 
 41895 ;;  offset          2   44[COMRAM] unsigned int 
 41896 ;;  sector          2   42[COMRAM] unsigned int 
 41897 ;; Return value:  Size  Location     Type
 41898 ;;                  1    wreg      void 
 41899 ;; Registers used:
 41900 ;;		wreg, status,2, status,0, cstack
 41901 ;; Tracked objects:
 41902 ;;		On entry : 0/0
 41903 ;;		On exit  : 0/0
 41904 ;;		Unchanged: 0/0
 41905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41907 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41909 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41910 ;;Total ram usage:        7 bytes
 41911 ;; Hardware stack levels used:    1
 41912 ;; Hardware stack levels required when called:    5
 41913 ;; This function calls:
 41914 ;;		__offset_from_file_number
 41915 ;;		__sector_from_file_number
 41916 ;;		_flash_partial_write
 41917 ;; This function is called by:
 41918 ;;		_fat_create_file
 41919 ;;		_fat_rename_file
 41920 ;;		_fat_resize_file
 41921 ;; This function uses a non-reentrant model
 41922 ;;
 41923                           
 41924                           	psect	text207
 41925  009610                     __ptext207:
 41926                           	opt stack 0
 41927  009610                     __write_root:
 41928                           	opt stack 21
 41929                           
 41930                           ;incstack = 0
 41931                           ;__write_root@file_number stored from wreg
 41932  009610  6E2F               	movwf	__write_root@file_number,c
 41933                           
 41934                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 41935  009612  502F               	movf	__write_root@file_number,w,c
 41936  009614  ECD9  F04D         	call	__sector_from_file_number
 41937  009618  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 41938  00961C  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 41939                           
 41940                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 41941  009620  502F               	movf	__write_root@file_number,w,c
 41942  009622  EC78  F04E         	call	__offset_from_file_number
 41943  009626  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 41944  00962A  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 41945                           
 41946                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 41947  00962E  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 41948  009632  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 41949  009636  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 41950  00963A  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 41951  00963E  0E00               	movlw	0
 41952  009640  6E25               	movwf	flash_partial_write@length+1,c
 41953  009642  0E20               	movlw	32
 41954  009644  6E24               	movwf	flash_partial_write@length,c
 41955  009646  C029  F026         	movff	__write_root@data,flash_partial_write@data
 41956  00964A  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 41957  00964E  EC6D  F044         	call	_flash_partial_write	;wreg free
 41958  009652  0012               	return		;funcret
 41959  009654                     __end_of__write_root:
 41960                           	opt stack 0
 41961                           tosu	equ	0xFFF
 41962                           tosh	equ	0xFFE
 41963                           tosl	equ	0xFFD
 41964                           pclath	equ	0xFFA
 41965                           tblptru	equ	0xFF8
 41966                           tblptrh	equ	0xFF7
 41967                           tblptrl	equ	0xFF6
 41968                           tablat	equ	0xFF5
 41969                           prodh	equ	0xFF4
 41970                           prodl	equ	0xFF3
 41971                           intcon	equ	0xFF2
 41972                           intcon2	equ	0xFF1
 41973                           intcon3	equ	0xFF0
 41974                           indf0	equ	0xFEF
 41975                           postinc0	equ	0xFEE
 41976                           fsr0h	equ	0xFEA
 41977                           fsr0l	equ	0xFE9
 41978                           wreg	equ	0xFE8
 41979                           indf1	equ	0xFE7
 41980                           postdec1	equ	0xFE5
 41981                           plusw1	equ	0xFE3
 41982                           fsr1h	equ	0xFE2
 41983                           fsr1l	equ	0xFE1
 41984                           indf2	equ	0xFDF
 41985                           postinc2	equ	0xFDE
 41986                           postdec2	equ	0xFDD
 41987                           plusw2	equ	0xFDB
 41988                           fsr2h	equ	0xFDA
 41989                           fsr2l	equ	0xFD9
 41990                           status	equ	0xFD8
 41991                           
 41992 ;; *************** function __make_cluster_chain *****************
 41993 ;; Defined at:
 41994 ;;		line 213 in file "fat16.c"
 41995 ;; Parameters:    Size  Location     Type
 41996 ;;  first_cluste    2   53[COMRAM] unsigned int 
 41997 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 41998 ;; Auto vars:     Size  Location     Type
 41999 ;;  next_cluster    2   74[COMRAM] unsigned int 
 42000 ;;  offset          2   72[COMRAM] unsigned int 
 42001 ;;  sector_in_bu    2   70[COMRAM] unsigned int 
 42002 ;;  sector          2   68[COMRAM] unsigned int 
 42003 ;;  remaining_cl    2   66[COMRAM] unsigned int 
 42004 ;;  different_se    2   63[COMRAM] unsigned int 
 42005 ;;  minimum_sect    2   61[COMRAM] unsigned int 
 42006 ;;  next_offset     2   59[COMRAM] unsigned int 
 42007 ;;  data_changed    1   65[COMRAM] unsigned char 
 42008 ;; Return value:  Size  Location     Type
 42009 ;;                  2   53[COMRAM] unsigned int 
 42010 ;; Registers used:
 42011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42012 ;; Tracked objects:
 42013 ;;		On entry : 0/0
 42014 ;;		On exit  : 0/0
 42015 ;;		Unchanged: 0/0
 42016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42018 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42020 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42021 ;;Total ram usage:       23 bytes
 42022 ;; Hardware stack levels used:    1
 42023 ;; Hardware stack levels required when called:    6
 42024 ;; This function calls:
 42025 ;;		__fat_offset_from_cluster
 42026 ;;		__fat_sector_from_cluster
 42027 ;;		__get_available_cluster
 42028 ;;		__get_available_offset_from_buffer
 42029 ;;		__read_value_from_offset
 42030 ;;		__write_value_to_offset
 42031 ;;		_flash_sector_read
 42032 ;;		_flash_sector_write
 42033 ;; This function is called by:
 42034 ;;		_fat_create_file
 42035 ;;		_fat_delete_file
 42036 ;;		_fat_resize_file
 42037 ;; This function uses a non-reentrant model
 42038 ;;
 42039                           
 42040                           	psect	text208
 42041  001262                     __ptext208:
 42042                           	opt stack 0
 42043  001262                     __make_cluster_chain:
 42044                           	opt stack 20
 42045                           
 42046                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 42047                           
 42048                           ;incstack = 0
 42049  001262  0E00               	movlw	0
 42050  001264  6E48               	movwf	__make_cluster_chain@sector_in_buffer+1,c
 42051  001266  0E00               	movlw	0
 42052  001268  6E47               	movwf	__make_cluster_chain@sector_in_buffer,c
 42053                           
 42054                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 42055  00126A  C038  F043         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 42056  00126E  C039  F044         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 42057                           
 42058                           ;fat16.c: 228: minimum_sector = 2;
 42059  001272  0E00               	movlw	0
 42060  001274  6E3F               	movwf	__make_cluster_chain@minimum_sector+1,c
 42061  001276  0E02               	movlw	2
 42062  001278  6E3E               	movwf	__make_cluster_chain@minimum_sector,c
 42063                           
 42064                           ;fat16.c: 229: data_changed = 0;
 42065  00127A  0E00               	movlw	0
 42066  00127C  6E42               	movwf	__make_cluster_chain@data_changed,c
 42067                           
 42068                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 42069  00127E  5036               	movf	__make_cluster_chain@first_cluster,w,c
 42070  001280  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 42071  001282  A4D8               	btfss	status,2,c
 42072  001284  D023               	goto	l2021
 42073  001286  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 42074  001288  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 42075  00128A  B4D8               	btfsc	status,2,c
 42076  00128C  D01F               	goto	l2021
 42077                           
 42078                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 42079  00128E  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 42080  001292  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 42081  001296  0E00               	movlw	0
 42082  001298  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 42083  00129A  0E00               	movlw	0
 42084  00129C  6E2E               	movwf	__get_available_cluster@skip_sector,c
 42085  00129E  EC50  F037         	call	__get_available_cluster	;wreg free
 42086  0012A2  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 42087  0012A6  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 42088                           
 42089                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 42090  0012AA  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 42091  0012AE  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 42092  0012B2  ECA3  F04F         	call	__fat_sector_from_cluster	;wreg free
 42093  0012B6  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 42094  0012BA  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 42095                           
 42096                           ;fat16.c: 237: if(first_cluster == 0)
 42097  0012BE  5036               	movf	__make_cluster_chain@first_cluster,w,c
 42098  0012C0  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 42099  0012C2  A4D8               	btfss	status,2,c
 42100  0012C4  D003               	goto	l2021
 42101                           
 42102                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 42103  0012C6  6836               	setf	?__make_cluster_chain,c
 42104  0012C8  6837               	setf	?__make_cluster_chain+1,c
 42105  0012CA  0012               	return	
 42106  0012CC                     l2021:
 42107                           
 42108                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 42109  0012CC  C036  F04B         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 42110  0012D0  C037  F04C         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 42111                           
 42112                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 42113  0012D4  D0FA               	goto	l2038
 42114  0012D6                     
 42115                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 42116  0012D6  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 42117  0012DA  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 42118  0012DE  ECA3  F04F         	call	__fat_sector_from_cluster	;wreg free
 42119  0012E2  C001  F045         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 42120  0012E6  C002  F046         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 42121                           
 42122                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 42123  0012EA  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 42124  0012EE  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 42125  0012F2  ECAF  F04F         	call	__fat_offset_from_cluster	;wreg free
 42126  0012F6  C001  F049         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 42127  0012FA  C002  F04A         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 42128                           
 42129                           ;fat16.c: 263: if(sector != sector_in_buffer)
 42130  0012FE  5047               	movf	__make_cluster_chain@sector_in_buffer,w,c
 42131  001300  1845               	xorwf	__make_cluster_chain@sector,w,c
 42132  001302  E104               	bnz	u9000
 42133  001304  5048               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 42134  001306  1846               	xorwf	__make_cluster_chain@sector+1,w,c
 42135  001308  B4D8               	btfsc	status,2,c
 42136  00130A  D035               	goto	l2025
 42137  00130C                     u9000:
 42138                           
 42139                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 42140  00130C  5042               	movf	__make_cluster_chain@data_changed,w,c
 42141  00130E  B4D8               	btfsc	status,2,c
 42142  001310  D00A               	goto	l2026
 42143                           
 42144                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 42145  001312  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 42146  001316  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 42147  00131A  0EC0               	movlw	low _buffer
 42148  00131C  6E22               	movwf	flash_sector_write@data,c
 42149  00131E  0E03               	movlw	high _buffer
 42150  001320  6E23               	movwf	flash_sector_write@data+1,c
 42151  001322  ECBD  F048         	call	_flash_sector_write	;wreg free
 42152  001326                     l2026:
 42153                           
 42154                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 42155  001326  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 42156  00132A  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 42157  00132E  C045  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 42158  001332  C046  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 42159  001336  EC50  F037         	call	__get_available_cluster	;wreg free
 42160  00133A  C02C  F040         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 42161  00133E  C02D  F041         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 42162                           
 42163                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 42164  001342  C040  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 42165  001346  C041  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 42166  00134A  ECA3  F04F         	call	__fat_sector_from_cluster	;wreg free
 42167  00134E  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 42168  001352  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 42169                           
 42170                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 42171  001356  C045  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 42172  00135A  C046  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 42173  00135E  0EC0               	movlw	low _buffer
 42174  001360  6E2A               	movwf	flash_sector_read@data,c
 42175  001362  0E03               	movlw	high _buffer
 42176  001364  6E2B               	movwf	flash_sector_read@data+1,c
 42177  001366  ECD9  F04C         	call	_flash_sector_read	;wreg free
 42178                           
 42179                           ;fat16.c: 279: sector_in_buffer = sector;
 42180  00136A  C045  F047         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 42181  00136E  C046  F048         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 42182                           
 42183                           ;fat16.c: 280: data_changed = 0;
 42184  001372  0E00               	movlw	0
 42185  001374  6E42               	movwf	__make_cluster_chain@data_changed,c
 42186  001376                     l2025:
 42187                           
 42188                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 42189  001376  5044               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 42190  001378  E104               	bnz	u9020
 42191  00137A  0E02               	movlw	2
 42192  00137C  5C43               	subwf	__make_cluster_chain@remaining_clusters,w,c
 42193  00137E  A0D8               	btfss	status,0,c
 42194  001380  D05C               	goto	l2027
 42195  001382                     u9020:
 42196                           
 42197                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 42198  001382  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 42199  001386  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 42200  00138A  0EC0               	movlw	low _buffer
 42201  00138C  6E03               	movwf	__read_value_from_offset@buffer,c
 42202  00138E  0E03               	movlw	high _buffer
 42203  001390  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42204  001392  ECC3  F04A         	call	__read_value_from_offset	;wreg free
 42205  001396  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 42206  00139A  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 42207                           
 42208                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 42209  00139E  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 42210  0013A0  E104               	bnz	u9030
 42211  0013A2  0E02               	movlw	2
 42212  0013A4  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42213  0013A6  A0D8               	btfss	status,0,c
 42214  0013A8  D006               	goto	u9040
 42215  0013AA                     u9030:
 42216  0013AA  0EDA               	movlw	218
 42217  0013AC  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42218  0013AE  0E1F               	movlw	31
 42219  0013B0  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 42220  0013B2  A0D8               	btfss	status,0,c
 42221  0013B4  D068               	goto	l2037
 42222  0013B6                     u9040:
 42223                           
 42224                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 42225  0013B6  0E02               	movlw	2
 42226  0013B8  2449               	addwf	__make_cluster_chain@offset,w,c
 42227  0013BA  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 42228  0013BC  0E00               	movlw	0
 42229  0013BE  204A               	addwfc	__make_cluster_chain@offset+1,w,c
 42230  0013C0  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 42231  0013C2  0EC0               	movlw	low _buffer
 42232  0013C4  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 42233  0013C6  0E03               	movlw	high _buffer
 42234  0013C8  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 42235  0013CA  EC34  F047         	call	__get_available_offset_from_buffer	;wreg free
 42236  0013CE  C001  F03C         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 42237  0013D2  C002  F03D         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 42238                           
 42239                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 42240  0013D6  283C               	incf	__make_cluster_chain@next_offset,w,c
 42241  0013D8  E103               	bnz	u9050
 42242  0013DA  283D               	incf	__make_cluster_chain@next_offset+1,w,c
 42243  0013DC  B4D8               	btfsc	status,2,c
 42244  0013DE  D013               	goto	l2031
 42245  0013E0                     u9050:
 42246                           
 42247                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 42248  0013E0  0EFE               	movlw	254
 42249  0013E2  2447               	addwf	__make_cluster_chain@sector_in_buffer,w,c
 42250  0013E4  6E4B               	movwf	__make_cluster_chain@next_cluster,c
 42251  0013E6  0EFF               	movlw	255
 42252  0013E8  2048               	addwfc	__make_cluster_chain@sector_in_buffer+1,w,c
 42253  0013EA  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 42254                           
 42255                           ;fat16.c: 299: next_cluster <<= 8;
 42256  0013EC  504B               	movf	__make_cluster_chain@next_cluster,w,c
 42257  0013EE  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 42258  0013F0  6A4B               	clrf	__make_cluster_chain@next_cluster,c
 42259                           
 42260                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 42261  0013F2  90D8               	bcf	status,0,c
 42262  0013F4  303D               	rrcf	__make_cluster_chain@next_offset+1,w,c
 42263  0013F6  6E3B               	movwf	(??__make_cluster_chain+1)& (0+255),c
 42264  0013F8  303C               	rrcf	__make_cluster_chain@next_offset,w,c
 42265  0013FA  6E3A               	movwf	??__make_cluster_chain& (0+255),c
 42266  0013FC  503A               	movf	??__make_cluster_chain,w,c
 42267  0013FE  124B               	iorwf	__make_cluster_chain@next_cluster,f,c
 42268  001400  503B               	movf	??__make_cluster_chain+1,w,c
 42269  001402  124C               	iorwf	__make_cluster_chain@next_cluster+1,f,c
 42270                           
 42271                           ;fat16.c: 301: }
 42272  001404  D00B               	goto	l2034
 42273  001406                     l2031:
 42274                           
 42275                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 42276  001406  5040               	movf	__make_cluster_chain@different_sector_cluster,w,c
 42277  001408  1041               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 42278  00140A  A4D8               	btfss	status,2,c
 42279  00140C  D003               	goto	l2033
 42280                           
 42281                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 42282  00140E  6836               	setf	?__make_cluster_chain,c
 42283  001410  6837               	setf	?__make_cluster_chain+1,c
 42284  001412  0012               	return	
 42285  001414                     l2033:
 42286                           
 42287                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 42288  001414  C040  F04B         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 42289  001418  C041  F04C         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 42290  00141C                     l2034:
 42291                           
 42292                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 42293  00141C  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 42294  001420  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 42295  001424  0EC0               	movlw	low _buffer
 42296  001426  6E03               	movwf	__write_value_to_offset@buffer,c
 42297  001428  0E03               	movlw	high _buffer
 42298  00142A  6E04               	movwf	__write_value_to_offset@buffer+1,c
 42299  00142C  C04B  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 42300  001430  C04C  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 42301  001434  EC8D  F04C         	call	__write_value_to_offset	;wreg free
 42302  001438  D024               	goto	L66
 42303  00143A                     l2027:
 42304                           
 42305                           ;fat16.c: 326: else if(remaining_clusters == 1)
 42306  00143A  0443               	decf	__make_cluster_chain@remaining_clusters,w,c
 42307  00143C  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 42308  00143E  A4D8               	btfss	status,2,c
 42309  001440  D026               	goto	l2036
 42310                           
 42311                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 42312  001442  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 42313  001446  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 42314  00144A  0EC0               	movlw	low _buffer
 42315  00144C  6E03               	movwf	__read_value_from_offset@buffer,c
 42316  00144E  0E03               	movlw	high _buffer
 42317  001450  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42318  001452  ECC3  F04A         	call	__read_value_from_offset	;wreg free
 42319  001456  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 42320  00145A  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 42321                           
 42322                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 42323  00145E  284B               	incf	__make_cluster_chain@next_cluster,w,c
 42324  001460  E103               	bnz	u9080
 42325  001462  284C               	incf	__make_cluster_chain@next_cluster+1,w,c
 42326  001464  B4D8               	btfsc	status,2,c
 42327  001466  D00F               	goto	l2037
 42328  001468                     u9080:
 42329                           
 42330                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 42331  001468  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 42332  00146C  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 42333  001470  0EC0               	movlw	low _buffer
 42334  001472  6E03               	movwf	__write_value_to_offset@buffer,c
 42335  001474  0E03               	movlw	high _buffer
 42336  001476  6E04               	movwf	__write_value_to_offset@buffer+1,c
 42337  001478  0EFF               	movlw	255
 42338  00147A  6E06               	movwf	__write_value_to_offset@value+1,c
 42339  00147C  6805               	setf	__write_value_to_offset@value,c
 42340  00147E  EC8D  F04C         	call	__write_value_to_offset	;wreg free
 42341  001482                     L66:
 42342                           
 42343                           ;fat16.c: 336: data_changed = 1;
 42344  001482  0E01               	movlw	1
 42345  001484  6E42               	movwf	__make_cluster_chain@data_changed,c
 42346  001486                     l2037:
 42347                           
 42348                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 42349  001486  0643               	decf	__make_cluster_chain@remaining_clusters,f,c
 42350  001488  A0D8               	btfss	status,0,c
 42351  00148A  0644               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 42352                           
 42353                           ;fat16.c: 341: }
 42354  00148C  D01E               	goto	l2038
 42355  00148E                     l2036:
 42356                           
 42357                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 42358  00148E  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 42359  001492  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 42360  001496  0EC0               	movlw	low _buffer
 42361  001498  6E03               	movwf	__read_value_from_offset@buffer,c
 42362  00149A  0E03               	movlw	high _buffer
 42363  00149C  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42364  00149E  ECC3  F04A         	call	__read_value_from_offset	;wreg free
 42365  0014A2  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 42366  0014A6  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 42367                           
 42368                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 42369  0014AA  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 42370  0014AE  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 42371  0014B2  0EC0               	movlw	low _buffer
 42372  0014B4  6E03               	movwf	__write_value_to_offset@buffer,c
 42373  0014B6  0E03               	movlw	high _buffer
 42374  0014B8  6E04               	movwf	__write_value_to_offset@buffer+1,c
 42375  0014BA  0E00               	movlw	0
 42376  0014BC  6E06               	movwf	__write_value_to_offset@value+1,c
 42377  0014BE  0E00               	movlw	0
 42378  0014C0  6E05               	movwf	__write_value_to_offset@value,c
 42379  0014C2  EC8D  F04C         	call	__write_value_to_offset	;wreg free
 42380                           
 42381                           ;fat16.c: 352: data_changed = 1;
 42382  0014C6  0E01               	movlw	1
 42383  0014C8  6E42               	movwf	__make_cluster_chain@data_changed,c
 42384  0014CA                     l2038:
 42385  0014CA  5043               	movf	__make_cluster_chain@remaining_clusters,w,c
 42386  0014CC  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 42387  0014CE  A4D8               	btfss	status,2,c
 42388  0014D0  D702               	goto	l2024
 42389  0014D2  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 42390  0014D4  E104               	bnz	u9100
 42391  0014D6  0E02               	movlw	2
 42392  0014D8  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42393  0014DA  A0D8               	btfss	status,0,c
 42394  0014DC  D006               	goto	u9110
 42395  0014DE                     u9100:
 42396  0014DE  0EDA               	movlw	218
 42397  0014E0  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42398  0014E2  0E1F               	movlw	31
 42399  0014E4  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 42400  0014E6  A0D8               	btfss	status,0,c
 42401  0014E8  D6F6               	goto	l2024
 42402  0014EA                     u9110:
 42403                           
 42404                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 42405  0014EA  5042               	movf	__make_cluster_chain@data_changed,w,c
 42406  0014EC  B4D8               	btfsc	status,2,c
 42407  0014EE  D00A               	goto	l2042
 42408                           
 42409                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 42410  0014F0  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 42411  0014F4  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 42412  0014F8  0EC0               	movlw	low _buffer
 42413  0014FA  6E22               	movwf	flash_sector_write@data,c
 42414  0014FC  0E03               	movlw	high _buffer
 42415  0014FE  6E23               	movwf	flash_sector_write@data+1,c
 42416  001500  ECBD  F048         	call	_flash_sector_write	;wreg free
 42417  001504                     l2042:
 42418                           
 42419                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 42420  001504  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 42421  001506  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 42422  001508  B4D8               	btfsc	status,2,c
 42423  00150A  D005               	goto	l2043
 42424                           
 42425                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 42426  00150C  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 42427  001510  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 42428                           
 42429                           ;fat16.c: 367: }
 42430  001514  0012               	return	
 42431  001516                     l2043:
 42432                           
 42433                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 42434  001516  0E00               	movlw	0
 42435  001518  6E37               	movwf	?__make_cluster_chain+1,c
 42436  00151A  0E00               	movlw	0
 42437  00151C  6E36               	movwf	?__make_cluster_chain,c
 42438  00151E  0012               	return	
 42439  001520                     __end_of__make_cluster_chain:
 42440                           	opt stack 0
 42441                           tosu	equ	0xFFF
 42442                           tosh	equ	0xFFE
 42443                           tosl	equ	0xFFD
 42444                           pclath	equ	0xFFA
 42445                           tblptru	equ	0xFF8
 42446                           tblptrh	equ	0xFF7
 42447                           tblptrl	equ	0xFF6
 42448                           tablat	equ	0xFF5
 42449                           prodh	equ	0xFF4
 42450                           prodl	equ	0xFF3
 42451                           intcon	equ	0xFF2
 42452                           intcon2	equ	0xFF1
 42453                           intcon3	equ	0xFF0
 42454                           indf0	equ	0xFEF
 42455                           postinc0	equ	0xFEE
 42456                           fsr0h	equ	0xFEA
 42457                           fsr0l	equ	0xFE9
 42458                           wreg	equ	0xFE8
 42459                           indf1	equ	0xFE7
 42460                           postdec1	equ	0xFE5
 42461                           plusw1	equ	0xFE3
 42462                           fsr1h	equ	0xFE2
 42463                           fsr1l	equ	0xFE1
 42464                           indf2	equ	0xFDF
 42465                           postinc2	equ	0xFDE
 42466                           postdec2	equ	0xFDD
 42467                           plusw2	equ	0xFDB
 42468                           fsr2h	equ	0xFDA
 42469                           fsr2l	equ	0xFD9
 42470                           status	equ	0xFD8
 42471                           
 42472 ;; *************** function _flash_sector_write *****************
 42473 ;; Defined at:
 42474 ;;		line 457 in file "flash.c"
 42475 ;; Parameters:    Size  Location     Type
 42476 ;;  page            2   31[COMRAM] unsigned int 
 42477 ;;  data            2   33[COMRAM] PTR unsigned char 
 42478 ;;		 -> buffer(512), msd_buffer(512), 
 42479 ;; Auto vars:     Size  Location     Type
 42480 ;;  match           1   35[COMRAM] enum E6910
 42481 ;; Return value:  Size  Location     Type
 42482 ;;                  1    wreg      void 
 42483 ;; Registers used:
 42484 ;;		wreg, status,2, status,0, cstack
 42485 ;; Tracked objects:
 42486 ;;		On entry : 0/0
 42487 ;;		On exit  : 0/0
 42488 ;;		Unchanged: 0/0
 42489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42494 ;;Total ram usage:        5 bytes
 42495 ;; Hardware stack levels used:    1
 42496 ;; Hardware stack levels required when called:    4
 42497 ;; This function calls:
 42498 ;;		__flash_compare_page_to_buffer
 42499 ;;		__flash_write_page_from_buffer
 42500 ;;		__flash_write_to_buffer
 42501 ;;		_spi_set_configuration
 42502 ;; This function is called by:
 42503 ;;		_ExternalFlash_SectorWrite
 42504 ;;		__make_cluster_chain
 42505 ;;		_fat_format
 42506 ;; This function uses a non-reentrant model
 42507 ;;
 42508                           
 42509                           	psect	text209
 42510  00917A                     __ptext209:
 42511                           	opt stack 0
 42512  00917A                     _flash_sector_write:
 42513                           	opt stack 23
 42514                           
 42515                           ;flash.c: 459: flashMatchResult_t match;;flash.c: 462: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 42516                           
 42517                           ;incstack = 0
 42518  00917A  0E00               	movlw	0
 42519  00917C  EC06  F02A         	call	_spi_set_configuration
 42520                           
 42521                           ;flash.c: 465: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 42522  009180  0E00               	movlw	0
 42523  009182  6E15               	movwf	__flash_write_to_buffer@start+1,c
 42524  009184  0E00               	movlw	0
 42525  009186  6E14               	movwf	__flash_write_to_buffer@start,c
 42526  009188  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 42527  00918C  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 42528  009190  0E02               	movlw	2
 42529  009192  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 42530  009194  0E00               	movlw	0
 42531  009196  6E18               	movwf	__flash_write_to_buffer@data_length,c
 42532  009198  0E00               	movlw	0
 42533  00919A  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 42534  00919C  EC0B  F04A         	call	__flash_write_to_buffer	;wreg free
 42535                           
 42536                           ;flash.c: 468: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 42537  0091A0  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 42538  0091A4  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 42539  0091A8  0E00               	movlw	0
 42540  0091AA  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 42541  0091AC  EC4B  F043         	call	__flash_compare_page_to_buffer	;wreg free
 42542  0091B0  6E24               	movwf	flash_sector_write@match,c
 42543                           
 42544                           ;flash.c: 471: if(match==DATA_DOES_NOT_MATCH)
 42545  0091B2  0424               	decf	flash_sector_write@match,w,c
 42546  0091B4  A4D8               	btfss	status,2,c
 42547  0091B6  D008               	goto	l1877
 42548                           
 42549                           ;flash.c: 472: {;flash.c: 473: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 42550  0091B8  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 42551  0091BC  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 42552  0091C0  0E00               	movlw	0
 42553  0091C2  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 42554  0091C4  EC8D  F047         	call	__flash_write_page_from_buffer	;wreg free
 42555  0091C8                     l1877:
 42556                           
 42557                           ;flash.c: 474: };flash.c: 477: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42558  0091C8  0E01               	movlw	1
 42559  0091CA  EC06  F02A         	call	_spi_set_configuration
 42560  0091CE  0012               	return		;funcret
 42561  0091D0                     __end_of_flash_sector_write:
 42562                           	opt stack 0
 42563                           tosu	equ	0xFFF
 42564                           tosh	equ	0xFFE
 42565                           tosl	equ	0xFFD
 42566                           pclath	equ	0xFFA
 42567                           tblptru	equ	0xFF8
 42568                           tblptrh	equ	0xFF7
 42569                           tblptrl	equ	0xFF6
 42570                           tablat	equ	0xFF5
 42571                           prodh	equ	0xFF4
 42572                           prodl	equ	0xFF3
 42573                           intcon	equ	0xFF2
 42574                           intcon2	equ	0xFF1
 42575                           intcon3	equ	0xFF0
 42576                           indf0	equ	0xFEF
 42577                           postinc0	equ	0xFEE
 42578                           fsr0h	equ	0xFEA
 42579                           fsr0l	equ	0xFE9
 42580                           wreg	equ	0xFE8
 42581                           indf1	equ	0xFE7
 42582                           postdec1	equ	0xFE5
 42583                           plusw1	equ	0xFE3
 42584                           fsr1h	equ	0xFE2
 42585                           fsr1l	equ	0xFE1
 42586                           indf2	equ	0xFDF
 42587                           postinc2	equ	0xFDE
 42588                           postdec2	equ	0xFDD
 42589                           plusw2	equ	0xFDB
 42590                           fsr2h	equ	0xFDA
 42591                           fsr2l	equ	0xFD9
 42592                           status	equ	0xFD8
 42593                           
 42594 ;; *************** function __write_value_to_offset *****************
 42595 ;; Defined at:
 42596 ;;		line 123 in file "fat16.c"
 42597 ;; Parameters:    Size  Location     Type
 42598 ;;  offset          2    0[COMRAM] unsigned int 
 42599 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42600 ;;		 -> buffer(512), 
 42601 ;;  value           2    4[COMRAM] unsigned int 
 42602 ;; Auto vars:     Size  Location     Type
 42603 ;;		None
 42604 ;; Return value:  Size  Location     Type
 42605 ;;                  1    wreg      void 
 42606 ;; Registers used:
 42607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42608 ;; Tracked objects:
 42609 ;;		On entry : 0/0
 42610 ;;		On exit  : 0/0
 42611 ;;		Unchanged: 0/0
 42612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42613 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42616 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42617 ;;Total ram usage:        8 bytes
 42618 ;; Hardware stack levels used:    1
 42619 ;; This function calls:
 42620 ;;		Nothing
 42621 ;; This function is called by:
 42622 ;;		__make_cluster_chain
 42623 ;; This function uses a non-reentrant model
 42624 ;;
 42625                           
 42626                           	psect	text210
 42627  00991A                     __ptext210:
 42628                           	opt stack 0
 42629  00991A                     __write_value_to_offset:
 42630                           	opt stack 25
 42631                           
 42632                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 42633                           
 42634                           ;incstack = 0
 42635  00991A  5001               	movf	__write_value_to_offset@offset,w,c
 42636  00991C  2403               	addwf	__write_value_to_offset@buffer,w,c
 42637  00991E  6ED9               	movwf	fsr2l,c
 42638  009920  5002               	movf	__write_value_to_offset@offset+1,w,c
 42639  009922  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 42640  009924  6EDA               	movwf	fsr2h,c
 42641  009926  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 42642                           
 42643                           ;fat16.c: 126: value >>= 8;
 42644  00992A  5006               	movf	__write_value_to_offset@value+1,w,c
 42645  00992C  6E05               	movwf	__write_value_to_offset@value,c
 42646  00992E  6A06               	clrf	__write_value_to_offset@value+1,c
 42647                           
 42648                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 42649  009930  0E01               	movlw	1
 42650  009932  2401               	addwf	__write_value_to_offset@offset,w,c
 42651  009934  6E07               	movwf	??__write_value_to_offset& (0+255),c
 42652  009936  0E00               	movlw	0
 42653  009938  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 42654  00993A  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 42655  00993C  5007               	movf	??__write_value_to_offset,w,c
 42656  00993E  2403               	addwf	__write_value_to_offset@buffer,w,c
 42657  009940  6ED9               	movwf	fsr2l,c
 42658  009942  5008               	movf	??__write_value_to_offset+1,w,c
 42659  009944  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 42660  009946  6EDA               	movwf	fsr2h,c
 42661  009948  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 42662  00994C  0012               	return		;funcret
 42663  00994E                     __end_of__write_value_to_offset:
 42664                           	opt stack 0
 42665                           tosu	equ	0xFFF
 42666                           tosh	equ	0xFFE
 42667                           tosl	equ	0xFFD
 42668                           pclath	equ	0xFFA
 42669                           tblptru	equ	0xFF8
 42670                           tblptrh	equ	0xFF7
 42671                           tblptrl	equ	0xFF6
 42672                           tablat	equ	0xFF5
 42673                           prodh	equ	0xFF4
 42674                           prodl	equ	0xFF3
 42675                           intcon	equ	0xFF2
 42676                           intcon2	equ	0xFF1
 42677                           intcon3	equ	0xFF0
 42678                           indf0	equ	0xFEF
 42679                           postinc0	equ	0xFEE
 42680                           fsr0h	equ	0xFEA
 42681                           fsr0l	equ	0xFE9
 42682                           wreg	equ	0xFE8
 42683                           indf1	equ	0xFE7
 42684                           postdec1	equ	0xFE5
 42685                           plusw1	equ	0xFE3
 42686                           fsr1h	equ	0xFE2
 42687                           fsr1l	equ	0xFE1
 42688                           indf2	equ	0xFDF
 42689                           postinc2	equ	0xFDE
 42690                           postdec2	equ	0xFDD
 42691                           plusw2	equ	0xFDB
 42692                           fsr2h	equ	0xFDA
 42693                           fsr2l	equ	0xFD9
 42694                           status	equ	0xFD8
 42695                           
 42696 ;; *************** function __get_available_cluster *****************
 42697 ;; Defined at:
 42698 ;;		line 130 in file "fat16.c"
 42699 ;; Parameters:    Size  Location     Type
 42700 ;;  first_sector    2   43[COMRAM] unsigned int 
 42701 ;;  skip_sector     2   45[COMRAM] unsigned int 
 42702 ;; Auto vars:     Size  Location     Type
 42703 ;;  sector          2   51[COMRAM] unsigned int 
 42704 ;;  offset          2   49[COMRAM] unsigned int 
 42705 ;;  cluster         2   47[COMRAM] unsigned int 
 42706 ;; Return value:  Size  Location     Type
 42707 ;;                  2   43[COMRAM] unsigned int 
 42708 ;; Registers used:
 42709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42710 ;; Tracked objects:
 42711 ;;		On entry : 0/0
 42712 ;;		On exit  : 0/0
 42713 ;;		Unchanged: 0/0
 42714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42716 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42718 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42719 ;;Total ram usage:       10 bytes
 42720 ;; Hardware stack levels used:    1
 42721 ;; Hardware stack levels required when called:    5
 42722 ;; This function calls:
 42723 ;;		__cluster_from_sector_and_offset
 42724 ;;		__get_available_offset_from_buffer
 42725 ;;		_flash_sector_read
 42726 ;; This function is called by:
 42727 ;;		__make_cluster_chain
 42728 ;; This function uses a non-reentrant model
 42729 ;;
 42730                           
 42731                           	psect	text211
 42732  006EA0                     __ptext211:
 42733                           	opt stack 0
 42734  006EA0                     __get_available_cluster:
 42735                           	opt stack 20
 42736                           
 42737                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 42738                           
 42739                           ;incstack = 0
 42740  006EA0  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 42741  006EA4  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 42742  006EA8                     l11365:
 42743  006EA8  5035               	movf	__get_available_cluster@sector+1,w,c
 42744  006EAA  E157               	bnz	l11397
 42745  006EAC  0E22               	movlw	34
 42746  006EAE  5C34               	subwf	__get_available_cluster@sector,w,c
 42747  006EB0  B0D8               	btfsc	status,0,c
 42748  006EB2  D053               	goto	u8250
 42749                           
 42750                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 42751  006EB4  502E               	movf	__get_available_cluster@skip_sector,w,c
 42752  006EB6  1834               	xorwf	__get_available_cluster@sector,w,c
 42753  006EB8  E104               	bnz	l11373
 42754  006EBA  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 42755  006EBC  1835               	xorwf	__get_available_cluster@sector+1,w,c
 42756  006EBE  B4D8               	btfsc	status,2,c
 42757  006EC0  D049               	goto	l2009
 42758  006EC2                     l11373:
 42759                           
 42760                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 42761  006EC2  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 42762  006EC6  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 42763  006ECA  0EC0               	movlw	low _buffer
 42764  006ECC  6E2A               	movwf	flash_sector_read@data,c
 42765  006ECE  0E03               	movlw	high _buffer
 42766  006ED0  6E2B               	movwf	flash_sector_read@data+1,c
 42767  006ED2  ECD9  F04C         	call	_flash_sector_read	;wreg free
 42768                           
 42769                           ;fat16.c: 149: if(sector == 2)
 42770  006ED6  0E02               	movlw	2
 42771  006ED8  1834               	xorwf	__get_available_cluster@sector,w,c
 42772  006EDA  1035               	iorwf	__get_available_cluster@sector+1,w,c
 42773  006EDC  A4D8               	btfss	status,2,c
 42774  006EDE  D00B               	goto	l2004
 42775                           
 42776                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 42777  006EE0  0E00               	movlw	0
 42778  006EE2  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 42779  006EE4  0E04               	movlw	4
 42780  006EE6  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 42781  006EE8  0EC0               	movlw	low _buffer
 42782  006EEA  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 42783  006EEC  0E03               	movlw	high _buffer
 42784  006EEE  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 42785  006EF0  EC34  F047         	call	__get_available_offset_from_buffer	;wreg free
 42786  006EF4  D00A               	goto	L62
 42787  006EF6                     l2004:
 42788                           
 42789                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 42790  006EF6  0E00               	movlw	0
 42791  006EF8  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 42792  006EFA  0E00               	movlw	0
 42793  006EFC  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 42794  006EFE  0EC0               	movlw	low _buffer
 42795  006F00  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 42796  006F02  0E03               	movlw	high _buffer
 42797  006F04  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 42798  006F06  EC34  F047         	call	__get_available_offset_from_buffer	;wreg free
 42799  006F0A                     L62:
 42800  006F0A  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 42801  006F0E  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 42802                           
 42803                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 42804  006F12  2832               	incf	__get_available_cluster@offset,w,c
 42805  006F14  E103               	bnz	u8230
 42806  006F16  2833               	incf	__get_available_cluster@offset+1,w,c
 42807  006F18  B4D8               	btfsc	status,2,c
 42808  006F1A  D01C               	goto	l2009
 42809  006F1C                     u8230:
 42810                           
 42811                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 42812  006F1C  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 42813  006F20  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 42814  006F24  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 42815  006F28  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 42816  006F2C  EC65  F04E         	call	__cluster_from_sector_and_offset	;wreg free
 42817  006F30  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 42818  006F34  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 42819                           
 42820                           ;fat16.c: 165: if(cluster > 8191)
 42821  006F38  0E20               	movlw	32
 42822  006F3A  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 42823  006F3C  A0D8               	btfss	status,0,c
 42824  006F3E  D005               	goto	l2007
 42825                           
 42826                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 42827  006F40  0E00               	movlw	0
 42828  006F42  6E2D               	movwf	?__get_available_cluster+1,c
 42829  006F44  0E00               	movlw	0
 42830  006F46  6E2C               	movwf	?__get_available_cluster,c
 42831  006F48  0012               	return	
 42832  006F4A                     l2007:
 42833                           
 42834                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 42835  006F4A  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 42836  006F4E  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 42837  006F52  0012               	return	
 42838  006F54                     l2009:
 42839  006F54  4A34               	infsnz	__get_available_cluster@sector,f,c
 42840  006F56  2A35               	incf	__get_available_cluster@sector+1,f,c
 42841  006F58  D7A7               	goto	l11365
 42842  006F5A                     u8250:
 42843  006F5A                     l11397:
 42844                           
 42845                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 42846  006F5A  0E00               	movlw	0
 42847  006F5C  6E2D               	movwf	?__get_available_cluster+1,c
 42848  006F5E  0E00               	movlw	0
 42849  006F60  6E2C               	movwf	?__get_available_cluster,c
 42850  006F62  0012               	return	
 42851  006F64                     __end_of__get_available_cluster:
 42852                           	opt stack 0
 42853                           tosu	equ	0xFFF
 42854                           tosh	equ	0xFFE
 42855                           tosl	equ	0xFFD
 42856                           pclath	equ	0xFFA
 42857                           tblptru	equ	0xFF8
 42858                           tblptrh	equ	0xFF7
 42859                           tblptrl	equ	0xFF6
 42860                           tablat	equ	0xFF5
 42861                           prodh	equ	0xFF4
 42862                           prodl	equ	0xFF3
 42863                           intcon	equ	0xFF2
 42864                           intcon2	equ	0xFF1
 42865                           intcon3	equ	0xFF0
 42866                           indf0	equ	0xFEF
 42867                           postinc0	equ	0xFEE
 42868                           fsr0h	equ	0xFEA
 42869                           fsr0l	equ	0xFE9
 42870                           wreg	equ	0xFE8
 42871                           indf1	equ	0xFE7
 42872                           postdec1	equ	0xFE5
 42873                           plusw1	equ	0xFE3
 42874                           fsr1h	equ	0xFE2
 42875                           fsr1l	equ	0xFE1
 42876                           indf2	equ	0xFDF
 42877                           postinc2	equ	0xFDE
 42878                           postdec2	equ	0xFDD
 42879                           plusw2	equ	0xFDB
 42880                           fsr2h	equ	0xFDA
 42881                           fsr2l	equ	0xFD9
 42882                           status	equ	0xFD8
 42883                           
 42884 ;; *************** function __get_available_offset_from_buffer *****************
 42885 ;; Defined at:
 42886 ;;		line 98 in file "fat16.c"
 42887 ;; Parameters:    Size  Location     Type
 42888 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 42889 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42890 ;;		 -> buffer(512), 
 42891 ;; Auto vars:     Size  Location     Type
 42892 ;;  offset          2    6[COMRAM] unsigned int 
 42893 ;; Return value:  Size  Location     Type
 42894 ;;                  2    0[COMRAM] unsigned int 
 42895 ;; Registers used:
 42896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42897 ;; Tracked objects:
 42898 ;;		On entry : 0/0
 42899 ;;		On exit  : 0/0
 42900 ;;		Unchanged: 0/0
 42901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42906 ;;Total ram usage:        8 bytes
 42907 ;; Hardware stack levels used:    1
 42908 ;; This function calls:
 42909 ;;		Nothing
 42910 ;; This function is called by:
 42911 ;;		__get_available_cluster
 42912 ;;		__make_cluster_chain
 42913 ;; This function uses a non-reentrant model
 42914 ;;
 42915                           
 42916                           	psect	text212
 42917  008E68                     __ptext212:
 42918                           	opt stack 0
 42919  008E68                     __get_available_offset_from_buffer:
 42920                           	opt stack 25
 42921                           
 42922                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 42923                           
 42924                           ;incstack = 0
 42925  008E68  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 42926  008E6C  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 42927  008E70  D021               	goto	L63
 42928  008E72                     
 42929                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 42930  008E72  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 42931  008E74  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 42932  008E76  6ED9               	movwf	fsr2l,c
 42933  008E78  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 42934  008E7A  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 42935  008E7C  6EDA               	movwf	fsr2h,c
 42936  008E7E  50DF               	movf	indf2,w,c
 42937  008E80  A4D8               	btfss	status,2,c
 42938  008E82  D014               	goto	l1990
 42939  008E84  0E01               	movlw	1
 42940  008E86  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 42941  008E88  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 42942  008E8A  0E00               	movlw	0
 42943  008E8C  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 42944  008E8E  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 42945  008E90  5005               	movf	??__get_available_offset_from_buffer,w,c
 42946  008E92  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 42947  008E94  6ED9               	movwf	fsr2l,c
 42948  008E96  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 42949  008E98  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 42950  008E9A  6EDA               	movwf	fsr2h,c
 42951  008E9C  50DF               	movf	indf2,w,c
 42952  008E9E  A4D8               	btfss	status,2,c
 42953  008EA0  D005               	goto	l1990
 42954                           
 42955                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 42956  008EA2  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 42957  008EA6  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 42958  008EAA  0012               	return	
 42959  008EAC                     l1990:
 42960  008EAC  0E02               	movlw	2
 42961  008EAE  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 42962  008EB0  0E00               	movlw	0
 42963  008EB2  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 42964  008EB4                     L63:
 42965  008EB4  0E02               	movlw	2
 42966  008EB6  5C08               	subwf	__get_available_offset_from_buffer@offset+1,w,c
 42967  008EB8  A0D8               	btfss	status,0,c
 42968  008EBA  D7DB               	goto	l1988
 42969                           
 42970                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 42971  008EBC  6801               	setf	?__get_available_offset_from_buffer,c
 42972  008EBE  6802               	setf	?__get_available_offset_from_buffer+1,c
 42973  008EC0  0012               	return		;funcret
 42974  008EC2                     __end_of__get_available_offset_from_buffer:
 42975                           	opt stack 0
 42976                           tosu	equ	0xFFF
 42977                           tosh	equ	0xFFE
 42978                           tosl	equ	0xFFD
 42979                           pclath	equ	0xFFA
 42980                           tblptru	equ	0xFF8
 42981                           tblptrh	equ	0xFF7
 42982                           tblptrl	equ	0xFF6
 42983                           tablat	equ	0xFF5
 42984                           prodh	equ	0xFF4
 42985                           prodl	equ	0xFF3
 42986                           intcon	equ	0xFF2
 42987                           intcon2	equ	0xFF1
 42988                           intcon3	equ	0xFF0
 42989                           indf0	equ	0xFEF
 42990                           postinc0	equ	0xFEE
 42991                           fsr0h	equ	0xFEA
 42992                           fsr0l	equ	0xFE9
 42993                           wreg	equ	0xFE8
 42994                           indf1	equ	0xFE7
 42995                           postdec1	equ	0xFE5
 42996                           plusw1	equ	0xFE3
 42997                           fsr1h	equ	0xFE2
 42998                           fsr1l	equ	0xFE1
 42999                           indf2	equ	0xFDF
 43000                           postinc2	equ	0xFDE
 43001                           postdec2	equ	0xFDD
 43002                           plusw2	equ	0xFDB
 43003                           fsr2h	equ	0xFDA
 43004                           fsr2l	equ	0xFD9
 43005                           status	equ	0xFD8
 43006                           
 43007 ;; *************** function __cluster_from_sector_and_offset *****************
 43008 ;; Defined at:
 43009 ;;		line 89 in file "fat16.c"
 43010 ;; Parameters:    Size  Location     Type
 43011 ;;  sector          2    0[COMRAM] unsigned int 
 43012 ;;  offset          2    2[COMRAM] unsigned int 
 43013 ;; Auto vars:     Size  Location     Type
 43014 ;;		None
 43015 ;; Return value:  Size  Location     Type
 43016 ;;                  2    0[COMRAM] unsigned int 
 43017 ;; Registers used:
 43018 ;;		wreg, status,2, status,0
 43019 ;; Tracked objects:
 43020 ;;		On entry : 0/0
 43021 ;;		On exit  : 0/0
 43022 ;;		Unchanged: 0/0
 43023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43028 ;;Total ram usage:        4 bytes
 43029 ;; Hardware stack levels used:    1
 43030 ;; This function calls:
 43031 ;;		Nothing
 43032 ;; This function is called by:
 43033 ;;		__get_available_cluster
 43034 ;; This function uses a non-reentrant model
 43035 ;;
 43036                           
 43037                           	psect	text213
 43038  009CCA                     __ptext213:
 43039                           	opt stack 0
 43040  009CCA                     __cluster_from_sector_and_offset:
 43041                           	opt stack 24
 43042                           
 43043                           ;fat16.c: 91: offset >>= 1;
 43044                           
 43045                           ;incstack = 0
 43046  009CCA  90D8               	bcf	status,0,c
 43047  009CCC  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 43048  009CCE  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 43049                           
 43050                           ;fat16.c: 92: sector -= 2;
 43051  009CD0  0E02               	movlw	2
 43052  009CD2  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 43053  009CD4  0E00               	movlw	0
 43054  009CD6  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 43055                           
 43056                           ;fat16.c: 93: sector <<= 8;
 43057  009CD8  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 43058  009CDA  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 43059  009CDC  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 43060                           
 43061                           ;fat16.c: 94: sector |= offset;
 43062  009CDE  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 43063  009CE0  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 43064  009CE2  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 43065  009CE4  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 43066                           
 43067                           ;fat16.c: 95: return sector;
 43068  009CE6  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 43069  009CEA  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 43070  009CEE  0012               	return	
 43071  009CF0                     __end_of__cluster_from_sector_and_offset:
 43072                           	opt stack 0
 43073                           tosu	equ	0xFFF
 43074                           tosh	equ	0xFFE
 43075                           tosl	equ	0xFFD
 43076                           pclath	equ	0xFFA
 43077                           tblptru	equ	0xFF8
 43078                           tblptrh	equ	0xFF7
 43079                           tblptrl	equ	0xFF6
 43080                           tablat	equ	0xFF5
 43081                           prodh	equ	0xFF4
 43082                           prodl	equ	0xFF3
 43083                           intcon	equ	0xFF2
 43084                           intcon2	equ	0xFF1
 43085                           intcon3	equ	0xFF0
 43086                           indf0	equ	0xFEF
 43087                           postinc0	equ	0xFEE
 43088                           fsr0h	equ	0xFEA
 43089                           fsr0l	equ	0xFE9
 43090                           wreg	equ	0xFE8
 43091                           indf1	equ	0xFE7
 43092                           postdec1	equ	0xFE5
 43093                           plusw1	equ	0xFE3
 43094                           fsr1h	equ	0xFE2
 43095                           fsr1l	equ	0xFE1
 43096                           indf2	equ	0xFDF
 43097                           postinc2	equ	0xFDE
 43098                           postdec2	equ	0xFDD
 43099                           plusw2	equ	0xFDB
 43100                           fsr2h	equ	0xFDA
 43101                           fsr2l	equ	0xFD9
 43102                           status	equ	0xFD8
 43103                           
 43104 ;; *************** function _fat_modify_file *****************
 43105 ;; Defined at:
 43106 ;;		line 962 in file "fat16.c"
 43107 ;; Parameters:    Size  Location     Type
 43108 ;;  file_number     1    wreg     unsigned char 
 43109 ;;  start_byte      4   65[COMRAM] unsigned long 
 43110 ;;  length          2   69[COMRAM] unsigned int 
 43111 ;;  data            2   71[COMRAM] PTR unsigned char 
 43112 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 43113 ;; Auto vars:     Size  Location     Type
 43114 ;;  file_number     1    2[BANK0 ] unsigned char 
 43115 ;;  root           32   14[BANK0 ] struct .
 43116 ;;  position        4   10[BANK0 ] unsigned long 
 43117 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 43118 ;;  offset          2    6[BANK0 ] unsigned int 
 43119 ;;  cluster         2    3[BANK0 ] unsigned int 
 43120 ;;  sector          2    0[BANK0 ] unsigned int 
 43121 ;;  return_code     1    5[BANK0 ] unsigned char 
 43122 ;; Return value:  Size  Location     Type
 43123 ;;                  1    wreg      unsigned char 
 43124 ;; Registers used:
 43125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43126 ;; Tracked objects:
 43127 ;;		On entry : 0/0
 43128 ;;		On exit  : 0/0
 43129 ;;		Unchanged: 0/0
 43130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43131 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43132 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43133 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43134 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43135 ;;Total ram usage:       66 bytes
 43136 ;; Hardware stack levels used:    1
 43137 ;; Hardware stack levels required when called:    7
 43138 ;; This function calls:
 43139 ;;		__data_sector_from_cluster
 43140 ;;		__find_nth_cluster
 43141 ;;		__read_fat
 43142 ;;		_fat_get_file_information
 43143 ;;		_flash_partial_write
 43144 ;; This function is called by:
 43145 ;;		_fat_append_to_file
 43146 ;;		__parse_file_modify
 43147 ;; This function uses a non-reentrant model
 43148 ;;
 43149                           
 43150                           	psect	text214
 43151  00242E                     __ptext214:
 43152                           	opt stack 0
 43153  00242E                     _fat_modify_file:
 43154                           	opt stack 20
 43155                           
 43156                           ;incstack = 0
 43157                           ;fat_modify_file@file_number stored from wreg
 43158  00242E  0100               	movlb	0	; () banked
 43159  002430  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 43160                           
 43161                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 43162  002432  0E6E               	movlw	low fat_modify_file@root
 43163  002434  6E30               	movwf	fat_get_file_information@data,c
 43164  002436  0E00               	movlw	high fat_modify_file@root
 43165  002438  6E31               	movwf	fat_get_file_information@data+1,c
 43166  00243A  0100               	movlb	0	; () banked
 43167  00243C  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 43168  00243E  ECFC  F043         	call	_fat_get_file_information
 43169  002442  0100               	movlb	0	; () banked
 43170  002444  6F65               	movwf	fat_modify_file@return_code& (0+255),b
 43171                           
 43172                           ; BSR set to: 0
 43173                           ;fat16.c: 974: if(return_code!=0x00)
 43174  002446  5165               	movf	fat_modify_file@return_code& (0+255),w,b
 43175  002448  B4D8               	btfsc	status,2,c
 43176  00244A  D002               	goto	l2154
 43177                           
 43178                           ; BSR set to: 0
 43179                           ;fat16.c: 975: {;fat16.c: 977: return return_code;
 43180  00244C  5165               	movf	fat_modify_file@return_code& (0+255),w,b
 43181                           
 43182                           ; BSR set to: 0
 43183  00244E  0012               	return	
 43184  002450                     l2154:
 43185                           
 43186                           ; BSR set to: 0
 43187                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 43188                           
 43189                           ; BSR set to: 0
 43190  002450  5042               	movf	fat_modify_file@start_byte,w,c
 43191  002452  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 43192  002454  5043               	movf	fat_modify_file@start_byte+1,w,c
 43193  002456  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 43194  002458  5044               	movf	fat_modify_file@start_byte+2,w,c
 43195  00245A  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 43196  00245C  5045               	movf	fat_modify_file@start_byte+3,w,c
 43197  00245E  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 43198  002460  B0D8               	btfsc	status,0,c
 43199  002462  D002               	goto	l2156
 43200                           
 43201                           ; BSR set to: 0
 43202                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;
 43203  002464  0EF0               	movlw	240
 43204                           
 43205                           ; BSR set to: 0
 43206  002466  0012               	return	
 43207  002468                     l2156:
 43208                           
 43209                           ; BSR set to: 0
 43210                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 43211                           
 43212                           ; BSR set to: 0
 43213  002468  5046               	movf	fat_modify_file@length,w,c
 43214  00246A  2442               	addwf	fat_modify_file@start_byte,w,c
 43215  00246C  6E4A               	movwf	??_fat_modify_file& (0+255),c
 43216  00246E  5047               	movf	fat_modify_file@length+1,w,c
 43217  002470  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 43218  002472  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 43219  002474  0E00               	movlw	0
 43220  002476  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 43221  002478  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 43222  00247A  0E00               	movlw	0
 43223  00247C  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 43224  00247E  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 43225  002480  504A               	movf	??_fat_modify_file,w,c
 43226  002482  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 43227  002484  504B               	movf	??_fat_modify_file+1,w,c
 43228  002486  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 43229  002488  504C               	movf	??_fat_modify_file+2,w,c
 43230  00248A  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 43231  00248C  504D               	movf	??_fat_modify_file+3,w,c
 43232  00248E  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 43233  002490  B0D8               	btfsc	status,0,c
 43234  002492  D00E               	goto	l2157
 43235                           
 43236                           ; BSR set to: 0
 43237                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 43238  002494  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 43239  002498  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 43240  00249C  1E4A               	comf	??_fat_modify_file,f,c
 43241  00249E  1E4B               	comf	??_fat_modify_file+1,f,c
 43242  0024A0  4A4A               	infsnz	??_fat_modify_file,f,c
 43243  0024A2  2A4B               	incf	??_fat_modify_file+1,f,c
 43244  0024A4  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 43245  0024A6  244A               	addwf	??_fat_modify_file,w,c
 43246  0024A8  6E46               	movwf	fat_modify_file@length,c
 43247  0024AA  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 43248  0024AC  204B               	addwfc	??_fat_modify_file+1,w,c
 43249  0024AE  6E47               	movwf	fat_modify_file@length+1,c
 43250  0024B0                     l2157:
 43251                           
 43252                           ; BSR set to: 0
 43253                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 43254                           
 43255                           ; BSR set to: 0
 43256  0024B0  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 43257  0024B4  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 43258  0024B8  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 43259  0024BC  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 43260  0024C0  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 43261  0024C4  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 43262  0024C8  0E0A               	movlw	10
 43263  0024CA  D005               	goto	u10310
 43264  0024CC                     u10315:
 43265  0024CC  90D8               	bcf	status,0,c
 43266  0024CE  324D               	rrcf	??_fat_modify_file+3,f,c
 43267  0024D0  324C               	rrcf	??_fat_modify_file+2,f,c
 43268  0024D2  324B               	rrcf	??_fat_modify_file+1,f,c
 43269  0024D4  324A               	rrcf	??_fat_modify_file,f,c
 43270  0024D6                     u10310:
 43271  0024D6  2EE8               	decfsz	wreg,f,c
 43272  0024D8  D7F9               	goto	u10315
 43273  0024DA  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 43274  0024DE  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 43275  0024E2  ECFC  F03F         	call	__find_nth_cluster	;wreg free
 43276  0024E6  C038  F063         	movff	?__find_nth_cluster,fat_modify_file@cluster
 43277  0024EA  C039  F064         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 43278                           
 43279                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 43280  0024EE  0E00               	movlw	0
 43281  0024F0  1442               	andwf	fat_modify_file@start_byte,w,c
 43282  0024F2  0100               	movlb	0	; () banked
 43283  0024F4  6F6A               	movwf	fat_modify_file@position& (0+255),b
 43284  0024F6  0EFE               	movlw	254
 43285  0024F8  1443               	andwf	fat_modify_file@start_byte+1,w,c
 43286  0024FA  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 43287  0024FC  0EFF               	movlw	255
 43288  0024FE  1444               	andwf	fat_modify_file@start_byte+2,w,c
 43289  002500  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 43290  002502  0EFF               	movlw	255
 43291  002504  1445               	andwf	fat_modify_file@start_byte+3,w,c
 43292  002506  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 43293                           
 43294                           ; BSR set to: 0
 43295                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 43296  002508  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 43297  00250C  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 43298  002510  1E4A               	comf	??_fat_modify_file,f,c
 43299  002512  1E4B               	comf	??_fat_modify_file+1,f,c
 43300  002514  4A4A               	infsnz	??_fat_modify_file,f,c
 43301  002516  2A4B               	incf	??_fat_modify_file+1,f,c
 43302  002518  5042               	movf	fat_modify_file@start_byte,w,c
 43303  00251A  244A               	addwf	??_fat_modify_file,w,c
 43304  00251C  6F66               	movwf	fat_modify_file@offset& (0+255),b
 43305  00251E  5043               	movf	fat_modify_file@start_byte+1,w,c
 43306  002520  204B               	addwfc	??_fat_modify_file+1,w,c
 43307  002522  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 43308                           
 43309                           ; BSR set to: 0
 43310                           ;fat16.c: 1003: position = 0;
 43311  002524  0E00               	movlw	0
 43312  002526  6F6A               	movwf	fat_modify_file@position& (0+255),b
 43313  002528  0E00               	movlw	0
 43314  00252A  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 43315  00252C  0E00               	movlw	0
 43316  00252E  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 43317  002530  0E00               	movlw	0
 43318  002532  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 43319                           
 43320                           ;fat16.c: 1004: while(position < length)
 43321  002534  D089               	goto	l2158
 43322  002536                     
 43323                           ; BSR set to: 0
 43324                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 43325                           
 43326                           ; BSR set to: 0
 43327  002536  0E02               	movlw	2
 43328  002538  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 43329  00253A  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 43330  00253C  A4D8               	btfss	status,2,c
 43331  00253E  D00F               	goto	l2160
 43332                           
 43333                           ; BSR set to: 0
 43334                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 43335  002540  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 43336  002544  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 43337  002548  ECE8  F048         	call	__read_fat	;wreg free
 43338  00254C  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 43339  002550  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 43340                           
 43341                           ;fat16.c: 1012: offset = 0;
 43342  002554  0E00               	movlw	0
 43343  002556  0100               	movlb	0	; () banked
 43344  002558  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 43345  00255A  0E00               	movlw	0
 43346  00255C  6F66               	movwf	fat_modify_file@offset& (0+255),b
 43347  00255E                     l2160:
 43348                           
 43349                           ; BSR set to: 0
 43350                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 43351                           
 43352                           ; BSR set to: 0
 43353  00255E  C063  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 43354  002562  C064  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 43355  002566  EC29  F050         	call	__data_sector_from_cluster	;wreg free
 43356  00256A  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 43357  00256E  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 43358                           
 43359                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 43360  002572  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 43361  002576  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 43362  00257A  1E4A               	comf	??_fat_modify_file,f,c
 43363  00257C  1E4B               	comf	??_fat_modify_file+1,f,c
 43364  00257E  4A4A               	infsnz	??_fat_modify_file,f,c
 43365  002580  2A4B               	incf	??_fat_modify_file+1,f,c
 43366  002582  0E00               	movlw	0
 43367  002584  244A               	addwf	??_fat_modify_file,w,c
 43368  002586  0100               	movlb	0	; () banked
 43369  002588  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 43370  00258A  0E02               	movlw	2
 43371  00258C  204B               	addwfc	??_fat_modify_file+1,w,c
 43372  00258E  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 43373                           
 43374                           ; BSR set to: 0
 43375                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 43376  002590  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 43377  002592  6E4A               	movwf	??_fat_modify_file& (0+255),c
 43378  002594  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 43379  002596  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 43380  002598  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 43381  00259A  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 43382  00259C  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 43383  0025A0  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 43384  0025A4  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 43385  0025A8  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 43386  0025AC  1E4E               	comf	??_fat_modify_file+4,f,c
 43387  0025AE  1E4F               	comf	??_fat_modify_file+5,f,c
 43388  0025B0  1E50               	comf	??_fat_modify_file+6,f,c
 43389  0025B2  1E51               	comf	??_fat_modify_file+7,f,c
 43390  0025B4  2A4E               	incf	??_fat_modify_file+4,f,c
 43391  0025B6  0E00               	movlw	0
 43392  0025B8  224F               	addwfc	??_fat_modify_file+5,f,c
 43393  0025BA  2250               	addwfc	??_fat_modify_file+6,f,c
 43394  0025BC  2251               	addwfc	??_fat_modify_file+7,f,c
 43395  0025BE  5046               	movf	fat_modify_file@length,w,c
 43396  0025C0  244E               	addwf	??_fat_modify_file+4,w,c
 43397  0025C2  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 43398  0025C4  5047               	movf	fat_modify_file@length+1,w,c
 43399  0025C6  204F               	addwfc	??_fat_modify_file+5,w,c
 43400  0025C8  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 43401  0025CA  0E00               	movlw	0
 43402  0025CC  2050               	addwfc	??_fat_modify_file+6,w,c
 43403  0025CE  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 43404  0025D0  0E00               	movlw	0
 43405  0025D2  2051               	addwfc	??_fat_modify_file+7,w,c
 43406  0025D4  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 43407  0025D6  504A               	movf	??_fat_modify_file,w,c
 43408  0025D8  5C52               	subwf	??_fat_modify_file+8,w,c
 43409  0025DA  504B               	movf	??_fat_modify_file+1,w,c
 43410  0025DC  5853               	subwfb	??_fat_modify_file+9,w,c
 43411  0025DE  504C               	movf	??_fat_modify_file+2,w,c
 43412  0025E0  5854               	subwfb	??_fat_modify_file+10,w,c
 43413  0025E2  504D               	movf	??_fat_modify_file+3,w,c
 43414  0025E4  5855               	subwfb	??_fat_modify_file+11,w,c
 43415  0025E6  B0D8               	btfsc	status,0,c
 43416  0025E8  D00E               	goto	l2161
 43417                           
 43418                           ; BSR set to: 0
 43419                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 43420  0025EA  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 43421  0025EE  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 43422  0025F2  1E4A               	comf	??_fat_modify_file,f,c
 43423  0025F4  1E4B               	comf	??_fat_modify_file+1,f,c
 43424  0025F6  4A4A               	infsnz	??_fat_modify_file,f,c
 43425  0025F8  2A4B               	incf	??_fat_modify_file+1,f,c
 43426  0025FA  5046               	movf	fat_modify_file@length,w,c
 43427  0025FC  244A               	addwf	??_fat_modify_file,w,c
 43428  0025FE  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 43429  002600  5047               	movf	fat_modify_file@length+1,w,c
 43430  002602  204B               	addwfc	??_fat_modify_file+1,w,c
 43431  002604  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 43432  002606                     l2161:
 43433                           
 43434                           ; BSR set to: 0
 43435                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 43436                           
 43437                           ; BSR set to: 0
 43438  002606  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 43439  00260A  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 43440  00260E  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 43441  002612  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 43442  002616  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 43443  00261A  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 43444  00261E  516A               	movf	fat_modify_file@position& (0+255),w,b
 43445  002620  2448               	addwf	fat_modify_file@data,w,c
 43446  002622  6E26               	movwf	flash_partial_write@data,c
 43447  002624  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 43448  002626  2049               	addwfc	fat_modify_file@data+1,w,c
 43449  002628  6E27               	movwf	flash_partial_write@data+1,c
 43450  00262A  EC6D  F044         	call	_flash_partial_write	;wreg free
 43451                           
 43452                           ;fat16.c: 1029: position += number_of_bytes;
 43453  00262E  0100               	movlb	0	; () banked
 43454  002630  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 43455  002632  276A               	addwf	fat_modify_file@position& (0+255),f,b
 43456  002634  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 43457  002636  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 43458  002638  0E00               	movlw	0
 43459  00263A  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 43460  00263C  0E00               	movlw	0
 43461  00263E  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 43462                           
 43463                           ; BSR set to: 0
 43464                           ;fat16.c: 1030: offset += number_of_bytes;
 43465  002640  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 43466  002642  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 43467  002644  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 43468  002646  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 43469  002648                     l2158:
 43470                           
 43471                           ; BSR set to: 0
 43472                           
 43473                           ; BSR set to: 0
 43474  002648  5046               	movf	fat_modify_file@length,w,c
 43475  00264A  6E4A               	movwf	??_fat_modify_file& (0+255),c
 43476  00264C  5047               	movf	fat_modify_file@length+1,w,c
 43477  00264E  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 43478  002650  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 43479  002652  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 43480  002654  504A               	movf	??_fat_modify_file,w,c
 43481  002656  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 43482  002658  504B               	movf	??_fat_modify_file+1,w,c
 43483  00265A  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 43484  00265C  504C               	movf	??_fat_modify_file+2,w,c
 43485  00265E  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 43486  002660  504D               	movf	??_fat_modify_file+3,w,c
 43487  002662  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 43488  002664  A0D8               	btfss	status,0,c
 43489  002666  D767               	goto	l2159
 43490                           
 43491                           ; BSR set to: 0
 43492                           ;fat16.c: 1031: };fat16.c: 1033: return 0x00;
 43493                           
 43494                           ; BSR set to: 0
 43495  002668  0E00               	movlw	0
 43496  00266A  0012               	return	
 43497  00266C                     __end_of_fat_modify_file:
 43498                           	opt stack 0
 43499                           tosu	equ	0xFFF
 43500                           tosh	equ	0xFFE
 43501                           tosl	equ	0xFFD
 43502                           pclath	equ	0xFFA
 43503                           tblptru	equ	0xFF8
 43504                           tblptrh	equ	0xFF7
 43505                           tblptrl	equ	0xFF6
 43506                           tablat	equ	0xFF5
 43507                           prodh	equ	0xFF4
 43508                           prodl	equ	0xFF3
 43509                           intcon	equ	0xFF2
 43510                           intcon2	equ	0xFF1
 43511                           intcon3	equ	0xFF0
 43512                           indf0	equ	0xFEF
 43513                           postinc0	equ	0xFEE
 43514                           fsr0h	equ	0xFEA
 43515                           fsr0l	equ	0xFE9
 43516                           wreg	equ	0xFE8
 43517                           indf1	equ	0xFE7
 43518                           postdec1	equ	0xFE5
 43519                           plusw1	equ	0xFE3
 43520                           fsr1h	equ	0xFE2
 43521                           fsr1l	equ	0xFE1
 43522                           indf2	equ	0xFDF
 43523                           postinc2	equ	0xFDE
 43524                           postdec2	equ	0xFDD
 43525                           plusw2	equ	0xFDB
 43526                           fsr2h	equ	0xFDA
 43527                           fsr2l	equ	0xFD9
 43528                           status	equ	0xFD8
 43529                           
 43530 ;; *************** function _flash_partial_write *****************
 43531 ;; Defined at:
 43532 ;;		line 495 in file "flash.c"
 43533 ;; Parameters:    Size  Location     Type
 43534 ;;  page            2   31[COMRAM] unsigned int 
 43535 ;;  start           2   33[COMRAM] unsigned int 
 43536 ;;  length          2   35[COMRAM] unsigned int 
 43537 ;;  data            2   37[COMRAM] PTR unsigned char 
 43538 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 43539 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 43540 ;; Auto vars:     Size  Location     Type
 43541 ;;  match           1   39[COMRAM] enum E6910
 43542 ;; Return value:  Size  Location     Type
 43543 ;;                  1    wreg      void 
 43544 ;; Registers used:
 43545 ;;		wreg, status,2, status,0, cstack
 43546 ;; Tracked objects:
 43547 ;;		On entry : 0/0
 43548 ;;		On exit  : 0/0
 43549 ;;		Unchanged: 0/0
 43550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43554 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43555 ;;Total ram usage:        9 bytes
 43556 ;; Hardware stack levels used:    1
 43557 ;; Hardware stack levels required when called:    4
 43558 ;; This function calls:
 43559 ;;		__flash_compare_page_to_buffer
 43560 ;;		__flash_copy_page_to_buffer
 43561 ;;		__flash_is_busy
 43562 ;;		__flash_write_page_from_buffer
 43563 ;;		__flash_write_to_buffer
 43564 ;;		_spi_set_configuration
 43565 ;; This function is called by:
 43566 ;;		__write_root
 43567 ;;		__delete_root
 43568 ;;		_fat_modify_file
 43569 ;; This function uses a non-reentrant model
 43570 ;;
 43571                           
 43572                           	psect	text215
 43573  0088DA                     __ptext215:
 43574                           	opt stack 0
 43575  0088DA                     _flash_partial_write:
 43576                           	opt stack 21
 43577                           
 43578                           ;flash.c: 497: flashMatchResult_t match;;flash.c: 500: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 43579                           
 43580                           ; BSR set to: 0
 43581                           ;incstack = 0
 43582  0088DA  0E00               	movlw	0
 43583  0088DC  EC06  F02A         	call	_spi_set_configuration
 43584  0088E0  ECF6  F04E         	call	__flash_is_busy	;wreg free
 43585  0088E4  0900               	iorlw	0
 43586  0088E6  A4D8               	btfss	status,2,c
 43587  0088E8  D7FB               	goto	l1885
 43588                           
 43589                           ;flash.c: 506: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 43590  0088EA  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 43591  0088EE  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 43592  0088F2  0E00               	movlw	0
 43593  0088F4  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 43594  0088F6  ECB9  F047         	call	__flash_copy_page_to_buffer	;wreg free
 43595                           
 43596                           ;flash.c: 509: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 43597  0088FA  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 43598  0088FE  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 43599  008902  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 43600  008906  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 43601  00890A  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 43602  00890E  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 43603  008912  0E00               	movlw	0
 43604  008914  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 43605  008916  EC0B  F04A         	call	__flash_write_to_buffer	;wreg free
 43606                           
 43607                           ;flash.c: 512: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 43608  00891A  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 43609  00891E  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 43610  008922  0E00               	movlw	0
 43611  008924  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 43612  008926  EC4B  F043         	call	__flash_compare_page_to_buffer	;wreg free
 43613  00892A  6E28               	movwf	flash_partial_write@match,c
 43614                           
 43615                           ;flash.c: 515: if(match==DATA_DOES_NOT_MATCH)
 43616  00892C  0428               	decf	flash_partial_write@match,w,c
 43617  00892E  A4D8               	btfss	status,2,c
 43618  008930  D008               	goto	l1887
 43619                           
 43620                           ;flash.c: 516: {;flash.c: 517: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 43621  008932  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 43622  008936  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 43623  00893A  0E00               	movlw	0
 43624  00893C  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 43625  00893E  EC8D  F047         	call	__flash_write_page_from_buffer	;wreg free
 43626  008942                     l1887:
 43627                           
 43628                           ;flash.c: 518: };flash.c: 521: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 43629  008942  0E01               	movlw	1
 43630  008944  EC06  F02A         	call	_spi_set_configuration
 43631  008948  0012               	return		;funcret
 43632  00894A                     __end_of_flash_partial_write:
 43633                           	opt stack 0
 43634                           tosu	equ	0xFFF
 43635                           tosh	equ	0xFFE
 43636                           tosl	equ	0xFFD
 43637                           pclath	equ	0xFFA
 43638                           tblptru	equ	0xFF8
 43639                           tblptrh	equ	0xFF7
 43640                           tblptrl	equ	0xFF6
 43641                           tablat	equ	0xFF5
 43642                           prodh	equ	0xFF4
 43643                           prodl	equ	0xFF3
 43644                           intcon	equ	0xFF2
 43645                           intcon2	equ	0xFF1
 43646                           intcon3	equ	0xFF0
 43647                           indf0	equ	0xFEF
 43648                           postinc0	equ	0xFEE
 43649                           fsr0h	equ	0xFEA
 43650                           fsr0l	equ	0xFE9
 43651                           wreg	equ	0xFE8
 43652                           indf1	equ	0xFE7
 43653                           postdec1	equ	0xFE5
 43654                           plusw1	equ	0xFE3
 43655                           fsr1h	equ	0xFE2
 43656                           fsr1l	equ	0xFE1
 43657                           indf2	equ	0xFDF
 43658                           postinc2	equ	0xFDE
 43659                           postdec2	equ	0xFDD
 43660                           plusw2	equ	0xFDB
 43661                           fsr2h	equ	0xFDA
 43662                           fsr2l	equ	0xFD9
 43663                           status	equ	0xFD8
 43664                           
 43665 ;; *************** function __flash_write_to_buffer *****************
 43666 ;; Defined at:
 43667 ;;		line 236 in file "flash.c"
 43668 ;; Parameters:    Size  Location     Type
 43669 ;;  start           2   19[COMRAM] unsigned int 
 43670 ;;  data            2   21[COMRAM] PTR unsigned char 
 43671 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 43672 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 43673 ;;  data_length     2   23[COMRAM] unsigned int 
 43674 ;;  buffer          1   25[COMRAM] enum E6906
 43675 ;; Auto vars:     Size  Location     Type
 43676 ;;  command         4   26[COMRAM] unsigned char [4]
 43677 ;; Return value:  Size  Location     Type
 43678 ;;                  1    wreg      void 
 43679 ;; Registers used:
 43680 ;;		wreg, status,2, status,0, cstack
 43681 ;; Tracked objects:
 43682 ;;		On entry : 0/0
 43683 ;;		On exit  : 0/0
 43684 ;;		Unchanged: 0/0
 43685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43686 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43687 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43689 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43690 ;;Total ram usage:       11 bytes
 43691 ;; Hardware stack levels used:    1
 43692 ;; Hardware stack levels required when called:    3
 43693 ;; This function calls:
 43694 ;;		__flash_is_busy
 43695 ;;		_spi_tx_tx
 43696 ;; This function is called by:
 43697 ;;		_flash_sector_write
 43698 ;;		_flash_partial_write
 43699 ;;		_flash_write_to_buffer
 43700 ;; This function uses a non-reentrant model
 43701 ;;
 43702                           
 43703                           	psect	text216
 43704  009416                     __ptext216:
 43705                           	opt stack 0
 43706  009416                     __flash_write_to_buffer:
 43707                           	opt stack 23
 43708                           
 43709                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 43710                           
 43711                           ;incstack = 0
 43712  009416  ECF6  F04E         	call	__flash_is_busy	;wreg free
 43713  00941A  0900               	iorlw	0
 43714  00941C  A4D8               	btfss	status,2,c
 43715  00941E  D7FB               	goto	__flash_write_to_buffer
 43716                           
 43717                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 43718  009420  501A               	movf	__flash_write_to_buffer@buffer,w,c
 43719  009422  A4D8               	btfss	status,2,c
 43720  009424  D002               	goto	l1818
 43721                           
 43722                           ;flash.c: 245: command[0] = 0x84;
 43723  009426  0E84               	movlw	132
 43724  009428  6E1B               	movwf	__flash_write_to_buffer@command,c
 43725  00942A                     l1818:
 43726                           
 43727                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 43728  00942A  041A               	decf	__flash_write_to_buffer@buffer,w,c
 43729  00942C  A4D8               	btfss	status,2,c
 43730  00942E  D002               	goto	l1819
 43731                           
 43732                           ;flash.c: 247: command[0] = 0x87;
 43733  009430  0E87               	movlw	135
 43734  009432  6E1B               	movwf	__flash_write_to_buffer@command,c
 43735  009434                     l1819:
 43736                           
 43737                           ;flash.c: 249: command[1] = 0x00;
 43738  009434  0E00               	movlw	0
 43739  009436  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 43740                           
 43741                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 43742  009438  5015               	movf	__flash_write_to_buffer@start+1,w,c
 43743  00943A  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 43744                           
 43745                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 43746  00943C  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 43747                           
 43748                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 43749  009440  0E1B               	movlw	low __flash_write_to_buffer@command
 43750  009442  6E01               	movwf	spi_tx_tx@command,c
 43751  009444  0E00               	movlw	high __flash_write_to_buffer@command
 43752  009446  6E02               	movwf	spi_tx_tx@command+1,c
 43753  009448  0E00               	movlw	0
 43754  00944A  6E04               	movwf	spi_tx_tx@command_length+1,c
 43755  00944C  0E04               	movlw	4
 43756  00944E  6E03               	movwf	spi_tx_tx@command_length,c
 43757  009450  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 43758  009454  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 43759  009458  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 43760  00945C  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 43761  009460  EC06  F042         	call	_spi_tx_tx	;wreg free
 43762  009464  0012               	return		;funcret
 43763  009466                     __end_of__flash_write_to_buffer:
 43764                           	opt stack 0
 43765                           tosu	equ	0xFFF
 43766                           tosh	equ	0xFFE
 43767                           tosl	equ	0xFFD
 43768                           pclath	equ	0xFFA
 43769                           tblptru	equ	0xFF8
 43770                           tblptrh	equ	0xFF7
 43771                           tblptrl	equ	0xFF6
 43772                           tablat	equ	0xFF5
 43773                           prodh	equ	0xFF4
 43774                           prodl	equ	0xFF3
 43775                           intcon	equ	0xFF2
 43776                           intcon2	equ	0xFF1
 43777                           intcon3	equ	0xFF0
 43778                           indf0	equ	0xFEF
 43779                           postinc0	equ	0xFEE
 43780                           fsr0h	equ	0xFEA
 43781                           fsr0l	equ	0xFE9
 43782                           wreg	equ	0xFE8
 43783                           indf1	equ	0xFE7
 43784                           postdec1	equ	0xFE5
 43785                           plusw1	equ	0xFE3
 43786                           fsr1h	equ	0xFE2
 43787                           fsr1l	equ	0xFE1
 43788                           indf2	equ	0xFDF
 43789                           postinc2	equ	0xFDE
 43790                           postdec2	equ	0xFDD
 43791                           plusw2	equ	0xFDB
 43792                           fsr2h	equ	0xFDA
 43793                           fsr2l	equ	0xFD9
 43794                           status	equ	0xFD8
 43795                           
 43796 ;; *************** function _spi_tx_tx *****************
 43797 ;; Defined at:
 43798 ;;		line 387 in file "spi.c"
 43799 ;; Parameters:    Size  Location     Type
 43800 ;;  command         2    0[COMRAM] PTR unsigned char 
 43801 ;;		 -> _flash_write_to_buffer@command(4), 
 43802 ;;  command_leng    2    2[COMRAM] unsigned int 
 43803 ;;  data            2    4[COMRAM] PTR unsigned char 
 43804 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 43805 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 43806 ;;  data_length     2    6[COMRAM] unsigned int 
 43807 ;; Auto vars:     Size  Location     Type
 43808 ;;		None
 43809 ;; Return value:  Size  Location     Type
 43810 ;;                  1    wreg      void 
 43811 ;; Registers used:
 43812 ;;		wreg, status,2, status,0
 43813 ;; Tracked objects:
 43814 ;;		On entry : 0/0
 43815 ;;		On exit  : 0/0
 43816 ;;		Unchanged: 0/0
 43817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43818 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43821 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43822 ;;Total ram usage:       12 bytes
 43823 ;; Hardware stack levels used:    1
 43824 ;; This function calls:
 43825 ;;		Nothing
 43826 ;; This function is called by:
 43827 ;;		__flash_write_to_buffer
 43828 ;; This function uses a non-reentrant model
 43829 ;;
 43830                           
 43831                           	psect	text217
 43832  00840C                     __ptext217:
 43833                           	opt stack 0
 43834  00840C                     _spi_tx_tx:
 43835                           	opt stack 25
 43836                           
 43837                           ;spi.c: 390: DMACON1bits.SSCON1 = 0;
 43838                           
 43839                           ;incstack = 0
 43840  00840C  9E88               	bcf	3976,7,c	;volatile
 43841                           
 43842                           ;spi.c: 391: DMACON1bits.SSCON0 = 0;
 43843  00840E  9C88               	bcf	3976,6,c	;volatile
 43844                           
 43845                           ;spi.c: 393: DMACON1bits.TXINC = 1;
 43846  008410  8A88               	bsf	3976,5,c	;volatile
 43847                           
 43848                           ;spi.c: 395: DMACON1bits.RXINC = 0;
 43849  008412  9888               	bcf	3976,4,c	;volatile
 43850                           
 43851                           ;spi.c: 397: DMACON1bits.DUPLEX1 = 0;
 43852  008414  9688               	bcf	3976,3,c	;volatile
 43853                           
 43854                           ;spi.c: 398: DMACON1bits.DUPLEX0 = 1;
 43855  008416  8488               	bsf	3976,2,c	;volatile
 43856                           
 43857                           ;spi.c: 400: DMACON1bits.DLYINTEN = 0;
 43858  008418  9288               	bcf	3976,1,c	;volatile
 43859                           
 43860                           ;spi.c: 402: DMACON2bits.DLYCYC = 0b0000;
 43861  00841A  9886               	bcf	3974,4,c	;volatile
 43862  00841C  9A86               	bcf	3974,5,c	;volatile
 43863  00841E  9C86               	bcf	3974,6,c	;volatile
 43864  008420  9E86               	bcf	3974,7,c	;volatile
 43865                           
 43866                           ;spi.c: 404: DMACON2bits.INTLVL = 0b0000;
 43867  008422  9086               	bcf	3974,0,c	;volatile
 43868  008424  9286               	bcf	3974,1,c	;volatile
 43869  008426  9486               	bcf	3974,2,c	;volatile
 43870  008428  9686               	bcf	3974,3,c	;volatile
 43871                           
 43872                           ;spi.c: 407: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 43873  00842A  5002               	movf	spi_tx_tx@command+1,w,c
 43874  00842C  6E6A               	movwf	3946,c	;volatile
 43875                           
 43876                           ;spi.c: 408: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 43877  00842E  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 43878                           
 43879                           ;spi.c: 411: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 43880  008432  0EFF               	movlw	255
 43881  008434  6E09               	movwf	??_spi_tx_tx& (0+255),c
 43882  008436  0EFF               	movlw	255
 43883  008438  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 43884  00843A  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 43885  00843E  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 43886  008442  5009               	movf	??_spi_tx_tx,w,c
 43887  008444  260B               	addwf	??_spi_tx_tx+2,f,c
 43888  008446  500A               	movf	??_spi_tx_tx+1,w,c
 43889  008448  220C               	addwfc	??_spi_tx_tx+3,f,c
 43890  00844A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 43891  00844E  6A0C               	clrf	??_spi_tx_tx+3,c
 43892  008450  500B               	movf	??_spi_tx_tx+2,w,c
 43893  008452  6E66               	movwf	3942,c	;volatile
 43894                           
 43895                           ;spi.c: 412: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 43896  008454  0403               	decf	spi_tx_tx@command_length,w,c
 43897  008456  6E67               	movwf	3943,c	;volatile
 43898                           
 43899                           ;spi.c: 415: LATDbits.LD7 = 0;
 43900  008458  9E8C               	bcf	3980,7,c	;volatile
 43901                           
 43902                           ;spi.c: 418: DMACON1bits.DMAEN = 1;
 43903  00845A  8088               	bsf	3976,0,c	;volatile
 43904  00845C  B088               	btfsc	3976,0,c	;volatile
 43905  00845E  D7FE               	goto	l3114
 43906                           
 43907                           ;spi.c: 422: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43908  008460  5006               	movf	spi_tx_tx@data+1,w,c
 43909  008462  6E6A               	movwf	3946,c	;volatile
 43910                           
 43911                           ;spi.c: 423: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43912  008464  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 43913                           
 43914                           ;spi.c: 426: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 43915  008468  0EFF               	movlw	255
 43916  00846A  6E09               	movwf	??_spi_tx_tx& (0+255),c
 43917  00846C  0EFF               	movlw	255
 43918  00846E  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 43919  008470  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 43920  008474  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 43921  008478  5009               	movf	??_spi_tx_tx,w,c
 43922  00847A  260B               	addwf	??_spi_tx_tx+2,f,c
 43923  00847C  500A               	movf	??_spi_tx_tx+1,w,c
 43924  00847E  220C               	addwfc	??_spi_tx_tx+3,f,c
 43925  008480  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 43926  008484  6A0C               	clrf	??_spi_tx_tx+3,c
 43927  008486  500B               	movf	??_spi_tx_tx+2,w,c
 43928  008488  6E66               	movwf	3942,c	;volatile
 43929                           
 43930                           ;spi.c: 427: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 43931  00848A  0407               	decf	spi_tx_tx@data_length,w,c
 43932  00848C  6E67               	movwf	3943,c	;volatile
 43933                           
 43934                           ;spi.c: 430: DMACON1bits.DMAEN = 1;
 43935  00848E  8088               	bsf	3976,0,c	;volatile
 43936  008490  B088               	btfsc	3976,0,c	;volatile
 43937  008492  D7FE               	goto	l3117
 43938                           
 43939                           ;spi.c: 434: LATDbits.LD7 = 1;
 43940  008494  8E8C               	bsf	3980,7,c	;volatile
 43941  008496  0012               	return		;funcret
 43942  008498                     __end_of_spi_tx_tx:
 43943                           	opt stack 0
 43944                           tosu	equ	0xFFF
 43945                           tosh	equ	0xFFE
 43946                           tosl	equ	0xFFD
 43947                           pclath	equ	0xFFA
 43948                           tblptru	equ	0xFF8
 43949                           tblptrh	equ	0xFF7
 43950                           tblptrl	equ	0xFF6
 43951                           tablat	equ	0xFF5
 43952                           prodh	equ	0xFF4
 43953                           prodl	equ	0xFF3
 43954                           intcon	equ	0xFF2
 43955                           intcon2	equ	0xFF1
 43956                           intcon3	equ	0xFF0
 43957                           indf0	equ	0xFEF
 43958                           postinc0	equ	0xFEE
 43959                           fsr0h	equ	0xFEA
 43960                           fsr0l	equ	0xFE9
 43961                           wreg	equ	0xFE8
 43962                           indf1	equ	0xFE7
 43963                           postdec1	equ	0xFE5
 43964                           plusw1	equ	0xFE3
 43965                           fsr1h	equ	0xFE2
 43966                           fsr1l	equ	0xFE1
 43967                           indf2	equ	0xFDF
 43968                           postinc2	equ	0xFDE
 43969                           postdec2	equ	0xFDD
 43970                           plusw2	equ	0xFDB
 43971                           fsr2h	equ	0xFDA
 43972                           fsr2l	equ	0xFD9
 43973                           status	equ	0xFD8
 43974                           
 43975 ;; *************** function __flash_write_page_from_buffer *****************
 43976 ;; Defined at:
 43977 ;;		line 258 in file "flash.c"
 43978 ;; Parameters:    Size  Location     Type
 43979 ;;  page            2   19[COMRAM] unsigned int 
 43980 ;;  buffer          1   21[COMRAM] enum E6906
 43981 ;; Auto vars:     Size  Location     Type
 43982 ;;  command         4   25[COMRAM] unsigned char [4]
 43983 ;; Return value:  Size  Location     Type
 43984 ;;                  1    wreg      void 
 43985 ;; Registers used:
 43986 ;;		wreg, status,2, status,0, cstack
 43987 ;; Tracked objects:
 43988 ;;		On entry : 0/0
 43989 ;;		On exit  : 0/0
 43990 ;;		Unchanged: 0/0
 43991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43993 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43994 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43995 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43996 ;;Total ram usage:       10 bytes
 43997 ;; Hardware stack levels used:    1
 43998 ;; Hardware stack levels required when called:    3
 43999 ;; This function calls:
 44000 ;;		__flash_is_busy
 44001 ;;		_spi_tx
 44002 ;; This function is called by:
 44003 ;;		_flash_sector_write
 44004 ;;		_flash_partial_write
 44005 ;;		_flash_write_page_from_buffer
 44006 ;; This function uses a non-reentrant model
 44007 ;;
 44008                           
 44009                           	psect	text218
 44010  008F1A                     __ptext218:
 44011                           	opt stack 0
 44012  008F1A                     __flash_write_page_from_buffer:
 44013                           	opt stack 23
 44014                           
 44015                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 44016                           
 44017                           ;incstack = 0
 44018  008F1A  ECF6  F04E         	call	__flash_is_busy	;wreg free
 44019  008F1E  0900               	iorlw	0
 44020  008F20  A4D8               	btfss	status,2,c
 44021  008F22  D7FB               	goto	__flash_write_page_from_buffer
 44022                           
 44023                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 44024  008F24  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 44025  008F26  A4D8               	btfss	status,2,c
 44026  008F28  D002               	goto	l1826
 44027                           
 44028                           ;flash.c: 267: command[0] = 0x83;
 44029  008F2A  0E83               	movlw	131
 44030  008F2C  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 44031  008F2E                     l1826:
 44032                           
 44033                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 44034  008F2E  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 44035  008F30  A4D8               	btfss	status,2,c
 44036  008F32  D002               	goto	l1827
 44037                           
 44038                           ;flash.c: 269: command[0] = 0x86;
 44039  008F34  0E86               	movlw	134
 44040  008F36  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 44041  008F38                     l1827:
 44042                           
 44043                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 44044  008F38  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 44045  008F3C  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 44046  008F40  0E07               	movlw	7
 44047  008F42  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 44048  008F44                     u7925:
 44049  008F44  90D8               	bcf	status,0,c
 44050  008F46  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 44051  008F48  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 44052  008F4A  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 44053  008F4C  D7FB               	goto	u7925
 44054  008F4E  5017               	movf	??__flash_write_page_from_buffer,w,c
 44055  008F50  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 44056                           
 44057                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 44058  008F52  5014               	movf	__flash_write_page_from_buffer@page,w,c
 44059  008F54  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 44060  008F56  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 44061                           
 44062                           ;flash.c: 273: command[3] = 0x00;
 44063  008F58  0E00               	movlw	0
 44064  008F5A  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 44065                           
 44066                           ;flash.c: 276: spi_tx(command, 4);
 44067  008F5C  0E1A               	movlw	low __flash_write_page_from_buffer@command
 44068  008F5E  6E01               	movwf	spi_tx@data,c
 44069  008F60  0E00               	movlw	high __flash_write_page_from_buffer@command
 44070  008F62  6E02               	movwf	spi_tx@data+1,c
 44071  008F64  0E00               	movlw	0
 44072  008F66  6E04               	movwf	spi_tx@length+1,c
 44073  008F68  0E04               	movlw	4
 44074  008F6A  6E03               	movwf	spi_tx@length,c
 44075  008F6C  ECE5  F047         	call	_spi_tx	;wreg free
 44076  008F70  0012               	return		;funcret
 44077  008F72                     __end_of__flash_write_page_from_buffer:
 44078                           	opt stack 0
 44079                           tosu	equ	0xFFF
 44080                           tosh	equ	0xFFE
 44081                           tosl	equ	0xFFD
 44082                           pclath	equ	0xFFA
 44083                           tblptru	equ	0xFF8
 44084                           tblptrh	equ	0xFF7
 44085                           tblptrl	equ	0xFF6
 44086                           tablat	equ	0xFF5
 44087                           prodh	equ	0xFF4
 44088                           prodl	equ	0xFF3
 44089                           intcon	equ	0xFF2
 44090                           intcon2	equ	0xFF1
 44091                           intcon3	equ	0xFF0
 44092                           indf0	equ	0xFEF
 44093                           postinc0	equ	0xFEE
 44094                           fsr0h	equ	0xFEA
 44095                           fsr0l	equ	0xFE9
 44096                           wreg	equ	0xFE8
 44097                           indf1	equ	0xFE7
 44098                           postdec1	equ	0xFE5
 44099                           plusw1	equ	0xFE3
 44100                           fsr1h	equ	0xFE2
 44101                           fsr1l	equ	0xFE1
 44102                           indf2	equ	0xFDF
 44103                           postinc2	equ	0xFDE
 44104                           postdec2	equ	0xFDD
 44105                           plusw2	equ	0xFDB
 44106                           fsr2h	equ	0xFDA
 44107                           fsr2l	equ	0xFD9
 44108                           status	equ	0xFD8
 44109                           
 44110 ;; *************** function __flash_copy_page_to_buffer *****************
 44111 ;; Defined at:
 44112 ;;		line 154 in file "flash.c"
 44113 ;; Parameters:    Size  Location     Type
 44114 ;;  page            2   19[COMRAM] unsigned int 
 44115 ;;  buffer          1   21[COMRAM] enum E6906
 44116 ;; Auto vars:     Size  Location     Type
 44117 ;;  command         4   25[COMRAM] unsigned char [4]
 44118 ;; Return value:  Size  Location     Type
 44119 ;;                  1    wreg      void 
 44120 ;; Registers used:
 44121 ;;		wreg, status,2, status,0, cstack
 44122 ;; Tracked objects:
 44123 ;;		On entry : 0/0
 44124 ;;		On exit  : 0/0
 44125 ;;		Unchanged: 0/0
 44126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44130 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44131 ;;Total ram usage:       10 bytes
 44132 ;; Hardware stack levels used:    1
 44133 ;; Hardware stack levels required when called:    3
 44134 ;; This function calls:
 44135 ;;		__flash_is_busy
 44136 ;;		_spi_tx
 44137 ;; This function is called by:
 44138 ;;		_flash_partial_write
 44139 ;;		_flash_copy_page_to_buffer
 44140 ;; This function uses a non-reentrant model
 44141 ;;
 44142                           
 44143                           	psect	text219
 44144  008F72                     __ptext219:
 44145                           	opt stack 0
 44146  008F72                     __flash_copy_page_to_buffer:
 44147                           	opt stack 22
 44148                           
 44149                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 44150                           
 44151                           ;incstack = 0
 44152  008F72  ECF6  F04E         	call	__flash_is_busy	;wreg free
 44153  008F76  0900               	iorlw	0
 44154  008F78  A4D8               	btfss	status,2,c
 44155  008F7A  D7FB               	goto	__flash_copy_page_to_buffer
 44156                           
 44157                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 44158  008F7C  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 44159  008F7E  A4D8               	btfss	status,2,c
 44160  008F80  D002               	goto	l1791
 44161                           
 44162                           ;flash.c: 163: command[0] = 0x53;
 44163  008F82  0E53               	movlw	83
 44164  008F84  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 44165  008F86                     l1791:
 44166                           
 44167                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 44168  008F86  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 44169  008F88  A4D8               	btfss	status,2,c
 44170  008F8A  D002               	goto	l1792
 44171                           
 44172                           ;flash.c: 165: command[0] = 0x55;
 44173  008F8C  0E55               	movlw	85
 44174  008F8E  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 44175  008F90                     l1792:
 44176                           
 44177                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 44178  008F90  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 44179  008F94  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 44180  008F98  0E07               	movlw	7
 44181  008F9A  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 44182  008F9C                     u7795:
 44183  008F9C  90D8               	bcf	status,0,c
 44184  008F9E  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 44185  008FA0  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 44186  008FA2  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 44187  008FA4  D7FB               	goto	u7795
 44188  008FA6  5017               	movf	??__flash_copy_page_to_buffer,w,c
 44189  008FA8  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 44190                           
 44191                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 44192  008FAA  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 44193  008FAC  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 44194  008FAE  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 44195                           
 44196                           ;flash.c: 169: command[3] = 0x00;
 44197  008FB0  0E00               	movlw	0
 44198  008FB2  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 44199                           
 44200                           ;flash.c: 172: spi_tx(command, 4);
 44201  008FB4  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 44202  008FB6  6E01               	movwf	spi_tx@data,c
 44203  008FB8  0E00               	movlw	high __flash_copy_page_to_buffer@command
 44204  008FBA  6E02               	movwf	spi_tx@data+1,c
 44205  008FBC  0E00               	movlw	0
 44206  008FBE  6E04               	movwf	spi_tx@length+1,c
 44207  008FC0  0E04               	movlw	4
 44208  008FC2  6E03               	movwf	spi_tx@length,c
 44209  008FC4  ECE5  F047         	call	_spi_tx	;wreg free
 44210  008FC8  0012               	return		;funcret
 44211  008FCA                     __end_of__flash_copy_page_to_buffer:
 44212                           	opt stack 0
 44213                           tosu	equ	0xFFF
 44214                           tosh	equ	0xFFE
 44215                           tosl	equ	0xFFD
 44216                           pclath	equ	0xFFA
 44217                           tblptru	equ	0xFF8
 44218                           tblptrh	equ	0xFF7
 44219                           tblptrl	equ	0xFF6
 44220                           tablat	equ	0xFF5
 44221                           prodh	equ	0xFF4
 44222                           prodl	equ	0xFF3
 44223                           intcon	equ	0xFF2
 44224                           intcon2	equ	0xFF1
 44225                           intcon3	equ	0xFF0
 44226                           indf0	equ	0xFEF
 44227                           postinc0	equ	0xFEE
 44228                           fsr0h	equ	0xFEA
 44229                           fsr0l	equ	0xFE9
 44230                           wreg	equ	0xFE8
 44231                           indf1	equ	0xFE7
 44232                           postdec1	equ	0xFE5
 44233                           plusw1	equ	0xFE3
 44234                           fsr1h	equ	0xFE2
 44235                           fsr1l	equ	0xFE1
 44236                           indf2	equ	0xFDF
 44237                           postinc2	equ	0xFDE
 44238                           postdec2	equ	0xFDD
 44239                           plusw2	equ	0xFDB
 44240                           fsr2h	equ	0xFDA
 44241                           fsr2l	equ	0xFD9
 44242                           status	equ	0xFD8
 44243                           
 44244 ;; *************** function __flash_compare_page_to_buffer *****************
 44245 ;; Defined at:
 44246 ;;		line 176 in file "flash.c"
 44247 ;; Parameters:    Size  Location     Type
 44248 ;;  page            2   19[COMRAM] unsigned int 
 44249 ;;  buffer          1   21[COMRAM] enum E6906
 44250 ;; Auto vars:     Size  Location     Type
 44251 ;;  command         4   27[COMRAM] unsigned char [4]
 44252 ;;  status          2   25[COMRAM] unsigned int 
 44253 ;; Return value:  Size  Location     Type
 44254 ;;                  1    wreg      enum E6910
 44255 ;; Registers used:
 44256 ;;		wreg, status,2, status,0, cstack
 44257 ;; Tracked objects:
 44258 ;;		On entry : 0/0
 44259 ;;		On exit  : 0/0
 44260 ;;		Unchanged: 0/0
 44261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44262 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44263 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44264 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44265 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44266 ;;Total ram usage:       12 bytes
 44267 ;; Hardware stack levels used:    1
 44268 ;; Hardware stack levels required when called:    3
 44269 ;; This function calls:
 44270 ;;		__flash_get_status
 44271 ;;		__flash_is_busy
 44272 ;;		_spi_tx
 44273 ;; This function is called by:
 44274 ;;		_flash_sector_write
 44275 ;;		_flash_partial_write
 44276 ;; This function uses a non-reentrant model
 44277 ;;
 44278                           
 44279                           	psect	text220
 44280  008696                     __ptext220:
 44281                           	opt stack 0
 44282  008696                     __flash_compare_page_to_buffer:
 44283                           	opt stack 23
 44284                           
 44285                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 44286                           
 44287                           ;incstack = 0
 44288  008696  ECF6  F04E         	call	__flash_is_busy	;wreg free
 44289  00869A  0900               	iorlw	0
 44290  00869C  A4D8               	btfss	status,2,c
 44291  00869E  D7FB               	goto	__flash_compare_page_to_buffer
 44292                           
 44293                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 44294  0086A0  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 44295  0086A2  A4D8               	btfss	status,2,c
 44296  0086A4  D002               	goto	l1799
 44297                           
 44298                           ;flash.c: 186: command[0] = 0x60;
 44299  0086A6  0E60               	movlw	96
 44300  0086A8  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 44301  0086AA                     l1799:
 44302                           
 44303                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 44304  0086AA  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 44305  0086AC  A4D8               	btfss	status,2,c
 44306  0086AE  D002               	goto	l1800
 44307                           
 44308                           ;flash.c: 188: command[0] = 0x60;
 44309  0086B0  0E60               	movlw	96
 44310  0086B2  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 44311  0086B4                     l1800:
 44312                           
 44313                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 44314  0086B4  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 44315  0086B8  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 44316  0086BC  0E07               	movlw	7
 44317  0086BE  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 44318  0086C0                     u7835:
 44319  0086C0  90D8               	bcf	status,0,c
 44320  0086C2  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 44321  0086C4  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 44322  0086C6  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 44323  0086C8  D7FB               	goto	u7835
 44324  0086CA  5017               	movf	??__flash_compare_page_to_buffer,w,c
 44325  0086CC  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 44326                           
 44327                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 44328  0086CE  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 44329  0086D0  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 44330  0086D2  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 44331                           
 44332                           ;flash.c: 192: command[3] = 0x00;
 44333  0086D4  0E00               	movlw	0
 44334  0086D6  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 44335                           
 44336                           ;flash.c: 195: spi_tx(command, 4);
 44337  0086D8  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 44338  0086DA  6E01               	movwf	spi_tx@data,c
 44339  0086DC  0E00               	movlw	high __flash_compare_page_to_buffer@command
 44340  0086DE  6E02               	movwf	spi_tx@data+1,c
 44341  0086E0  0E00               	movlw	0
 44342  0086E2  6E04               	movwf	spi_tx@length+1,c
 44343  0086E4  0E04               	movlw	4
 44344  0086E6  6E03               	movwf	spi_tx@length,c
 44345  0086E8  ECE5  F047         	call	_spi_tx	;wreg free
 44346  0086EC  ECF6  F04E         	call	__flash_is_busy	;wreg free
 44347  0086F0  0900               	iorlw	0
 44348  0086F2  A4D8               	btfss	status,2,c
 44349  0086F4  D7FB               	goto	l1802
 44350                           
 44351                           ;flash.c: 201: status = _flash_get_status();
 44352  0086F6  EC0B  F04D         	call	__flash_get_status	;wreg free
 44353  0086FA  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 44354  0086FE  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 44355                           
 44356                           ;flash.c: 204: if(status & 0b0000000001000000)
 44357  008702  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 44358  008704  D002               	goto	l1804
 44359                           
 44360                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 44361  008706  0E01               	movlw	1
 44362                           
 44363                           ;flash.c: 208: }
 44364  008708  0012               	return	
 44365  00870A                     l1804:
 44366                           
 44367                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 44368  00870A  0E00               	movlw	0
 44369  00870C  0012               	return	
 44370  00870E                     __end_of__flash_compare_page_to_buffer:
 44371                           	opt stack 0
 44372                           tosu	equ	0xFFF
 44373                           tosh	equ	0xFFE
 44374                           tosl	equ	0xFFD
 44375                           pclath	equ	0xFFA
 44376                           tblptru	equ	0xFF8
 44377                           tblptrh	equ	0xFF7
 44378                           tblptrl	equ	0xFF6
 44379                           tablat	equ	0xFF5
 44380                           prodh	equ	0xFF4
 44381                           prodl	equ	0xFF3
 44382                           intcon	equ	0xFF2
 44383                           intcon2	equ	0xFF1
 44384                           intcon3	equ	0xFF0
 44385                           indf0	equ	0xFEF
 44386                           postinc0	equ	0xFEE
 44387                           fsr0h	equ	0xFEA
 44388                           fsr0l	equ	0xFE9
 44389                           wreg	equ	0xFE8
 44390                           indf1	equ	0xFE7
 44391                           postdec1	equ	0xFE5
 44392                           plusw1	equ	0xFE3
 44393                           fsr1h	equ	0xFE2
 44394                           fsr1l	equ	0xFE1
 44395                           indf2	equ	0xFDF
 44396                           postinc2	equ	0xFDE
 44397                           postdec2	equ	0xFDD
 44398                           plusw2	equ	0xFDB
 44399                           fsr2h	equ	0xFDA
 44400                           fsr2l	equ	0xFD9
 44401                           status	equ	0xFD8
 44402                           
 44403 ;; *************** function _fat_get_file_information *****************
 44404 ;; Defined at:
 44405 ;;		line 1391 in file "fat16.c"
 44406 ;; Parameters:    Size  Location     Type
 44407 ;;  file_number     1    wreg     unsigned char 
 44408 ;;  data            2   47[COMRAM] PTR struct .
 44409 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 44410 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), ToSendDataBuffer(64), 
 44411 ;; Auto vars:     Size  Location     Type
 44412 ;;  file_number     1   54[COMRAM] unsigned char 
 44413 ;;  offset          2   52[COMRAM] unsigned int 
 44414 ;;  root_sector     2   50[COMRAM] unsigned int 
 44415 ;; Return value:  Size  Location     Type
 44416 ;;                  1    wreg      unsigned char 
 44417 ;; Registers used:
 44418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44419 ;; Tracked objects:
 44420 ;;		On entry : 0/0
 44421 ;;		On exit  : 0/0
 44422 ;;		Unchanged: 0/0
 44423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44425 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44428 ;;Total ram usage:        8 bytes
 44429 ;; Hardware stack levels used:    1
 44430 ;; Hardware stack levels required when called:    5
 44431 ;; This function calls:
 44432 ;;		__offset_from_file_number
 44433 ;;		__sector_from_file_number
 44434 ;;		_flash_partial_read
 44435 ;; This function is called by:
 44436 ;;		_fat_rename_file
 44437 ;;		_fat_read_from_file
 44438 ;;		_fat_resize_file
 44439 ;;		_fat_modify_file
 44440 ;;		__bootloader_verify_file
 44441 ;;		__bootloader_program
 44442 ;;		__fill_buffer_get_file_details
 44443 ;; This function uses a non-reentrant model
 44444 ;;
 44445                           
 44446                           	psect	text221
 44447  0087F8                     __ptext221:
 44448                           	opt stack 0
 44449  0087F8                     _fat_get_file_information:
 44450                           	opt stack 23
 44451                           
 44452                           ;incstack = 0
 44453                           ;fat_get_file_information@file_number stored from wreg
 44454  0087F8  6E37               	movwf	fat_get_file_information@file_number,c
 44455                           
 44456                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 44457  0087FA  0E3F               	movlw	63
 44458  0087FC  6437               	cpfsgt	fat_get_file_information@file_number,c
 44459  0087FE  D002               	goto	l2325
 44460                           
 44461                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 44462  008800  0E01               	movlw	1
 44463  008802  0012               	return	
 44464  008804                     l2325:
 44465                           
 44466                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 44467  008804  5037               	movf	fat_get_file_information@file_number,w,c
 44468  008806  ECD9  F04D         	call	__sector_from_file_number
 44469  00880A  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 44470  00880E  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 44471                           
 44472                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 44473  008812  5037               	movf	fat_get_file_information@file_number,w,c
 44474  008814  EC78  F04E         	call	__offset_from_file_number
 44475  008818  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 44476  00881C  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 44477                           
 44478                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 44479  008820  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 44480  008824  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 44481  008828  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 44482  00882C  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 44483  008830  0E00               	movlw	0
 44484  008832  6E2D               	movwf	flash_partial_read@length+1,c
 44485  008834  0E20               	movlw	32
 44486  008836  6E2C               	movwf	flash_partial_read@length,c
 44487  008838  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 44488  00883C  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 44489  008840  ECF2  F04C         	call	_flash_partial_read	;wreg free
 44490                           
 44491                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 44492  008844  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 44493  008848  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 44494  00884C  50DF               	movf	indf2,w,c
 44495  00884E  B4D8               	btfsc	status,2,c
 44496  008850  D008               	goto	u9280
 44497  008852  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 44498  008856  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 44499  00885A  0EE5               	movlw	229
 44500  00885C  18DE               	xorwf	postinc2,w,c
 44501  00885E  A4D8               	btfss	status,2,c
 44502  008860  D002               	goto	l2327
 44503  008862                     u9280:
 44504                           
 44505                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 44506  008862  0E02               	movlw	2
 44507  008864  0012               	return	
 44508  008866                     l2327:
 44509                           
 44510                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 44511  008866  0E00               	movlw	0
 44512  008868  0012               	return	
 44513  00886A                     __end_of_fat_get_file_information:
 44514                           	opt stack 0
 44515                           tosu	equ	0xFFF
 44516                           tosh	equ	0xFFE
 44517                           tosl	equ	0xFFD
 44518                           pclath	equ	0xFFA
 44519                           tblptru	equ	0xFF8
 44520                           tblptrh	equ	0xFF7
 44521                           tblptrl	equ	0xFF6
 44522                           tablat	equ	0xFF5
 44523                           prodh	equ	0xFF4
 44524                           prodl	equ	0xFF3
 44525                           intcon	equ	0xFF2
 44526                           intcon2	equ	0xFF1
 44527                           intcon3	equ	0xFF0
 44528                           indf0	equ	0xFEF
 44529                           postinc0	equ	0xFEE
 44530                           fsr0h	equ	0xFEA
 44531                           fsr0l	equ	0xFE9
 44532                           wreg	equ	0xFE8
 44533                           indf1	equ	0xFE7
 44534                           postdec1	equ	0xFE5
 44535                           plusw1	equ	0xFE3
 44536                           fsr1h	equ	0xFE2
 44537                           fsr1l	equ	0xFE1
 44538                           indf2	equ	0xFDF
 44539                           postinc2	equ	0xFDE
 44540                           postdec2	equ	0xFDD
 44541                           plusw2	equ	0xFDB
 44542                           fsr2h	equ	0xFDA
 44543                           fsr2l	equ	0xFD9
 44544                           status	equ	0xFD8
 44545                           
 44546 ;; *************** function __find_nth_cluster *****************
 44547 ;; Defined at:
 44548 ;;		line 182 in file "fat16.c"
 44549 ;; Parameters:    Size  Location     Type
 44550 ;;  cluster         2   55[COMRAM] unsigned int 
 44551 ;;  n               2   57[COMRAM] unsigned int 
 44552 ;; Auto vars:     Size  Location     Type
 44553 ;;  sector          2   63[COMRAM] unsigned int 
 44554 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 44555 ;;  offset          2   59[COMRAM] unsigned int 
 44556 ;; Return value:  Size  Location     Type
 44557 ;;                  2   55[COMRAM] unsigned int 
 44558 ;; Registers used:
 44559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44560 ;; Tracked objects:
 44561 ;;		On entry : 0/0
 44562 ;;		On exit  : 0/0
 44563 ;;		Unchanged: 0/0
 44564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44566 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44568 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44569 ;;Total ram usage:       10 bytes
 44570 ;; Hardware stack levels used:    1
 44571 ;; Hardware stack levels required when called:    6
 44572 ;; This function calls:
 44573 ;;		__fat_offset_from_cluster
 44574 ;;		__fat_sector_from_cluster
 44575 ;;		__read_fat
 44576 ;;		__read_value_from_offset
 44577 ;;		_flash_sector_read
 44578 ;; This function is called by:
 44579 ;;		_fat_read_from_file_fast
 44580 ;;		_fat_modify_file
 44581 ;;		_fat_copy_sector_to_buffer
 44582 ;; This function uses a non-reentrant model
 44583 ;;
 44584                           
 44585                           	psect	text222
 44586  007FF8                     __ptext222:
 44587                           	opt stack 0
 44588  007FF8                     __find_nth_cluster:
 44589                           	opt stack 21
 44590                           
 44591                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 44592                           
 44593                           ;incstack = 0
 44594  007FF8  0E00               	movlw	0
 44595  007FFA  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 44596  007FFC  0E00               	movlw	0
 44597  007FFE  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 44598                           
 44599                           ;fat16.c: 189: if(n==1)
 44600  008000  043A               	decf	__find_nth_cluster@n,w,c
 44601  008002  103B               	iorwf	__find_nth_cluster@n+1,w,c
 44602  008004  A4D8               	btfss	status,2,c
 44603  008006  D03E               	goto	l2014
 44604                           
 44605                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 44606  008008  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 44607  00800C  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 44608  008010  ECE8  F048         	call	__read_fat	;wreg free
 44609  008014  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 44610  008018  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 44611  00801C  0012               	return	
 44612  00801E                     
 44613                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 44614  00801E  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 44615  008022  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 44616  008026  ECA3  F04F         	call	__fat_sector_from_cluster	;wreg free
 44617  00802A  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 44618  00802E  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 44619                           
 44620                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 44621  008032  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 44622  008036  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 44623  00803A  ECAF  F04F         	call	__fat_offset_from_cluster	;wreg free
 44624  00803E  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 44625  008042  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 44626                           
 44627                           ;fat16.c: 201: if(sector != sector_in_buffer)
 44628  008046  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 44629  008048  1840               	xorwf	__find_nth_cluster@sector,w,c
 44630  00804A  E104               	bnz	u8950
 44631  00804C  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 44632  00804E  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 44633  008050  B4D8               	btfsc	status,2,c
 44634  008052  D00A               	goto	l2016
 44635  008054                     u8950:
 44636                           
 44637                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 44638  008054  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 44639  008058  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 44640  00805C  0EC0               	movlw	low _buffer
 44641  00805E  6E2A               	movwf	flash_sector_read@data,c
 44642  008060  0E03               	movlw	high _buffer
 44643  008062  6E2B               	movwf	flash_sector_read@data+1,c
 44644  008064  ECD9  F04C         	call	_flash_sector_read	;wreg free
 44645  008068                     l2016:
 44646                           
 44647                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 44648  008068  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 44649  00806C  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 44650  008070  0EC0               	movlw	low _buffer
 44651  008072  6E03               	movwf	__read_value_from_offset@buffer,c
 44652  008074  0E03               	movlw	high _buffer
 44653  008076  6E04               	movwf	__read_value_from_offset@buffer+1,c
 44654  008078  ECC3  F04A         	call	__read_value_from_offset	;wreg free
 44655  00807C  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 44656  008080  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 44657  008084                     l2014:
 44658  008084  503A               	movf	__find_nth_cluster@n,w,c
 44659  008086  103B               	iorwf	__find_nth_cluster@n+1,w,c
 44660  008088  A4D8               	btfss	status,2,c
 44661  00808A  D7C9               	goto	l2015
 44662                           
 44663                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 44664  00808C  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 44665  008090  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 44666  008094  0012               	return		;funcret
 44667  008096                     __end_of__find_nth_cluster:
 44668                           	opt stack 0
 44669                           tosu	equ	0xFFF
 44670                           tosh	equ	0xFFE
 44671                           tosl	equ	0xFFD
 44672                           pclath	equ	0xFFA
 44673                           tblptru	equ	0xFF8
 44674                           tblptrh	equ	0xFF7
 44675                           tblptrl	equ	0xFF6
 44676                           tablat	equ	0xFF5
 44677                           prodh	equ	0xFF4
 44678                           prodl	equ	0xFF3
 44679                           intcon	equ	0xFF2
 44680                           intcon2	equ	0xFF1
 44681                           intcon3	equ	0xFF0
 44682                           indf0	equ	0xFEF
 44683                           postinc0	equ	0xFEE
 44684                           fsr0h	equ	0xFEA
 44685                           fsr0l	equ	0xFE9
 44686                           wreg	equ	0xFE8
 44687                           indf1	equ	0xFE7
 44688                           postdec1	equ	0xFE5
 44689                           plusw1	equ	0xFE3
 44690                           fsr1h	equ	0xFE2
 44691                           fsr1l	equ	0xFE1
 44692                           indf2	equ	0xFDF
 44693                           postinc2	equ	0xFDE
 44694                           postdec2	equ	0xFDD
 44695                           plusw2	equ	0xFDB
 44696                           fsr2h	equ	0xFDA
 44697                           fsr2l	equ	0xFD9
 44698                           status	equ	0xFD8
 44699                           
 44700 ;; *************** function _flash_sector_read *****************
 44701 ;; Defined at:
 44702 ;;		line 443 in file "flash.c"
 44703 ;; Parameters:    Size  Location     Type
 44704 ;;  page            2   39[COMRAM] unsigned int 
 44705 ;;  data            2   41[COMRAM] PTR unsigned char 
 44706 ;;		 -> buffer(512), msd_buffer(512), 
 44707 ;; Auto vars:     Size  Location     Type
 44708 ;;		None
 44709 ;; Return value:  Size  Location     Type
 44710 ;;                  1    wreg      void 
 44711 ;; Registers used:
 44712 ;;		wreg, status,2, status,0, cstack
 44713 ;; Tracked objects:
 44714 ;;		On entry : 0/0
 44715 ;;		On exit  : 0/0
 44716 ;;		Unchanged: 0/0
 44717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44721 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44722 ;;Total ram usage:        4 bytes
 44723 ;; Hardware stack levels used:    1
 44724 ;; Hardware stack levels required when called:    4
 44725 ;; This function calls:
 44726 ;;		__flash_partial_read
 44727 ;;		_spi_set_configuration
 44728 ;; This function is called by:
 44729 ;;		_ExternalFlash_SectorRead
 44730 ;;		__get_available_cluster
 44731 ;;		__find_nth_cluster
 44732 ;;		__make_cluster_chain
 44733 ;;		_fat_find_file
 44734 ;;		_fat_get_format_status
 44735 ;; This function uses a non-reentrant model
 44736 ;;
 44737                           
 44738                           	psect	text223
 44739  0099B2                     __ptext223:
 44740                           	opt stack 0
 44741  0099B2                     _flash_sector_read:
 44742                           	opt stack 23
 44743                           
 44744                           ;flash.c: 446: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 44745                           
 44746                           ;incstack = 0
 44747  0099B2  0E00               	movlw	0
 44748  0099B4  EC06  F02A         	call	_spi_set_configuration
 44749                           
 44750                           ;flash.c: 449: _flash_partial_read(page, 0, 512, data);
 44751  0099B8  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 44752  0099BC  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 44753  0099C0  0E00               	movlw	0
 44754  0099C2  6E17               	movwf	__flash_partial_read@start+1,c
 44755  0099C4  0E00               	movlw	0
 44756  0099C6  6E16               	movwf	__flash_partial_read@start,c
 44757  0099C8  0E02               	movlw	2
 44758  0099CA  6E19               	movwf	__flash_partial_read@length+1,c
 44759  0099CC  0E00               	movlw	0
 44760  0099CE  6E18               	movwf	__flash_partial_read@length,c
 44761  0099D0  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 44762  0099D4  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 44763  0099D8  EC87  F043         	call	__flash_partial_read	;wreg free
 44764                           
 44765                           ;flash.c: 452: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 44766  0099DC  0E01               	movlw	1
 44767  0099DE  EC06  F02A         	call	_spi_set_configuration
 44768  0099E2  0012               	return		;funcret
 44769  0099E4                     __end_of_flash_sector_read:
 44770                           	opt stack 0
 44771                           tosu	equ	0xFFF
 44772                           tosh	equ	0xFFE
 44773                           tosl	equ	0xFFD
 44774                           pclath	equ	0xFFA
 44775                           tblptru	equ	0xFF8
 44776                           tblptrh	equ	0xFF7
 44777                           tblptrl	equ	0xFF6
 44778                           tablat	equ	0xFF5
 44779                           prodh	equ	0xFF4
 44780                           prodl	equ	0xFF3
 44781                           intcon	equ	0xFF2
 44782                           intcon2	equ	0xFF1
 44783                           intcon3	equ	0xFF0
 44784                           indf0	equ	0xFEF
 44785                           postinc0	equ	0xFEE
 44786                           fsr0h	equ	0xFEA
 44787                           fsr0l	equ	0xFE9
 44788                           wreg	equ	0xFE8
 44789                           indf1	equ	0xFE7
 44790                           postdec1	equ	0xFE5
 44791                           plusw1	equ	0xFE3
 44792                           fsr1h	equ	0xFE2
 44793                           fsr1l	equ	0xFE1
 44794                           indf2	equ	0xFDF
 44795                           postinc2	equ	0xFDE
 44796                           postdec2	equ	0xFDD
 44797                           plusw2	equ	0xFDB
 44798                           fsr2h	equ	0xFDA
 44799                           fsr2l	equ	0xFD9
 44800                           status	equ	0xFD8
 44801                           
 44802 ;; *************** function __read_value_from_offset *****************
 44803 ;; Defined at:
 44804 ;;		line 114 in file "fat16.c"
 44805 ;; Parameters:    Size  Location     Type
 44806 ;;  offset          2    0[COMRAM] unsigned int 
 44807 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 44808 ;;		 -> buffer(512), 
 44809 ;; Auto vars:     Size  Location     Type
 44810 ;;  value           2    7[COMRAM] unsigned int 
 44811 ;; Return value:  Size  Location     Type
 44812 ;;                  2    0[COMRAM] unsigned int 
 44813 ;; Registers used:
 44814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44815 ;; Tracked objects:
 44816 ;;		On entry : 0/0
 44817 ;;		On exit  : 0/0
 44818 ;;		Unchanged: 0/0
 44819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44822 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44823 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44824 ;;Total ram usage:        9 bytes
 44825 ;; Hardware stack levels used:    1
 44826 ;; This function calls:
 44827 ;;		Nothing
 44828 ;; This function is called by:
 44829 ;;		__find_nth_cluster
 44830 ;;		__make_cluster_chain
 44831 ;; This function uses a non-reentrant model
 44832 ;;
 44833                           
 44834                           	psect	text224
 44835  009586                     __ptext224:
 44836                           	opt stack 0
 44837  009586                     __read_value_from_offset:
 44838                           	opt stack 26
 44839                           
 44840                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 44841                           
 44842                           ;incstack = 0
 44843  009586  0E01               	movlw	1
 44844  009588  2401               	addwf	__read_value_from_offset@offset,w,c
 44845  00958A  6E05               	movwf	??__read_value_from_offset& (0+255),c
 44846  00958C  0E00               	movlw	0
 44847  00958E  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 44848  009590  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 44849  009592  5005               	movf	??__read_value_from_offset,w,c
 44850  009594  2403               	addwf	__read_value_from_offset@buffer,w,c
 44851  009596  6ED9               	movwf	fsr2l,c
 44852  009598  5006               	movf	??__read_value_from_offset+1,w,c
 44853  00959A  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 44854  00959C  6EDA               	movwf	fsr2h,c
 44855  00959E  50DF               	movf	indf2,w,c
 44856  0095A0  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 44857  0095A2  5007               	movf	??__read_value_from_offset+2,w,c
 44858  0095A4  6E08               	movwf	__read_value_from_offset@value,c
 44859  0095A6  6A09               	clrf	__read_value_from_offset@value+1,c
 44860                           
 44861                           ;fat16.c: 118: value <<= 8;
 44862  0095A8  5008               	movf	__read_value_from_offset@value,w,c
 44863  0095AA  6E09               	movwf	__read_value_from_offset@value+1,c
 44864  0095AC  6A08               	clrf	__read_value_from_offset@value,c
 44865                           
 44866                           ;fat16.c: 119: value |= buffer[offset];
 44867  0095AE  5001               	movf	__read_value_from_offset@offset,w,c
 44868  0095B0  2403               	addwf	__read_value_from_offset@buffer,w,c
 44869  0095B2  6ED9               	movwf	fsr2l,c
 44870  0095B4  5002               	movf	__read_value_from_offset@offset+1,w,c
 44871  0095B6  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 44872  0095B8  6EDA               	movwf	fsr2h,c
 44873  0095BA  50DF               	movf	indf2,w,c
 44874  0095BC  6E05               	movwf	??__read_value_from_offset& (0+255),c
 44875  0095BE  5005               	movf	??__read_value_from_offset,w,c
 44876  0095C0  1208               	iorwf	__read_value_from_offset@value,f,c
 44877                           
 44878                           ;fat16.c: 120: return value;
 44879  0095C2  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 44880  0095C6  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 44881  0095CA  0012               	return	
 44882  0095CC                     __end_of__read_value_from_offset:
 44883                           	opt stack 0
 44884                           tosu	equ	0xFFF
 44885                           tosh	equ	0xFFE
 44886                           tosl	equ	0xFFD
 44887                           pclath	equ	0xFFA
 44888                           tblptru	equ	0xFF8
 44889                           tblptrh	equ	0xFF7
 44890                           tblptrl	equ	0xFF6
 44891                           tablat	equ	0xFF5
 44892                           prodh	equ	0xFF4
 44893                           prodl	equ	0xFF3
 44894                           intcon	equ	0xFF2
 44895                           intcon2	equ	0xFF1
 44896                           intcon3	equ	0xFF0
 44897                           indf0	equ	0xFEF
 44898                           postinc0	equ	0xFEE
 44899                           fsr0h	equ	0xFEA
 44900                           fsr0l	equ	0xFE9
 44901                           wreg	equ	0xFE8
 44902                           indf1	equ	0xFE7
 44903                           postdec1	equ	0xFE5
 44904                           plusw1	equ	0xFE3
 44905                           fsr1h	equ	0xFE2
 44906                           fsr1l	equ	0xFE1
 44907                           indf2	equ	0xFDF
 44908                           postinc2	equ	0xFDE
 44909                           postdec2	equ	0xFDD
 44910                           plusw2	equ	0xFDB
 44911                           fsr2h	equ	0xFDA
 44912                           fsr2l	equ	0xFD9
 44913                           status	equ	0xFD8
 44914                           
 44915 ;; *************** function __read_fat *****************
 44916 ;; Defined at:
 44917 ;;		line 456 in file "fat16.c"
 44918 ;; Parameters:    Size  Location     Type
 44919 ;;  cluster         2   47[COMRAM] unsigned int 
 44920 ;; Auto vars:     Size  Location     Type
 44921 ;;  value           2   53[COMRAM] unsigned int 
 44922 ;;  offset          2   51[COMRAM] unsigned int 
 44923 ;;  sector          2   49[COMRAM] unsigned int 
 44924 ;; Return value:  Size  Location     Type
 44925 ;;                  2   47[COMRAM] unsigned int 
 44926 ;; Registers used:
 44927 ;;		wreg, status,2, status,0, cstack
 44928 ;; Tracked objects:
 44929 ;;		On entry : 0/0
 44930 ;;		On exit  : 0/0
 44931 ;;		Unchanged: 0/0
 44932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44934 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44936 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44937 ;;Total ram usage:        8 bytes
 44938 ;; Hardware stack levels used:    1
 44939 ;; Hardware stack levels required when called:    5
 44940 ;; This function calls:
 44941 ;;		__fat_offset_from_cluster
 44942 ;;		__fat_sector_from_cluster
 44943 ;;		_flash_partial_read
 44944 ;; This function is called by:
 44945 ;;		__find_nth_cluster
 44946 ;;		_fat_read_from_file_fast
 44947 ;;		_fat_modify_file
 44948 ;; This function uses a non-reentrant model
 44949 ;;
 44950                           
 44951                           	psect	text225
 44952  0091D0                     __ptext225:
 44953                           	opt stack 0
 44954  0091D0                     __read_fat:
 44955                           	opt stack 22
 44956                           
 44957                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 44958                           
 44959                           ;incstack = 0
 44960  0091D0  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 44961  0091D4  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 44962  0091D8  ECA3  F04F         	call	__fat_sector_from_cluster	;wreg free
 44963  0091DC  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 44964  0091E0  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 44965                           
 44966                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 44967  0091E4  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 44968  0091E8  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 44969  0091EC  ECAF  F04F         	call	__fat_offset_from_cluster	;wreg free
 44970  0091F0  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 44971  0091F4  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 44972                           
 44973                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 44974  0091F8  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 44975  0091FC  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 44976  009200  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 44977  009204  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 44978  009208  0E00               	movlw	0
 44979  00920A  6E2D               	movwf	flash_partial_read@length+1,c
 44980  00920C  0E02               	movlw	2
 44981  00920E  6E2C               	movwf	flash_partial_read@length,c
 44982  009210  0E36               	movlw	low __read_fat@value
 44983  009212  6E2E               	movwf	flash_partial_read@data,c
 44984  009214  0E00               	movlw	high __read_fat@value
 44985  009216  6E2F               	movwf	flash_partial_read@data+1,c
 44986  009218  ECF2  F04C         	call	_flash_partial_read	;wreg free
 44987                           
 44988                           ;fat16.c: 470: return value;
 44989  00921C  C036  F030         	movff	__read_fat@value,?__read_fat
 44990  009220  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 44991  009224  0012               	return	
 44992  009226                     __end_of__read_fat:
 44993                           	opt stack 0
 44994                           tosu	equ	0xFFF
 44995                           tosh	equ	0xFFE
 44996                           tosl	equ	0xFFD
 44997                           pclath	equ	0xFFA
 44998                           tblptru	equ	0xFF8
 44999                           tblptrh	equ	0xFF7
 45000                           tblptrl	equ	0xFF6
 45001                           tablat	equ	0xFF5
 45002                           prodh	equ	0xFF4
 45003                           prodl	equ	0xFF3
 45004                           intcon	equ	0xFF2
 45005                           intcon2	equ	0xFF1
 45006                           intcon3	equ	0xFF0
 45007                           indf0	equ	0xFEF
 45008                           postinc0	equ	0xFEE
 45009                           fsr0h	equ	0xFEA
 45010                           fsr0l	equ	0xFE9
 45011                           wreg	equ	0xFE8
 45012                           indf1	equ	0xFE7
 45013                           postdec1	equ	0xFE5
 45014                           plusw1	equ	0xFE3
 45015                           fsr1h	equ	0xFE2
 45016                           fsr1l	equ	0xFE1
 45017                           indf2	equ	0xFDF
 45018                           postinc2	equ	0xFDE
 45019                           postdec2	equ	0xFDD
 45020                           plusw2	equ	0xFDB
 45021                           fsr2h	equ	0xFDA
 45022                           fsr2l	equ	0xFD9
 45023                           status	equ	0xFD8
 45024                           
 45025 ;; *************** function __fat_sector_from_cluster *****************
 45026 ;; Defined at:
 45027 ;;		line 75 in file "fat16.c"
 45028 ;; Parameters:    Size  Location     Type
 45029 ;;  cluster         2    0[COMRAM] unsigned int 
 45030 ;; Auto vars:     Size  Location     Type
 45031 ;;		None
 45032 ;; Return value:  Size  Location     Type
 45033 ;;                  2    0[COMRAM] unsigned int 
 45034 ;; Registers used:
 45035 ;;		wreg, status,2, status,0
 45036 ;; Tracked objects:
 45037 ;;		On entry : 0/0
 45038 ;;		On exit  : 0/0
 45039 ;;		Unchanged: 0/0
 45040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45045 ;;Total ram usage:        2 bytes
 45046 ;; Hardware stack levels used:    1
 45047 ;; This function calls:
 45048 ;;		Nothing
 45049 ;; This function is called by:
 45050 ;;		__find_nth_cluster
 45051 ;;		__make_cluster_chain
 45052 ;;		__read_fat
 45053 ;; This function uses a non-reentrant model
 45054 ;;
 45055                           
 45056                           	psect	text226
 45057  009F46                     __ptext226:
 45058                           	opt stack 0
 45059  009F46                     __fat_sector_from_cluster:
 45060                           	opt stack 26
 45061                           
 45062                           ;fat16.c: 77: cluster >>= 8;
 45063                           
 45064                           ;incstack = 0
 45065  009F46  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 45066  009F48  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 45067  009F4A  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 45068                           
 45069                           ;fat16.c: 78: cluster += 2;
 45070  009F4C  0E02               	movlw	2
 45071  009F4E  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 45072  009F50  0E00               	movlw	0
 45073  009F52  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 45074                           
 45075                           ;fat16.c: 79: return cluster;
 45076  009F54  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 45077  009F58  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 45078  009F5C  0012               	return	
 45079  009F5E                     __end_of__fat_sector_from_cluster:
 45080                           	opt stack 0
 45081                           tosu	equ	0xFFF
 45082                           tosh	equ	0xFFE
 45083                           tosl	equ	0xFFD
 45084                           pclath	equ	0xFFA
 45085                           tblptru	equ	0xFF8
 45086                           tblptrh	equ	0xFF7
 45087                           tblptrl	equ	0xFF6
 45088                           tablat	equ	0xFF5
 45089                           prodh	equ	0xFF4
 45090                           prodl	equ	0xFF3
 45091                           intcon	equ	0xFF2
 45092                           intcon2	equ	0xFF1
 45093                           intcon3	equ	0xFF0
 45094                           indf0	equ	0xFEF
 45095                           postinc0	equ	0xFEE
 45096                           fsr0h	equ	0xFEA
 45097                           fsr0l	equ	0xFE9
 45098                           wreg	equ	0xFE8
 45099                           indf1	equ	0xFE7
 45100                           postdec1	equ	0xFE5
 45101                           plusw1	equ	0xFE3
 45102                           fsr1h	equ	0xFE2
 45103                           fsr1l	equ	0xFE1
 45104                           indf2	equ	0xFDF
 45105                           postinc2	equ	0xFDE
 45106                           postdec2	equ	0xFDD
 45107                           plusw2	equ	0xFDB
 45108                           fsr2h	equ	0xFDA
 45109                           fsr2l	equ	0xFD9
 45110                           status	equ	0xFD8
 45111                           
 45112 ;; *************** function __fat_offset_from_cluster *****************
 45113 ;; Defined at:
 45114 ;;		line 82 in file "fat16.c"
 45115 ;; Parameters:    Size  Location     Type
 45116 ;;  cluster         2    0[COMRAM] unsigned int 
 45117 ;; Auto vars:     Size  Location     Type
 45118 ;;		None
 45119 ;; Return value:  Size  Location     Type
 45120 ;;                  2    0[COMRAM] unsigned int 
 45121 ;; Registers used:
 45122 ;;		wreg, status,2, status,0
 45123 ;; Tracked objects:
 45124 ;;		On entry : 0/0
 45125 ;;		On exit  : 0/0
 45126 ;;		Unchanged: 0/0
 45127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45132 ;;Total ram usage:        2 bytes
 45133 ;; Hardware stack levels used:    1
 45134 ;; This function calls:
 45135 ;;		Nothing
 45136 ;; This function is called by:
 45137 ;;		__find_nth_cluster
 45138 ;;		__make_cluster_chain
 45139 ;;		__read_fat
 45140 ;; This function uses a non-reentrant model
 45141 ;;
 45142                           
 45143                           	psect	text227
 45144  009F5E                     __ptext227:
 45145                           	opt stack 0
 45146  009F5E                     __fat_offset_from_cluster:
 45147                           	opt stack 26
 45148                           
 45149                           ;fat16.c: 84: cluster &= 0xFF;
 45150                           
 45151                           ;incstack = 0
 45152  009F5E  0EFF               	movlw	255
 45153  009F60  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 45154  009F62  0E00               	movlw	0
 45155  009F64  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 45156                           
 45157                           ;fat16.c: 85: cluster <<= 1;
 45158  009F66  90D8               	bcf	status,0,c
 45159  009F68  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 45160  009F6A  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 45161                           
 45162                           ;fat16.c: 86: return cluster;
 45163  009F6C  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 45164  009F70  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 45165  009F74  0012               	return	
 45166  009F76                     __end_of__fat_offset_from_cluster:
 45167                           	opt stack 0
 45168                           tosu	equ	0xFFF
 45169                           tosh	equ	0xFFE
 45170                           tosl	equ	0xFFD
 45171                           pclath	equ	0xFFA
 45172                           tblptru	equ	0xFF8
 45173                           tblptrh	equ	0xFF7
 45174                           tblptrl	equ	0xFF6
 45175                           tablat	equ	0xFF5
 45176                           prodh	equ	0xFF4
 45177                           prodl	equ	0xFF3
 45178                           intcon	equ	0xFF2
 45179                           intcon2	equ	0xFF1
 45180                           intcon3	equ	0xFF0
 45181                           indf0	equ	0xFEF
 45182                           postinc0	equ	0xFEE
 45183                           fsr0h	equ	0xFEA
 45184                           fsr0l	equ	0xFE9
 45185                           wreg	equ	0xFE8
 45186                           indf1	equ	0xFE7
 45187                           postdec1	equ	0xFE5
 45188                           plusw1	equ	0xFE3
 45189                           fsr1h	equ	0xFE2
 45190                           fsr1l	equ	0xFE1
 45191                           indf2	equ	0xFDF
 45192                           postinc2	equ	0xFDE
 45193                           postdec2	equ	0xFDD
 45194                           plusw2	equ	0xFDB
 45195                           fsr2h	equ	0xFDA
 45196                           fsr2l	equ	0xFD9
 45197                           status	equ	0xFD8
 45198                           
 45199 ;; *************** function __data_sector_from_cluster *****************
 45200 ;; Defined at:
 45201 ;;		line 70 in file "fat16.c"
 45202 ;; Parameters:    Size  Location     Type
 45203 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 45204 ;; Auto vars:     Size  Location     Type
 45205 ;;		None
 45206 ;; Return value:  Size  Location     Type
 45207 ;;                  2    0[COMRAM] unsigned int 
 45208 ;; Registers used:
 45209 ;;		wreg, status,2, status,0
 45210 ;; Tracked objects:
 45211 ;;		On entry : 0/0
 45212 ;;		On exit  : 0/0
 45213 ;;		Unchanged: 0/0
 45214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45219 ;;Total ram usage:        2 bytes
 45220 ;; Hardware stack levels used:    1
 45221 ;; This function calls:
 45222 ;;		Nothing
 45223 ;; This function is called by:
 45224 ;;		_fat_read_from_file_fast
 45225 ;;		_fat_modify_file
 45226 ;;		_fat_copy_sector_to_buffer
 45227 ;; This function uses a non-reentrant model
 45228 ;;
 45229                           
 45230                           	psect	text228
 45231  00A052                     __ptext228:
 45232                           	opt stack 0
 45233  00A052                     __data_sector_from_cluster:
 45234                           	opt stack 27
 45235                           
 45236                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 45237                           
 45238                           ;incstack = 0
 45239  00A052  0E24               	movlw	36
 45240  00A054  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 45241  00A056  6E01               	movwf	?__data_sector_from_cluster,c
 45242  00A058  0E00               	movlw	0
 45243  00A05A  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 45244  00A05C  6E02               	movwf	?__data_sector_from_cluster+1,c
 45245  00A05E  0012               	return	
 45246  00A060                     __end_of__data_sector_from_cluster:
 45247                           	opt stack 0
 45248                           tosu	equ	0xFFF
 45249                           tosh	equ	0xFFE
 45250                           tosl	equ	0xFFD
 45251                           pclath	equ	0xFFA
 45252                           tblptru	equ	0xFF8
 45253                           tblptrh	equ	0xFF7
 45254                           tblptrl	equ	0xFF6
 45255                           tablat	equ	0xFF5
 45256                           prodh	equ	0xFF4
 45257                           prodl	equ	0xFF3
 45258                           intcon	equ	0xFF2
 45259                           intcon2	equ	0xFF1
 45260                           intcon3	equ	0xFF0
 45261                           indf0	equ	0xFEF
 45262                           postinc0	equ	0xFEE
 45263                           fsr0h	equ	0xFEA
 45264                           fsr0l	equ	0xFE9
 45265                           wreg	equ	0xFE8
 45266                           indf1	equ	0xFE7
 45267                           postdec1	equ	0xFE5
 45268                           plusw1	equ	0xFE3
 45269                           fsr1h	equ	0xFE2
 45270                           fsr1l	equ	0xFE1
 45271                           indf2	equ	0xFDF
 45272                           postinc2	equ	0xFDE
 45273                           postdec2	equ	0xFDD
 45274                           plusw2	equ	0xFDB
 45275                           fsr2h	equ	0xFDA
 45276                           fsr2l	equ	0xFD9
 45277                           status	equ	0xFD8
 45278                           
 45279 ;; *************** function __parse_buffer_to_sector *****************
 45280 ;; Defined at:
 45281 ;;		line 904 in file "api.c"
 45282 ;; Parameters:    Size  Location     Type
 45283 ;;  data            2   81[COMRAM] PTR unsigned char 
 45284 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 45285 ;;  out_buffer      2   83[COMRAM] PTR unsigned char 
 45286 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 45287 ;;  out_idx_ptr     2   85[COMRAM] PTR unsigned char 
 45288 ;;		 -> api_parse@out_idx(1), 
 45289 ;; Auto vars:     Size  Location     Type
 45290 ;;  sector          2   90[COMRAM] unsigned int 
 45291 ;;  file_number     1   89[COMRAM] unsigned char 
 45292 ;;  return_value    1   88[COMRAM] unsigned char 
 45293 ;; Return value:  Size  Location     Type
 45294 ;;                  1    wreg      unsigned char 
 45295 ;; Registers used:
 45296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45297 ;; Tracked objects:
 45298 ;;		On entry : 0/0
 45299 ;;		On exit  : 0/0
 45300 ;;		Unchanged: 0/0
 45301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45302 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45305 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45306 ;;Total ram usage:       11 bytes
 45307 ;; Hardware stack levels used:    1
 45308 ;; Hardware stack levels required when called:    8
 45309 ;; This function calls:
 45310 ;;		_fat_write_sector_from_buffer
 45311 ;; This function is called by:
 45312 ;;		__parse_command_long
 45313 ;; This function uses a non-reentrant model
 45314 ;;
 45315                           
 45316                           	psect	text229
 45317  0043B2                     __ptext229:
 45318                           	opt stack 0
 45319  0043B2                     __parse_buffer_to_sector:
 45320                           	opt stack 20
 45321                           
 45322                           ;api.c: 907: uint8_t file_number;;api.c: 908: uint16_t sector;;api.c: 909: uint8_t retur
      +                          n_value;;api.c: 911: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (data[4]!=0x6A) || (data[
      +                          5]!=0x6D))
 45323                           
 45324                           ;incstack = 0
 45325  0043B2  C052  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 45326  0043B6  C053  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 45327  0043BA  0E58               	movlw	88
 45328  0043BC  18DE               	xorwf	postinc2,w,c
 45329  0043BE  A4D8               	btfss	status,2,c
 45330  0043C0  D014               	goto	u12210
 45331  0043C2  EE20 F004          	lfsr	2,4
 45332  0043C6  5052               	movf	__parse_buffer_to_sector@data,w,c
 45333  0043C8  26D9               	addwf	fsr2l,f,c
 45334  0043CA  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45335  0043CC  22DA               	addwfc	fsr2h,f,c
 45336  0043CE  0E6A               	movlw	106
 45337  0043D0  18DE               	xorwf	postinc2,w,c
 45338  0043D2  A4D8               	btfss	status,2,c
 45339  0043D4  D00A               	goto	u12210
 45340  0043D6  EE20 F005          	lfsr	2,5
 45341  0043DA  5052               	movf	__parse_buffer_to_sector@data,w,c
 45342  0043DC  26D9               	addwf	fsr2l,f,c
 45343  0043DE  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45344  0043E0  22DA               	addwfc	fsr2h,f,c
 45345  0043E2  0E6D               	movlw	109
 45346  0043E4  18DE               	xorwf	postinc2,w,c
 45347  0043E6  B4D8               	btfsc	status,2,c
 45348  0043E8  D002               	goto	l2934
 45349  0043EA                     u12210:
 45350                           
 45351                           ;api.c: 912: {;api.c: 913: return 6;
 45352  0043EA  0E06               	movlw	6
 45353  0043EC  0012               	return	
 45354  0043EE                     l2934:
 45355                           
 45356                           ;api.c: 914: };api.c: 917: file_number = data[1];
 45357  0043EE  EE20 F001          	lfsr	2,1
 45358  0043F2  5052               	movf	__parse_buffer_to_sector@data,w,c
 45359  0043F4  26D9               	addwf	fsr2l,f,c
 45360  0043F6  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45361  0043F8  22DA               	addwfc	fsr2h,f,c
 45362  0043FA  50DF               	movf	indf2,w,c
 45363  0043FC  6E5A               	movwf	__parse_buffer_to_sector@file_number,c
 45364                           
 45365                           ;api.c: 920: sector = data[2];
 45366  0043FE  EE20 F002          	lfsr	2,2
 45367  004402  5052               	movf	__parse_buffer_to_sector@data,w,c
 45368  004404  26D9               	addwf	fsr2l,f,c
 45369  004406  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45370  004408  22DA               	addwfc	fsr2h,f,c
 45371  00440A  50DF               	movf	indf2,w,c
 45372  00440C  6E58               	movwf	??__parse_buffer_to_sector& (0+255),c
 45373  00440E  5058               	movf	??__parse_buffer_to_sector,w,c
 45374  004410  6E5B               	movwf	__parse_buffer_to_sector@sector,c
 45375  004412  6A5C               	clrf	__parse_buffer_to_sector@sector+1,c
 45376                           
 45377                           ;api.c: 921: sector <<= 8;
 45378  004414  505B               	movf	__parse_buffer_to_sector@sector,w,c
 45379  004416  6E5C               	movwf	__parse_buffer_to_sector@sector+1,c
 45380  004418  6A5B               	clrf	__parse_buffer_to_sector@sector,c
 45381                           
 45382                           ;api.c: 922: sector |= data[3];
 45383  00441A  EE20 F003          	lfsr	2,3
 45384  00441E  5052               	movf	__parse_buffer_to_sector@data,w,c
 45385  004420  26D9               	addwf	fsr2l,f,c
 45386  004422  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45387  004424  22DA               	addwfc	fsr2h,f,c
 45388  004426  50DF               	movf	indf2,w,c
 45389  004428  6E58               	movwf	??__parse_buffer_to_sector& (0+255),c
 45390  00442A  5058               	movf	??__parse_buffer_to_sector,w,c
 45391  00442C  125B               	iorwf	__parse_buffer_to_sector@sector,f,c
 45392                           
 45393                           ;api.c: 925: return_value = fat_write_sector_from_buffer(file_number, sector);
 45394  00442E  C05B  F043         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 45395  004432  C05C  F044         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 45396  004436  505A               	movf	__parse_buffer_to_sector@file_number,w,c
 45397  004438  ECD0  F042         	call	_fat_write_sector_from_buffer
 45398  00443C  6E59               	movwf	__parse_buffer_to_sector@return_value,c
 45399                           
 45400                           ;api.c: 928: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 45401  00443E  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45402  004442  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45403  004446  50DF               	movf	indf2,w,c
 45404  004448  B4D8               	btfsc	status,2,c
 45405  00444A  D061               	goto	l2938
 45406  00444C  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45407  004450  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45408  004454  0E3C               	movlw	60
 45409  004456  60DF               	cpfslt	indf2,c
 45410  004458  D05A               	goto	l2938
 45411                           
 45412                           ;api.c: 929: {;api.c: 930: out_buffer[(*out_idx_ptr)++] = COMMAND_BUFFER_TO_SECTOR;
 45413  00445A  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45414  00445E  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45415  004462  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45416  004466  0E01               	movlw	1
 45417  004468  26DF               	addwf	indf2,f,c
 45418  00446A  5058               	movf	??__parse_buffer_to_sector,w,c
 45419  00446C  0D01               	mullw	1
 45420  00446E  50F3               	movf	prodl,w,c
 45421  004470  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45422  004472  6ED9               	movwf	fsr2l,c
 45423  004474  50F4               	movf	prodh,w,c
 45424  004476  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45425  004478  6EDA               	movwf	fsr2h,c
 45426  00447A  0E58               	movlw	88
 45427  00447C  6EDF               	movwf	indf2,c
 45428                           
 45429                           ;api.c: 931: out_buffer[(*out_idx_ptr)++] = file_number;
 45430  00447E  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45431  004482  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45432  004486  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45433  00448A  0E01               	movlw	1
 45434  00448C  26DF               	addwf	indf2,f,c
 45435  00448E  5058               	movf	??__parse_buffer_to_sector,w,c
 45436  004490  0D01               	mullw	1
 45437  004492  50F3               	movf	prodl,w,c
 45438  004494  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45439  004496  6ED9               	movwf	fsr2l,c
 45440  004498  50F4               	movf	prodh,w,c
 45441  00449A  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45442  00449C  6EDA               	movwf	fsr2h,c
 45443  00449E  C05A  FFDF         	movff	__parse_buffer_to_sector@file_number,indf2
 45444                           
 45445                           ;api.c: 932: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 45446  0044A2  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45447  0044A6  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45448  0044AA  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45449  0044AE  0E01               	movlw	1
 45450  0044B0  26DF               	addwf	indf2,f,c
 45451  0044B2  5058               	movf	??__parse_buffer_to_sector,w,c
 45452  0044B4  0D01               	mullw	1
 45453  0044B6  50F3               	movf	prodl,w,c
 45454  0044B8  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45455  0044BA  6ED9               	movwf	fsr2l,c
 45456  0044BC  50F4               	movf	prodh,w,c
 45457  0044BE  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45458  0044C0  6EDA               	movwf	fsr2h,c
 45459  0044C2  505C               	movf	__parse_buffer_to_sector@sector+1,w,c
 45460  0044C4  6EDF               	movwf	indf2,c
 45461                           
 45462                           ;api.c: 933: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 45463  0044C6  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45464  0044CA  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45465  0044CE  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45466  0044D2  0E01               	movlw	1
 45467  0044D4  26DF               	addwf	indf2,f,c
 45468  0044D6  5058               	movf	??__parse_buffer_to_sector,w,c
 45469  0044D8  0D01               	mullw	1
 45470  0044DA  50F3               	movf	prodl,w,c
 45471  0044DC  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45472  0044DE  6ED9               	movwf	fsr2l,c
 45473  0044E0  50F4               	movf	prodh,w,c
 45474  0044E2  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45475  0044E4  6EDA               	movwf	fsr2h,c
 45476  0044E6  C05B  FFDF         	movff	__parse_buffer_to_sector@sector,indf2
 45477                           
 45478                           ;api.c: 934: out_buffer[(*out_idx_ptr)++] = return_value;
 45479  0044EA  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45480  0044EE  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45481  0044F2  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45482  0044F6  0E01               	movlw	1
 45483  0044F8  26DF               	addwf	indf2,f,c
 45484  0044FA  5058               	movf	??__parse_buffer_to_sector,w,c
 45485  0044FC  0D01               	mullw	1
 45486  0044FE  50F3               	movf	prodl,w,c
 45487  004500  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45488  004502  6ED9               	movwf	fsr2l,c
 45489  004504  50F4               	movf	prodh,w,c
 45490  004506  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45491  004508  6EDA               	movwf	fsr2h,c
 45492  00450A  C059  FFDF         	movff	__parse_buffer_to_sector@return_value,indf2
 45493  00450E                     l2938:
 45494                           
 45495                           ;api.c: 935: };api.c: 937: return 6;
 45496  00450E  0E06               	movlw	6
 45497  004510  0012               	return	
 45498  004512                     __end_of__parse_buffer_to_sector:
 45499                           	opt stack 0
 45500                           tosu	equ	0xFFF
 45501                           tosh	equ	0xFFE
 45502                           tosl	equ	0xFFD
 45503                           pclath	equ	0xFFA
 45504                           tblptru	equ	0xFF8
 45505                           tblptrh	equ	0xFF7
 45506                           tblptrl	equ	0xFF6
 45507                           tablat	equ	0xFF5
 45508                           prodh	equ	0xFF4
 45509                           prodl	equ	0xFF3
 45510                           intcon	equ	0xFF2
 45511                           intcon2	equ	0xFF1
 45512                           intcon3	equ	0xFF0
 45513                           indf0	equ	0xFEF
 45514                           postinc0	equ	0xFEE
 45515                           fsr0h	equ	0xFEA
 45516                           fsr0l	equ	0xFE9
 45517                           wreg	equ	0xFE8
 45518                           indf1	equ	0xFE7
 45519                           postdec1	equ	0xFE5
 45520                           plusw1	equ	0xFE3
 45521                           fsr1h	equ	0xFE2
 45522                           fsr1l	equ	0xFE1
 45523                           indf2	equ	0xFDF
 45524                           postinc2	equ	0xFDE
 45525                           postdec2	equ	0xFDD
 45526                           plusw2	equ	0xFDB
 45527                           fsr2h	equ	0xFDA
 45528                           fsr2l	equ	0xFD9
 45529                           status	equ	0xFD8
 45530                           
 45531 ;; *************** function _fat_write_sector_from_buffer *****************
 45532 ;; Defined at:
 45533 ;;		line 1459 in file "fat16.c"
 45534 ;; Parameters:    Size  Location     Type
 45535 ;;  file_number     1    wreg     unsigned char 
 45536 ;;  sector          2   66[COMRAM] unsigned int 
 45537 ;; Auto vars:     Size  Location     Type
 45538 ;;  file_number     1   80[COMRAM] unsigned char 
 45539 ;;  file_size       4   74[COMRAM] unsigned long 
 45540 ;;  number_of_cl    2   78[COMRAM] unsigned int 
 45541 ;;  cluster         2   72[COMRAM] unsigned int 
 45542 ;;  physical_sec    2    0        unsigned int 
 45543 ;; Return value:  Size  Location     Type
 45544 ;;                  1    wreg      unsigned char 
 45545 ;; Registers used:
 45546 ;;		wreg, status,2, status,0, cstack
 45547 ;; Tracked objects:
 45548 ;;		On entry : 0/0
 45549 ;;		On exit  : 0/0
 45550 ;;		Unchanged: 0/0
 45551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45553 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45555 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45556 ;;Total ram usage:       15 bytes
 45557 ;; Hardware stack levels used:    1
 45558 ;; Hardware stack levels required when called:    7
 45559 ;; This function calls:
 45560 ;;		__get_first_cluster
 45561 ;;		__root_is_available
 45562 ;;		_fat_get_file_size
 45563 ;; This function is called by:
 45564 ;;		_fat_copy_file
 45565 ;;		__parse_buffer_to_sector
 45566 ;; This function uses a non-reentrant model
 45567 ;;
 45568                           
 45569                           	psect	text230
 45570  0085A0                     __ptext230:
 45571                           	opt stack 0
 45572  0085A0                     _fat_write_sector_from_buffer:
 45573                           	opt stack 19
 45574                           
 45575                           ;incstack = 0
 45576                           ;fat_write_sector_from_buffer@file_number stored from wreg
 45577  0085A0  6E51               	movwf	fat_write_sector_from_buffer@file_number,c
 45578                           
 45579                           ;fat16.c: 1461: uint32_t file_size;;fat16.c: 1462: uint16_t number_of_clusters;;fat16.c:
      +                           1463: uint16_t cluster;;fat16.c: 1464: uint16_t physical_sector;;fat16.c: 1467: if(_roo
      +                          t_is_available(file_number))
 45580  0085A2  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 45581  0085A4  EC76  F046         	call	__root_is_available
 45582  0085A8  0900               	iorlw	0
 45583  0085AA  B4D8               	btfsc	status,2,c
 45584  0085AC  D002               	goto	l2337
 45585                           
 45586                           ;fat16.c: 1468: {;fat16.c: 1470: return 0xFF;
 45587  0085AE  0EFF               	movlw	255
 45588  0085B0  0012               	return	
 45589  0085B2                     l2337:
 45590                           
 45591                           ;fat16.c: 1471: };fat16.c: 1474: file_size = fat_get_file_size(file_number);
 45592  0085B2  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 45593  0085B4  ECA5  F044         	call	_fat_get_file_size
 45594  0085B8  C036  F04B         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 45595  0085BC  C037  F04C         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 45596  0085C0  C038  F04D         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 45597  0085C4  C039  F04E         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 45598                           
 45599                           ;fat16.c: 1477: number_of_clusters = (file_size + 512 - 1) >> 9;
 45600  0085C8  0EFF               	movlw	255
 45601  0085CA  244B               	addwf	fat_write_sector_from_buffer@file_size,w,c
 45602  0085CC  6E45               	movwf	??_fat_write_sector_from_buffer& (0+255),c
 45603  0085CE  0E01               	movlw	1
 45604  0085D0  204C               	addwfc	fat_write_sector_from_buffer@file_size+1,w,c
 45605  0085D2  6E46               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),c
 45606  0085D4  0E00               	movlw	0
 45607  0085D6  204D               	addwfc	fat_write_sector_from_buffer@file_size+2,w,c
 45608  0085D8  6E47               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),c
 45609  0085DA  0E00               	movlw	0
 45610  0085DC  204E               	addwfc	fat_write_sector_from_buffer@file_size+3,w,c
 45611  0085DE  6E48               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),c
 45612  0085E0  0E0A               	movlw	10
 45613  0085E2  D005               	goto	u10390
 45614  0085E4                     u10395:
 45615  0085E4  90D8               	bcf	status,0,c
 45616  0085E6  3248               	rrcf	??_fat_write_sector_from_buffer+3,f,c
 45617  0085E8  3247               	rrcf	??_fat_write_sector_from_buffer+2,f,c
 45618  0085EA  3246               	rrcf	??_fat_write_sector_from_buffer+1,f,c
 45619  0085EC  3245               	rrcf	??_fat_write_sector_from_buffer,f,c
 45620  0085EE                     u10390:
 45621  0085EE  2EE8               	decfsz	wreg,f,c
 45622  0085F0  D7F9               	goto	u10395
 45623  0085F2  C045  F04F         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 45624  0085F6  C046  F050         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 45625                           
 45626                           ;fat16.c: 1478: if(sector >= number_of_clusters)
 45627  0085FA  504F               	movf	fat_write_sector_from_buffer@number_of_clusters,w,c
 45628  0085FC  5C43               	subwf	fat_write_sector_from_buffer@sector,w,c
 45629  0085FE  5050               	movf	fat_write_sector_from_buffer@number_of_clusters+1,w,c
 45630  008600  5844               	subwfb	fat_write_sector_from_buffer@sector+1,w,c
 45631  008602  A0D8               	btfss	status,0,c
 45632  008604  D002               	goto	l2339
 45633                           
 45634                           ;fat16.c: 1479: {;fat16.c: 1481: return 0xFE;
 45635  008606  0EFE               	movlw	254
 45636  008608  0012               	return	
 45637  00860A                     l2339:
 45638                           
 45639                           ;fat16.c: 1482: };fat16.c: 1485: cluster = _get_first_cluster(file_number);
 45640  00860A  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 45641  00860C  EC68  F049         	call	__get_first_cluster
 45642  008610  C030  F049         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 45643  008614  C031  F04A         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 45644                           
 45645                           ;fat16.c: 1495: return 0x00;
 45646  008618  0E00               	movlw	0
 45647  00861A  0012               	return	
 45648  00861C                     __end_of_fat_write_sector_from_buffer:
 45649                           	opt stack 0
 45650                           tosu	equ	0xFFF
 45651                           tosh	equ	0xFFE
 45652                           tosl	equ	0xFFD
 45653                           pclath	equ	0xFFA
 45654                           tblptru	equ	0xFF8
 45655                           tblptrh	equ	0xFF7
 45656                           tblptrl	equ	0xFF6
 45657                           tablat	equ	0xFF5
 45658                           prodh	equ	0xFF4
 45659                           prodl	equ	0xFF3
 45660                           intcon	equ	0xFF2
 45661                           intcon2	equ	0xFF1
 45662                           intcon3	equ	0xFF0
 45663                           indf0	equ	0xFEF
 45664                           postinc0	equ	0xFEE
 45665                           fsr0h	equ	0xFEA
 45666                           fsr0l	equ	0xFE9
 45667                           wreg	equ	0xFE8
 45668                           indf1	equ	0xFE7
 45669                           postdec1	equ	0xFE5
 45670                           plusw1	equ	0xFE3
 45671                           fsr1h	equ	0xFE2
 45672                           fsr1l	equ	0xFE1
 45673                           indf2	equ	0xFDF
 45674                           postinc2	equ	0xFDE
 45675                           postdec2	equ	0xFDD
 45676                           plusw2	equ	0xFDB
 45677                           fsr2h	equ	0xFDA
 45678                           fsr2l	equ	0xFD9
 45679                           status	equ	0xFD8
 45680                           
 45681 ;; *************** function _fat_get_file_size *****************
 45682 ;; Defined at:
 45683 ;;		line 562 in file "fat16.c"
 45684 ;; Parameters:    Size  Location     Type
 45685 ;;  file_number     1    wreg     unsigned char 
 45686 ;; Auto vars:     Size  Location     Type
 45687 ;;  file_number     1   65[COMRAM] unsigned char 
 45688 ;;  file_size       4   61[COMRAM] unsigned long 
 45689 ;;  offset          2   59[COMRAM] unsigned int 
 45690 ;;  sector          2   57[COMRAM] unsigned int 
 45691 ;; Return value:  Size  Location     Type
 45692 ;;                  4   53[COMRAM] unsigned long 
 45693 ;; Registers used:
 45694 ;;		wreg, status,2, status,0, cstack
 45695 ;; Tracked objects:
 45696 ;;		On entry : 0/0
 45697 ;;		On exit  : 0/0
 45698 ;;		Unchanged: 0/0
 45699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45701 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45703 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45704 ;;Total ram usage:       13 bytes
 45705 ;; Hardware stack levels used:    1
 45706 ;; Hardware stack levels required when called:    6
 45707 ;; This function calls:
 45708 ;;		__offset_from_file_number
 45709 ;;		__root_is_available
 45710 ;;		__sector_from_file_number
 45711 ;;		_flash_partial_read
 45712 ;; This function is called by:
 45713 ;;		_fat_append_to_file
 45714 ;;		_fat_copy_file
 45715 ;;		_fat_copy_sector_to_buffer
 45716 ;;		_fat_write_sector_from_buffer
 45717 ;;		__bootloader_find_file
 45718 ;;		__bootloader_verify_file
 45719 ;;		__fill_buffer_read_file
 45720 ;; This function uses a non-reentrant model
 45721 ;;
 45722                           
 45723                           	psect	text231
 45724  00894A                     __ptext231:
 45725                           	opt stack 0
 45726  00894A                     _fat_get_file_size:
 45727                           	opt stack 22
 45728                           
 45729                           ;incstack = 0
 45730                           ;fat_get_file_size@file_number stored from wreg
 45731  00894A  6E42               	movwf	fat_get_file_size@file_number,c
 45732                           
 45733                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 45734  00894C  5042               	movf	fat_get_file_size@file_number,w,c
 45735  00894E  EC76  F046         	call	__root_is_available
 45736  008952  0900               	iorlw	0
 45737  008954  B4D8               	btfsc	status,2,c
 45738  008956  D005               	goto	l2092
 45739                           
 45740                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 45741  008958  6836               	setf	?_fat_get_file_size,c
 45742  00895A  6837               	setf	?_fat_get_file_size+1,c
 45743  00895C  6838               	setf	?_fat_get_file_size+2,c
 45744  00895E  6839               	setf	?_fat_get_file_size+3,c
 45745  008960  0012               	return	
 45746  008962                     l2092:
 45747                           
 45748                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 45749  008962  5042               	movf	fat_get_file_size@file_number,w,c
 45750  008964  ECD9  F04D         	call	__sector_from_file_number
 45751  008968  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 45752  00896C  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 45753                           
 45754                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 45755  008970  5042               	movf	fat_get_file_size@file_number,w,c
 45756  008972  EC78  F04E         	call	__offset_from_file_number
 45757  008976  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 45758  00897A  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 45759                           
 45760                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 45761  00897E  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 45762  008982  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 45763  008986  0E1C               	movlw	28
 45764  008988  243C               	addwf	fat_get_file_size@offset,w,c
 45765  00898A  6E2A               	movwf	flash_partial_read@start,c
 45766  00898C  0E00               	movlw	0
 45767  00898E  203D               	addwfc	fat_get_file_size@offset+1,w,c
 45768  008990  6E2B               	movwf	flash_partial_read@start+1,c
 45769  008992  0E00               	movlw	0
 45770  008994  6E2D               	movwf	flash_partial_read@length+1,c
 45771  008996  0E04               	movlw	4
 45772  008998  6E2C               	movwf	flash_partial_read@length,c
 45773  00899A  0E3E               	movlw	low fat_get_file_size@file_size
 45774  00899C  6E2E               	movwf	flash_partial_read@data,c
 45775  00899E  0E00               	movlw	high fat_get_file_size@file_size
 45776  0089A0  6E2F               	movwf	flash_partial_read@data+1,c
 45777  0089A2  ECF2  F04C         	call	_flash_partial_read	;wreg free
 45778                           
 45779                           ;fat16.c: 583: return file_size;
 45780  0089A6  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 45781  0089AA  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 45782  0089AE  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 45783  0089B2  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 45784  0089B6  0012               	return	
 45785  0089B8                     __end_of_fat_get_file_size:
 45786                           	opt stack 0
 45787                           tosu	equ	0xFFF
 45788                           tosh	equ	0xFFE
 45789                           tosl	equ	0xFFD
 45790                           pclath	equ	0xFFA
 45791                           tblptru	equ	0xFF8
 45792                           tblptrh	equ	0xFF7
 45793                           tblptrl	equ	0xFF6
 45794                           tablat	equ	0xFF5
 45795                           prodh	equ	0xFF4
 45796                           prodl	equ	0xFF3
 45797                           intcon	equ	0xFF2
 45798                           intcon2	equ	0xFF1
 45799                           intcon3	equ	0xFF0
 45800                           indf0	equ	0xFEF
 45801                           postinc0	equ	0xFEE
 45802                           fsr0h	equ	0xFEA
 45803                           fsr0l	equ	0xFE9
 45804                           wreg	equ	0xFE8
 45805                           indf1	equ	0xFE7
 45806                           postdec1	equ	0xFE5
 45807                           plusw1	equ	0xFE3
 45808                           fsr1h	equ	0xFE2
 45809                           fsr1l	equ	0xFE1
 45810                           indf2	equ	0xFDF
 45811                           postinc2	equ	0xFDE
 45812                           postdec2	equ	0xFDD
 45813                           plusw2	equ	0xFDB
 45814                           fsr2h	equ	0xFDA
 45815                           fsr2l	equ	0xFD9
 45816                           status	equ	0xFD8
 45817                           
 45818 ;; *************** function __root_is_available *****************
 45819 ;; Defined at:
 45820 ;;		line 408 in file "fat16.c"
 45821 ;; Parameters:    Size  Location     Type
 45822 ;;  file_number     1    wreg     unsigned char 
 45823 ;; Auto vars:     Size  Location     Type
 45824 ;;  file_number     1   51[COMRAM] unsigned char 
 45825 ;;  offset          2   49[COMRAM] unsigned int 
 45826 ;;  root_sector     2   47[COMRAM] unsigned int 
 45827 ;;  first_byte      1   52[COMRAM] unsigned char 
 45828 ;; Return value:  Size  Location     Type
 45829 ;;                  1    wreg      unsigned char 
 45830 ;; Registers used:
 45831 ;;		wreg, status,2, status,0, cstack
 45832 ;; Tracked objects:
 45833 ;;		On entry : 0/0
 45834 ;;		On exit  : 0/0
 45835 ;;		Unchanged: 0/0
 45836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45838 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45841 ;;Total ram usage:        6 bytes
 45842 ;; Hardware stack levels used:    1
 45843 ;; Hardware stack levels required when called:    5
 45844 ;; This function calls:
 45845 ;;		__offset_from_file_number
 45846 ;;		__sector_from_file_number
 45847 ;;		_flash_partial_read
 45848 ;; This function is called by:
 45849 ;;		__get_available_root_entry
 45850 ;;		_fat_get_file_size
 45851 ;;		_fat_delete_file
 45852 ;;		_fat_append_to_file
 45853 ;;		_fat_copy_file
 45854 ;;		_fat_resize_file
 45855 ;;		_fat_copy_sector_to_buffer
 45856 ;;		_fat_write_sector_from_buffer
 45857 ;; This function uses a non-reentrant model
 45858 ;;
 45859                           
 45860                           	psect	text232
 45861  008CEC                     __ptext232:
 45862                           	opt stack 0
 45863  008CEC                     __root_is_available:
 45864                           	opt stack 22
 45865                           
 45866                           ;incstack = 0
 45867                           ;__root_is_available@file_number stored from wreg
 45868  008CEC  6E34               	movwf	__root_is_available@file_number,c
 45869                           
 45870                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 45871  008CEE  0E3F               	movlw	63
 45872  008CF0  6434               	cpfsgt	__root_is_available@file_number,c
 45873  008CF2  D002               	goto	l2053
 45874                           
 45875                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 45876  008CF4  0E00               	movlw	0
 45877  008CF6  0012               	return	
 45878  008CF8                     l2053:
 45879                           
 45880                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 45881  008CF8  5034               	movf	__root_is_available@file_number,w,c
 45882  008CFA  ECD9  F04D         	call	__sector_from_file_number
 45883  008CFE  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 45884  008D02  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 45885                           
 45886                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 45887  008D06  5034               	movf	__root_is_available@file_number,w,c
 45888  008D08  EC78  F04E         	call	__offset_from_file_number
 45889  008D0C  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 45890  008D10  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 45891                           
 45892                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 45893  008D14  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 45894  008D18  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 45895  008D1C  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 45896  008D20  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 45897  008D24  0E00               	movlw	0
 45898  008D26  6E2D               	movwf	flash_partial_read@length+1,c
 45899  008D28  0E01               	movlw	1
 45900  008D2A  6E2C               	movwf	flash_partial_read@length,c
 45901  008D2C  0E35               	movlw	low __root_is_available@first_byte
 45902  008D2E  6E2E               	movwf	flash_partial_read@data,c
 45903  008D30  0E00               	movlw	high __root_is_available@first_byte
 45904  008D32  6E2F               	movwf	flash_partial_read@data+1,c
 45905  008D34  ECF2  F04C         	call	_flash_partial_read	;wreg free
 45906                           
 45907                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 45908  008D38  5035               	movf	__root_is_available@first_byte,w,c
 45909  008D3A  B4D8               	btfsc	status,2,c
 45910  008D3C  D004               	goto	u8280
 45911  008D3E  0EE5               	movlw	229
 45912  008D40  1835               	xorwf	__root_is_available@first_byte,w,c
 45913  008D42  A4D8               	btfss	status,2,c
 45914  008D44  D002               	goto	l2055
 45915  008D46                     u8280:
 45916                           
 45917                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 45918  008D46  0E01               	movlw	1
 45919                           
 45920                           ;fat16.c: 434: }
 45921  008D48  0012               	return	
 45922  008D4A                     l2055:
 45923                           
 45924                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 45925  008D4A  0E00               	movlw	0
 45926  008D4C  0012               	return	
 45927  008D4E                     __end_of__root_is_available:
 45928                           	opt stack 0
 45929                           tosu	equ	0xFFF
 45930                           tosh	equ	0xFFE
 45931                           tosl	equ	0xFFD
 45932                           pclath	equ	0xFFA
 45933                           tblptru	equ	0xFF8
 45934                           tblptrh	equ	0xFF7
 45935                           tblptrl	equ	0xFF6
 45936                           tablat	equ	0xFF5
 45937                           prodh	equ	0xFF4
 45938                           prodl	equ	0xFF3
 45939                           intcon	equ	0xFF2
 45940                           intcon2	equ	0xFF1
 45941                           intcon3	equ	0xFF0
 45942                           indf0	equ	0xFEF
 45943                           postinc0	equ	0xFEE
 45944                           fsr0h	equ	0xFEA
 45945                           fsr0l	equ	0xFE9
 45946                           wreg	equ	0xFE8
 45947                           indf1	equ	0xFE7
 45948                           postdec1	equ	0xFE5
 45949                           plusw1	equ	0xFE3
 45950                           fsr1h	equ	0xFE2
 45951                           fsr1l	equ	0xFE1
 45952                           indf2	equ	0xFDF
 45953                           postinc2	equ	0xFDE
 45954                           postdec2	equ	0xFDD
 45955                           plusw2	equ	0xFDB
 45956                           fsr2h	equ	0xFDA
 45957                           fsr2l	equ	0xFD9
 45958                           status	equ	0xFD8
 45959                           
 45960 ;; *************** function __get_first_cluster *****************
 45961 ;; Defined at:
 45962 ;;		line 501 in file "fat16.c"
 45963 ;; Parameters:    Size  Location     Type
 45964 ;;  file_number     1    wreg     unsigned char 
 45965 ;; Auto vars:     Size  Location     Type
 45966 ;;  file_number     1   55[COMRAM] unsigned char 
 45967 ;;  first_cluste    2   53[COMRAM] unsigned int 
 45968 ;;  offset          2   51[COMRAM] unsigned int 
 45969 ;;  sector          2   49[COMRAM] unsigned int 
 45970 ;; Return value:  Size  Location     Type
 45971 ;;                  2   47[COMRAM] unsigned int 
 45972 ;; Registers used:
 45973 ;;		wreg, status,2, status,0, cstack
 45974 ;; Tracked objects:
 45975 ;;		On entry : 0/0
 45976 ;;		On exit  : 0/0
 45977 ;;		Unchanged: 0/0
 45978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45980 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45982 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45983 ;;Total ram usage:        9 bytes
 45984 ;; Hardware stack levels used:    1
 45985 ;; Hardware stack levels required when called:    5
 45986 ;; This function calls:
 45987 ;;		__offset_from_file_number
 45988 ;;		__sector_from_file_number
 45989 ;;		_flash_partial_read
 45990 ;; This function is called by:
 45991 ;;		_fat_delete_file
 45992 ;;		_fat_copy_sector_to_buffer
 45993 ;;		_fat_write_sector_from_buffer
 45994 ;; This function uses a non-reentrant model
 45995 ;;
 45996                           
 45997                           	psect	text233
 45998  0092D0                     __ptext233:
 45999                           	opt stack 0
 46000  0092D0                     __get_first_cluster:
 46001                           	opt stack 21
 46002                           
 46003                           ;incstack = 0
 46004                           ;__get_first_cluster@file_number stored from wreg
 46005  0092D0  6E38               	movwf	__get_first_cluster@file_number,c
 46006                           
 46007                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 46008  0092D2  5038               	movf	__get_first_cluster@file_number,w,c
 46009  0092D4  ECD9  F04D         	call	__sector_from_file_number
 46010  0092D8  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 46011  0092DC  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 46012                           
 46013                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 46014  0092E0  5038               	movf	__get_first_cluster@file_number,w,c
 46015  0092E2  EC78  F04E         	call	__offset_from_file_number
 46016  0092E6  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 46017  0092EA  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 46018                           
 46019                           ;fat16.c: 510: offset += 26;
 46020  0092EE  0E1A               	movlw	26
 46021  0092F0  2634               	addwf	__get_first_cluster@offset,f,c
 46022  0092F2  0E00               	movlw	0
 46023  0092F4  2235               	addwfc	__get_first_cluster@offset+1,f,c
 46024                           
 46025                           ;fat16.c: 513: flash_partial_read(sector, offset, 2, &first_cluster);
 46026  0092F6  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 46027  0092FA  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 46028  0092FE  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 46029  009302  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 46030  009306  0E00               	movlw	0
 46031  009308  6E2D               	movwf	flash_partial_read@length+1,c
 46032  00930A  0E02               	movlw	2
 46033  00930C  6E2C               	movwf	flash_partial_read@length,c
 46034  00930E  0E36               	movlw	low __get_first_cluster@first_cluster
 46035  009310  6E2E               	movwf	flash_partial_read@data,c
 46036  009312  0E00               	movlw	high __get_first_cluster@first_cluster
 46037  009314  6E2F               	movwf	flash_partial_read@data+1,c
 46038  009316  ECF2  F04C         	call	_flash_partial_read	;wreg free
 46039                           
 46040                           ;fat16.c: 514: return first_cluster;
 46041  00931A  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 46042  00931E  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 46043  009322  0012               	return	
 46044  009324                     __end_of__get_first_cluster:
 46045                           	opt stack 0
 46046                           tosu	equ	0xFFF
 46047                           tosh	equ	0xFFE
 46048                           tosl	equ	0xFFD
 46049                           pclath	equ	0xFFA
 46050                           tblptru	equ	0xFF8
 46051                           tblptrh	equ	0xFF7
 46052                           tblptrl	equ	0xFF6
 46053                           tablat	equ	0xFF5
 46054                           prodh	equ	0xFF4
 46055                           prodl	equ	0xFF3
 46056                           intcon	equ	0xFF2
 46057                           intcon2	equ	0xFF1
 46058                           intcon3	equ	0xFF0
 46059                           indf0	equ	0xFEF
 46060                           postinc0	equ	0xFEE
 46061                           fsr0h	equ	0xFEA
 46062                           fsr0l	equ	0xFE9
 46063                           wreg	equ	0xFE8
 46064                           indf1	equ	0xFE7
 46065                           postdec1	equ	0xFE5
 46066                           plusw1	equ	0xFE3
 46067                           fsr1h	equ	0xFE2
 46068                           fsr1l	equ	0xFE1
 46069                           indf2	equ	0xFDF
 46070                           postinc2	equ	0xFDE
 46071                           postdec2	equ	0xFDD
 46072                           plusw2	equ	0xFDB
 46073                           fsr2h	equ	0xFDA
 46074                           fsr2l	equ	0xFD9
 46075                           status	equ	0xFD8
 46076                           
 46077 ;; *************** function _flash_partial_read *****************
 46078 ;; Defined at:
 46079 ;;		line 481 in file "flash.c"
 46080 ;; Parameters:    Size  Location     Type
 46081 ;;  page            2   39[COMRAM] unsigned int 
 46082 ;;  start           2   41[COMRAM] unsigned int 
 46083 ;;  length          2   43[COMRAM] unsigned int 
 46084 ;;  data            2   45[COMRAM] PTR unsigned char 
 46085 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 46086 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 46087 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 46088 ;;		 -> ToSendDataBuffer(64), 
 46089 ;; Auto vars:     Size  Location     Type
 46090 ;;		None
 46091 ;; Return value:  Size  Location     Type
 46092 ;;                  1    wreg      void 
 46093 ;; Registers used:
 46094 ;;		wreg, status,2, status,0, cstack
 46095 ;; Tracked objects:
 46096 ;;		On entry : 0/0
 46097 ;;		On exit  : 0/0
 46098 ;;		Unchanged: 0/0
 46099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46104 ;;Total ram usage:        8 bytes
 46105 ;; Hardware stack levels used:    1
 46106 ;; Hardware stack levels required when called:    4
 46107 ;; This function calls:
 46108 ;;		__flash_partial_read
 46109 ;;		_spi_set_configuration
 46110 ;; This function is called by:
 46111 ;;		__root_is_available
 46112 ;;		__read_fat
 46113 ;;		__get_first_cluster
 46114 ;;		_fat_get_file_size
 46115 ;;		_fat_read_from_file_fast
 46116 ;;		_fat_get_file_information
 46117 ;; This function uses a non-reentrant model
 46118 ;;
 46119                           
 46120                           	psect	text234
 46121  0099E4                     __ptext234:
 46122                           	opt stack 0
 46123  0099E4                     _flash_partial_read:
 46124                           	opt stack 23
 46125                           
 46126                           ;flash.c: 484: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 46127                           
 46128                           ;incstack = 0
 46129  0099E4  0E00               	movlw	0
 46130  0099E6  EC06  F02A         	call	_spi_set_configuration
 46131                           
 46132                           ;flash.c: 487: _flash_partial_read(page, start, length, data);
 46133  0099EA  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 46134  0099EE  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 46135  0099F2  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 46136  0099F6  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 46137  0099FA  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 46138  0099FE  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 46139  009A02  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 46140  009A06  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 46141  009A0A  EC87  F043         	call	__flash_partial_read	;wreg free
 46142                           
 46143                           ;flash.c: 490: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 46144  009A0E  0E01               	movlw	1
 46145  009A10  EC06  F02A         	call	_spi_set_configuration
 46146  009A14  0012               	return		;funcret
 46147  009A16                     __end_of_flash_partial_read:
 46148                           	opt stack 0
 46149                           tosu	equ	0xFFF
 46150                           tosh	equ	0xFFE
 46151                           tosl	equ	0xFFD
 46152                           pclath	equ	0xFFA
 46153                           tblptru	equ	0xFF8
 46154                           tblptrh	equ	0xFF7
 46155                           tblptrl	equ	0xFF6
 46156                           tablat	equ	0xFF5
 46157                           prodh	equ	0xFF4
 46158                           prodl	equ	0xFF3
 46159                           intcon	equ	0xFF2
 46160                           intcon2	equ	0xFF1
 46161                           intcon3	equ	0xFF0
 46162                           indf0	equ	0xFEF
 46163                           postinc0	equ	0xFEE
 46164                           fsr0h	equ	0xFEA
 46165                           fsr0l	equ	0xFE9
 46166                           wreg	equ	0xFE8
 46167                           indf1	equ	0xFE7
 46168                           postdec1	equ	0xFE5
 46169                           plusw1	equ	0xFE3
 46170                           fsr1h	equ	0xFE2
 46171                           fsr1l	equ	0xFE1
 46172                           indf2	equ	0xFDF
 46173                           postinc2	equ	0xFDE
 46174                           postdec2	equ	0xFDD
 46175                           plusw2	equ	0xFDB
 46176                           fsr2h	equ	0xFDA
 46177                           fsr2l	equ	0xFD9
 46178                           status	equ	0xFD8
 46179                           
 46180 ;; *************** function _spi_set_configuration *****************
 46181 ;; Defined at:
 46182 ;;		line 140 in file "spi.c"
 46183 ;; Parameters:    Size  Location     Type
 46184 ;;  configuratio    1    wreg     enum E6751
 46185 ;; Auto vars:     Size  Location     Type
 46186 ;;  configuratio    1    0[COMRAM] enum E6751
 46187 ;;  cntr            1    0        unsigned char 
 46188 ;; Return value:  Size  Location     Type
 46189 ;;                  1    wreg      void 
 46190 ;; Registers used:
 46191 ;;		wreg, status,2, status,0
 46192 ;; Tracked objects:
 46193 ;;		On entry : 0/0
 46194 ;;		On exit  : 0/0
 46195 ;;		Unchanged: 0/0
 46196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46201 ;;Total ram usage:        1 bytes
 46202 ;; Hardware stack levels used:    1
 46203 ;; This function calls:
 46204 ;;		Nothing
 46205 ;; This function is called by:
 46206 ;;		_flash_init
 46207 ;;		_flash_is_busy
 46208 ;;		_flash_sector_read
 46209 ;;		_flash_sector_write
 46210 ;;		_flash_partial_read
 46211 ;;		_flash_partial_write
 46212 ;;		_flash_copy_page_to_buffer
 46213 ;;		_flash_read_from_buffer
 46214 ;;		_flash_write_to_buffer
 46215 ;;		_flash_set_power_state
 46216 ;;		_flash_write_page_from_buffer
 46217 ;; This function uses a non-reentrant model
 46218 ;;
 46219                           
 46220                           	psect	text235
 46221  00540C                     __ptext235:
 46222                           	opt stack 0
 46223  00540C                     _spi_set_configuration:
 46224                           	opt stack 28
 46225                           
 46226                           ;incstack = 0
 46227                           ;spi_set_configuration@configuration stored from wreg
 46228  00540C  6E01               	movwf	spi_set_configuration@configuration,c
 46229                           
 46230                           ;spi.c: 142: uint8_t cntr;;spi.c: 145: switch(configuration)
 46231  00540E  D07B               	goto	l3094
 46232  005410                     l3095:
 46233                           
 46234                           ;spi.c: 153: LATDbits.LD2 = 1;
 46235  005410  848C               	bsf	3980,2,c	;volatile
 46236                           
 46237                           ;spi.c: 154: TRISDbits.TRISD2 = 0;
 46238  005412  9495               	bcf	3989,2,c	;volatile
 46239                           
 46240                           ;spi.c: 155: TRISDbits.TRISD2 = 1;
 46241  005414  8495               	bsf	3989,2,c	;volatile
 46242  005416  A483               	btfss	3971,2,c	;volatile
 46243  005418  D7FE               	goto	l3097
 46244                           
 46245                           ;spi.c: 160: DMACON1bits.DMAEN = 0;
 46246  00541A  9088               	bcf	3976,0,c	;volatile
 46247                           
 46248                           ;spi.c: 161: SSP2CON1bits.SSPEN = 0;
 46249  00541C  9A72               	bcf	3954,5,c	;volatile
 46250                           
 46251                           ;spi.c: 164: TRISDbits.TRISD6 = 1;
 46252  00541E  8C95               	bsf	3989,6,c	;volatile
 46253                           
 46254                           ;spi.c: 165: TRISDbits.TRISD4 = 0;
 46255  005420  9895               	bcf	3989,4,c	;volatile
 46256                           
 46257                           ;spi.c: 166: LATDbits.LD4 = 0;
 46258  005422  988C               	bcf	3980,4,c	;volatile
 46259                           
 46260                           ;spi.c: 167: TRISDbits.TRISD5 = 0;
 46261  005424  9A95               	bcf	3989,5,c	;volatile
 46262                           
 46263                           ;spi.c: 168: LATDbits.LD5 = 0;
 46264  005426  9A8C               	bcf	3980,5,c	;volatile
 46265                           
 46266                           ;spi.c: 169: TRISDbits.TRISD7 = 0;
 46267  005428  9E95               	bcf	3989,7,c	;volatile
 46268                           
 46269                           ;spi.c: 170: LATDbits.LD7 = 1;
 46270  00542A  8E8C               	bsf	3980,7,c	;volatile
 46271                           
 46272                           ;spi.c: 173: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46273  00542C  0E55               	movlw	85
 46274  00542E  6EA7               	movwf	4007,c	;volsfr
 46275  005430  0EAA               	movlw	170
 46276  005432  6EA7               	movwf	4007,c	;volsfr
 46277  005434  010E               	movlb	14	; () banked
 46278  005436  91BF               	bcf	191,0,b	;volatile
 46279                           
 46280                           ;spi.c: 175: RPOR23 = 0b00000;
 46281  005438  0E00               	movlw	0
 46282  00543A  6FD7               	movwf	215,b	;volatile
 46283                           
 46284                           ;spi.c: 176: RPINR21 = 0b11111;
 46285  00543C  0E1F               	movlw	31
 46286  00543E  6FFC               	movwf	252,b	;volatile
 46287                           
 46288                           ;spi.c: 177: RPINR23 = 0b11111;
 46289  005440  0E1F               	movlw	31
 46290  005442  6FFE               	movwf	254,b	;volatile
 46291                           
 46292                           ;spi.c: 179: RPINR21 = 23;
 46293  005444  0E17               	movlw	23
 46294  005446  6FFC               	movwf	252,b	;volatile
 46295                           
 46296                           ;spi.c: 180: RPOR21 = 10;
 46297  005448  0E0A               	movlw	10
 46298  00544A  6FD5               	movwf	213,b	;volatile
 46299                           
 46300                           ;spi.c: 182: RPOR22 = 11;
 46301  00544C  0E0B               	movlw	11
 46302  00544E  6FD6               	movwf	214,b	;volatile
 46303                           
 46304                           ;spi.c: 183: RPINR22 = 22;
 46305  005450  0E16               	movlw	22
 46306  005452  6FFD               	movwf	253,b	;volatile
 46307                           
 46308                           ;spi.c: 184: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46309  005454  0E55               	movlw	85
 46310  005456  6EA7               	movwf	4007,c	;volsfr
 46311  005458  0EAA               	movlw	170
 46312  00545A  6EA7               	movwf	4007,c	;volsfr
 46313                           
 46314                           ; BSR set to: 14
 46315  00545C  81BF               	bsf	191,0,b	;volatile
 46316                           
 46317                           ; BSR set to: 14
 46318                           ;spi.c: 187: SSP2STATbits.SMP = 1;
 46319  00545E  8E73               	bsf	3955,7,c	;volatile
 46320                           
 46321                           ; BSR set to: 14
 46322                           ;spi.c: 188: SSP2STATbits.CKE = 1;
 46323  005460  8C73               	bsf	3955,6,c	;volatile
 46324                           
 46325                           ; BSR set to: 14
 46326                           ;spi.c: 189: SSP2CON1bits.WCOL = 0;
 46327  005462  9E72               	bcf	3954,7,c	;volatile
 46328                           
 46329                           ; BSR set to: 14
 46330                           ;spi.c: 190: SSP2CON1bits.SSPOV = 0;
 46331  005464  9C72               	bcf	3954,6,c	;volatile
 46332                           
 46333                           ; BSR set to: 14
 46334                           ;spi.c: 191: SSP2CON1bits.CKP = 0;
 46335  005466  9872               	bcf	3954,4,c	;volatile
 46336                           
 46337                           ; BSR set to: 14
 46338                           ;spi.c: 192: SSP2CON1bits.SSPM =0b0000;
 46339  005468  9072               	bcf	3954,0,c	;volatile
 46340  00546A  9272               	bcf	3954,1,c	;volatile
 46341  00546C  9472               	bcf	3954,2,c	;volatile
 46342  00546E  9672               	bcf	3954,3,c	;volatile
 46343                           
 46344                           ; BSR set to: 14
 46345                           ;spi.c: 193: SSP2CON1bits.SSPEN = 1;
 46346  005470  8A72               	bsf	3954,5,c	;volatile
 46347                           
 46348                           ;spi.c: 196: active_configuration = SPI_CONFIGURATION_INTERNAL;
 46349  005472  0E00               	movlw	0
 46350  005474  0101               	movlb	1	; () banked
 46351  005476  6F83               	movwf	_active_configuration& (0+255),b
 46352                           
 46353                           ;spi.c: 197: break;
 46354  005478  0012               	return	
 46355  00547A                     l3100:
 46356                           
 46357                           ;spi.c: 201: DMACON1bits.DMAEN = 0;
 46358  00547A  9088               	bcf	3976,0,c	;volatile
 46359                           
 46360                           ;spi.c: 202: SSP2CON1bits.SSPEN = 0;
 46361  00547C  9A72               	bcf	3954,5,c	;volatile
 46362                           
 46363                           ;spi.c: 205: ODCON3bits.SPI2OD = 0;
 46364  00547E  010F               	movlb	15	; () banked
 46365  005480  9340               	bcf	64,1,b	;volatile
 46366                           
 46367                           ; BSR set to: 15
 46368                           ;spi.c: 208: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46369  005482  0E55               	movlw	85
 46370  005484  6EA7               	movwf	4007,c	;volsfr
 46371  005486  0EAA               	movlw	170
 46372  005488  6EA7               	movwf	4007,c	;volsfr
 46373                           
 46374                           ; BSR set to: 15
 46375  00548A  010E               	movlb	14	; () banked
 46376  00548C  91BF               	bcf	191,0,b	;volatile
 46377                           
 46378                           ;spi.c: 209: RPOR23 = 10;
 46379  00548E  0E0A               	movlw	10
 46380  005490  6FD7               	movwf	215,b	;volatile
 46381                           
 46382                           ;spi.c: 210: RPINR21 = 21;
 46383  005492  0E15               	movlw	21
 46384  005494  6FFC               	movwf	252,b	;volatile
 46385                           
 46386                           ;spi.c: 211: RPINR22 = 22;
 46387  005496  0E16               	movlw	22
 46388  005498  6FFD               	movwf	253,b	;volatile
 46389                           
 46390                           ;spi.c: 212: RPINR23 = 19;
 46391  00549A  0E13               	movlw	19
 46392  00549C  6FFE               	movwf	254,b	;volatile
 46393                           
 46394                           ;spi.c: 213: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46395  00549E  0E55               	movlw	85
 46396  0054A0  6EA7               	movwf	4007,c	;volsfr
 46397  0054A2  0EAA               	movlw	170
 46398  0054A4  6EA7               	movwf	4007,c	;volsfr
 46399                           
 46400                           ; BSR set to: 14
 46401  0054A6  81BF               	bsf	191,0,b	;volatile
 46402                           
 46403                           ; BSR set to: 14
 46404                           ;spi.c: 215: SSP2CON1bits.SSPEN = 0;
 46405  0054A8  9A72               	bcf	3954,5,c	;volatile
 46406                           
 46407                           ; BSR set to: 14
 46408                           ;spi.c: 223: TRISDbits.TRISD5 = 1;
 46409  0054AA  8A95               	bsf	3989,5,c	;volatile
 46410                           
 46411                           ; BSR set to: 14
 46412                           ;spi.c: 224: TRISDbits.TRISD4 = 1;
 46413  0054AC  8895               	bsf	3989,4,c	;volatile
 46414                           
 46415                           ; BSR set to: 14
 46416                           ;spi.c: 227: TRISDbits.TRISD6 = 0;
 46417  0054AE  9C95               	bcf	3989,6,c	;volatile
 46418                           
 46419                           ; BSR set to: 14
 46420                           ;spi.c: 228: LATDbits.LD6 = 1;
 46421  0054B0  8C8C               	bsf	3980,6,c	;volatile
 46422                           
 46423                           ; BSR set to: 14
 46424                           ;spi.c: 231: TRISDbits.TRISD2 = 1;
 46425  0054B2  8495               	bsf	3989,2,c	;volatile
 46426                           
 46427                           ; BSR set to: 14
 46428                           ;spi.c: 237: SSP2STATbits.SMP = 0;
 46429  0054B4  9E73               	bcf	3955,7,c	;volatile
 46430                           
 46431                           ; BSR set to: 14
 46432                           ;spi.c: 238: SSP2STATbits.CKE = 1;
 46433  0054B6  8C73               	bsf	3955,6,c	;volatile
 46434                           
 46435                           ; BSR set to: 14
 46436                           ;spi.c: 239: SSP2CON1bits.WCOL = 0;
 46437  0054B8  9E72               	bcf	3954,7,c	;volatile
 46438                           
 46439                           ; BSR set to: 14
 46440                           ;spi.c: 240: SSP2CON1bits.SSPOV = 0;
 46441  0054BA  9C72               	bcf	3954,6,c	;volatile
 46442                           
 46443                           ; BSR set to: 14
 46444                           ;spi.c: 241: SSP2CON1bits.CKP = 0;
 46445  0054BC  9872               	bcf	3954,4,c	;volatile
 46446                           
 46447                           ; BSR set to: 14
 46448                           ;spi.c: 242: SSP2CON1bits.SSPM =0b0100;
 46449  0054BE  5072               	movf	3954,w,c	;volatile
 46450  0054C0  0BF0               	andlw	-16
 46451  0054C2  0904               	iorlw	4
 46452  0054C4  6E72               	movwf	3954,c	;volatile
 46453                           
 46454                           ; BSR set to: 14
 46455                           ;spi.c: 243: PIR3bits.SSP2IF = 0;
 46456  0054C6  9EA4               	bcf	4004,7,c	;volatile
 46457                           
 46458                           ; BSR set to: 14
 46459                           ;spi.c: 244: SSP2CON1bits.SSPEN = 1;
 46460  0054C8  8A72               	bsf	3954,5,c	;volatile
 46461                           
 46462                           ; BSR set to: 14
 46463                           ;spi.c: 247: DMACON1bits.TXINC = 1;
 46464  0054CA  8A88               	bsf	3976,5,c	;volatile
 46465                           
 46466                           ; BSR set to: 14
 46467                           ;spi.c: 248: DMACON1bits.RXINC = 1;
 46468  0054CC  8888               	bsf	3976,4,c	;volatile
 46469                           
 46470                           ; BSR set to: 14
 46471                           ;spi.c: 249: DMACON1bits.DUPLEX1 = 1;
 46472  0054CE  8688               	bsf	3976,3,c	;volatile
 46473                           
 46474                           ; BSR set to: 14
 46475                           ;spi.c: 250: DMACON1bits.DUPLEX0 = 0;
 46476  0054D0  9488               	bcf	3976,2,c	;volatile
 46477                           
 46478                           ; BSR set to: 14
 46479                           ;spi.c: 251: DMACON1bits.DLYINTEN = 0;
 46480  0054D2  9288               	bcf	3976,1,c	;volatile
 46481                           
 46482                           ; BSR set to: 14
 46483                           ;spi.c: 253: DMACON2bits.DLYCYC = 0b0000;
 46484  0054D4  9886               	bcf	3974,4,c	;volatile
 46485  0054D6  9A86               	bcf	3974,5,c	;volatile
 46486  0054D8  9C86               	bcf	3974,6,c	;volatile
 46487  0054DA  9E86               	bcf	3974,7,c	;volatile
 46488                           
 46489                           ; BSR set to: 14
 46490                           ;spi.c: 254: DMACON2bits.INTLVL = 0b0000;
 46491  0054DC  9086               	bcf	3974,0,c	;volatile
 46492  0054DE  9286               	bcf	3974,1,c	;volatile
 46493  0054E0  9486               	bcf	3974,2,c	;volatile
 46494  0054E2  9686               	bcf	3974,3,c	;volatile
 46495                           
 46496                           ; BSR set to: 14
 46497                           ;spi.c: 257: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 46498  0054E4  0E00               	movlw	0
 46499  0054E6  6E66               	movwf	3942,c	;volatile
 46500                           
 46501                           ; BSR set to: 14
 46502                           ;spi.c: 258: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 46503  0054E8  0E3F               	movlw	63
 46504  0054EA  6E67               	movwf	3943,c	;volatile
 46505                           
 46506                           ; BSR set to: 14
 46507                           ;spi.c: 261: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 46508  0054EC  0E03               	movlw	high __spi_external_tx_buffer
 46509  0054EE  6E6A               	movwf	3946,c	;volatile
 46510                           
 46511                           ; BSR set to: 14
 46512                           ;spi.c: 262: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 46513  0054F0  0E40               	movlw	low (low __spi_external_tx_buffer)
 46514  0054F2  6E6B               	movwf	3947,c	;volatile
 46515                           
 46516                           ; BSR set to: 14
 46517                           ;spi.c: 265: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 46518  0054F4  0E03               	movlw	high __spi_external_rx_buffer
 46519  0054F6  6E68               	movwf	3944,c	;volatile
 46520                           
 46521                           ; BSR set to: 14
 46522                           ;spi.c: 266: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 46523  0054F8  0E00               	movlw	low (low __spi_external_rx_buffer)
 46524  0054FA  6E69               	movwf	3945,c	;volatile
 46525                           
 46526                           ; BSR set to: 14
 46527                           ;spi.c: 268: DMACON1bits.DMAEN = 1;
 46528  0054FC  8088               	bsf	3976,0,c	;volatile
 46529                           
 46530                           ; BSR set to: 14
 46531                           ;spi.c: 336: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 46532  0054FE  0E01               	movlw	1
 46533  005500  0101               	movlb	1	; () banked
 46534  005502  6F83               	movwf	_active_configuration& (0+255),b
 46535                           
 46536                           ; BSR set to: 1
 46537                           ;spi.c: 338: }
 46538                           
 46539                           ;spi.c: 337: break;
 46540  005504  0012               	return	
 46541  005506                     l3094:
 46542                           
 46543                           ; BSR set to: 1
 46544  005506  5001               	movf	spi_set_configuration@configuration,w,c
 46545                           
 46546                           ; Switch size 1, requested type "space"
 46547                           ; Number of cases is 2, Range of values is 0 to 1
 46548                           ; switch strategies available:
 46549                           ; Name         Instructions Cycles
 46550                           ; simple_byte            7     4 (average)
 46551                           ;	Chosen strategy is simple_byte
 46552  005508  0A00               	xorlw	0	; case 0
 46553  00550A  B4D8               	btfsc	status,2,c
 46554  00550C  D781               	goto	l3095
 46555  00550E  0A01               	xorlw	1	; case 1
 46556  005510  A4D8               	btfss	status,2,c
 46557  005512  0012               	return	
 46558  005514  D7B2               	goto	l3100
 46559  005516                     __end_of_spi_set_configuration:
 46560                           	opt stack 0
 46561                           tosu	equ	0xFFF
 46562                           tosh	equ	0xFFE
 46563                           tosl	equ	0xFFD
 46564                           pclath	equ	0xFFA
 46565                           tblptru	equ	0xFF8
 46566                           tblptrh	equ	0xFF7
 46567                           tblptrl	equ	0xFF6
 46568                           tablat	equ	0xFF5
 46569                           prodh	equ	0xFF4
 46570                           prodl	equ	0xFF3
 46571                           intcon	equ	0xFF2
 46572                           intcon2	equ	0xFF1
 46573                           intcon3	equ	0xFF0
 46574                           indf0	equ	0xFEF
 46575                           postinc0	equ	0xFEE
 46576                           fsr0h	equ	0xFEA
 46577                           fsr0l	equ	0xFE9
 46578                           wreg	equ	0xFE8
 46579                           indf1	equ	0xFE7
 46580                           postdec1	equ	0xFE5
 46581                           plusw1	equ	0xFE3
 46582                           fsr1h	equ	0xFE2
 46583                           fsr1l	equ	0xFE1
 46584                           indf2	equ	0xFDF
 46585                           postinc2	equ	0xFDE
 46586                           postdec2	equ	0xFDD
 46587                           plusw2	equ	0xFDB
 46588                           fsr2h	equ	0xFDA
 46589                           fsr2l	equ	0xFD9
 46590                           status	equ	0xFD8
 46591                           
 46592 ;; *************** function __flash_partial_read *****************
 46593 ;; Defined at:
 46594 ;;		line 309 in file "flash.c"
 46595 ;; Parameters:    Size  Location     Type
 46596 ;;  page            2   19[COMRAM] unsigned int 
 46597 ;;  start           2   21[COMRAM] unsigned int 
 46598 ;;  length          2   23[COMRAM] unsigned int 
 46599 ;;  data            2   25[COMRAM] PTR unsigned char 
 46600 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 46601 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 46602 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 46603 ;;		 -> buffer(512), ToSendDataBuffer(64), msd_buffer(512), 
 46604 ;; Auto vars:     Size  Location     Type
 46605 ;;  command         4   31[COMRAM] unsigned char [4]
 46606 ;;  address         4   35[COMRAM] unsigned long 
 46607 ;; Return value:  Size  Location     Type
 46608 ;;                  1    wreg      void 
 46609 ;; Registers used:
 46610 ;;		wreg, status,2, status,0, cstack
 46611 ;; Tracked objects:
 46612 ;;		On entry : 0/0
 46613 ;;		On exit  : 0/0
 46614 ;;		Unchanged: 0/0
 46615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46616 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46617 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46619 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46620 ;;Total ram usage:       20 bytes
 46621 ;; Hardware stack levels used:    1
 46622 ;; Hardware stack levels required when called:    3
 46623 ;; This function calls:
 46624 ;;		__flash_is_busy
 46625 ;;		_spi_tx_rx
 46626 ;; This function is called by:
 46627 ;;		_flash_sector_read
 46628 ;;		_flash_partial_read
 46629 ;; This function uses a non-reentrant model
 46630 ;;
 46631                           
 46632                           	psect	text236
 46633  00870E                     __ptext236:
 46634                           	opt stack 0
 46635  00870E                     __flash_partial_read:
 46636                           	opt stack 23
 46637                           
 46638                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 46639                           
 46640                           ;incstack = 0
 46641  00870E  ECF6  F04E         	call	__flash_is_busy	;wreg free
 46642  008712  0900               	iorlw	0
 46643  008714  A4D8               	btfss	status,2,c
 46644  008716  D7FB               	goto	__flash_partial_read
 46645                           
 46646                           ;flash.c: 318: address = page;
 46647  008718  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 46648  00871C  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 46649  008720  6A26               	clrf	__flash_partial_read@address+2,c
 46650  008722  6A27               	clrf	__flash_partial_read@address+3,c
 46651                           
 46652                           ;flash.c: 319: address <<= 9;
 46653  008724  0E09               	movlw	9
 46654  008726                     u7545:
 46655  008726  90D8               	bcf	status,0,c
 46656  008728  3624               	rlcf	__flash_partial_read@address,f,c
 46657  00872A  3625               	rlcf	__flash_partial_read@address+1,f,c
 46658  00872C  3626               	rlcf	__flash_partial_read@address+2,f,c
 46659  00872E  3627               	rlcf	__flash_partial_read@address+3,f,c
 46660  008730  2EE8               	decfsz	wreg,f,c
 46661  008732  D7F9               	goto	u7545
 46662                           
 46663                           ;flash.c: 320: address |= start;
 46664  008734  5016               	movf	__flash_partial_read@start,w,c
 46665  008736  6E1C               	movwf	??__flash_partial_read& (0+255),c
 46666  008738  5017               	movf	__flash_partial_read@start+1,w,c
 46667  00873A  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 46668  00873C  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 46669  00873E  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 46670  008740  501C               	movf	??__flash_partial_read,w,c
 46671  008742  1224               	iorwf	__flash_partial_read@address,f,c
 46672  008744  501D               	movf	??__flash_partial_read+1,w,c
 46673  008746  1225               	iorwf	__flash_partial_read@address+1,f,c
 46674  008748  501E               	movf	??__flash_partial_read+2,w,c
 46675  00874A  1226               	iorwf	__flash_partial_read@address+2,f,c
 46676  00874C  501F               	movf	??__flash_partial_read+3,w,c
 46677  00874E  1227               	iorwf	__flash_partial_read@address+3,f,c
 46678                           
 46679                           ;flash.c: 323: command[0] = 0x03;
 46680  008750  0E03               	movlw	3
 46681  008752  6E20               	movwf	__flash_partial_read@command,c
 46682                           
 46683                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 46684  008754  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 46685                           
 46686                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 46687  008758  5025               	movf	__flash_partial_read@address+1,w,c
 46688  00875A  6E22               	movwf	__flash_partial_read@command+2,c
 46689                           
 46690                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 46691  00875C  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 46692                           
 46693                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 46694  008760  0E20               	movlw	low __flash_partial_read@command
 46695  008762  6E01               	movwf	spi_tx_rx@command,c
 46696  008764  0E00               	movlw	high __flash_partial_read@command
 46697  008766  6E02               	movwf	spi_tx_rx@command+1,c
 46698  008768  0E00               	movlw	0
 46699  00876A  6E04               	movwf	spi_tx_rx@command_length+1,c
 46700  00876C  0E04               	movlw	4
 46701  00876E  6E03               	movwf	spi_tx_rx@command_length,c
 46702  008770  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 46703  008774  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 46704  008778  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 46705  00877C  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 46706  008780  EC2E  F041         	call	_spi_tx_rx	;wreg free
 46707  008784  0012               	return		;funcret
 46708  008786                     __end_of__flash_partial_read:
 46709                           	opt stack 0
 46710                           tosu	equ	0xFFF
 46711                           tosh	equ	0xFFE
 46712                           tosl	equ	0xFFD
 46713                           pclath	equ	0xFFA
 46714                           tblptru	equ	0xFF8
 46715                           tblptrh	equ	0xFF7
 46716                           tblptrl	equ	0xFF6
 46717                           tablat	equ	0xFF5
 46718                           prodh	equ	0xFF4
 46719                           prodl	equ	0xFF3
 46720                           intcon	equ	0xFF2
 46721                           intcon2	equ	0xFF1
 46722                           intcon3	equ	0xFF0
 46723                           indf0	equ	0xFEF
 46724                           postinc0	equ	0xFEE
 46725                           fsr0h	equ	0xFEA
 46726                           fsr0l	equ	0xFE9
 46727                           wreg	equ	0xFE8
 46728                           indf1	equ	0xFE7
 46729                           postdec1	equ	0xFE5
 46730                           plusw1	equ	0xFE3
 46731                           fsr1h	equ	0xFE2
 46732                           fsr1l	equ	0xFE1
 46733                           indf2	equ	0xFDF
 46734                           postinc2	equ	0xFDE
 46735                           postdec2	equ	0xFDD
 46736                           plusw2	equ	0xFDB
 46737                           fsr2h	equ	0xFDA
 46738                           fsr2l	equ	0xFD9
 46739                           status	equ	0xFD8
 46740                           
 46741 ;; *************** function __flash_is_busy *****************
 46742 ;; Defined at:
 46743 ;;		line 281 in file "flash.c"
 46744 ;; Parameters:    Size  Location     Type
 46745 ;;		None
 46746 ;; Auto vars:     Size  Location     Type
 46747 ;;  status          2   17[COMRAM] unsigned int 
 46748 ;; Return value:  Size  Location     Type
 46749 ;;                  1    wreg      unsigned char 
 46750 ;; Registers used:
 46751 ;;		wreg, status,2, status,0, cstack
 46752 ;; Tracked objects:
 46753 ;;		On entry : 0/0
 46754 ;;		On exit  : 0/0
 46755 ;;		Unchanged: 0/0
 46756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46761 ;;Total ram usage:        2 bytes
 46762 ;; Hardware stack levels used:    1
 46763 ;; Hardware stack levels required when called:    2
 46764 ;; This function calls:
 46765 ;;		__flash_get_status
 46766 ;;		__flash_wakeup
 46767 ;; This function is called by:
 46768 ;;		__flash_set_page_size
 46769 ;;		__flash_copy_page_to_buffer
 46770 ;;		__flash_compare_page_to_buffer
 46771 ;;		__flash_write_to_buffer
 46772 ;;		__flash_write_page_from_buffer
 46773 ;;		__flash_partial_read
 46774 ;;		__flash_buffer_read
 46775 ;;		_flash_is_busy
 46776 ;;		_flash_partial_write
 46777 ;;		__flash_erase_page
 46778 ;;		_flash_set_power_state
 46779 ;; This function uses a non-reentrant model
 46780 ;;
 46781                           
 46782                           	psect	text237
 46783  009DEC                     __ptext237:
 46784                           	opt stack 0
 46785  009DEC                     __flash_is_busy:
 46786                           	opt stack 25
 46787                           
 46788                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 46789                           
 46790                           ;incstack = 0
 46791  009DEC  0100               	movlb	0	; () banked
 46792  009DEE  51E8               	movf	_power_state& (0+255),w,b
 46793  009DF0  A4D8               	btfss	status,2,c
 46794                           
 46795                           ; BSR set to: 0
 46796                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 46797  009DF2  EC13  F049         	call	__flash_wakeup	;wreg free
 46798                           
 46799                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 46800  009DF6  EC0B  F04D         	call	__flash_get_status	;wreg free
 46801  009DFA  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 46802  009DFE  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 46803                           
 46804                           ;flash.c: 295: if(status & 0b0000000010000000)
 46805  009E02  AE12               	btfss	__flash_is_busy@status,7,c
 46806  009E04  D002               	goto	l1832
 46807                           
 46808                           ;flash.c: 296: {;flash.c: 298: return 0;
 46809  009E06  0E00               	movlw	0
 46810                           
 46811                           ;flash.c: 299: }
 46812  009E08  0012               	return	
 46813  009E0A                     l1832:
 46814                           
 46815                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 46816  009E0A  0E01               	movlw	1
 46817  009E0C  0012               	return	
 46818  009E0E                     __end_of__flash_is_busy:
 46819                           	opt stack 0
 46820                           tosu	equ	0xFFF
 46821                           tosh	equ	0xFFE
 46822                           tosl	equ	0xFFD
 46823                           pclath	equ	0xFFA
 46824                           tblptru	equ	0xFF8
 46825                           tblptrh	equ	0xFF7
 46826                           tblptrl	equ	0xFF6
 46827                           tablat	equ	0xFF5
 46828                           prodh	equ	0xFF4
 46829                           prodl	equ	0xFF3
 46830                           intcon	equ	0xFF2
 46831                           intcon2	equ	0xFF1
 46832                           intcon3	equ	0xFF0
 46833                           indf0	equ	0xFEF
 46834                           postinc0	equ	0xFEE
 46835                           fsr0h	equ	0xFEA
 46836                           fsr0l	equ	0xFE9
 46837                           wreg	equ	0xFE8
 46838                           indf1	equ	0xFE7
 46839                           postdec1	equ	0xFE5
 46840                           plusw1	equ	0xFE3
 46841                           fsr1h	equ	0xFE2
 46842                           fsr1l	equ	0xFE1
 46843                           indf2	equ	0xFDF
 46844                           postinc2	equ	0xFDE
 46845                           postdec2	equ	0xFDD
 46846                           plusw2	equ	0xFDB
 46847                           fsr2h	equ	0xFDA
 46848                           fsr2l	equ	0xFD9
 46849                           status	equ	0xFD8
 46850                           
 46851 ;; *************** function __flash_wakeup *****************
 46852 ;; Defined at:
 46853 ;;		line 128 in file "flash.c"
 46854 ;; Parameters:    Size  Location     Type
 46855 ;;		None
 46856 ;; Auto vars:     Size  Location     Type
 46857 ;;  command         1    8[COMRAM] unsigned char 
 46858 ;; Return value:  Size  Location     Type
 46859 ;;                  1    wreg      void 
 46860 ;; Registers used:
 46861 ;;		wreg, status,2, status,0, cstack
 46862 ;; Tracked objects:
 46863 ;;		On entry : 0/0
 46864 ;;		On exit  : 0/0
 46865 ;;		Unchanged: 0/0
 46866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46871 ;;Total ram usage:        1 bytes
 46872 ;; Hardware stack levels used:    1
 46873 ;; Hardware stack levels required when called:    1
 46874 ;; This function calls:
 46875 ;;		_spi_tx
 46876 ;; This function is called by:
 46877 ;;		__flash_is_busy
 46878 ;;		_flash_set_power_state
 46879 ;; This function uses a non-reentrant model
 46880 ;;
 46881                           
 46882                           	psect	text238
 46883  009226                     __ptext238:
 46884                           	opt stack 0
 46885  009226                     __flash_wakeup:
 46886                           	opt stack 25
 46887                           
 46888                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 46889                           
 46890                           ;incstack = 0
 46891  009226  D021               	goto	l1781
 46892  009228                     
 46893                           ;flash.c: 135: command = 0xAB;
 46894  009228  0EAB               	movlw	171
 46895  00922A  6E09               	movwf	__flash_wakeup@command,c
 46896                           
 46897                           ;flash.c: 136: spi_tx(&command, 1);
 46898  00922C  0E09               	movlw	low __flash_wakeup@command
 46899  00922E  6E01               	movwf	spi_tx@data,c
 46900  009230  0E00               	movlw	high __flash_wakeup@command
 46901  009232  6E02               	movwf	spi_tx@data+1,c
 46902  009234  0E00               	movlw	0
 46903  009236  6E04               	movwf	spi_tx@length+1,c
 46904  009238  0E01               	movlw	1
 46905  00923A  6E03               	movwf	spi_tx@length,c
 46906  00923C  ECE5  F047         	call	_spi_tx	;wreg free
 46907                           
 46908                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 46909  009240  0E17               	movlw	23
 46910  009242                     u14917:
 46911  009242  2EE8               	decfsz	wreg,f,c
 46912  009244  D7FE               	bra	u14917
 46913  009246  F000               	nop	
 46914                           
 46915                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 46916  009248  0E00               	movlw	0
 46917  00924A  0100               	movlb	0	; () banked
 46918  00924C  6FE8               	movwf	_power_state& (0+255),b
 46919                           
 46920                           ;flash.c: 139: break;
 46921  00924E  0012               	return	
 46922  009250                     l1784:
 46923                           
 46924                           ; BSR set to: 0
 46925                           ;flash.c: 144: LATDbits.LD7 = 0;
 46926  009250  9E8C               	bcf	3980,7,c	;volatile
 46927                           
 46928                           ; BSR set to: 0
 46929                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 46930  009252  0E0D               	movlw	13
 46931  009254                     u14927:
 46932  009254  2EE8               	decfsz	wreg,f,c
 46933  009256  D7FE               	bra	u14927
 46934  009258  F000               	nop	
 46935                           
 46936                           ;flash.c: 146: LATDbits.LD7 = 1;
 46937  00925A  8E8C               	bsf	3980,7,c	;volatile
 46938                           
 46939                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 46940  00925C  0E50               	movlw	80
 46941  00925E                     u14937:
 46942  00925E  2EE8               	decfsz	wreg,f,c
 46943  009260  D7FE               	bra	u14937
 46944                           
 46945                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 46946  009262  0E00               	movlw	0
 46947  009264  0100               	movlb	0	; () banked
 46948  009266  6FE8               	movwf	_power_state& (0+255),b
 46949                           
 46950                           ; BSR set to: 0
 46951                           ;flash.c: 150: }
 46952                           
 46953                           ;flash.c: 149: break;
 46954  009268  0012               	return	
 46955  00926A                     l1781:
 46956                           
 46957                           ; BSR set to: 0
 46958  00926A  0100               	movlb	0	; () banked
 46959  00926C  51E8               	movf	_power_state& (0+255),w,b
 46960                           
 46961                           ; Switch size 1, requested type "space"
 46962                           ; Number of cases is 2, Range of values is 1 to 2
 46963                           ; switch strategies available:
 46964                           ; Name         Instructions Cycles
 46965                           ; simple_byte            7     4 (average)
 46966                           ;	Chosen strategy is simple_byte
 46967  00926E  0A01               	xorlw	1	; case 1
 46968  009270  B4D8               	btfsc	status,2,c
 46969  009272  D7DA               	goto	l1782
 46970  009274  0A03               	xorlw	3	; case 2
 46971  009276  A4D8               	btfss	status,2,c
 46972  009278  0012               	return	
 46973  00927A  D7EA               	goto	l1784
 46974  00927C                     __end_of__flash_wakeup:
 46975                           	opt stack 0
 46976                           tosu	equ	0xFFF
 46977                           tosh	equ	0xFFE
 46978                           tosl	equ	0xFFD
 46979                           pclath	equ	0xFFA
 46980                           tblptru	equ	0xFF8
 46981                           tblptrh	equ	0xFF7
 46982                           tblptrl	equ	0xFF6
 46983                           tablat	equ	0xFF5
 46984                           prodh	equ	0xFF4
 46985                           prodl	equ	0xFF3
 46986                           intcon	equ	0xFF2
 46987                           intcon2	equ	0xFF1
 46988                           intcon3	equ	0xFF0
 46989                           indf0	equ	0xFEF
 46990                           postinc0	equ	0xFEE
 46991                           fsr0h	equ	0xFEA
 46992                           fsr0l	equ	0xFE9
 46993                           wreg	equ	0xFE8
 46994                           indf1	equ	0xFE7
 46995                           postdec1	equ	0xFE5
 46996                           plusw1	equ	0xFE3
 46997                           fsr1h	equ	0xFE2
 46998                           fsr1l	equ	0xFE1
 46999                           indf2	equ	0xFDF
 47000                           postinc2	equ	0xFDE
 47001                           postdec2	equ	0xFDD
 47002                           plusw2	equ	0xFDB
 47003                           fsr2h	equ	0xFDA
 47004                           fsr2l	equ	0xFD9
 47005                           status	equ	0xFD8
 47006                           
 47007 ;; *************** function _spi_tx *****************
 47008 ;; Defined at:
 47009 ;;		line 349 in file "spi.c"
 47010 ;; Parameters:    Size  Location     Type
 47011 ;;  data            2    0[COMRAM] PTR unsigned char 
 47012 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 47013 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 47014 ;;  length          2    2[COMRAM] unsigned int 
 47015 ;; Auto vars:     Size  Location     Type
 47016 ;;		None
 47017 ;; Return value:  Size  Location     Type
 47018 ;;                  1    wreg      void 
 47019 ;; Registers used:
 47020 ;;		wreg, status,2, status,0
 47021 ;; Tracked objects:
 47022 ;;		On entry : 0/0
 47023 ;;		On exit  : 0/0
 47024 ;;		Unchanged: 0/0
 47025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47029 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47030 ;;Total ram usage:        8 bytes
 47031 ;; Hardware stack levels used:    1
 47032 ;; This function calls:
 47033 ;;		Nothing
 47034 ;; This function is called by:
 47035 ;;		__flash_set_page_size
 47036 ;;		__flash_wakeup
 47037 ;;		__flash_copy_page_to_buffer
 47038 ;;		__flash_compare_page_to_buffer
 47039 ;;		__flash_write_page_from_buffer
 47040 ;;		__flash_erase_page
 47041 ;;		_flash_set_power_state
 47042 ;; This function uses a non-reentrant model
 47043 ;;
 47044                           
 47045                           	psect	text239
 47046  008FCA                     __ptext239:
 47047                           	opt stack 0
 47048  008FCA                     _spi_tx:
 47049                           	opt stack 27
 47050                           
 47051                           ;spi.c: 352: DMACON1bits.SSCON1 = 0;
 47052                           
 47053                           ; BSR set to: 0
 47054                           ;incstack = 0
 47055  008FCA  9E88               	bcf	3976,7,c	;volatile
 47056                           
 47057                           ;spi.c: 353: DMACON1bits.SSCON0 = 0;
 47058  008FCC  9C88               	bcf	3976,6,c	;volatile
 47059                           
 47060                           ;spi.c: 355: DMACON1bits.TXINC = 1;
 47061  008FCE  8A88               	bsf	3976,5,c	;volatile
 47062                           
 47063                           ;spi.c: 357: DMACON1bits.RXINC = 0;
 47064  008FD0  9888               	bcf	3976,4,c	;volatile
 47065                           
 47066                           ;spi.c: 359: DMACON1bits.DUPLEX1 = 0;
 47067  008FD2  9688               	bcf	3976,3,c	;volatile
 47068                           
 47069                           ;spi.c: 360: DMACON1bits.DUPLEX0 = 1;
 47070  008FD4  8488               	bsf	3976,2,c	;volatile
 47071                           
 47072                           ;spi.c: 362: DMACON1bits.DLYINTEN = 0;
 47073  008FD6  9288               	bcf	3976,1,c	;volatile
 47074                           
 47075                           ;spi.c: 364: DMACON2bits.DLYCYC = 0b0000;
 47076  008FD8  9886               	bcf	3974,4,c	;volatile
 47077  008FDA  9A86               	bcf	3974,5,c	;volatile
 47078  008FDC  9C86               	bcf	3974,6,c	;volatile
 47079  008FDE  9E86               	bcf	3974,7,c	;volatile
 47080                           
 47081                           ;spi.c: 366: DMACON2bits.INTLVL = 0b0000;
 47082  008FE0  9086               	bcf	3974,0,c	;volatile
 47083  008FE2  9286               	bcf	3974,1,c	;volatile
 47084  008FE4  9486               	bcf	3974,2,c	;volatile
 47085  008FE6  9686               	bcf	3974,3,c	;volatile
 47086                           
 47087                           ;spi.c: 369: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 47088  008FE8  5002               	movf	spi_tx@data+1,w,c
 47089  008FEA  6E6A               	movwf	3946,c	;volatile
 47090                           
 47091                           ;spi.c: 370: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 47092  008FEC  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 47093                           
 47094                           ;spi.c: 373: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 47095  008FF0  0EFF               	movlw	255
 47096  008FF2  6E05               	movwf	??_spi_tx& (0+255),c
 47097  008FF4  0EFF               	movlw	255
 47098  008FF6  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 47099  008FF8  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 47100  008FFC  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 47101  009000  5005               	movf	??_spi_tx,w,c
 47102  009002  2607               	addwf	??_spi_tx+2,f,c
 47103  009004  5006               	movf	??_spi_tx+1,w,c
 47104  009006  2208               	addwfc	??_spi_tx+3,f,c
 47105  009008  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 47106  00900C  6A08               	clrf	??_spi_tx+3,c
 47107  00900E  5007               	movf	??_spi_tx+2,w,c
 47108  009010  6E66               	movwf	3942,c	;volatile
 47109                           
 47110                           ;spi.c: 374: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 47111  009012  0403               	decf	spi_tx@length,w,c
 47112  009014  6E67               	movwf	3943,c	;volatile
 47113                           
 47114                           ;spi.c: 377: LATDbits.LD7 = 0;
 47115  009016  9E8C               	bcf	3980,7,c	;volatile
 47116                           
 47117                           ;spi.c: 378: DMACON1bits.DMAEN = 1;
 47118  009018  8088               	bsf	3976,0,c	;volatile
 47119  00901A  B088               	btfsc	3976,0,c	;volatile
 47120  00901C  D7FE               	goto	l3108
 47121                           
 47122                           ;spi.c: 380: LATDbits.LD7 = 1;
 47123  00901E  8E8C               	bsf	3980,7,c	;volatile
 47124  009020  0012               	return		;funcret
 47125  009022                     __end_of_spi_tx:
 47126                           	opt stack 0
 47127                           tosu	equ	0xFFF
 47128                           tosh	equ	0xFFE
 47129                           tosl	equ	0xFFD
 47130                           pclath	equ	0xFFA
 47131                           tblptru	equ	0xFF8
 47132                           tblptrh	equ	0xFF7
 47133                           tblptrl	equ	0xFF6
 47134                           tablat	equ	0xFF5
 47135                           prodh	equ	0xFF4
 47136                           prodl	equ	0xFF3
 47137                           intcon	equ	0xFF2
 47138                           intcon2	equ	0xFF1
 47139                           intcon3	equ	0xFF0
 47140                           indf0	equ	0xFEF
 47141                           postinc0	equ	0xFEE
 47142                           fsr0h	equ	0xFEA
 47143                           fsr0l	equ	0xFE9
 47144                           wreg	equ	0xFE8
 47145                           indf1	equ	0xFE7
 47146                           postdec1	equ	0xFE5
 47147                           plusw1	equ	0xFE3
 47148                           fsr1h	equ	0xFE2
 47149                           fsr1l	equ	0xFE1
 47150                           indf2	equ	0xFDF
 47151                           postinc2	equ	0xFDE
 47152                           postdec2	equ	0xFDD
 47153                           plusw2	equ	0xFDB
 47154                           fsr2h	equ	0xFDA
 47155                           fsr2l	equ	0xFD9
 47156                           status	equ	0xFD8
 47157                           
 47158 ;; *************** function __flash_get_status *****************
 47159 ;; Defined at:
 47160 ;;		line 117 in file "flash.c"
 47161 ;; Parameters:    Size  Location     Type
 47162 ;;		None
 47163 ;; Auto vars:     Size  Location     Type
 47164 ;;  status          2   15[COMRAM] unsigned int 
 47165 ;;  command         1   14[COMRAM] unsigned char 
 47166 ;; Return value:  Size  Location     Type
 47167 ;;                  2   12[COMRAM] unsigned int 
 47168 ;; Registers used:
 47169 ;;		wreg, status,2, status,0, cstack
 47170 ;; Tracked objects:
 47171 ;;		On entry : 0/0
 47172 ;;		On exit  : 0/0
 47173 ;;		Unchanged: 0/0
 47174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47176 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47178 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47179 ;;Total ram usage:        5 bytes
 47180 ;; Hardware stack levels used:    1
 47181 ;; Hardware stack levels required when called:    1
 47182 ;; This function calls:
 47183 ;;		_spi_tx_rx
 47184 ;; This function is called by:
 47185 ;;		__flash_compare_page_to_buffer
 47186 ;;		__flash_is_busy
 47187 ;; This function uses a non-reentrant model
 47188 ;;
 47189                           
 47190                           	psect	text240
 47191  009A16                     __ptext240:
 47192                           	opt stack 0
 47193  009A16                     __flash_get_status:
 47194                           	opt stack 25
 47195                           
 47196                           ;flash.c: 121: uint8_t command = 0xD7;
 47197                           
 47198                           ;incstack = 0
 47199  009A16  0ED7               	movlw	215
 47200  009A18  6E0F               	movwf	__flash_get_status@command,c
 47201                           
 47202                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 47203  009A1A  0E0F               	movlw	low __flash_get_status@command
 47204  009A1C  6E01               	movwf	spi_tx_rx@command,c
 47205  009A1E  0E00               	movlw	high __flash_get_status@command
 47206  009A20  6E02               	movwf	spi_tx_rx@command+1,c
 47207  009A22  0E00               	movlw	0
 47208  009A24  6E04               	movwf	spi_tx_rx@command_length+1,c
 47209  009A26  0E01               	movlw	1
 47210  009A28  6E03               	movwf	spi_tx_rx@command_length,c
 47211  009A2A  0E10               	movlw	low __flash_get_status@status
 47212  009A2C  6E05               	movwf	spi_tx_rx@data,c
 47213  009A2E  0E00               	movlw	high __flash_get_status@status
 47214  009A30  6E06               	movwf	spi_tx_rx@data+1,c
 47215  009A32  0E00               	movlw	0
 47216  009A34  6E08               	movwf	spi_tx_rx@data_length+1,c
 47217  009A36  0E02               	movlw	2
 47218  009A38  6E07               	movwf	spi_tx_rx@data_length,c
 47219  009A3A  EC2E  F041         	call	_spi_tx_rx	;wreg free
 47220                           
 47221                           ;flash.c: 124: return status;
 47222  009A3E  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 47223  009A42  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 47224  009A46  0012               	return	
 47225  009A48                     __end_of__flash_get_status:
 47226                           	opt stack 0
 47227                           tosu	equ	0xFFF
 47228                           tosh	equ	0xFFE
 47229                           tosl	equ	0xFFD
 47230                           pclath	equ	0xFFA
 47231                           tblptru	equ	0xFF8
 47232                           tblptrh	equ	0xFF7
 47233                           tblptrl	equ	0xFF6
 47234                           tablat	equ	0xFF5
 47235                           prodh	equ	0xFF4
 47236                           prodl	equ	0xFF3
 47237                           intcon	equ	0xFF2
 47238                           intcon2	equ	0xFF1
 47239                           intcon3	equ	0xFF0
 47240                           indf0	equ	0xFEF
 47241                           postinc0	equ	0xFEE
 47242                           fsr0h	equ	0xFEA
 47243                           fsr0l	equ	0xFE9
 47244                           wreg	equ	0xFE8
 47245                           indf1	equ	0xFE7
 47246                           postdec1	equ	0xFE5
 47247                           plusw1	equ	0xFE3
 47248                           fsr1h	equ	0xFE2
 47249                           fsr1l	equ	0xFE1
 47250                           indf2	equ	0xFDF
 47251                           postinc2	equ	0xFDE
 47252                           postdec2	equ	0xFDD
 47253                           plusw2	equ	0xFDB
 47254                           fsr2h	equ	0xFDA
 47255                           fsr2l	equ	0xFD9
 47256                           status	equ	0xFD8
 47257                           
 47258 ;; *************** function _spi_tx_rx *****************
 47259 ;; Defined at:
 47260 ;;		line 440 in file "spi.c"
 47261 ;; Parameters:    Size  Location     Type
 47262 ;;  command         2    0[COMRAM] PTR unsigned char 
 47263 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 47264 ;;  command_leng    2    2[COMRAM] unsigned int 
 47265 ;;  data            2    4[COMRAM] PTR unsigned char 
 47266 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 47267 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 47268 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 47269 ;;		 -> buffer(512), _flash_get_status@status(2), ToSendDataBuffer(64), msd_buffer(512), 
 47270 ;;  data_length     2    6[COMRAM] unsigned int 
 47271 ;; Auto vars:     Size  Location     Type
 47272 ;;		None
 47273 ;; Return value:  Size  Location     Type
 47274 ;;                  1    wreg      void 
 47275 ;; Registers used:
 47276 ;;		wreg, status,2, status,0
 47277 ;; Tracked objects:
 47278 ;;		On entry : 0/0
 47279 ;;		On exit  : 0/0
 47280 ;;		Unchanged: 0/0
 47281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47282 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47284 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47285 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47286 ;;Total ram usage:       12 bytes
 47287 ;; Hardware stack levels used:    1
 47288 ;; This function calls:
 47289 ;;		Nothing
 47290 ;; This function is called by:
 47291 ;;		__flash_get_status
 47292 ;;		__flash_partial_read
 47293 ;;		__flash_buffer_read
 47294 ;; This function uses a non-reentrant model
 47295 ;;
 47296                           
 47297                           	psect	text241
 47298  00825C                     __ptext241:
 47299                           	opt stack 0
 47300  00825C                     _spi_tx_rx:
 47301                           	opt stack 25
 47302                           
 47303                           ;spi.c: 443: DMACON1bits.SSCON1 = 0;
 47304                           
 47305                           ;incstack = 0
 47306  00825C  9E88               	bcf	3976,7,c	;volatile
 47307                           
 47308                           ;spi.c: 444: DMACON1bits.SSCON0 = 0;
 47309  00825E  9C88               	bcf	3976,6,c	;volatile
 47310                           
 47311                           ;spi.c: 446: DMACON1bits.TXINC = 1;
 47312  008260  8A88               	bsf	3976,5,c	;volatile
 47313                           
 47314                           ;spi.c: 448: DMACON1bits.RXINC = 0;
 47315  008262  9888               	bcf	3976,4,c	;volatile
 47316                           
 47317                           ;spi.c: 450: DMACON1bits.DUPLEX1 = 0;
 47318  008264  9688               	bcf	3976,3,c	;volatile
 47319                           
 47320                           ;spi.c: 451: DMACON1bits.DUPLEX0 = 1;
 47321  008266  8488               	bsf	3976,2,c	;volatile
 47322                           
 47323                           ;spi.c: 453: DMACON1bits.DLYINTEN = 0;
 47324  008268  9288               	bcf	3976,1,c	;volatile
 47325                           
 47326                           ;spi.c: 455: DMACON2bits.DLYCYC = 0b0000;
 47327  00826A  9886               	bcf	3974,4,c	;volatile
 47328  00826C  9A86               	bcf	3974,5,c	;volatile
 47329  00826E  9C86               	bcf	3974,6,c	;volatile
 47330  008270  9E86               	bcf	3974,7,c	;volatile
 47331                           
 47332                           ;spi.c: 457: DMACON2bits.INTLVL = 0b0000;
 47333  008272  9086               	bcf	3974,0,c	;volatile
 47334  008274  9286               	bcf	3974,1,c	;volatile
 47335  008276  9486               	bcf	3974,2,c	;volatile
 47336  008278  9686               	bcf	3974,3,c	;volatile
 47337                           
 47338                           ;spi.c: 460: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 47339  00827A  5002               	movf	spi_tx_rx@command+1,w,c
 47340  00827C  6E6A               	movwf	3946,c	;volatile
 47341                           
 47342                           ;spi.c: 461: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 47343  00827E  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 47344                           
 47345                           ;spi.c: 464: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 47346  008282  0EFF               	movlw	255
 47347  008284  6E09               	movwf	??_spi_tx_rx& (0+255),c
 47348  008286  0EFF               	movlw	255
 47349  008288  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 47350  00828A  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 47351  00828E  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 47352  008292  5009               	movf	??_spi_tx_rx,w,c
 47353  008294  260B               	addwf	??_spi_tx_rx+2,f,c
 47354  008296  500A               	movf	??_spi_tx_rx+1,w,c
 47355  008298  220C               	addwfc	??_spi_tx_rx+3,f,c
 47356  00829A  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 47357  00829E  6A0C               	clrf	??_spi_tx_rx+3,c
 47358  0082A0  500B               	movf	??_spi_tx_rx+2,w,c
 47359  0082A2  6E66               	movwf	3942,c	;volatile
 47360                           
 47361                           ;spi.c: 465: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 47362  0082A4  0403               	decf	spi_tx_rx@command_length,w,c
 47363  0082A6  6E67               	movwf	3943,c	;volatile
 47364                           
 47365                           ;spi.c: 468: LATDbits.LD7 = 0;
 47366  0082A8  9E8C               	bcf	3980,7,c	;volatile
 47367                           
 47368                           ;spi.c: 471: DMACON1bits.DMAEN = 1;
 47369  0082AA  8088               	bsf	3976,0,c	;volatile
 47370  0082AC  B088               	btfsc	3976,0,c	;volatile
 47371  0082AE  D7FE               	goto	l3123
 47372                           
 47373                           ;spi.c: 475: DMACON1bits.TXINC = 0;
 47374  0082B0  9A88               	bcf	3976,5,c	;volatile
 47375                           
 47376                           ;spi.c: 477: DMACON1bits.RXINC = 1;
 47377  0082B2  8888               	bsf	3976,4,c	;volatile
 47378                           
 47379                           ;spi.c: 479: DMACON1bits.DUPLEX1 = 0;
 47380  0082B4  9688               	bcf	3976,3,c	;volatile
 47381                           
 47382                           ;spi.c: 480: DMACON1bits.DUPLEX0 = 0;
 47383  0082B6  9488               	bcf	3976,2,c	;volatile
 47384                           
 47385                           ;spi.c: 483: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 47386  0082B8  5006               	movf	spi_tx_rx@data+1,w,c
 47387  0082BA  6E68               	movwf	3944,c	;volatile
 47388                           
 47389                           ;spi.c: 484: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 47390  0082BC  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 47391                           
 47392                           ;spi.c: 487: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 47393  0082C0  0EFF               	movlw	255
 47394  0082C2  6E09               	movwf	??_spi_tx_rx& (0+255),c
 47395  0082C4  0EFF               	movlw	255
 47396  0082C6  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 47397  0082C8  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 47398  0082CC  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 47399  0082D0  5009               	movf	??_spi_tx_rx,w,c
 47400  0082D2  260B               	addwf	??_spi_tx_rx+2,f,c
 47401  0082D4  500A               	movf	??_spi_tx_rx+1,w,c
 47402  0082D6  220C               	addwfc	??_spi_tx_rx+3,f,c
 47403  0082D8  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 47404  0082DC  6A0C               	clrf	??_spi_tx_rx+3,c
 47405  0082DE  500B               	movf	??_spi_tx_rx+2,w,c
 47406  0082E0  6E66               	movwf	3942,c	;volatile
 47407                           
 47408                           ;spi.c: 488: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 47409  0082E2  0407               	decf	spi_tx_rx@data_length,w,c
 47410  0082E4  6E67               	movwf	3943,c	;volatile
 47411                           
 47412                           ;spi.c: 491: DMACON1bits.DMAEN = 1;
 47413  0082E6  8088               	bsf	3976,0,c	;volatile
 47414  0082E8  B088               	btfsc	3976,0,c	;volatile
 47415  0082EA  D7FE               	goto	l3126
 47416                           
 47417                           ;spi.c: 495: LATDbits.LD7 = 1;
 47418  0082EC  8E8C               	bsf	3980,7,c	;volatile
 47419  0082EE  0012               	return		;funcret
 47420  0082F0                     __end_of_spi_tx_rx:
 47421                           	opt stack 0
 47422                           tosu	equ	0xFFF
 47423                           tosh	equ	0xFFE
 47424                           tosl	equ	0xFFD
 47425                           pclath	equ	0xFFA
 47426                           tblptru	equ	0xFF8
 47427                           tblptrh	equ	0xFF7
 47428                           tblptrl	equ	0xFF6
 47429                           tablat	equ	0xFF5
 47430                           prodh	equ	0xFF4
 47431                           prodl	equ	0xFF3
 47432                           intcon	equ	0xFF2
 47433                           intcon2	equ	0xFF1
 47434                           intcon3	equ	0xFF0
 47435                           indf0	equ	0xFEF
 47436                           postinc0	equ	0xFEE
 47437                           fsr0h	equ	0xFEA
 47438                           fsr0l	equ	0xFE9
 47439                           wreg	equ	0xFE8
 47440                           indf1	equ	0xFE7
 47441                           postdec1	equ	0xFE5
 47442                           plusw1	equ	0xFE3
 47443                           fsr1h	equ	0xFE2
 47444                           fsr1l	equ	0xFE1
 47445                           indf2	equ	0xFDF
 47446                           postinc2	equ	0xFDE
 47447                           postdec2	equ	0xFDD
 47448                           plusw2	equ	0xFDB
 47449                           fsr2h	equ	0xFDA
 47450                           fsr2l	equ	0xFD9
 47451                           status	equ	0xFD8
 47452                           
 47453 ;; *************** function __sector_from_file_number *****************
 47454 ;; Defined at:
 47455 ;;		line 52 in file "fat16.c"
 47456 ;; Parameters:    Size  Location     Type
 47457 ;;  file_number     1    wreg     unsigned char 
 47458 ;; Auto vars:     Size  Location     Type
 47459 ;;  file_number     1    2[COMRAM] unsigned char 
 47460 ;;  sector          2    3[COMRAM] unsigned int 
 47461 ;; Return value:  Size  Location     Type
 47462 ;;                  2    0[COMRAM] unsigned int 
 47463 ;; Registers used:
 47464 ;;		wreg, status,2, status,0
 47465 ;; Tracked objects:
 47466 ;;		On entry : 0/0
 47467 ;;		On exit  : 0/0
 47468 ;;		Unchanged: 0/0
 47469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47471 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47473 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47474 ;;Total ram usage:        5 bytes
 47475 ;; Hardware stack levels used:    1
 47476 ;; This function calls:
 47477 ;;		Nothing
 47478 ;; This function is called by:
 47479 ;;		__root_is_available
 47480 ;;		__write_root
 47481 ;;		__delete_root
 47482 ;;		__get_first_cluster
 47483 ;;		_fat_get_file_size
 47484 ;;		_fat_get_file_information
 47485 ;; This function uses a non-reentrant model
 47486 ;;
 47487                           
 47488                           	psect	text242
 47489  009BB2                     __ptext242:
 47490                           	opt stack 0
 47491  009BB2                     __sector_from_file_number:
 47492                           	opt stack 27
 47493                           
 47494                           ;incstack = 0
 47495                           ;__sector_from_file_number@file_number stored from wreg
 47496  009BB2  6E03               	movwf	__sector_from_file_number@file_number,c
 47497                           
 47498                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 47499  009BB4  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 47500  009BB8  6A05               	clrf	__sector_from_file_number@sector+1,c
 47501                           
 47502                           ;fat16.c: 56: sector >>= 4;
 47503  009BBA  3A04               	swapf	__sector_from_file_number@sector,f,c
 47504  009BBC  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 47505  009BBE  0E0F               	movlw	15
 47506  009BC0  1604               	andwf	__sector_from_file_number@sector,f,c
 47507  009BC2  5005               	movf	__sector_from_file_number@sector+1,w,c
 47508  009BC4  0BF0               	andlw	240
 47509  009BC6  1204               	iorwf	__sector_from_file_number@sector,f,c
 47510  009BC8  0E0F               	movlw	15
 47511  009BCA  1605               	andwf	__sector_from_file_number@sector+1,f,c
 47512                           
 47513                           ;fat16.c: 57: sector += 34;
 47514  009BCC  0E22               	movlw	34
 47515  009BCE  2604               	addwf	__sector_from_file_number@sector,f,c
 47516  009BD0  0E00               	movlw	0
 47517  009BD2  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 47518                           
 47519                           ;fat16.c: 58: return sector;
 47520  009BD4  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 47521  009BD8  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 47522  009BDC  0012               	return	
 47523  009BDE                     __end_of__sector_from_file_number:
 47524                           	opt stack 0
 47525                           tosu	equ	0xFFF
 47526                           tosh	equ	0xFFE
 47527                           tosl	equ	0xFFD
 47528                           pclath	equ	0xFFA
 47529                           tblptru	equ	0xFF8
 47530                           tblptrh	equ	0xFF7
 47531                           tblptrl	equ	0xFF6
 47532                           tablat	equ	0xFF5
 47533                           prodh	equ	0xFF4
 47534                           prodl	equ	0xFF3
 47535                           intcon	equ	0xFF2
 47536                           intcon2	equ	0xFF1
 47537                           intcon3	equ	0xFF0
 47538                           indf0	equ	0xFEF
 47539                           postinc0	equ	0xFEE
 47540                           fsr0h	equ	0xFEA
 47541                           fsr0l	equ	0xFE9
 47542                           wreg	equ	0xFE8
 47543                           indf1	equ	0xFE7
 47544                           postdec1	equ	0xFE5
 47545                           plusw1	equ	0xFE3
 47546                           fsr1h	equ	0xFE2
 47547                           fsr1l	equ	0xFE1
 47548                           indf2	equ	0xFDF
 47549                           postinc2	equ	0xFDE
 47550                           postdec2	equ	0xFDD
 47551                           plusw2	equ	0xFDB
 47552                           fsr2h	equ	0xFDA
 47553                           fsr2l	equ	0xFD9
 47554                           status	equ	0xFD8
 47555                           
 47556 ;; *************** function __offset_from_file_number *****************
 47557 ;; Defined at:
 47558 ;;		line 61 in file "fat16.c"
 47559 ;; Parameters:    Size  Location     Type
 47560 ;;  file_number     1    wreg     unsigned char 
 47561 ;; Auto vars:     Size  Location     Type
 47562 ;;  file_number     1    2[COMRAM] unsigned char 
 47563 ;;  offset          2    3[COMRAM] unsigned int 
 47564 ;; Return value:  Size  Location     Type
 47565 ;;                  2    0[COMRAM] unsigned int 
 47566 ;; Registers used:
 47567 ;;		wreg, status,2, status,0
 47568 ;; Tracked objects:
 47569 ;;		On entry : 0/0
 47570 ;;		On exit  : 0/0
 47571 ;;		Unchanged: 0/0
 47572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47577 ;;Total ram usage:        5 bytes
 47578 ;; Hardware stack levels used:    1
 47579 ;; This function calls:
 47580 ;;		Nothing
 47581 ;; This function is called by:
 47582 ;;		__root_is_available
 47583 ;;		__write_root
 47584 ;;		__delete_root
 47585 ;;		__get_first_cluster
 47586 ;;		_fat_get_file_size
 47587 ;;		_fat_get_file_information
 47588 ;; This function uses a non-reentrant model
 47589 ;;
 47590                           
 47591                           	psect	text243
 47592  009CF0                     __ptext243:
 47593                           	opt stack 0
 47594  009CF0                     __offset_from_file_number:
 47595                           	opt stack 26
 47596                           
 47597                           ;incstack = 0
 47598                           ;__offset_from_file_number@file_number stored from wreg
 47599  009CF0  6E03               	movwf	__offset_from_file_number@file_number,c
 47600                           
 47601                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 47602  009CF2  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 47603  009CF6  6A05               	clrf	__offset_from_file_number@offset+1,c
 47604                           
 47605                           ;fat16.c: 65: offset &= 0b1111;
 47606  009CF8  0E0F               	movlw	15
 47607  009CFA  1604               	andwf	__offset_from_file_number@offset,f,c
 47608  009CFC  0E00               	movlw	0
 47609  009CFE  1605               	andwf	__offset_from_file_number@offset+1,f,c
 47610                           
 47611                           ;fat16.c: 66: offset <<= 5;
 47612  009D00  0E05               	movlw	5
 47613  009D02                     u7935:
 47614  009D02  90D8               	bcf	status,0,c
 47615  009D04  3604               	rlcf	__offset_from_file_number@offset,f,c
 47616  009D06  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 47617  009D08  2EE8               	decfsz	wreg,f,c
 47618  009D0A  D7FB               	goto	u7935
 47619                           
 47620                           ;fat16.c: 67: return offset;
 47621  009D0C  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 47622  009D10  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 47623  009D14  0012               	return	
 47624  009D16                     __end_of__offset_from_file_number:
 47625                           	opt stack 0
 47626                           tosu	equ	0xFFF
 47627                           tosh	equ	0xFFE
 47628                           tosl	equ	0xFFD
 47629                           pclath	equ	0xFFA
 47630                           tblptru	equ	0xFF8
 47631                           tblptrh	equ	0xFF7
 47632                           tblptrl	equ	0xFF6
 47633                           tablat	equ	0xFF5
 47634                           prodh	equ	0xFF4
 47635                           prodl	equ	0xFF3
 47636                           intcon	equ	0xFF2
 47637                           intcon2	equ	0xFF1
 47638                           intcon3	equ	0xFF0
 47639                           indf0	equ	0xFEF
 47640                           postinc0	equ	0xFEE
 47641                           fsr0h	equ	0xFEA
 47642                           fsr0l	equ	0xFE9
 47643                           wreg	equ	0xFE8
 47644                           indf1	equ	0xFE7
 47645                           postdec1	equ	0xFE5
 47646                           plusw1	equ	0xFE3
 47647                           fsr1h	equ	0xFE2
 47648                           fsr1l	equ	0xFE1
 47649                           indf2	equ	0xFDF
 47650                           postinc2	equ	0xFDE
 47651                           postdec2	equ	0xFDD
 47652                           plusw2	equ	0xFDB
 47653                           fsr2h	equ	0xFDA
 47654                           fsr2l	equ	0xFD9
 47655                           status	equ	0xFD8
 47656                           
 47657 ;; *************** function _USBTransferOnePacket *****************
 47658 ;; Defined at:
 47659 ;;		line 995 in file "usb_device.c"
 47660 ;; Parameters:    Size  Location     Type
 47661 ;;  ep              1    wreg     unsigned char 
 47662 ;;  dir             1    0[COMRAM] unsigned char 
 47663 ;;  data            2    1[COMRAM] PTR unsigned char 
 47664 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 47665 ;;		 -> msd_cbw(31), NULL(0), 
 47666 ;;  len             1    3[COMRAM] unsigned char 
 47667 ;; Auto vars:     Size  Location     Type
 47668 ;;  ep              1    8[COMRAM] unsigned char 
 47669 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 47670 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 47671 ;; Return value:  Size  Location     Type
 47672 ;;                  2    0[COMRAM] PTR void 
 47673 ;; Registers used:
 47674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47675 ;; Tracked objects:
 47676 ;;		On entry : 0/0
 47677 ;;		On exit  : 0/0
 47678 ;;		Unchanged: 0/0
 47679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47681 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47683 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47684 ;;Total ram usage:       11 bytes
 47685 ;; Hardware stack levels used:    1
 47686 ;; This function calls:
 47687 ;;		Nothing
 47688 ;; This function is called by:
 47689 ;;		_USBMSDInit
 47690 ;;		_USBCheckMSDRequest
 47691 ;;		_MSDTasks
 47692 ;;		_MSDProcessCommandMediaPresent
 47693 ;;		_MSDReadHandler
 47694 ;;		_MSDWriteHandler
 47695 ;;		_MSDTransferTerminated
 47696 ;;		_APP_DeviceCustomHIDInitialize
 47697 ;;		_APP_DeviceCustomHIDTasks
 47698 ;; This function uses a non-reentrant model
 47699 ;;
 47700                           
 47701                           	psect	text244
 47702  00592C                     __ptext244:
 47703                           	opt stack 0
 47704  00592C                     _USBTransferOnePacket:
 47705                           	opt stack 27
 47706                           
 47707                           ;incstack = 0
 47708                           ;USBTransferOnePacket@ep stored from wreg
 47709  00592C  6E09               	movwf	USBTransferOnePacket@ep,c
 47710                           
 47711                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 47712  00592E  5001               	movf	USBTransferOnePacket@dir,w,c
 47713  005930  B4D8               	btfsc	status,2,c
 47714  005932  D007               	goto	l183
 47715                           
 47716                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 47717  005934  5009               	movf	USBTransferOnePacket@ep,w,c
 47718  005936  0D02               	mullw	2
 47719  005938  0ED4               	movlw	low _pBDTEntryIn
 47720  00593A  24F3               	addwf	prodl,w,c
 47721  00593C  6ED9               	movwf	fsr2l,c
 47722  00593E  0E00               	movlw	high _pBDTEntryIn
 47723  005940  D006               	goto	L64
 47724  005942                     l183:
 47725                           
 47726                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 47727  005942  5009               	movf	USBTransferOnePacket@ep,w,c
 47728  005944  0D02               	mullw	2
 47729  005946  0E39               	movlw	low _pBDTEntryOut
 47730  005948  24F3               	addwf	prodl,w,c
 47731  00594A  6ED9               	movwf	fsr2l,c
 47732  00594C  0E01               	movlw	high _pBDTEntryOut
 47733  00594E                     L64:
 47734  00594E  20F4               	addwfc	prodh,w,c
 47735  005950  6EDA               	movwf	fsr2h,c
 47736  005952  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 47737  005956  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 47738                           
 47739                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 47740  00595A  500A               	movf	USBTransferOnePacket@handle,w,c
 47741  00595C  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 47742  00595E  A4D8               	btfss	status,2,c
 47743  005960  D005               	goto	l185
 47744                           
 47745                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 47746  005962  0E00               	movlw	0
 47747  005964  6E01               	movwf	?_USBTransferOnePacket,c
 47748  005966  0E00               	movlw	0
 47749  005968  6E02               	movwf	?_USBTransferOnePacket+1,c
 47750  00596A  0012               	return	
 47751  00596C                     l185:
 47752                           
 47753                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 47754  00596C  EE20 F002          	lfsr	2,2
 47755  005970  500A               	movf	USBTransferOnePacket@handle,w,c
 47756  005972  26D9               	addwf	fsr2l,f,c
 47757  005974  500B               	movf	USBTransferOnePacket@handle+1,w,c
 47758  005976  22DA               	addwfc	fsr2h,f,c
 47759  005978  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 47760  00597C  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 47761                           
 47762                           ;usb_device.c: 1030: handle->CNT = len;
 47763  005980  EE20 F001          	lfsr	2,1
 47764  005984  500A               	movf	USBTransferOnePacket@handle,w,c
 47765  005986  26D9               	addwf	fsr2l,f,c
 47766  005988  500B               	movf	USBTransferOnePacket@handle+1,w,c
 47767  00598A  22DA               	addwfc	fsr2h,f,c
 47768  00598C  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 47769                           
 47770                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 47771  005990  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 47772  005994  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 47773  005998  0E40               	movlw	64
 47774  00599A  16DF               	andwf	indf2,f,c
 47775                           
 47776                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 47777  00599C  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 47778  0059A0  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 47779  0059A4  0E00               	movlw	0
 47780  0059A6  86DB               	bsf	plusw2,3,c
 47781                           
 47782                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 47783  0059A8  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 47784  0059AC  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 47785  0059B0  0E00               	movlw	0
 47786  0059B2  8EDB               	bsf	plusw2,7,c
 47787                           
 47788                           ;usb_device.c: 1036: if(dir != 0)
 47789  0059B4  5001               	movf	USBTransferOnePacket@dir,w,c
 47790  0059B6  B4D8               	btfsc	status,2,c
 47791  0059B8  D018               	goto	l187
 47792                           
 47793                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 47794  0059BA  5009               	movf	USBTransferOnePacket@ep,w,c
 47795  0059BC  0D02               	mullw	2
 47796  0059BE  0ED4               	movlw	low _pBDTEntryIn
 47797  0059C0  24F3               	addwf	prodl,w,c
 47798  0059C2  6ED9               	movwf	fsr2l,c
 47799  0059C4  0E00               	movlw	high _pBDTEntryIn
 47800  0059C6  20F4               	addwfc	prodh,w,c
 47801  0059C8  6EDA               	movwf	fsr2h,c
 47802  0059CA  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 47803  0059CE  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 47804  0059D2  0E04               	movlw	4
 47805  0059D4  1805               	xorwf	??_USBTransferOnePacket,w,c
 47806  0059D6  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 47807  0059D8  5006               	movf	??_USBTransferOnePacket+1,w,c
 47808  0059DA  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 47809  0059DC  5009               	movf	USBTransferOnePacket@ep,w,c
 47810  0059DE  0D02               	mullw	2
 47811  0059E0  0ED4               	movlw	low _pBDTEntryIn
 47812  0059E2  24F3               	addwf	prodl,w,c
 47813  0059E4  6ED9               	movwf	fsr2l,c
 47814  0059E6  0E00               	movlw	high _pBDTEntryIn
 47815  0059E8  D017               	goto	L65
 47816  0059EA                     l187:
 47817                           
 47818                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 47819  0059EA  5009               	movf	USBTransferOnePacket@ep,w,c
 47820  0059EC  0D02               	mullw	2
 47821  0059EE  0E39               	movlw	low _pBDTEntryOut
 47822  0059F0  24F3               	addwf	prodl,w,c
 47823  0059F2  6ED9               	movwf	fsr2l,c
 47824  0059F4  0E01               	movlw	high _pBDTEntryOut
 47825  0059F6  20F4               	addwfc	prodh,w,c
 47826  0059F8  6EDA               	movwf	fsr2h,c
 47827  0059FA  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 47828  0059FE  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 47829  005A02  0E04               	movlw	4
 47830  005A04  1805               	xorwf	??_USBTransferOnePacket,w,c
 47831  005A06  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 47832  005A08  5006               	movf	??_USBTransferOnePacket+1,w,c
 47833  005A0A  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 47834  005A0C  5009               	movf	USBTransferOnePacket@ep,w,c
 47835  005A0E  0D02               	mullw	2
 47836  005A10  0E39               	movlw	low _pBDTEntryOut
 47837  005A12  24F3               	addwf	prodl,w,c
 47838  005A14  6ED9               	movwf	fsr2l,c
 47839  005A16  0E01               	movlw	high _pBDTEntryOut
 47840  005A18                     L65:
 47841  005A18  20F4               	addwfc	prodh,w,c
 47842  005A1A  6EDA               	movwf	fsr2h,c
 47843  005A1C  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 47844  005A20  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 47845                           
 47846                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 47847  005A24  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 47848  005A28  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 47849  005A2C  0012               	return	
 47850  005A2E                     __end_of_USBTransferOnePacket:
 47851                           	opt stack 0
 47852                           tosu	equ	0xFFF
 47853                           tosh	equ	0xFFE
 47854                           tosl	equ	0xFFD
 47855                           pclath	equ	0xFFA
 47856                           tblptru	equ	0xFF8
 47857                           tblptrh	equ	0xFF7
 47858                           tblptrl	equ	0xFF6
 47859                           tablat	equ	0xFF5
 47860                           prodh	equ	0xFF4
 47861                           prodl	equ	0xFF3
 47862                           intcon	equ	0xFF2
 47863                           intcon2	equ	0xFF1
 47864                           intcon3	equ	0xFF0
 47865                           indf0	equ	0xFEF
 47866                           postinc0	equ	0xFEE
 47867                           fsr0h	equ	0xFEA
 47868                           fsr0l	equ	0xFE9
 47869                           wreg	equ	0xFE8
 47870                           indf1	equ	0xFE7
 47871                           postdec1	equ	0xFE5
 47872                           plusw1	equ	0xFE3
 47873                           fsr1h	equ	0xFE2
 47874                           fsr1l	equ	0xFE1
 47875                           indf2	equ	0xFDF
 47876                           postinc2	equ	0xFDE
 47877                           postdec2	equ	0xFDD
 47878                           plusw2	equ	0xFDB
 47879                           fsr2h	equ	0xFDA
 47880                           fsr2l	equ	0xFD9
 47881                           status	equ	0xFD8
 47882                           tosu	equ	0xFFF
 47883                           tosh	equ	0xFFE
 47884                           tosl	equ	0xFFD
 47885                           pclath	equ	0xFFA
 47886                           tblptru	equ	0xFF8
 47887                           tblptrh	equ	0xFF7
 47888                           tblptrl	equ	0xFF6
 47889                           tablat	equ	0xFF5
 47890                           prodh	equ	0xFF4
 47891                           prodl	equ	0xFF3
 47892                           intcon	equ	0xFF2
 47893                           intcon2	equ	0xFF1
 47894                           intcon3	equ	0xFF0
 47895                           indf0	equ	0xFEF
 47896                           postinc0	equ	0xFEE
 47897                           fsr0h	equ	0xFEA
 47898                           fsr0l	equ	0xFE9
 47899                           wreg	equ	0xFE8
 47900                           indf1	equ	0xFE7
 47901                           postdec1	equ	0xFE5
 47902                           plusw1	equ	0xFE3
 47903                           fsr1h	equ	0xFE2
 47904                           fsr1l	equ	0xFE1
 47905                           indf2	equ	0xFDF
 47906                           postinc2	equ	0xFDE
 47907                           postdec2	equ	0xFDD
 47908                           plusw2	equ	0xFDB
 47909                           fsr2h	equ	0xFDA
 47910                           fsr2l	equ	0xFD9
 47911                           status	equ	0xFD8
 47912                           
 47913                           	psect	text245
 47914  000000                     __ptext245:
 47915                           	opt stack 0
 47916                           tosu	equ	0xFFF
 47917                           tosh	equ	0xFFE
 47918                           tosl	equ	0xFFD
 47919                           pclath	equ	0xFFA
 47920                           tblptru	equ	0xFF8
 47921                           tblptrh	equ	0xFF7
 47922                           tblptrl	equ	0xFF6
 47923                           tablat	equ	0xFF5
 47924                           prodh	equ	0xFF4
 47925                           prodl	equ	0xFF3
 47926                           intcon	equ	0xFF2
 47927                           intcon2	equ	0xFF1
 47928                           intcon3	equ	0xFF0
 47929                           indf0	equ	0xFEF
 47930                           postinc0	equ	0xFEE
 47931                           fsr0h	equ	0xFEA
 47932                           fsr0l	equ	0xFE9
 47933                           wreg	equ	0xFE8
 47934                           indf1	equ	0xFE7
 47935                           postdec1	equ	0xFE5
 47936                           plusw1	equ	0xFE3
 47937                           fsr1h	equ	0xFE2
 47938                           fsr1l	equ	0xFE1
 47939                           indf2	equ	0xFDF
 47940                           postinc2	equ	0xFDE
 47941                           postdec2	equ	0xFDD
 47942                           plusw2	equ	0xFDB
 47943                           fsr2h	equ	0xFDA
 47944                           fsr2l	equ	0xFD9
 47945                           status	equ	0xFD8
 47946                           
 47947                           	psect	rparam
 47948  0000                     tosu	equ	0xFFF
 47949                           tosh	equ	0xFFE
 47950                           tosl	equ	0xFFD
 47951                           pclath	equ	0xFFA
 47952                           tblptru	equ	0xFF8
 47953                           tblptrh	equ	0xFF7
 47954                           tblptrl	equ	0xFF6
 47955                           tablat	equ	0xFF5
 47956                           prodh	equ	0xFF4
 47957                           prodl	equ	0xFF3
 47958                           intcon	equ	0xFF2
 47959                           intcon2	equ	0xFF1
 47960                           intcon3	equ	0xFF0
 47961                           indf0	equ	0xFEF
 47962                           postinc0	equ	0xFEE
 47963                           fsr0h	equ	0xFEA
 47964                           fsr0l	equ	0xFE9
 47965                           wreg	equ	0xFE8
 47966                           indf1	equ	0xFE7
 47967                           postdec1	equ	0xFE5
 47968                           plusw1	equ	0xFE3
 47969                           fsr1h	equ	0xFE2
 47970                           fsr1l	equ	0xFE1
 47971                           indf2	equ	0xFDF
 47972                           postinc2	equ	0xFDE
 47973                           postdec2	equ	0xFDD
 47974                           plusw2	equ	0xFDB
 47975                           fsr2h	equ	0xFDA
 47976                           fsr2l	equ	0xFD9
 47977                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    866
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     97     160
    BANK1           256      0     212
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 49151
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[49151]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 49151
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[49151]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_settings_i2c_masterModeSlaveAddress@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_masterModeSlaveAddress@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_i2c_slaveModeSlaveAddress@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_slaveModeSlaveAddress@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_i2c_frequency@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_frequency@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_frequency@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_i2c_mode@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_mode@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_mode@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_spi_polarity@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_spi_polarity@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_spi_polarity@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_spi_frequency@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_spi_frequency@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_spi_frequency@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_spi_mode@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_spi_mode@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_spi_mode@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_copy@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_copy@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_copy@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_write_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_write_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_buffer_to_sector@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_buffer_to_sector@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_sector_to_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_sector_to_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_modify@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_append@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_rename@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_create@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_delete@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_resize@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), ToSendDataBuffer(BANK3[64]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_copy_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_copy_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), ToSendDataBuffer(BANK3[64]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK1[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> ToSendDataBuffer(BANK3[64]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_buffer_read@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), 
		 -> i2c_display_send_init_sequence@init_sequence(COMRAM[9]), _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    _flash_read_from_buffer->__flash_buffer_read
    __flash_buffer_read->__flash_is_busy
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_checked
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u16
    __display_itoa_u32->___lldiv
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_append
    __parse_command_long->__parse_file_copy
    __parse_command_long->__parse_file_create
    __parse_command_long->__parse_file_rename
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_api_prepare
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_command_long->__parse_file_append
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2390355
                                             87 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   61128
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2160
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2184
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2184
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2206
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   52394
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32179
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6660
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25519
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6791
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138965
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62492
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53912
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22495
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    6528
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    3009
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106716
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106716
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101552
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51527
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49769
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24985
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17397
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13888
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6492
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  927101
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   90554
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   59834
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   44218
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35519
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_buffer                            10     6      4    5742
                                             42 COMRAM    10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_buffer                                 6     0      6    5207
                                             36 COMRAM     6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _flash_read_from_buffer                               6     0      6    4874
                                             30 COMRAM     6     0      6
                 __flash_buffer_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_buffer_read                                  11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    3133
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2736
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    8417
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    8127
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                           11     6      5  833234
                                             68 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   52416
                                             35 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   48829
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3544
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2676
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    2206
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   45285
                                             32 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    4369
                                             28 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0    4530
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    4505
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0    8969
                                             21 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   13266
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    8     2      6    8561
                                             13 COMRAM     8     2      6
                            ___lldiv
                            ___llmod
                             ___wmul
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7141
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     337
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    4437
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    4439
                                             28 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    4     0      4    4143
                                             24 COMRAM     4     0      4
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2121
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3519
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2092
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  7     1      6  779655
                                             61 BANK0      7     1      6
            __parse_buffer_to_sector
                 __parse_file_append
                   __parse_file_copy
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
      __parse_settings_i2c_frequency
__parse_settings_i2c_masterModeSlave
           __parse_settings_i2c_mode
__parse_settings_i2c_slaveModeSlaveA
      __parse_settings_spi_frequency
           __parse_settings_spi_mode
       __parse_settings_spi_polarity
                __parse_write_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_write_buffer                                 11     5      6    5984
                                             42 COMRAM    11     5      6
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_to_buffer                                  6     0      6    5207
                                             36 COMRAM     6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_to_buffer                                6     0      6    4874
                                             30 COMRAM     6     0      6
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_settings_spi_polarity                         7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_spi_mode                             7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_spi_frequency                        7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_slaveModeSlaveAddress            7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_mode                             7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_masterModeSlaveAddress           7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_frequency                        7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_sector_to_buffer                             11     5      6   52653
                                             83 COMRAM    11     5      6
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  8     2      6   19216
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18728
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                  13     7      6   76909
                                             84 COMRAM     7     1      6
                                             39 BANK0      6     6      0
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   9     3      6   33403
                                             94 COMRAM     1     1      0
                                              0 BANK0      8     2      6
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   32760
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                  15     9      6   59659
                                             85 COMRAM     7     1      6
                                             46 BANK0      8     8      0
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   9     3      6   75144
                                             79 COMRAM     9     3      6
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   74545
                                             76 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   23869
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                  12     6      6   79229
                                             88 COMRAM     7     1      6
                                             37 BANK0      5     5      0
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_copy                                     9     3      6  183758
                                             92 COMRAM     3     3      0
                                             52 BANK0      6     0      6
                      _fat_copy_file
 ---------------------------------------------------------------------------------
 (4) _fat_copy_file                                       19    15      4  183115
                                             88 COMRAM     4     0      4
                                             37 BANK0     15    15      0
                 __root_is_available
          _fat_copy_sector_to_buffer
                    _fat_create_file
                  _fat_get_file_size
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   78580
                                             76 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7683
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    7507
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (4) _fat_copy_sector_to_buffer                           17    15      2   51853
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_copy_page_to_buffer                            2     0      2    4698
                                             29 COMRAM     2     0      2
         __flash_copy_page_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                  11     5      6  157903
                                             89 COMRAM     6     0      6
                                             56 BANK0      5     5      0
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  157083
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   75929
                                             76 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   24135
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 23    19      4   35774
                                             53 COMRAM    23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17052
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7774
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   58458
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   23662
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    8040
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16860
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6211
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8306
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_buffer_to_sector                             11     5      6   30716
                                             81 COMRAM    11     5      6
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (5) _fat_write_sector_from_buffer                        17    15      2   29916
                                             66 COMRAM    15    13      2
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14812
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7417
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    7374
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7145
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_copy
           _fat_copy_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_copy_sector_to_buffer
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_copy_page_to_buffer
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 _spi_set_configuration
             _fat_create_file
               __get_available_root_entry
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
               __get_date
               __get_time
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_find_file
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _strncmp
               _memcpy
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_write_sector_from_buffer
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_settings_i2c_frequency
         __parse_settings_i2c_masterModeSlaveAddress
         __parse_settings_i2c_mode
         __parse_settings_i2c_slaveModeSlaveAddress
         __parse_settings_spi_frequency
         __parse_settings_spi_mode
         __parse_settings_spi_polarity
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
             __flash_buffer_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_buffer_to_sector
         _fat_write_sector_from_buffer
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_copy
         _fat_copy_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_sector_to_buffer
         _fat_copy_sector_to_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_copy_page_to_buffer
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_settings_i2c_frequency
       __parse_settings_i2c_masterModeSlaveAddress
       __parse_settings_i2c_mode
       __parse_settings_i2c_slaveModeSlaveAddress
       __parse_settings_spi_frequency
       __parse_settings_spi_mode
       __parse_settings_spi_polarity
       __parse_write_buffer
         _fat_write_to_buffer
           _flash_write_to_buffer
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_buffer
       _fat_read_from_buffer
         _flash_read_from_buffer
           __flash_buffer_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D4       7       82.8%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     355      31        0.0%
DATA                 0      0     955       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Oct 07 14:23:34 2018

                            __end_of_fat_read_from_file 61FE  
                             ??_internalFlash_getBuffer 0003  
                   __parse_buffer_to_sector@out_idx_ptr 0056  
                       __size_of__write_value_to_offset 0034  
                                            _USB_SD_Ptr BE79  
                              fat_create_file@extension 004F  
                __end_of_i2c_display_send_init_sequence 9B2E  
               __size_of_i2c_display_send_init_sequence 002C  
                        _i2c_display_send_init_sequence 9B02  
                          __end_of_fat_read_from_buffer 9E6C  
                                   __system_timer0_init 9E0E  
                            flash_read_from_buffer@data 0023  
                        __parse_file_delete@out_idx_ptr 0054  
                       __parse_file_resize@return_value 0087  
                                                    _os 00C1  
                                         _USBDeviceInit 4BB8  
                                   ___wmul@multiplicand 0003  
                                    _USBCheckHIDRequest 63C2  
                           ??__data_sector_from_cluster 0003  
                  __bootloader_verify_file@return_value 0097  
                                      ??__flash_is_busy 0012  
__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr 0005  
                            ??__sector_from_file_number 0003  
                                          __CFG_CP0$OFF 000000  
                        __root_is_available@root_sector 0030  
                             ??_internalFlash_erasePage 000B  
                      __size_of__parse_sector_to_buffer 016C  
                              ?_i2c_display_write_fixed 0006  
                               fat_modify_file@position 006A  
                                       _fat_resize_file 5E2A  
                  USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                  USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                   l202 6BCA  
                                                   l210 7E88  
                                                   l220 5B56  
                                                   l141 4C26  
                                                   l214 822A  
                                                   l310 78DC  
                                                   l150 39BC  
                                                   l143 4C64  
                                                   l303 9870  
                                                   l151 39B2  
                                                   l320 8B06  
                                                   l208 7E6E  
                                                   l224 5BD8  
                                                   l304 986E  
                                                   l152 39B0  
                                                   l241 6AAC  
                                                   l233 6A00  
                                                   l161 3A38  
                                                   l242 6A74  
                                                   l330 6D08  
                                                   l322 8B54  
                                                   l235 6A0A  
                                                   l331 6CCE  
                                                   l251 52AA  
                                                   l411 6410  
                                                   l219 5BAE  
                                                   l139 4BFE  
                                                   l171 3AC8  
                                                   l163 3A4E  
                                                   l155 39D8  
                                                   l252 5290  
                                                   l412 63DE  
                                                   l260 632A  
                                                   l164 3A5A  
                                                   l156 39E8  
                                                   l237 6A6C  
                                                   l333 6CEE  
                                                   l309 78E2  
                                                   l173 3AEC  
                                                   l165 3A82  
                                                   l157 39F0  
                                                   l238 6A34  
                                                   l422 6432  
                                                   l414 6422  
                           __end_of_USBStdGetDscHandler 4F90  
                                                   l262 639E  
                                                   l350 623E  
                                                   l166 3A8E  
                                                   l158 3A06  
                                                   l183 5942  
                                                   l191 5576  
                                                   l423 644A  
                                                   l415 63FC  
                                                   l271 4E7C  
                                                   l343 629C  
                                                   l175 3B08  
                                                   l159 3A12  
                                                   l328 6C86  
                                                   l248 5234  
                                                   l424 6456  
                                                   l360 1A9E  
                                                   l272 4F0A  
                                                   l352 6244  
                                                   l344 620E  
                                                   l168 3AA0  
                                                   l185 596C  
                                                   l329 6C8C  
                                                   l249 5212  
                                                   l521 591C  
                                                   l425 646E  
                                                   l361 1AA4  
                                                   l281 7972  
                                                   l353 6262  
                                                   l610 8C5E  
                                                   l178 97A6  
                                                   l418 647A  
                                                   l530 6DF0  
                                                   l274 4F12  
                                                   l282 7900  
                                                   l354 627E  
                                                   l346 6218  
                                                   l187 59EA  
                                                   l603 8C66  
                                                   l179 97B4  
                                                   l371 1BC4  
                                                   l363 1B10  
                                                   l275 4F68  
                                                   l347 621E  
                                                   l620 088E  
                                                   l604 8C2A  
                                                   l372 1BE0  
                                                   l268 4F78  
                                                   l348 6224  
                                                   l621 0898  
                                                   l381 1CD8  
                                                   l365 1B58  
                                                   l277 4F70  
                                                   l269 4E68  
                                                   l285 7988  
                                                   l349 6238  
                                                   l710 64B4  
                                                   l702 1766  
                                                   l614 0BE0  
                                                   l630 0A3E  
                                                   l606 8C46  
                                                   l518 5924  
                                                   l534 6E58  
                                                   l374 1C46  
                                                   l286 7912  
                                                   l703 177E  
                                                   l623 08F0  
                                                   l615 086E  
                                                   l519 5898  
                                                   l375 1C52  
                                                   l367 1B7A  
                                                   l287 7918  
                                                   l295 960C  
                                                   l712 64CA  
                                                   l704 1798  
                                                   l640 0B08  
                                                   l624 09AA  
                                                   l608 8C52  
                                                   l800 84CC  
                                                   l376 1CCC  
                                                   l288 7936  
                                                   l296 960A  
                                                   l721 6556  
                                                   l633 0A72  
                                                   l625 09B4  
                                                   l609 8C58  
                                                   l561 2324  
                                                   l529 6E8E  
                                                   l369 1BFA  
                                                   l722 6540  
                                                   l650 0B88  
                                                   l634 0AA0  
                                                   l626 09D4  
                                                   l618 087E  
                                                   l554 2410  
                                                   l562 230E  
                                                   l546 6E60  
                                                   l810 84BE  
                                                   l715 64FA  
                                                   l651 0B9C  
                                                   l571 2340  
                                                   l563 22E2  
                                                   l555 21E6  
                                                   l379 1C86  
                                                   l644 0B40  
                                                   l636 0AD4  
                                                   l628 0A04  
                                                   l564 22EA  
                                                   l804 849A  
                                                   l900 3C04  
                                                   l661 80EA  
                                                   l741 5750  
                                                   l733 6568  
                                                   l645 0B54  
                                                   l573 2352  
                                                   l805 84A2  
                                                   l901 3C0C  
                                                   l750 5784  
                                                   l718 6506  
                                                   l670 32E0  
                                                   l654 0BD8  
                                                   l646 0B72  
                                                   l638 0AF0  
                                                   l566 2302  
                                                   l806 84AA  
                                                   l902 3C14  
                                                   l751 5790  
                                                   l719 6520  
                                                   l671 32EA  
                                                   l575 2374  
                                                   l559 2206  
                                                   l903 3C1C  
                                                   l752 57A2  
                                                   l680 3418  
                                                   l672 32FE  
                                                   l648 0B9E  
                                                   l592 536A  
                                                   l576 237C  
                                                   l808 84B4  
                                                   l912 8DD4  
                                                   l904 3C24  
                                                   l753 57AE  
                                                   l737 6578  
                                                   l665 342E  
                                                   l649 0B78  
                                                   l577 23A0  
                                                   l905 3C2E  
                                                   l754 57C0  
                                                   l674 3348  
                                                   l666 3280  
                                                   l690 15C8  
                                                   l586 23F2  
                                                   l659 80D4  
                                                   l747 5802  
                                                   l755 57F6  
                                                   l675 3370  
                                                   l691 15D4  
                                                   l931 929C  
                                                   l915 8DFA  
                                                   l748 577C  
                                                   l668 3452  
                                                   l676 33A0  
                                                   l684 17AE  
                                                   l692 15F4  
                                                   l596 5402  
                                                   l764 9040  
                                                   l924 92BA  
                                                   l916 8E08  
                                                   _BDT 000D00  
                                                   l677 33B2  
                                                   l669 32D4  
                                                   l693 163E  
                                                   l685 1522  
                                                   l597 53FC  
                                                   l589 23FA  
                                                   l933 92A8  
                                                   l925 9280  
                                                   l678 33B8  
                                                   l694 1618  
                                                   l679 33CC  
                                                   l687 17D2  
                                                   l695 1684  
                                                   l599 5406  
                                                   l767 9076  
                                                   l927 928A  
                                                   l696 167C  
                                                   l688 15C2  
                                                   l970 7AB4  
                                                   l698 1698  
                                                   l699 1700  
                                                   l891 3B48  
                                                   l964 7A52  
                                                   l892 3B56  
                                                   l894 3BE6  
                                                   l896 3C3E  
                                                   l897 3BF4  
                                                   l898 3C82  
                                                   l899 3BFC  
                                                   _LBA 0157  
                                                   _LUN 01AF  
                                                   _UIE 000F36  
                                                   _UIR 000F62  
                                  _i2c_digipot_reset_on 9DA8  
                                     main@tx_start_addr 00B9  
                              __size_of__display_failed 02F2  
                                           _start_line1 BDE8  
                                           _start_line2 BE60  
                                           _start_line3 BEA6  
                                           _start_line4 BE16  
                                    api_prepare@command 00B6  
                                            _USBSuspend 9A48  
                         ?_fat_write_sector_from_buffer 0043  
                           flash_read_from_buffer@start 001F  
                                    _internalFlash_read 987C  
                                __end_of_display_update 8A8E  
                                  USBStdSetCfgHandler@i 0018  
                                  ?__parse_format_drive 0027  
                                                   prod 000FF3  
                                                   tosl 000FFD  
                                                   wreg 000FE8  
                                        _USBDeviceTasks 3990  
                                   ?_USBCheckHIDRequest 0001  
                                          __CFG_IESO$ON 000000  
                              __size_of__display_search 0152  
                                        _USBDeviceState 00FA  
                                          ?__write_root 0029  
                        __parse_file_resize@out_idx_ptr 0059  
                              __size_of__display_verify 0128  
                                 _spi_set_configuration 540C  
                                 ??_USBCtrlTrfRxService 0001  
                                         _hex_file_size 0143  
                              USBEnableEndpoint@options 0009  
                     internalFlash_addressFromPage@page 0001  
                                     __find_nth_cluster 7FF8  
                                     ??_MSDErrorHandler 0009  
                                  ?__system_timer0_init 0001  
                     __size_of__fill_buffer_read_buffer 00F6  
                          __parse_file_resize@file_size 0089  
                                   api_prepare@inBuffer 00B2  
                     __size_of__offset_from_file_number 0026  
                           __flash_write_to_buffer@data 0016  
                                                  l1006 9FD6  
                                                  l1200 94CC  
                                                  l1113 9F2C  
                                                  l2004 6EF6  
                                                  l2021 12CC  
                                                  l1205 83BC  
                                                  l1301 5A8A  
                                                  l2014 8084  
                                                  l2110 7DF4  
                                                  l2102 9502  
                                                  l1150 A102  
                                                  l1206 83A0  
                                                  l2015 801E  
                                                  l2007 6F4A  
                                                  l2031 1406  
                                                  l1303 5AA2  
                                                  l2016 8068  
                                                  l2024 12D6  
                                                  l2104 9512  
                                                  l2200 1FE6  
                                                  l1080 98DA  
                                                  l2009 6F54  
                                                  l2033 1414  
                                                  l2025 1376  
                                                  l2113 7F76  
                                                  l2201 1FF6  
                                                  l3001 73EC  
                                                  l2121 6132  
                                                  l1305 5AB2  
                                                  l2042 1504  
                                                  l2034 141C  
                                                  l2026 1326  
                                                  l2210 2026  
                                                  l2202 2006  
                                                  l2130 2768  
                                                  l1330 56EA  
                                                  l1322 5634  
                                                  l2043 1516  
                                                  l2027 143A  
                                                  l2107 7D8C  
                                                  l2115 7F82  
                                                  l2211 202A  
                                                  l2203 200A  
                                                  l2131 2790  
                                                  l2123 614A  
                                                  l1171 A0A2  
                                                  l1307 5AD8  
                                                  l1323 5648  
                                                  l3100 547A  
                                                  l2036 148E  
                                                  l2140 6100  
                                                  l2220 204E  
                                                  l2212 202E  
                                                  l2204 200E  
                                                  l1228 90C0  
                                                  l2132 2838  
                                                  l2124 61B0  
                                                  l1324 565E  
                                                  l2053 8CF8  
                                                  l2037 1486  
                                                  l2109 7D9C  
                                                  l2061 9D90  
                                                  l2141 60C4  
                                                  l2117 7FB6  
                                                  l2221 2052  
                                                  l2213 2032  
                                                  l2205 2012  
                                                  l1165 A0FA  
                                                  l1229 90A4  
                                                  l2038 14CA  
                                                  l2150 5F06  
                                                  l2142 60E0  
                                                  l2230 2072  
                                                  l2222 2056  
                                                  l2214 2036  
                                                  l2206 2016  
                                                  l1086 9D56  
                                                  l1318 56FA  
                                                  l1326 5686  
                                                  l2055 8D4A  
                                                  l2151 5EFE  
                                                  l2063 9DA0  
                                                  l2143 60FC  
                                                  l2231 2076  
                                                  l2223 205A  
                                                  l2215 203A  
                                                  l2207 201A  
                                                  l1191 9B98  
                                                  l1087 9D44  
                                                  l2127 26B0  
                                                  l1159 A096  
                                                  l1079 98D0  
                                                  l1327 56AE  
                                                  l1319 5620  
                             ?__fill_buffer_read_buffer 002B  
                                                  l2160 255E  
                                                  l2080 6824  
                                                  l2136 602E  
                                                  l2232 207A  
                                                  l2224 205E  
                                                  l2216 203E  
                                                  l2208 201E  
                                                  l1192 9B8A  
                                                  l1600 4AC0  
                                                  l2161 2606  
                                                  l2233 207E  
                                                  l2225 2062  
                                                  l2217 2042  
                                                  l2209 2022  
                                                  l1193 9BAC  
                                                  l1521 4566  
                                                  l2129 287A  
                                                  l1177 A08E  
                                                  l1329 56CA  
                                                  l3114 845C  
                                                  l2154 2450  
                                                  l2138 603E  
                                                  l2250 913A  
                                                  l2234 2082  
                                                  l2226 2066  
                                                  l2218 2046  
                                                  l2170 6AC2  
                                                  l1194 9B8E  
                                                  l1602 4B42  
                                                  l1290 5A30  
                                                  l3123 82AC  
                                                  l2147 5E3A  
                                                  l2083 679A  
                                                  l2139 6088  
                                                  l2243 9142  
                                                  l2251 913E  
                                                  l2235 2086  
                                                  l2227 206A  
                                                  l2219 204A  
                                                  l2171 6AC6  
                                                  l1195 9B92  
                                                  l1531 45D6  
                                                  l1523 457E  
                                                  l1515 4526  
                                                  l1611 30D4  
                                                  l1603 4B14  
                                                  l3108 901A  
                                                  l2092 8962  
                                                  l2156 2468  
                                                  l2332 763E  
                                                  l2244 9126  
                                                  l2236 208A  
                                                  l2180 6AEA  
                                                  l2172 6ACA  
                                                  l2260 3870  
                                                  l1620 3208  
                                                  l1612 30A6  
                                                  l1700 378A  
                                                  l2500 04E2  
                                                  l2325 8804  
                                                  l3117 8490  
                                                  l2157 24B0  
                                                  l2149 5E4A  
                                                  l2237 208E  
                                                  l2229 206E  
                                                  l2165 6B02  
                                                  l2181 6AEE  
                                                  l2173 6ACE  
                                                  l1525 4596  
                                                  l1517 453A  
                                                  l1621 31D0  
                                                  l1605 4B96  
                                                  l1293 5A42  
                                                  l3126 82E8  
                                                  l2158 2648  
                                                  l2334 7696  
                                                  l2246 912A  
                                                  l2238 2092  
                                                  l2190 1F78  
                                                  l2182 6AF2  
                                                  l2174 6AD2  
                                                  l2166 6AB6  
                                                  l2262 3900  
                                                  l2270 38C8  
                                                  l1614 3128  
                                                  l1606 4B68  
                                                  l1630 50C0  
                                                  l2350 9B48  
                                                  l2502 057C  
                                                  l2327 8866  
                                                  l2159 2536  
                                                  l2247 912E  
                                                  l2239 2096  
                                                  l2183 6AF6  
                                                  l2175 6AD6  
                                                  l2271 38CC  
                                                  l2263 38AC  
                                                  l1199 94E8  
                                                  l1471 9472  
                                                  l1711 3EDE  
                                                  l1527 45AE  
                                                  l1519 4550  
                                                  l1623 325C  
                                                  l1615 30FA  
                                                  l2511 069C  
                                                  l2503 05F4  
                                                  l1295 5A52  
                                                  l1800 86B4  
                                                  l2096 4D26  
                                                  l2248 9132  
                                                  l2192 1F7C  
                                                  l2184 6AFA  
                                                  l2176 6ADA  
                                                  l2168 6ABA  
                                                  l2280 38F0  
                                                  l2272 38D0  
                                                  l2264 38B0  
                                                  l2256 382A  
                                                  l1712 3EB0  
                                                  l3160 8540  
                                                  l1624 322E  
                                                  l1720 9102  
                                                  l1632 5142  
                                                  l1560 686C  
                                                  l2352 9B56  
                                                  l2504 064E  
                                                  l2337 85B2  
                                                  l2089 680E  
                                                  l2249 9136  
                                                  l2193 1F80  
                                                  l2185 6AFE  
                                                  l2177 6ADE  
                                                  l2169 6ABE  
                                                  l2281 38F4  
                                                  l2273 38D4  
                                                  l2265 38B4  
                                                  l1481 77F4  
                                                  l1641 3CBE  
                                                  l1473 947E  
                                                  l1705 3E36  
                                                  l1529 45C2  
                                                  l1617 317C  
                                                  l1721 90D4  
                                                  l1633 5114  
                                                  l1561 6830  
                                                  l2513 0746  
                                                  l1289 5AF2  
                                                  l1297 5A6A  
                                                  l1802 86EC  
                                                  l2098 4D38  
                                                  l2194 1F84  
                                                  l2178 6AE2  
                                                  l2282 38F8  
                                                  l2274 38D8  
                                                  l2266 38B8  
                                                  l2258 3838  
                                                  l1650 3DE0  
                                                  l1642 3C90  
                                                  l1714 3F52  
                                                  l1706 3E08  
                                                  l1618 314E  
                                                  l1730 496E  
                                                  l1570 6860  
                                                  l2370 0310  
                                                  l2514 080A  
                                                  l3090 9770  
                                                  l2339 860A  
                                                  l2099 4D96  
                                                  l2195 1F96  
                                                  l2179 6AE6  
                                                  l2283 38FC  
                                                  l2275 38DC  
                                                  l2267 38BC  
                                                  l1483 7814  
                                                  l1651 3DB2  
                                                  l1715 3F24  
                                                  l3163 8580  
                                                  l1635 5196  
                                                  l1571 6866  
                                                  l1563 6836  
                                                  l2363 003E  
                                                  l2507 0854  
                                                  l2515 0750  
                                                  l2451 8AC4  
                                                  l1299 5A7A  
                                                  l1804 870A  
                                                  l2196 1FA6  
                                                  l2284 398C  
                                                  l2276 38E0  
                                                  l2268 38C0  
                                                  l1644 3D12  
                                                  l1708 3E8A  
                                                  l3164 858E  
                                                  l1660 0FCA  
                                                  l1732 49F0  
                                                  l1636 5168  
                                                  l1572 68D0  
                                                  l1564 683C  
                                                  l2612 9C16  
                                                  l2348 9B3E  
                                                  l2372 039C  
                                                  l2516 07C8  
                                                  l2508 0660  
                                                  l2460 8AB8  
                                                  l2452 8A9A  
                            USBConfigureEndpoint@handle 0007  
                                                  l2189 209A  
                                                  l2197 1FB6  
                                                  l2277 38E4  
                                                  l2269 38C4  
                                                  l1485 7834  
                                                  l1645 3CE4  
                                                  l1709 3E5C  
                                                  l1581 348C  
                                                  l1733 49C2  
                                                  l1629 50EE  
                                                  l1573 68BC  
                                                  l1565 6842  
                                                  l2621 98B0  
                                                  l2605 762A  
                                                  l2373 03C0  
                                                  l2365 00B4  
                                                  l2517 0804  
                                                  l2293 7B38  
                                                  l3094 5506  
                                                  l2198 1FC6  
                                                  l2278 38E8  
                                                  l1478 77D4  
                                                  l1662 11CA  
                                                  l1670 106E  
                                                  l1590 360E  
                                                  l1582 345E  
                                                  l1726 4948  
                                                  l1574 68C2  
                                                  l1566 6848  
                                                  l2470 69BC  
                                                  l2606 75E8  
                                                  l2366 0202  
                                                  l3095 5410  
                                                  l2287 9C54  
                                                  l2199 1FD6  
                                                  l2279 38EC  
                                                  l1647 3D8C  
                                                  l3159 854C  
                                                  l1591 35E0  
                                                  l1735 4A44  
                                                  l1727 491A  
                                                  l1575 68C8  
                                                  l1567 684E  
                                                  l2471 69BE  
                                                  l2375 0426  
                                                  l2367 0188  
                                                  l2519 0820  
                                                  l2455 8AA6  
                                                  l3087 9782  
                                                  l1832 9E0A  
                                                  l1648 3D54  
                                                  l1664 104C  
                                                  l1656 0FA4  
                                                  l1584 34E0  
                                                  l1736 4A16  
                                                  l1576 68FA  
                                                  l1568 6854  
                                                  l2472 69C8  
                                                  l2608 75F4  
                                                  l3088 975E  
                                                  l3097 5416  
                                                  l1681 118C  
                                                  l1673 10EC  
                                                  l1665 101E  
                                                  l1657 0F76  
                                                  l1585 34B2  
                                                  l1729 499C  
                                                  l1569 685A  
                                                  l2377 0458  
                                                  l2369 033E  
                                                  l2457 8AB2  
                                                  l2297 7B88  
                                                  l3089 9790  
                                                  l1826 8F2E  
                                                  l1818 942A  
                                                  l1682 115E  
                                                  l1674 10BE  
                                                  l1690 3664  
                                                  l2810 7746  
                                                  l1930 9968  
                                                  l2466 69D4  
                                                  l2490 0E78  
                                                  l1827 8F38  
                                                  l1819 9434  
                                                  l3611 9342  
                                                  l1667 11EC  
                                                  l1659 0FF8  
                                                  l1691 3636  
                                                  l1587 35BA  
                                                  l2467 6910  
                                                  l2379 048A  
                                                  l2491 0EAA  
                                                  l2483 0C68  
                                                  l3612 933A  
                                                  l3540 8B7A  
                                                  l1684 1220  
                                                  l1596 4A9A  
                                                  l1588 358C  
                                                  l2804 76F6  
                                                  l2468 6966  
                                                  l2492 0EDA  
                                                  l2484 0C8E  
                                                  l1781 926A  
                                                  l3621 96EE  
                                                  l3541 8B6E  
                                                  l1685 11F2  
                                                  l1677 113C  
                                                  l1669 109C  
                                                  l1693 36B8  
                                                  l1597 4A6C  
                                                  l2493 0F36  
                                                  l1773 8654  
                                                  l1782 9228  
                                                  l2910 43A0  
                                                  l3622 96E6  
                                                  l1678 110E  
                                                  l1694 368A  
                                                  l2806 7730  
                                                  l1846 93DA  
                                                  l1926 999A  
                                                  l2478 7C18  
                                                  l2486 0D26  
                                                  l1774 8680  
                                                  l1791 8F86  
                                                  l2903 5D28  
                                                  l3615 9362  
                                                  l1599 4AEE  
                                                  l1847 93E4  
                                                  l2495 0F5C  
                                                  l2487 0D9E  
                                                  l1784 9250  
                                                  l1792 8F90  
                                                  l2920 79DA  
                                                  l3616 936C  
                                                  l3544 8BA2  
                                                  l1696 370C  
                                                  l2816 3068  
                                                  l2808 776E  
                                                  l2488 0E18  
                                                  l2913 1D3A  
                                                  l3625 9706  
                                                  l3801 7C78  
                                                  l3545 8BB0  
                                                  l1697 36DE  
                                                  l2817 3096  
                                                  l2809 773A  
                                                  l2906 428A  
                                                  l3626 9710  
                                                  l3802 7CB6  
                                                  l2842 6DA8  
                                                  l2850 6D9C  
                                                  l2818 306E  
                                                  l2834 2A4A  
                                                  l2770 3FE2  
                                                  l2931 424A  
                                                  l1699 37B8  
                                                  l2851 6DA2  
                                                  l2843 6D1A  
                                                  l2924 7A44  
                      __end_of__parse_settings_spi_mode 70E8  
                                                  l2860 183A  
                                                  l2772 40B4  
                                                  l2780 406C  
                                                  l2764 4002  
                                                  l1885 88E0  
                                                  l1877 91C8  
                                                  l2917 1F70  
                                                  l2941 47FC  
                                                  l2861 1858  
                                                  l2845 6D36  
                                                  l2829 7D40  
                                                  l2781 4094  
                                                  l2765 3F8A  
                                                  l3813 9B74  
                                                  l2934 43EE  
                                                  l1990 8EAC  
                                                  l2870 1966  
                                                  l2862 1876  
                                                  l2846 6D52  
                                                  l2790 5002  
                                                  l2838 5FEC  
                                                  l3814 9B64  
                                                  l1799 86AA  
                                                  l1887 8942  
                                                  l3807 8C16  
                                                  l2927 411E  
                                                  l2855 1A00  
                                                  l2871 1984  
                                                  l2863 1894  
                                                  l2847 6D6E  
                                                  l2775 401E  
                                                  l2767 3FA0  
                                                  l2599 8A22  
                                                  l3808 8BD8  
                                                  l2952 5E26  
                                                  l2872 19A2  
                                                  l2864 18B2  
                                                  l2856 17E0  
                                                  l2848 6D8A  
                                                  l2792 507A  
                                                  l2776 402C  
                                                  l2768 3FB6  
                                                  l3825 755A  
                                                  l2945 490E  
                                                  l2857 1A76  
                                                  l2873 19C0  
                                                  l2865 18D0  
                                                  l2849 6D96  
                                                  l2793 501C  
                                                  l2785 4FAE  
                                                  l2777 403E  
                                                  l2769 3FCC  
                                                  l2938 450E  
                                                  l3826 74B4  
                                                  l2882 2CAE  
                                                  l2962 7124  
                                                  l2874 19DE  
                                                  l2866 18EE  
                                                  l2858 17FE  
                                                  l2794 50B0  
                                                  l2778 4050  
                                                  l3827 7552  
                                                  l2955 7062  
                                                  l2867 190C  
                                                  l2859 181C  
                                                  l2795 5034  
                                                  l2779 405E  
                                                  l1988 8E72  
                                                  l2948 5D6A  
                                                  l2892 46A6  
                                                  l2980 732A  
                                                  l2868 192A  
                                                  l2796 5050  
                                                  l2788 4FFC  
                                                  l2885 66A4  
                                                  l2973 7022  
                                                  l2869 1948  
                             ?__offset_from_file_number 0001  
                                                  l2878 2AEA  
                                                  l2990 71E6  
                                                  l2966 71A6  
                                                  l2983 742C  
                                                  l2959 70E4  
                                                  l2896 47BC  
                                                  l2976 72A8  
                                                  l2889 6744  
                                                  l2969 6FA0  
                                                  l2994 7268  
                                                  l2899 5C6C  
                                                  l2987 74AE  
                                                  l3795 96BA  
                                                  l2997 736A  
                                                  l3799 7C3E  
                                                  STR_1 BFF1  
                                                  STR_2 BFF1  
                                                  STR_3 BFF1  
                                                  STR_4 BFF1  
                                                  STR_5 BFF1  
                                                  STR_6 BFF1  
                                                  STR_7 BFF1  
                                 __end_of_checked_line1 BDB8  
                                                  STR_8 BFF1  
                                 __end_of_checked_line2 BC82  
                                                  STR_9 BFDC  
                                 __end_of_checked_line3 BE79  
                                 __end_of_checked_line4 BD17  
                                        _bootloader_run 8A8E  
                                   ?_internalFlash_read 000E  
                                         _i2c_frequency 0186  
                                                  u8100 573C  
                                                  u9000 130C  
                                                  u9100 14DE  
                                                  u9020 1382  
                                                  u8230 6F1C  
                                                  u9110 14EA  
                                                  u9030 13AA  
                                                  u8310 750C  
                                                  u8038 58B8  
                                                  u8039 58CA  
                                 ??_USBCtrlTrfTxService 0001  
                                                  u9040 13B6  
                                                  u8320 7542  
                                                  u8400 8BF8  
                                                  u7600 96F2  
                                                  u8250 6F5A  
                                                  u9050 13E0  
                                                  u8074 590E  
                                                  u8058 58DC  
                                                  u8315 7506  
                                                  u8075 5908  
                                                  u8059 58F0  
                                                  u7700 8EF0  
                                                  u8317 74FC  
                                                  u9230 681A  
                                                  u7710 8EFC  
                                                  u8350 8550  
                                                  u8327 7538  
                                                  u8407 8BEE  
                                                  _UCFG 000F39  
                                                  u8280 8D46  
                                                  u9080 1468  
                                                  u9160 9DA4  
                                                  u9240 6824  
                                                  u7720 8F06  
                                                  u8520 6E3A  
                                                  u7545 8726  
                                                  u8290 74D4  
                                                  u7570 9346  
                                                  u7708 8EF2  
                                                  u8380 8B7E  
                                                  u8700 6564  
                                                  u9340 6A5C  
                                                  _UEP0 000F26  
                                                  _UEP1 000F27  
                                                  u7726 8F08  
                                                  u7718 8EFE  
                                                  u7670 8ECC  
                                      ?_fat_create_file 004D  
                                                  u9280 8862  
                                                  u7680 8ED8  
                                                  u8800 7820  
                                                  u8720 6574  
                                                  u9360 6A9C  
                                                  u8297 74CA  
                                                  u7690 8EE4  
                                                  u8650 653C  
                                                  u7835 86C0  
                                                  u9347 6A52  
                                                  _UEIE 000F37  
                                                  u9620 173A  
                                                  u7925 8F44  
                                                  u7678 8ECE  
                                                  u8910 4666  
                                                  u9438 3322  
                                                  u9630 173C  
                                                  u9518 157C  
                                                  u7935 9D02  
                                                  u9439 3336  
                                                  u9519 1590  
                                                  u9367 6A92  
                                                  u7688 8EDA  
                                                  u9720 94AA  
                                                  u8920 9996  
                                                  u8680 6552  
                                                  u9385 32A6  
                                                  u7698 8EE6  
                                                  u8930 9964  
                                                  u7795 8F9C  
                                                  u8950 8054  
                                                  u8790 7800  
                                                  u9495 1548  
                                                  u9648 1742  
                                                  _UEIR 000F63  
                                                  _UCON 000F65  
                                                  u9649 1754  
                                                  u9578 164A  
                                                  u9579 165E  
                                 _i2c_digipot_reset_off 9DCA  
                                    ?__find_nth_cluster 0038  
                               ??_fat_get_format_status 002C  
                          flash_read_from_buffer@length 0021  
                                 __size_of__delete_root 0048  
                                  api_parse@out_idx_ptr 00AB  
                                        _ResetSenseData 8C8A  
                __end_of__fill_buffer_get_configuration 7F5A  
               __size_of__fill_buffer_get_configuration 009E  
                        __fill_buffer_get_configuration 7EBC  
                       __size_of_flash_read_from_buffer 002E  
                USBStdFeatureReqHandler@current_ep_data 001B  
                                                  _pDst 0181  
                               fat_write_to_buffer@data 0029  
                                                  _main 3B10  
                                                  _itoa 9696  
                            __end_of_fat_append_to_file 7E1E  
                       __parse_file_modify@return_value 008E  
                        __parse_file_create@out_idx_ptr 005D  
                           __size_of_APP_DeviceMSDTasks 0014  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                               __end_of_display_prepare 6906  
                                                  indf0 000FEF  
                                                  fsr2h 000FDA  
                                                  fsr0l 000FE9  
                                                  indf1 000FE7  
                                                  indf2 000FDF  
                                                  fsr1l 000FE1  
                                                  fsr2l 000FD9  
                                                  _utoa 7C36  
                                __CFG_DSWDTOSC$T1OSCREF 000000  
                            ??_ExternalFlash_SectorRead 0034  
                           __fill_buffer_find_file@cntr 003F  
                               __bootloader_verify_file 0C2A  
                             _ExternalFlash_MediaDetect A138  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
      __get_available_offset_from_buffer@minimum_offset 0001  
                        fat_modify_file@number_of_bytes 0068  
                                                  start 001C  
                       __end_of_APP_DeviceMSDInitialize A044  
                                 _display_get_character 9BDE  
                                  ??_USBCheckHIDRequest 0001  
                                      ?_MSDWriteHandler 0001  
                                  __end_of_failed_line1 BDA8  
                                  __end_of_failed_line2 BCF4  
                                  __end_of_failed_line4 BE71  
                               __end_of_fat_modify_file 266C  
                                   ??__find_nth_cluster 003C  
                        ??_MSDProcessCommandMediaAbsent 0048  
                            __end_of_USBCheckStdRequest 62E0  
                                ??_USBCtrlTrfOutHandler 0003  
                                   __bootloader_program 049C  
                          ??__flash_copy_page_to_buffer 0017  
                      __fill_buffer_find_file@outBuffer 0039  
                        ?__flash_write_page_from_buffer 0014  
                                          ___param_bank 000000  
                             ??_USBStdFeatureReqHandler 0018  
                                          _USBOutHandle 0179  
                      __end_of__fat_sector_from_cluster 9F5E  
                  internalFlash_addressFromPage@address 0005  
                                __get_available_cluster 6EA0  
                                 parseHexFileEntry@data 000C  
                              __end_of__display_checked 3E02  
                         __write_value_to_offset@buffer 0003  
                                        _hex_file_entry 018D  
                                _bootloader_get_entries A0C6  
                       __size_of__flash_write_to_buffer 0050  
                              ??_USBStdGetStatusHandler 0001  
                         __write_value_to_offset@offset 0001  
                                  ??_internalFlash_read 0016  
                                        ?_USBDeviceInit 0001  
                                     __flash_get_status 9A16  
      __fill_buffer_get_bootloader_details@buffer_large 000C  
                  __make_cluster_chain@sector_in_buffer 0047  
                      __fat_offset_from_cluster@cluster 0001  
                              _system_ui_inactive_count 0175  
      __fill_buffer_get_bootloader_details@buffer_small 0010  
                                         __CFG_PLLDIV$2 000000  
    __end_of__parse_settings_i2c_masterModeSlaveAddress 73F0  
   __size_of__parse_settings_i2c_masterModeSlaveAddress 00C2  
          ??__parse_settings_i2c_masterModeSlaveAddress 0007  
           ?__parse_settings_i2c_masterModeSlaveAddress 0001  
            __parse_settings_i2c_masterModeSlaveAddress 732E  
                         i2c_display_write_fixed@length 0008  
                            __end_of__get_first_cluster 9324  
                                                 l12019 9D88  
                                                 l11431 74B4  
                              __end_of__parse_file_copy 5E2A  
                                                 l11521 63F6  
                                                 l12129 9B64  
                                                 l12059 677C  
                                ?_i2c_digipot_backlight 0001  
                                                 l11373 6EC2  
                                                 l11365 6EA8  
                                                 l12093 6824  
                                                 l11711 92A8  
                                                 l14201 2E44  
                                                 l12425 9476  
                                                 l12177 6A0A  
                                                 l14211 2E6A  
                                                 l14123 2CFE  
                                                 l12419 946A  
                                                 l11811 45AE  
                                                 l11803 457E  
                                                 l12275 3428  
                                                 l11707 928A  
                                                 l11397 6F5A  
                                                 l11493 8BD8  
                                                 l14213 2E72  
                                                 l14109 2CBA  
                               ?__fill_buffer_find_file 0037  
                                                 l14151 2D86  
                                                 l11823 45DE  
                                                 l11807 4596  
                                                 l11639 6506  
                                                 l14137 2D42  
                                                 l14163 2DAC  
                                                 l13373 3870  
                                                 l13365 3838  
                                                 l14173 2DD2  
                                                 l15205 7B0A  
                                                 l13359 382A  
                                                 l14175 2DDA  
                                                 l11791 453A  
                                                 l15223 7B5A  
                                                 l13481 9C54  
                                                 l13465 3900  
                                                 l15401 75EC  
                                                 l11795 4550  
                                                 l11787 4526  
                                                 l14189 2E1E  
                                                 l13549 6322  
                                                 l12855 4D96  
                                                 l11799 4566  
                                                 l15329 6966  
                                                 l16401 07C8  
                                                 l15177 861E  
                                                 l16077 504A  
                                                 l15445 7D38  
                                                 l13781 09CC  
                                                 l15801 4C5C  
                                          spi_tx@length 0003  
                                                 l15395 75E0  
                                                 l15573 773E  
                                                 l16269 0C86  
                                                 l13983 7F7A  
                                                 l15911 21FE  
                                                 l16527 3A98  
                                                 l13995 7FAE  
                                                 l17291 20B2  
                                                 l17293 21CA  
                                                 l17277 84E4  
                                                 l15773 4BF6  
                                                 l17279 8518  
                                                 l15961 2324  
                                    ?__flash_get_status 000D  
                               __end_of_fat_rename_file 7FF8  
                                                 ?_main 0001  
                                                 ?_itoa 0011  
                                                 STR_10 BFE8  
                                                 STR_11 BFFA  
                                                 STR_12 BFCF  
                                 ?_i2c_digipot_reset_on 0001  
                                      ??__display_clear 0001  
                     __size_of_USBCtrlEPServiceComplete 0100  
                                       __end_of___lldiv 85A0  
                                                 ?_utoa 0008  
                                                 u10200 4D5E  
                      MSDCheckForErrorCases@DeviceBytes 000B  
                                                 u11010 0B1C  
                                                 u11020 0B2E  
                                                 u10205 4D54  
                                                 u10310 24D6  
                                                 u10240 5E84  
                                                 u10250 5EB6  
                                                 u12010 4286  
                                                 u11050 0BA6  
                                                 u10315 24CC  
                                                 u10260 5ED2  
                                                 u10245 5E7A  
                                                 u11205 2722  
                                                 u11150 7FAA  
                                                 u12110 79D6  
                                                 u10255 5EAC  
                                                 u10360 767A  
                                                 u11400 2DD2  
                                                 u11320 2CE2  
                                                 u10600 4F04  
                                                 u10441 3842  
                                                 u12210 43EA  
                                                 u11170 7FE6  
                                                 u12060 1D36  
                                                 u11420 2E02  
                                                 u11340 2D26  
                                                 u11180 268A  
                                                 u10620 4F5C  
                                                 u10365 7670  
                                                 u10390 85EE  
                                                 u11270 60AE  
                                                 u12310 5D66  
                                                 u10550 6356  
                                                 u10607 4EFA  
                                                 u11440 2E3C  
                                                 u11360 2D6A  
                                                 u12160 411A  
                                       __end_of___llmod 8BC2  
                                                 u11185 2680  
                                                 u12410 7120  
                                __end_of_USBDeviceTasks 3B10  
                                                 u13050 6936  
                                                 u13130 89EE  
                                                 u10395 85E4  
                                                 u11275 60A4  
                                                 u10627 4F52  
                                                 u11460 2E6A  
                                                 u11380 2DA4  
                                                 u12260 47F8  
                                                 u13125 9EC8  
                                                 u12510 72A4  
                                                 u13230 2A3A  
                                                 u10590 4ED4  
                                                 u13070 6992  
                                                 u13150 75AA  
                                                 u11480 2E9A  
                                                 u12360 705E  
                                                 u13240 5FE4  
                                                 u10840 1C6C  
                                                 u11810 2AE6  
                                                 u12610 71E2  
                                                 u13330 4C1A  
                                                 u12460 6F9C  
                                                 u10940 09FC  
                                                 u10908 08FC  
                                                 u13500 222E  
                                                 u10909 0910  
                                                 u10597 4ECA  
                                                 u11910 46A2  
                                                 u10918 092C  
                                                 u14310 3B0C  
                                                 u13190 760E  
                                                 u11655 9726  
                                                 u10919 0940  
                                                 u12560 7428  
                                                 u13280 776C  
                                                 u14400 7A6C  
                                                 u13360 4CC0  
                                                 u11745 8878  
                                                 u11860 66A0  
                                                 u12660 7366  
                                                 u14420 7A80  
                                                 u12804 534E  
                                                 u14500 5670  
                                                 u12805 5348  
                                                 u11765 9A86  
                                                 u10958 0A1C  
                                                 u12814 5380  
                                                 u10959 0A30  
                                                 u12815 537A  
                                                 u11960 5C68  
                                                 u13480 21FA  
                                                 u12920 7B3E  
                             ?_USBCtrlEPServiceComplete 0001  
                                                 u12854 53D2  
                                                 u12838 53A2  
                                                 u12790 5338  
                                                 u13670 23D4  
                                                 u12950 7B8E  
                                                 u14550 56E4  
                                                 u12855 53CC  
                                                 u12839 53B4  
                                                 u13745 9382  
                                                 u13761 9B0C  
                                                 u12778 5306  
                                                 u12970 00A2  
                                                 u12779 531A  
                                                 u13890 0CE8  
                                                 u14907 9D4A  
                                                 u14917 9242  
                                                 u13990 053E  
                                                 u14927 9254  
                                                 u14937 925E  
                                       __end_of___lwdiv 9376  
                          __flash_write_to_buffer@start 0014  
                                      ??__display_found 0016  
                                       __end_of___lwmod 971A  
                                         __CFG_WDTEN$ON 000000  
                                     fat_copy_file@name 0059  
                                                 _UADDR 000F38  
                                                 _TMR0H 000FD7  
                                                 _TMR0L 000FD6  
                                 ??__parse_format_drive 002D  
                                  _file_minimum_address 014B  
                                      ??__display_start 001D  
                                                 _USTAT 000F64  
                                      __i2c_read@length 0008  
                            __size_of_parseHexFileEntry 047C  
                           ?_ExternalFlash_CapacityRead 0001  
                                       ?_display_update 0001  
                              __bootloader_program@cntr 00A5  
                              __find_nth_cluster@offset 003C  
                    __size_of_USBCtrlEPAllowStatusStage 00CC  
                        __get_first_cluster@file_number 0038  
                                  ?__bootloader_program 0001  
                                          __delete_root 953E  
                                       ??_flash_is_busy 0014  
                              __bootloader_program@root 007C  
                             __end_of__find_nth_cluster 8096  
                              __find_nth_cluster@sector 0040  
                                      __end_of_MSDTasks 242E  
                                        __CFG_FCMEN$OFF 000000  
                                       __read_fat@value 0036  
                                    _USBCheckMSDRequest 6DDC  
                       __end_of_internalFlash_getBuffer A08A  
                       __end_of_USBCtrlEPAllowDataStage 7EBC  
                                                 _sd000 BFCB  
                                __write_value_to_offset 991A  
                                                 _sd001 BEE7  
                                                 _sd002 BF1B  
                                                 _sd003 BF8A  
                        ?_USBIncrement1msInternalTimers 0001  
                        __size_of_MSDTransferTerminated 0056  
                                   ??__flash_get_status 000F  
                                __end_of_bootloader_run 8AF6  
                   i2c_display_send_init_sequence@F6812 01C3  
                         __end_of_MSDTransferTerminated 9078  
                                          _gblCBWLength 0188  
                            __end_of__parse_file_delete 6748  
                             ??_internalFlash_writePage 000B  
                                ?_MSDCheckForErrorCases 000B  
                                 ??__system_timer0_init 0001  
                            __end_of__parse_file_append 43B2  
                            __end_of__parse_file_create 47C0  
                                __end_of_ResetSenseData 8CEC  
                            __end_of__parse_file_modify 1F76  
                            __end_of__parse_file_rename 5D2C  
                             internalFlash_read@address 000E  
                              fat_write_to_buffer@start 0025  
                              __parse_command_long@data 009D  
                             __data_sector_from_cluster A052  
                             fat_get_format_status@cntr 002E  
                            __end_of__parse_file_resize 2CB2  
                               ?__fill_buffer_read_file 009E  
                                                 pclath 000FFA  
                                       __end_of_ui_init 9FCC  
                                                 tablat 000FF5  
                             __size_of_USBStallEndpoint 0108  
                                   ?_USBCheckMSDRequest 0001  
                                       _MSDCommandState 00EF  
                           ??_ExternalFlash_SectorWrite 002E  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                       __end_of_internalFlash_erasePage 8A24  
                        __parse_file_rename@file_number 0067  
                            __end_of__display_rebooting 9124  
                                           ?_USBMSDInit 0001  
              ExternalFlash_WriteProtectStateGet@config 0001  
                         __size_of__system_encoder_init 003A  
                                                 utoa@c 0010  
                                                 utoa@v 000E  
                                                 status 000FD8  
              fat_copy_sector_to_buffer@physical_sector 004F  
                               i2c_eeprom_readByte@addr 0018  
                           ?__flash_copy_page_to_buffer 0014  
                                     __CFG_DSWDTPS$8192 000000  
                     __size_of__parse_settings_i2c_mode 00C2  
                                       __end_of_strncmp 7574  
                             ?__parse_settings_i2c_mode 0001  
                                 hexCharsToUint8@retVal 0006  
                       __fill_buffer_read_file@inBuffer 009E  
                    __fill_buffer_read_buffer@outBuffer 002D  
                            fat_read_from_buffer@length 0027  
                        __bootloader_check_address@cntr 000C  
              __parse_settings_i2c_frequency@out_buffer 0003  
                        ??_MSDComputeDeviceInAndResidue 0003  
                              __ic2_display_set_address 9C7E  
               __fill_buffer_get_file_details@outBuffer 003A  
                                        _MSDReadHandler 327E  
                       fat_append_to_file@old_file_size 0092  
                   __parse_settings_spi_mode@out_buffer 0003  
                          __size_of_USBStdSetCfgHandler 00E2  
                     fat_create_file@number_of_clusters 0060  
                 __bootloader_check_address@byte_status 000B  
                           __end_of__make_cluster_chain 1520  
                  __parse_sector_to_buffer@return_value 005C  
                         internalFlash_readPage@address 0018  
                     __make_cluster_chain@first_cluster 0036  
                                       __initialization 82F0  
                         fat_read_from_file@file_number 0078  
                              __parse_write_buffer@data 002B  
                             __end_of__flash_get_status 9A48  
                          fat_get_file_information@data 0030  
                           fat_read_from_file_fast@data 004A  
                    spi_set_configuration@configuration 0001  
                                   _system_minimal_init 9F76  
                 __end_of_ExternalFlash_MediaInitialize 9F14  
                __size_of_ExternalFlash_MediaInitialize 001A  
                         _ExternalFlash_MediaInitialize 9EFA  
                  __offset_from_file_number@file_number 0003  
                        __size_of_system_encoder_enable 0010  
                               __end_of_fat_resize_file 5F28  
                                           _FileAddress 016B  
                                          __end_of_main 3C8A  
                                          __end_of_itoa 96D8  
                         __end_of_system_encoder_enable A014  
                            i2c_eeprom_readByte@address 0012  
                       __end_of_i2c_display_write_fixed 90CE  
                                          __end_of_utoa 7CDA  
                         fat_read_from_file_fast@length 0046  
                                  __end_of__normal_mode 8E0C  
                                      _timer_pseudo_isr 98B2  
                         fat_read_from_file_fast@offset 0064  
                              __parse_command_short@cmd 0024  
                    fat_read_from_file_fast@read_length 0068  
                                      __end_of_i2c_init A06C  
                                    __flash_buffer_read 93C6  
                    __size_of_flash_copy_page_to_buffer 001E  
                         fat_read_from_file_fast@sector 0060  
                              __end_of__i2c_acknowledge A0A8  
                        __end_of__fill_buffer_find_file 7D7C  
                       fat_append_to_file@new_file_size 008E  
                                         ??__i2c_open_1 0001  
                                       _hex_file_offset 00DA  
                                  ??_USBCheckMSDRequest 000C  
                     __fill_buffer_get_status@outBuffer 0015  
                                        __CFG_OSC$HSPLL 000000  
                       ??_bootloader_get_rec_dataLength 0003  
                MSDComputeDeviceInAndResidue@DiExpected 0001  
                                hexCharsToUint16@retVal 000A  
                               _USBCheckMSDRequest$2320 000E  
                                _flash_read_from_buffer 9AA6  
                               _USBCheckMSDRequest$2319 000C  
                               _bootloader_get_rec_data 9FA2  
                             __size_of_USBCtrlEPService 00AC  
                               __display_rebooting@cntr 0001  
                                          __get_fat@idx 0001  
                                          __get_fbr@idx 0001  
                                         _startup_timer 0173  
                                  api_prepare@outBuffer 00B4  
                                                ??_main 00B7  
                                      __end_of__i2c_get A09E  
                                                ??_itoa 0017  
                                    USBStallEndpoint@ep 0006  
                                  __size_of__ui_encoder 0100  
                                                ??_utoa 000E  
                            __bootloader_program@buffer 0076  
                                         __activetblptr 000003  
                                       ?_USBDeviceTasks 0001  
                                 main@bytes_transmitted 00BB  
                              _fat_get_file_information 87F8  
                              __flash_buffer_read@start 0014  
                                    __write_root@offset 002D  
                                          __get_mbr@idx 0001  
            __end_of_ExternalFlash_WriteProtectStateGet A138  
           __size_of_ExternalFlash_WriteProtectStateGet 0004  
                  ??_ExternalFlash_WriteProtectStateGet 0003  
                   ?_ExternalFlash_WriteProtectStateGet 0001  
                    _ExternalFlash_WriteProtectStateGet A134  
                                   __find_nth_cluster@n 003A  
                                   ?__flash_buffer_read 0014  
                                           ?_USBSuspend 0001  
                                    __write_root@sector 002B  
                           ?_spi_get_external_rx_buffer 0001  
                                  __size_of_api_prepare 016E  
                                 ??__bootloader_program 006E  
            __internalFlash_unlockAndActivate@UnlockKey 0001  
                         __get_available_cluster@offset 0032  
                                ?_spi_set_configuration 0001  
               fat_write_sector_from_buffer@file_number 0051  
                         __get_available_cluster@sector 0034  
                  fat_copy_sector_to_buffer@file_number 0053  
                                  _i2c_eeprom_writeByte 971A  
                           ?_spi_get_external_tx_buffer 0001  
                                  ?_system_minimal_init 0001  
                    fat_write_sector_from_buffer@sector 0043  
                                       ?_bootloader_run 0001  
                            __end_of__display_suspended 4A66  
                         __flash_write_to_buffer@buffer 001A  
                                       _system_delay_ms 9D3C  
                                __flash_write_to_buffer 9416  
                       i2c_digipot_reset_off@data_array 000B  
                        __end_of__fill_buffer_read_file 2AAE  
                                  _start_from_byte_next 0184  
                                      ___llmod@dividend 0001  
                      __end_of__fat_offset_from_cluster 9F76  
                                                _EECON1 000FA6  
                                                _EECON2 000FA7  
                                                _DMABCH 000F66  
                                                _DMABCL 000F67  
                                     ??__display_failed 001D  
                            ?_fat_copy_sector_to_buffer 0043  
                                ?_i2c_digipot_reset_off 0001  
                                       ?_ResetSenseData 0001  
                           ??__get_available_root_entry 0036  
                                            __i2c_start A100  
                                SYSTEM_Initialize@state 0005  
                                            __i2c_write 94AE  
                                  _fat_read_from_buffer 9E4E  
                             fat_read_from_file@cluster 0079  
                  __flash_write_page_from_buffer@buffer 0016  
                                                _INTCON 000FF2  
                                                _TABLAT 000FF5  
                             ??__bootloader_verify_file 006E  
                       ??_APP_DeviceCustomHIDInitialize 000D  
                              ?__fill_buffer_get_status 0015  
                                     ??__display_search 0001  
                                      __end_of__get_fat 917A  
                                      __end_of__get_fbr 21DA  
                                      __end_of__get_mbr 6B82  
                                                _OSCCON 000FD3  
                           __flash_partial_read@address 0024  
                                                _TBLPTR 000FF6  
                                        __CFG_WDTPS$512 000000  
                                                _RPINR1 000EE1  
                                                _RPOR21 000ED5  
                                                _RPINR2 000EE2  
                                                _RPOR22 000ED6  
                                                _RPINR3 000EE3  
                                                _RPOR23 000ED7  
                             __size_of_system_full_init 005C  
                                     ??__display_verify 001D  
                                    __size_of_i2c_reset 000E  
                                        __CFG_WPCFG$OFF 000000  
                                __end_of_MSDReadHandler 3458  
                                   _flash_pages_written 016D  
                                     __spi_init@details 0001  
                                      ??__i2c_wait_idle 0001  
                                ?_display_get_character 0001  
                                      ?_display_prepare 0001  
                                  ??__flash_buffer_read 001B  
              __fill_buffer_get_bootloader_details@cntr 000B  
                                 __parse_file_copy@data 0094  
                           __flash_partial_read@command 0020  
                                        __CFG_WPDIS$OFF 000000  
                                 __bootloader_find_file 7B92  
                                      __read_fat@offset 0034  
                                      __end_of_fat_init A034  
                     __bootloader_program@page_to_write 00A7  
                                      __read_fat@sector 0032  
                                     _shortPacketStatus 00F9  
                     fat_append_to_file@number_of_bytes 0056  
                                        __CFG_XINST$OFF 000000  
                                      ?_fat_modify_file 0042  
                                       USBDeviceTasks@i 0020  
                           USBStdFeatureReqHandler@pUEP 0019  
                              USBTransferOnePacket@data 0002  
                            USBCtrlTrfInHandler@lastDTS 0002  
                       __end_of_internalFlash_writePage 762C  
                          __end_of__flash_set_page_size 8696  
                                       _hexCharsToUint8 9EA8  
                                       ??_USBDeviceInit 0009  
                    __flash_copy_page_to_buffer@command 001A  
                              flash_partial_read@length 002C  
                    __parse_buffer_to_sector@out_buffer 0054  
                                                _gblCBW 0100  
                                     _fat_get_file_size 894A  
                                    __size_of__i2c_read 008C  
                             __size_of_hexCharsToUint16 0070  
                                                ___wmul 9CA4  
                                    __size_of__i2c_send 0008  
                                        __CFG_STVREN$ON 000000  
                        __read_value_from_offset@buffer 0003  
                                    __size_of__i2c_stop 0008  
                                             ??___lldiv 0009  
                                             ??___llmod 0009  
             SYSTEM_Initialize@pll_startup_counter_3117 0003  
                         __parse_file_delete@out_buffer 0052  
                                             ??___lwdiv 0005  
                          __size_of_flash_partial_write 0070  
                                            _SoftDetach 00EB  
                                             ??___lwmod 0005  
                                                _buffer 03C0  
     __end_of__parse_settings_i2c_slaveModeSlaveAddress 726C  
    __size_of__parse_settings_i2c_slaveModeSlaveAddress 00C2  
           ??__parse_settings_i2c_slaveModeSlaveAddress 0007  
            ?__parse_settings_i2c_slaveModeSlaveAddress 0001  
             __parse_settings_i2c_slaveModeSlaveAddress 71AA  
                                     _USBEnableEndpoint 9796  
                         __bootloader_program@address32 00A0  
                        __read_value_from_offset@offset 0001  
                       __size_of_USBStdGetStatusHandler 00AA  
                     __size_of__parse_settings_spi_mode 00C2  
                             ?__parse_settings_spi_mode 0001  
                                                _memcpy 8BC2  
                                    ?_fat_get_file_size 0036  
                                                _memset 9B5A  
                      __end_of__sector_from_file_number 9BDE  
                               __parse_sector_to_buffer 40E2  
                                                clear_0 832A  
                                                clear_1 833E  
                                                clear_2 8350  
                                                clear_3 835C  
                                                clear_4 8368  
                                                clear_5 8374  
                             _ExternalFlash_SectorWrite 994E  
                                     api_parse@inBuffer 00A4  
                                       __CFG_CLKOEC$OFF 000000  
                                      __end_of_inq_resp BF6D  
                                                _reboot 9F14  
                  __bootloader_check_address@worst_case 000A  
                                ??_i2c_digipot_reset_on 000B  
                          bootloader_get_rec_data@index 0001  
                     __end_of_flash_copy_page_to_buffer 9EA8  
                                                _ui_run 561E  
                                                _spi_tx 8FCA  
                                    ?_USBEnableEndpoint 0009  
                           internalFlash_erasePage@page 0009  
                               i2c_eeprom_writeByte@dat 0011  
                                    _flash_partial_read 99E4  
                __make_cluster_chain@number_of_clusters 0038  
                                                _tx_buf 01CC  
                         __parse_file_resize@out_buffer 0057  
                                      ?_fat_rename_file 0038  
                            __parse_command_long@length 00A3  
                       ??__parse_settings_spi_frequency 0007  
                             fat_copy_file@return_value 0090  
                              ??_internalFlash_readPage 0018  
                         __size_of_USBTransferOnePacket 0102  
                                   __size_of_USBMSDInit 0102  
                           i2c_display_write_fixed@data 0006  
           i2c_display_send_init_sequence@init_sequence 000B  
                                __size_of__flash_wakeup 0056  
                                                itoa@cp 0017  
                                     _i2c_set_frequency 9B86  
                          __end_of_jump_to_main_program A116  
                                 __end_of_fat_find_file 6828  
                        __parse_command_long@out_buffer 009F  
                                   ??_fat_get_file_size 003A  
                         __size_of__parse_command_short 00C6  
                      __size_of__read_value_from_offset 0046  
                           ?_bootloader_get_rec_address 0001  
                                 ?_i2c_eeprom_writeByte 000B  
                      __size_of_fat_read_from_file_fast 0226  
                                          __mediumconst BC6C  
                                   __end_of__i2c_open_1 9F46  
                            __size_of__find_nth_cluster 009E  
                     __fill_buffer_read_buffer@inBuffer 002B  
                        i2c_digipot_reset_on@data_array 000B  
                                 ??_system_minimal_init 0004  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
               __end_of_internalFlash_addressWithinPage 8DAE  
              __size_of_internalFlash_addressWithinPage 0060  
                     ??_internalFlash_addressWithinPage 000F  
                      ?_internalFlash_addressWithinPage 0009  
                       _internalFlash_addressWithinPage 8D4E  
                                                tblptru 000FF8  
                                      __end_of_spi_init 9796  
                                             ??_ui_init 0001  
                      __size_of_APP_DeviceMSDInitialize 0010  
                                         main@rx_buffer 00BD  
                       ??__flash_compare_page_to_buffer 0017  
                                   ??_USBEnableEndpoint 000A  
                                    ?_i2c_set_frequency 0001  
                                   ?_flash_partial_read 0028  
                           ??__bootloader_check_address 0006  
                                         spi_tx_rx@data 0005  
                     __size_of__fat_sector_from_cluster 0018  
                            __end_of__root_is_available 8D4E  
                               __spi_external_rx_buffer 0300  
                             ?__fat_sector_from_cluster 0001  
                                         spi_tx_tx@data 0005  
                                 __end_of_fat_copy_file 6110  
                                           _CtrlTrfData 000D38  
                                             ??_strncmp 0007  
                                  __size_of__write_root 0044  
                                         main@tx_buffer 00BF  
                           __end_of_fat_write_to_buffer 9E8A  
                                 ?_fat_read_from_buffer 0025  
                                 __end_of_ui_get_status A12E  
                       ExternalFlash_MediaDetect@config 0001  
                                  _controlTransferState 00F8  
                            ??_APP_DeviceCustomHIDTasks 0060  
                                  __CFG_LS48MHZ$SYS48X8 000000  
                               __spi_external_tx_buffer 0340  
                                     _SYSTEM_Initialize 927C  
                                 fat_modify_file@length 0046  
                                 fat_modify_file@offset 0066  
                                   ??_i2c_set_frequency 0001  
                                            __accesstop 0060  
                               __end_of__initialization 837A  
                                 fat_modify_file@sector 0060  
                     MSDCheckForErrorCases@MSDErrorCase 0010  
                                       ?_MSDReadHandler 0001  
                          fat_resize_file@first_cluster 0064  
             __parse_settings_i2c_frequency@out_idx_ptr 0005  
                                    ?_SYSTEM_Initialize 0001  
                                __size_of__display_done 0172  
                                         ___rparam_used 000001  
                                    parseHexFileEntry@i 001C  
                              __size_of_USBStallHandler 0044  
                          __end_of__i2c_not_acknowledge A094  
                       ExternalFlash_SectorWrite@config 0025  
                       ExternalFlash_SectorWrite@buffer 002B  
                      __fill_buffer_read_file@file_size 00A6  
                           __end_of__parse_command_long 1A7A  
                     __end_of_failed_line3_noNextRecord BE16  
                                    __size_of__get_data 0028  
                                    __size_of__get_date 000A  
                  __parse_settings_spi_mode@out_idx_ptr 0005  
                             __end_of_fat_get_file_size 89B8  
                                   __size_of_USBSuspend 0030  
                                    __size_of__get_time 000A  
                                    __size_of__get_root 0196  
             __parse_settings_spi_frequency@out_idx_ptr 0005  
                                  ??_flash_partial_read 0030  
                                        __pcstackCOMRAM 0001  
                            __size_of__flash_get_status 0032  
                             __end_of_USBEnableEndpoint 97D2  
                      __size_of__parse_buffer_to_sector 0160  
                              _bootloader_get_file_size 9FF2  
                   __size_of_ExternalFlash_CapacityRead 0012  
                             fat_read_from_buffer@start 0025  
                                         __end_of_sd000 BFCF  
                                         __end_of_sd001 BF1B  
                                         __end_of_sd002 BF49  
                                         __end_of_sd003 BFA4  
                                             ?_MSDTasks 0001  
                                          __pidataBANK0 A13C  
                                          __pidataBANK1 9D16  
                             ??_bootloader_get_rec_data 0001  
                                      ?_fat_resize_file 004D  
                                   ??_SYSTEM_Initialize 0001  
              __end_of_bootloader_get_flashPagesWritten A0DA  
             __size_of_bootloader_get_flashPagesWritten 000A  
                    ??_bootloader_get_flashPagesWritten 0003  
                     ?_bootloader_get_flashPagesWritten 0001  
                      _bootloader_get_flashPagesWritten A0D0  
                             __get_available_root_entry 9D84  
                                   fat_rename_file@cntr 005E  
                                   fat_rename_file@name 0038  
                  ExternalFlash_SectorWrite@sector_addr 0027  
                        __parse_file_modify@file_number 008F  
                      __size_of_USBCtrlEPAllowDataStage 009E  
                                   fat_rename_file@root 003E  
                                    __size_of__read_fat 0056  
                                       _active_protocol 01AD  
                         __size_of_USBConfigureEndpoint 0094  
                       __end_of__bootloader_verify_file 0F70  
                       ??_bootloader_get_rec_recordType 0001  
                    __size_of_ExternalFlash_MediaDetect 0004  
                           __end_of_USBCtrlTrfInHandler 6D16  
                                   _userInterfaceStatus 00E9  
                                   display_prepare@mode 0023  
                                          _gblSenseData 011F  
                          fat_copy_file@new_file_number 008F  
                                       _MSDErrorHandler 5724  
                        ?_ExternalFlash_MediaInitialize 0001  
                  __sector_from_file_number@file_number 0003  
                            flash_write_to_buffer@start 001F  
                             __end_of_i2c_set_frequency 9BB2  
                         __size_of__display_programming 01CA  
                                     __end_of_i2c_reset A052  
                               __end_of_system_delay_ms 9D60  
                                    __size_of_api_parse 012A  
                               parseHexFileEntry@offset 000E  
                                      _hex_file_entries 0171  
                        __end_of_failed_line3_startCode BCBD  
                                    _flash_sector_write 917A  
                                    _fat_read_from_file 6110  
                    __parse_sector_to_buffer@out_buffer 0056  
                                    __size_of__spi_init 0038  
                            fat_delete_file@file_number 004F  
                               flash_sector_write@match 0024  
                 __end_of_MSDProcessCommandMediaPresent 0C2A  
                __size_of_MSDProcessCommandMediaPresent 03BE  
                         _MSDProcessCommandMediaPresent 086C  
                                          _failed_line1 BD98  
                                          _failed_line2 BCE2  
                                          _failed_line4 BE69  
                                flash_partial_read@data 002E  
                                flash_partial_read@page 0028  
                                         __get_data@idx 0001  
                         __size_of_bootloader_get_error 0006  
                              ??_USBCtrlTrfSetupHandler 001E  
                               _USBTicksSinceSuspendEnd 0189  
                     __flash_copy_page_to_buffer@buffer 0016  
                             __end_of_SYSTEM_Initialize 92D0  
                                     __end_of__i2c_read 840C  
                                     __end_of__i2c_send A110  
                                   hexCharToUint8@ascii 0002  
                                _USBStdGetStatusHandler 78F4  
                                   ?_flash_sector_write 0020  
                                   USBStallEndpoint@dir 0001  
                                     __end_of__i2c_stop A100  
                                           ?__i2c_start 0001  
                                   ?_fat_read_from_file 006E  
                                           ?__i2c_write 0006  
                         __read_value_from_offset@value 0008  
                                            __pbssBANK0 00C1  
                                            __pbssBANK1 0100  
                                            __pbssBANK2 0200  
                                            __pbssBANK3 0300  
                                 _flash_write_to_buffer 9AD4  
                   __parse_sector_to_buffer@file_number 005B  
                      __size_of_i2c_display_write_fixed 0056  
                                      _USBStallEndpoint 5516  
                          __size_of_i2c_eeprom_readByte 0050  
                                            _gblNumBLKS 0153  
                                             ?_i2c_init 0001  
                        __parse_sector_to_buffer@sector 005D  
                      __fill_buffer_read_file@outBuffer 00A0  
                                      _mediaInformation 01A4  
                               __end_of_hexCharsToUint8 9EC4  
                        __size_of_fat_get_format_status 00A4  
                        fat_get_file_information@offset 0035  
                                ?__bootloader_find_file 0001  
                        __get_available_cluster@cluster 0030  
                         __end_of_fat_get_format_status 7B92  
                       ??__fill_buffer_get_file_details 003C  
                                         __flash_wakeup 9226  
                              __fill_buffer_get_display 76E4  
                               ?__get_available_cluster 002C  
                                             ?__i2c_get 0001  
                           __size_of_USBWakeFromSuspend 0038  
                                           _pBDTEntryIn 00D4  
                                 __size_of__normal_mode 005E  
                           __size_of_i2c_display_cursor 0024  
                               ?_bootloader_get_entries 0001  
                      __end_of_USBCtrlEPServiceComplete 5C2E  
                 __end_of_APP_DeviceCustomHIDInitialize 991A  
                __size_of_APP_DeviceCustomHIDInitialize 0034  
                         _APP_DeviceCustomHIDInitialize 98E6  
                           MSDTransferTerminated@handle 000C  
                    __size_of__data_sector_from_cluster 000E  
                        ??__parse_settings_spi_polarity 0007  
                          __size_of__parse_write_buffer 0154  
                             __bootloader_check_address 6906  
                    ExternalFlash_SectorSizeRead@config 0001  
                                  USBCtrlTrfRxService@i 0001  
                             ??__parse_sector_to_buffer 005A  
                                            ??_MSDTasks 004D  
                                               ?___wmul 0001  
                               ??_i2c_digipot_backlight 000B  
                                            _fat_format 2CB2  
                                     ?__display_checked 0001  
                                  ??_flash_sector_write 0024  
                     __size_of__fat_offset_from_cluster 0018  
                        __flash_write_to_buffer@command 001B  
                                  ??_fat_read_from_file 005C  
                          __size_of__flash_partial_read 0078  
                             ?__fat_offset_from_cluster 0001  
                       ??__parse_settings_i2c_frequency 0007  
                              __size_of_fat_delete_file 0048  
                                             MSDTasks@i 0052  
                      ??__fill_buffer_get_configuration 0003  
                       ?__fill_buffer_get_configuration 0001  
                                               ?_memcpy 0001  
                                    _fat_append_to_file 7D7C  
                                               ?_memset 0001  
                    __parse_settings_i2c_frequency@data 0001  
                                            _device_dsc BFA4  
                   fat_get_file_information@file_number 0037  
                                      ??_display_update 0011  
                        __parse_buffer_to_sector@sector 005B  
                                               ?_reboot 0001  
                                         __get_root@idx 0001  
                                    ??__display_checked 001D  
                                           __i2c_open_1 9F2E  
                                      _USBCtrlEPService 7848  
                                               ?_ui_run 0001  
                                            _ep_data_in 0168  
                                               ?_spi_tx 0001  
                                    __display_clear@col 0004  
                               _extended_linear_address 013F  
                                    __display_clear@row 0003  
                              __delete_root@file_number 002E  
                                     ?__parse_file_copy 0094  
                         fat_append_to_file@file_number 0097  
                                             ?__get_fat 0001  
                                             ?__get_fbr 0001  
                                         __display_done 3E02  
                 __data_sector_from_cluster@fat_cluster 0001  
                                             ?__get_mbr 0001  
                           __end_of_USBCtrlTrfRxService 52FA  
                               ?__write_value_to_offset 0001  
                                    _USBCheckStdRequest 61FE  
                                ??_i2c_eeprom_writeByte 000E  
                                     _configDescriptor1 BEA7  
                       __size_of_internalFlash_readPage 0042  
                    __parse_file_append@number_of_bytes 009B  
                               ??_MSDCheckForErrorCases 000F  
                                    ??__parse_file_copy 005D  
                                   ?_fat_append_to_file 0056  
                                fat_append_to_file@data 0058  
                                            _flash_init 9EE0  
                    __fill_buffer_get_display@outBuffer 0005  
                           __end_of_USBCtrlTrfTxService 6AB4  
                                     __end_of__get_data 9C58  
                                     __end_of__get_date A0F8  
                                   _USBStdSetCfgHandler 62E0  
                                    __display_done@cntr 001D  
                                     __end_of__get_time A0EE  
                                   fat_copy_file@sector 0091  
                                     __end_of__get_root 3990  
                                    __size_of_spi_tx_rx 0094  
                                    __size_of_spi_tx_tx 008C  
                                             ?_fat_init 0001  
                                               _RPINR21 000EFC  
                                               _RPINR22 000EFD  
                                               _RPINR23 000EFE  
                 __end_of__parse_settings_spi_frequency 71AA  
                __size_of__parse_settings_spi_frequency 00C2  
                         __parse_settings_spi_frequency 70E8  
                                            _done_line1 BD68  
                                            _done_line2 BE9D  
                                            _done_line3 BD58  
                                            _done_line4 BD48  
                                               _SSP1ADD 000FC8  
                         __parse_settings_spi_mode@data 0001  
                                               _SSP1BUF 000FC9  
                                ??_fat_read_from_buffer 002B  
                       __end_of_bootloader_get_rec_data 9FB8  
                                               _RXADDRH 000F68  
                                               _RXADDRL 000F69  
                                _total_hex_file_entries 016F  
                                               _TXADDRH 000F6A  
                                               _TXADDRL 000F6B  
                                   ?_USBCheckStdRequest 0001  
                            ??__ic2_display_set_address 000B  
                          __size_of_USBStdGetDscHandler 013A  
                                  __flash_set_page_size 861C  
                                               _UIEbits 000F36  
                              __end_of_timer_pseudo_isr 98E6  
                       __parse_file_append@return_value 0099  
                                    __get_first_cluster 92D0  
                                          __normal_mode 8DAE  
                            __end_of_APP_DeviceMSDTasks 9FE0  
                                               _UIRbits 000F62  
                                     __end_of__read_fat 9226  
                       ??_internalFlash_pageFromAddress 0005  
                              _system_minimal_init_undo A014  
           MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                   __bootloader_verify_file@rec_counter 0096  
                               __size_of_hexCharToUint8 002C  
                     __size_of__sector_from_file_number 002C  
                 __end_of__flash_compare_page_to_buffer 870E  
                __size_of__flash_compare_page_to_buffer 0078  
                         __flash_compare_page_to_buffer 8696  
                                            ??_i2c_init 0002  
                                      __CFG_CFGPLLEN$ON 000000  
                              __i2c_write@slave_address 0009  
                                   _bootloader_filename BFB6  
                             ?__sector_from_file_number 0001  
                   __ic2_display_set_address@data_array 000C  
                                            _pageBuffer 0800  
                                          ??_USBMSDInit 000C  
                         flash_copy_page_to_buffer@page 001E  
                            __flash_buffer_read@command 001B  
                         fat_read_from_file@return_code 007D  
                                      _system_full_init 8E0C  
                                     __read_fat@cluster 0030  
               __parse_settings_spi_polarity@out_buffer 0003  
                        __end_of__get_available_cluster 6F64  
                                        ?__flash_wakeup 0001  
                fat_read_from_file_fast@working_cluster 0062  
                        __end_of_bootloader_get_entries A0D0  
                                fat_find_file@extension 002E  
                              ?_internalFlash_getBuffer 0001  
                                     __end_of_api_parse 50BA  
                                   ?__get_first_cluster 0030  
                      i2c_eeprom_readByte@slave_address 0017  
                                            ??__i2c_get 0001  
                                     _MSDProcessCommand 52FA  
                                       hexCharToUint8@c 0001  
                                  ??_fat_append_to_file 005A  
                              fat_find_file@file_number 0032  
                                         __i2c_send@dat 0001  
                             __flash_get_status@command 000F  
                                               __Hparam 0000  
                       ??_USBIncrement1msInternalTimers 0001  
                                    __parse_file_delete 6668  
                                  ?_USBStdSetCfgHandler 0001  
                            __size_of_fat_get_file_size 006E  
             __end_of__get_available_offset_from_buffer 8EC2  
            __size_of__get_available_offset_from_buffer 005A  
                   ??__get_available_offset_from_buffer 0005  
                    ?__get_available_offset_from_buffer 0001  
                     __get_available_offset_from_buffer 8E68  
                                     __end_of__spi_init 9844  
                           __size_of_USBCheckHIDRequest 00E2  
                                    __parse_file_append 424E  
                                               __Lparam 0000  
                                    __parse_file_create 466A  
                                  _jump_to_main_program A110  
                        __parse_file_rename@out_idx_ptr 0064  
                              __size_of_fat_create_file 014E  
                                     __end_of_hid_rpt01 BF8A  
                                    ?_MSDProcessCommand 0001  
                                  __display_failed@cntr 001D  
                               __end_of_MSDErrorHandler 582A  
                            _MSDTransferTerminated$2407 000E  
                            __size_of_USBEnableEndpoint 003C  
                                    __parse_file_modify 1CFE  
                               ?_flash_read_from_buffer 001F  
                                    __parse_file_rename 5C2E  
                            ??_fat_get_file_information 0032  
                                  ??_USBCheckStdRequest 001E  
                                      _hexCharsToUint16 886A  
                                    __parse_file_resize 2AAE  
                                            _last_error 0185  
                                             ?_spi_init 0001  
                         __size_of_USBCtrlTrfOutHandler 0066  
                   ExternalFlash_MediaInitialize@config 0001  
                                      _ToSendDataBuffer 0380  
                     __end_of__data_sector_from_cluster A060  
                              ?_internalFlash_erasePage 0009  
                                  __end_of_found_line3b BE96  
                                               ___lldiv 851E  
                                      ??_USBDeviceTasks 0020  
                                       __size_of___wmul 0026  
                                               ___llmod 8B5C  
                                               ___lwdiv 9324  
                                     ??_USBStallHandler 0001  
                                               ___lwmod 96D8  
                                     _fast_read_cluster 00FB  
                                    __display_rebooting 90CE  
                           __end_of__parse_format_drive 7A48  
                           __size_of_internalFlash_read 0036  
                                   ?__parse_file_delete 0050  
                                     ?__i2c_acknowledge 0001  
                                   ?__parse_file_append 005A  
                                   ?__parse_file_create 0059  
                                   __size_of__i2c_start 0008  
                          __end_of__system_encoder_init 980C  
                                               __pcinit 82F0  
                                       __size_of_memcpy 0066  
                                   __size_of__i2c_write 0048  
                                __display_itoa_u32@cntr 0014  
                                       __size_of_memset 002C  
                              __size_of_MSDWriteHandler 02B8  
                             __end_of_configDescriptor1 BEE7  
                        __end_of__write_value_to_offset 994E  
                                   ??_MSDProcessCommand 0048  
                                               __ramtop 0F00  
                                       __size_of_reboot 001A  
                          ExternalFlash_SectorRead@page 0034  
                                __display_itoa_u16@text 001B  
                                __display_itoa_u32@text 0012  
                            __size_of_i2c_set_frequency 002C  
                                        ?__display_done 0001  
                                               __ptext0 3B10  
                                               __ptext1 561E  
                                       __display_failed 0F70  
                                               __ptext2 A004  
                                               __ptext3 9B02  
                                               __ptext4 9DA8  
                                               __ptext5 9DCA  
                                               __ptext6 9C58  
                                               __ptext7 5A2E  
                                               __ptext8 98B2  
                                   ?__parse_file_modify 0056  
                                               __ptext9 A014  
                                               _inPipes 00CE  
                               ??_spi_set_configuration 0001  
                                   ?__parse_file_rename 0060  
                                       __size_of_ui_run 0106  
                                        fat_format@cntr 0025  
                     __size_of_ExternalFlash_SectorRead 0032  
                                       __size_of_spi_tx 0058  
                           _USBDeferOUTDataStagePackets 00F1  
                                   ?__parse_file_resize 0055  
                                    ??__i2c_acknowledge 0001  
                                             _T0CONbits 000FD5  
                                            ??__get_fat 0003  
                                            ??__get_fbr 0003  
                    __display_itoa_u32@number_of_digits 0015  
                                            ??__get_mbr 0003  
                             ?_ExternalFlash_SectorRead 002C  
                                      ??_bootloader_run 005C  
                                      ?_system_delay_ms 0001  
                           __end_of__system_timer0_init 9E2E  
                                  ??__get_first_cluster 0032  
                               __read_value_from_offset 9586  
                               _fat_read_from_file_fast 266C  
                                          ??_USBSuspend 0018  
                                       __display_search 4A66  
                                    __end_of_USBMSDInit 592C  
                                   ?__display_rebooting 0001  
                                      ??_ResetSenseData 0001  
                               ?__flash_write_to_buffer 0014  
                               _APP_DeviceMSDInitialize A034  
                                               _msd_cbw 000D40  
                                       __display_verify 50BA  
                                               _msd_csw 000D80  
                              __fill_buffer_read_buffer 5F28  
                               ??_i2c_digipot_reset_off 000B  
                                  __i2c_not_acknowledge A08A  
                              __offset_from_file_number 9CF0  
                    __parse_settings_spi_frequency@data 0001  
                                               _ui_init 9FB8  
                                            ??_fat_init 0030  
                        __parse_file_append@file_number 009A  
                       __end_of__parse_sector_to_buffer 424E  
                    __size_of_ExternalFlash_SectorWrite 0032  
                                 ?__flash_set_page_size 0001  
                                 __end_of_flash_is_busy 9FA2  
                                    __end_of_USB_CD_Ptr BEA5  
                              i2c_eeprom_writeByte@data 000D  
                                            _msd_buffer 000600  
                            __size_of_SYSTEM_Initialize 0054  
                       __size_of_USBCtrlTrfSetupHandler 0096  
                                ?_flash_write_to_buffer 001F  
                               __size_of__flash_is_busy 0022  
                          fat_get_file_size@file_number 0042  
                                               _strncmp 74B2  
                                   _flash_partial_write 88DA  
                           ??_fat_copy_sector_to_buffer 0045  
                                  end_of_initialization 837A  
                                  ??__parse_file_delete 0056  
         __fill_buffer_get_bootloader_details@outBuffer 0005  
                               ??_display_get_character 0002  
                                 _MSDTransferTerminated 9022  
                 __flash_compare_page_to_buffer@command 001C  
           __end_of__fill_buffer_get_bootloader_details 30A0  
          __size_of__fill_buffer_get_bootloader_details 01EE  
                 ??__fill_buffer_get_bootloader_details 0007  
                  ?__fill_buffer_get_bootloader_details 0005  
                   __fill_buffer_get_bootloader_details 2EB2  
                        ?_MSDProcessCommandMediaPresent 0001  
                                  ??__parse_file_append 0098  
                                  ??__parse_file_create 005F  
                                    __end_of_USB_SD_Ptr BE81  
                                               memcpy@d 000B  
                                               memcpy@n 0006  
                                               memcpy@s 0008  
                                   _pBDTEntryEP0OutNext 00E4  
                                  ??__parse_file_modify 005C  
                             __end_of_MSDProcessCommand 540C  
                                               itoa@buf 0011  
                                  ??__parse_file_rename 005F  
                                               memset@c 0003  
                                               itoa@val 0013  
                                               memset@n 0005  
                                               memset@p 0007  
                          fat_delete_file@first_cluster 004D  
                                  ??__parse_file_resize 005B  
                                       _USB1msTickCount 015B  
                                      ?_hexCharsToUint8 0003  
                              __flash_partial_read@data 001A  
                                _internalFlash_readPage 9654  
                              ?_USBStdFeatureReqHandler 0001  
                              __flash_partial_read@page 0014  
                                  ??__display_rebooting 0001  
                           i2c_eeprom_writeByte@address 000B  
             __fill_buffer_get_file_details@file_number 003D  
                                 ??_USBStdSetCfgHandler 0018  
                       __parse_command_long@out_idx_ptr 00A1  
                                       ___lldiv@divisor 0005  
                                 ?_jump_to_main_program 0001  
                                       ___lldiv@counter 000D  
                                    __display_suspended 4914  
                        __end_of_flash_read_from_buffer 9AD4  
                               __parse_buffer_to_sector 43B2  
                          ?_bootloader_get_rec_checksum 0001  
                                    __end_of_USBSuspend 9A78  
                               _USBCtrlEPAllowDataStage 7E1E  
                                     __end_of_spi_tx_rx 82F0  
                                     __end_of_spi_tx_tx 8498  
                 __end_of__fill_buffer_get_file_details 87F8  
                __size_of__fill_buffer_get_file_details 0072  
                         __fill_buffer_get_file_details 8786  
                                               postdec1 000FE5  
                                               postdec2 000FDD  
          __make_cluster_chain@different_sector_cluster 0040  
                  __end_of_ExternalFlash_SectorSizeRead A0B2  
                 __size_of_ExternalFlash_SectorSizeRead 000A  
                          _ExternalFlash_SectorSizeRead A0A8  
                                            ??_spi_init 0004  
                                               postinc0 000FEE  
                                               postinc2 000FDE  
                                           ?_fat_format 0001  
                                  ?_flash_partial_write 0020  
                      __size_of__fill_buffer_get_status 00E2  
                                         ??__ui_encoder 0024  
                                               utoa@buf 0008  
               MSDProcessCommandMediaPresent@sectorSize 003F  
                              _USBCtrlEPServiceComplete 5B2E  
                                               utoa@val 000A  
                                             _MSD_State 00F0  
                                   ?__display_suspended 0001  
               __end_of__cluster_from_sector_and_offset 9CF0  
              __size_of__cluster_from_sector_and_offset 0026  
                     ??__cluster_from_sector_and_offset 0005  
                      ?__cluster_from_sector_and_offset 0001  
                       __cluster_from_sector_and_offset 9CCA  
                           __end_of__bootloader_program 086C  
 __parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr 0005  
                         __parse_file_modify@out_buffer 0058  
                                 _system_encoder_enable A004  
                       ??_internalFlash_addressFromPage 0005  
                           __size_of_USBCheckMSDRequest 00C4  
                                         ??_api_prepare 0060  
                            _USBStatusStageEnabledFlag1 00F4  
                            _USBStatusStageEnabledFlag2 00F3  
                        __parse_format_drive@out_buffer 0029  
                              flash_partial_write@match 0028  
                                    USBEnableEndpoint@p 000A  
                          __size_of__make_cluster_chain 02BE  
                                             _PORTAbits 000F80  
                                             _PORTBbits 000F81  
                                             _PORTDbits 000F83  
                              flash_partial_write@start 0022  
                        __end_of__flash_write_to_buffer 9466  
                                      __CFG_DSBOREN$OFF 000000  
                 __end_of__parse_settings_i2c_frequency 74B2  
                __size_of__parse_settings_i2c_frequency 00C2  
                         __parse_settings_i2c_frequency 73F0  
                        internalFlash_writePage@address 0013  
                              ?_internalFlash_writePage 0009  
                         __parse_settings_i2c_mode@data 0001  
                    __size_of__get_available_root_entry 0024  
                                  spi_tx_rx@data_length 0007  
                                 ?__i2c_not_acknowledge 0001  
                                     ??_fat_delete_file 004D  
                         __parse_file_modify@start_byte 0092  
                      __make_cluster_chain@next_cluster 004B  
                                fat_modify_file@cluster 0063  
                                           ?_flash_init 0001  
                                      __CFG_CPUDIV$OSC1 000000  
                       __fill_buffer_find_file@inBuffer 0037  
                                             _TRISAbits 000F92  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                    api_parse@outBuffer 00A7  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                                    _ReceivedDataBuffer 0250  
                                    _BothEP0OutUOWNsSet 018A  
                                         __pbssBIGRAMlh 0800  
                                         __pbssBIGRAMll 03C0  
                                      ??_MSDReadHandler 0036  
 __parse_settings_i2c_masterModeSlaveAddress@out_buffer 0003  
                             __flash_partial_read@start 0016  
                             USBConfigureEndpoint@EPNum 0006  
                               _i2c_display_write_fixed 9078  
                                     __CFG_SOSCSEL$HIGH 000000  
                            ?_USBCtrlEPAllowStatusStage 0001  
                              __parse_settings_i2c_mode 726C  
                                  ??__display_suspended 0001  
                   USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                               __size_of__display_clear 0048  
                                             _USTATcopy 00FD  
                                       ??__flash_wakeup 0009  
         MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                               __size_of__display_found 01DE  
                                         _checked_line1 BDA8  
                                         _checked_line2 BC6D  
                                         _checked_line3 BE71  
                                         _checked_line4 BD06  
                                   __delete_root@offset 002B  
                            ??_bootloader_get_file_size 0005  
                        ?__parse_settings_spi_frequency 0001  
                   __parse_write_buffer@number_of_bytes 0032  
                                   __delete_root@sector 0029  
                              _failed_line3_dataTooLong BE25  
                               __size_of__display_start 01D8  
                                       _suspended_line1 BD38  
                                       _suspended_line2 BE4D  
                                       _suspended_line3 BEA5  
                                       _suspended_line4 BD28  
                          __end_of_USBTransferOnePacket 5A2E  
                                i2c_display_cursor@line 000F  
                      __fat_sector_from_cluster@cluster 0001  
                                      __CFG_IOL1WAY$OFF 000000  
                     internalFlash_writePage@block_cntr 0011  
                          __end_of__parse_command_short 6DDC  
                           __size_of__flash_buffer_read 0050  
                 __end_of_internalFlash_pageFromAddress 9EE0  
                __size_of_internalFlash_pageFromAddress 001C  
                         _internalFlash_pageFromAddress 9EC4  
                                  __end_of_reboot_line1 BE40  
                                  __end_of_search_line1 BDE8  
                                  __end_of_search_line2 BD28  
                                  __end_of_search_line3 BCAA  
                                  __end_of_search_line4 BE60  
                        ?__flash_compare_page_to_buffer 0014  
                         __fill_buffer_get_display@cntr 000D  
                                    __root_is_available 8CEC  
                         __fill_buffer_get_display@line 000E  
                                     __CFG_WPEND$PAGE_0 000000  
                    __flash_compare_page_to_buffer@page 0014  
                                   __CFG_MSSP7B_EN$MSK7 000000  
                    __make_cluster_chain@minimum_sector 003E  
                               __end_of__display_failed 1262  
                                      ?_MSDErrorHandler 0001  
                 fat_resize_file@new_number_of_clusters 0062  
                    __find_nth_cluster@sector_in_buffer 003E  
                          fat_resize_file@new_file_size 004D  
                                      __write_root@data 0029  
                                _USBCtrlTrfSetupHandler 8132  
                                 ??_flash_partial_write 0028  
                          __write_value_to_offset@value 0005  
                         ??_bootloader_get_rec_checksum 0001  
                  __parse_buffer_to_sector@return_value 0059  
                             _fat_copy_sector_to_buffer 762C  
                        __bootloader_program@entry_page 0078  
                    fat_copy_sector_to_buffer@file_size 0049  
                                __display_checked@start 001F  
                      ExternalFlash_CapacityRead@config 0001  
                              __size_of_display_prepare 00DE  
                               __end_of__display_search 4BB8  
                                 __end_of_USBDeviceInit 4D08  
                 __end_of_USBIncrement1msInternalTimers 9E4E  
                __size_of_USBIncrement1msInternalTimers 0020  
                         _USBIncrement1msInternalTimers 9E2E  
                                       ??__display_done 001D  
                       __sector_from_file_number@sector 0004  
                         ?_ExternalFlash_SectorSizeRead 0001  
                                        __end_of___wmul 9CCA  
                               __end_of__display_verify 51E2  
                             ??__read_value_from_offset 0005  
                                   ?__root_is_available 0001  
                                     __size_of_MSDTasks 0254  
                             ??_fat_read_from_file_fast 0050  
                              __end_of_USBStallEndpoint 561E  
                                   _i2c_eeprom_readByte 9376  
                                     ??_fat_create_file 0055  
                   __bootloader_program@start_from_byte 00A4  
                    __fill_buffer_read_file@data_length 00AA  
                           __end_of_system_minimal_init 9F8C  
                              __size_of_fat_modify_file 023E  
                             ??_APP_DeviceMSDInitialize 000F  
                             _failed_line3_addressRange BC82  
                       __parse_write_buffer@out_idx_ptr 002F  
                                        __end_of_memcpy 8C28  
                                       _MSDRetryAttempt 00EC  
                                        __end_of_memset 9B86  
                        __parse_file_modify@out_idx_ptr 005A  
                                        __end_of_reboot 9F2E  
                    __size_of__bootloader_check_address 00DA  
                                      __CFG_DSWDTEN$OFF 000000  
                            ?_flash_copy_page_to_buffer 001E  
                         __size_of_i2c_digipot_reset_on 0022  
                                     _USBBusIsSuspended 018B  
                             flash_partial_write@length 0024  
                                        __end_of_ui_run 5724  
                                        __end_of_spi_tx 9022  
                 __get_available_root_entry@file_number 0036  
                                   fat_modify_file@data 0048  
                         __parse_file_append@out_buffer 005C  
                                   __end_of__ui_encoder 5B2E  
                             __flash_set_page_size@size 0018  
                           flash_write_to_buffer@length 0021  
                                   start_initialization 82F0  
                              fat_copy_file@file_number 0093  
                                   fat_modify_file@root 006E  
                               ?_USBStdGetStatusHandler 0001  
                                         ??__write_root 002B  
                         ExternalFlash_SectorWrite@page 002E  
                         USBCtrlTrfRxService@byteToRead 0002  
                                ??__flash_set_page_size 0014  
                                   __parse_write_buffer 47C0  
                                     ??_MSDWriteHandler 0030  
                                             _i2c_reset A044  
                                   __end_of_api_prepare 40E2  
                     __end_of__get_available_root_entry 9DA8  
                              ?__bootloader_verify_file 0001  
                                  __display_found@start 0018  
                            ??__fill_buffer_get_display 0008  
                            i2c_display_cursor@position 000E  
                                ?_MSDTransferTerminated 000C  
                              __size_of_fat_rename_file 009E  
                                       _USBMSDOutHandle 00E2  
                      __ic2_display_set_address@address 000B  
                          __end_of_USBConfigureEndpoint 825C  
                                          ??__i2c_start 0001  
                               __flash_buffer_read@data 0018  
     internalFlash_addressWithinPage@page_start_address 0013  
                                          ??__i2c_write 0009  
                       __end_of_USBStdFeatureReqHandler 1CFE  
                                   __flash_partial_read 870E  
                                     USBStallEndpoint@p 0007  
                                   __size_of_fat_format 0200  
                               ??__bootloader_find_file 0043  
                                         _MSDHostNoData 00EA  
                                        _hexCharToUint8 9B2E  
                internalFlash_addressWithinPage@address 0009  
                                  ??__root_is_available 0030  
                     __end_of_USBCtrlEPAllowStatusStage 6C4E  
                              _fast_read_cluster_number 01A9  
                                  ?_i2c_eeprom_readByte 0012  
                          __end_of__display_programming 37FA  
                              __end_of_USBCtrlEPService 78F4  
                            __size_of_MSDProcessCommand 0112  
                        ??_fat_write_sector_from_buffer 0045  
                                  __system_encoder_init 97D2  
                                             __i2c_read 8380  
                                             __i2c_send A108  
                             ??__parse_buffer_to_sector 0058  
                                       ___llmod@divisor 0005  
                                             __i2c_stop A0F8  
                                ??_jump_to_main_program 0001  
                                       ___llmod@counter 0009  
                                     __size_of_i2c_init 000C  
                             ??_USBCtrlEPAllowDataStage 0002  
                   __parse_sector_to_buffer@out_idx_ptr 0058  
                          __size_of_fat_write_to_buffer 001E  
                              ??__fill_buffer_find_file 003B  
                                        USBDeviceInit@i 0009  
                          __end_of_bootloader_get_error A134  
                            __flash_partial_read@length 0018  
                                  ?__parse_write_buffer 002B  
                         __end_of_failed_line3_checksum BE07  
                         __root_is_available@first_byte 0035  
                                _pBDTEntryEP0OutCurrent 00E6  
                                __size_of_fat_find_file 00E0  
                              __parse_settings_spi_mode 7026  
                      __end_of_fat_get_file_information 886A  
                                           _DMACON1bits 000F88  
                                           _DMACON2bits 000F86  
                                   __size_of_flash_init 001A  
                               USBTransferOnePacket@dir 0001  
                               USBTransferOnePacket@len 0004  
                                     _programming_line1 BD88  
                                     _programming_line2 BCD0  
                                     _programming_line3 BE81  
                                     _programming_line4 BD78  
                                         _MSDTasks$2372 004E  
                                         _MSDTasks$2373 0050  
                                     __size_of__i2c_get 000A  
                           MSDErrorHandler@OldMSD_State 000A  
                           __size_of_flash_partial_read 0032  
                                 spi_init@configuration 0004  
                         fat_append_to_file@return_code 0096  
                               flash_partial_read@start 002A  
                                              ??___wmul 0005  
                                   _USBStdGetDscHandler 4E56  
                                ?_system_encoder_enable 0001  
                                  ?__flash_partial_read 0014  
                                     __CFG_ADCSEL$BIT10 000000  
                     __size_of_APP_DeviceCustomHIDTasks 00A6  
                            fat_get_file_size@file_size 003E  
                                           __pdataBANK0 00FF  
                                           __pdataBANK1 01AF  
                             ?_APP_DeviceCustomHIDTasks 0001  
                        __size_of_i2c_digipot_backlight 0026  
                                __size_of_fat_copy_file 00F2  
                                              ??_memcpy 0008  
                               __size_of__i2c_wait_idle 0058  
                                              ??_memset 0007  
                          __size_of__parse_command_long 02A2  
                         __end_of_i2c_digipot_backlight 9C7E  
                                          ?__i2c_open_1 0001  
                                              ??_reboot 0024  
                                __size_of_ui_get_status 0006  
                                              ??_ui_run 0024  
                                    __end_of__i2c_start A108  
                                              ??_spi_tx 0005  
                        ?__fill_buffer_get_file_details 0038  
                                    __end_of__i2c_write 94F6  
                              __end_of_system_full_init 8E68  
                             __root_is_available@offset 0032  
                                ??__i2c_not_acknowledge 0001  
                                _USBActiveConfiguration 00FE  
                              ??__fill_buffer_read_file 00A2  
                        __end_of_USBStdGetStatusHandler 799E  
                            ??_system_minimal_init_undo 0001  
                              __size_of_fat_resize_file 00FE  
                              __fat_sector_from_cluster 9F46  
                           api_parse@receivedDataLength 00A6  
                                      api_parse@out_idx 00AE  
                     __end_of__bootloader_check_address 69E0  
                                         ?__delete_root 0001  
                 __end_of_internalFlash_addressFromPage 9AA6  
                __size_of_internalFlash_addressFromPage 002E  
                         _internalFlash_addressFromPage 9A78  
           fat_copy_sector_to_buffer@number_of_clusters 004D  
                                     __size_of__get_fat 0056  
                                     __size_of__get_fbr 0264  
                             ??_i2c_display_write_fixed 0009  
              __parse_settings_spi_frequency@out_buffer 0003  
                                         __pcstackBANK0 0060  
                          __size_of_USBCtrlTrfInHandler 00C8  
                                     __size_of__get_mbr 00CE  
                          ??_ExternalFlash_CapacityRead 0005  
                        __size_of_MSDCheckForErrorCases 00E2  
                                            ?_i2c_reset 0001  
                                  __display_search@cntr 0001  
                  __size_of_bootloader_get_rec_checksum 0006  
                          __end_of_bootloader_extension BFCB  
              __get_available_offset_from_buffer@buffer 0003  
                         __end_of_MSDCheckForErrorCases 6586  
               __bootloader_program@address_within_page 007A  
                               __end_of_suspended_line1 BD48  
                               __end_of_suspended_line2 BE57  
                               __end_of_suspended_line3 BEA6  
                               __end_of_suspended_line4 BD38  
                            fat_create_file@file_number 0064  
                                __end_of_hexCharToUint8 9B5A  
                             __size_of__display_checked 0178  
                                             _gblBLKLen 014F  
              __get_available_offset_from_buffer@offset 0007  
                    __end_of_flash_command_pagesize_512 BFC7  
                            _flash_command_pagesize_512 BFC3  
                    __end_of_flash_command_pagesize_528 BFC3  
                            _flash_command_pagesize_528 BFBF  
                        ?__parse_settings_i2c_frequency 0001  
                                        __flash_is_busy 9DEC  
                                  ?_USBStdGetDscHandler 0001  
                              __end_of_hexCharsToUint16 88DA  
                            i2c_set_frequency@frequency 0001  
                                          _found_line3b BE8F  
                                             __get_data 9C30  
                                             __get_date A0EE  
                                     _flash_sector_read 99B2  
                      __bootloader_program@return_value 009C  
                                     __size_of_fat_init 0010  
                                 ??_i2c_eeprom_readByte 0014  
                   fat_get_file_information@root_sector 0033  
                                     ?_timer_pseudo_isr 0001  
                       __end_of__read_value_from_offset 95CC  
                       __end_of_fat_read_from_file_fast 2892  
                                             __get_time A0E4  
                                             __get_root 37FA  
                                flash_sector_write@data 0022  
                                flash_sector_write@page 0020  
                                   __end_of__write_root 9654  
       __fill_buffer_get_bootloader_details@data_length 000A  
                                 ?__system_encoder_init 0001  
                            __end_of_USBWakeFromSuspend 987C  
                             __size_of__parse_file_copy 00FE  
                                    ?_flash_sector_read 0028  
                            __end_of_i2c_display_cursor 9D84  
                                            ?__i2c_read 0006  
                                    ??_timer_pseudo_isr 0001  
                                            ?__i2c_send 0001  
                                       _USBStallHandler 95CC  
                                          _pBDTEntryOut 0139  
                                            ?__i2c_stop 0001  
                            fat_modify_file@file_number 0062  
                            fat_rename_file@file_number 003C  
                                             __read_fat 91D0  
                              ?_bootloader_get_rec_data 0001  
                             __end_of_programming_line1 BD98  
                             __end_of_programming_line2 BCE2  
                             __end_of_programming_line3 BE88  
                             __end_of_programming_line4 BD88  
                      __end_of_ExternalFlash_SectorRead 99B2  
                                 ??__parse_write_buffer 0031  
                                   flash_is_busy@result 0014  
                  __end_of_bootloader_get_total_entries A0E4  
                 __size_of_bootloader_get_total_entries 000A  
                          _bootloader_get_total_entries A0DA  
                    __get_available_cluster@skip_sector 002E  
                                      ___lwdiv@dividend 0001  
                                 _fat_get_format_status 7AEE  
                     fat_read_from_file_fast@start_byte 0042  
                                     fat_find_file@name 002C  
                        MSDProcessCommandMediaPresent@i 0047  
                                   ??_flash_sector_read 002C  
                                             _api_parse 4F90  
                             fat_create_file@root_entry 0065  
                                      ?__display_failed 0001  
                               __fill_buffer_get_status 6586  
                                    _APP_DeviceMSDTasks 9FCC  
                                         __pmediumconst BC6C  
                                   fat_find_file@offset 0035  
                                 ??__flash_partial_read 001C  
                                             __ptext100 A138  
                                             __ptext101 7A48  
                                             __ptext110 6586  
                                             __ptext102 3F74  
                                             __ptext111 9F8C  
                                             __ptext103 2892  
                                             __ptext200 A0EE  
                                             __ptext120 A11C  
                                             __ptext112 8786  
                                             __ptext104 6110  
                                             __ptext201 9D84  
                                             __ptext121 A122  
                                             __ptext113 76E4  
                                             __ptext105 266C  
                                             __ptext210 991A  
                                             __ptext202 762C  
                                             __ptext130 9D60  
                                             __ptext122 7CDA  
                                             __ptext114 9BDE  
                                             __ptext106 5F28  
                                             __ptext211 6EA0  
                                             __ptext203 9E8A  
                                             __ptext131 9C7E  
                                             __ptext123 4F90  
                                             __ptext115 7EBC  
                                             __ptext107 9E4E  
                                             __ptext220 8696  
                                             __ptext212 8E68  
                                             __ptext204 424E  
                                             __ptext140 9FF2  
                                             __ptext132 6828  
                                             __ptext124 6D16  
                                             __ptext116 2EB2  
                                             __ptext108 9AA6  
                                             __ptext221 87F8  
                                             __ptext213 9CCA  
                                             __ptext205 7D7C  
                                             __ptext141 0F70  
                                             __ptext133 50BA  
                                             __ptext125 9D3C  
                                             __ptext117 A116  
                                             __ptext109 93C6  
                                             __ptext230 85A0  
                                             __ptext222 7FF8  
                                             __ptext214 242E  
                                             __ptext206 5E2A  
                                             __ptext150 A0D0  
                                             __ptext142 A0BC  
                                             __ptext134 4914  
                                             __ptext126 9F14  
                                             __ptext118 A0B2  
                                             __ptext231 894A  
                                             __ptext223 99B2  
                                             __ptext215 88DA  
                                             __ptext207 9610  
                                             __ptext151 9466  
                                             __ptext143 A12E  
                                             __ptext135 3458  
                                             __ptext127 A128  
                                             __ptext119 9FA2  
                                             __ptext240 9A16  
                                             __ptext232 8CEC  
                                             __ptext224 9586  
                                             __ptext216 9416  
                                             __ptext208 1262  
                                             __ptext160 9B86  
                                             __ptext152 3C8A  
                                             __ptext144 A0C6  
                                             __ptext136 4A66  
                                             __ptext128 8A24  
                                             __ptext241 825C  
                                             __ptext233 92D0  
                                             __ptext225 91D0  
                                             __ptext217 840C  
                                             __ptext209 917A  
                                             __ptext161 94AE  
                                             __ptext153 A0DA  
                                             __ptext145 4512  
                                             __ptext137 90CE  
                                             __ptext129 9078  
                                             __ptext242 9BB2  
                                             __ptext234 99E4  
                                             __ptext226 9F46  
                                             __ptext218 8F1A  
                                             __ptext170 6F64  
                                             __ptext162 8EC2  
                                             __ptext154 7798  
                                             __ptext146 9CA4  
                                             __ptext138 3630  
                                             __ptext243 9CF0  
                                             __ptext235 540C  
                                             __ptext227 9F5E  
                                             __ptext219 8F72  
                                             __ptext171 7026  
                                             __ptext163 A0F8  
                                             __ptext155 9696  
                                             __ptext147 8B5C  
                                             __ptext139 30A0  
                                             __ptext244 592C  
                                             __ptext236 870E  
                                             __ptext228 A052  
                                             __ptext180 37FA  
                                             __ptext172 70E8  
                                             __ptext164 A100  
                                             __ptext156 7C36  
                                             __ptext148 851E  
                                             __ptext245 0000  
                                             __ptext237 9DEC  
                                             __ptext229 43B2  
                                             __ptext181 6AB4  
                                             __ptext173 71AA  
                                             __ptext165 A108  
                                             __ptext157 96D8  
                                             __ptext149 3E02  
                                             __ptext238 9226  
                                             __ptext190 94F6  
                                             __ptext182 1F76  
                                             __ptext174 726C  
                                             __ptext166 17D8  
                                             __ptext158 9324  
                                             __ptext239 8FCA  
                                             __ptext191 953E  
                                             __ptext183 9124  
                                             __ptext175 732E  
                                             __ptext167 47C0  
                                             __ptext159 971A  
                                             __ptext192 466A  
                                             __ptext184 9C30  
                                             __ptext176 73F0  
                                             __ptext168 9E6C  
                                             __ptext193 5D2C  
                                             __ptext185 2AAE  
                                             __ptext177 40E2  
                                             __ptext169 9AD4  
                                             __ptext194 601E  
                                             __ptext186 5C2E  
                                             __ptext178 799E  
                                             __ptext195 4D08  
                                             __ptext187 7F5A  
                                             __ptext179 2CB2  
                                             __ptext196 8BC2  
                                             __ptext188 1CFE  
                                             __ptext197 6748  
                                             __ptext189 6668  
                                             __ptext198 74B2  
                                             __ptext199 A0E4  
                        ?_internalFlash_pageFromAddress 0001  
                                   fat_find_file@sector 0033  
                                              ?___lldiv 0001  
                                              ?___llmod 0001  
                           __size_of_flash_sector_write 0056  
                                              ?___lwdiv 0001  
                                             __spi_init 980C  
                            ??__fill_buffer_read_buffer 002F  
                                              ?___lwmod 0001  
                            ??__offset_from_file_number 0003  
                           __size_of_fat_read_from_file 00EE  
                                      ?__display_search 0001  
                                             _hid_rpt01 BF6D  
                                           __ui_encoder 5A2E  
                             __get_first_cluster@offset 0034  
                                             _idle_rate 01AE  
                                      ?__display_verify 0001  
                                     __size_of_spi_init 003C  
                             __get_first_cluster@sector 0032  
                      __size_of_internalFlash_getBuffer 000A  
                                           _api_prepare 3F74  
                               __parse_file_delete@data 0050  
                             fat_modify_file@start_byte 0042  
                       __end_of__parse_buffer_to_sector 4512  
                                       __i2c_write@data 0006  
                                  _file_maximum_address 0147  
                                       __i2c_write@cntr 000A  
                                   fat_create_file@name 004D  
                                   ?_APP_DeviceMSDTasks 0001  
                    __flash_write_to_buffer@data_length 0018  
       __parse_settings_i2c_masterModeSlaveAddress@data 0001  
                                   fat_create_file@size 0051  
                        internalFlash_erasePage@address 000F  
                                     system_delay_ms@ms 0002  
                                  _USBTransferOnePacket 592C  
                            __make_cluster_chain@offset 0049  
                            ?_ExternalFlash_MediaDetect 0001  
                                        ??__delete_root 0029  
                        __size_of_spi_set_configuration 010A  
                            __make_cluster_chain@sector 0045  
                        ??_ExternalFlash_SectorSizeRead 0003  
                                     ??_display_prepare 0021  
                         __end_of_spi_set_configuration 5516  
                               ??_flash_write_to_buffer 0025  
                                  __CFG_RTCOSC$T1OSCREF 000000  
                                  __parse_command_short 6D16  
                          ??_spi_get_external_rx_buffer 0003  
                   __fill_buffer_get_display@secondHalf 0007  
                                fat_read_from_file@data 0076  
                                __end_of__flash_is_busy 9E0E  
                                         _fat_find_file 6748  
                         __size_of_i2c_eeprom_writeByte 0040  
                                              ?_ui_init 0001  
                                fat_read_from_file@root 007E  
                             __display_programming@cntr 001D  
                                     __display_itoa_u32 4512  
                                     __display_itoa_u16 7798  
                      __size_of_internalFlash_erasePage 006C  
                          __end_of_USBCtrlTrfOutHandler 8B5C  
                  __end_of__parse_settings_spi_polarity 7026  
                 __size_of__parse_settings_spi_polarity 00C2  
                          __parse_settings_spi_polarity 6F64  
                                     ??_fat_modify_file 004A  
                             __end_of_flash_sector_read 99E4  
                                 ??_USBStdGetDscHandler 0001  
                        __size_of_i2c_digipot_reset_off 0022  
                   __size_of__flash_copy_page_to_buffer 0058  
                                   __end_of_found_line1 BDD8  
                                   __end_of_found_line2 BCD0  
                                   __end_of_found_line3 BE9D  
                                   __end_of_found_line4 BD06  
                                           _ep_data_out 0165  
                                       ?_hexCharToUint8 0001  
                                      ___lwdiv@quotient 0005  
                 __end_of_bootloader_get_rec_dataLength A0BC  
                __size_of_bootloader_get_rec_dataLength 000A  
                         __end_of_i2c_digipot_reset_off 9DEC  
                         _bootloader_get_rec_dataLength A0B2  
                          ??_spi_get_external_tx_buffer 0003  
                                         _MSDWriteState 00ED  
                          __size_of_USBCtrlTrfRxService 0118  
                                    ?__display_itoa_u16 0019  
                                    ?__display_itoa_u32 000E  
                         USBConfigureEndpoint@direction 0001  
                                              ?_strncmp 0001  
                                        __display_clear 9466  
                             __size_of__i2c_acknowledge 000A  
                                            ?__get_data 0001  
                                            ?__get_date 0001  
                __cluster_from_sector_and_offset@offset 0003  
                         __size_of_fat_read_from_buffer 001E  
                                         _fat_copy_file 601E  
                               ?_internalFlash_readPage 0016  
                      ??_i2c_display_send_init_sequence 000B  
                       ?_i2c_display_send_init_sequence 0001  
                                        __display_found 30A0  
                      __end_of_bootloader_get_file_size A004  
                                           _file_buffer 0290  
                __cluster_from_sector_and_offset@sector 0001  
                                       _config_internal 0162  
                                            ?__get_time 0001  
                                            ?__get_root 0001  
                          __parse_file_copy@file_number 005F  
                                         _ui_get_status A128  
                                       _config_external 015F  
                                        __display_start 3458  
                        __parse_file_append@out_idx_ptr 005E  
                          __size_of_USBCtrlTrfTxService 00D4  
                        __size_of_display_get_character 002A  
                                   __make_cluster_chain 1262  
                       fat_copy_file@number_of_clusters 0089  
                                  ??_APP_DeviceMSDTasks 0053  
                         __end_of_display_get_character 9C08  
                                           _file_number 00FF  
                                        ___wmul@product 0005  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                            __end_of_USBCheckHIDRequest 64A4  
                        __root_is_available@file_number 0034  
                   __parse_buffer_to_sector@file_number 005A  
                  __flash_compare_page_to_buffer@buffer 0016  
                            ??_USBCtrlEPServiceComplete 0002  
                                            ?__read_fat 0030  
                                     ??_fat_rename_file 003C  
                                   ??__display_itoa_u16 001D  
                                   ??__display_itoa_u32 0014  
                               __i2c_read@slave_address 0010  
                              ?__parse_sector_to_buffer 0054  
                                              _PIE2bits 000FA0  
                  internalFlash_pageFromAddress@address 0001  
                         internalFlash_read@data_length 0012  
                           __size_of_fat_append_to_file 00A2  
                         __parse_file_create@out_buffer 005B  
                              __fat_offset_from_cluster 9F5E  
                       __size_of__fill_buffer_find_file 00A2  
                        __parse_file_delete@file_number 0058  
                  __flash_compare_page_to_buffer@status 001A  
                                              _PIR2bits 000FA1  
                             parseHexFileEntry@hexEntry 0012  
                                              _PIR3bits 000FA4  
                __fill_buffer_get_file_details@inBuffer 0038  
                     __bootloader_verify_file@address32 009B  
                            __end_of_internalFlash_read 98B2  
                                            ?_api_parse 00A4  
                                              _UEP0bits 000F26  
                         ?_bootloader_get_total_entries 0001  
                     __size_of__ic2_display_set_address 0026  
                               __parse_file_append@data 005A  
                                              _MSDTasks 21DA  
                            _USBDeferINDataStagePackets 00F2  
                                          ??_fat_format 0025  
                                       _fat_delete_file 94F6  
                                  _active_configuration 0183  
                             ?__ic2_display_set_address 0001  
                                              _SSP1CON1 000FC6  
                               spi_tx_rx@command_length 0003  
                               __parse_file_create@data 0059  
                               flash_partial_write@data 0026  
                           __size_of_USBCheckStdRequest 00E2  
                       ??_MSDProcessCommandMediaPresent 003A  
                               flash_partial_write@page 0020  
                       __parse_file_rename@return_value 0066  
                                              _UCONbits 000F65  
                                            ?__spi_init 0001  
                   __size_of_spi_get_external_rx_buffer 000A  
                                  _USBConfigureEndpoint 81C8  
                            ?__data_sector_from_cluster 0001  
                                     __i2c_write@length 0008  
                                             _spi_tx_rx 825C  
                                             _spi_tx_tx 840C  
                                  __display_verify@cntr 001F  
                                  ?__make_cluster_chain 0036  
                       __make_cluster_chain@next_offset 003C  
                    __flash_write_page_from_buffer@page 0014  
                      __size_of_USBStdFeatureReqHandler 0284  
                                        _USBMSDInHandle 00E0  
                   __size_of_spi_get_external_tx_buffer 000A  
                                 flash_sector_read@data 002A  
                                  __display_programming 3630  
                        __parse_file_resize@file_number 0088  
                                     ___wmul@multiplier 0001  
                                 ?_USBTransferOnePacket 0001  
                                 flash_sector_read@page 0028  
                   internalFlash_addressWithinPage@page 000D  
                            ??__parse_settings_i2c_mode 0007  
                                   system_delay_ms@cntr 0003  
                           __size_of__get_first_cluster 0054  
                             __end_of__display_itoa_u16 7848  
                             __end_of__display_itoa_u32 466A  
                       __size_of__fill_buffer_read_file 021C  
                                 ?__parse_command_short 0001  
                                  __end_of_verify_line1 BDC8  
                                  __end_of_verify_line2 BE4D  
                                  __end_of_verify_line3 BE8F  
                             i2c_display_cursor@address 0010  
                                      __CFG_WPFP$PAGE_1 000000  
                                        ?_fat_find_file 002C  
                              fat_rename_file@extension 003A  
                    __size_of_fat_copy_sector_to_buffer 00B8  
                                          ??_flash_init 0019  
                                          _RemoteWakeup 018C  
                     __end_of_ExternalFlash_MediaDetect A13C  
                          __size_of__parse_format_drive 00AA  
                                          _reboot_line1 BE33  
                                          _search_line1 BDD8  
                                          _search_line2 BD17  
                                          _search_line3 BC96  
                                          _search_line4 BE57  
                     MSDCheckForErrorCases@DeviceNoData 0011  
                              internalFlash_read@buffer 0014  
                                  spi_tx_tx@data_length 0007  
                       fat_read_from_file_fast@position 006A  
                                       ?__flash_is_busy 0001  
                                           ??_i2c_reset 0001  
                      __end_of__fill_buffer_get_display 7798  
                          ??_bootloader_get_rec_address 0003  
                                           __write_root 9610  
                   __fill_buffer_get_display@start_line 000F  
                                __end_of__display_clear 94AE  
                     __size_of_fat_get_file_information 0072  
                                  _bootloader_get_error A12E  
                                 __display_checked@cntr 0020  
                                            spi_tx@data 0001  
                             ?_fat_get_file_information 0030  
                                __end_of__display_found 327E  
                               __end_of_USBStallHandler 9610  
                              __sector_from_file_number 9BB2  
                        __end_of_internalFlash_readPage 9696  
                                        __i2c_read@data 0006  
                       ??__flash_write_page_from_buffer 0017  
                               __size_of_display_update 006A  
                                        __i2c_read@cntr 0011  
                        __parse_file_create@file_number 0085  
                                __end_of__display_start 3630  
                        __parse_write_buffer@out_buffer 002D  
                                           _INTCON2bits 000FF1  
                                        ?_fat_copy_file 0059  
                                           _INTCON3bits 000FF0  
              __parse_settings_spi_polarity@out_idx_ptr 0005  
                                             copy_data0 8304  
                          __size_of__system_timer0_init 0020  
                         ?__parse_settings_spi_polarity 0001  
                                     ??_fat_resize_file 0051  
                              __size_of_system_delay_ms 0024  
                  __fill_buffer_read_buffer@data_length 0033  
                        ?_internalFlash_addressFromPage 0001  
                                        ?_ui_get_status 0001  
                                ??__system_encoder_init 0001  
                           ??_USBCtrlEPAllowStatusStage 0001  
                     __parse_settings_spi_polarity@data 0001  
                             __find_nth_cluster@cluster 0038  
                           __end_of_USBStdSetCfgHandler 63C2  
                           __size_of__parse_file_delete 00E0  
                                    __end_of_fat_format 2EB2  
                           __size_of__parse_file_append 0164  
                           __size_of__parse_file_create 0156  
                                   __display_found@cntr 0019  
                                              _i2c_init A060  
                    __parse_file_modify@number_of_bytes 0090  
                                           ??__i2c_read 0009  
                           __size_of__parse_file_modify 0278  
                      __size_of_internalFlash_writePage 00B8  
                                           ??__i2c_send 0001  
                                          _MSDReadState 00EE  
                           __size_of__parse_file_rename 00FE  
                                           ??__i2c_stop 0001  
                           __size_of__parse_file_resize 0204  
                        __parse_write_buffer@start_byte 0034  
                                    __end_of_device_dsc BFB6  
                                            _EECON1bits 000FA6  
                              MSDErrorHandler@ErrorCase 0009  
                                ?_fat_get_format_status 0001  
                                              __i2c_get A094  
                               ?_USBCtrlTrfSetupHandler 0001  
                      internalFlash_writePage@byte_cntr 0012  
                                       _fat_create_file 4D08  
                           __size_of__display_rebooting 0056  
                             ??__fill_buffer_get_status 0017  
                                            _ANCON0bits 000F48  
                               USBStdGetStatusHandler@p 0002  
                              fat_read_from_file@length 0072  
                                              __Hrparam 0000  
                          __parse_file_create@file_size 0086  
                           __end_of_bootloader_filename BFBF  
                                             memcpy@tmp 000D  
                                              __Lrparam 0000  
                                USBTransferOnePacket@ep 0009  
              __fill_buffer_get_configuration@outBuffer 0001  
                                              _SetupPkt 000D30  
                                    __end_of_flash_init 9EFA  
                                        _TransferLength 00DE  
                                  _bootloader_extension BFC7  
                             fat_write_to_buffer@length 0027  
                            __end_of_USBCheckMSDRequest 6EA0  
                                       api_parse@in_idx 00AD  
                 fat_read_from_file_fast@cluster_number 004E  
                              __size_of_hexCharsToUint8 001C  
                                 ?_USBConfigureEndpoint 0001  
                                 __flash_is_busy@status 0012  
                              _ExternalFlash_SectorRead 9980  
                             display_get_character@line 0004  
                                __size_of_flash_is_busy 0016  
                                    __end_of_done_line1 BD78  
                                    __end_of_done_line2 BEA3  
                                    __end_of_done_line3 BD68  
                                    __end_of_done_line4 BD58  
                                        __i2c_wait_idle 8EC2  
                                       _MSDWriteHandler 1520  
                          fat_create_file@first_cluster 0062  
                                      __size_of___lldiv 0082  
                                      __size_of___llmod 0066  
                   __size_of_bootloader_get_rec_address 000A  
                                 ??__make_cluster_chain 003A  
                                      __size_of___lwdiv 0052  
                                      __size_of___lwmod 0042  
             ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                            ?_spi_tx_rx 0001  
                                            ?_spi_tx_tx 0001  
                                           _MSDCBWValid 0187  
                                 ?__display_programming 0001  
                                     ?_USBStallEndpoint 0001  
                            i2c_display_write_fixed@pos 0009  
                      __end_of_system_minimal_init_undo A024  
                                           _found_line1 BDC8  
                                           _found_line2 BCBD  
                                           _found_line3 BE96  
                                           _found_line4 BCF4  
                                              __get_fat 9124  
                                              __get_fbr 1F76  
                                              __get_mbr 6AB4  
                                  __size_of__i2c_open_1 0018  
                           ??_flash_copy_page_to_buffer 0020  
                                    ??_USBStallEndpoint 0002  
                       __flash_copy_page_to_buffer@page 0014  
                    __end_of_ExternalFlash_CapacityRead 9FF2  
                            _ExternalFlash_CapacityRead 9FE0  
                                   _fat_write_to_buffer 9E6C  
                               ??_MSDTransferTerminated 000E  
                                __fill_buffer_find_file 7CDA  
                               __display_suspended@cntr 0001  
                          __size_of__bootloader_program 03D0  
                                 ?_bootloader_get_error 0001  
                               __size_of_USBDeviceTasks 0180  
                                       ___lwdiv@divisor 0003  
                               __display_itoa_u16@value 0019  
                               __display_itoa_u32@value 000E  
                                              _fat_init A024  
                      __get_first_cluster@first_cluster 0036  
                                       ?__display_clear 0001  
                                       ___lwdiv@counter 0007  
                     __end_of_fat_copy_sector_to_buffer 76E4  
                            __size_of_flash_sector_read 0032  
                                      __display_checked 3C8A  
                 __end_of_bootloader_get_rec_recordType A11C  
                __size_of_bootloader_get_rec_recordType 0006  
                         _bootloader_get_rec_recordType A116  
                              ??__get_available_cluster 0030  
                                              __ptext10 A044  
                                              __ptext11 9F76  
                                              __ptext20 A024  
                                              __ptext12 A060  
                                              __ptext21 7AEE  
                                              __ptext13 9F2E  
                                              __ptext30 0020  
                                              __ptext22 9E0E  
                                              __ptext14 8E0C  
                                              __ptext31 9EA8  
                                              __ptext23 97D2  
                                              __ptext15 9FB8  
                              fat_read_from_buffer@data 0029  
                                              __ptext40 9C08  
                                              __ptext32 886A  
                                              __ptext24 A06C  
                                              __ptext16 9EE0  
                                              __ptext41 8D4E  
                                              __ptext33 9B2E  
                                              __ptext25 A076  
                                              __ptext17 975A  
                                              __ptext50 A09E  
                                              __ptext42 9A78  
                                              __ptext34 7574  
                                              __ptext26 A110  
                                              __ptext18 980C  
                                              __ptext51 3990  
                                              __ptext43 6906  
                                              __ptext35 9654  
                                              __ptext27 8A8E  
                                              __ptext19 861C  
                                              __ptext60 7E1E  
                                              __ptext52 9844  
                                              __ptext44 7B92  
                                              __ptext36 987C  
                                              __ptext28 0C2A  
                                              __ptext61 61FE  
                                              __ptext53 9A48  
                                              __ptext45 8DAE  
                                              __ptext37 9EC4  
                                              __ptext29 049C  
                                              __ptext70 927C  
                                              __ptext62 62E0  
                                              __ptext54 95CC  
                                              __ptext46 9376  
                                              __ptext38 A080  
                                              __ptext71 9022  
                                              __ptext63 9B5A  
                                              __ptext55 9E2E  
                                              __ptext47 8380  
                                              __ptext39 89B8  
                                              __ptext80 6C4E  
                                              __ptext72 A034  
                                              __ptext64 78F4  
                                              __ptext56 4BB8  
                                              __ptext48 A08A  
                                              __ptext81 69E0  
                                              __ptext73 582A  
                                              __ptext65 4E56  
                                              __ptext57 7848  
                                              __ptext49 A094  
                                              __ptext90 327E  
                                              __ptext82 9FCC  
                                              __ptext74 98E6  
                                              __ptext66 1A7A  
                                              __ptext58 8132  
                                              __ptext91 64A4  
                                              __ptext83 21DA  
                                              __ptext75 9796  
                                              __ptext67 8498  
                                              __ptext59 5B2E  
                                              __ptext92 5724  
                                              __ptext84 52FA  
                                              __ptext76 81C8  
                                              __ptext68 6DDC  
                                              __ptext93 5516  
                                              __ptext85 8C28  
                                              __ptext77 8AF6  
                                              __ptext69 63C2  
                                              __ptext94 8C8A  
                                              __ptext86 086C  
                                              __ptext78 51E2  
                                              __ptext95 9980  
                                              __ptext87 1520  
                                              __ptext79 6B82  
                                              __ptext96 8096  
                                              __ptext88 A134  
                                              __ptext97 A0A8  
                                              __ptext89 994E  
                                              __ptext98 9FE0  
                                              __ptext99 9EFA  
                                       ?__display_found 0001  
                                      __size_of_ui_init 0014  
                                          _SSP1CON1bits 000FC6  
                                          _SSP1CON2bits 000FC5  
                              ??_bootloader_get_entries 0003  
                                       ?__display_start 0001  
                          __flash_set_page_size@command 0014  
                                          _SSP2CON1bits 000F72  
                  __end_of_MSDProcessCommandMediaAbsent 8C8A  
                 __size_of_MSDProcessCommandMediaAbsent 0062  
                          _MSDProcessCommandMediaAbsent 8C28  
                                           ??__get_data 0003  
                                           ??__get_date 0003  
                                 __flash_wakeup@command 0009  
                      fat_copy_sector_to_buffer@cluster 0051  
                             flash_write_to_buffer@data 0023  
                                           ??__get_time 0003  
                                           ??__get_root 0003  
                            ??__parse_settings_spi_mode 0007  
                           __size_of__display_suspended 0152  
                               __size_of_bootloader_run 0068  
                                      __size_of_strncmp 00C2  
                                   __parse_command_long 17D8  
                     __end_of_failed_line3_addressRange BC96  
                            ?_ExternalFlash_SectorWrite 0025  
                 fat_write_sector_from_buffer@file_size 004B  
                        ExternalFlash_SectorRead@config 002C  
                        ExternalFlash_SectorRead@buffer 0032  
                                      __parse_file_copy 5D2C  
                            __end_of__flash_buffer_read 9416  
                        __size_of__bootloader_find_file 00A4  
                    __end_of__flash_copy_page_to_buffer 8FCA  
                            __flash_copy_page_to_buffer 8F72  
                               __size_of_ResetSenseData 0062  
                      __end_of_APP_DeviceCustomHIDTasks 7AEE  
                         __end_of__bootloader_find_file 7C36  
                          __end_of_i2c_digipot_reset_on 9DCA  
                        ?_bootloader_get_rec_dataLength 0001  
                                 __end_of__flash_wakeup 927C  
                        __end_of_USBCtrlTrfSetupHandler 81C8  
                                         __size_of_main 017A  
                                     ?_USBCtrlEPService 0001  
                                         __size_of_itoa 0042  
                                              _inq_resp BF49  
                                         __size_of_utoa 00A4  
                               __end_of_fat_delete_file 953E  
                                           ??__read_fat 0032  
                                __fill_buffer_read_file 2892  
                           __end_of_flash_partial_write 894A  
                                            strncmp@len 0005  
                               fat_get_file_size@offset 003C  
                                  ?_fat_write_to_buffer 0025  
                               fat_get_file_size@sector 003A  
                 fat_read_from_file_fast@needed_cluster 0066  
                                    ??_USBCtrlEPService 001E  
                                  __end_of__delete_root 9586  
                      __size_of__bootloader_verify_file 0346  
                               ??_system_encoder_enable 0001  
              __end_of_bootloader_get_rec_checksumCheck A122  
             __size_of_bootloader_get_rec_checksumCheck 0006  
                    ??_bootloader_get_rec_checksumCheck 0001  
                     ?_bootloader_get_rec_checksumCheck 0001  
                      _bootloader_get_rec_checksumCheck A11C  
                        __fill_buffer_read_buffer@start 0031  
                                   _USBCtrlTrfInHandler 6C4E  
                    _MSDProcessCommandMediaPresent$2390 003C  
                              ??__write_value_to_offset 0007  
                        fat_read_from_file_fast@cluster 004C  
                                           ??_api_parse 00A9  
                                __end_of__i2c_wait_idle 8F1A  
                 fat_resize_file@old_number_of_clusters 0060  
                            internalFlash_readPage@page 0016  
                                              _outPipes 0131  
                                            _ODCON3bits 000F40  
                                              _spi_init 975A  
                      __end_of__fill_buffer_read_buffer 601E  
                                  _USBCtrlTrfOutHandler 8AF6  
                      __end_of__offset_from_file_number 9D16  
                            ??__fat_sector_from_cluster 0003  
                             _USBCtrlEPAllowStatusStage 6B82  
                                           ??__spi_init 0004  
                               _internalFlash_getBuffer A080  
                                  ?__parse_command_long 009D  
                                          _SSP1STATbits 000FC7  
                     __size_of_bootloader_get_file_size 0012  
                     i2c_eeprom_writeByte@slave_address 0013  
                      __parse_format_drive@return_value 002E  
                                ??_USBTransferOnePacket 0005  
                             ?_bootloader_get_file_size 0001  
                            i2c_digipot_backlight@level 000B  
                                    hexCharsToUint16@c1 0009  
                                    hexCharsToUint16@c2 0003  
                                    hexCharsToUint16@c3 0004  
                                    hexCharsToUint16@c4 0005  
                __make_cluster_chain@remaining_clusters 0043  
                                   __display_start@cntr 001D  
                                          _SSP2STATbits 000F73  
                                 __end_of__display_done 3F74  
                        ??_bootloader_get_total_entries 0003  
                        ?_APP_DeviceCustomHIDInitialize 0001  
                                       ??_fat_find_file 0030  
                                ??__parse_command_short 0024  
                                     ?_system_full_init 0001  
                 MSDProcessCommandMediaPresent@capacity 0043  
                         display_get_character@position 0001  
                              __size_of_MSDErrorHandler 0106  
                                fat_copy_file@file_size 008B  
                             _USBDeferStatusStagePacket 00F5  
                    __end_of_spi_get_external_rx_buffer A080  
                            _spi_get_external_rx_buffer A076  
                            __size_of__display_itoa_u16 00B0  
                            __size_of__display_itoa_u32 0158  
                       __end_of__fill_buffer_get_status 6668  
                               __parse_file_modify@data 0056  
                     __fill_buffer_get_display@position 0010  
                                           _OSCTUNEbits 000F9B  
                                            _INTCONbits 000FF2  
              __end_of__internalFlash_unlockAndActivate 9C30  
             __size_of__internalFlash_unlockAndActivate 0028  
                    ??__internalFlash_unlockAndActivate 0001  
                     ?__internalFlash_unlockAndActivate 0001  
                      __internalFlash_unlockAndActivate 9C08  
                               _internalFlash_erasePage 89B8  
                              __parse_format_drive@data 0027  
                                    ??_system_full_init 0030  
                             __flash_buffer_read@buffer 001A  
                                  ?_USBCtrlTrfInHandler 0001  
                                              memcpy@d1 0001  
                                              memcpy@s1 0003  
                             __flash_buffer_read@length 0016  
                         USBCtrlTrfTxService@byteToSend 0001  
                    __end_of_spi_get_external_tx_buffer A076  
                            _spi_get_external_tx_buffer A06C  
                                       ??_fat_copy_file 0085  
                       i2c_digipot_backlight@data_array 000C  
                                              itoa@base 0015  
                         __parse_file_rename@out_buffer 0062  
                          __size_of_system_minimal_init 0016  
                                       ??_ui_get_status 0001  
                                              memset@p1 0001  
                                     _parseHexFileEntry 0020  
                      fat_read_from_file@cluster_number 007B  
                  __end_of_MSDComputeDeviceInAndResidue 8132  
                 __size_of_MSDComputeDeviceInAndResidue 009C  
                          _MSDComputeDeviceInAndResidue 8096  
                            fat_modify_file@return_code 0065  
                                      ?_USBStallHandler 0001  
                              USBStdFeatureReqHandler@p 001C  
                               spi_tx_tx@command_length 0003  
                            ?__get_available_root_entry 0001  
                                   __end_of_start_line1 BDF8  
                                   __end_of_start_line2 BE69  
                                   __end_of_start_line3 BEA7  
                                   __end_of_start_line4 BE25  
                         __size_of__flash_set_page_size 007A  
                                         ?__normal_mode 0001  
                            fat_rename_file@return_code 003D  
                                         _flash_is_busy 9F8C  
                                     ?_hexCharsToUint16 0003  
                                      __i2c_acknowledge A09E  
                                bootloader_run@timeslot 005C  
                               __end_of_fat_create_file 4E56  
                                      spi_tx_rx@command 0001  
                              __flash_get_status@status 0010  
                                    ?_parseHexFileEntry 000C  
                              ??_flash_read_from_buffer 0025  
                           __size_of__root_is_available 0062  
                               __parse_file_rename@data 0060  
                                __size_of_USBDeviceInit 0150  
                         ?_MSDProcessCommandMediaAbsent 0001  
               __end_of_USER_USB_CALLBACK_EVENT_HANDLER 851E  
              __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                     ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                      ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                       _USER_USB_CALLBACK_EVENT_HANDLER 8498  
                                    ??_hexCharsToUint16 0006  
                                      ___lwmod@dividend 0001  
                     __end_of_ExternalFlash_SectorWrite 9980  
                                      ___lldiv@dividend 0001  
                  __parse_settings_i2c_mode@out_idx_ptr 0005  
                 __end_of__flash_write_page_from_buffer 8F72  
                __size_of__flash_write_page_from_buffer 0058  
                         __flash_write_page_from_buffer 8F1A  
                   fat_write_sector_from_buffer@cluster 0049  
                             _flash_copy_page_to_buffer 9E8A  
                  SYSTEM_Initialize@pll_startup_counter 0001  
                                 ??_fat_write_to_buffer 002B  
                          fat_read_from_file@start_byte 006E  
                                       _display_content 0200  
                       fat_copy_sector_to_buffer@sector 0043  
        fat_write_sector_from_buffer@number_of_clusters 004F  
                            __end_of_flash_partial_read 9A16  
                                     ??_system_delay_ms 0001  
                               __end_of_MSDWriteHandler 17D8  
                                   ??_parseHexFileEntry 0014  
                                             strncmp@s1 0001  
                                             strncmp@s2 0003  
                               __write_root@file_number 002F  
                                      spi_tx_tx@command 0001  
                   __end_of_bootloader_get_rec_checksum A128  
                           _bootloader_get_rec_checksum A122  
                          __parse_sector_to_buffer@data 0054  
                                fat_copy_file@extension 005B  
                               __size_of_MSDReadHandler 01DA  
                         __size_of_jump_to_main_program 0006  
                         __parse_file_copy@return_value 005E  
                                   fat_resize_file@root 0067  
                          __bootloader_verify_file@root 0076  
                     __size_of__fill_buffer_get_display 00B4  
                              ?__read_value_from_offset 0001  
                              ?_fat_read_from_file_fast 0042  
                             ?__fill_buffer_get_display 0005  
                                ??_USBConfigureEndpoint 0002  
                                       ?__i2c_wait_idle 0001  
                                 ?_USBCtrlTrfOutHandler 0001  
                          __parse_buffer_to_sector@data 0052  
                                       _display_prepare 6828  
                              ??__flash_write_to_buffer 001B  
                              ?_APP_DeviceMSDInitialize 0001  
                                 _failed_line3_checksum BDF8  
                                   _USBCtrlTrfRxService 51E2  
                             __size_of_timer_pseudo_isr 0034  
                                    _USBWakeFromSuspend 9844  
                                 ??__parse_command_long 0060  
  __parse_settings_i2c_slaveModeSlaveAddress@out_buffer 0003  
                                     hexCharsToUint8@c1 0005  
                                     hexCharsToUint8@c2 0003  
                           internalFlash_writePage@cntr 000F  
                           internalFlash_writePage@page 0009  
                                          ?__ui_encoder 0001  
                                    _i2c_display_cursor 9D60  
                                ??__display_programming 001D  
                               _USBStdFeatureReqHandler 1A7A  
                                       _fat_modify_file 242E  
                          __fill_buffer_read_file@start 00AE  
                                           ??_spi_tx_rx 0009  
                                           ??_spi_tx_tx 0009  
                     __bootloader_check_address@address 0001  
                                   _USBCtrlTrfTxService 69E0  
                                          ?_api_prepare 00B2  
                 __flash_write_page_from_buffer@command 001A  
                                              utoa@base 000C  
                      __end_of__parse_settings_i2c_mode 732E  
                  __end_of_fat_write_sector_from_buffer 861C  
                 __size_of_fat_write_sector_from_buffer 007C  
                          _fat_write_sector_from_buffer 85A0  
                                       _gblMediaPresent 017B  
                      __size_of_bootloader_get_rec_data 0016  
                                 _i2c_digipot_backlight 9C58  
                                      ??_hexCharToUint8 0001  
                   ExternalFlash_SectorRead@sector_addr 002E  
                   __parse_settings_i2c_mode@out_buffer 0003  
                                   ?_USBWakeFromSuspend 0001  
                                     ??_hexCharsToUint8 0004  
                      __end_of_failed_line3_dataTooLong BE33  
                                            _PPSCONbits 000EBF  
                                      ___lldiv@quotient 0009  
                                ??_bootloader_get_error 0001  
                                       ___lwmod@divisor 0003  
                           ??_ExternalFlash_MediaDetect 0003  
                                   ?_i2c_display_cursor 000E  
                                 ??_USBCtrlTrfInHandler 0002  
                    __end_of_bootloader_get_rec_address A0C6  
                            _bootloader_get_rec_address A0BC  
                                 _USBAlternateInterface 01AB  
                  __bootloader_check_address@dataLength 0005  
                             __end_of_parseHexFileEntry 049C  
                                       ___lwmod@counter 0005  
                           __end_of_i2c_eeprom_readByte 93C6  
                            __delete_root@deleted_value 002D  
                         __size_of__i2c_not_acknowledge 000A  
                                           _ptrNextData 017F  
                      __make_cluster_chain@data_changed 0042  
                               __parse_file_resize@data 0055  
                             _failed_line3_noNextRecord BE07  
                            ?__bootloader_check_address 0001  
                                       _fat_rename_file 7F5A  
                       __parse_format_drive@out_idx_ptr 002B  
                        __size_of_flash_write_to_buffer 002E  
                       __parse_file_delete@return_value 0057  
                                   USBEnableEndpoint@ep 000C  
                                       _endpoint_number 00F7  
                                        _display_update 8A24  
                         __end_of_flash_write_to_buffer 9B02  
                                        ??__normal_mode 0019  
                   __get_available_cluster@first_sector 002C  
                                        ?_flash_is_busy 0001  
                       __size_of__get_available_cluster 00C4  
                                  ?_USBCtrlTrfRxService 0001  
                                _failed_line3_startCode BCAA  
                              ?__parse_buffer_to_sector 0052  
                       __size_of_bootloader_get_entries 000A  
  __internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                                 _MSDCheckForErrorCases 64A4  
                            ??__fat_offset_from_cluster 0003  
                         ?_MSDComputeDeviceInAndResidue 0001  
                      __end_of__ic2_display_set_address 9CA4  
                              ?_USBCtrlEPAllowDataStage 0001  
                                        _MSBBufferIndex 017D  
                               _internalFlash_writePage 7574  
                           __end_of__parse_write_buffer 4914  
                                  ?_USBCtrlTrfTxService 0001  
                       __offset_from_file_number@offset 0004  
                        ?_bootloader_get_rec_recordType 0001  
                                            _USBMSDInit 582A  
                          _USBStatusStageTimeoutCounter 00F6  
        __parse_settings_i2c_slaveModeSlaveAddress@data 0001  
                       ??_ExternalFlash_MediaInitialize 0003  
                     __size_of_system_minimal_init_undo 0010  
                                      ?_fat_delete_file 0001  
                                  ??_USBWakeFromSuspend 0018  
                             ?_system_minimal_init_undo 0001  
                           __end_of__flash_partial_read 8786  
                            USBTransferOnePacket@handle 000A  
                                  ??_i2c_display_cursor 000F  
                          __parse_file_copy@out_idx_ptr 0098  
                          __end_of_i2c_eeprom_writeByte 975A  
                           __parse_file_copy@out_buffer 0096  
                                          _verify_line1 BDB8  
                                          _verify_line2 BE40  
                                          _verify_line3 BE88  
                                   __parse_format_drive 799E  
                            fat_resize_file@file_number 0066  
                                            _USB_CD_Ptr BEA3  
                                           _power_state 00E8  
                                           _USBInHandle 0177  
                              _APP_DeviceCustomHIDTasks 7A48  
                            __end_of_flash_sector_write 91D0  
